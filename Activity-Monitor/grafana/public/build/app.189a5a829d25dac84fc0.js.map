{"version":3,"sources":["webpack:///./public/app/features/dashboard/utils/panel.ts","webpack:///./public/app/core/components/Select/UserPicker.tsx","webpack:///./public/app/features/datasources/partials/tls_auth_settings.html","webpack:///./public/app/plugins/datasource/grafana/partials/annotations.editor.html","webpack:///./public/app/plugins/panel/text/module.html","webpack:///./public/app/plugins/datasource/influxdb/partials/query.editor.html","webpack:///./public/app/plugins/panel/graph/tab_legend.html","webpack:///./public/app/partials/modal.html","webpack:///./packages/grafana-ui/src/types/datasource.ts","webpack:///./public/app/features/plugins/partials/plugin_page.html","webpack:///./public/app/core/components/help/help.html","webpack:///./public/app/features/alerting/partials/alert_tab.html","webpack:///./public/app/core/utils/url.ts","webpack:///./public/vendor/flot/jquery.flot.gauge.js","webpack:///./public/app/plugins/panel/alertlist/module.html","webpack:///./public/app/partials/valueSelectDropdown.html","webpack:///./public/app/features/admin/ldap/LdapUserMappingInfo.tsx","webpack:///./public/app/features/admin/ldap/LdapUserPermissions.tsx","webpack:///./public/app/features/admin/ldap/LdapUserGroups.tsx","webpack:///./public/app/features/admin/ldap/LdapUserTeams.tsx","webpack:///./public/app/features/admin/ldap/LdapUserInfo.tsx","webpack:///./packages/grafana-data/src/vector/ArrayVector.ts","webpack:///./packages/grafana-data/src/dataframe/processDataFrame.ts","webpack:///./public/vendor/flot/jquery.flot.stack.js","webpack:///./public/app/features/datasources/partials/http_settings.html","webpack:///./public/app/core/utils/emitter.ts","webpack:///./packages/grafana-data/src/types/data.ts","webpack:///./packages/grafana-ui/src/components/Legend/LegendList.tsx","webpack:///./public/app/core/time_series2.ts","webpack:///./public/app/features/admin/partials/admin_home.html","webpack:///./public/app/plugins/datasource/mssql/partials/config.html","webpack:///./public/app/features/admin/partials/edit_org.html","webpack:///./public/app/types/dashboard.ts","webpack:///./public/app/core/utils/outline.ts","webpack:///./public/app/plugins/datasource/cloudwatch/partials/config.html","webpack:///./public/app/plugins/panel/singlestat/mappings.html","webpack:///./public/app/features/explore/slate-plugins/newline.ts","webpack:///./packages/grafana-data/src/utils/Registry.ts","webpack:///./public/app/types/search.ts","webpack:///./public/app/features/alerting/getAlertingValidationMessage.ts","webpack:///./public/app/plugins/datasource/graphite/partials/annotations.editor.html","webpack:///./public/app/features/dashboard/components/DashboardSettings/SettingsCtrl.ts","webpack:///./public/app/features/dashboard/components/DashboardSettings/DashboardSettings.tsx","webpack:///./public/app/features/dashboard/components/DashboardSettings/TimePickerSettings.ts","webpack:///./public/app/features/dashboard/components/DashboardSettings/index.ts","webpack:///./packages/grafana-data/src/transformations/matchers/ids.ts","webpack:///./packages/grafana-data/src/transformations/transformers/ids.ts","webpack:///./packages/grafana-data/src/transformations/matchers/predicates.ts","webpack:///./packages/grafana-data/src/transformations/matchers/nameMatcher.ts","webpack:///./packages/grafana-data/src/transformations/matchers/fieldTypeMatcher.ts","webpack:///./packages/grafana-data/src/transformations/matchers/refIdMatcher.ts","webpack:///./packages/grafana-data/src/transformations/matchers.ts","webpack:///./packages/grafana-data/src/transformations/fieldReducer.ts","webpack:///./packages/grafana-data/src/transformations/transformers/append.ts","webpack:///./packages/grafana-data/src/transformations/transformers/reduce.ts","webpack:///./packages/grafana-data/src/transformations/transformers/noop.ts","webpack:///./packages/grafana-data/src/transformations/transformers/filter.ts","webpack:///./packages/grafana-data/src/transformations/transformers/filterByName.ts","webpack:///./packages/grafana-data/src/transformations/transformers.ts","webpack:///./packages/grafana-data/src/transformations/index.ts","webpack:///./public/app/plugins/datasource/loki/partials/annotations.editor.html","webpack:///./public/app/core/actions/index.ts","webpack:///./public/app/plugins/datasource/opentsdb/partials/config.html","webpack:///./packages/grafana-ui/src/components/TimePicker/time.ts","webpack:///./packages/grafana-ui/src/components/TimePicker/TimePickerCalendar.tsx","webpack:///./packages/grafana-ui/src/components/TimePicker/TimePickerInput.tsx","webpack:///./packages/grafana-ui/src/components/TimePicker/TimePickerPopover.tsx","webpack:///./packages/grafana-ui/src/components/TimePicker/TimePicker.tsx","webpack:///./public/app/features/folders/partials/create_folder.html","webpack:///./public/app/features/manage-dashboards/components/MoveToFolderModal/template.html","webpack:///./public/vendor/flot/jquery.flot.selection.js","webpack:///./public/app/core/components/PermissionList/PermissionListItem.tsx","webpack:///./public/app/core/components/PermissionList/DisabledPermissionListItem.tsx","webpack:///./public/app/core/components/PermissionList/PermissionList.tsx","webpack:///./public/app/features/alerting/state/alertDef.ts","webpack:///./public/app/core/components/PageHeader/PageHeader.tsx","webpack:///./public/app/plugins/datasource/dashboard/runSharedRequest.ts","webpack:///./public/app/plugins/datasource/dashboard/DashboardQueryEditor.tsx","webpack:///./public/app/plugins/datasource/dashboard/index.ts","webpack:///./public/vendor/flot/jquery.flot.time.js","webpack:///./public/app/features/templating/variable.ts","webpack:///./public/app/features/alerting/state/actions.ts","webpack:///./public/app/features/playlist/partials/playlist_search.html","webpack:///./packages/grafana-ui/src/components/Tooltip/Tooltip.tsx","webpack:///./public/app/features/datasources/state/actions.ts","webpack:///./packages/grafana-ui/src/slate-plugins/slate-prism/TOKEN_MARK.ts","webpack:///./packages/grafana-data/src/types/time.ts","webpack:///./public/app/features/folders/state/actions.ts","webpack:///./public/app/features/templating/template_srv.ts","webpack:///./public/app/plugins/datasource/prometheus/partials/config.html","webpack:///./public/app/plugins/panel/graph2/getGraphSeriesModel.ts","webpack:///./public/app/features/templating/partials/editor.html","webpack:///./packages/grafana-data/src/types/valueMapping.ts","webpack:///./public/app/features/admin/partials/styleguide.html","webpack:///./public/app/plugins/datasource/stackdriver/constants.ts","webpack:///./public/app/plugins/panel/pluginlist/editor.html","webpack:///./public/app/partials/signup_invited.html","webpack:///./public/app/plugins/datasource/stackdriver/partials/query.editor.html","webpack:///./public/app/plugins/datasource/mysql/partials/config.html","webpack:///./packages/grafana-data/src/dataframe/DataFrameView.ts","webpack:///./packages/grafana-data/src/dataframe/FieldCache.ts","webpack:///./packages/grafana-data/src/dataframe/CircularDataFrame.ts","webpack:///./packages/grafana-data/src/dataframe/index.ts","webpack:///./public/vendor/flot/jquery.flot.js","webpack:///./packages/grafana-ui/src/utils/namedColorsPalette.ts","webpack:///./packages/grafana-ui/src/components/RefreshPicker/RefreshPicker.tsx","webpack:///./public/app/plugins/panel/singlestat/module.html","webpack:///./public/app/plugins/panel/text/editor.html","webpack:///./public/app/plugins/datasource/mysql/partials/annotations.editor.html","webpack:///./public/app/types/acl.ts","webpack:///./public/app/plugins/datasource/grafana-azure-monitor-datasource/partials/query.editor.html","webpack:///./public/app/core/utils/connectWithReduxStore.tsx","webpack:///./public/app/features/panel/panel_ctrl.ts","webpack:///./public/app/features/admin/ldap/LdapConnectionStatus.tsx","webpack:///./public/app/core/utils/tags.ts","webpack:///./packages/grafana-ui/src/components/Portal/Portal.tsx","webpack:///./public/vendor/flot/jquery.flot.crosshair.js","webpack:///./public/app/core/components/Animations/SlideDown.tsx","webpack:///./public/app/core/redux/reducerFactory.ts","webpack:///./public/app/core/redux/index.ts","webpack:///./public/app/features/alerting/partials/notifications_list.html","webpack:///./packages/grafana-data/src/text/markdown.ts","webpack:///./packages/grafana-data/src/text/text.ts","webpack:///./packages/grafana-data/src/text/index.ts","webpack:///./packages/grafana-ui/src/slate-plugins/slate-prism/options.tsx","webpack:///./packages/grafana-ui/src/slate-plugins/slate-prism/index.ts","webpack:///./packages/grafana-ui/src/slate-plugins/index.ts","webpack:///./public/app/features/dashboard/components/ShareModal/template.html","webpack:///./packages/grafana-ui/src/components/Select/resetSelectStyles.ts","webpack:///./public/app/plugins/datasource/cloudwatch/partials/annotations.editor.html","webpack:///./packages/grafana-ui/src/components/Select/SelectOption.tsx","webpack:///./packages/grafana-ui/src/components/Select/SelectOptionGroup.tsx","webpack:///./packages/grafana-ui/src/components/Select/Select.tsx","webpack:///./public/app/core/components/FilterInput/FilterInput.tsx","webpack:///./public/app/core/components/manage_dashboards/manage_dashboards.html","webpack:///./packages/grafana-ui/src/components/Select/NoOptionsMessage.tsx","webpack:///./packages/grafana-data/src/vector/vectorToArray.ts","webpack:///./public/app/features/teams/partials/create_team.html","webpack:///./public/app/core/utils/file_export.ts","webpack:///./packages/grafana-ui/src/themes/ThemeContext.tsx","webpack:///./public/app/types/index.ts","webpack:///./packages/grafana-ui/src/types/index.ts","webpack:///./public/app/features/panel/panellinks/link_srv.ts","webpack:///./public/app/features/admin/state/apis.ts","webpack:///./public/app/plugins/app/example-app/legacy/config.html","webpack:///./public/app/core/directives/dropdown_typeahead.ts","webpack:///./public/app/core/directives/autofill_event_fix.ts","webpack:///./public/app/core/directives/metric_segment.ts","webpack:///./public/app/core/directives/misc.ts","webpack:///./public/app/core/directives/ng_model_on_blur.ts","webpack:///./public/app/core/directives/tags.ts","webpack:///./public/app/core/directives/value_select_dropdown.ts","webpack:///./public/app/core/directives/rebuild_on_change.ts","webpack:///./public/app/core/directives/give_focus.ts","webpack:///./public/app/core/directives/diff-view.ts","webpack:///./public/app/core/jquery_extended.ts","webpack:///./public/app/core/components/jsontree/jsontree.ts","webpack:///./public/app/core/components/code_editor/code_editor.ts","webpack:///./public/app/core/components/colorpicker/spectrum_picker.ts","webpack:///./public/app/core/services/search_srv.ts","webpack:///./public/app/core/services/ng_react.ts","webpack:///./public/app/core/components/search/search.ts","webpack:///./public/app/core/components/info_popover.ts","webpack:///./public/app/core/directives/array_join.ts","webpack:///./public/app/core/live/live_srv.ts","webpack:///./public/app/core/components/layout_selector/layout_selector.ts","webpack:///./public/app/core/components/switch.ts","webpack:///./public/app/core/components/dashboard_selector.ts","webpack:///./public/app/core/components/query_part/query_part_editor.ts","webpack:///./public/app/core/components/sql_part/sql_part_editor.ts","webpack:///./public/app/core/components/form_dropdown/form_dropdown.ts","webpack:///./public/app/core/controllers/json_editor_ctrl.ts","webpack:///./public/app/core/controllers/invited_ctrl.ts","webpack:///./public/app/core/controllers/signup_ctrl.ts","webpack:///./public/app/core/controllers/reset_password_ctrl.ts","webpack:///./public/app/core/controllers/error_ctrl.ts","webpack:///./public/app/core/controllers/all.ts","webpack:///./public/app/core/services/alert_srv.ts","webpack:///./public/app/core/services/util_srv.ts","webpack:///./public/app/core/services/timer.ts","webpack:///./public/app/core/services/analytics.ts","webpack:///./public/app/core/services/popover_srv.ts","webpack:///./public/app/core/services/segment_srv.ts","webpack:///./public/app/core/services/dynamic_directive_srv.ts","webpack:///./public/app/core/services/bridge_srv.ts","webpack:///./public/app/core/services/all.ts","webpack:///./public/app/core/filters/filters.ts","webpack:///./public/app/core/components/help/help.ts","webpack:///./public/app/core/components/scroll/scroll.ts","webpack:///./public/app/core/components/org_switcher.ts","webpack:///./public/app/core/components/Select/MetricSelect.tsx","webpack:///./public/app/plugins/datasource/stackdriver/components/Metrics.tsx","webpack:///./public/app/plugins/datasource/stackdriver/filter_segments.ts","webpack:///./public/app/plugins/datasource/stackdriver/query_filter_ctrl.ts","webpack:///./public/app/plugins/datasource/stackdriver/components/Filter.tsx","webpack:///./public/app/plugins/datasource/stackdriver/components/Aggregations.tsx","webpack:///./public/app/plugins/datasource/stackdriver/components/Alignments.tsx","webpack:///./public/app/plugins/datasource/stackdriver/components/AlignmentPeriods.tsx","webpack:///./public/app/plugins/datasource/stackdriver/components/AliasBy.tsx","webpack:///./public/app/plugins/datasource/stackdriver/components/Project.tsx","webpack:///./public/app/plugins/datasource/stackdriver/components/Help.tsx","webpack:///./public/app/plugins/datasource/stackdriver/components/QueryEditor.tsx","webpack:///./public/app/plugins/datasource/stackdriver/components/AnnotationQueryEditor.tsx","webpack:///./public/app/plugins/datasource/stackdriver/components/AnnotationsHelp.tsx","webpack:///./public/app/core/components/TagFilter/TagFilter.tsx","webpack:///./public/app/core/components/TagFilter/TagOption.tsx","webpack:///./public/app/core/components/sidemenu/DropDownChild.tsx","webpack:///./public/app/core/components/sidemenu/SideMenuDropDown.tsx","webpack:///./public/app/core/components/sidemenu/TopSectionItem.tsx","webpack:///./public/app/core/components/sidemenu/TopSection.tsx","webpack:///./public/app/core/components/sidemenu/SignIn.tsx","webpack:///./public/app/core/components/sidemenu/BottomNavLinks.tsx","webpack:///./public/app/core/components/sidemenu/BottomSection.tsx","webpack:///./public/app/core/components/sidemenu/SideMenu.tsx","webpack:///./public/app/features/profile/UserProfileEditForm.tsx","webpack:///./public/app/core/components/AppNotifications/AppNotificationItem.tsx","webpack:///./public/app/core/components/AppNotifications/AppNotificationList.tsx","webpack:///./public/app/plugins/datasource/graphite/FunctionEditorControls.tsx","webpack:///./public/app/plugins/datasource/graphite/FunctionEditor.tsx","webpack:///./public/app/core/components/search/SearchField.tsx","webpack:///./public/app/plugins/panel/graph/GraphContextMenu.tsx","webpack:///./public/app/features/profile/UserTeams.tsx","webpack:///./public/app/features/profile/UserOrganizations.tsx","webpack:///./public/app/features/profile/ReactProfileWrapper.tsx","webpack:///./public/app/plugins/datasource/loki/components/AnnotationsQueryEditor.tsx","webpack:///./public/app/core/angular_wrappers.ts","webpack:///./public/app/core/components/search/search_results.ts","webpack:///./public/app/core/components/manage_dashboards/manage_dashboards.ts","webpack:///./public/app/core/core.ts","webpack:///./public/app/features/datasources/state/navModel.ts","webpack:///./public/app/features/explore/slate-plugins/clear.ts","webpack:///./public/app/plugins/datasource/postgres/partials/query.editor.html","webpack:///./public/app/plugins/datasource/postgres/partials/annotations.editor.html","webpack:///./public/app/features/dashboard/panel_editor/state/actions.ts","webpack:///./packages/grafana-data/src/datetime/datemath.ts","webpack:///./packages/grafana-data/src/datetime/rangeutil.ts","webpack:///./packages/grafana-data/src/datetime/timezones.ts","webpack:///./packages/grafana-ui/src/themes/default.ts","webpack:///./packages/grafana-data/src/datetime/index.ts","webpack:///./public/app/features/dashboard/state/actions.ts","webpack:///./packages/grafana-ui/src/themes/dark.ts","webpack:///./packages/grafana-ui/src/themes/light.ts","webpack:///./packages/grafana-ui/src/themes/getTheme.ts","webpack:///./public/app/plugins/datasource/cloudwatch/partials/query.editor.html","webpack:///./public/app/features/dashboard/state/PanelQueryRunner.ts","webpack:///./public/app/features/dashboard/state/PanelModel.ts","webpack:///./packages/grafana-ui/src/utils/ansicolor.ts","webpack:///./packages/grafana-ui/src/components/Legend/LegendTable.tsx","webpack:///./packages/grafana-data/src/types/index.ts","webpack:///./public/app/plugins/datasource/loki/components/LokiQueryFieldForm.tsx","webpack:///./public/app/core/utils/timePicker.ts","webpack:///./public/app/core/components/Login/LoginCtrl.tsx","webpack:///./packages/grafana-ui/src/components/List/List.tsx","webpack:///./public/app/plugins/panel/graph/tab_display.html","webpack:///./public/app/core/utils/factors.ts","webpack:///./public/app/features/panel/metrics_panel_ctrl.ts","webpack:///./public/app/core/components/AlertBox/AlertBox.tsx","webpack:///./public/app/plugins/sdk.ts","webpack:///./public/app/plugins/datasource/elasticsearch/partials/annotations.editor.html","webpack:///./public/app/features/playlist/partials/playlists.html","webpack:///./public/app/features/panel/panellinks/linkSuppliers.ts","webpack:///./packages/grafana-ui/src/themes/index.ts","webpack:///./public/app/plugins/app/example-app/legacy/angular_example_page.html","webpack:///./public/app/plugins/panel/table/module.html","webpack:///./public/app/features/dashboard/services/TimeSrv.ts","webpack:///./public/app/core/services/backend_srv.ts","webpack:///./public/app/plugins/datasource/elasticsearch/partials/bucket_agg.html","webpack:///./public/app/plugins/panel/heatmap/module.html","webpack:///./public/app sync extensions\\/index.ts","webpack:///./public/app/features/dashboard/panel_editor/QueryEditorRow.tsx","webpack:///./packages/grafana-ui/src/components/List/InlineList.tsx","webpack:///./public/app/plugins/datasource/stackdriver/partials/config.html","webpack:///./public/app/features/explore/state/actionTypes.ts","webpack:///./packages/grafana-data/src/index.ts","webpack:///./public/app/plugins/datasource/stackdriver/partials/query.filter.html","webpack:///./public/app/plugins/datasource/mssql/partials/annotations.editor.html","webpack:///./public/app/plugins/datasource/stackdriver/functions.ts","webpack:///./public/app/core/utils/model_utils.ts","webpack:///./public/app/features/dashboard/components/SubMenu/SubMenuCtrl.ts","webpack:///./public/app/features/dashboard/components/SubMenu/SubMenu.tsx","webpack:///./public/app/features/dashboard/components/SubMenu/index.ts","webpack:///./public/app/core/utils/kbn.ts","webpack:///./public/app/plugins/datasource/elasticsearch/partials/metric_agg.html","webpack:///./public/app/features/admin/partials/settings.html","webpack:///./public/app/core/utils/react2angular.ts","webpack:///./public/app/features/org/partials/select_org.html","webpack:///./public/app/features/admin/partials/edit_user.html","webpack:///./public/app/core/logs_model.ts","webpack:///./public/app/core/components/query_part/query_part.ts","webpack:///./public/app/core/components/EmptyListCTA/EmptyListCTA.tsx","webpack:///./public/vendor/angular-other/angular-strap.js","webpack:///./public/app/plugins/datasource/grafana-azure-monitor-datasource/partials/annotations.editor.html","webpack:///./public/app/features/datasources/utils/passwordHandlers.ts","webpack:///./public/app/plugins/panel/dashlist/editor.html","webpack:///./public/app/core/components/PermissionList/PermissionsInfo.tsx","webpack:///./packages/grafana-data/src/types/logs.ts","webpack:///./public/app/plugins/panel/table/editor.html","webpack:///./packages/grafana-data/src/vector/CircularVector.ts","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./public/app/features/annotations/partials/editor.html","webpack:///./packages/grafana-ui/src/utils/valueFormats/dateTimeFormatters.ts","webpack:///./packages/grafana-ui/src/utils/valueFormats/arithmeticFormatters.ts","webpack:///./packages/grafana-ui/src/utils/valueFormats/symbolFormatters.ts","webpack:///./packages/grafana-ui/src/utils/valueFormats/categories.ts","webpack:///./packages/grafana-ui/src/utils/valueFormats/valueFormats.ts","webpack:///./public/app/core/store.ts","webpack:///./public/app/core/partials.ts","webpack:///./public/app/plugins/datasource/loki/partials/config.html","webpack:///./public/app/plugins/datasource/influxdb/partials/annotations.editor.html","webpack:///./public/app/core/profiler.ts","webpack:///./public/app/types/appNotifications.ts","webpack:///./public/app/core/utils/location_util.ts","webpack:///./public/app/plugins/datasource/mssql/partials/query.editor.html","webpack:///./public/app/plugins/panel/pluginlist/module.html","webpack:///./public/app/plugins/datasource/graphite/partials/config.html","webpack:///./public/app/partials/error.html","webpack:///./public/app/partials/edit_json.html","webpack:///./public/app/core/copy/appNotification.ts","webpack:///./public/app/features/profile/partials/profile.html","webpack:///./public/app/core/utils/UserProvider.tsx","webpack:///./public/app/core/components/search/search_results.html","webpack:///./public/app/plugins/datasource/elasticsearch/partials/pipeline_variables.html","webpack:///./public/app/core/utils/text.ts","webpack:///./public/app/plugins/panel/text/module.ts","webpack:///./public/app/plugins/panel/text2/TextPanelEditor.tsx","webpack:///./public/app/plugins/panel/text2/TextPanel.tsx","webpack:///./public/app/plugins/panel/text2/module.tsx","webpack:///./public/app/plugins/panel/text2/types.ts","webpack:///./public/app/plugins/panel/graph2/GraphLegendEditor.tsx","webpack:///./public/app/plugins/panel/graph2/GraphPanelEditor.tsx","webpack:///./public/app/plugins/panel/graph2/GraphPanelController.tsx","webpack:///./public/app/plugins/panel/graph2/GraphPanel.tsx","webpack:///./public/app/plugins/panel/graph2/types.ts","webpack:///./public/app/plugins/panel/graph2/module.tsx","webpack:///./public/app/plugins/panel/graph/jquery.flot.events.ts","webpack:///./public/app/plugins/panel/graph/graph_tooltip.ts","webpack:///./public/app/plugins/panel/graph/threshold_manager.ts","webpack:///./public/app/plugins/panel/graph/time_region_manager.ts","webpack:///./public/app/plugins/panel/graph/histogram.ts","webpack:///./public/app/plugins/panel/graph/align_yaxes.ts","webpack:///./public/app/plugins/panel/graph/Legend/LegendSeriesItem.tsx","webpack:///./public/app/plugins/panel/graph/Legend/Legend.tsx","webpack:///./public/app/plugins/panel/graph/graph.ts","webpack:///./public/app/plugins/panel/graph/series_overrides_ctrl.ts","webpack:///./public/app/plugins/panel/graph/thresholds_form.ts","webpack:///./public/app/plugins/panel/graph/time_regions_form.ts","webpack:///./public/app/plugins/panel/graph/template.ts","webpack:///./public/app/plugins/panel/graph/data_processor.ts","webpack:///./public/app/plugins/panel/graph/axes_editor.ts","webpack:///./public/app/plugins/panel/graph/GraphContextMenuCtrl.ts","webpack:///./public/app/plugins/panel/graph/module.ts","webpack:///./public/app/plugins/panel/dashlist/module.ts","webpack:///./public/app/plugins/panel/pluginlist/module.ts","webpack:///./public/app/plugins/panel/alertlist/module.ts","webpack:///./public/app/plugins/panel/annolist/AnnoListPanel.tsx","webpack:///./public/app/plugins/panel/annolist/types.ts","webpack:///./public/app/plugins/panel/annolist/AnnoListEditor.tsx","webpack:///./public/app/plugins/panel/heatmap/color_scale.ts","webpack:///./public/app/plugins/panel/annolist/module.ts","webpack:///./public/app/plugins/panel/heatmap/color_legend.ts","webpack:///./public/app/plugins/panel/heatmap/axes_editor.ts","webpack:///./public/app/plugins/panel/heatmap/display_editor.ts","webpack:///./public/app/plugins/panel/heatmap/heatmap_data_converter.ts","webpack:///./public/app/plugins/panel/heatmap/heatmap_tooltip.ts","webpack:///./public/app/plugins/panel/heatmap/rendering.ts","webpack:///./public/app/plugins/panel/heatmap/heatmap_ctrl.ts","webpack:///./public/app/plugins/panel/table/transformers.ts","webpack:///./public/app/plugins/panel/heatmap/module.ts","webpack:///./public/app/plugins/panel/table/editor.ts","webpack:///./public/app/plugins/panel/table/column_options.ts","webpack:///./public/app/plugins/panel/table/renderer.ts","webpack:///./public/app/plugins/panel/table/module.ts","webpack:///./public/app/plugins/panel/table2/TablePanelEditor.tsx","webpack:///./public/app/plugins/panel/table2/TablePanel.tsx","webpack:///./public/app/plugins/panel/table2/types.ts","webpack:///./public/app/plugins/panel/table2/module.tsx","webpack:///./public/app/plugins/panel/singlestat/module.ts","webpack:///./public/app/plugins/panel/singlestat2/types.ts","webpack:///./public/app/plugins/panel/singlestat2/SingleStatPanel.tsx","webpack:///./public/app/plugins/panel/singlestat2/ColoringEditor.tsx","webpack:///./public/app/features/plugins/plugin_loader.ts","webpack:///./public/app/plugins/panel/singlestat2/FontSizeEditor.tsx","webpack:///./public/app/plugins/panel/singlestat2/SparklineEditor.tsx","webpack:///./public/app/plugins/panel/singlestat2/SingleStatEditor.tsx","webpack:///./public/app/plugins/panel/singlestat2/module.tsx","webpack:///./public/app/plugins/panel/gettingstarted/GettingStarted.tsx","webpack:///./public/app/plugins/panel/gauge/GaugePanelEditor.tsx","webpack:///./public/app/plugins/panel/gettingstarted/module.ts","webpack:///./public/app/plugins/panel/gauge/GaugePanel.tsx","webpack:///./public/app/plugins/panel/gauge/types.ts","webpack:///./public/app/plugins/panel/gauge/GaugeMigrations.ts","webpack:///./public/app/plugins/panel/gauge/module.tsx","webpack:///./public/app/plugins/panel/piechart/PieChartOptionsBox.tsx","webpack:///./public/app/plugins/panel/piechart/PieChartPanelEditor.tsx","webpack:///./public/app/plugins/panel/piechart/PieChartPanel.tsx","webpack:///./public/app/plugins/panel/piechart/types.ts","webpack:///./public/app/plugins/panel/piechart/module.tsx","webpack:///./public/app/plugins/panel/bargauge/BarGaugePanel.tsx","webpack:///./public/app/plugins/panel/bargauge/types.ts","webpack:///./public/app/plugins/panel/bargauge/BarGaugePanelEditor.tsx","webpack:///./public/app/plugins/panel/bargauge/BarGaugeMigrations.ts","webpack:///./public/app/plugins/panel/bargauge/module.tsx","webpack:///./public/app/plugins/panel/logs/types.ts","webpack:///./public/app/plugins/panel/logs/LogsPanel.tsx","webpack:///./public/app/plugins/panel/logs/LogsPanelEditor.tsx","webpack:///./public/app/plugins/panel/logs/module.tsx","webpack:///./public/app/features/plugins/built_in_plugins.ts","webpack:///./public/app/features/dashboard/dashgrid/PanelPluginError.tsx","webpack:///./public/app/features/alerting/partials/notification_edit.html","webpack:///./public/app/plugins/datasource/influxdb/partials/config.html","webpack:///./public/app/core/services/keybindingSrv.ts","webpack:///./public/app/features/plugins/datasource_srv.ts","webpack:///./public/app/core/components/LayoutSelector/LayoutSelector.tsx","webpack:///./public/app/features/plugins/partials/update_instructions.html","webpack:///./packages/grafana-ui/src/components/Table/TableCellBuilder.tsx","webpack:///./packages/grafana-ui/src/components/Table/Table.tsx","webpack:///./public/app/core/redux/actionCreatorFactory.ts","webpack:///./public/app/core/app_events.ts","webpack:///./public/app/features/panel/partials/general_tab.html","webpack:///./public/app/features/dashboard/components/FolderPicker/template.html","webpack:///./public/app/features/explore/slate-plugins/selection_shortcuts.ts","webpack:///./public/app/features/explore/slate-plugins/indentation.ts","webpack:///./public/app/features/explore/slate-plugins/clipboard.ts","webpack:///./public/app/features/explore/utils/typeahead.ts","webpack:///./public/app/features/explore/Typeahead.tsx","webpack:///./public/app/features/explore/TypeaheadInfo.tsx","webpack:///./public/app/features/explore/slate-plugins/suggestions.tsx","webpack:///./public/app/features/explore/QueryField.tsx","webpack:///./public/app/partials/reset_password.html","webpack:///./packages/grafana-data/src/vector/SortedVector.ts","webpack:///./public/app/features/explore/TypeaheadItem.tsx","webpack:///./public/app/plugins/panel/graph/axes_editor.html","webpack:///./public/app/core/config.ts","webpack:///./public/app/core/components/Footer/Footer.tsx","webpack:///./public/app/core/components/PageLoader/PageLoader.tsx","webpack:///./public/app/core/components/Page/PageContents.tsx","webpack:///./public/app/core/components/Page/Page.tsx","webpack:///./packages/grafana-ui/src/components/Select/IndicatorsContainer.tsx","webpack:///./public/app/features/manage-dashboards/partials/snapshot_list.html","webpack:///./packages/grafana-ui/src/components/DeleteButton/DeleteButton.tsx","webpack:///./packages/grafana-ui/src/components/FormField/FormField.tsx","webpack:///./packages/grafana-ui/src/components/Button/AbstractButton.tsx","webpack:///./packages/grafana-ui/src/components/Button/Button.tsx","webpack:///./packages/grafana-ui/src/components/FormLabel/FormLabel.tsx","webpack:///./packages/grafana-ui/src/components/SecretFormFied/SecretFormField.tsx","webpack:///./packages/grafana-ui/src/components/LoadingPlaceholder/LoadingPlaceholder.tsx","webpack:///./packages/grafana-ui/src/components/ColorPicker/NamedColorsGroup.tsx","webpack:///./packages/grafana-ui/src/components/ColorPicker/NamedColorsPalette.tsx","webpack:///./packages/grafana-ui/src/components/ColorPicker/ColorInput.tsx","webpack:///./packages/grafana-ui/src/components/ColorPicker/SpectrumPalettePointer.tsx","webpack:///./packages/grafana-ui/src/components/ColorPicker/SpectrumPalette.tsx","webpack:///./packages/grafana-ui/src/components/ColorPicker/warnAboutColorPickerPropsDeprecation.ts","webpack:///./packages/grafana-ui/src/components/ColorPicker/ColorPickerPopover.tsx","webpack:///./packages/grafana-ui/src/components/Switch/Switch.tsx","webpack:///./packages/grafana-ui/src/components/ColorPicker/SeriesColorPickerPopover.tsx","webpack:///./packages/grafana-ui/src/components/ColorPicker/ColorPickerTrigger.tsx","webpack:///./packages/grafana-ui/src/components/ColorPicker/ColorPicker.tsx","webpack:///./packages/grafana-ui/src/components/PanelOptionsGroup/PanelOptionsGroup.tsx","webpack:///./packages/grafana-ui/src/components/PanelOptionsGrid/PanelOptionsGrid.tsx","webpack:///./packages/grafana-ui/src/components/ValueMappingsEditor/MappingRow.tsx","webpack:///./packages/grafana-ui/src/components/ValueMappingsEditor/ValueMappingsEditor.tsx","webpack:///./packages/grafana-ui/src/components/EmptySearchResult/EmptySearchResult.tsx","webpack:///./packages/grafana-ui/src/components/PieChart/PieChart.tsx","webpack:///./packages/grafana-ui/src/components/UnitPicker/UnitPicker.tsx","webpack:///./packages/grafana-ui/src/components/StatsPicker/StatsPicker.tsx","webpack:///./packages/grafana-ui/src/components/TimePicker/TimeOfDayPicker.tsx","webpack:///./packages/grafana-ui/src/components/SetInterval/SetInterval.tsx","webpack:///./packages/grafana-ui/src/components/Gauge/Gauge.tsx","webpack:///./packages/grafana-ui/src/components/Table/TableInputCSV.tsx","webpack:///./packages/grafana-ui/src/components/BigValue/BigValue.tsx","webpack:///./packages/grafana-ui/src/components/Graph/Graph.tsx","webpack:///./packages/grafana-ui/src/components/Legend/LegendStatsList.tsx","webpack:///./packages/grafana-ui/src/components/Legend/SeriesIcon.tsx","webpack:///./packages/grafana-ui/src/components/Legend/LegendSeriesIcon.tsx","webpack:///./packages/grafana-ui/src/components/Graph/GraphLegendItem.tsx","webpack:///./packages/grafana-ui/src/components/Graph/GraphLegend.tsx","webpack:///./packages/grafana-ui/src/components/Graph/GraphWithLegend.tsx","webpack:///./packages/grafana-ui/src/components/BarGauge/BarGauge.tsx","webpack:///./packages/grafana-ui/src/components/VizRepeater/VizRepeater.tsx","webpack:///./packages/grafana-ui/src/components/Logs/LogLabelStats.tsx","webpack:///./packages/grafana-ui/src/components/Alert/Alert.tsx","webpack:///./packages/grafana-ui/src/components/Graph/GraphSeriesToggler.tsx","webpack:///./packages/grafana-ui/src/components/Collapse/Collapse.tsx","webpack:///./packages/grafana-ui/src/components/Logs/LogLabelStatsRow.tsx","webpack:///./packages/grafana-ui/src/components/Logs/LogLabel.tsx","webpack:///./packages/grafana-ui/src/components/Logs/LogLabels.tsx","webpack:///./packages/grafana-ui/src/components/Logs/LogRowContextProvider.tsx","webpack:///./packages/grafana-ui/src/components/Logs/getLogRowStyles.ts","webpack:///./packages/grafana-ui/src/components/Logs/LogRowContext.tsx","webpack:///./packages/grafana-ui/src/components/Logs/LogMessageAnsi.tsx","webpack:///./packages/grafana-ui/src/components/Logs/LogRow.tsx","webpack:///./packages/grafana-ui/src/components/Logs/LogRows.tsx","webpack:///./packages/grafana-ui/src/components/ToggleButtonGroup/ToggleButtonGroup.tsx","webpack:///./packages/grafana-ui/src/components/ThresholdsEditor/ThresholdsEditor.tsx","webpack:///./packages/grafana-ui/src/components/SingleStatShared/FieldDisplayEditor.tsx","webpack:///./packages/grafana-ui/src/components/SingleStatShared/FieldPropertiesEditor.tsx","webpack:///./packages/grafana-ui/src/components/SingleStatShared/SingleStatBaseOptions.ts","webpack:///./packages/grafana-ui/src/components/CallToActionCard/CallToActionCard.tsx","webpack:///./packages/grafana-ui/src/components/ContextMenu/ContextMenu.tsx","webpack:///./packages/grafana-ui/src/components/DataLinks/DataLinkSuggestions.tsx","webpack:///./packages/grafana-ui/src/components/DataLinks/SelectionReference.ts","webpack:///./packages/grafana-ui/src/components/DataLinks/DataLinkInput.tsx","webpack:///./packages/grafana-ui/src/components/DataLinks/DataLinksEditor.tsx","webpack:///./packages/grafana-ui/src/components/DataLinks/DataLinkEditor.tsx","webpack:///./packages/grafana-ui/src/components/DataLinks/DataLinksContextMenu.tsx","webpack:///./packages/grafana-ui/src/components/ContextMenu/WithContextMenu.tsx","webpack:///./packages/grafana-ui/src/components/TransformersUI/ReduceTransformerEditor.tsx","webpack:///./packages/grafana-ui/src/components/TransformersUI/FilterByNameTransformerEditor.tsx","webpack:///./packages/grafana-ui/src/components/JSONFormatter/json_explorer/helpers.ts","webpack:///./packages/grafana-ui/src/components/TransformersUI/transformers.ts","webpack:///./packages/grafana-ui/src/components/JSONFormatter/json_explorer/json_explorer.ts","webpack:///./packages/grafana-ui/src/components/TransformersUI/TransformationsEditor.tsx","webpack:///./packages/grafana-ui/src/components/index.ts","webpack:///./packages/grafana-ui/src/components/JSONFormatter/JSONFormatter.tsx","webpack:///./packages/grafana-ui/src/components/TransformersUI/TransformationRow.tsx","webpack:///./packages/grafana-ui/src/components/ErrorBoundary/ErrorBoundary.tsx","webpack:///./packages/grafana-ui/src/components/AlphaNotice/AlphaNotice.tsx","webpack:///./packages/grafana-ui/src/utils/colors.ts","webpack:///./packages/grafana-ui/src/utils/validate.ts","webpack:///./packages/grafana-ui/src/utils/dom.ts","webpack:///./packages/grafana-ui/src/utils/index.ts","webpack:///./packages/grafana-ui/src/utils/fieldDisplay.ts","webpack:///./packages/grafana-ui/src/components/Select/ButtonSelect.tsx","webpack:///./public/app/core/utils/query.ts","webpack:///./public/app/plugins/datasource/elasticsearch/partials/query.editor.html","webpack:///./packages/grafana-ui/src/components/ClickOutsideWrapper/ClickOutsideWrapper.tsx","webpack:///./public/app/plugins/panel/graph/tab_drilldown_links.html","webpack:///./public/app/features/dashboard/components/SubMenu/template.html","webpack:///./public/app/plugins/datasource/stackdriver/partials/annotations.editor.html","webpack:///./public/app/plugins/datasource/grafana/partials/query.editor.html","webpack:///./packages/grafana-ui/src/components/Input/Input.tsx","webpack:///./public/app/plugins/datasource/postgres/partials/config.html","webpack:///./public/app/features/explore/slate-plugins/braces.ts","webpack:///./packages/grafana-ui/src/themes/selectThemeVariant.ts","webpack:///./public/app/features/alerting/state/ThresholdMapper.ts","webpack:///./public/app/features/alerting/AlertTabCtrl.ts","webpack:///./public/vendor/tagsinput/bootstrap-tagsinput.js","webpack:///./public/app/plugins/panel/dashlist/module.html","webpack:///./public/app/plugins/datasource/graphite/partials/query.editor.html","webpack:///./public/app/features/admin/partials/orgs.html","webpack:///./public/app/core/constants.ts","webpack:///./public/app/features/panel/query_ctrl.ts","webpack:///./public/app/core/actions/navModel.ts","webpack:///./public/app/plugins/datasource/mysql/partials/query.editor.html","webpack:///./public/app/features/teams/state/actions.ts","webpack:///./public/app/core/services/impression_srv.ts","webpack:///./public/app/plugins/panel/singlestat/editor.html","webpack:///./public/app/plugins/datasource/cloudwatch/partials/query.parameter.html","webpack:///./public/app/features/dashboard/components/DashNav/DashNavButton.tsx","webpack:///./public/app/features/dashboard/components/DashNav/DashNavTimeControls.tsx","webpack:///./public/app/features/dashboard/components/DashNav/DashNav.tsx","webpack:///./public/app/features/dashboard/components/DashNav/index.ts","webpack:///./public/app/plugins/panel/graph/tab_thresholds_time_regions.html","webpack:///./public/app/features/admin/ldap/LdapSyncInfo.tsx","webpack:///./public/app/features/org/partials/newOrg.html","webpack:///./public/app/partials/confirm_modal.html","webpack:///./public/app/store/store.ts","webpack:///./public/app/features/admin/partials/stats.html","webpack:///./public/app/core/table_model.ts","webpack:///./packages/grafana-data/src/utils/fieldParser.ts","webpack:///./packages/grafana-data/src/dataframe/MutableDataFrame.ts","webpack:///./public/app/features/dashboard/components/RowOptions/template.html","webpack:///./packages/grafana-ui/src/utils/flotPairs.ts","webpack:///./public/app/features/plugins/state/actions.ts","webpack:///./public/app/plugins/datasource/prometheus/partials/annotations.editor.html","webpack:///./public/app/features/dashboard/components/DashboardSettings/template.html","webpack:///./packages/grafana-ui/src/index.ts","webpack:///./public/app/features/dashboard/state/runRequest.ts","webpack:///./public/vendor/bootstrap/bootstrap.js","webpack:///./public/vendor/flot/jquery.flot.fillbelow.js","webpack:///./public/app/features/playlist/partials/playlist.html","webpack:///./public/app/core/nav_model_srv.ts","webpack:///./packages/grafana-data/src/utils/deprecationWarning.ts","webpack:///./packages/grafana-ui/src/components/List/AbstractList.tsx","webpack:///./public/app/features/admin/partials/users.html","webpack:///./public/app/core/selectors/navModel.ts","webpack:///./public/app/features/api-keys/state/actions.ts","webpack:///./public/app/core/utils/explore.ts","webpack:///./public/app/core/components/SharedPreferences/SharedPreferences.tsx","webpack:///./public/app/features/explore/slate-plugins/runner.ts","webpack:///./public/app/features/users/state/actions.ts","webpack:///./public/app/core/actions/location.ts","webpack:///./packages/grafana-ui/src/utils/dataLinks.ts","webpack:///./public/app/core/utils/ticks.ts","webpack:///./public/app/features/panel/partials/query_editor_row.html","webpack:///./packages/grafana-data/src/text/string.ts","webpack:///./public/app/core/actions/appNotification.ts","webpack:///./public/app/features/panel/partials/panelTime.html","webpack:///./public/app/features/plugins/PluginSettingsCache.ts","webpack:///./public/app/features/dashboard/services/DashboardSrv.ts","webpack:///./public/app/plugins/datasource/testdata/partials/query.editor.html","webpack:///./public/app/plugins/panel/graph/time_regions_form.html","webpack:///./packages/grafana-data/src/vector/AppendedVectors.ts","webpack:///./packages/grafana-data/src/vector/ConstantVector.ts","webpack:///./packages/grafana-data/src/vector/index.ts","webpack:///./packages/grafana-data/src/vector/ScaledVector.ts","webpack:///./packages/grafana-ui/src/types/panel.ts","webpack:///./public/app/partials/signup_step2.html","webpack:///./packages/grafana-ui/src/types/plugin.ts","webpack:///./packages/grafana-ui/src/themes/stylesFactory.ts","webpack:///./public/app/features/dashboard/components/ExportDataModal/template.html","webpack:///./public/app/core/components/TagFilter/TagBadge.tsx","webpack:///./packages/grafana-ui/src/components/Tooltip/PopoverController.tsx","webpack:///./packages/grafana-ui/src/types/app.ts","webpack:///./public/app/features/admin/partials/new_user.html","webpack:///./public/app/core/utils/sort_by_keys.ts","webpack:///./public/app/features/dashboard/state/DashboardMigrator.ts","webpack:///./public/app/features/dashboard/state/DashboardModel.ts","webpack:///./public/app/plugins/datasource/opentsdb/partials/annotations.editor.html","webpack:///./public/app/features/admin/state/actions.ts","webpack:///./packages/grafana-data/src/utils/csv.ts","webpack:///./packages/grafana-data/src/utils/logs.ts","webpack:///./packages/grafana-data/src/utils/labels.ts","webpack:///./packages/grafana-data/src/utils/object.ts","webpack:///./packages/grafana-data/src/utils/thresholds.ts","webpack:///./packages/grafana-data/src/utils/valueMappings.ts","webpack:///./packages/grafana-data/src/utils/index.ts","webpack:///./public/app/core/utils/ConfigProvider.tsx","webpack:///./packages/grafana-runtime/src/services/backendSrv.ts","webpack:///./packages/grafana-runtime/src/services/AngularLoader.ts","webpack:///./packages/grafana-runtime/src/services/LocationSrv.ts","webpack:///./packages/grafana-runtime/src/services/index.ts","webpack:///./packages/grafana-runtime/src/config.ts","webpack:///./packages/grafana-runtime/src/utils/plugin.ts","webpack:///./packages/grafana-runtime/src/index.ts","webpack:///./packages/grafana-data/src/datetime/moment_wrapper.ts","webpack:///./packages/grafana-ui/src/utils/displayProcessor.ts","webpack:///./public/app/features/dashboard/components/DashExportModal/template.html","webpack:///./public/app/core/core_module.ts","webpack:///./public/app/features/manage-dashboards/partials/dashboard_import.html","webpack:///./public/app/core/services/context_srv.ts","webpack:///./packages/grafana-ui/src/components/Tooltip/Popover.tsx","webpack:///./public/app/core/hooks/useRefMounted.ts","webpack:///./public/app/plugins/datasource/loki/components/useLokiLabels.ts","webpack:///./public/app/plugins/datasource/loki/components/useLokiSyntax.ts","webpack:///./public/app/features/folders/state/navModel.ts","webpack:///./public/app/core/utils/errors.ts","webpack:///./public/app/plugins/panel/table/column_options.html","webpack:///./public/app sync \\.html$","webpack:///./public/app/plugins/panel/heatmap/partials/axes_editor.html","webpack:///./public/vendor/flot/jquery.flot.dashes.js","webpack:///./packages/grafana-ui/src/components/CustomScrollbar/CustomScrollbar.tsx","webpack:///./public/app/plugins/datasource/opentsdb/partials/query.editor.html","webpack:///./public/app/features/annotations/partials/event_editor.html","webpack:///./public/app/core/utils/flatten.ts","webpack:///./public/app/features/org/state/actions.ts","webpack:///./public/app/core/components/Select/TeamPicker.tsx","webpack:///./public/app/core/components/PermissionList/AddPermission.tsx","webpack:///./public/app/features/alerting/partials/alert_howto.html","webpack:///./public/app/features/dashboard/components/VersionHistory/template.html","webpack:///./public/vendor/flot/jquery.flot.stackpercent.js","webpack:///./public/app/features/dashboard/panel_editor/state/reducers.ts","webpack:///./public/app/core/components/search/search.html","webpack:///./public/app/features/annotations/editor_ctrl.ts","webpack:///./public/app/features/annotations/events_processing.ts","webpack:///./public/app/features/annotations/annotations_srv.ts","webpack:///./public/app/features/annotations/event_editor.ts","webpack:///./public/app/features/annotations/event_manager.ts","webpack:///./public/app/features/annotations/annotation_tooltip.ts","webpack:///./public/app/features/annotations/all.ts","webpack:///./public/app/features/org/partials/invite.html","webpack:///./public/app/features/folders/partials/folder_dashboards.html","webpack:///./packages/grafana-ui/src/components/Legend/Legend.tsx","webpack:///./public/app/features/admin/ldap/LdapPage.tsx","webpack:///./public/app/plugins/panel/graph/thresholds_form.html","webpack:///./public/app/core/utils/scrollbar.ts","webpack:///./public/app/routes/dashboard_loaders.ts","webpack:///./public/app/routes/ReactContainer.tsx","webpack:///./public/app/routes/registry.ts","webpack:///./public/app/features/folders/CreateFolderCtrl.ts","webpack:///./public/app/features/folders/services/FolderPageLoader.ts","webpack:///./public/app/features/manage-dashboards/DashboardImportCtrl.ts","webpack:///./public/app/features/folders/FolderDashboardsCtrl.ts","webpack:///./public/app/core/components/Login/LoginForm.tsx","webpack:///./public/app/core/components/Login/UserSignup.tsx","webpack:///./public/app/core/components/Login/LoginServiceButtons.tsx","webpack:///./public/app/core/components/Login/ChangePassword.tsx","webpack:///./public/app/core/components/Login/LoginPage.tsx","webpack:///./public/app/core/components/SafeDynamicImport.tsx","webpack:///./public/app/routes/routes.ts","webpack:///./public/app/core/services/AngularLoader.ts","webpack:///./public/app/core/reducers/navModel.ts","webpack:///./public/app/core/reducers/location.ts","webpack:///./public/app/core/reducers/application.ts","webpack:///./public/app/core/reducers/appNotification.ts","webpack:///./public/app/core/actions/application.ts","webpack:///./public/app/features/alerting/state/reducers.ts","webpack:///./public/app/features/teams/state/reducers.ts","webpack:///./public/app/core/reducers/index.ts","webpack:///./public/app/features/api-keys/state/reducers.ts","webpack:///./public/app/core/utils/acl.ts","webpack:///./public/app/features/folders/state/reducers.ts","webpack:///./public/app/features/dashboard/state/reducers.ts","webpack:///./public/app/features/explore/utils/ResultProcessor.ts","webpack:///./public/app/features/explore/state/reducers.ts","webpack:///./public/app/features/plugins/state/reducers.ts","webpack:///./public/app/features/datasources/state/reducers.ts","webpack:///./public/app/features/users/state/reducers.ts","webpack:///./public/app/features/profile/state/reducers.ts","webpack:///./public/app/features/admin/state/reducers.ts","webpack:///./public/app/features/org/state/reducers.ts","webpack:///./public/app/core/middlewares/application.ts","webpack:///./public/app/routes/GrafanaCtrl.ts","webpack:///./public/app/store/configureStore.ts","webpack:///./public/app/features/templating/editor_ctrl.ts","webpack:///./public/app/core/utils/dag.ts","webpack:///./public/app/features/templating/variable_srv.ts","webpack:///./public/app/features/templating/interval_variable.ts","webpack:///./public/app/features/templating/query_variable.ts","webpack:///./public/app/features/templating/custom_variable.ts","webpack:///./public/app/features/templating/datasource_variable.ts","webpack:///./public/app/features/templating/constant_variable.ts","webpack:///./public/app/features/templating/adhoc_variable.ts","webpack:///./public/app/features/templating/TextBoxVariable.ts","webpack:///./public/app/features/templating/all.ts","webpack:///./public/app/features/plugins/plugin_page_ctrl.ts","webpack:///./public/app/features/plugins/plugin_component.ts","webpack:///./public/app/features/plugins/variableQueryEditorLoader.tsx","webpack:///./public/app/features/plugins/all.ts","webpack:///./public/app/features/dashboard/services/ChangeTracker.ts","webpack:///./public/app/features/templating/DefaultVariableQueryEditor.tsx","webpack:///./public/app/features/dashboard/services/UnsavedChangesSrv.ts","webpack:///./public/app/features/dashboard/services/DashboardLoaderSrv.ts","webpack:///./public/app/features/dashboard/components/DashLinks/DashLinksEditorCtrl.ts","webpack:///./public/app/features/dashboard/components/DashLinks/DashLinksContainerCtrl.ts","webpack:///./public/app/features/dashboard/components/DashLinks/index.ts","webpack:///./public/app/features/dashboard/components/DashExportModal/DashboardExporter.ts","webpack:///./public/app/features/dashboard/components/DashExportModal/DashExportCtrl.ts","webpack:///./public/app/features/dashboard/components/DashExportModal/index.ts","webpack:///./public/app/features/dashboard/components/ExportDataModal/ExportDataModalCtrl.ts","webpack:///./public/app/features/dashboard/components/FolderPicker/FolderPickerCtrl.ts","webpack:///./public/app/features/dashboard/components/VersionHistory/HistoryListCtrl.ts","webpack:///./public/app/features/dashboard/components/VersionHistory/HistorySrv.ts","webpack:///./public/app/features/dashboard/components/VersionHistory/index.ts","webpack:///./public/app/features/dashboard/components/UnsavedChangesModal/UnsavedChangesModalCtrl.ts","webpack:///./public/app/features/dashboard/components/UnsavedChangesModal/index.ts","webpack:///./public/app/features/dashboard/components/SaveModals/SaveDashboardAsModalCtrl.ts","webpack:///./public/app/features/dashboard/components/SaveModals/SaveDashboardModalCtrl.ts","webpack:///./public/app/features/dashboard/components/SaveModals/SaveProvisionedDashboardModalCtrl.ts","webpack:///./public/app/features/dashboard/components/ShareModal/ShareModalCtrl.ts","webpack:///./public/app/features/dashboard/components/SaveModals/index.ts","webpack:///./public/app/features/dashboard/components/ShareModal/ShareSnapshotCtrl.ts","webpack:///./public/app/features/dashboard/components/ShareModal/index.ts","webpack:///./public/app/features/dashboard/components/AdHocFilters/AdHocFiltersCtrl.ts","webpack:///./public/app/features/dashboard/components/DashboardPermissions/DashboardPermissions.tsx","webpack:///./public/app/features/dashboard/components/AdHocFilters/index.ts","webpack:///./public/app/features/dashboard/components/RowOptions/RowOptionsCtrl.ts","webpack:///./public/app/features/dashboard/index.ts","webpack:///./public/app/features/playlist/playlists_ctrl.ts","webpack:///./public/app/features/playlist/playlist_search.ts","webpack:///./public/app/features/playlist/playlist_srv.ts","webpack:///./public/app/features/playlist/playlist_edit_ctrl.ts","webpack:///./public/app/features/playlist/playlist_routes.ts","webpack:///./public/app/features/playlist/all.ts","webpack:///./public/app/features/panel/panel_header.ts","webpack:///./public/app/features/panel/panel_directive.ts","webpack:///./public/app/features/panel/query_editor_row.ts","webpack:///./public/app/features/panel/repeat_option.ts","webpack:///./public/app/features/panel/panel_editor_tab.ts","webpack:///./public/app/features/panel/panellinks/module.ts","webpack:///./public/app/features/org/SelectOrgCtrl.ts","webpack:///./public/app/features/panel/all.ts","webpack:///./public/app/features/org/NewOrgCtrl.ts","webpack:///./public/app/features/org/UserInviteCtrl.ts","webpack:///./public/app/features/org/all.ts","webpack:///./public/app/features/admin/AdminListUsersCtrl.ts","webpack:///./public/app/features/admin/AdminEditUserCtrl.ts","webpack:///./public/app/features/admin/AdminListOrgsCtrl.ts","webpack:///./public/app/features/admin/AdminEditOrgCtrl.ts","webpack:///./public/app/features/admin/StyleGuideCtrl.ts","webpack:///./public/app/features/admin/index.ts","webpack:///./public/app/features/alerting/NotificationsEditCtrl.ts","webpack:///./public/app/features/alerting/NotificationsListCtrl.ts","webpack:///./public/app/features/manage-dashboards/services/ValidationSrv.ts","webpack:///./public/app/features/manage-dashboards/components/MoveToFolderModal/MoveToFolderCtrl.ts","webpack:///./public/app/features/manage-dashboards/components/UploadDashboard/uploadDashboardDirective.ts","webpack:///./public/app/features/manage-dashboards/components/MoveToFolderModal/index.ts","webpack:///./public/app/features/manage-dashboards/SnapshotListCtrl.ts","webpack:///./public/app/features/manage-dashboards/DashboardListCtrl.ts","webpack:///./public/app/features/manage-dashboards/index.ts","webpack:///./public/app/features/teams/CreateTeamCtrl.ts","webpack:///./public/app/features/profile/ProfileCtrl.ts","webpack:///./public/app/features/profile/all.ts","webpack:///./public/app/features/datasources/settings/HttpSettingsCtrl.ts","webpack:///./public/app/features/datasources/settings/TlsAuthSettingsCtrl.ts","webpack:///./public/app/features/all.ts","webpack:///./public/app/app.ts","webpack:///./packages/grafana-ui/src/utils/slate.ts","webpack:///./public/app/features/teams/state/navModel.ts"],"names":["__webpack_require__","d","__webpack_exports__","removePanel","duplicatePanel","copyPanel","editPanelJson","sharePanel","applyPanelTimeOverrides","getResolution","calculateInnerPanelHeight","app_core_store__WEBPACK_IMPORTED_MODULE_0__","app_features_dashboard_state_PanelModel__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_2__","_grafana_data__WEBPACK_IMPORTED_MODULE_3__","app_core_app_events__WEBPACK_IMPORTED_MODULE_4__","app_core_config__WEBPACK_IMPORTED_MODULE_5__","app_features_templating_template_srv__WEBPACK_IMPORTED_MODULE_6__","app_core_constants__WEBPACK_IMPORTED_MODULE_7__","dashboard","panel","ask","text2","alert","confirmText","emit","title","text","icon","yesText","onConfirm","set","JSON","stringify","getSaveModel","model","object","updateHandler","newPanel","oldPanel","index","panels","findIndex","id","deletedPanel","splice","events","sortPanelsByGridPos","replacePanel","canUpdate","meta","canEdit","enableCopy","src","timeRange","newTimeData","timeInfo","timeFrom","timeFromInterpolated","replace","scopedVars","timeFromInfo","describeTextRange","invalid","Object","raw","from","timeFromDate","parse","display","to","timeShift","timeShiftInterpolated","parseDateMath","hideTimeOverride","width","document","getElementsByTagName","getBoundingClientRect","maxDataPoints","Math","ceil","gridPos","w","containerHeight","hasTitle","theme","panelHeaderHeight","panelPadding","UserPicker","_super","props","_this","call","this","state","isLoading","search","bind","debouncedSearch","leading","trailing","tslib__WEBPACK_IMPORTED_MODULE_0__","prototype","query","backendSrv","app_core_services_backend_srv__WEBPACK_IMPORTED_MODULE_4__","setState","lodash__WEBPACK_IMPORTED_MODULE_2___default","a","isNil","get","then","result","map","user","userId","value","label","login","imgUrl","avatarUrl","finally","render","_a","className","onSelected","react__WEBPACK_IMPORTED_MODULE_1___default","createElement","_grafana_ui__WEBPACK_IMPORTED_MODULE_3__","defaultOptions","loadOptions","onChange","placeholder","noOptionsMessage","react__WEBPACK_IMPORTED_MODULE_1__","path","window","angular","module","run","c","put","exports","DataSourceStatus","DataSourcePlugin","DataSourceClass","components","setConfigEditor","editor","ConfigEditor","setConfigCtrl","ConfigCtrl","angularConfigCtrl","setQueryCtrl","QueryCtrl","setAnnotationQueryCtrl","AnnotationsQueryCtrl","setQueryEditor","QueryEditor","setExploreQueryField","ExploreQueryField","setExploreMetricsQueryField","ExploreMetricsQueryField","setExploreLogsQueryField","ExploreLogsQueryField","setExploreStartPage","ExploreStartPage","setVariableQueryEditor","VariableQueryEditor","setComponentsFromLegacyExports","pluginExports","DataSourceApi","instanceSettings","name","renderUrl","keys","length","toUrlParams","encodeURIComponentAsAngularJS","val","pctEncodeSpaces","encodeURIComponent","s","rbracket","isArray","obj","toString","add","k","v","undefined","buildParams","prefix","i","len","key","test","String","join","appendQueryToUrl","url","stringToAppend","pos","indexOf","$","Gauge","context","options","gaugeOptions","series","plot","ctx","getPlaceholder","getOptions","gauges","getData","getLogger","debug","calculateAutoValues","gaugeOptionsi","cellWidth","gauge","max","margin","font","size","threshold","calculateAngle","layout","data","startAngle","endAngle","min","drawArcWithShadow","cx","cy","r","rd1","rd2","lc","lw","fc","blur","save","drawArc","clip","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","restore","drawThresholdValue","cellLayout","drawText","thresholdLabelMargin","thresholdLabelFontSize","radius","cos","toRad","sin","formatter","x","y","textOptions","span","find","exists","attr","append","css","family","color","background","opacity","parseInt","height","calculateLayout","canvasWidth","canvasHeight","columns","rows","hMargin","vMargin","cellHeight","square","cell","cellMargin","labelMargin","labelFontSize","show","valueMargin","valueFontSize","thresholdWidth","maxRadiusH","dAngle","heightRatioV","outerRadiusV","maxRadiusV","outerRadius","gaugeOuterHeight","calculateCellLayout","col","floor","row","blank","offsetY","vAlign","drawBackground","frame","strokeStyle","grid","borderColor","lineWidth","borderWidth","strokeRect","backgroundColor","fillStyle","fillRect","drawCellBackground","border","drawGauge","shadow","c1","values","getColor","a2","drawThreshold","a1","drawLable","item","drawValue","drawThresholdValues","j","debugOptions","Logger","PI","beginPath","arc","lineTo","closePath","stroke","fill","defaults","log","plugins","push","init","hooks","processOptions","legend","sort","b","draw","extend","version","jQuery","LdapUserMappingInfo","info","showAttributeMapping","react_default","colSpan","ldapValue","cfgAttrValue","surname","email","LdapUserPermissions","permissions","isGrafanaAdmin","Fragment","isDisabled","LdapUserGroups","groups","items","filter","orgRole","placement","content","group","orgId","groupDN","orgName","LdapUserTeams","teams","teamName","team","LdapUserInfo","ldapUser","roles","ArrayVector","buffer","defineProperty","reverse","toArray","toJSON","NUMBER","guessFieldTypeFromValue","lodash_isNumber__WEBPACK_IMPORTED_MODULE_1___default","_types_index__WEBPACK_IMPORTED_MODULE_4__","number","lodash_isString__WEBPACK_IMPORTED_MODULE_2___default","boolean","string","lodash_isBoolean__WEBPACK_IMPORTED_MODULE_3___default","Date","_datetime_moment_wrapper__WEBPACK_IMPORTED_MODULE_5__","time","other","guessFieldTypeForField","field","toLowerCase","guessFieldTypes","fields","type","isTableData","hasOwnProperty","isDataFrame","toDataFrame","_MutableDataFrame__WEBPACK_IMPORTED_MODULE_8__","appendRow","_utils_deprecationWarning__WEBPACK_IMPORTED_MODULE_6__","timeSeries","target","config","unit","filterable","_vector_ArrayVector__WEBPACK_IMPORTED_MODULE_7__","_b","datapoints","_c","next","done","point","labels","tags","refId","json","convertJSONDocumentDataToDataFrame","convertTimeSeriesToDataFrame","graphSeries","convertGraphSeriesToDataFrame","table","_d","fields_1","fields_1_1","f","t","convertTableToDataFrame","console","warn","Error","toLegacyResponseData","rowCount","alias","column","sortDataFrame","sortIndex","compare","vA","vB","localeCompare","_vector_SortedVector__WEBPACK_IMPORTED_MODULE_9__","reverseDataFrame","copy","getTimeField","timeField","timeIndex","getDataFrameRow","toDataFrameDTO","processDatapoints","stack","allseries","res","findMatchingSeries","px","py","intery","qx","qy","bottom","l","m","ps","pointsize","points","otherps","otherpoints","newpoints","withlines","lines","horizontal","bars","withbottom","format","withsteps","steps","keyOffset","accumulateOffset","fromgap","Emitter","eventemitter3__WEBPACK_IMPORTED_MODULE_0__","emitter","on","handler","scope","unbind_1","$on","off","removeAllListeners","evt","getEventCount","_eventsCount","LoadingState","NullValueMode","getStyles","_themes__WEBPACK_IMPORTED_MODULE_6__","emotion__WEBPACK_IMPORTED_MODULE_4__","templateObject_1","typography","sm","wrapper","templateObject_2","section","templateObject_3","sectionRight","templateObject_4","LegendList","itemRenderer","_themes_ThemeContext__WEBPACK_IMPORTED_MODULE_5__","styles","renderItem","getItemKey","_List_InlineList__WEBPACK_IMPORTED_MODULE_2__","yAxis","_List_List__WEBPACK_IMPORTED_MODULE_3__","displayName","matchSeriesOverride","aliasOrRegex","seriesAlias","regex","_grafana_data__WEBPACK_IMPORTED_MODULE_4__","match","updateLegendValues","axis","yaxes","yaxis","isNumber","decimals","getDataMinMax","datamin","datamax","app_core_utils_ticks__WEBPACK_IMPORTED_MODULE_1__","tickDecimals","scaledDecimals","tickDecimalsPlusOne","data_1","data_1_1","stats","TimeSeries","opts","aliasEscaped","escape","fillColor","valueFormater","dataFrameIndex","fieldIndex","hasMsResolution","isMsResolutionNeeded","applySeriesOverrides","overrides","dashes","dashLength","zindex","nullPointMode","override","linewidth","spaceLength","pointradius","steppedLine","fillBelowTo","setColor","transform","hideTooltip","getFlotPairs","total","Number","MAX_VALUE","logmin","avg","current","first","delta","diff","range","timeStep","allIsNull","allIsZero","currentTime","currentValue","previousTime","ignoreNulls","nullAsZero","nonNulls","previousValue","previousDeltaUp","count","formater","formatValue","isFinite","timestamp","hideFromLegend","hideEmpty","hideZero","DashboardRouteInfo","DashboardInitPhase","KIOSK_MODE_TV","styleElement","domEvents","addEventListener","setCss","callback","attachEvent","cssText","styleSheet","innerHTML","appendChild","NewlinePlugin","onKeyDown","event","selection","isExpanded","shiftKey","preventDefault","indent","offset","trimLeft","getIndent","startBlock","splitBlock","insertText","focus","Registry","ordered","byId","Map","initalized","getIfExists","ext","register","selectOptions","select","currentIds","current_1","current_1_1","excludeFromPicker","option","description","list","ids","found","ids_1","ids_1_1","has","aliasIds","DashboardSearchHitType","getDefaultCondition","getAlertingValidationMessage","params","reducer","evaluator","operator","transformations","targets","datasourceSrv","datasourceName","Promise","alertingNotSupported","templateVariablesNotSupported","targets_1","targets_1_1","dsName","datasource","ds","sent","alerting","targetContainsTemplate","SettingsCtrl_SettingsCtrl","SettingsCtrl","$scope","$route","$location","$rootScope","dashboardSrv","updateSubmenuVisibility","appEvent","startRefresh","canSaveAs","core","hasEditPermissionInFolders","canSave","canDelete","buildSectionList","onRouteUpdated","onAppEvent","animate","onPostSave","$inject","e_1","sections","canAdmin","canMakeEditable","tslib_es6","sectionParams","lodash_default","editview","appSubUrl","jquery_js_exposed_default","param","viewId","angular_default","toJson","getSaveModelClone","unshift","openSaveAsModal","showSaveAsModal","saveDashboard","saveDashboardJson","saveJSONDashboard","reload","hasUnsavedFolderChange","hideSettings","urlParams","$apply","makeEditable","editable","currentSection","deleteDashboard","provisioned","provisionedExternalId","text2htmlBind","noText","alerts","sumBy","deleteDashboardConfirmed","uid","onFolderChange","folder","folderId","folderTitle","getFolder","folderUrl","restrict","templateUrl","controller","bindToController","controllerAs","transclude","DashboardSettings_DashboardSettings","apply","arguments","DashboardSettings","componentDidMount","loader","scopeProps","angularCmp","load","element","componentWillUnmount","destroy","ref","TimePickerCtrl","timepicker","refresh_intervals","TimePickerSettings_template","template","MatcherID","FieldMatcherID","FrameMatcherID","DataTransformerID","anyFieldMatcher","anyMatch","children","getFieldMatcher","children_1","children_1_1","child","e_2","options_1","options_1_1","sub","matcher","fieldMatchers","getOptionsDisplayText","anyFrameMatcher","getFrameMatchers","children_2","children_2_1","e_4","options_2","options_2_1","frameMatchers","allFieldsMatcher","allMatch","children_3","children_3_1","e_6","options_3","options_3_1","allFramesMatcher","children_4","children_4_1","e_8","options_4","options_4_1","notFieldMatcher","invertMatch","check","notFrameMatcher","alwaysFieldMatcher","alwaysFrameMatcher","neverFieldMatcher","neverFrameMatcher","alwaysFieldMatcherInfo","alwaysMatch","alwaysFrameMatcherInfo","neverFieldMatcherInfo","neverMatch","neverFrameMatcherInfo","fieldNameMacher","byName","pattern","frameNameMacher","fieldTypeMacher","byType","dataFrame","numericMacher","numeric","timeMacher","refIdMacher","byRefId","ReducerID","appendTransformer","processed","addField","startLength","vals","validate","e_3","reducers","calcs","reducers_1","reducers_1_1","missing","queue","fieldReducers","queue_1","queue_1_1","emptyInputResult","nullValueMode","types","Ignore","AsZero","reduce","values_1","sum","mean","last","lastNotNull","firstNotNull","nonNullCount","step","isFirst","isNumber_default","queue_2","queue_2_1","standard","calculateLastNotNull","calculateLast","calculateFirst","calculateFirstNotNull","changeCount","calculateChangeCount","distinctCount","calculateDistinctCount","idx","distinct","Set","reduceTransformer","calculators","calculators_1","calculators_1_1","results","reduceField","calculators_2","calculators_2_1","processDataFrame","noopTransformer","noop","filterFieldsTransformer","filterFields","include","exclude","transformer","filterFramesTransformer","filterFrames","data_2","data_2_1","filterFieldsByNameTransformer","filterFieldsByName","filterOptions","transformersRegistry","after","after_1","after_1_1","TransformerRegistry","transformDataFrame","_location__WEBPACK_IMPORTED_MODULE_0__","_navModel__WEBPACK_IMPORTED_MODULE_1__","_appNotification__WEBPACK_IMPORTED_MODULE_2__","rawToTimeRange","timeZone","stringToDateTimeType","roundUp","isValid","TimePickerCalendar_TimePickerCalendar","TimePickerCalendar","onCalendarChange","date","Array","newDate","onDrilldown","stopPropagation","roundup","entry_nostyle_default","toDate","next2Label","prev2Label","tileClassName","onDrillDown","nextLabel","prevLabel","TimePickerInput_TimePickerInput","TimePickerInput","isValidTimeString","valueToString","tabIndex","valueString","error","Input","onBlur","hideErrorMessage","TimePickerPopover_TimePickerPopover","TimePickerPopover","onFromInputChanged","valid","isFromInputValid","onToInputChanged","isToInputValid","onFromCalendarChanged","onToCalendarChanged","onApplyClick","popoverClassName","disabled","onClick","react","defaultSelectOptions","defaultZoomOutTooltip","TimePicker_TimePicker","TimePicker","pickerTriggerRef","isCustomOpen","mapTimeOptionsToSelectableValues","timeOption","onSelectChanged","onCustomChange","onCloseCustom","selectTimeOptions","onMoveBackward","onMoveForward","onZoom","currentOption","isUTC","adjustedTime","utc","local","adjustedTimeRange","isMathString","rangeString","describeTimeRange","isAbsolute","ButtonSelect","maxMenuHeight","iconClass","tooltipContent","TimePickerTooltipContent","Tooltip","ClickOutsideWrapper","second","active","onMouseMove","e","trigger","getSelection","onMouseDown","which","onselectstart","savedhandlers","ondrag","selectionIsSane","triggerSelectedEvent","setTimeout","isSelecting","one","mouseUpHandler","c2","axes","getAxes","each","used","anyUsed","p1","c2p","direction","p2","ctrlKey","xaxis","x1","y1","x2","y2","clamp","setSelectionPos","o","plotOffset","getPlotOffset","pageX","left","mode","updateSelection","triggerRedrawOverlay","clearSelection","preventEvent","extractRange","ranges","coord","n","getXAxes","getYAxes","tmp","minSize","abs","setSelection","p2c","bindEvents","eventHolder","mousemove","mousedown","drawOverlay","scale","lineJoin","shape","h","shutdown","unbind","ItemAvatar","userAvatarUrl","teamAvatarUrl","role","style","ItemDescription","teamId","PermissionsListItem","onPermissionChanged","onRemoveItem","inherited","folderInfo","inheritedFromRoot","dashboardId","currentPermissionLevel","acl","dp","permission","href","isSearchable","DisabledPermissionListItem","PermissionList_PermissionList","PermissionList","isFetching","PermissionList_DisabledPermissionListItem","PermissionListItem","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","app_core_components_query_part_query_part__WEBPACK_IMPORTED_MODULE_1__","alertQueryDef","dynamicLookup","defaultParams","joinEvalMatches","matches","separator","ev","metric","Metric","Value","getStateDisplayModel","stateClass","message","conditionTypes","evalFunctions","evalOperators","noDataModes","executionErrorModes","reducerTypes","createReducerPart","def","getAlertAnnotationInfo","ah","evalMatches","alertStateSortScore","no_data","pending","ok","paused","main","customCss","defaultSelectedItem","navItem","htmlFor","selectedIndex","app_core_app_events__WEBPACK_IMPORTED_MODULE_3__","hideFromTabs","tab","tabClasses","classnames__WEBPACK_IMPORTED_MODULE_2___default","gf-tabs-link","SelectNav","Tabs","PageHeader","shouldComponentUpdate","breadcrumbs","breadcrumbs_1","breadcrumbs_1_1","bc","breadcrumbsResult","renderHeaderTitle","img","renderTitle","subTitle","Navigation","isSharedDashboardQuery","SHARED_DASHBODARD_QUERY","runSharedRequest","Observable","subscriber","DashboardSrv","getCurrent","listenToPanelId","queries","panelId","getPanelIdFromQuery","getQueryError","currentPanel","getPanelById","listenToPanel","listenToRunner","getQueryRunner","subscription","subscribe","fullscreen","modified","unsubscribe","msg","getQueryDisplayText","DashboardQueryEditor_DashboardQueryEditor","DashboardQueryEditor","onPanelChanged","getQuery","refresh","getPanelDescription","defaultDatasource","dsname","panelData","prevProps","defaultDS","_e","mainDS","trys","fmt","qData","QueryEditorRow","query_1","queryData","logos","small","renderQueryData","editURL","index_esm","marginRight","selected","plugin","padding","grafana_ui_src","floorInBase","base","strftime","leftPad","pad","hours","getHours","monthNames","dayNames","hours12","getDay","getMonth","getDate","getMinutes","getSeconds","getFullYear","addProxyMethod","sourceObj","sourceMethod","targetObj","targetMethod","p","dateGenerator","ts","timezone","timezoneJS","setTimezone","setTime","makeUtcWrapper","timeUnitSize","minute","hour","day","month","quarter","year","baseSpec","specMonths","concat","specQuarters","ticks","spec","tickSize","minTickSize","magn","pow","LN10","norm","setSeconds","setMinutes","setHours","setMonth","setFullYear","setDate","carry","NaN","prev","getTime","start","end","timeformat","formatDate","useQuarters","suffix","hourCode","twelveHourClock","variableRegex","variableTypes","containsVariable","app_core_utils_model_utils__WEBPACK_IMPORTED_MODULE_1__","variableRegexExec","variableString","lastIndex","exec","_i","variableName","args","isString","slice","varMatch","ActionTypes","loadAlertRules","LoadAlertRules","loadedAlertRules","rules","LoadedAlertRules","payload","setSearchQuery","SetSearchQuery","getAlertRulesAsync","dispatch","togglePauseAlertRule","stateFilter","getState","location","controllerProps","tooltipTriggerRef","popperBackgroundClassName","_PopoverController__WEBPACK_IMPORTED_MODULE_3__","showPopper","hidePopper","popperProps","payloadProps","_Popover__WEBPACK_IMPORTED_MODULE_2__","onMouseEnter","onMouseLeave","referenceElement","wrapperClassName","renderArrow","arrowProps","data-placement","cloneElement","dataSourceLoaded","app_core_redux__WEBPACK_IMPORTED_MODULE_6__","create","dataSourcesLoaded","dataSourceMetaLoaded","dataSourceTypesLoad","app_core_redux_actionCreatorFactory__WEBPACK_IMPORTED_MODULE_7__","dataSourceTypesLoaded","setDataSourcesSearchQuery","setDataSourcesLayoutMode","setDataSourceTypeSearchQuery","setDataSourceName","setIsDefault","loadDataSources","response","loadDataSource","dataSource","pluginInfo","addDataSource","dataSources","getStore","access","isDefault","nameExits","newInstance","nameHasSuffix","getNewName","digit","getLastDigit","isNaN","findNewName","loadDataSourceTypes","updateDataSource","deleteDataSource","updateFrontendSettings","_grafana_runtime__WEBPACK_IMPORTED_MODULE_2__","settings","_core_config__WEBPACK_IMPORTED_MODULE_1__","datasources","app_features_plugins_datasource_srv__WEBPACK_IMPORTED_MODULE_3__","endsWith","DefaultTimeZone","TIME_FORMAT","DefaultTimeRange","loadFolder","LoadFolder","setFolderTitle","newTitle","SetFolderTitle","loadFolderPermissions","LoadFolderPermissions","getFolderByUid","saveFolder","app_core_services_backend_srv__WEBPACK_IMPORTED_MODULE_1__","deleteFolder","getFolderPermissions","toUpdateItem","updateFolderPermission","itemToUpdate","level","updated","itemsToUpdate","removeFolderPermission","itemToDelete","addFolderPermission","newItem","luceneEscape","TemplateSrv","app_features_templating_variable__WEBPACK_IMPORTED_MODULE_3__","grafanaVariables","builtIns","fieldAccessorCache","variables","updateIndex","getBuiltInIntervalValue","__interval","acc","isNone","valueOf","updateTimeRange","variableInitialized","variable","getAdhocFilters","filters","luceneFormat","encodeURIComponentStrict","str","charCodeAt","toUpperCase","app_core_utils_kbn__WEBPACK_IMPORTED_MODULE_1__","regexEscape","escapedValues","distributeVariable","setGrafanaVariable","getVariableName","expression","variableExists","highlightVariablesAsHtml","var1","var2","fmt2","var3","getAllValue","allValue","getFieldAccessor","fieldPath","accessor","property","getVariableValue","scopedVar","fmt3","value_1","systemValue","isAllValue","replaceWithText","fillVariableValuesForUrl","skipUrlSync","getValueForUrl","graphs","displayProcessor","_grafana_ui__WEBPACK_IMPORTED_MODULE_1__","legendOptions","dataFrames_1","dataFrames","dataFrames_1_1","_grafana_data__WEBPACK_IMPORTED_MODULE_2__","_loop_1","xField","yField","Null","seriesStats_1","statsDisplayValues","stat","statDisplayValue","seriesColor","seriesOptions","isVisible","MappingType","MetricKind","ValueTypes","alignOptions","aggOptions","alignmentPeriods","stackdriverUnitMappings","valueTypes","INT64","DOUBLE","MONEY","DISTRIBUTION","metricKinds","CUMULATIVE","DELTA","GAUGE","STRING","VALUE_TYPE_UNSPECIFIED","BOOL","METRIC_KIND_UNSPECIFIED","bit","By","us","ms","ns","percent","MiBy","By/s","GBy","DataFrameView_DataFrameView","DataFrameView","getter","enumerable","configurable","arr","forEachRow","iterator","FieldCache_FieldCache","FieldCache","fieldByName","fieldByType","getFields","hasFieldOfType","getFirstFieldOfType","hasFieldNamed","getFieldByName","CircularDataFrame_CircularDataFrame","CircularVector","CircularDataFrame","MutableDataFrame","position","top","getContext","G_vmlCanvasManager","initElement","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","textContainer","_textCache","_textSizeCache","flotTextSizeCache","Plot","data_","options_","colors","noColumns","labelFormatter","labelBoxBorderColor","container","backgroundOpacity","sorted","tickColor","inverseTransform","autoscaleMargin","tickFormatter","labelWidth","labelHeight","reserveSpace","tickLength","alignTicksWithAxis","xaxes","symbol","barWidth","align","zero","shadowSize","highlightColor","aboveData","eventSectionHeight","axisMargin","minBorderMargin","markings","markingsColor","markingsLineWidth","clickable","hoverable","autoHighlight","mouseActiveRadius","interaction","redrawOverlayInterval","surface","overlay","octx","right","plotWidth","plotHeight","processRawData","processOffset","processRange","drawSeries","executeHooks","hook","setData","parseData","sc","neededColors","maxIndex","colorPool","colorPoolSize","variation","colori","getOrCreateAxis","axisNumber","fillInSeriesOptions","topSentry","POSITIVE_INFINITY","bottomSentry","NEGATIVE_INFINITY","fakeInfinity","updateAxis","allAxes","_","required","autoscale","defaultValue","insertSteps","nullify","Infinity","xmin","ymin","xmax","ymax","processData","grep","canvasToAxisCoords","redrawTimeout","maxWidth","legacyStyles","layer","allocateAxisBoxFirstPhase","lh","isXAxis","eventSectionPadding","innermost","outermost","box","setupGrid","showGrid","axisOpts","widen","setRange","allocatedAxes","snaped","setupTickGeneration","setTicks","snapRangeToTicks","measureTickLabels","minMargin","margins","allocateAxisBoxSecondPhase","identity","it","setTransformationHelpers","tick","halign","valign","addText","html","remove","fragments","entries","rowStarted","lf","isFunction","ascending","entry","charAt","appendTo","extract","div","prependTo","insertLegend","noTicks","dec","maxDec","tickGenerator","factor","decimal","formatted","precision","substr","otherAxis","niceTicks","extraDec","toFixed","oticks","changed","getColorOrGradient","drawGrid","xrange","yrange","xequal","yequal","subPixel","moveTo","xoff","yoff","bw","plotLine","xoffset","yoffset","axisx","axisy","prevx","prevy","translate","sw","angle","getFillStyle","areaOpen","ypos","segmentEnd","segmentStart","x1old","x2old","plotLineArea","drawSeriesLines","abandonedPoints","beforeX","afterX","emptyPoints","olddatapoints","drawSeriesPoints","drawOrphanedPoints","barLeft","fillStyleCallback","barRight","drawBar","plotBars","drawSeriesBars","plotPoints","drawLeft","drawRight","drawTop","drawBottom","filloptions","normalize","getCanvas","highlight","unhighlight","pointOffset","highlights","resize","classes","Canvas","initPlugins","axisOptions","axisCount","fontSize","fontSizeDefault","fontDefaults","round","variant","weight","lineHeight","x2axis","y2axis","coloredAreas","coloredAreasColor","parseOptions","existing","clear","setupCanvases","triggerClickHoverEvent","eventname","seriesFilter","canvasX","canvasY","pageY","mouseX","mouseY","maxDistance","smallestDistance","mx","my","maxx","maxy","dx","dy","dist","datapoint","dataIndex","seriesIndex","auto","hi","drawBarHighlight","drawPointHighlight","indexOfHighlight","pointRadius","defaultColor","co","brightness","gradient","addColorStop","fn","detach","parentNode","removeChild","pixelRatio","clearRect","layerKey","cache","getTextLayer","styleKey","layerCache","styleCache","positions","rendered","font-size","insertAfter","addClass","textStyle","max-width","outerWidth","outerHeight","getTextInfo","clone","text-align","removeText","colorsPaletteInstance","hue","isPrimary","light","dark","getColorDefinitionByName","lodash_flatten__WEBPACK_IMPORTED_MODULE_1___default","getNamedColorPalette","definition","getColorDefinition","hex","variants","isHex","getColorName","_types_theme__WEBPACK_IMPORTED_MODULE_2__","Dark","getColorByName","colorName","getColorFromHexRgbOrName","colorDefinition","tinycolor2__WEBPACK_IMPORTED_MODULE_3___default","toHexString","getColorForTheme","palette","greens","buildColorDefinition","yellows","reds","blues","oranges","purples","offOption","liveOption","defaultIntervals","isLive","refreshInterval","memoize_one__WEBPACK_IMPORTED_MODULE_6__","selectButton","emotion__WEBPACK_IMPORTED_MODULE_3__","orange","RefreshPickerBase","intervalsToOptions","intervals","interval","hasLiveOption","onChangeSelect","onIntervalChanged","onRefresh","tooltip","refreshButton","buttonSelectClassName","selectedValue","cssClasses","refresh-picker","refresh-picker--off","refresh-picker--live","_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_4__","_Select_ButtonSelect__WEBPACK_IMPORTED_MODULE_5__","OrgRole","PermissionLevel","DataSourcePermissionLevel","AclTarget","dashboardAclTargets","dashboardPermissionLevels","TeamPermissionLevel","teamsPermissionLevels","Query","Team","User","Viewer","Editor","View","Edit","Admin","Member","connectWithStore","WrappedComponent","ConnectedWrappedComponent","react_redux__WEBPACK_IMPORTED_MODULE_2__","store","_store_store__WEBPACK_IMPORTED_MODULE_3__","PanelCtrl","$injector","onPluginTypeChange","$timeout","editorTabs","timing","app_core_config__WEBPACK_IMPORTED_MODULE_4__","pluginId","pluginName","panelDidMount","panelInitialized","renderingCompleted","app_core_core__WEBPACK_IMPORTED_MODULE_5__","publishAppEvent","evtName","$root","changeView","edit","viewPanel","editPanel","exitFullscreen","initEditMode","editModeInitiated","maxPanelsPerRowOptions","app_core_utils_factors__WEBPACK_IMPORTED_MODULE_6__","app_core_constants__WEBPACK_IMPORTED_MODULE_8__","addEditorTab","directiveFn","editorTab","lodash__WEBPACK_IMPORTED_MODULE_1___default","menu","click","shortcut","extendedMenu","getExtendedMenu","submenu","divider","otherPanelInFullscreenMode","calculatePanelHeight","app_features_dashboard_utils_panel__WEBPACK_IMPORTED_MODULE_7__","duplicate","getInfoMode","links","markdown","interpolatedMarkdown","md","disableSanitizeHtml","app_core_utils_text__WEBPACK_IMPORTED_MODULE_2__","interpolatedLinks","_panellinks_linkSuppliers__WEBPACK_IMPORTED_MODULE_9__","getLinks","interpolatedLinks_1","interpolatedLinks_1_1","link","LdapConnectionStatus","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","app_core_components_AlertBox_AlertBox__WEBPACK_IMPORTED_MODULE_1__","app_types__WEBPACK_IMPORTED_MODULE_2__","ldapConnectionInfo","serverInfo","host","port","available","LdapErrorBox","some","connectionErrors","forEach","errorElements","fontWeight","severity","body","TAG_COLORS","TAG_BORDER_COLORS","getTagColorsFromName","hash","djb2","Portal","node","root","classList","portalRoot","react_dom__WEBPACK_IMPORTED_MODULE_2___default","createPortal","onMouseOut","crosshair","locked","setCrosshair","lockCrosshair","unlockCrosshair","mouseout","drawX","adj","drawY","defaultStyle","transition","overflow","inProp","in","maxHeight","transitionStyles","exited","entering","entered","exiting","react_transition_group_Transition__WEBPACK_IMPORTED_MODULE_2___default","timeout","reducerFactory","initialState","allMappers","instance","addMapper","mapper","action","actionCreatorFactory","defaultMarkedOptions","renderer","marked_default","Renderer","pedantic","gfm","tables","sanitize","smartLists","smartypants","xhtml","setMarkdownOptions","optionsOverride","setOptions","renderMarkdown","findHighlightChunksInText","searchWords","textToHighlight","term","findMatchesInText","cleanNeedle","needle","haystack","regexp","parseFlags","cleaned","flags","RegExp","substring","rest","CLEAR_FLAG","FLAGS_REGEXP","clearAll","startsWith","flag","delete","Options","immutable","onlyIn","getSyntax","renderDecoration","decoration","TOKEN_MARK","SlatePrism","optsParam","block","grammarName","grammar","prism_default","languages","texts","getTexts","blockText","getText","tokens","tokenize","decorations","textStart","textEnd","processToken","token","accu","createDecoration","decorateNode","slate_es","resetSelectStyles","clearIndicator","control","dropdownIndicator","groupHeading","indicatorsContainer","indicatorSeparator","input","loadingIndicator","loadingMessage","multiValue","multiValueLabel","multiValueRemove","singleValue","valueContainer","SelectOption","isSelected","react_select_esm","Option","aria-hidden","SingleValue","SelectOptionGroup","expanded","onToggleChildren","prevState","selectProps","componentDidUpdate","nextProps","inputValue","MenuList","CustomScrollbar","autoHide","autoHeightMax","Select_Select","Select","getOptionLabel","getOptionValue","isClearable","backspaceRemovesValue","isMulti","autoFocus","openMenuOnFocus","isOpen","tabSelectsValue","onCloseMenu","onOpenMenu","widthClass","selectClassNames","classnames_default","selectComponents","defaultProps","Select_WrapInTooltip","onOpenMenuInternal","onCloseMenuInternal","classNamePrefix","menuShouldScrollIntoView","menuIsOpen","onMenuOpen","onMenuClose","IndicatorsContainer","Group","Select_SelectOptionGroup","Select_AsyncSelect","AsyncSelect","Async_default","NoOptionsMessage","WrapInTooltip","isOpenInternal","showTooltip","escapeStringForRegex","FilterInput","specialChars","escaped","currentChar","labelClassName","inputClassName","_torkelo_react_select__WEBPACK_IMPORTED_MODULE_2__","vectorToArray","POINT_TIME_INDEX","POINT_VALUE_INDEX","END_COLUMN","END_ROW","QUOTE","EXPORT_FILENAME","dateTimeFormat","excel","csvEscaped","split","domParser","DOMParser","htmlDecoded","parseFromString","textContent","formatSpecialHeader","useExcelHeader","formatRow","addEndRowDelimiter","lodash__WEBPACK_IMPORTED_MODULE_1__","util__WEBPACK_IMPORTED_MODULE_3__","convertSeriesListToCsv","seriesList","exportSeriesListToCsv","saveSaveBlob","convertSeriesListToCsvColumns","timestamps","seriesPoints","seriesTimestamps","extendedDatapoints","pointIndex","mergeSeriesByTime","extendedDatapointsList","exportSeriesListToCsvColumns","convertTableDataToCsv","exportTableDataToCsv","fname","blob","Blob","file_saver__WEBPACK_IMPORTED_MODULE_2__","ThemeContext","createContext","_getTheme__WEBPACK_IMPORTED_MODULE_3__","_types_theme__WEBPACK_IMPORTED_MODULE_4__","withTheme","Component","WithTheme","Consumer","hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2___default","useTheme","_teams__WEBPACK_IMPORTED_MODULE_0__","_alerting__WEBPACK_IMPORTED_MODULE_1__","_location__WEBPACK_IMPORTED_MODULE_2__","_folders__WEBPACK_IMPORTED_MODULE_3__","_dashboard__WEBPACK_IMPORTED_MODULE_4__","_acl__WEBPACK_IMPORTED_MODULE_5__","_apiKeys__WEBPACK_IMPORTED_MODULE_6__","_user__WEBPACK_IMPORTED_MODULE_7__","_datasources__WEBPACK_IMPORTED_MODULE_8__","_plugins__WEBPACK_IMPORTED_MODULE_9__","_organization__WEBPACK_IMPORTED_MODULE_10__","_appNotifications__WEBPACK_IMPORTED_MODULE_11__","_explore__WEBPACK_IMPORTED_MODULE_13__","_panel__WEBPACK_IMPORTED_MODULE_0__","_plugin__WEBPACK_IMPORTED_MODULE_1__","_app__WEBPACK_IMPORTED_MODULE_2__","_datasource__WEBPACK_IMPORTED_MODULE_3__","_theme__WEBPACK_IMPORTED_MODULE_4__","_input__WEBPACK_IMPORTED_MODULE_5__","__WEBPACK_IMPORT_KEY__","singleton","timeRangeVars","_grafana_ui__WEBPACK_IMPORTED_MODULE_5__","keepTime","documentation","origin","BuiltIn","timeRangeFrom","timeRangeTo","fieldVars","fieldName","Field","valueVars","valueNumeric","valueText","valueRaw","buildLabelPath","getPanelLinksVariableSuggestions","app_features_templating_template_srv__WEBPACK_IMPORTED_MODULE_2__","Template","includeVars","getSeriesVars","chain","df","flatten","uniq","seriesName","Series","getDataLinksVariableSuggestions","seriesVars","valueTimeVar","valueTime","getCalculationValueDataLinksVariableSuggestions","valueCalcVar","valueCalc","LinkSrv","templateSrv","timeSrv","getDataLinkUIModel","timeRangeUrl","app_core_utils_url__WEBPACK_IMPORTED_MODULE_4__","timeRangeForUrl","targetBlank","variablesQuery","getLinkUrl","getAnchorInfo","getPanelLinkAnchorInfo","_grafana_data__WEBPACK_IMPORTED_MODULE_6__","setLinkSrv","srv","getLinkSrv","getServerStats","getLdapState","getLdapSyncStatus","syncLdapUser","getUserInfo","getUser","getUserSessions","revokeUserSession","revokeAllUserSessions","_grafana_runtime__WEBPACK_IMPORTED_MODULE_1__","users","admins","editors","viewers","activeUsers","activeAdmins","activeEditors","activeViewers","activeSessions","dashboards","orgs","playlists","snapshots","stars","error_1","username","sessions","session","isActive","seenAt","fromNow","createdAt","clientIp","browser","browserVersion","os","osVersion","device","post","authTokenId","tokenId","gfDropdown","valueSelectDropdown","rebuildOnChange","layoutMode","queryPartEditorDirective","lodash","jquery_js_exposed","$compile","elem","attrs","linkText","ngModel","$watch","newValue","menuItems","subItem","$button","typeaheadValues","memo","subIndex","$item","menuItem","$subItem","hide","typeahead","source","minLength","updater","submenuItem","dropdownTypeaheadOnSelect","$input","keyup","toggleClass","removeClass","contents","buttonTemplateClass","closeDropdownMenu","timeoutId","dispatchChangeEvent","Event","dispatchEvent","onAnimationStart","removeEventListener","$sce","segment","selectMode","debounce","altSegments","trustAsHtml","fake","expandable","custom","fromClick","cancelBlur","updateVariableValue","inputBlur","switchToLink","$query","alt","unescape","clearTimeout","linkMode","lookup","$element","proxy","process","debounceLookup","keydown","keyCode","uiSegmentSrv","$q","cssClass","newSegment","when","cachedOptions","onSegmentChange","valueToSegment","directive","dropdownTypeahead","dropdownTypeahead2","autofillEventFix","core_module","metricSegment","metricSegmentModel","clipboard","_t","kbn","addslashes","replaceWith","$eval","compile","ngchange","change","tip","showIf","$interpolate","$id","$parse","iElement","buildTemplate","ul","li","method","misc_tip","clipboard_default","app_events","onchange","editorOptBool","editorCheckbox","elm","ngModelCtrl","$setViewValue","ctrl","$parsers","viewValue","utils_tags","tagColorFromName","getItemProperty","$parent","tagsinput","typeaheadSource","itemValue","itemvalue","itemText","itemtext","tagClass","tagclass","onTagsUpdated","tagElement","ValueSelectDropdownCtrl","oldVariableText","highlightIndex","tag","tagObj","dropdownVisible","updateLinkText","selectedAndNotInTag","currentTexts","clearSelections","selectedValues","selectionsChanged","selectTag","getValuesForTag","valuesText","keyDown","moveHighlight","commitChanges","selectValue","commitChange","excludeOthers","multi","setAllExceptCurrentTo","metaKey","selectedTags","onUpdated","queryChanged","$window","linkEl","inputEl","bodyOnClick","bodyEl","vm","$animate","childScope","previousElements","cleanUp","$destroy","nodes","endNode","nextSibling","getBlockNodes","leave","oldValue","showNull","newScope","createComment","enter","parent","value_select_dropdown_ValueSelectDropdownCtrl","giveFocus","domEl","setSelectionRange","diff_view_DeltaCtrl","observer","MutationObserver","mutations","observe","attributes","attributeFilter","characterData","childList","subtree","DeltaCtrl","$onDestroy","disconnect","LinkJSONCtrl","$anchorScroll","goToLine","line","switchView","place_tt","$tooltip","tmpScope","$new","scopeData","$digest","$win","startExpanded","code_editor_link","langMode","DEFAULT_MODE","maxLines","DEFAULT_MAX_LINES","tabSize","DEFAULT_TAB_SIZE","behavioursEnabled","DEFAULT_BEHAVIORS","aceElem","ace","default","codeEditor","editorSession","getSession","showGutter","autoScrollEditorIntoView","editorOptions","$blockScrolling","setScrollMargin","setPadding","DEFAULT_THEME_DARK","DEFAULT_THEME_LIGHT","lang","acequire","getCompleter","anyEditor","completers","setMode","aceModeName","setLangMode","codeEditorFocus","textarea","getValue","editorValue","$$postDigest","setEditorContent","commands","addCommand","bindKey","win","mac","editorTemplate","onColorChange","search_srv_SearchSrv","SearchSrv","recentIsOpen","getBool","getRecentDashboards","queryForRecentDashboards","score","removable","toggle","toggleRecent","dashIds","take","impression_srv","getDashboardOpened","resolve","dashboardIds","orderId","hit","isStarred","toggleStarred","starredIsOpen","getStarred","context_srv","isSignedIn","starred","limit","promises","hasFilters","folderIds","skipRecent","handleSearchResult","all","sortBy","results_1","results_1_1","toggleFolder","e_1_1","return","results_2_1","results_2","e_2_1","getDashboardTags","service","react_dom","react_dom_default","getReactComponent","reactComponent","namePart","applyFunctions","propsConfig","wrapApply","phase","$$phase","wrappedInApply","wrapped","applied","prop","expr","watchExpressions_1_1","actualExpr","exprWatchDepth","getPropWatchDepth","watchDepth","supportsWatchCollection","$watchCollection","listener","supportsWatchGroup","watchGroupExpressions","watchExpressions_1","renderComponent","component","$evalAsync","getPropConfig","findAttribute","propName","defaultWatch","isObject","ngModule","renderMyComponent","watchProps","onScopeDestroy","unmountComponent","unmountComponentAtNode","factory","reactComponentName","conf","injectableProps","getPropName","propExpressions","propTypes","search_query_parser","SearchQueryParser","parsedQuery","SearchCtrl","searchSrv","getTags","onTagFiltersChanged","openSearch","closeSearch","initialFolderFilterTitle","isEditor","onQueryChange","queryParser","search_SearchQueryParser","keywords","ignoreClose","giveSearchFocus","moveSelection","currentItem","getFlattenedResultForNavigation","dashboardIndex","selectedDash","folderIndex","selectedFolder","onFilterboxClick","preventClose","flattenedResult","newIndex","selectedItem","hideHeader","searchDashboards","folderContext","currentSearchId","localSearchId","queryHasNoFilters","filterByTag","removeTag","without","clearSearchFilter","showStarred","showImport","folderExpanding","flatMap","search_SearchCtrl","js_drop","dropOptions","tetherOptions","constraints","attachment","pin","$applyAsync","drop","drop_default","require","$formatters","LiveSrv","observers","getWebSocketUrl","protocol","core_config","getConnection","initPromise","conn","readyState","reject","WebSocket","onclose","reconnect","onmessage","handleMessage","onerror","onopen","stream","removeObserver","send","addObserver","streamName","LayoutSelectorCtrl","listView","gridView","newLayout","layout_selector_template","SwitchCtrl","internalOnChange","checked","switchClass","switch_template","labelClass","checkboxTemplate","DashboardSelectorCtrl","$onInit","dash","dashboard_selector_template","query_part_editor_template","part","clickFuncParam","paramIndex","$link","optional","updateParam","handleEvent","$event","inputKeyDown","$paramsContainer","paramValue","$paramLink","paramTemplate","partial","keypress","inputKeyPress","dynamicOptions","op","addTypeahead","partActions","showActionsMenu","triggerPartAction","empty","addElementsAndCompile","sql_part_editor_template","partDef","typeaheadMatcher","sqlPartEditorDirective","FormDropdownCtrl","inputElement","linkElement","modelChanged","labelMode","typeaheadUpdater","startOpen","open","getOptionsInternal","isPromiseLike","updateDisplay","lookupText","optionCache","optionTexts","allowCustom","updateValue","$option","form_dropdown_template","form_dropdown_FormDropdownCtrl","JsonEditorCtrl","newObject","fromJson","getContentForClipboard","json_editor_ctrl_JsonEditorCtrl","InvitedCtrl","$routeParams","contextSrv","formModel","code","invite","inviteCode","greeting","invitedBy","submit","inviteForm","$valid","invited_ctrl_InvitedCtrl","signup_ctrl_SignUpCtrl","SignUpCtrl","sidemenu","autoAssignOrg","navModel","verifyEmailEnabled","signUpForm","rsp","ResetPasswordCtrl","ldapEnabled","authProxyEnabled","disableLoginForm","sendResetEmail","sendResetForm","submitReset","resetForm","reset_password_ctrl_ResetPasswordCtrl","error_ctrl_ErrorCtrl","ErrorCtrl","navModelSrv","getNotFoundNav","AlertSrv","UtilSrv","$modal","showModal","hideModal","showConfirmModal","modalScope","dismiss","modal","modalClass","persist","keyboard","backdrop","modalEl","updateConfirmText","confirmTextValid","onAltAction","altActionText","util_srv_UtilSrv","timer_Timer","Timer","timers","promise","cancel","cancelAll","analytics_Analytics","Analytics","gaInit","ajax","dataType","ga","q","googleAnalyticsId","track","page","startAnalytics","googleAnalyticsSrv","close","openDrop","contentElement","classNames","openOn","hoverCloseDelay","tether","onClose","segment_srv_uiSegmentSrv","self","MetricSegment","fallbackText","newFake","newKeyValue","newCondition","condition","newOperators","ops","transformToSegments","addTemplateVars","variableTypeFilter","segments","newPlusButton","popoverSrv","addDirective","directiveInfo","DynamicDirectiveSrv","watchPath","childScope_1","dynamic_directive_srv_DynamicDirectiveSrv","fullPageReloadRoutes","angularUrl","store_store","actions","routeParams","urlWithoutBase","location_util","stripBaseFromUrl","bridge_srv_BridgeSrv","isUndefined","isNull","interpolateTemplateVars","HelpCtrl","shortcuts","Global","Dashboard","Time Range","help_HelpCtrl","scrollBarHTML","scrollRootClass","scrollRoot","scroller","grafanaScrollbar","scrollerClass","scrollParams","bar","barOnCls","scrollingCls","scrollbar","core_default","dispose","currentOrgId","getUserOrgs","OrgSwitchCtrl","setUsingOrg","org","setWindowLocation","org_switcher_template","org_switcher_OrgSwitchCtrl","profiler","MetricSelect","buildOptions","UNSAFE_componentWillReceiveProps","nextOptions","isEqual","getVariablesGroup","getSelectedOption","every","selectedOption","Metrics","metricDescriptors","metrics","metricType","getSelectedMetricDescriptor","initializeServiceAndMetrics","getDefaultProject","defaultProject","loadMetricDescriptors","getMetricTypes","services","metricDescriptor","getServicesList","getMetricsList","selectedMetricDescriptor","MetricSelect_MetricSelect","onServiceChange","onMetricTypeChange","getFilterKeysFunc","getFilterValuesFunc","buildSegmentModel","filterSegments","newOperator","ensurePlusButton","getFilters","hasNoFilterKeys","filterValues","removeSegment","getValuesForFilterKey","FilterSegments","removeFilterSegment","lastSegment","filterSegmentUpdated","addNewFilterSegments","seg","hideGroupBys","groupBySegments","groupBys","groupBy","getSegmentForValue","createLabelKeyElements","loading","labelData","metricLabels","elements","resourceTypeValue","defaultRemoveGroupByValue","getGroupBys","groupByChanged","groupBysChanged","getFilterValues","filterKey","shortKey","resourceLabels","StackdriverFilterCtrl","filtersChanged","query_filter_ctrl_StackdriverFilterCtrl","Filter","getScope","getLabels","functions","onToggleDisplayAdvanced","displayAdvancedOptions","Aggregations","setAggOptions","crossSeriesReducer","Alignments","perSeriesAligner","constants","AlignmentPeriods","alignmentPeriod","usedAlignmentPeriod","alignment","ap","secondsToHms","AliasBy","Project","projectName","displayHelp","displaRawQuery","Help","rawQuery","lastQueryError","Project_Project","onHelpClicked","ng-show","DefaultTarget","valueType","metricKind","onExecuteQuery","onDataError","onDataReceived","dataList","decodeURIComponent","err","lastQuery","queryRes","onPropertyChange","aliasBy","Metrics_Metrics","Aggregations_Aggregations","AnnotationsHelp","AnnotationQueryEditor_DefaultTarget","AnnotationQueryEditor","Filter_Filter","EmptyListCTA","Async","TagOption","TagBadge","removeIcon","tagOptions","newTags","TagFilter","onLoadOptions","filterOption","searchQuery","MultiValueLabel","MultiValueRemove","sidemenu_DropDownChild","listItemClassName","sidemenu_SideMenuDropDown","sidemenu_TopSectionItem","sidemenu_TopSection","cloneDeep","bootData","navTree","hideFromMenu","mainLinks","sidemenu_SignIn","connectWithReduxStore","loginUrl","templateHtml","BottomNavLinks","showOrgSwitcher","switchOrg","itemClicked","orgCount","profileNode","bottomNav","GraphContextMenu_templateObject_2","homeUrl","SideMenu","toggleSideMenuSmallBreakpoint","BottomSection","AppNotifications_AppNotificationItem","AppNotificationItem","appNotification","onClearNotification","AlertBox","copy_appNotification","AppNotificationList","onClearAppNotification","clearAppNotification","notifyApp","appNotifications","FunctionHelpButton","onDescriptionShow","func","onMoveLeft","onMoveRight","onRemove","lazy","rst2html","dangerouslySetInnerHTML","__html","createRef","updatePopperPosition","showingDescription","textAlign","FunctionEditor","renderContent","hideAfter","triggerRef","cursor","PureComponent","tinycolor","SearchField","white","dark4","spacing","dark1","black","tinycolor_default","lg","currentTarget","spellCheck","inputProps","spacer","getContextMenuSource","formatSourceDate","otherProps","renderHeader","timeFormat","xs","itemsToRender","onEmailChange","UserProfileEditForm","isSavingUser","onNameChange","onLoginChange","onSubmitProfileUpdate","UserTeams_UserTeams","UserTeams","loadTeams","memberCount","UserOrganizations_UserOrganizations","UserOrganizations","loadOrgs","setUserOrg","profile_ReactProfileWrapper","UserProvider","grafana_runtime_src","api","states","loadUser","UserProfileEditForm_UserProfileEditForm","updateProfile","updateUserProfile","SharedPreferences","resourceUri","useLokiSyntax","LokiQueryFieldForm","absolute","now","languageProvider","Connected","isSyntaxReady","setActiveOption","refreshLabels","syntaxProps","datasourceStatus","onRunQuery","history","onLabelsRefresh","syntaxLoaded","absoluteRange","registerAngularDirectives","react2angular","SideMenu_SideMenu","FunctionEditor_FunctionEditor","AppNotifications_AppNotificationList","TagFilter_TagFilter","QueryEditor_QueryEditor","AnnotationQueryEditor_AnnotationQueryEditor","GraphContextMenu","LokiAnnotationsQueryEditor","SearchResultsCtrl","toggleFolderExpand","onFolderExpanding","onSelectionChanged","navigateToFolder","toggleSelection","onItemClick","onTagSelected","$tag","search_results_SearchResultsCtrl","ManageDashboardsCtrl","selectAllChecked","canMove","starredFilterOptions","_f","selectedDashboards","e_3_1","folderUids","dashboardUids","e_4_1","getFolderIds","e_5","sections_1","sections_1_1","folderCount","dashCount","deleteFoldersAndDashboards","refreshList","getDashboardsToMove","e_6_1","afterSave","initTagFilter","tagFilterOptions","onTagFilterChange","selectedTagFilter","removeStarred","onStarredFilterChange","selectedStarredFilter","onSelectAllChanged","e_7","e_7_1","selectionChanged","clearFilters","createDashboardUrl","importDashboardUrl","manage_dashboards_ManageDashboardsCtrl","folderUid","time_series2","FieldType","app_core_config__WEBPACK_IMPORTED_MODULE_2__","pluginMeta","large","configPages","includes","buildInfo","isEnterprise","getDataSourceLoadingNav","pageName","basicAuth","authType","defaultRegion","author","HmKx","I+An","I/jn","ClearPlugin","anchorText","anchor","forward","deleteForward","panelEditorInitCompleted","refreshPanelEditor","_core_redux__WEBPACK_IMPORTED_MODULE_1__","_reducers__WEBPACK_IMPORTED_MODULE_2__","changePanelEditorTab","activeTab","_core_actions__WEBPACK_IMPORTED_MODULE_3__","openVizPicker","IjGO","datemath_namespaceObject","rangeutil_namespaceObject","getRelativeTimesList","isValidTimeSpan","isDate","moment_wrapper","isDate_default","parseString","mathString","strippedMathString","num","numFrom","includes_default","units","dateTime","endOf","startOf","subtract","each_default","groupBy_default","spans","M","rangeOptions","timepickerSettings","currentDisplay","absoluteFormat","isLast","opt","rangeIndex","parts","amount","toMoment","getTimeZoneGroups","themeMock","themes_default","fontFamily","sansSerif","monospace","h1","h2","h3","h4","h5","h6","regular","semibold","hoverDecoration","breakpoints","insetSquishMd","xxs","xl","gutter","zIndex","dropdown","navbarFixed","modalBackdrop","dark2","dark3","dark5","dark6","dark7","dark8","dark9","dark10","gray1","gray2","gray3","gray4","gray5","gray6","gray7","grayBlue","blueBase","blueShade","blueLight","blueFaint","redBase","redShade","greenBase","greenShade","blue","red","yellow","purple","types_theme","basicColors","inputBlack","brandPrimary","brandSuccess","brandWarning","brandDanger","queryRed","queryGreen","queryPurple","queryKeyword","queryOrange","online","critical","bodyBg","pageBg","textStrong","textWeak","textEmphasis","textFaint","linkDisabled","linkHover","linkExternal","headingColor","scrollbar2","light_basicColors","getTheme","mockTheme","mock","J4KJ","dashboardInitServices","dashboardInitCompleted","dashboardInitFailed","removeDashboardPermission","addDashboardPermission","importDashboard","removeDashboard","app_core_redux__WEBPACK_IMPORTED_MODULE_2__","app_core_copy_appNotification__WEBPACK_IMPORTED_MODULE_3__","_plugins_state_actions__WEBPACK_IMPORTED_MODULE_4__","app_core_actions__WEBPACK_IMPORTED_MODULE_5__","updateDashboardPermission","getDashboardPermissions","utils_query","ReplaySubject","hasTransformations","newSeries","pipe","featureToggles","cacheTimeout","widthPixels","minInterval","request","ds_1","lowerIntervalLimit","err_1","pipeToSubject","startTime","rangeRaw","getDataSource","hiddenQueries","template_srv","calculateInterval","assign","observable","lastResult","runRequest","subject","PanelQueryRunner","setTransformations","complete","datasource_srv","PanelModel_PanelModel","notPersistedProperties","isEditing","isInView","hasRefreshed","cachedPluginOptions","queryRunner","repeatPanelId","repeatDirection","pluginVersion","transparent","PanelModel","defaultsDeep","ensureQueryIds","updateOptions","setViewMode","updateGridPos","newPos","sizeChanged","resizeDone","initialized","mustKeepProps","applyPluginOptionDefaults","pluginLoaded","onPanelMigration","getPluginVersion","changePlugin","newPlugin","oldOptions","getOptionsToRemember","oldPluginId","wasAngular","angularPanelCtrl","restorePanelOptions","onPanelTypeChanged","old","addQuery","PanelQueryRunner_PanelQueryRunner","isAngularPlugin","Kcoi","O","colorCodes","colorCodesLight","4","styleCodes","Color","bright","Code","dim","defaultBrightness","inverted","inverse","rgb","Colors","rgbName","alpha","subtypes","noBrightness","noItalic","noUnderline","stringWrappingMethods","noColor","camel","noBgColor","wrapBefore","assignStringWrappingAPI","openCode","closeCode","denormalizeBrightness","wrap","BRACKET","CODE","codes","TEXT","code_1","codes_1_1","codes_1","rawParse","underline","italic","bold","foreColor","styledSpan","bgColor","clean","styles_1_1","isBrightness","reset","subtype","names","Symbol","lightMagenta","cyan","Ke2B","LegendTable","emotion__WEBPACK_IMPORTED_MODULE_2__","_themes_ThemeContext__WEBPACK_IMPORTED_MODULE_3__","sortDesc","onToggleSort","columnHeader","KgU3","_data__WEBPACK_IMPORTED_MODULE_0__","_dataFrame__WEBPACK_IMPORTED_MODULE_1__","_dataLink__WEBPACK_IMPORTED_MODULE_2__","_logs__WEBPACK_IMPORTED_MODULE_3__","_navModel__WEBPACK_IMPORTED_MODULE_4__","_select__WEBPACK_IMPORTED_MODULE_5__","_time__WEBPACK_IMPORTED_MODULE_6__","_graph__WEBPACK_IMPORTED_MODULE_11__","_ScopedVars__WEBPACK_IMPORTED_MODULE_12__","_transformations__WEBPACK_IMPORTED_MODULE_13__","_vector__WEBPACK_IMPORTED_MODULE_14__","rc_cascader__WEBPACK_IMPORTED_MODULE_2__","app_features_explore_QueryField__WEBPACK_IMPORTED_MODULE_4__","app_features_explore_slate_plugins_braces__WEBPACK_IMPORTED_MODULE_5__","suggestion","typeaheadContext","typeaheadText","nextChar","getNextCharacter","selectedOptions","onChangeLogLabels","onChangeQuery","lokiLanguageProvider","wrapperClasses","labelKey","suggestions","queryResponse","logLabelOptions","cleanText","chooserText","hasSyntax","hasLogLabels","Disconnected","getChooserText","buttonDisabled","showError","loadData","expandIcon","onPopupVisibleChange","additionalPlugins","onTypeahead","onWillApplySuggestion","willApplySuggestion","portalOrigin","timespan","app_core_actions__WEBPACK_IMPORTED_MODULE_3__","react_redux__WEBPACK_IMPORTED_MODULE_4__","_grafana_runtime__WEBPACK_IMPORTED_MODULE_5__","react_hot_loader__WEBPACK_IMPORTED_MODULE_6__","app_core_app_events__WEBPACK_IMPORTED_MODULE_7__","LoginCtrl","password","pw","confirmNew","oldPassword","toGrafana","catch","isLoggingIn","isChangingPassword","redirect","oauth","skipPasswordChange","mapDispatchToProps","updateLocation","Lmi3","LtRX","getFactors","useDataFrames","panelDataObserver","processDataError","Loading","handleDataFrames","legacy","handleQueryResult","onMetricsPanelRefresh","onPanelTearDown","MetricsPanelCtrl","querySubscription","snapshotData","issueQueries","cancelled","inspector","resolution","intervalOverride","intervalMs","getAdditionalMenuItems","explore","panel_ctrl","query_ctrl","AlertTabCtrl","metrics_panel_ctrl_MetricsPanelCtrl","LzuI","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","Warning","Info","alertClass","getIconFromSeverity","getFieldLinksSupplier","getPanelLinksSupplier","_grafana_data__WEBPACK_IMPORTED_MODULE_0__","_link_srv__WEBPACK_IMPORTED_MODULE_1__","_scopedVars","view","colIndex","rowIndex","calc","MIBK","_stylesFactory__WEBPACK_IMPORTED_MODULE_3__","MdX+","setTimeSrv","getTimeSrv","app_core_core_module__WEBPACK_IMPORTED_MODULE_2__","app_core_utils_timePicker__WEBPACK_IMPORTED_MODULE_4__","TimeSrv","timer","zoomOut","shiftTime","routeUpdated","autoRefreshBlocked","visibilityState","refreshDashboard","initTimeFromUrl","parseTime","timeAtLoad","setAutoRefresh","parseUrlParam","epoch","getTimeWindow","timeWindow","timeWindowMs","interval_to_ms","urlRange","timeHasChangedSinceLoad","cancelNextRefresh","intervalMs_1","refreshTimer","startNextRefreshTimer","timeRangeUpdated","afterMs","isGrafanaVisible","fromRouteUpdate","oldRefresh","NXk7","BackendSrv","getBackendSrv","app_features_dashboard_state_DashboardModel__WEBPACK_IMPORTED_MODULE_5__","_grafana_runtime__WEBPACK_IMPORTED_MODULE_6__","$http","HTTP_REQUEST_CANCELED","patch","withNoBackendCache","noBackendCache","requestErrorHandler","retry","requestIsLocal","firstAttempt","headers","showSuccessAlert","status","loginPing","addCanceler","requestId","canceler","inFlightRequests","resolveCancelerIfExists","cancelers","datasourceRequest","defer","Authorization","silent","statusText","shift","getDashboardByUid","overwrite","createFolder","tasks","folderUids_1","folderUids_1_1","createTask","dashboardUids_1","dashboardUids_1_1","dashboardUid","executeInOrder","moveDashboards","toFolder","dashboardUids_2_1","dashboardUids_2","moveDashboard","totalCount","alreadyInFolderCount","alreadyInFolder","fullDash","deferred","succeeded","isHandled","ignoreRejections","NoBN","Nu4n","webpackEmptyContext","req","filterPanelDataToQuery","classnames__WEBPACK_IMPORTED_MODULE_2__","lodash__WEBPACK_IMPORTED_MODULE_3__","lodash__WEBPACK_IMPORTED_MODULE_3___default","app_features_plugins_datasource_srv__WEBPACK_IMPORTED_MODULE_4__","app_features_dashboard_services_TimeSrv__WEBPACK_IMPORTED_MODULE_6__","_grafana_ui__WEBPACK_IMPORTED_MODULE_7__","_grafana_data__WEBPACK_IMPORTED_MODULE_8__","angularQueryEditor","isCollapsed","loadedDataSourceValue","hasTextEditMode","onToggleCollapse","onRemoveQuery","forceUpdate","loadDatasource","getAngularQueryComponentScope","dataSourceValue","angularScope","digest","notifyAngularQueryEditorsOfData","renderPluginEditor","renderCollapsedText","getCollapsedText","inMixedMode","bodyClasses","query-editor-row__body--collapsed","rowClasses","query-editor-row--disabled","gf-form-disabled","onToggleEditMode","onMoveQuery","onCopyQuery","onDisableQuery","InlineList","_AbstractList__WEBPACK_IMPORTED_MODULE_2__","inline","OEPh","OPwE","OQpy","OTXG","addQueryRowAction","changeModeAction","changeQueryAction","changeSizeAction","clearQueriesAction","clearOriginAction","highlightLogsExpressionAction","loadDatasourceMissingAction","loadDatasourcePendingAction","loadDatasourceReadyAction","queryStreamUpdatedAction","queryStoreSubscriptionAction","scanStopAction","setQueriesAction","splitCloseAction","updateUIStateAction","toggleTableAction","toggleGraphAction","toggleLogLevelAction","resetExploreAction","queriesImportedAction","testDataSourceSuccessAction","testDataSourceFailureAction","loadExploreDatasources","setUrlReplacedAction","changeRangeAction","changeLoadingStateAction","app_core_redux_actionCreatorFactory__WEBPACK_IMPORTED_MODULE_0__","changeRefreshIntervalAction","initializeExploreAction","modifyQueriesAction","removeQueryRowAction","scanStartAction","splitOpenAction","updateDatasourceInstanceAction","testDataSourcePendingAction","historyUpdatedAction","setPausedStateAction","Obii","_utils__WEBPACK_IMPORTED_MODULE_0__","_types__WEBPACK_IMPORTED_MODULE_1__","_vector__WEBPACK_IMPORTED_MODULE_2__","_dataframe__WEBPACK_IMPORTED_MODULE_3__","_transformations__WEBPACK_IMPORTED_MODULE_4__","_datetime__WEBPACK_IMPORTED_MODULE_5__","_text__WEBPACK_IMPORTED_MODULE_6__","OpWu","PGgk","PQb9","getAggregationOptionsByMetric","getLabelKeys","lodash_uniqBy__WEBPACK_IMPORTED_MODULE_1__","lodash_uniqBy__WEBPACK_IMPORTED_MODULE_1___default","_constants__WEBPACK_IMPORTED_MODULE_2__","getMetricTypesByService","interpolatedMetricType","selectedService","metricTypeExistInArray","metricTypes","selectedMetricType","PSiG","assignModelProperties","removeDefaults","SubMenuCtrl","variableSrv","annotations","templating","annotationStateChanged","variableUpdated","openEditView","SubMenuCtrl_SubMenuCtrl","SubMenu_SubMenu","SubMenu","seconds","numyears","numdays","numhours","numminutes","numseconds","nummilliseconds","strings","nr","outof","interval_regex","lowLimitInterval","lowLimitMs","round_interval","intervals_in_seconds","sec","describe_interval","diameter","slugifyForUrl","stringToJsRegex","decimalPos","parseFloat","Proxy","valueFormats","receiver","Reflect","Pfkp","Q6em","QJHg","grafana_data_src","logs_model_a","utils_text","dedupLogRows","filterLogLevels","dataFrameToLogsModel","warning","trace","unknown","lightTheme","isoDateRegexp","logs","strategy","none","exact","numbers","isDuplicateRow","previous","duplicates","rowCopy","dedupedRows","logLevel","isLogsData","metricSeries","dataFrame_1","dataFrame_1_1","logSeries","logsModel","allLabels","uniqueLabels","commonLabels","hasUniqueLabels","fieldCache","stringField","logLevelField","seriesLogLevel","timeEpochMs","timeFromNow","timeLocal","timeUtc","hasAnsi","strip","kind","LabelsMap","limits","logSeriesToLogsModel","seriesByLevel","lastTs","LogLevelColor","bucketSize","seriesList_1","seriesList_1_1","makeSeriesForLogs","getGraphSeriesModel","showBars","showLines","showPoints","asTable","QueryPartDef","QueryPart","functionRenderer","suffixRenderer","category","addStrategy","updateText","innerExpr","hasMultipleParamsInString","strValue","partVal","trim","paramType","quote","QQVG","_grafana_ui__WEBPACK_IMPORTED_MODULE_2__","ctaStyle","infoBoxStyles","buttonIcon","buttonLink","buttonTitle","proTip","proTipLink","proTipLinkTitle","proTipTarget","infoBox","infoBoxTitle","footer","ctaElementClassName","ctaElement","callToActionElement","Qhie","$templateCache","$strapConfig","$emit","bsTooltip","$this","is","Constructor","_tooltip","bsTypeahead","shown","matchAll","Qinm","createChangeHandler","PasswordFieldEnum","secureJsonData","QqjE","Qrgx","QzbV","RH9q","LogLevel","LogsMetaKind","LogsDedupStrategy","LogsDedupDescription","_vectorToArray__WEBPACK_IMPORTED_MODULE_0__","capacity","tail","getAddFunction","setCapacity","setAppendMode","RnhZ","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./uk","./uk.js","./ur","./ur.js","webpackContext","webpackContextResolve","RyIb","Interval","dateTimeFormatters_a","Year","Month","Week","Day","Hour","Minute","Second","Millisecond","toNanoSeconds","toFixedScaled","toMicroSeconds","toMilliSeconds","trySubstract","value1","value2","toSeconds","toMinutes","toHours","toDays","toDuration","timeScale","long","INTERVALS_IN_SECONDS","decrementDecimals","decimalsCount","toClock","format_1","format_2","asHours","toDurationInSeconds","toDurationInHoursMinutesSeconds","numHours","numMinutes","numSeconds","toTimeTicks","toClockMilliseconds","toClockSeconds","dateTimeAsIso","isUtc","isSame","dateTimeAsUS","dateTimeFromNow","toPercent","toPercentUnit","toHex0x","hexString","toHex","toExponential","scaledUnits","scaled","scaler","prefixes","toFixedUnit","sci","locale","formats","decimalSIPrefix","currency","binarySIPrefix","simpleCountUnit","getValueFormat","getValueFormatterIndex","getValueFormats","categories","hasBuiltIndex","additionalDecimals","extArray","toLocaleString","maximumFractionDigits","buildFormats","getCategories","categories_1_1","categories_1","cat","Store","localStorage","ret","setObject","SZug","Sr1g","SrNa","Szrz","T9PE","enabled","Profiler","AppNotificationSeverity","AppNotificationTimeout","app_core_config__WEBPACK_IMPORTED_MODULE_0__","URwt","UkAP","Ukuu","UvM7","app_types__WEBPACK_IMPORTED_MODULE_1__","Success","defaultWarningNotification","defaultSuccessNotification","defaultErrorNotification","app_core_utils_errors__WEBPACK_IMPORTED_MODULE_2__","updateUserOrg","loadingStates","changePassword","app_core_config__WEBPACK_IMPORTED_MODULE_3__","VKbU","es","utils_ticks","module_TextPanelCtrl","TextPanelCtrl","panelDefaults","defaultContent","onInitEditMode","onRender","throttle","updateContent","renderText","safeContent","scrollable","TextPanelEditor_TextPanelEditor","TextPanelEditor","modes","onModeChange","onOptionsChange","onContentChange","TextPanel_TextPanel","updateHTML","processContent","prepareHTML","replaceVariables","TextPanel","prepareMarkdown","prepareText","setPanelChangeHandler","prevPluginId","prevOptions","onOptionToggle","newOption","GraphPanelEditor","onGraphOptionsChange","graph","onLegendOptionsChange","onToggleLines","onToggleBars","onTogglePoints","GraphLegendEditor","onSeriesColorChange","onSeriesAxisToggle","onHorizontalRegionSelected","graphSeriesModel","GraphPanelController","updatedSeriesOptions","seriesOptionsUpdate","onSeriesOptionsUpdate","onChangeTimeRange","onSeriesToggle","toggledSeries","setDefaults","setEditor","GraphPanelEditor_GraphPanelEditor","injector","invoke","eventManager","manager","onEdit","editEvent","markerElementToAttachTo","createEditPopover","panelCtrl","editorOpened","editorClosed","DrawableEvent","drawFunc","clearFunc","moveFunc","_object","_drawFunc","_clearFunc","_moveFunc","_position","_width","_height","getObject","VisualEvent","drawableEvent","_options","_drawableEvent","_hidden","visual","getParent","_parent","unhide","EventMarkers","_types","_plot","eventsEnabled","getEvents","_events","setTypes","setupEvents","partition","regions","ve","_buildDiv","vre","ao","bo","drawEvents","_insidePlot","isHidden","updateEvents","_clearEvents","markerSize","markerShow","lineStyle","markerTooltip","that","eventType","eventTypeId","topOffset","border-left-color","marker_1","line-height","border-left","border-right","border-top","border-bottom","editModel","hover","createAnnotationToolip","_buildRegDiv","regionWidth","timeEnd","timeTo","border-left-width","region","xc","eventMarkers","jquery_flot_events_EventMarkers","hideEvents","showEvents","getSeriesFn","posX","initial","lower","upper","middle","absoluteTime","innerHtml","xMode","hoverIndex","hoverDistance","pointTime","minTime","hidden","findHoverIndexFromData","minDistance","value_type","lastValue","findHoverIndexFromDataPoints","distance","shared","clearCrosshair","hoverInfo","seriesHtml","tooltipFormat","panelRelY","scrollTop","innerHeight","allSeriesMode","sharedCrosshairModeOnly","seriesHoverInfo","highlightClass","renderAndShow","ThresholdManager","getHandleHtml","handleIndex","valueStr","colorMode","initDragging","posTop","handleElem","parents","lastY","thresholds","dragging","clientY","stopped","graphValue","needsCleanup","renderHandle","defaultHandleTopPos","handleTopPos","valueCanvasPos","shouldDrawHandles","editingThresholds","prepare","hasSecondYAxis","thresholdMargin","addFlotOptions","gtLimit","ltLimit","lineColor","colorModes","themeDependent","darkColor","lightColor","timeRegion","Light","TimeRegionManager","timeRegions","fromStart","fromEnd","timeRegionColor","timeRegionsCopy","fromDayOfWeek","toDayOfWeek","parseTimeRange","hRange","dayOfWeek","tRange","unix","isoWeekday","annotations_all","hiddenSeries","getSeriesValues","histogram","minBound","getBucketBound","maxBound","bound","bound_1","histogamSeries","convertValuesToHistogram","alignYLevel","yAxes","checkCorrectAxes","yLeft","yRight","oneSide","checkOneSide","checkOppositeSides","rate","rateRight","rateLeft","absLeftMin","absLeftMax","absRightMax","upLeft","upRight","absRightMin","downRight","downLeft","getRate","checkTwoCross","classnames","LegendItem","onLabelClick","onToggleAxis","renderLegendValues","legendValueItems","LEGEND_STATS_1","LEGEND_STATS","LEGEND_STATS_1_1","valueName","valueFormatted","LegendValue","seriesOptionClasses","graph-legend-series--right-y","valueItems","seriesLabel","LegendSeriesItem_LegendSeriesLabel","LegendSeriesLabel","LegendSeriesItem_LegendSeriesIcon","SeriesIcon","LegendSeriesIcon","enableNamedColors","showColorPicker","hideColorPicker","GraphLegend","onToggleSeries","toggleSeriesExclusiveMode","sortLegend","alignAsTable","optionalClass","rightSide","sideWidth","seriesValuesProps","seriesHideProps","sortProps","legendClass","legendStyle","Legend_LegendTable","legendProps","Legend_LegendSeriesList","LegendSeriesList","LegendSeriesItem_LegendItem","statName","Legend_LegendTableHeaderItem","LegendTableHeaderItem","Legend","hideHorizontalTrack","Legend_GraphLegend","ConfigProvider","Legend_Legend_Legend","GraphElement","getContextMenuItemsSupplier","flotPosition","linksSupplier","updateTime","dataLinks","contextMenu","contextMenuCtrl","panelWidth","thresholdManager","threshold_manager_ThresholdManager","timeRegionManager","time_region_manager_TimeRegionManager","GraphTooltip","sortedSeries","onPanelTeardown","onGraphHover","onGraphHoverClear","onPlotSelected","onPlotClick","legendElem","renderData","buildFlotPairs","graphHeight","hasChildNodes","renderPanel","valueOptions","legendReactElem","LegendWithThemeProvider","sharedTooltipModeEnabled","scrollContextElement","closest","contextMenuSourceItem","linksSupplier_1","fieldConfig","fieldDisplay","linkSuppliers","setScrollContextElement","setSource","setMenuItemsSupplier","toggleMenu","shouldAbortRender","drawHook","dataWarning","processOffsetHook","gridMargin","panelOptions","processRangeHook","alignLevel","getMinTimeStepOfSeries","buildFlotOptions","prepareXAxis","addFlotEvents","sortSeries","callPlot","addXSeriesAxis","histMin","histMax","buckets","convertToHistogramData","addXHistogramAxis","addXTableAxis","addTimeAxis","incrementRenderCounter","renderError","stackpercent","percentage","translateFillOption","getFillGradient","fillGradient","gridColor","labelMarginX","haveSortBy","haveSortOrder","sortOrder","shouldSortBy","getTimezone","time_format","defaultTicks","tickValues","tickStep_1","ticksNum","configureAxisMode","configureYAxisOptions","logBase","parseNumber","secondY","applyLogScale","toNumber","MIN_VALUE","minSetToZero","generateTicksForLogScaleYAxis","nextTick","secPerTick","graphDirective","graph_GraphElement","SeriesOverridesCtrl","overrideMenu","currentOverrides","colorPickerModel","addOverrideOption","propertyName","addSeriesOverride","updateCurrentOverrides","openColorSelector","colorSelected","autoClose","removeOverride","getSeriesNames","thresholds_form_ThresholdFormCtrl","unbindDestroy","ThresholdFormCtrl","removeThreshold","onFillColorChange","newColor","onLineColorChange","onThresholdTypeChange","setAlpha","toRgbString","TimeRegionFormCtrl","editingTimeRegions","addTimeRegion","removeTimeRegion","time_regions_form_TimeRegionFormCtrl","DataProcessor","getSeriesList","toTimeSeries","aliasColors","colorIndex","isOutsideRange","setPanelDefaultsForNewXAxisMode","validateXAxisSeriesValue","validOptions","getXAxisValueOptions","pluckDeep","propertyParts","axes_editor_AxesEditorCtrl","unitFormats","logScales","linear","log (base 32)","xAxisModes","Time","Histogram","xAxisStatOptions","setUnitFormat","xAxisModeChanged","processor","onDataFramesReceived","xAxisValueChanged","AxesEditorCtrl","axesEditorComponent","GraphContextMenuCtrl","el","menuItemsSupplier","GraphCtrl","annotationsSrv","seriesOverrides","onContextMenuClose","getDataFrameByRefId","data_processor_DataProcessor","onDataSnapshotLoad","onInitPanelActions","onDataLinksChange","getAnnotations","datasourcePromises","annotationsPromise","frames","removeSeriesOverride","toggleLegend","legendValuesOptionChanged","exportCsv","DashListCtrl","recent","headings","header","getSearch","starDashboard","newState","PluginListCtrl","update","gotoPlugin","updateAvailable","embedded","pluginList","viewModel","hasUpdate","AlertListPanel","showOptions","sortOrderOptions","currentAlerts","alertHistory","onlyAlertsOnDashboard","dashboardFilter","nameFilter","sortResult","alertDef","updateStateFilter","getAlertsPromise","getCurrentAlertState","getStateChanges","dashboardQuery","dashboardTags","dashboardTag","al","stateModel","newStateDateAgo","newStateDate","noAlertsMessage","AnnoListPanel","onAnnoClick","anno","_timeOffset","navigateBefore","navigateAfter","onTagClick","queryTags","onUserClick","queryUser","showUser","showTags","showTime","renderTags","loaded","doSearch","onlyFromThisDashboard","onlyInTimeRange","backend_srv","incr","hasFilter","onClearUser","AbstractList","AnnoListEditor","onToggleShowUser","navigateToPanel","onToggleOnlyFromThisDashboard","onToggleOnlyInTimeRange","onTagTextChange","onToggleShowTime","onToggleShowTags","onNavigateBeforeChange","onNavigateAfterChange","onToggleNavigateToPanel","onLimitChange","annolist_module_plugin","AnnoListPanel_AnnoListPanel","AnnoListEditor_AnnoListEditor","colorScheme","maxValue","minValue","d3_scale_chromatic_src","invert","colorScaleInverted","d3","colorInterpolator","domain","legendOpacityScale","colorScale","exponent","rangeFrom","rangeTo","legendWidth","valuesRange","childNodes","tickStepSize","firstTick","getFirstCloseTick","isValueCloseTo","buildLegendTicks","legendValueScale","LEGEND_TICK_SIZE","svgElem","baseVal","getSvgElemHeight","LEGEND_VALUE_MARGIN","getSvgElemX","colorRect","LEGEND_PADDING_LEFT","posY","xAxis","valueTo","getColorScale","colorSchemes","legendHeight","valuesNumber","rangeStep","legendRects","selectAll","drawSimpleColorLegend","colorOptions","legendOpacityScale_1","cardColor","drawSimpleOpacityLegend","clearLegend","isEmpty","cards","cardStats","LEGEND_SEGMENT_WIDTH","widthFactor","drawColorLegend","opacityScale","getOpacityScale","drawOpacityLegend","log (base 2)","log (base 1024)","dataFormats","Time series","Time series buckets","Auto","heatmap_axes_editor_AxesEditorCtrl","heatmapDisplayEditor","HeatmapDisplayEditorCtrl","label1","label2","parseHistogramLabel","convertToCards","xBucket","yBucket","card","convertToHeatMap","yBucketSize","xBucketSize","heatmap","bucketBound","heatmap_data_converter_getBucketBound","TIME_INDEX","bucketNum","VALUE_INDEX","pointExt","pushToXBuckets","yBucketSplitFactor","getLogScaleBucketBounds","bounds","convertToLogScaleValueBuckets","getBucketBounds","pushToYBuckets","convertToValueBuckets","getValueBucketBound","getLogScaleBucketBound","powTop","additionalBucketSize","additionalLog","valueLog","getDistance","logp","HeatmapTooltip","getBucketIndexes","xBucketIndex","yBucketIndex","boundBottom","boundTop","countValueFormatter","bucketBoundFormatter","xData","yData","bucket","bucketIndex","tooltipDecimals","tickValueFormatter","tooltipHtml","tsBuckets","valIndex","tsBucketsFormatted","yBucketBound","showHistogram","addHistogram","move","getXBucketIndex","getYBucketIndex","getSharedTooltipPos","heatmapPanel","xScale","chartHeight","histogramData","histXScale","yScale","barNumberFactor","histogramDomain","histYScale","tooltipWidth","clientWidth","tooltipHeight","clientHeight","innerWidth","pageYOffset","DATA_RANGE_WIDING_FACTOR","HeatmapRenderer","$heatmap","heatmap_tooltip_HeatmapTooltip","dataRangeWidingFactor","drawSharedCrosshair","setElementHeight","getYAxisWidth","axisText","getBBox","getXAxisHeight","axisLinePosition","addXAxis","chartWidth","grafanaTimeFormatter","tickFormat","tickPadding","yAxisWidth","addYAxis","tickInterval","heatmapStats","wideYAxisRange","yMin","yMax","decimalsAuto","flotTickSize","tickSizeInner","tickSizeOuter","yWiding","addLogYAxis","adjustLogRange","minLog","adjustLogMin","adjustLogMax","logScaleTickValues","addYAxisFromBuckets","tickShift","domainMin","domainMax","tickValue","fixYAxisTickSize","addAxes","chartTop","chartBottom","dataFormat","xAxisHeight","addHeatmapCanvas","heatmapElem","cardPadding","cardRound","addHeatmap","yBuckets","emptyBucket","minBucket","newBucket","mergeZeroBuckets","cardsData","maxValueAuto","minValueAuto","setCardSize","getCardX","getCardWidth","getCardY","getCardHeight","getCardColor","getCardOpacity","mouseOverBucket","highlightCard","resetCardHighLight","darker","strokeColor","brighter","currentCard","originalFillColor","xGridSize","yGridSize","splitFactor","cardWidth","cardHeight","getEventOffset","elemOffset","clientX","onMouseUp","selectionRange","limitSelection","drawSelection","getEventPos","drawCrosshair","emitGraphHoverEvent","posX1","posX2","selectionX","selectionWidth","graphTooltip","heatmap_ctrl_colorModes","HeatmapCtrl","opacityScales","onSnapshotLoad","onCardColorChange","axesEditor","getUnitFormats","convertHistogramToHeatmapData","convertTimeSeriesToHeatmapData","bucketsData","xBucketNumber","xBucketSizeByNumber","parseSeries","yBucketNumber","hideZeroBuckets","getPanelDataSourceType","sortSeriesByLabel","reverseYBuckets","calculateBucketSize","flotpairs","parseHistogramSeries","rendering_HeatmapRenderer","rendering","timeKey","cells","columnNames","fromCharCode","noTableIndex","getColumns","maxDocs","flattened","doc","z","tableCol","editor_TablePanelEditorCtrl","TablePanelEditorCtrl","transformers","updateTransformHints","canSetColumns","columnsHelpMessage","getColumnOptions","dataRaw","addColumn","addColumnSegment","plusButton","transformChanged","removeColumn","ColumnOptionsCtrl","activeStyleIndex","columnTypes","fontSizes","dateFormats","mappingTypes","getColumnNames","addColumnStyle","stylesCount","indexToInsert","mappingType","removeColumnStyle","invertColorOrder","addValueMap","valueMaps","removeValueMap","addRangeMap","rangeMaps","removeRangeMap","column_options_ColumnOptionsCtrl","setTable","initColumns","formatters","colorState","createColumnFormatter","getColorForValue","defaultCellFormatter","dateFormat","setColorState","valueFormatter_1","numericValue","renderRowVariables","formatColumnValue","renderCell","columnIndex","addWidthHack","cellStyle","columnHtml","cellLink","linkUrl","cellLinkTooltip","linkTooltip","cellTarget","linkTargetBlank","cellClasses","cellClass","pageSize","startPos","endPos","rowClass","rowStyle","cellHtml","render_values","newRow","TableRenderer","TablePanelCtrl","$sanitize","showHeader","desc","pageIndex","tablePanelEditor","columnOptionsTab","table_model","transformDataToTable","renderer_TableRenderer","isTimezoneUtc","toggleColumnSort","tableData","panelHeight","panelElem","rootElem","tbodyElem","footerElem","pageCount","startPage","endPage","paginationList","activeClass","pageLinkElem","max-height","filterData","setAdhocFilter","sdk","TablePanelEditor","onToggleShowHeader","onToggleFixedHeader","fixedHeader","onToggleRotate","rotate","onFixedColumnsChange","fixedColumns","inputWidth","Table","TablePanel","TablePanel_TablePanel","TablePanelEditor_TablePanelEditor","SingleStatCtrl","linkSrv","fieldNames","valueNameOptions","prefixFontSize","postfixFontSize","colorBackground","colorValue","sparkline","thresholdMarkers","thresholdLabels","tableColumn","onFramesReceived","onSparklineColorChange","onSparklineFillChange","migrateToGaugePanel","migrate","firstTimeField","getDistinctNames","fieldInfo","processField","mappings","noValue","calcField","canModifyText","setColoring","panelColorIndex","rangeMap","linkInfo","$panelContainer","fontSizePercent","applyColoring","BASE_FONT_SIZE","colorPrefix","colorPostfix","postfix","dimension","invalidGaugeRange","plotCanvas","plotCss","colorMap","fontScale","gaugeWidthReduceRatio","thresholdMarkersWidth","gaugeWidth","plotSeries","addSparkline","full","dynamicHeightMargin","strVale","getBigValueHtml","plugin_loader_e_1","plugin_loader_a","standardFieldDisplayOptions","SingleStatPanel_SingleStatPanel","SingleStatPanel","renderValue","minX","maxX","openMenu","targetClassName","getValues","renderCounter","orientation","ColoringEditor","onToggleColorBackground","onToggleColorValue","onToggleColorPrefix","onToggleColorPostfix","FontSizeEditor","setPrefixFontSize","setValueFontSize","setPostfixFontSize","fontSizeOptions","SparklineEditor","onToggleShow","onToggleFull","SingleStatEditor_SingleStatEditor","SingleStatEditor","onThresholdsChanged","fieldOptions","onDefaultsChange","onValueMappingsChanged","onDisplayOptionsChanged","onDataLinksChanged","link_srv","showMinMax","FontSizeEditor_FontSizeEditor","ColoringEditor_ColoringEditor","SparklineEditor_SparklineEditor","onSparklineChanged","valueMappings","maxLinks","helpFlags1","checksDone","note","cta","getMetricSources","builtIn","GettingStarted","stepIndex","nextStep","currentStep","passed","gettingstarted_module_plugin","GettingStarted_GettingStarted","GaugePanelEditor","onToggleThresholdLabels","showThresholdLabels","showThresholdMarkers","onToggleThresholdMarkers","GaugePanel","standardGaugeFieldOptions","gauge_types_defaults","GaugePanel_GaugePanel","GaugePanelEditor_GaugePanelEditor","setMigrationHandler","pieChartOptions","PIE","DONUT","PieChartOptionsBox_PieChartOptionsBox","onPieTypeChange","pieType","onStrokeWidthChange","strokeWidth","PieChartOptionsBox","PieChartPanelEditor_PieChartPanelEditor","PieChartPanelEditor","PieChartPanel","piechart_types_defaults","piechart_module_plugin","PieChartPanel_PieChartPanel","BarGaugePanel","itemSpacing","getItemSpacing","displayMode","orientationOptions","Horizontal","Vertical","BarGaugePanelEditor_BarGaugePanelEditor","BarGaugePanelEditor","onDisplayModeChange","onOrientationChange","displayModes","bargauge_module_plugin","BarGaugePanel_BarGaugePanel","bargauge_types_defaults","Descending","Ascending","onToggleTime","onShowValuesChange","LogsPanelEditor","newResults","built_in_plugins","app/plugins/datasource/loki/module","app/plugins/datasource/mixed/module","app/plugins/datasource/mysql/module","app/plugins/datasource/postgres/module","app/plugins/datasource/mssql/module","module_namespaceObject","graph2_module_namespaceObject","dashlist_module_namespaceObject","pluginlist_module_namespaceObject","alertlist_module_namespaceObject","app/plugins/panel/annolist/module","annolist_module_namespaceObject","app/plugins/panel/heatmap/module","heatmap_module_namespaceObject","app/plugins/panel/table/module","table_module_namespaceObject","app/plugins/panel/table2/module","table2_module_namespaceObject","app/plugins/panel/singlestat/module","singlestat_module_namespaceObject","app/plugins/panel/singlestat2/module","singlestat2_module_namespaceObject","app/plugins/panel/gettingstarted/module","gettingstarted_module_namespaceObject","app/plugins/panel/gauge/module","gauge_module_namespaceObject","piechart_module_namespaceObject","bargauge_module_namespaceObject","PanelPluginError_PanelPluginError","justifyContent","PanelPluginError","importPluginModule","importDataSourcePlugin","importAppPlugin","importPanelPlugin","bust","exposeToPlugin","registerDynamic","registry","newModule","locate","address","baseURL","defaultExtension","packages","/*","esModule","authorization","moment_default","slate_plain_serializer_es","file_export","coreModule","appEvents","flotDeps_1","flotDeps_1_1","fakeDep","import","dsPlugin","panelCache","LoadError","loadError","getPanelPluginLoadError","NotFound","baseUrl","screenshots","getPanelPluginNotFound","WQdE","setKeybindingSrv","getKeybindingSrv","app_core_utils_explore__WEBPACK_IMPORTED_MODULE_4__","app_core_utils_location_util__WEBPACK_IMPORTED_MODULE_5__","app_store_store__WEBPACK_IMPORTED_MODULE_6__","mousetrap__WEBPACK_IMPORTED_MODULE_7__","mousetrap__WEBPACK_IMPORTED_MODULE_7___default","KeybindingSrv","modalOpen","timepickerOpen","setupGlobal","showHelpModal","goToHome","openAlerting","goToProfile","exit","bindGlobal","globalEsc","anyDoc","activeElement","querySelectorAll","nodeName","hasAttribute","kiosk","keyArg","keyType","showDashEditView","setupDashboardBindings","focusPanelId","hasAccessToExplore","urlWithoutBase_1","panelIndex","getPanelInfoById","shareScope","panelRef","toggleLegendsForAll","collapseRows","expandRows","newUrlParam","autofitpanels","getDatasourceSrv","app_core_core_module__WEBPACK_IMPORTED_MODULE_1__","_plugin_loader__WEBPACK_IMPORTED_MODULE_3__","_grafana_runtime__WEBPACK_IMPORTED_MODULE_4__","dsConfig","instantiate","getAll","DatasourceSrv","getExternal","getAnnotationSources","sources","addDataSourceVariables","metricSources","metricSource","skipVariables","Wu7z","LayoutModes","onLayoutModeChanged","List","Grid","schema","TableCellBuilder_CellBuilderWithStyle","build","valueFormatter","utils","preserveFormat","data-link-tooltip","data-original-title","data-row","data-column","data-operator","simpleCellBuilder","Table_Table","scrollToTop","dir","sortDirection","getCellRef","rowOffset","onCellClick","doSort","headerBuilder","sorting","getTableCellBuilder","builder","isHeader","rowData","measurer","getColumnWidth","rotateWidth","defaultHeight","fixedWidth","dataChanged","configsChanged","minColumnWidth","columnWidth","getCellBuilder","columnCount","fixedColumnCount","fixedRowCount","temp","scrollToColumn","scroll","XUMj","Y1OJ","lib","endBlock","startOffset","startKey","endOffset","endKey","getFirstText","equals","indentDirection","curSelection","selectedBlocks","getLeafBlocksAtRange","blockWhitespace","selectedBlocks_1_1","textKey","rangeProperties","deleteBackwardAtRange","selectedBlocks_1","textBeforeCaret","startText","selectedBlocks_2","selectedBlocks_2_1","moveStartBackward","TypeaheadInfo_templateObject_1","sortBy_default","TypeaheadItem","typeaheadItem","dist_index_esm","typeaheadItemSelected","typeaheadItemMatch","typeaheadItemGroupTitle","onClickItem","highlightClassName","itemGroupTitleClassName","GroupTitle","main_default","TypeaheadInfo_TypeaheadInfo","TypeaheadInfo","visible","calculate_size_lib","groupedItems","titleItem","allItems","longest","longestLabel","calculate_size_lib_default","listWidth","calculateListWidth","itemHeight","calculateItemHeight","listHeight","calculateListHeight","longestLabelHeight","longestLabelWidth","verticalPadding","totalHeight","menuRef","handleSelectionChange","typeaheadIndex","listRef","scrollToItem","flattenGroupItems","calculateLongestLabel","calculateListSizes","hoveredItem","moveMenuIndex","moveAmount","itemCount","newTypeaheadIndex","modulo","insertSuggestion","onSelectSuggestion","Typeahead","anchorNode","rect","parentElement","scrollX","scrollY","showDocumentation","Typeahead_Portal","menuPosition","itemSize","itemKey","Typeahead_Typeahead","setAttribute","syntax","hasSuggestions","typeaheadRef","handleTypeahead","applyTypeahead","preserveSuffix","typeaheadPrefix","suggestionText","backward","deleteBackwards","suffixLength","fragment","deleteBackward","insertFragment","moveForward","TypeaheadWithTheme","selectSuggestion","debounce_default","parentBlock","myOffset","filteredDecorations","labelKeyDec","labelValueMatch","filteredSuggestions","focusText","skipFilter","filterText","prefixMatch","skipSort","sortText","lastExecutedValue","runQuery","documentChanged","prevValue","textChanged","serialize","runOnChangeAndRunQuery","runOnChangeDebounced","runOnChange","runOnRunQuery","isSelectLineHotkey","focusBlock","moveAnchorToStartOfBlock","getNextBlock","moveFocusToStartOfNextBlock","moveFocusToEndOfText","isIndentLeftHotkey","isShiftTabHotkey","copiedText","getCopiedText","clipboardData","onPaste","clipboardPlugin","onCut","onCopy","deleteAtRange","QueryField","mounted","resetTimer","slate-query-field__wrapper--disabled","SortedVector","order","_grafana_runtime__WEBPACK_IMPORTED_MODULE_0__","ZG7E","ZGyg","appName","buildVersion","buildCommit","newGrafanaVersionExists","newGrafanaVersion","rel","PageLoader_PageLoader","loadingText","Page_Page","Page","updateTitle","autoHeightMin","Footer_Footer","commit","latestVersion","Page_PageContents","aAiC","templateObject_5","DeleteButton_DeleteButton","DeleteButton","showConfirm","onClickDelete","onClickCancel","showConfirmClass","showDeleteButtonClass","disabledClass","textColor","textShadowColor","getButtonStyles","stylesFactory","iconDistance","withIcon","borderRadius","lighten","buttonVariantStyles","button","iconWrap","nonHtmlProps","finalClassName","buttonStyles","finalChildren","renderAs","finalProps","themes","AbstractButton","Button","LinkButton","FormField","FormLabel","omit","onReset","isConfigured","omit_default","LoadingPlaceholder","upperFirst","ColorSwatch","ColorSwatchVariant","Small","isSmall","swatchSize","selectedSwatchBorder","selectThemeVariant","swatchStyles","Large","ColorPicker_NamedColorsGroup","selectedColor","onColorSelect","find_default","flexDirection","primaryColor","namedColorsPalette","upperFirst_default","marginTop","swatches","common","ColorPicker_ColorInput","ColorInput","updateColor","previousColor","getDerivedStateFromProps","flexGrow","pointerColor","bottomArrowStyles","pointerStyles","topArrowStyles","picker","renderPointer","ColorPicker_SpectrumPalettePointer","hsl","hsv","toHsv","pointer","marginLeft","ColorPicker_SpectrumPalette","SpectrumPicker","toRgb","componentName","getTabClassName","tabName","activePicker","handleChange","changeHandler","onTabChange","renderPicker","NamedColorsPalette","renderCustomPicker","tabKey","customPickers","tabComponent","colorPickerTheme","renderCustomPickerTabs","ColorPickerPopover","uniqueId","Switch","uniqueId_default","tooltipPlacement","labelId","switchClassName","colorPickerProps","ColorPickerPopover_ColorPickerPopover","AxisSelector","leftButtonClass","rightButtonClass","SeriesColorPickerPopover","float","backgroundImage","colorPickerFactory","popover","ColorPicker","popoverElement","PopoverController","Popover","ColorPickerTrigger_ColorPickerTrigger","SeriesColorPicker","onAdd","ValueToText","RangeToText","ValueMappingsEditor_MappingRow","onMappingToChange","onMappingTextChange","updateMapping","updateValueMapping","valueMapping","MappingRow","renderRow","onMappingFromChange","onMappingValueChange","mappingOptions","onMappingTypeChange","removeValueMapping","nextIdToAdd","onRemoveMapping","updateGauge","mapping","getMaxIdFromValueMappings","PanelOptionsGroup","onAddMapping","PieChart","sum_default","percents","containerElement","offsetWidth","offsetHeight","svg","svgElement","pieChart","innerRadius","customArc","tooltipElement","tooltipValueElement","UnitPicker","groupOptions","difference","difference_default","isArray_default","checkInput","StatsPicker","allowMultiple","defaultStat","minuteStep","showHour","allowEmpty","showSecond","of","switchMap","BigValue_templateObject_2","BigValue_templateObject_3","SetInterval","propsSubject","Subject","RefreshPicker","never","TableInputCSV_TableInputCSV","TableInputCSV","readCSV","onTextChange","onSeriesParsed","BigValue_templateObject_1","BigValue","canvasElement","renderSparkline","calculateGaugeAutoProps","autoProps","gaugeHeight","showLabel","titleFontSize","textOverflow","whiteSpace","getFormattedThresholds","lastThreshold","previousThreshold","getFontScale","renderVisualization","availableHeight","uniqBy","Graph","yAxisConfig","isStacked","flotOptions","iconProps","LegendSeriesIcon_templateObject_1","capitalize","GraphLegendItem_templateObject_1","GraphLegendItem_templateObject_2","GraphLegendItem_templateObject_3","GraphLegendItem_templateObject_4","GraphLegendItem_templateObject_5","templateObject_6","GraphLegendListItem","displayValues","LegendStatsList","GraphLegendItem_getStyles","itemWrapper","union","sortKey","graphLegendItemProps","union_default","legendTableEvenRowBackground_1","GraphLegend_templateObject_1","sortedItems","GraphLegendTableRow","GraphLegend_templateObject_2","GraphWithLegend_templateObject_2","GraphWithLegend_templateObject_3","GraphWithLegend_templateObject_1","sortLegendBy","sortLegendDesc","isLegendVisible","getGraphWithLegendStyles","graphContainer","legendContainer","legendItems","isZeroOnlySeries","isNullOnlySeries","shouldHideLegendItem","Graph_Graph","VALUE_LINE_HEIGHT","BarGauge_BarGauge","BarGauge","wrapperStyles","titleStyles","titleDim","alignItems","alignSelf","isVertical","paddingRight","getTitleStyles","renderBarAndValue","renderRetroBars","renderBasicAndGradientBars","calculateBarAndValueDimensions","valueWidth","valueHeight","maxBarHeight","maxBarWidth","valuePercent","getValuePercent","getValueColor","getValueStyles","valueColor","barHeight","barStyles","valueStyles","isBasic","getBarGradient","paddingLeft","borderRight","getBasicAndGradientStyles","getCellColor","positionValue","activeThreshold","isLit","backgroundShade","wrapperWidth","wrapperHeight","isVert","valueRange","maxSize","cellSpacing","cellCount","cellSize","containerStyles","cellColor","cellStyles","calculateTitleDimensions","TITLE_LINE_HEIGHT","titleHeight_1","MAX_VALUE_HEIGHT","MIN_VALUE_HEIGHT","MAX_VALUE_WIDTH","MIN_VALUE_WIDTH","lastpos","cssDirection","guess","heightFont","Collapse_templateObject_2","Collapse_templateObject_3","Collapse_templateObject_4","Collapse_templateObject_5","Collapse_templateObject_6","templateObject_7","templateObject_8","templateObject_9","VizRepeater","getOrientation","itemStyles","repeaterStyle","marginBottom","vizWidth","vizHeight","isEqual_default","GraphSeriesToggler","onHiddenSeriesChanged","toggledSeries_1","newHiddenSeries_1","allSeriesLabels","newHiddenSeries","Collapse_getStyles","collapse","Collapse_templateObject_1","collapseBody","loaderActive","headerCollapsed","headerButtons","heading","headerButtonsCollapsed","headerLabel","Collapse","collapsible","onToggle","panelClass","loaderClass","headerClass","headerButtonsClass","LogLabelStatsRow_templateObject_1","LogLabelStatsRow_templateObject_2","LogLabelStatsRow_templateObject_3","LogLabelStatsRow_templateObject_4","LogLabelStatsRow_templateObject_5","LogLabelStatsRow_templateObject_6","LogLabelStatsRow_templateObject_7","LogLabelStatsRow_templateObject_8","logsStatsRowValue","logsStatsRowCount","logsStatsRowPercent","logsStatsRowBar","logsStatsRowInnerBar","LogLabelStatsRow_getStyles","proportion","barStyle","logsStatsRow","logsStatsRowActive","logsStatsRowLabel","LogLabelStats_templateObject_1","LogLabelStats_templateObject_2","LogLabelStats_templateObject_3","LogLabelStats_templateObject_4","LogLabelStats_templateObject_5","UnThemedLogLabelStats","onClickClose","LogLabelStats_getStyles","activeRow","topRows","otherRows","insertActiveRow","otherCount","otherProportion","logsStats","logsStatsHeader","logsStatsTitle","LogLabelStatsRow","LogLabelStats","LogLabelStats_UnThemedLogLabelStats","LogLabel_templateObject_3","LogLabel_templateObject_4","showStats","onClickLabel","allRows","getRows","plain","logsLabel","logsLabelValue","logsLabelIcon","onClickStats","logsLabelStats","LogLabel_UnThemedLogLabel","LogLabels_templateObject_1","logsLabels","LogLabel","LogRowContext_templateObject_2","LogRowContext_templateObject_3","LogRowContext_templateObject_4","LogRowContext_templateObject_5","LogRowContext_templateObject_6","LogRowContext_templateObject_7","LogRowContext_templateObject_8","flatten_default","useAsync","useAsync_default","getRowContext","dataResult","timestampField","errorResult","LogRowContextProvider","setLimit","setResult","before","hasMoreContextRows","setHasMoreContextRows","getRowContexts","currentResult","hasMoreLogsBefore","hasMoreLogsAfter","errors","gradientBottom","commonStyles","LogRowContext_templateObject_1","gradientTop","boxShadowColor","onLoadMoreContext","canLoadMoreRows","getLogRowContextStyles","shouldScrollToBottom","setScrollTop","listContainerRef","Alert","LogRowContextGroupHeader","headerProps","onOutsideClick","LogRowContextGroup","getLogRowStyles_templateObject_2","getLogRowStyles_templateObject_3","getLogRowStyles_templateObject_4","getLogRowStyles_templateObject_5","getLogRowStyles_templateObject_6","getLogRowStyles_templateObject_7","getLogRowStyles_templateObject_8","getLogRowStyles_templateObject_9","templateObject_10","templateObject_11","LogRow_templateObject_2","LogRow_templateObject_3","LogRow_templateObject_4","LogMessageAnsi","chunks","ansicolor","accumulated","character","chunk","logColor","crit","getLogRowStyles_templateObject_1","logsRowDuplicates","logsRowLocalTime","logsRowLabels","LogRow_templateObject_1","mouseMessageTimer","fieldCount","fieldLabel","fieldStats","fieldValue","parsed","parser","parsedFieldHighlights","showFieldStats","showContext","onClickHighlight","fieldText","getLabelFromField","getValueFromField","buildMatcher","onMouseOverMessage","isTextSelected","parseMessage","onContextToggle","toggleContext","UnThemedLogRow","renderLogRow","updateLimit","highlighterExpressions","showDuplicates","showLabels","getLogRowStyles","previewHighlights","needsHighlighter","logsRowMatchHighLight","logsRowMatchHighLightPreview","showUtc","logRowStyles","outlineColor","getLogRowWithContextStyles","logsRow","logsRowLevel","LogLabels","logsRowMessage","onMouseOutMessage","LogRowContext","autoEscape","highlightTag","logsRowFieldHighLight","findChunks","LogMessageAnsi_LogMessageAnsi","logsRowStats","LogRow_UnThemedLogRow","LogRows_UnThemedLogRows","deferLogsTimer","renderAllTimer","deferLogs","renderAll","renderAll_1","dedupedData","deduplicatedData","hasData","hasLabel","dedupCount","dedupStrategy","processedRows","firstRows","renderLimit","rowLimit","lastRows","logsRows","LogRow","ToggleButtonGroup","btnClassName","onAddThresholdAfter","thresholds_1","thresholds_1_1","newThresholds","cleanValue","parsedValue","onChangeThresholdColor","thresholdsWithoutKey","renderInput","ColorPicker_ColorPicker","onChangeThresholdValue","onRemoveThreshold","readOnly","counter","toThresholdsWithKey","ThresholdsEditor","FieldDisplayEditor","onCalcsChange","StatsPicker_StatsPicker","setDecimals","setMin","setMax","onDecimalChange","onMinChange","UnitPicker_UnitPicker","onMaxChange","types_panel","nullText","levels","convertOldAngularValueMapping","optionsToKeep_1","optionsToKeep","optionsToKeep_1_1","cloneDeep_default","sharedSingleStatMigrationHandler","previousVersion","fieldDefaults","migrateFromValueOptions","migrateOldThresholds","moveThresholdsAndMappingsToField","CallToActionCard_templateObject_2","CallToActionCard_templateObject_3","ContextMenu_templateObject_1","ContextMenu_templateObject_2","ContextMenu_templateObject_3","ContextMenu_templateObject_4","ContextMenu_templateObject_5","ContextMenu_templateObject_6","VariableOrigin","CallToActionCard_templateObject_1","getCallToActionCardStyles","useClickAway","wrapperBg","groupLabelColor","itemBgHover","headerBg","headerSeparator","wrapperShadow","linkColor","linkColorHover","itemColor","ContextMenu","positionStyles","setPositionStyles","menuElement","collisions","useClickAway_default","getContextMenuStyles","ContextMenuGroup","groupLabel","ContextMenuItem","separatorColor","darken","DataLinkSuggestions_templateObject_1","DataLinkSuggestions_templateObject_2","DataLinkSuggestions_templateObject_3","DataLinkSuggestions_templateObject_4","DataLinkSuggestions_templateObject_5","itemBgActive","DataLinkSuggestions_templateObject_6","itemDocs","DataLinkSuggestions_templateObject_7","itemDocsColor","DataLinkSuggestions_getStyles","groupedSuggestions","onSuggestionSelect","DataLinkSuggestionsList","DataLinkInput_templateObject_1","DataLinkInput_templateObject_2","prism","usePrevious","SelectionReference","slate","slate_plugins","DataLinkInput_getStyles","stateRef","showingSuggestions","suggestionsIndex","selectionRef","setShowingSuggestions","useCallback","setSuggestionsIndex","onVariableSelect","direction_1","prevLinkUrl","isFocused","onUrlChange","includeDollarSign","setLinkUrl","esm","modifiers","preventOverflow","boundariesElement","arrow","DataLinkSuggestions","activeIndex","slate_react_es","editorRef","_editor","DataLinkEditor_templateObject_1","DataLinkEditor_templateObject_2","DataLinkEditor_templateObject_3","DataLinkEditor","DataLinkEditor_getStyles","setTitle","DataLinkInput","infoText","DataLinksEditor_templateObject_1","DataLinksEditor","linkIndex","newLink","listIndex","FilterByNameTransformerEditor_templateObject_2","FilterByNameTransformerEditor_templateObject_3","getContextMenuItems","isMenuOpen","setIsMenuOpen","setMenuPositon","DataLinksContextMenu_templateObject_1","WithContextMenu","FilterByNameTransformerEditor","initOptions","allNames","input_1_1","input_1","configuredOptions","allNames_1","allNames_1_1","FilterPill","onFieldToggle","filterFieldsByNameTransformRegistryItem","FilterByNameTransformerEditor_FilterByNameTransformerEditor","reduceTransformRegistryItem","getObjectName","constructor","getType","getValuePreview","Node","createTextNode","TransformationRow_templateObject_2","TransformationRow_templateObject_3","TransformationRow_templateObject_4","TransformationRow_templateObject_5","TransformationRow_templateObject_6","ErrorBoundary_templateObject_1","AlphaNotice_templateObject_1","requestAnimationFrame","json_explorer_JsonExplorer","_defaultConfig","_isOpen","skipChildren","JsonExplorer","isEmptyObject","toggleOpen","appendChildren","animateOpen","removeChildren","animateClose","openAtDepth","depth","isNumberArray","renderArray","arrayWrapperSpan","skipRoot","togglerLink","togglerIcon","hasKey","constructorName","objectWrapperSpan","isUrl","valuePreview","animated","querySelector","index_1","addAChild_1","childrenElement","childrenRemoved_1","removeAChild_1","onDidRender","wrapperEl","wrapperRef","replaceChild","lastChild","JSONFormatter","renderJson","viewDebug","setViewDebug","TransformationRow_templateObject_1","TransformationRow_getStyles","iconRow","JSONFormatter_JSONFormatter","TransformationsEditor_TransformationsEditor","updateCounter","onTransformationChange","onTransformationRemove","renderTransformationEditors","preTransformData","availableTransformers","transformersUIRegistry","TransformationsEditor_templateObject_1","transformationUI","TransformationRow","TransformationsEditor","onTransformationAdd","ErrorBoundary","errorInfo","ErrorBoundary_getStyles","ErrorBoundary_ErrorBoundaryAlert","ErrorBoundaryAlert","ErrorBoundary_ErrorBoundary","componentStack","AlphaNotice","SecretFormField","SeriesColorPickerPopoverWithTheme","PanelOptionsGrid","ValueMappingsEditor_ValueMappingsEditor","Switch_Switch","EmptySearchResult","PieChart_PieChart","PieChartType","TimeOfDayPicker","SetInterval_SetInterval","BigValue_BigValue","Gauge_Gauge","GraphWithLegend","VizRepeater_VizRepeater","GraphSeriesToggler_GraphSeriesToggler","LogRows","ToggleButtonGroup_ToggleButtonGroup","ToggleButton","ThresholdsEditor_ThresholdsEditor","FieldDisplayEditor_FieldDisplayEditor","FieldPropertiesEditor","sharedSingleStatPanelChangedHandler","CallToActionCard","DataLinksContextMenu","aWP2","dom_namespaceObject","getPreviousCousin","map_default","flattenDeep","flattenDeep_default","lodash_chunk","chunk_default","zip","zip_default","PALETTE_ROWS","hexToHsl","toHsl","hslToHex","hexColors","hslColors","sortedHSLColors","chunkedHSLColors","sortedChunkedHSLColors","flattenedZippedSortedChunkedHSLColors","EventsWithValidation","sortedColors","validationRules","currRule","rule","errorMessage","hasValidationEvent","validationEvents","flotPairs","selector","sibling","previousSibling","global","Element","ownerDocument","avQP","VAR_SERIES_NAME","VAR_FIELD_NAME","VAR_CALC","VAR_CELL_PREFIX","DEFAULT_FIELD_DISPLAY_VALUES_LIMIT","getFieldDisplayValues","applyFieldProperties","getFieldProperties","_grafana_data__WEBPACK_IMPORTED_MODULE_1__","lodash_toNumber__WEBPACK_IMPORTED_MODULE_2__","lodash_toNumber__WEBPACK_IMPORTED_MODULE_2___default","lodash_toString__WEBPACK_IMPORTED_MODULE_3__","lodash_toString__WEBPACK_IMPORTED_MODULE_3___default","_displayProcessor__WEBPACK_IMPORTED_MODULE_4__","_flotPairs__WEBPACK_IMPORTED_MODULE_5__","hitLimit","defaultTitle","usesCellValues","displayValue","calcs_1","calcs_1_1","keys_1","keys_1_1","numericFieldProps","buttonProps","combinedComponents","Control","innerRef","_Select__WEBPACK_IMPORTED_MODULE_2__","bR/a","bTeP","dUKB","InputStatus","_utils__WEBPACK_IMPORTED_MODULE_3__","eventName","restProps","inputElementProps","validatorAsync","Invalid","Valid","isInvalid","populateEventPropsWithStatus","e39r","insertTextByKey","BRACES","focusOffset","moveBackward","previousChar","_types_theme__WEBPACK_IMPORTED_MODULE_0__","currentTheme","ThresholdMapper","query_part","alertTab","enable","initModel","for","subTabIndex","_enableAlert","addNotificationSegment","thresholdChangedEventHandler","graphThresholdChanged","notifications","alertNotifications","validateModel","getAlertHistory","getNotificationIcon","getNotifications","notificationAdded","addAlertRuleTag","newAlertRuleTag","alertRuleTags","removeAlertRuleTag","tagName","noDataState","alertingNoDataOrNullValues","executionErrorState","alertingErrorOrTimeout","defaultName","buildConditionModel","alertToGraphThresholds","addedNotification","notification","firstTarget","conditions","foundTarget","e_5_1","cm","handleQueryPartEvent","conditionModel","handleReducerPartEvent","reducerPart","addCondition","conditionModels","removeCondition","evaluatorParamsChanged","ThresholdMapper_ThresholdMapper","clearHistory","AlertTabCtrl_AlertTabCtrl","eNSq","ePCq","freeInput","confirmKeys","onTagExists","fadeIn","TagsInput","isSelect","multiple","objectItems","$container","placeholderText","dontPushVal","maxTags","itemsArray","pushVal","$existingTag","htmlEncode","findInputWrapper","inArray","removeAll","isEnabled","nodeType","nodeValue","makeOptionItemFunction","makeOptionFunction","success","processItems","sorter","highlighter","$inputWrapper","doGetCaretPosition","$prevTag","$nextTag","inputSize","removeData","elt","arg1","arg2","oField","selectionStart","iCaretPos","REPEAT_DIR_VERTICAL","DEFAULT_PANEL_SPAN","DEFAULT_ROW_HEIGHT","MIN_PANEL_HEIGHT","LS_PANEL_COPY_KEY","PANEL_BORDER","GRID_CELL_HEIGHT","GRID_CELL_VMARGIN","GRID_COLUMN_COUNT","eYNV","isLastQuery","fxtZ","updateNavIndex","UpdateNavIndex","gxTa","setSearchMemberQuery","loadTeam","loadTeamMembers","loadTeamGroups","addTeamGroup","removeTeamGroup","deleteTeam","updateTeamMember","LoadTeam","teamMembers","teamGroups","LoadTeamGroups","perpage","teamsLoaded","teamLoaded","app_core_actions__WEBPACK_IMPORTED_MODULE_2__","_navModel__WEBPACK_IMPORTED_MODULE_3__","teamMembersLoaded","groupId","impressions","pop","impressionsKey","ImpressionSrv","impressionKey","hSYD","DashNavButton","classSuffix","aria-label","DashNavTimeControls_DashNavTimeControls","DashNavTimeControls","onChangeRefreshInterval","onMoveBack","nowDelay","adjustedFrom","nextRange","hasDelay","adjustedTo","setActiveTimeOption","timeOptions","rawTimeRange","timePickerValue","onChangeTimePicker","onSave","onOpenSettings","onStarDashboard","playlistSrv","stop","onOpenShare","DashNav","renderDashboardTitleSearchButton","onFolderNameClick","onDahboardNameClick","renderBackButton","onAddPanel","snapshot","snapshotUrl","originalUrl","isInFullscreenOrSettings","isPlaying","onPlaylistPrev","onPlaylistStop","onPlaylistNext","onToggleTVMode","DashNav_DashNav","components_DashNav_DashNav","LdapSyncInfo","isSyncing","ldapSyncInfo","nextSyncTime","schedule","prevSyncSuccessful","prevSyncTime","newStore","setStore","iSop","iZOS","mergeTablesIntoModel","TableModel","columnMap","addRow","otherRow","dst","flattenedRows","columnIndexMapper","alteredRow","compactedRows","mergedRows","areRowsMatching","columnsUnion","matchedRow","MISSING_VALUE","MutableDataFrame_MutableDataFrame","creator","addFieldFor","addMissingFieldsFor","isString_default","addMissingFields","j5wK","getFlotPairsConstant","vX","vY","pairs","seriesData","setPluginsLayoutMode","setPluginsSearchQuery","loadPlugins","SetPluginsSearchQuery","pluginsLoaded","LoadPlugins","pluginDashboardsLoad","LoadPluginDashboards","pluginDashboardsLoaded","LoadedPluginDashboards","loadPluginDashboards","dataSourceType","jaLZ","jvip","kDLi","_components__WEBPACK_IMPORTED_MODULE_0__","_utils__WEBPACK_IMPORTED_MODULE_2__","_themes__WEBPACK_IMPORTED_MODULE_3__","getProcessedDataFrames","preProcessPanelData","rxjs__WEBPACK_IMPORTED_MODULE_1__","rxjs__WEBPACK_IMPORTED_MODULE_2__","rxjs__WEBPACK_IMPORTED_MODULE_3__","rxjs__WEBPACK_IMPORTED_MODULE_4__","lodash__WEBPACK_IMPORTED_MODULE_5__","rxjs_operators__WEBPACK_IMPORTED_MODULE_6__","rxjs_operators__WEBPACK_IMPORTED_MODULE_7__","rxjs_operators__WEBPACK_IMPORTED_MODULE_8__","rxjs_operators__WEBPACK_IMPORTED_MODULE_9__","rxjs_operators__WEBPACK_IMPORTED_MODULE_10__","rxjs_operators__WEBPACK_IMPORTED_MODULE_11__","app_core_services_backend_srv__WEBPACK_IMPORTED_MODULE_12__","_grafana_data__WEBPACK_IMPORTED_MODULE_13__","Done","returnVal","callQueryMethod","packet","packets","combinedData","dataObservable","processQueryError","kX54","transitionEnd","transEndEventNames","WebkitTransition","MozTransition","Dropdown","$el","clearMenus","hasClass","insertBefore","$items","eq","noConflict","Modal","remote","isShown","isDefaultPrevented","support","enforceFocus","hideWithTransition","removeBackdrop","$backdrop","doAnimate","$target","eventIn","eventOut","triggers","fixTitle","delay","hoverState","$tip","actualWidth","tp","hasContent","setContent","animation","actualHeight","applyPlacement","replaceArrow","getTitle","$e","$arrow","disable","Tab","$ul","relatedTarget","activate","$active","$menu","listen","beginswith","caseSensitive","caseInsensitive","eventSupported","mouseenter","isSupported","suppressKeyPressRepeat","focused","mousedover","mouseleave","Affix","affix","checkPosition","offsetBottom","offsetTop","unpin","scrollHeight","affixed","$spy","kYRH","otherseries","openPolygon","findNextStart","start_i","end_i","intersect","equal","intersectionPoint","topTraversal","top_left_x","top_left_y","top_right_x","top_right_y","bottom_left_x","bottom_left_y","bottom_right_x","bottom_right_y","top_delta_x","top_delta_y","bottom_delta_x","bottom_delta_y","assert","right_i","bottomTraversal","findBelowSeries","lJbD","NavModelSrv","navItems","getCfgNode","nav","args_1","args_1_1","getWarningNav","deprecationWarning","file","oldName","newName","inlineList","lpb/","node_1","navIndex","parentItem","getTitleFromNavModel","apiKeysLoaded","deleteApiKey","loadApiKeys","SetApiKeysSearchQuery","DEFAULT_RANGE","safeStringifyValue","parseUrlState","serializeStateToUrlParam","ensureQueries","updateHistory","getQueryKeys","getTimeRange","getValueWithRefId","stopQueryState","LAST_USED_DATASOURCE_KEY","getExploreUrl","panelTargets","panelDatasource","exploreDatasource","exploreTargets","exploreTargets_1","exploreTargets_1_1","exploreState","getExploreState","originPanelId","_config__WEBPACK_IMPORTED_MODULE_9__","buildQueryTransaction","queryOptions","scanning","configuredQueries","combinedKey","lowLimit","app_core_utils_kbn__WEBPACK_IMPORTED_MODULE_6__","getIntervals","__interval_ms","generateKey","latency","clearQueryKeys","isSegment","ParseUrlStateIndex","ParseUiStateIndex","decodeURI","space","safeParseJson","ui","DEFAULT_UI_STATE","SegmentsStart","RangeFrom","Datasource","parsedSegments","metricProperties","modeObj","app_types_explore__WEBPACK_IMPORTED_MODULE_8__","showingGraph","uiState","showingLogs","Logs","showingTable","urlState","compact","random","generateEmptyQuery","_query__WEBPACK_IMPORTED_MODULE_7__","generateNewKeyAndAddRefIdIfMissing","allQueries","hasNonEmptyQuery","validKeys","datasourceId","MAX_HISTORY_ITEMS","historyKey","app_core_store__WEBPACK_IMPORTED_MODULE_5__","datasourceInstance","newQueryKeys","primaryKey","rawRange","getTimeRangeFromUrl","parseRawTime","getFirstQueryErrorWithoutRefId","sortInDescendingOrder","SortOrder","logsResult","sortInAscendingOrder","backend","app_core_services_backend_srv__WEBPACK_IMPORTED_MODULE_3__","homeDashboardId","prefs","defaultDashboardHit","onSubmit","onSubmitForm","onThemeChanged","getFullDashName","onHomeDashboardChanged","timezones","onTimeZoneChanged","RunnerPlugin","loadInvitees","removeUser","revokeInvite","setUsersSearchQuery","invitees","inviteesLoaded","updateUser","loadUsers","app_core_redux__WEBPACK_IMPORTED_MODULE_0__","DataLinkBuiltInVars","linkModelToContextMenuItems","nwiq","tickStep","e10","sqrt","e5","e2","step1","step0","getFlotTickSize","getFlotRange","panelMin","panelMax","getFlotTickDecimals","grafanaTimeFormat","dotIndex","getScaledDecimals","getPrecision","getStringPrecision","o85q","oOjz","toNumberString","toIntegerOrUndefined","stringToMs","toFloatOrUndefined","appNotificationId","ClearAppNotification","AddAppNotification","pluginInfoCache","app_core_services_backend_srv__WEBPACK_IMPORTED_MODULE_0__","p+Sq","getDashboardSrv","app_core_app_events__WEBPACK_IMPORTED_MODULE_2__","app_core_utils_location_util__WEBPACK_IMPORTED_MODULE_3__","_state_DashboardModel__WEBPACK_IMPORTED_MODULE_4__","_utils_panel__WEBPACK_IMPORTED_MODULE_5__","onPanelChangeView","newUrlParams","paramsToRemove_1","paramsToRemove_1_1","onRemovePanel","setCurrent","handleSaveDashboardError","postSave","newUrl","showDashboardProvisionedModal","showSaveModal","AppendedVectors_AppendedVectors","AppendedVectors","startAt","ConstantVector","ScaledVector_ScaledVector","ScaledVector","VizOrientation","PanelPlugin","phJb","q12E","PluginIncludeType","PluginType","GrafanaPlugin","addConfigPage","stylesCreator","memoize_one__WEBPACK_IMPORTED_MODULE_0__","app_core_utils_tags__WEBPACK_IMPORTED_MODULE_2__","countLabel","hideTimeout","exp","rbvf","rd46","sortByKeys","isPlainObject","dashboardModel","updateSchema","oldVersion","schemaVersion","panelUpgrades","isBoolean","leftMin","leftMax","y_format","y_formats","y2_format","getNextPanelId","aliasYAxis","pulldowns","allFormat","getNextQueryLetter","mathExpr","asExpr","k_1","k_2","templateVariable","hideVariable","hideLabel","leftLogBase","leftYAxisLabel","rightMin","rightMax","rightLogBase","rightYAxisLabel","t1","t2","threshold1","thresholdLine","threshold1Color","threshold2","threshold2Color","sharedCrosshair","upgradeToGridLayout","minSpan","max_1","factors","utils_factors","maxPerRow","upgradePanelLink","updateVariablesSyntax","updateLinks_1","repeatIteration","rowGridHeight","getGridHeight","rowPanel","rowPanelModel","showRows","nextRowId","collapsed","repeat","yPos","rowArea","DashboardMigrator_RowArea","panelPos","addPanel","DashboardMigrator","RowArea","rowYPos","area","getPanelPosition","callOnce","startPlace","endPlace","dashUri","utils_url","seriesName1","fieldName1","DashboardModel_DashboardModel","DashboardModel","revision","autoUpdate","ensureListExist","gnetId","resetOriginalVariables","resetOriginalTime","addBuiltInAnnotationQuery","iconColor","canShare","canStar","showSettings","saveVariables","original","originalTemplating","originalTime","otherPanelInFullscreen","forEachPanel","panelA","panelB","iteration","panelsToRemove","repeatedByRow","pull","processRepeats","cleanUpRepeats","repeatPanel","cleanUpRowRepeats","rowPanels","processRowRepeats","rowPanelIndex","getRowPanels","this_1","getPanelRepeatClone","sourcePanel","valueIndex","sourcePanelIndex","getRowRepeatClone","sourceRowPanel","rowPanels_1","insertPos","getSelectedVariableOptions","xPos","yOffset","repeatRow","setScopedVars","variableOption","_loop_2","optionIndex","this_2","rowHeight","getRowHeight","panelBelowIndex","updateRepeatedPanelIds","insertPos_1","cloneRowPanel","maxPos","maxBy","removeRow","removePanels","toggleRow","setPanelFocus","submenuEnabled","annotation","e_8_1","e_9","hasRepeat","yDiff","e_9_1","pushDownAmount","cycleGraphTooltip","isSnapshot","hasTimeChanged","hasVariableValuesChanged","visibleHeight","viewHeight","kioskMode","scaleFactor","currentGridHeight","expandParentRowFor","e_10","e_11","onCount","panelsWithLegends","panelLegendsOn","panelsWithLegends_1","panelsWithLegends_1_1","e_12_1","e_12","sAJe","userMappingInfoLoadedAction","userMappingInfoFailedAction","clearUserErrorAction","ldapFailedAction","loadLdapState","loadLdapSyncStatus","loadUserMapping","clearUserError","app_core_redux__WEBPACK_IMPORTED_MODULE_1__","connectionInfo","ldapError","_apis__WEBPACK_IMPORTED_MODULE_3__","syncStatus","error_2","userError","ExploreMode","CompletionItemKind","ExploreId","LanguageProvider","GrafanaThemeType","papaparse_min","isName","ParseState","ReadingRows","Starting","InHeader","line_1","line_1_1","onHeader","onRow","papacfg","dynamicTyping","skipEmptyLines","comments","papaparse_min_default","CSVReader","writeValue","quoteChar","delimiter","isType","toCSV","newline","headerStyle","CSVHeaderStyle","csv","getHeaderLine","writers","makeFieldWriter","getLogLevelFromKey","addLogLevelToSeries","lineIndex","getLogLevel","rowsWithLabel","countsByValue","fieldMatcher","LOGFMT_REGEXP","calculateFieldStats","extractor","rowsWithField","getParser","LogsParsers","parseLabels","labelRegexp","findUniqueLabels","uncommonLabels","formatLabels","objRemoveUndefined","sortThresholds","getAllFormattedValueMappings","allFormattedValueMappings","allValueMappings","valueToTextMapping","valueAsNumber","valueToTextMappingAsNumber","addValueToTextMappingText","addRangeToTextMappingText","findCommonLabels","getActiveThreshold","getMappedValue","provideTheme","ConfigConsumer","Provider","getCurrentTheme","ConfigContext","provideConfig","ThemeProvider","setBackendSrv","singletonInstance","getDataSourceSrv","dataSourceSrv_singletonInstance","setLocationSrv","LocationSrv_singletonInstance","getLocationSrv","extend_default","config_GrafanaBootConfig","windowTitlePrefix","newPanelTitle","externalUserMngLinkUrl","externalUserMngLinkName","externalUserMngInfo","allowOrgCreate","alertingEnabled","editorsCanAdmin","pluginsToPreload","playlist_timespan","unsaved_changes_warning","env","viewersCanEdit","grafanaBootData","config_options","system","getAngularLoader","setDataSourceSrv","loadPluginCss","SystemJS","tAX7","ISO_8601","setLocale","getLocaleData","isDateTime","toUtc","dateTimeAsMoment","dateTimeForTimeZone","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","language","localeData","isMoment","formatInput","duration","tOGo","thb7","getDisplayProcessor","getColorFromThreshold","getDecimalsForValue","_valueFormats_valueFormats__WEBPACK_IMPORTED_MODULE_2__","_namedColorsPalette__WEBPACK_IMPORTED_MODULE_3__","field_1","formatFunc_1","shouldFormat","mappedValue","toStringProcessor","themeType","belowThreshold","nearestThreshold","decimalOverride","txxJ","angularModules","angular__WEBPACK_IMPORTED_MODULE_0___default","angular__WEBPACK_IMPORTED_MODULE_0__","umNM","hasRole","ContextSrv","exploreEnabled","react_transition_group_Transition__WEBPACK_IMPORTED_MODULE_4__","react_transition_group_Transition__WEBPACK_IMPORTED_MODULE_4___default","transitionDelay","mountOnEnter","unmountOnExit","transitionState","_Portal_Portal__WEBPACK_IMPORTED_MODULE_3__","scheduleUpdate","defaultTransitionStyles","isValidElement","refMounted","languageProviderInitialised","activeOption","initialDatasourceStatus","setLogLabelOptions","shouldTryRefreshLabels","setRefreshLabels","shouldForceRefreshLabels","setForceRefreshLabels","targetOption_1","fetchLabelValues","setPrevDatasourceStatus","useRefMounted","languageProviderInitialized","setLanguageProviderInitilized","setSyntax","useLokiLabels","initialRange","buildNavModel","getLoadingNav","v4Fa","getMessageFromError","v7bs","vFKA","./core/components/help/help.html","./core/components/manage_dashboards/manage_dashboards.html","./core/components/search/search.html","./core/components/search/search_results.html","./features/admin/partials/admin_home.html","./features/admin/partials/edit_org.html","./features/admin/partials/edit_user.html","./features/admin/partials/new_user.html","./features/admin/partials/orgs.html","./features/admin/partials/settings.html","./features/admin/partials/stats.html","./features/admin/partials/styleguide.html","./features/admin/partials/users.html","./features/alerting/partials/alert_howto.html","./features/alerting/partials/alert_tab.html","./features/alerting/partials/notification_edit.html","./features/alerting/partials/notifications_list.html","./features/annotations/partials/editor.html","./features/annotations/partials/event_editor.html","./features/dashboard/components/DashExportModal/template.html","./features/dashboard/components/DashLinks/editor.html","./features/dashboard/components/DashboardSettings/template.html","./features/dashboard/components/ExportDataModal/template.html","./features/dashboard/components/FolderPicker/template.html","./features/dashboard/components/RowOptions/template.html","./features/dashboard/components/ShareModal/template.html","./features/dashboard/components/SubMenu/template.html","./features/dashboard/components/VersionHistory/template.html","./features/datasources/partials/http_settings.html","./features/datasources/partials/tls_auth_settings.html","./features/folders/partials/create_folder.html","./features/folders/partials/folder_dashboards.html","./features/manage-dashboards/components/MoveToFolderModal/template.html","./features/manage-dashboards/partials/dashboard_import.html","./features/manage-dashboards/partials/dashboard_list.html","./features/manage-dashboards/partials/snapshot_list.html","./features/org/partials/invite.html","./features/org/partials/newOrg.html","./features/org/partials/select_org.html","./features/panel/panellinks/module.html","./features/panel/partials/general_tab.html","./features/panel/partials/panelTime.html","./features/panel/partials/query_editor_row.html","./features/playlist/partials/playlist.html","./features/playlist/partials/playlist_search.html","./features/playlist/partials/playlists.html","./features/plugins/partials/plugin_page.html","./features/plugins/partials/update_instructions.html","./features/profile/partials/profile.html","./features/teams/partials/create_team.html","./features/templating/partials/editor.html","./partials/error.html","./partials/modal.html","./partials/reset_password.html","./partials/signup_invited.html","./partials/signup_step2.html","./partials/valueSelectDropdown.html","./plugins/app/example-app/legacy/angular_example_page.html","./plugins/app/example-app/legacy/config.html","./plugins/datasource/cloudwatch/partials/annotations.editor.html","./plugins/datasource/cloudwatch/partials/config.html","./plugins/datasource/cloudwatch/partials/query.editor.html","./plugins/datasource/cloudwatch/partials/query.parameter.html","./plugins/datasource/elasticsearch/partials/annotations.editor.html","./plugins/datasource/elasticsearch/partials/bucket_agg.html","./plugins/datasource/elasticsearch/partials/config.html","./plugins/datasource/elasticsearch/partials/metric_agg.html","./plugins/datasource/elasticsearch/partials/pipeline_variables.html","./plugins/datasource/elasticsearch/partials/query.editor.html","./plugins/datasource/graphite/partials/query.editor.html","./plugins/datasource/influxdb/partials/annotations.editor.html","./plugins/datasource/influxdb/partials/config.html","./plugins/datasource/influxdb/partials/query.editor.html","./plugins/datasource/mysql/partials/config.html","./plugins/datasource/mysql/partials/query.editor.html","./plugins/datasource/opentsdb/partials/annotations.editor.html","./plugins/datasource/opentsdb/partials/config.html","./plugins/datasource/opentsdb/partials/query.editor.html","./plugins/datasource/postgres/partials/annotations.editor.html","./plugins/datasource/postgres/partials/config.html","./plugins/datasource/postgres/partials/query.editor.html","./plugins/datasource/prometheus/partials/annotations.editor.html","./plugins/datasource/prometheus/partials/config.html","./plugins/datasource/stackdriver/partials/annotations.editor.html","./plugins/datasource/stackdriver/partials/config.html","./plugins/datasource/stackdriver/partials/query.editor.html","./plugins/datasource/stackdriver/partials/query.filter.html","./plugins/datasource/testdata/partials/query.editor.html","./plugins/panel/alertlist/editor.html","./plugins/panel/alertlist/module.html","./plugins/panel/dashlist/editor.html","./plugins/panel/dashlist/module.html","./plugins/panel/graph/axes_editor.html","./plugins/panel/graph/tab_display.html","./plugins/panel/graph/tab_drilldown_links.html","./plugins/panel/graph/tab_legend.html","./plugins/panel/graph/tab_thresholds_time_regions.html","./plugins/panel/graph/thresholds_form.html","./plugins/panel/graph/time_regions_form.html","./plugins/panel/heatmap/module.html","./plugins/panel/heatmap/partials/axes_editor.html","./plugins/panel/heatmap/partials/display_editor.html","./plugins/panel/pluginlist/module.html","./plugins/panel/singlestat/mappings.html","./plugins/panel/table/column_options.html","./plugins/panel/table/module.html","./plugins/panel/text/module.html","vKfT","plotDashes","dashOnLength","dashOffLength","dashRemainder","dashOn","ax1","ax2","ay2","dashOffset","lineSegmentOffset","remainder","segmentLength","deltaX","ay1","deltaY","ysign","vk65","lodash_isNil__WEBPACK_IMPORTED_MODULE_2__","lodash_isNil__WEBPACK_IMPORTED_MODULE_2___default","classnames__WEBPACK_IMPORTED_MODULE_3__","classnames__WEBPACK_IMPORTED_MODULE_3___default","react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_4__","react_custom_scrollbars__WEBPACK_IMPORTED_MODULE_4___default","emotion__WEBPACK_IMPORTED_MODULE_5__","renderTrack","hideVerticalTrack","passedProps","renderThumbHorizontal","renderThumb","renderThumbVertical","renderView","updateScroll","updateAfterMount","renderTrackHorizontal","renderTrackVertical","vl1P","setOrganizationName","loadOrganization","updateOrganization","organizationLoaded","organization","LoadOrganization","maxDepth","output","safe","currentDepth","isarray","isobject","newKey","TeamPicker","onAddPermission","AddPermissions","getCleanState","onCancel","onTypeChanged","onUserSelected","TeamPicker_TeamPicker","onTeamSelected","data-save-permission","showPermissionLevels","wvI5","wxmp","xKbd","stackBases","stackSums","getStackSums","_data","sums","data_len","key_idx","value_idx","newPoints","PanelEditorTabIds","panelEditorTabTexts","Queries","Visualization","Advanced","tabId","_actions__WEBPACK_IMPORTED_MODULE_2__","tabs","editor_ctrl_AnnotationsEditorCtrl","AnnotationsEditorCtrl","annotationDefaults","showIn","emptyListCta","datasourceChanged","newDatasource","currentAnnotation","currentDatasource","currentIsNew","backToList","removeAnnotation","clearPromiseCaches","getGlobalAnnotations","getAlertStates","eventsById","eventGroup","isPanelAlert","head","dedup","alertStatesPromise","globalAnnotationsPromise","translateQueryResult","datasourcePromise","state_1","dsPromises","saveAnnotationEvent","updateAnnotationEvent","deleteAnnotationEvent","deleteUrl","isRegion","AnnotationsSrv","annotations_srv_AnnotationsSrv","event_editor_EventEditorCtrl","EventEditorCtrl","tryEpochToMoment","timeFormated","saveModel","editorOpen","$__alerting","$__ok","$__no_data","$__pending","$__editing","colorString","titleStateClass","event_manager_EventManager","y0W+","LegendDisplayMode","_LegendList__WEBPACK_IMPORTED_MODULE_0__","_grafana_ui__WEBPACK_IMPORTED_MODULE_4__","app_core_selectors_navModel__WEBPACK_IMPORTED_MODULE_5__","app_core_config__WEBPACK_IMPORTED_MODULE_6__","app_core_components_Page_Page__WEBPACK_IMPORTED_MODULE_7__","app_core_components_AlertBox_AlertBox__WEBPACK_IMPORTED_MODULE_8__","_LdapConnectionStatus__WEBPACK_IMPORTED_MODULE_9__","_LdapSyncInfo__WEBPACK_IMPORTED_MODULE_10__","_LdapUserInfo__WEBPACK_IMPORTED_MODULE_11__","app_types__WEBPACK_IMPORTED_MODULE_12__","_state_actions__WEBPACK_IMPORTED_MODULE_13__","LdapPage","fetchUserMapping","onClearUserError","clearUserMappingInfo","react_hot_loader__WEBPACK_IMPORTED_MODULE_2__","react_redux__WEBPACK_IMPORTED_MODULE_3__","grafanaAppDirective","pluginDirectiveLoader","variableQueryEditorLoader","panelHeader","scrollbarWidth","hasNoOverlayScrollbars","div_1","newStyles_1","MsOverflowStyle","getScrollbarWidth","addClassIfNoOverlayScrollbar","classname","htmlElement","dashboard_loaders_LoadDashboardCtrl","LoadDashboardCtrl","dashboardLoaderSrv","$browser","slug","loadDashboard","initDashboard","getDashboardBySlug","homeDash","redirectUri","NewDashboardCtrl","reactContainer","locals","$$route","routeInfo","WrapInProvider","folders_CreateFolderCtrl","validationSrv","titleTouched","getNav","hasValidationError","titleChanged","validationError","CreateFolderCtrl","FolderPageLoader","activeChildId","dashTab","FolderDashboardsCtrl","manage_dashboards_DashboardImportCtrl","DashboardImportCtrl","nameExists","uidExists","autoGenerateUid","autoGenerateUidValue","initialFolderTitle","gnetUrl","checkGnetDashboard","onUpload","inputs","__inputs","inputModel","setDatasourceOptions","inputsValid","uidChanged","inputValueChanged","validateNewDashboardName","hasNameValidationError","nameValidationError","uidValidationError","onEnterFolderCreation","onExitFolderCreation","dashUrl","importedUrl","loadJsonText","parseError","jsonText","gnetError","gnetInfo","back","google","github","gitlab","grafana_com","generic_oauth","hrefName","loginServices","serviceElementsEnabled","serviceElements","LoginForm","onChangePassword","onChangeUsername","displayForgotPassword","newPassword","onNewPasswordChange","onConfirmPasswordChange","onSkip","ChangePassword","userInput","ng-model","loginHint","passwordHint","isOauthEnabled","disableUserSignUp","LoginForm_LoginForm","LoginServiceButtons","UserSignup","react_transition_group","appear","ChangePassword_ChangePassword","importStatement","fallback","LoadingChunkPlaceHolder","LazyComponent","setupAngularRoutes","$routeProvider","$locationProvider","html5Mode","SafeDynamicImport","Home","importDashboardPage","pageClass","Normal","reloadOnSearch","New","folders_FolderDashboardsCtrl","handlers","handlers_1_1","handlers_1","AngularLoader","compiledElem","AngularLoader_AngularLoader","buildNavIndex","locationReducer","core_redux","omitBy","lastUpdated","appNotification_initialState","toggleLogActions","newPages","logActions","state_actions","reducers_initialState","state_reducers","alertRules","alertRulesViewModel","dto","evalData","noData","convertToAlertRule","initialTeamsState","hasFetched","initialTeamState","members","searchMemberQuery","teams_state_actions","LoadTeams","LoadTeamMembers","api_keys_state_actions","initialApiKeysState","api_keys_state_reducers","apiKeys","LoadApiKeys","folders_state_actions","processAclItems","processAclItem","sortRank","userLogin","folders_state_reducers","hasChanged","dashboard_state_actions","NotStarted","dashboard_state_reducers","state_reducers_initialState","initPhase","Fetching","Services","isInitSlow","Failed","initError","Completed","panelEditor","panel_editor_state_reducers","actions_location","logs_model","ResultProcessor","getGraphResult","types_explore","onlyTimeSeries","isTimeSeries","getTableResult","onlyTables","getLogsResult","sortedNewResults","createEmptyQueryResponse","datasourceError","datasourceLoading","exploreDatasources","scanRange","queryKeys","supportedModes","initialExploreItemState","actionTypes","nextQueries","logsHighlighterExpressions","nextQuery","containerWidth","live","Streaming","isPaused","graphResult","tableResult","showingStartPage","Boolean","StartPage","expressions","eventBridge","getModesForDatasource","datasourceMissing","requestedDatasourceName","modification","modifier","nextQueryKeys","hiddenLogLevels","urlReplaced","loadingState","processQueryResponse","endTime","ResultProcessor_ResultProcessor","currentMode","supportsGraph","supportsLogs","explore_state_reducers","initialExploreState","targetSplit","itemId","SplitOpen","itemState","ResetExplore","force","isInteger","leftState","rightState","updateChildRefreshState","exploreId","exploreItemState","itemReducer","plugins_state_actions","plugins_state_reducers_initialState","LayoutSelector","isLoadingPluginDashboards","plugins_state_reducers","SetLayoutMode","datasources_state_actions","datasources_state_reducers_initialState","datasources_state_reducers","dataSourcesCount","dataSourceTypes","isLoadingDataSources","dataSourceTypeSearchQuery","dataSourceMeta","users_state_actions","users_state_reducers_initialState","canInvite","users_state_reducers","LoadUsers","LoadInvitees","SetUsersSearchQuery","profile_state_reducers_initialState","profile_state_reducers","org_state_actions","org_state_reducers_initialState","org_state_reducers","SetOrganizationName","admin_state_reducers","syncInfo","connectionError","admin_state_actions","core_reducers","teams_state_reducers","utilSrv","bridgeSrv","keybindingSrv","angularLoader","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","redux","rootReducer","rootReducers","storeEnhancers","redux_logger","predicate","application","redux_thunk_es","localScope","GrafanaCtrl_GrafanaCtrl","cookie","drops","setViewModeBodyClass","lastActivity","activeUser","inActiveTimeLimit","checkForInActiveUser","userActivityDetected","capture","passive","setInterval","clickAutoHide","clickAutoHideParent_1","VariableEditorCtrl","templating_variable","namePattern","optionsLimit","refreshOptions","setNewMode","addVariable","form","sameName","getTagKeys","createVariableFromModel","datasourceTypes","typeChanged","oldIndex","removeVariable","showMoreOptions","editor_ctrl_VariableEditorCtrl","Edge","_linkTo","inputEdges","outputEdges","edges","inputNode","outputNode","unlink","onode","inode","getEdgeFrom","getEdgeTo","getOptimizedInputEdges","toBeRemoved","edgeToRemove","createNode","createNodes","outputArr","inputNodes","inputArr","n_1","getNode","n_2","outputNodes","createEdge","VariableSrv","onTimeRangeUpdated","updateUrlParamsWithCurrentVariables","initLock","queryParams","processVariable","previousOptions","templateVariableValueUpdated","dependencies","otherVariable","dependsOn","urlValue","setValueFromUrl","ctor","emitChangeEvents","selectOptionsForCurrentValue","validateVariableSelectionState","setValue","setOptionFromUrl","defaultText","castArray","setOptionAsCurrent","createGraph","g","v1","v2","variable_srv_VariableSrv","IntervalVariable","auto_min","auto_count","updateAutoValue","QueryVariable","updateOptionsFromMetricFindQuery","updateTags","useTags","metricFindQuery","tagsQuery","tagKey","tagValuesQuery","metricNamesToVariableValues","includeAll","addAllOption","metricNames","sortVariableValues","sortType","reverseSort","toLower","query_variable_QueryVariable","DatasourceVariable","datasource_variable_DatasourceVariable","CustomVariable","ConstantVariable","constant_variable_ConstantVariable","adhoc_variable_AdhocVariable","AdhocVariable","escapeDelimiter","unescapeDelimiter","setFilters","TextBoxVariable","TextBoxVariable_TextBoxVariable","PluginSettingsCache","AppPageCtrl","initPage","app","pluginNav","plugin_page_ctrl_AppPageCtrl","loadPanelComponentInfo","componentInfo","class","panelInfo","plugin_loader","panelPlugin","registered","templatePromise","relativeTemplateUrlToAbs","cached","getTemplate","registerPluginComponent","notFound","bindings","directiveName","$broadcast","appendAndCompile","panel-ctrl","dsMeta_1","datasourceMeta","onModelChanged","model_1","appModel","appEditCtrl","app-model","app-edit-ctrl","appPlugin","appModel_1","angularPages","getModule","templating_DefaultVariableQueryEditor","DefaultVariableQueryEditor","loadComponent","ChangeTracker","originalCopyDelay","originalPath","onbeforeunload","ignoreChanges","hasChanges","open_modal","fromExplore","fromScript","fromFile","cleanDashboardFromIgnoredChanges","dashData","currentTimepicker","originalTimepicker","discardChanges","gotoNext","saveChanges","baseLen","absUrl","nextUrl","tracker","ChangeTracker_ChangeTracker","unsavedChangesSrv","moment","DashboardLoaderSrv","_dashboardLoadFailed","dashboardNotFound","_loadScriptedDashboard","isFolder","addDashboardImpression","_executeScript","scriptResult","Function","scriptFunc","deferred_1","DashboardLoaderSrv_DashboardLoaderSrv","setupNew","iconMap","DashLinksEditorCtrl","addLink","editLink","saveLink","moveLink","deleteLink","asDropdown","anchorSanitized","$last","DashLinksContainerCtrl","linkDef","buildLinks","generatedLinks","currentDashId","searchHits","updateDashLinks","DashLinksContainerCtrl_DashLinksContainerCtrl","variableLookup","_g","datasourceVariable","refName","templateizeDatasourceUsage","panelDef","requires","_h","_j","processPanel","_l","_k","_m","_o","_p","_q","annotationDef","newObj","DashExportCtrl","exporter","DashboardExporter_DashboardExporter","saveDashboardAsFile","shareExternally","makeExportable","dashboardJson","openSaveAsDialog","viewJson","openJsonModal","FileSaver","DashExportCtrl_DashExportCtrl","ExportDataModalCtrl","asRows","export","ExportDataModalCtrl_ExportDataModalCtrl","rootName","loadInitialValue","FolderPickerCtrl","enableCreateNew","enableReset","initialTitle","createNewFolder","enterFolderCreation","$folder","newFolderNameChanged","newFolderNameTouched","validateNewFolderName","newFolderName","closeCreateFolder","cancelCreateFolder","exitFolderCreation","resetFolder","rootFolder","initialFolderId","FolderPickerCtrl_FolderPickerCtrl","HistoryListCtrl","historySrv","appending","canCompare","onDashboardSaved","resetFromSource","switchMode","addToLog","getLog","revisionSelectionChanged","revisions","formatBasicDate","getDiff","newInfo","baseInfo","isNewLatest","new","diffType","calculateDiff","revisions_1","revisions_1_1","rev","createdDateString","created","ageString","isLastPage","basic","restoreConfirm","HistoryListCtrl_HistoryListCtrl","HistorySrv_HistorySrv","HistorySrv","getHistoryList","restoreDashboard","UnsavedChangesModalCtrl","discard","SaveDashboardAsModalCtrl_template","SaveDashboardAsModalCtrl","isValidFolderSelection","hideControls","copyTags","SaveDashboardModalCtrl","saveTimerange","originalCurrent","timeChange","variableValueChange","isSaving","saveForm","SaveDashboardModalCtrl_template","SaveProvisionedDashboardModalCtrl","getJsonForClipboard","modeSharePanel","modalTitle","queryStart","includeTemplateVars","forCurrent","soloUrl","iframeHtml","imageUrl","getLocalTimeZone","Intl","utcOffset","DateTimeFormat","resolvedOptions","getShareUrl","shareUrl","SaveProvisionedDashboardModalCtrl_template","SaveProvisionedDashboardModalCtrl_SaveProvisionedDashboardModalCtrl","ShareModalCtrl","ShareSnapshotCtrl_ShareSnapshotCtrl","ShareSnapshotCtrl","expireOptions","accessOptions","sharingButtonText","externalEnabled","apiUrl","createSnapshot","external","saveSnapshot","timeoutSeconds","cmdData","getSnapshotUrl","scrubDashboard","singlePanel","deleteSnapshot","removeTagFilterSegment","AdHocFiltersCtrl","getTagValues","updateVariableModel","filterIndex","hasFakes","AdHocFiltersCtrl_template","AdHocFiltersCtrl_AdHocFiltersCtrl","RowOptionsCtrl","SlideDown","PermissionsInfo","onOpenAddPermissions","isAdding","onCancelAddPermission","DashboardPermissions","AddPermission","components_DashboardPermissions_DashboardPermissions","playlists_ctrl_PlaylistsCtrl","PlaylistsCtrl","startUrl","removePlaylistConfirmed","playlist","removePlaylist","PlaylistSearchCtrl","prom","dashboardResult","tagResult","searchStarted","PlaylistSrv","numberOfLoops","cancelPromise","filteredParams","pickBy","queryParamsToPreserve","nextDashboardUrl","validPlaylistUrl","storeUpdated","playlistId","storeUnsub","playlist_srv_PlaylistSrv","PlaylistEditCtrl","tagresult","isNew","playlistItems","filterFoundPlaylistItems","filteredDashboards","dashboardresult","playlistItem","listPlaylistItem","filteredTags","addPlaylistItem","addTagPlaylistItem","savePlaylist","playlist_edit_ctrl_PlaylistEditCtrl","grafanaRoutes","getMenu","listItemClass","renderMenuItem","panel_header_template","menuScope","menuElem","targetClass","menuHtml","createMenuTemplate","isDragged","src_core","$document","infoDrop","panelScrollbar","lastAlertState","panelContainer","panelContent","cornerInfoElem","resizeScrollableContent","updatePanelCornerInfo","cornerMode","getInfoContent","hoverOpenDelay","targetAttachment","__proto__","transparentLastState","hasAlertRule","lastHasAlertRule","alertState","$watchGroup","dynamicDirectiveSrv","directiveCache","directiveModule","panelEditorTab","queryCtrl","toggleEditorMode","QueryRowCtrl","canCollapse","dashRepeatOptionDirective","optionChanged","PanelLinksEditorCtrl","queryStr","hits","dashboardChanged","uri","module_PanelLinksEditorCtrl","SelectOrgCtrl","SelectOrgCtrl_SelectOrgCtrl","NewOrgCtrl_NewOrgCtrl","NewOrgCtrl","newOrg","createOrg","sendInvite","UserInviteCtrl","admin_AdminListUsersCtrl","AdminListUsersCtrl","pages","showPaging","getUsers","perPage","totalPages","addUsersAuthLabels","navigateToPage","authLabel","getAuthLabel","authLabelStyle","getAuthLabelStyle","authLabels","user_id","passwordForm","updatePermissions","userForm","orgUser","removeOrgUser","searchOrgs","orgsSearchCache","addOrgUser","addOrgForm","orgInfo","loginOrEmail","deleteUser","disableUser","isExternal","actionEndpoint","AdminEditUserCtrl","AdminListOrgsCtrl","getOrgs","deleteOrg","admin_AdminEditOrgCtrl","orgUsers","orgDetailsForm","updateOrgUser","getOrgUsers","admin_StyleGuideCtrl","StyleGuideCtrl","switchTheme","cmd","AdminSettingsCtrl","AdminHomeCtrl","admin_AdminEditUserCtrl","admin_AdminListOrgsCtrl","NotificationsEditCtrl_AlertNotificationEditCtrl","AlertNotificationEditCtrl","testSeverity","httpMethod","autoResolve","uploadImage","getFrequencySuggestion","notifiers","notifier","getNotifierTemplateId","optionsTemplate","notifierTemplateId","deleteNotification","testNotification","theForm","frequency","AlertNotificationsListCtrl","loadNotifications","existingErrorMessage","nameLowerCased","hitTypes","hits_1_1","hits_1","ValidationSrv_ValidationSrv","MoveToFolderCtrl","successCount","MoveToFolderCtrl_MoveToFolderCtrl","uploadDashboardDirective","uploadDashboardDirective_template","btnText","isDefined","wnd","File","FileReader","FileList","files","reader","onload","readAsText","DashboardListCtrl","SnapshotListCtrl","externalUrl","removeSnapshotConfirmed","removeSnapshot","SnapshotListCtrl_SnapshotListCtrl","CreateTeamCtrl","ProfileCtrl_ProfileCtrl","ProfileCtrl","suggestUrl","noDirectAccess","pre","showAccessOption","showAccessHelp","toggleAccessHelp","getSuggestUrls","onBasicAuthPasswordReset","passwordHandlers","BasicAuthPassword","onBasicAuthPasswordChange","array","fromIndex","toIndex","extensionsIndex","GrafanaApp","$controllerProvider","$compileProvider","$filterProvider","$httpProvider","$provide","preAssignBindingsEnabled","debugInfoEnabled","useApplyAsync","registerFunctions","decorator","$delegate","ngModuleDependencies","useModule","bootstrap","modulePath"],"mappings":"8FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAAAP,EAAAC,EAAAC,EAAA,sBAAAM,IAAAR,EAAAC,EAAAC,EAAA,sBAAAO,IAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,IAAA,IAAAC,EAAAX,EAAA,QAAAY,EAAAZ,EAAA,QAAAa,EAAAb,EAAA,QAAAc,EAAAd,EAAA,QAAAe,EAAAf,EAAA,QAAAgB,EAAAhB,EAAA,QAAAiB,EAAAjB,EAAA,QAAAkB,EAAAlB,EAAA,QAqBaG,EAAc,SAACgB,EAA2BC,EAAmBC,GAExE,IAAY,IAARA,EAeJF,EAAUhB,YAAYiB,OAftB,CACE,IAAME,EAAQF,EAAMG,MAAQ,2EAA6E,KACnGC,EAAcJ,EAAMG,MAAQ,MAAQ,KAE1CR,EAAA,EAAUU,KAAK,gBAAiB,CAC9BC,MAAO,eACPC,KAAM,8CACNL,MAAOA,EACPM,KAAM,WACNJ,YAAaA,EACbK,QAAS,SACTC,UAAW,WAAM,OAAA3B,EAAYgB,EAAWC,GAAO,QAOxChB,EAAiB,SAACe,EAA2BC,GACxDD,EAAUf,eAAegB,IAGdf,EAAY,SAACe,GACxBT,EAAA,EAAMoB,IAAIb,EAAA,EAAmBc,KAAKC,UAAUb,EAAMc,iBAClDnB,EAAA,EAAUU,KAAK,gBAAiB,CAAC,2CAmBtBnB,EAAgB,SAACa,EAA2BC,GACvD,IAAMe,EAAQ,CACZC,OAAQhB,EAAMc,eACdG,cAAe,SAACC,EAAsBC,IAnBrB,SAACpB,EAA2BmB,EAAsBC,GACrE,IAAMC,EAAQrB,EAAUsB,OAAOC,UAAU,SAAAtB,GACvC,OAAOA,EAAMuB,KAAOJ,EAASI,KAGzBC,EAAezB,EAAUsB,OAAOI,OAAOL,EAAO,GACpDrB,EAAU2B,OAAOrB,KAAK,gBAAiBmB,IAEvCN,EAAW,IAAI1B,EAAA,EAAW0B,IACjBK,GAAKJ,EAASI,GAEvBxB,EAAUsB,OAAOI,OAAOL,EAAO,EAAGF,GAClCnB,EAAU4B,sBACV5B,EAAU2B,OAAOrB,KAAK,cAAea,GAOjCU,CAAa7B,EAAWmB,EAAUC,IAEpCU,UAAW9B,EAAU+B,KAAKC,QAC1BC,YAAY,GAGdrC,EAAA,EAAUU,KAAK,aAAc,CAC3B4B,IAAK,qCACLlB,MAAOA,KAIE5B,EAAa,SAACY,EAA2BC,GACpDL,EAAA,EAAUU,KAAK,aAAc,CAC3B4B,IAAK,oEACLlB,MAAO,CACLhB,UAAWA,EACXC,MAAOA,MAqBN,SAASZ,EAAwBY,EAAmBkC,GACzD,IAAMC,EAAc,CAClBC,SAAU,GACVF,UAAWA,GAGb,GAAIlC,EAAMqC,SAAU,CAClB,IAAMC,EAAuBzC,EAAA,EAAY0C,QAAQvC,EAAMqC,SAAUrC,EAAMwC,YACjEC,EAAe/C,EAAA,UAAUgD,kBAAkBJ,GACjD,GAAIG,EAAaE,QAEf,OADAR,EAAYC,SAAW,wBAChBD,EAGT,GAAIS,OAAAnD,EAAA,SAAAmD,CAAUV,EAAUW,IAAIC,MAAO,CACjC,IAAMC,EAAerD,EAAA,SAASsD,MAAMP,EAAaK,MACjDX,EAAYC,SAAWK,EAAaQ,QACpCd,EAAYD,UAAY,CACtBY,KAAMC,EACNG,GAAIxD,EAAA,SAASsD,MAAMP,EAAaS,IAChCL,IAAK,CACHC,KAAML,EAAaK,KACnBI,GAAIT,EAAaS,MAMzB,GAAIlD,EAAMmD,UAAW,CACnB,IAAMC,EAAwBvD,EAAA,EAAY0C,QAAQvC,EAAMmD,UAAWnD,EAAMwC,YAEzE,GADsB9C,EAAA,UAAUgD,kBAAkBU,GAChCT,QAEhB,OADAR,EAAYC,SAAW,oBAChBD,EAGT,IAAMgB,EAAY,IAAMC,EACxBjB,EAAYC,UAAY,cAAgBe,EACxC,IAAML,EAAOpD,EAAA,SAAS2D,cAAcF,EAAWhB,EAAYD,UAAUY,MAAM,GACrEI,EAAKxD,EAAA,SAAS2D,cAAcF,EAAWhB,EAAYD,UAAUgB,IAAI,GAEvEf,EAAYD,UAAY,CACtBY,KAAIA,EACJI,GAAEA,EACFL,IAAK,CACHC,KAAIA,EACJI,GAAEA,IASR,OAJIlD,EAAMsD,mBACRnB,EAAYC,SAAW,IAGlBD,EAGF,SAAS9C,EAAcW,GAC5B,IACMuD,EADSC,SAASC,qBAAqB,QAAQ,GAChCC,wBAAwBH,MAE7C,OAAOvD,EAAM2D,cAAgB3D,EAAM2D,cAAgBC,KAAKC,KAAKN,GAASvD,EAAM8D,QAAQC,EAAI,KAGnF,SAASzE,EAA0BU,EAAmBgE,GAC3D,OACEA,GACChE,EAAMiE,WAAarE,EAAA,EAAOsE,MAAMC,kBAAoB,GACzB,EAA5BvE,EAAA,EAAOsE,MAAME,aACbtE,EAAA,0JC3JJuE,EAAA,SAAAC,GAGE,SAAAD,EAAYE,GAAZ,IAAAC,EACEF,EAAAG,KAAAC,KAAMH,IAAMG,YACZF,EAAKG,MAAQ,CAAEC,WAAW,GAC1BJ,EAAKK,OAASL,EAAKK,OAAOC,KAAKN,GAE/BA,EAAKO,gBAAkBnC,OAAAnD,EAAA,SAAAmD,CAAS4B,EAAKK,OAAQ,IAAK,CAChDG,SAAS,EACTC,UAAU,MA8ChB,OAxDgCC,EAAA,EAAAb,EAAAC,GAc9BD,EAAAc,UAAAN,OAAA,SAAOO,GAAP,IAAAZ,EAAAE,KACQW,EAAazC,OAAA0C,EAAA,EAAA1C,GAOnB,OANA8B,KAAKa,SAAS,CAAEX,WAAW,IAEvBY,EAAAC,EAAEC,MAAMN,KACVA,EAAQ,IAGHC,EACJM,IAAI,+BAA+BP,EAAK,aACxCQ,KAAK,SAACC,GACL,OAAOA,EAAOC,IAAI,SAACC,GAAc,OAC/BxE,GAAIwE,EAAKC,OACTC,MAAOF,EAAKC,OACZE,MAAOH,EAAKI,MACZC,OAAQL,EAAKM,UACbF,MAAOJ,EAAKI,WAGfG,QAAQ,WACP9B,EAAKe,SAAS,CAAEX,WAAW,OAIjCP,EAAAc,UAAAoB,OAAA,WACQ,IAAAC,EAAA9B,KAAAH,MAAEkC,EAAAD,EAAAC,UAAWC,EAAAF,EAAAE,WACX9B,EAAAF,KAAAC,MAAAC,UAER,OACE+B,EAAAlB,EAAAmB,cAAA,OAAKH,UAAU,eACbE,EAAAlB,EAAAmB,cAACC,EAAA,YAAW,CACVJ,UAAWA,EACX7B,UAAWA,EACXkC,gBAAgB,EAChBC,YAAarC,KAAKK,gBAClBiC,SAAUN,EACVO,YAAY,cACZC,iBAAkB,WAAM,4BAKlC7C,EAxDA,CAAgC8C,EAAA,iCCvBhC,IAAAC,EAAA,kEAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,GAAgEA,EAAAC,IAAAN,EADhE,6/EAEAG,EAAAI,QAAAP,wBCHA,IAAAA,EAAA,yEAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,GAAgEA,EAAAC,IAAAN,EADhE,++DAEAG,EAAAI,QAAAP,wBCHA,IAAAA,EAAA,4CAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,GAAgEA,EAAAC,IAAAN,EADhE,0GAEAG,EAAAI,QAAAP,wBCHA,IAAAA,EAAA,oEAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,GAAgEA,EAAAC,IAAAN,EADhE,sgNAEAG,EAAAI,QAAAP,wBCHA,IAAAA,EAAA,iDAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,GAAgEA,EAAAC,IAAAN,EADhE,m1FAEAG,EAAAI,QAAAP,wBCHA,IAAAA,EAAA,iCAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,GAAgEA,EAAAC,IAAAN,EADhE,kVAEAG,EAAAI,QAAAP,2IC0RYQ,cAtQZC,EAAA,SAAAvD,GAQE,SAAAuD,EAAYC,GAAZ,IAAAtD,EACEF,EAAAG,KAAAC,OAAOA,YACPF,EAAKsD,gBAAkBA,EACvBtD,EAAKuD,WAAa,KA+DtB,OAtEU7C,EAAA,EAAA2C,EAAAvD,GAURuD,EAAA1C,UAAA6C,gBAAA,SAAgBC,GAEd,OADAvD,KAAKqD,WAAWG,aAAeD,EACxBvD,MAGTmD,EAAA1C,UAAAgD,cAAA,SAAcC,GAEZ,OADA1D,KAAK2D,kBAAoBD,EAClB1D,MAGTmD,EAAA1C,UAAAmD,aAAA,SAAaC,GAEX,OADA7D,KAAKqD,WAAWQ,UAAYA,EACrB7D,MAGTmD,EAAA1C,UAAAqD,uBAAA,SAAuBC,GAErB,OADA/D,KAAKqD,WAAWU,qBAAuBA,EAChC/D,MAGTmD,EAAA1C,UAAAuD,eAAA,SAAeC,GAEb,OADAjE,KAAKqD,WAAWY,YAAcA,EACvBjE,MAGTmD,EAAA1C,UAAAyD,qBAAA,SAAqBC,GAEnB,OADAnE,KAAKqD,WAAWc,kBAAoBA,EAC7BnE,MAGTmD,EAAA1C,UAAA2D,4BAAA,SAA4BD,GAE1B,OADAnE,KAAKqD,WAAWgB,yBAA2BF,EACpCnE,MAGTmD,EAAA1C,UAAA6D,yBAAA,SAAyBH,GAEvB,OADAnE,KAAKqD,WAAWkB,sBAAwBJ,EACjCnE,MAGTmD,EAAA1C,UAAA+D,oBAAA,SAAoBC,GAElB,OADAzE,KAAKqD,WAAWoB,iBAAmBA,EAC5BzE,MAGTmD,EAAA1C,UAAAiE,uBAAA,SAAuBC,GAErB,OADA3E,KAAKqD,WAAWsB,oBAAsBA,EAC/B3E,MAGTmD,EAAA1C,UAAAmE,+BAAA,SAA+BC,GAC7B7E,KAAK2D,kBAAoBkB,EAAcnB,WAEvC1D,KAAKqD,WAAWQ,UAAYgB,EAAchB,UAC1C7D,KAAKqD,WAAWU,qBAAuBc,EAAcd,qBACrD/D,KAAKqD,WAAWc,kBAAoBU,EAAcV,kBAClDnE,KAAKqD,WAAWoB,iBAAmBI,EAAcJ,iBACjDzE,KAAKqD,WAAWY,YAAcY,EAAcZ,YAC5CjE,KAAKqD,WAAWsB,oBAAsBE,EAAcF,qBAExDxB,EA1EA,WAIU,GAkIV2B,EAAA,WAiHA,OA9FE,SAAYC,GACV/E,KAAKgF,KAAOD,EAAiBC,KAC7BhF,KAAKnD,GAAKkI,EAAiBlI,IArB/B,IAgIA,SAAYqG,GACVA,IAAA,yBACAA,IAAA,+BAFF,CAAYA,MAAgB,2BC7R5B,IAAAR,EAAA,wDAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,GAAgEA,EAAAC,IAAAN,EADhE,iPAEAG,EAAAI,QAAAP,wBCHA,IAAAA,EAAA,4CAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,GAAgEA,EAAAC,IAAAN,EADhE,svCAEAG,EAAAI,QAAAP,wBCHA,IAAAA,EAAA,uDAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,GAAgEA,EAAAC,IAAAN,EADhE,m1PAEAG,EAAAI,QAAAP;;;;ACGO,SAASuC,EAAUvC,EAAchC,GAItC,OAHIA,GAASxC,OAAOgH,KAAKxE,GAAOyE,OAAS,IACvCzC,GAAQ,IAAM0C,EAAY1E,IAErBgC,EAGF,SAAS2C,EAA8BC,EAAaC,GACzD,OAAOC,mBAAmBF,GACvBzH,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,OAAQ,KAChBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,OAAQ0H,EAAkB,MAAQ,KAGxC,SAASH,EAAYrE,GAC1B,IAAM0E,EAAW,GACXC,EAAW,QAEXC,EAAU,SAACC,GACf,MAA+C,mBAAxC1H,OAAOuC,UAAUoF,SAAS9F,KAAK6F,IAGlCE,EAAM,SAACC,EAAWC,GACtBA,EAAiB,mBAANA,EAAmBA,IAAY,OAANA,EAAa,QAAWC,IAAND,EAAkB,GAAKA,EAE3EP,EAAEA,EAAEN,QADW,kBAANa,EACKX,EAA8BU,GAAG,GAAQ,IAAMV,EAA8BW,GAAG,GAEhFX,EAA8BU,GAAG,IAI7CG,EAAc,SAACC,EAAgBP,GACnC,IAAIQ,EAAGC,EAAKC,EAEZ,GAAIH,EACF,GAAIR,EAAQC,GACV,IAAKQ,EAAI,EAAGC,EAAMT,EAAIT,OAAQiB,EAAIC,EAAKD,IACjCV,EAASa,KAAKJ,GAChBL,EAAIK,EAAQP,EAAIQ,IAEhBF,EAAYC,EAAQP,EAAIQ,SAGvB,GAAIR,GAAuB,oBAAhBY,OAAOZ,GACvB,IAAKU,KAAOV,EACVM,EAAYC,EAAS,IAAMG,EAAM,IAAKV,EAAIU,SAG5CR,EAAIK,EAAQP,QAET,GAAID,EAAQC,GACjB,IAAKQ,EAAI,EAAGC,EAAMT,EAAIT,OAAQiB,EAAIC,EAAKD,IACrCN,EAAIF,EAAIQ,GAAGpB,KAAMY,EAAIQ,GAAG7E,YAG1B,IAAK+E,KAAOV,EACVM,EAAYI,EAAKV,EAAIU,IAGzB,OAAOb,GAGT,OAAOS,EAAY,GAAInF,GAAG0F,KAAK,KAG1B,SAASC,EAAiBC,EAAaC,GAC5C,GAAIA,SAA8E,KAAnBA,EAAuB,CACpF,IAAMC,EAAMF,EAAIG,QAAQ,MACX,IAATD,EACEF,EAAIxB,OAAS0B,EAAM,IACrBF,GAAO,KAGTA,GAAO,IAETA,GAAOC,EAGT,OAAOD,EAvFTzM,EAAAC,EAAAC,EAAA,sBAAA6K,IAAA/K,EAAAC,EAAAC,EAAA,sBAAAgL,IAAAlL,EAAAC,EAAAC,EAAA,sBAAAsM;;;;;;;;;CCYA,SAAAK,GAQA,IAAAC,EAAA,WAOA,IAAAC,EAOA1E,EAOA2E,EAOAC,EAOAC,EAgBAJ,EAAA,SAAAK,EAAAC,GACAL,EAAAK,EACA/E,EAAA8E,EAAAE,iBACAL,EAAAG,EAAAG,aACAL,EAAAD,EAAAE,OAAAK,OACAL,EAAAC,EAAAK,UACAC,EAAAR,EAAAS,QA0HA,SAAAC,EAAAC,EAAAC,GAEA,SAAAD,EAAAE,MAAAnJ,QACAiJ,EAAAE,MAAAnJ,MAAAK,KAAA+I,IAAA,EAAAF,EAAA,IAEA,SAAAD,EAAAtG,MAAA0G,SACAJ,EAAAtG,MAAA0G,OAAAhJ,KAAA+I,IAAA,EAAAF,EAAA,KAEA,SAAAD,EAAAtG,MAAA2G,KAAAC,OACAN,EAAAtG,MAAA2G,KAAAC,KAAAlJ,KAAA+I,IAAA,EAAAF,EAAA,IAEA,SAAAD,EAAAvG,MAAA2G,SACAJ,EAAAvG,MAAA2G,OAAAhJ,KAAA+I,IAAA,EAAAF,EAAA,KAEA,SAAAD,EAAAvG,MAAA4G,KAAAC,OACAN,EAAAvG,MAAA4G,KAAAC,KAAAlJ,KAAA+I,IAAA,EAAAF,EAAA,IAEA,SAAAD,EAAAO,UAAAxJ,QACAiJ,EAAAO,UAAAxJ,MAAAK,KAAA+I,IAAA,EAAAF,EAAA,MAEA,SAAAD,EAAAO,UAAA7G,MAAA0G,SACAJ,EAAAO,UAAA7G,MAAA0G,OAAAhJ,KAAA+I,IAAA,EAAAF,EAAA,KAEA,SAAAD,EAAAO,UAAA7G,MAAA2G,KAAAC,OACAN,EAAAO,UAAA7G,MAAA2G,KAAAC,KAAAlJ,KAAA+I,IAAA,EAAAF,EAAA,KAsKA,SAAAO,EAAAR,EAAAS,EAAAC,GACA,IAAAzH,EACA+G,EAAAE,MAAAS,YACAX,EAAAE,MAAAU,SAAAZ,EAAAE,MAAAS,cACAD,EAAAV,EAAAE,MAAAW,MAAAb,EAAAE,MAAAC,IAAAH,EAAAE,MAAAW,MAOA,OALA5H,EAAA+G,EAAAE,MAAAS,WACA1H,EAAA+G,EAAAE,MAAAS,WACa1H,EAAA+G,EAAAE,MAAAU,WACb3H,EAAA+G,EAAAE,MAAAU,UAEA3H,EAiDA,SAAA6H,EAAAC,EAAAC,EAAAC,EAAA1J,EAAA2J,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAL,IAAAC,IAGAhC,EAAAqC,OAEAC,EAAAtC,EAAA4B,EAAAC,EAAAC,EAAA1J,EAAA2J,EAAAC,EAAAC,EAAAC,EAAAC,GAEAC,IACAE,EAAAtC,EAAA4B,EAAAC,EAAAC,EAAA1J,EAAA2J,EAAAC,GACAhC,EAAAuC,OACAvC,EAAAwC,cAAA,EACAxC,EAAAyC,cAAA,EACAzC,EAAA0C,WAAA,GACA1C,EAAA2C,YAAA,OACAL,EAAAtC,EAAA4B,EAAAC,EAAAC,EAAA,EAAA1J,EAAA,EAAA2J,EAAAC,EAAAC,EAAA,IAEAjC,EAAA4C,WA8EA,SAAAC,EAAAhC,EAAAS,EAAAwB,EAAA3D,EAAA7E,EAAAR,GACAiJ,EACAD,EAAAlB,IACAN,EAAA0B,qBAAA1B,EAAA2B,uBAAA,EAAA3B,EAAA4B,QACAjL,KAAAkL,IAAAC,EAAAtJ,IACAgJ,EAAAjB,IACAP,EAAA0B,qBAAA1B,EAAA2B,uBAAA,EAAA3B,EAAA4B,QACAjL,KAAAoL,IAAAD,EAAAtJ,IACA,0BAAAqF,EACA0B,EAAAO,UAAA7G,MAAA+I,UAAAzC,EAAAO,UAAA7G,MAAA+I,UAAAhJ,KACAuG,EAAAO,UAAA7G,MACAT,GA6BA,SAAAiJ,EAAAQ,EAAAC,EAAA5N,EAAAhB,EAAA6O,EAAA3J,GACA,IAAA4J,EAAA5D,EAAAxE,GAAAqI,KAAA,IAAA/N,GACAgO,EAAAF,EAAAxF,OACA0F,KACAF,EAAA5D,EAAA,kBACA+D,KAAA,KAAAjO,GACA8N,EAAAG,KAAA,0BACAvI,EAAAwI,OAAAJ,IAGAA,EAAAK,IAAA,uBACAL,EAAAK,IAAA,MAAAP,EAAA,MACAE,EAAAK,IAAA,wBAEAN,EAAAvC,KAAAC,MACAuC,EAAAK,IAAA,YAAAN,EAAAvC,KAAAC,KAAA,MAEAsC,EAAAvC,KAAA8C,QACAN,EAAAK,IAAA,cAAAN,EAAAvC,KAAA8C,QAEAP,EAAAQ,OACAP,EAAAK,IAAA,QAAAN,EAAAQ,OAEAR,EAAAS,WAAAD,OACAP,EAAAK,IAAA,mBAAAN,EAAAS,WAAAD,OAEAR,EAAAS,WAAAC,SACAT,EAAAK,IAAA,UAAAN,EAAAS,WAAAC,SAEAT,EAAA9O,QAEA8O,EAAAK,IAAA,OAAAR,EAAA,MACAG,EAAAK,IAAA,OAAAK,SAAAV,EAAAK,IAAA,SAAAL,EAAA9L,QAAA,SAGAgM,GAAA9J,IACA4J,EAAAK,IAAA,MAAAK,SAAAV,EAAAK,IAAA,QAAAL,EAAAW,SAAA,QACAX,EAAAK,IAAA,2BAAAjK,EAAA,aAIA,OA3hBAiG,EAAAvG,UAAA8K,gBAAA,WAEA,IAAAC,EAAAjJ,EAAA1D,QACA4M,EAAAlJ,EAAA+I,SAKAI,EAAAxM,KAAAyJ,IAAAvB,EAAAjC,OAAAgC,EAAAoB,OAAAmD,SACAC,EAAAzM,KAAAC,KAAAiI,EAAAjC,OAAAuG,GAIAxD,EAAAf,EAAAoB,OAAAL,OACA0D,EAAAzE,EAAAoB,OAAAqD,QACAC,EAAA1E,EAAAoB,OAAAsD,QACA9D,GAAAyD,EAAA,EAAAtD,EAAA0D,GAAAF,EAAA,IAAAA,EACAI,GAAAL,EAAA,EAAAvD,EAAA2D,GAAAF,EAAA,IAAAA,EACA,GAAAxE,EAAAoB,OAAAwD,OAAA,CACA,IAAAC,EAAA9M,KAAAyJ,IAAAZ,EAAA+D,GACA/D,EAAAiE,EACAF,EAAAE,EAMAnE,EAAAV,EAAAY,GAGA,IAAAkE,EAAA9E,EAAA6E,KAAA9D,OACAgE,EAAA,EACAC,EAAA,EACAhF,EAAA3F,MAAA4K,OACAF,EAAA/E,EAAA3F,MAAA0G,OACAiE,EAAAhF,EAAA3F,MAAA2G,KAAAC,MAEA,IAAAiE,EAAA,EACAC,EAAA,EACAnF,EAAA5F,MAAA6K,OACAC,EAAAlF,EAAA5F,MAAA2G,OACAoE,EAAAnF,EAAA5F,MAAA4G,KAAAC,MAEA,IAAAmE,EAAA,EACApF,EAAAkB,UAAA+D,OACAG,EAAApF,EAAAkB,UAAAxJ,OAEA,IAAAoL,EAAA,EACAC,EAAA,EACA/C,EAAAkB,UAAA7G,MAAA4K,OACAnC,EAAA9C,EAAAkB,UAAA7G,MAAA0G,OACAgC,EAAA/C,EAAAkB,UAAA7G,MAAA2G,KAAAC,MASA,IANA,IAAAoE,EAAAzE,EAAA,EAAAkE,EAAAM,EAAA,EAAAtC,EAAAC,EAEAzB,EAAAtB,EAAAa,MAAAS,WACAC,EAAAvB,EAAAa,MAAAU,SACA+D,GAAA/D,EAAAD,GAAA,IACAiE,GAAA,EACA3L,EAAA0H,EAAoC1H,EAAA2H,EAAc3H,GAAA0L,EAClDC,EAAAxN,KAAA+I,IAAAyE,EAAAxN,KAAAoL,IAAAD,EAAAtJ,KAGA,IAAA4L,GAAAb,EAAA,EAAAG,EAAA,EAAAC,EAAAC,IAAA,GADAO,EAAAxN,KAAA+I,IAAAyE,EAAAxN,KAAAoL,IAAAD,EAAA3B,OAEAiE,EAAAD,EAAAL,EAAAC,EAAA,IACAK,EAAAb,EAAA,EAAAG,EAAA,EAAAC,EAAAC,EAAAE,EAAAC,EAAA,GAEA,IAAAM,EAAAD,EAAA,EAAA1C,EAAAC,EAAAqC,EAEApC,EAAAjL,KAAAyJ,IAAA6D,EAAAI,GAGA/N,EAAAsI,EAAAa,MAAAnJ,MACAA,GAAAsL,IACAtL,EAAAK,KAAA+I,IAAA,EAAAkC,EAAA,IAIA,IAAA0C,EAAA,EAAA5C,EAAAC,EAAAqC,EAAApC,EAGA,OACAqB,cACAC,eACAvD,SACA0D,UACAC,UACAH,UACAC,OACA5D,YACA+D,aACAG,aACAC,cACAC,gBACAE,cACAC,gBACAzN,QACAsL,SACAoC,iBACAtC,uBACAC,yBACA4C,iBAtBA5N,KAAA+I,IAAA4E,GAAA,EAAAH,GAAAG,EAAAR,EAAAC,EAAA,KA6DAtF,EAAAvG,UAAAoH,sBAWAb,EAAAvG,UAAAsM,oBAAA,SAAAjF,EAAAS,EAAAnC,GAGA,IAAArD,EAuZA,SAAA2I,EAAAtF,GACA,OAAAA,EAAAsF,EAxZAsB,CAAAzE,EAAAmD,QAAAtF,GACA2C,EAmaA,SAAA2C,EAAAtF,GACA,OAAAlH,KAAA+N,MAAA7G,EAAAsF,GApaAwB,CAAA3E,EAAAmD,QAAAtF,GACAoE,EAAAjC,EAAAL,QAAAK,EAAAR,UAAAQ,EAAAqD,SAAA7I,EACA0H,EAAAlC,EAAAL,QAAAK,EAAAuD,WAAAvD,EAAAsD,SAAA9C,EACAF,EAAA2B,EAAAjC,EAAAR,UAAA,EACAe,EAAA2B,EAAAlC,EAAA0D,WAAA,EAAA1D,EAAA2D,YAAA3D,EAAA4D,cAAA5D,EAAAgE,eACAhE,EAAA2B,uBAAA,EAAA3B,EAAA0B,qBAAA1B,EAAA4B,OACAgD,EAAA5E,EAAAuD,WAAA,EAAAvD,EAAA0D,WAAA,EAAA1D,EAAA2D,YAAA3D,EAAA4D,cAAA5D,EAAAuE,iBACAM,EAAA,EAQA,MAPA,WAAAtF,EAAAkE,KAAAqB,OACAD,EAAAD,EAAA,EACa,WAAArF,EAAAkE,KAAAqB,SACbD,EAAAD,GAEArE,GAAAsE,EAEA,CACAJ,IAAAjK,EACAmK,IAAAnE,EACAyB,IACAC,IACA2C,UACArF,UAAAQ,EAAAR,UACA+D,WAAAvD,EAAAuD,WACAG,WAAA1D,EAAA0D,WACApD,KACAC,OAUA9B,EAAAvG,UAAA6M,eAAA,SAAA/E,GAEApB,EAAAoG,MAAAnB,OAGAnF,EAAAqC,OACArC,EAAAuG,YAAAtG,EAAAuG,KAAAC,YACAzG,EAAA0G,UAAAzG,EAAAuG,KAAAG,YACA3G,EAAA4G,WAAA,IAAAtF,EAAAiD,YAAAjD,EAAAkD,cACAvE,EAAAuG,KAAAK,kBACA7G,EAAA8G,UAAA7G,EAAAuG,KAAAK,gBACA7G,EAAA+G,SAAA,IAAAzF,EAAAiD,YAAAjD,EAAAkD,eAEAxE,EAAA4C,YAUA7C,EAAAvG,UAAAwN,mBAAA,SAAAnG,EAAAiC,GAEA9C,EAAAqC,OACAxB,EAAAkE,KAAAkC,QAAApG,EAAAkE,KAAAkC,OAAA9B,MAAAtE,EAAAkE,KAAAkC,OAAAhD,OAAApD,EAAAkE,KAAAkC,OAAArP,QACAoI,EAAAuG,YAAA1F,EAAAkE,KAAAkC,OAAAhD,MACAjE,EAAA0G,UAAA7F,EAAAkE,KAAAkC,OAAArP,MACAoI,EAAA4G,WAAA9D,EAAAS,EAAAT,EAAAU,EAAAV,EAAAhC,UAAAgC,EAAA+B,aAEAhE,EAAAkE,KAAAb,YAAArD,EAAAkE,KAAAb,WAAAD,QACAjE,EAAA8G,UAAAjG,EAAAkE,KAAAb,WAAAD,MACAjE,EAAA+G,SAAAjE,EAAAS,EAAAT,EAAAU,EAAAV,EAAAhC,UAAAgC,EAAA+B,aAEA7E,EAAA4C,WAaA7C,EAAAvG,UAAA0N,UAAA,SAAArG,EAAAS,EAAAwB,EAAAvI,EAAAgH,GAGA,IAAAa,EAAAvB,EAAAE,MAAAoG,OAAAhC,KAAAtE,EAAAE,MAAAoG,OAAA/E,KAAA,EAIAT,EACAmB,EAAAlB,GACAkB,EAAAjB,GACAP,EAAA4B,OACA5B,EAAA1J,MACAwL,EAAAvC,EAAAE,MAAAS,YACA4B,EAAAvC,EAAAE,MAAAU,UACAZ,EAAAE,MAAAkG,OAAAhD,MACApD,EAAAE,MAAAkG,OAAArP,MACAiJ,EAAAE,MAAAmD,WAAAD,MACA7B,GAGA,IAAAgF,EAuBA,SAAAvG,EAAAU,GAEA,IADA,IAAA0C,EACA9E,EAAA,EAA2BA,EAAA0B,EAAAO,UAAAiG,OAAAnJ,OAA2CiB,IAAA,CACtE,IAAAiC,EAAAP,EAAAO,UAAAiG,OAAAlI,GAEA,GADA8E,EAAA7C,EAAA6C,MACA1C,EAAAH,EAAA9G,MACA,MAGA,OAAA2J,EAhCAqD,CAAAzG,EAAAU,GACAgG,EAAAlG,EAAAR,EAAAS,EAAAC,GACAI,EACAmB,EAAAlB,GACAkB,EAAAjB,GACAP,EAAA4B,OAAA,EACA5B,EAAA1J,MAAA,EACAwL,EAAAvC,EAAAE,MAAAS,YACA4B,EAAAmE,GACAH,EACA,EACAA,EACAhF,IAsDArC,EAAAvG,UAAAgO,cAAA,SAAA3G,EAAAS,EAAAwB,GAGA,IADA,IAAA2E,EAAA5G,EAAAE,MAAAS,WACArC,EAAA,EAA2BA,EAAA0B,EAAAO,UAAAiG,OAAAnJ,OAA2CiB,IAAA,CACtE,IAAAiC,EAAAP,EAAAO,UAAAiG,OAAAlI,GACAiI,GAAAhG,EAAA6C,MACAsD,GAAAlG,EAAAR,EAAAS,EAAAF,EAAA9G,OACAgI,EACAtC,EACA8C,EAAAlB,GACAkB,EAAAjB,GACAP,EAAA4B,OAAA5B,EAAAgE,eACAhE,EAAAgE,eAAA,EACAlC,EAAAqE,GACArE,EAAAmE,IACAH,GACA,EACAA,IACAK,EAAAF,KAkDAxH,EAAAvG,UAAAkO,UAAA,SAAA7G,EAAAS,EAAAwB,EAAA3D,EAAAwI,GAEA5E,EACAD,EAAAlB,GACAkB,EAAAU,EAAAV,EAAAkC,WAAA1D,EAAA2D,YAAAnC,EAAAqD,QACA,iBAAAhH,EACA0B,EAAAtG,MAAA+I,UAAAzC,EAAAtG,MAAA+I,UAAAqE,EAAApN,MAAAoN,EAAApG,KAAA,OAAA3M,KACAiM,EAAAtG,QAaAwF,EAAAvG,UAAAoO,UAAA,SAAA/G,EAAAS,EAAAwB,EAAA3D,EAAAwI,GAEA5E,EACAD,EAAAlB,GACAkB,EAAAjB,GAAAhB,EAAAvG,MAAA4G,KAAAC,KAAA,EACA,iBAAAhC,EACA0B,EAAAvG,MAAAgJ,UAAAzC,EAAAvG,MAAAgJ,UAAAqE,EAAApN,MAAAoN,EAAApG,KAAA,OAAA3M,KACAiM,EAAAvG,QAYAyF,EAAAvG,UAAAqO,oBAAA,SAAAhH,EAAAS,EAAAwB,EAAA3D,GAGA0D,EAAAhC,EAAAS,EAAAwB,EAAA,MAAA3D,EAAA0B,EAAAE,MAAAW,IAAAb,EAAAE,MAAAS,YACAqB,EAAAhC,EAAAS,EAAAwB,EAAA,MAAA3D,EAAA0B,EAAAE,MAAAC,IAAAH,EAAAE,MAAAU,UAEA,QAAAqG,EAAA,EAA2BA,EAAAjH,EAAAO,UAAAiG,OAAAnJ,OAA2C4J,IAAA,CACtE,IAAA1G,EAAAP,EAAAO,UAAAiG,OAAAS,GACA,GAAA1G,EAAA9G,MAAAuG,EAAAE,MAAAW,KAAAN,EAAA9G,MAAAuG,EAAAE,MAAAC,IAAA,CACA,IAAAlH,EAAAuH,EAAAR,EAAAS,EAAAF,EAAA9G,OACAuI,EAAAhC,EAAAS,EAAAwB,EAAA3D,EAAA,IAAA2I,EAAA1G,EAAA9G,MAAAR,MAiGAiG,EA7lBA,GAumBA,SAAAW,EAAAqH,GACA,0BAAAC,OAAA,IAAAA,OAAAD,GAAA,KAwCA,SAAA3E,EAAAtJ,GACA,OAAAA,EAAA7B,KAAAgQ,GAmBA,SAAA3F,EAAAtC,EAAA4B,EAAAC,EAAAC,EAAA1J,EAAA2J,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAJ,IAAAC,EAAA,CAIAhC,EAAAqC,OACArC,EAAAkI,YACAlI,EAAAmI,IAAAvG,EAAAC,EAAAC,EAAAC,EAAAC,GAHA,GAIAhC,EAAAoI,OAAAxG,GAAAE,EAAA1J,GAAAH,KAAAkL,IAAAnB,GACAH,GAAAC,EAAA1J,GAAAH,KAAAoL,IAAArB,IACAhC,EAAAmI,IAAAvG,EAAAC,EAAAC,EAAA1J,EAAA4J,EAAAD,GAAA,GACA/B,EAAAqI,YACAnG,IACAlC,EAAA0G,UAAAxE,GAEAD,IACAjC,EAAAuG,YAAAtE,EACAjC,EAAAsI,UAEAnG,IACAnC,EAAA8G,UAAA3E,EACAnC,EAAAuI,QAEAvI,EAAA4C,WAuHA,IAAA4F,EAAA,CACArI,OAAA,CACAK,OAAA,CACAG,MAAA,CACA8H,KAAA,EACAnH,QAAA,EACA9M,OAAA,GAEA2Q,MAAA,EACA7D,OAAA,CACAL,OAAA,EACAwD,QAAA,EACAE,QAAA,EACAC,QAAA,EACAE,QAAA,GAEAwB,MAAA,CACAnB,MAAA,GAEAJ,KAAA,CACAb,WAAA,CACAD,MAAA,MAEAgD,OAAA,CACA9B,MAAA,EACAlB,MAAA,QACArM,MAAA,GAEAqJ,OAAA,EACAmF,OAAA,UAEArF,MAAA,CACAnJ,MAAA,OACA4J,WAAA,GACAC,SAAA,IACAC,IAAA,EACAV,IAAA,IACAkD,WAAA,CACAD,MAAA,SAEAgD,OAAA,CACAhD,MAAA,YACArM,MAAA,GAEAuP,OAAA,CACAhC,MAAA,EACA/C,KAAA,IAGA7H,MAAA,CACA4K,MAAA,EACAlE,OAAA,OACAiD,WAAA,CACAD,MAAA,KACAE,QAAA,GAEAjD,KAAA,CACAC,KAAA,OACA6C,OAAA,cAEAC,MAAA,KACAX,UAAA,SAAA/I,EAAAD,GACA,OAAAC,IAGAD,MAAA,CACA6K,MAAA,EACAlE,OAAA,OACAiD,WAAA,CACAD,MAAA,KACAE,QAAA,GAEAjD,KAAA,CACAC,KAAA,OACA6C,OAAA,cAEAC,MAAA,KACAX,UAAA,SAAA/I,EAAAD,GACA,OAAA8J,SAAA9J,KAGA8G,UAAA,CACA+D,MAAA,EACAvN,MAAA,OACA2C,MAAA,CACA4K,MAAA,EACAlE,OAAA,OACAiD,WAAA,CACAD,MAAA,KACAE,QAAA,GAEAjD,KAAA,CACAC,KAAA,OACA6C,OAAA,eAEAC,MAAA,KACAX,UAAA,SAAAhJ,GACA,OAAAA,IAGA+M,OAAA,OASAvH,EAAAM,KAAAsI,QAAAC,KAAA,CACAC,KA1NA,SAAAxI,GAEAA,EAAAyI,MAAAC,eAAAH,KAAA,SAAAvI,EAAAH,GACAS,EAAAT,EAAAE,OAAAK,OAAAG,OAMAV,EAAAE,OAAAK,OAAA2E,OACAlF,EAAAuG,KAAArB,MAAA,EACAlF,EAAA8I,OAAA5D,MAAA,GAIAlF,EAAAE,OAAAK,OAAAY,UAAAiG,OAEA2B,KAAA,SAAAlP,EAAAmP,GACA,OAAAnP,EAAAQ,MAAA2O,EAAA3O,OACA,EACiBR,EAAAQ,MAAA2O,EAAA3O,MACjB,EAEA,MASA8F,EAAAyI,MAAAK,KAAAP,KAAA,SAAAvI,EAAAJ,GACA,IACAE,EADAE,EAAAG,aACAJ,OAAAK,OAKA,GAHAE,EAAAR,EAAAS,OAGAT,EAAAiF,KAAA,CAIA,IAAAhF,EAAAC,EAAAK,UAEA,GAAAN,KAAAjC,OAAA,CAIA,IAAA6C,EAAA,IAAAhB,EAAAK,EAAAJ,GAGAsB,EAAAP,EAAAuD,kBAGApE,EAAAS,MAAAW,OAKAP,EAAAsF,eAAA/E,GAGA,QAAAnC,EAAA,EAA2BA,EAAAgB,EAAAjC,OAAmBiB,IAAA,CAC9C,IAAAwI,EAAAxH,EAAAhB,GAEA0B,EAAAf,EAAAqJ,OAAA,GAA+CjJ,EAAAyH,EAAAnH,QAC/CmH,EAAAnH,QAEAO,EAAAH,oBAAAC,EAAAS,EAAAR,WAIA,IAAAgC,EAAA/B,EAAA+E,oBAAAjF,EAAAS,EAAAnC,GAGA4B,EAAAiG,mBAAAnG,EAAAiC,GAEAjC,EAAAF,MAAAW,OAIAT,EAAAtG,MAAA4K,MACApE,EAAA2G,UAAA7G,EAAAS,EAAAwB,EAAA3D,EAAAwI,GAGA5G,EAAAmG,UAAArG,EAAAS,EAAAwB,EAAA6E,EAAApN,MAAAoN,EAAApG,KAAA,OAEAV,EAAAO,UAAA+D,MACApE,EAAAyG,cAAA3G,EAAAS,EAAAwB,GAEAjC,EAAAO,UAAA7G,MAAA4K,MACApE,EAAA8G,oBAAAhH,EAAAS,EAAAwB,EAAA3D,GAGA0B,EAAAvG,MAAA6K,MACApE,EAAA6G,UAAA/G,EAAAS,EAAAwB,EAAA3D,EAAAwI,SA2HA1H,QAAAuI,EACAzK,KAAA,QACAqL,QAAA,UA36BA,CA86BCC,8BC17BD,IAAA5N,EAAA,iDAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,GAAgEA,EAAAC,IAAAN,EADhE,g4DAEAG,EAAAI,QAAAP,wBCHA,IAAAA,EAAA,+CAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,GAAgEA,EAAAC,IAAAN,EADhE,0/DAEAG,EAAAI,QAAAP,gECKa6N,EAAiC,SAACzO,OAAE0O,EAAA1O,EAAA0O,KAAMC,EAAA3O,EAAA2O,qBACrD,OACEC,EAAA3P,EAAAmB,cAAA,OAAKH,UAAU,iBACb2O,EAAA3P,EAAAmB,cAAA,OAAKH,UAAU,WACb2O,EAAA3P,EAAAmB,cAAA,SAAOH,UAAU,4BACf2O,EAAA3P,EAAAmB,cAAA,aACEwO,EAAA3P,EAAAmB,cAAA,UACEwO,EAAA3P,EAAAmB,cAAA,MAAIyO,QAAS,GAAC,oBACbF,GAAwBC,EAAA3P,EAAAmB,cAAA,8BAG7BwO,EAAA3P,EAAAmB,cAAA,aACEwO,EAAA3P,EAAAmB,cAAA,UACEwO,EAAA3P,EAAAmB,cAAA,MAAIH,UAAU,YAAU,cACxB2O,EAAA3P,EAAAmB,cAAA,UAAKsO,EAAKxL,KAAK4L,WACdH,GAAwBC,EAAA3P,EAAAmB,cAAA,UAAKsO,EAAKxL,KAAK6L,eAE1CH,EAAA3P,EAAAmB,cAAA,UACEwO,EAAA3P,EAAAmB,cAAA,MAAIH,UAAU,YAAU,WACxB2O,EAAA3P,EAAAmB,cAAA,UAAKsO,EAAKM,QAAQF,WACjBH,GAAwBC,EAAA3P,EAAAmB,cAAA,UAAKsO,EAAKM,QAAQD,eAE7CH,EAAA3P,EAAAmB,cAAA,UACEwO,EAAA3P,EAAAmB,cAAA,MAAIH,UAAU,YAAU,YACxB2O,EAAA3P,EAAAmB,cAAA,UAAKsO,EAAK/O,MAAMmP,WACfH,GAAwBC,EAAA3P,EAAAmB,cAAA,UAAKsO,EAAK/O,MAAMoP,eAE3CH,EAAA3P,EAAAmB,cAAA,UACEwO,EAAA3P,EAAAmB,cAAA,MAAIH,UAAU,YAAU,SACxB2O,EAAA3P,EAAAmB,cAAA,UAAKsO,EAAKO,MAAMH,WACfH,GAAwBC,EAAA3P,EAAAmB,cAAA,UAAKsO,EAAKO,MAAMF,oBC/B1CG,EAAiC,SAAClP,OAAEmP,EAAAnP,EAAAmP,YAC/C,OACEP,EAAA3P,EAAAmB,cAAA,OAAKH,UAAU,iBACb2O,EAAA3P,EAAAmB,cAAA,OAAKH,UAAU,WACb2O,EAAA3P,EAAAmB,cAAA,SAAOH,UAAU,4BACf2O,EAAA3P,EAAAmB,cAAA,aACEwO,EAAA3P,EAAAmB,cAAA,UACEwO,EAAA3P,EAAAmB,cAAA,MAAIyO,QAAS,GAAC,iBAGlBD,EAAA3P,EAAAmB,cAAA,aACEwO,EAAA3P,EAAAmB,cAAA,UACEwO,EAAA3P,EAAAmB,cAAA,MAAIH,UAAU,YAAU,kBACxB2O,EAAA3P,EAAAmB,cAAA,UACG+O,EAAYC,eACXR,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KACET,EAAA3P,EAAAmB,cAAA,KAAGH,UAAU,+BAEb,OAKR2O,EAAA3P,EAAAmB,cAAA,UACEwO,EAAA3P,EAAAmB,cAAA,MAAIH,UAAU,YAAU,UACxB2O,EAAA3P,EAAAmB,cAAA,UACG+O,EAAYG,WACXV,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KACET,EAAA3P,EAAAmB,cAAA,KAAGH,UAAU,mCAGf2O,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KACET,EAAA3P,EAAAmB,cAAA,KAAGH,UAAU,oDC9BpBsP,EAA4B,SAACvP,OAAEwP,EAAAxP,EAAAwP,OAAQb,EAAA3O,EAAA2O,qBAC5Cc,EAAQd,EAAuBa,EAASA,EAAOE,OAAO,SAAA5C,GAAQ,OAAAA,EAAK6C,UAEzE,OACEf,EAAA3P,EAAAmB,cAAA,OAAKH,UAAU,iBACb2O,EAAA3P,EAAAmB,cAAA,OAAKH,UAAU,WACb2O,EAAA3P,EAAAmB,cAAA,SAAOH,UAAU,4BACf2O,EAAA3P,EAAAmB,cAAA,aACEwO,EAAA3P,EAAAmB,cAAA,UACGuO,GAAwBC,EAAA3P,EAAAmB,cAAA,wBACzBwO,EAAA3P,EAAAmB,cAAA,yBAEEwO,EAAA3P,EAAAmB,cAAC3E,EAAA,QAAO,CAACmU,UAAU,MAAMC,QAAQ,wDAAwDnS,MAAO,QAC9FkR,EAAA3P,EAAAmB,cAAA,QAAMH,UAAU,qBACd2O,EAAA3P,EAAAmB,cAAA,KAAGH,UAAU,yBAInB2O,EAAA3P,EAAAmB,cAAA,oBAGJwO,EAAA3P,EAAAmB,cAAA,aACGqP,EAAMnQ,IAAI,SAACwQ,EAAOlV,GACjB,OACEgU,EAAA3P,EAAAmB,cAAA,MAAIoE,IAAQsL,EAAMC,MAAK,IAAInV,GACxB+T,GACCC,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KACET,EAAA3P,EAAAmB,cAAA,UAAK0P,EAAME,UACTF,EAAMH,SACNf,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KACET,EAAA3P,EAAAmB,cAAA,WACAwO,EAAA3P,EAAAmB,cAAA,UACEwO,EAAA3P,EAAAmB,cAAA,QAAMH,UAAU,2BAEd2O,EAAA3P,EAAAmB,cAAC3E,EAAA,QAAO,CAACmU,UAAU,MAAMC,QAAQ,2BAA2BnS,MAAO,QACjEkR,EAAA3P,EAAAmB,cAAA,QAAMH,UAAU,qBACd2O,EAAA3P,EAAAmB,cAAA,KAAGH,UAAU,4BAS5B6P,EAAMG,SACLrB,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KACET,EAAA3P,EAAAmB,cAAA,UAAK0P,EAAMG,SACXrB,EAAA3P,EAAAmB,cAAA,UAAK0P,EAAMH,kBChDpBO,EAA2B,SAAClQ,OAAEmQ,EAAAnQ,EAAAmQ,MAAOxB,EAAA3O,EAAA2O,qBAC1Cc,EAAQd,EAAuBwB,EAAQA,EAAMT,OAAO,SAAA5C,GAAQ,OAAAA,EAAKsD,WAEvE,OACExB,EAAA3P,EAAAmB,cAAA,OAAKH,UAAU,iBACb2O,EAAA3P,EAAAmB,cAAA,OAAKH,UAAU,WACb2O,EAAA3P,EAAAmB,cAAA,SAAOH,UAAU,4BACf2O,EAAA3P,EAAAmB,cAAA,aACEwO,EAAA3P,EAAAmB,cAAA,UACGuO,GAAwBC,EAAA3P,EAAAmB,cAAA,wBACzBwO,EAAA3P,EAAAmB,cAAA,0BACAwO,EAAA3P,EAAAmB,cAAA,oBAGJwO,EAAA3P,EAAAmB,cAAA,aACGqP,EAAMnQ,IAAI,SAAC+Q,EAAMzV,GAChB,OACEgU,EAAA3P,EAAAmB,cAAA,MAAIoE,IAAQ6L,EAAKD,SAAQ,IAAIxV,GAC1B+T,GACCC,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KACET,EAAA3P,EAAAmB,cAAA,UAAKiQ,EAAKL,UACRK,EAAKJ,SACLrB,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KACET,EAAA3P,EAAAmB,cAAA,WACAwO,EAAA3P,EAAAmB,cAAA,UACEwO,EAAA3P,EAAAmB,cAAA,OAAKH,UAAU,2BAEb2O,EAAA3P,EAAAmB,cAAC3E,EAAA,QAAO,CAACmU,UAAU,MAAMC,QAAQ,0BAA0BnS,MAAO,QAChEkR,EAAA3P,EAAAmB,cAAA,QAAMH,UAAU,qBACd2O,EAAA3P,EAAAmB,cAAA,KAAGH,UAAU,4BAS5BoQ,EAAKJ,SACJrB,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KACET,EAAA3P,EAAAmB,cAAA,UAAKiQ,EAAKJ,SACVrB,EAAA3P,EAAAmB,cAAA,UAAKiQ,EAAKD,mBClDhChY,EAAAC,EAAAC,EAAA,sBAAAgY,IAYO,IAAMA,EAA0B,SAACtQ,OAAEuQ,EAAAvQ,EAAAuQ,SAAU5B,EAAA3O,EAAA2O,qBAClD,OACEC,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KACET,EAAA3P,EAAAmB,cAACqO,EAAmB,CAACC,KAAM6B,EAAS7B,KAAMC,qBAAsBA,IAChEC,EAAA3P,EAAAmB,cAAC8O,EAAmB,CAACC,YAAaoB,EAASpB,cAC1CoB,EAASC,OAASD,EAASC,MAAMnN,OAAS,GACzCuL,EAAA3P,EAAAmB,cAACmP,EAAc,CAACC,OAAQe,EAASC,MAAO7B,qBAAsBA,IAG/D4B,EAASJ,OAASI,EAASJ,MAAM9M,OAAS,EACzCuL,EAAA3P,EAAAmB,cAAC8P,EAAa,CAACC,MAAOI,EAASJ,MAAOxB,qBAAsBA,IAE5DC,EAAA3P,EAAAmB,cAAA,OAAKH,UAAU,iBACb2O,EAAA3P,EAAAmB,cAAA,OAAKH,UAAU,WACb2O,EAAA3P,EAAAmB,cAAA,SAAOH,UAAU,4BACf2O,EAAA3P,EAAAmB,cAAA,aACEwO,EAAA3P,EAAAmB,cAAA,UACEwO,EAAA3P,EAAAmB,cAAA,iFC3BlBhI,EAAAC,EAAAC,EAAA,sBAAAmY,IAAA,IAAAA,EAAA,WAGE,SAAAA,EAAYC,GACVxS,KAAKwS,OAASA,GAAkB,GA8BpC,OA3BEtU,OAAAuU,eAAIF,EAAA9R,UAAA,SAAM,KAAV,WACE,OAAOT,KAAKwS,OAAOrN,wCAGrBoN,EAAA9R,UAAAqF,IAAA,SAAIvE,GACFvB,KAAKwS,OAAO5C,KAAKrO,IAGnBgR,EAAA9R,UAAAQ,IAAA,SAAIvE,GACF,OAAOsD,KAAKwS,OAAO9V,IAGrB6V,EAAA9R,UAAAxE,IAAA,SAAIS,EAAe6E,GACjBvB,KAAKwS,OAAO9V,GAAS6E,GAGvBgR,EAAA9R,UAAAiS,QAAA,WACE1S,KAAKwS,OAAOE,WAGdH,EAAA9R,UAAAkS,QAAA,WACE,OAAO3S,KAAKwS,QAGdD,EAAA9R,UAAAmS,OAAA,WACE,OAAO5S,KAAKwS,QAEhBD,EAlCA,+jBC4JA,IAAMM,EAAS,+CAOR,SAASC,EAAwB9M,GACtC,OAAI+M,IAAS/M,GACJgN,EAAA,UAAUC,OAGfC,IAASlN,GACP6M,EAAOtM,KAAKP,GACPgN,EAAA,UAAUC,OAGT,SAANjN,GAAsB,SAANA,GAAsB,SAANA,GAAsB,UAANA,GAAuB,UAANA,GAAuB,UAANA,EAC7EgN,EAAA,UAAUG,QAGZH,EAAA,UAAUI,OAGfC,IAAUrN,GACLgN,EAAA,UAAUG,QAGfnN,aAAasN,MAAQpV,OAAAqV,EAAA,EAAArV,CAAW8H,GAC3BgN,EAAA,UAAUQ,KAGZR,EAAA,UAAUS,MAMZ,SAASC,EAAuBC,GAErC,GAAIA,EAAM3O,KAAM,CACd,IAAMA,EAAO2O,EAAM3O,KAAK4O,cACxB,GAAa,SAAT5O,GAA4B,SAATA,EACrB,OAAOgO,EAAA,UAAUQ,KAKrB,IAAK,IAAIpN,EAAI,EAAGA,EAAIuN,EAAMrF,OAAOnJ,OAAQiB,IAAK,CAC5C,IAAMJ,EAAI2N,EAAMrF,OAAOrN,IAAImF,GAC3B,GAAU,OAANJ,EACF,OAAO8M,EAAwB9M,IAY9B,IAAM6N,EAAkB,SAACzM,GAC9B,IAAK,IAAIhB,EAAI,EAAGA,EAAIgB,EAAO0M,OAAO3O,OAAQiB,IACxC,IAAKgB,EAAO0M,OAAO1N,GAAG2N,KAEpB,OAAOvT,EAAA,KACF4G,EAAM,CACT0M,OAAQ1M,EAAO0M,OAAO1S,IAAI,SAAAuS,GACxB,OAAIA,EAAMI,MAAQJ,EAAMI,OAASf,EAAA,UAAUS,MAClCE,EAGFnT,EAAA,KACFmT,EAAK,CACRI,KAAML,EAAuBC,IAAUX,EAAA,UAAUS,YAO3D,OAAOrM,GAGI4M,EAAc,SAACxL,GAAiC,OAAAA,GAAQA,EAAKyL,eAAe,YAE5EC,EAAc,SAAC1L,GAAiC,OAAAA,GAAQA,EAAKyL,eAAe,WAE5EE,EAAc,SAAC3L,GAC1B,GAAIA,EAAKyL,eAAe,UAAW,CAEjC,GAAIzL,EAAKyL,eAAe,QAAS,CAG/B,IAFA,IAAMjO,EAAI,IAAIoO,EAAA,EAAiB5L,GACzBmD,EAAOnD,EAAKmD,KACTvF,EAAI,EAAGA,EAAIuF,EAAKxG,OAAQiB,IAC/BJ,EAAEqO,UAAU1I,EAAKvF,IAGnB,OADAlI,OAAAoW,EAAA,EAAApW,CAAmB,YAAa,QAAS,mBAClC8H,EAIT,OAAIwC,EAAKyL,eAAe,UACfzL,EAIF,IAAI4L,EAAA,EAAiB5L,GAI9B,GAAIA,EAAKyL,eAAe,SAAyB,SAAdzL,EAAKuL,KACtC,OA/IJ,SAA4CQ,WACpCT,EAAS,CACb,CACE9O,KAAMuP,EAAWC,OACjBT,KAAMf,EAAA,UAAUS,MAChBgB,OAAQ,CACNC,KAAMH,EAAWG,KACjBC,WAAaJ,EAAmBI,YAElCrG,OAAQ,IAAIsG,EAAA,QAIhB,IAAoB,IAAAC,EAAArU,EAAA,EAAA+T,EAAWO,YAAUC,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAE,CAAtC,IAAME,EAAKH,EAAAxT,MACduS,EAAO,GAAGxF,OAAOkE,OAAO5C,KAAKsF,qGAG/B,MAAO,CACLlQ,KAAMuP,EAAWC,OACjBW,OAAQZ,EAAWa,KACnBC,MAAOd,EAAWC,OAClBpX,KAAM,CAAEkY,MAAM,GACdxB,OAAMA,EACN3O,OAAQoP,EAAWO,WAAW3P,QAwHvBoQ,CAAmC/M,GAG5C,GAAIA,EAAKyL,eAAe,cACtB,OA1NJ,SAAsCM,WAC9BT,EAAS,CACb,CACE9O,KAAMuP,EAAWC,QAAU,QAC3BT,KAAMf,EAAA,UAAUC,OAChBwB,OAAQ,CACNC,KAAMH,EAAWG,MAEnBpG,OAAQ,IAAIsG,EAAA,GAEd,CACE5P,KAAM,OACN+O,KAAMf,EAAA,UAAUQ,KAChBiB,OAAQ,CACNC,KAAM,iBAERpG,OAAQ,IAAIsG,EAAA,QAIhB,IAAoB,IAAAC,EAAArU,EAAA,EAAA+T,EAAWO,YAAUC,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAE,CAAtC,IAAME,EAAKH,EAAAxT,MACduS,EAAO,GAAGxF,OAAOkE,OAAO5C,KAAKsF,EAAM,IACnCpB,EAAO,GAAGxF,OAAOkE,OAAO5C,KAAKsF,EAAM,sGAGrC,MAAO,CACLlQ,KAAMuP,EAAWC,OACjBW,OAAQZ,EAAWa,KACnBC,MAAOd,EAAWc,MAClBjY,KAAMmX,EAAWnX,KACjB0W,OAAMA,EACN3O,OAAQoP,EAAWO,WAAW3P,QA2LvBqQ,CAA6BhN,GAGtC,GAAIA,EAAKyL,eAAe,QACtB,OAvLJ,SAAuCwB,GAIrC,IAHA,IAAMjL,EAAI,IAAIoK,EAAA,EACRnK,EAAI,IAAImK,EAAA,EAELxO,EAAI,EAAGA,EAAIqP,EAAYjN,KAAKrD,OAAQiB,IAAK,CAChD,IAAM8G,EAAMuI,EAAYjN,KAAKpC,GAC7BoE,EAAEgI,OAAO5C,KAAK1C,EAAI,IAClBzC,EAAE+H,OAAO5C,KAAK1C,EAAI,IAGpB,MAAO,CACLlI,KAAMyQ,EAAYjU,MAClBsS,OAAQ,CACN,CACE9O,KAAMyQ,EAAYjU,OAAS,QAC3BuS,KAAMf,EAAA,UAAUC,OAChBwB,OAAQ,GACRnG,OAAQ9D,GAEV,CACExF,KAAM,OACN+O,KAAMf,EAAA,UAAUQ,KAChBiB,OAAQ,CACNC,KAAM,iBAERpG,OAAQ7D,IAGZtF,OAAQqF,EAAEgI,OAAOrN,QA2JVuQ,CAA8BlN,GAGvC,GAAIA,EAAKyL,eAAe,WACtB,OAnQJ,SAAiC0B,eACzB7B,EAAS6B,EAAMjK,QAAQtK,IAAI,SAAA2B,GAE/B,MAAO,CACLiC,KAFMjC,EAAAlH,KAGN4Y,OAHYjU,EAAA,EAAAuC,EAAA,WAGK,GACjBuL,OAAQ,IAAIsG,EAAA,EACZb,KAAMf,EAAA,UAAUS,aAIpB,IAAkB,IAAAsB,EAAAvU,EAAA,EAAAmV,EAAMhK,MAAIiK,EAAAb,EAAAC,QAAAY,EAAAX,KAAAW,EAAAb,EAAAC,OAC1B,IADG,IAAM9H,EAAG0I,EAAArU,MACH6E,EAAI,EAAGA,EAAI0N,EAAO3O,OAAQiB,IACjC0N,EAAO1N,GAAGkI,OAAOkE,OAAO5C,KAAK1C,EAAI9G,yGAIrC,IAAgB,IAAAyP,EAAArV,EAAA,EAAAsT,GAAMgC,EAAAD,EAAAb,QAAAc,EAAAb,KAAAa,EAAAD,EAAAb,OAAE,CAAnB,IAAMe,EAACD,EAAAvU,MACJyU,EAAItC,EAAuBqC,GAC7BC,IACFD,EAAEhC,KAAOiC,qGAIb,MAAO,CACLlC,OAAMA,EACNuB,MAAOM,EAAMN,MACbjY,KAAMuY,EAAMvY,KACZ4H,KAAM2Q,EAAM3Q,KACZG,OAAQwQ,EAAMhK,KAAKxG,QAsOZ8Q,CAAwBzN,GAIjC,MADA0N,QAAQC,KAAK,kBAAmB3N,GAC1B,IAAI4N,MAAM,4BAGLC,EAAuB,SAAC9I,GAMnC,IALQ,IAAAuG,EAAAvG,EAAAuG,OAEFwC,EAAW/I,EAAMpI,OACjBwG,EAAgB,GAEbvF,EAAI,EAAGA,EAAIkQ,EAAUlQ,IAAK,CAEjC,IADA,IAAM8G,EAAa,GACV6B,EAAI,EAAGA,EAAI+E,EAAO3O,OAAQ4J,IACjC7B,EAAI0C,KAAKkE,EAAO/E,GAAGT,OAAOrN,IAAImF,IAEhCuF,EAAKiE,KAAK1C,GAGZ,GAAsB,IAAlB4G,EAAO3O,OAAc,CACvB,IAAI4O,EAAOD,EAAO,GAAGC,KAIrB,GAHKA,IACHA,EAAOL,EAAuBI,EAAO,KAAOd,EAAA,UAAUS,OAEpDM,IAASf,EAAA,UAAUQ,KACrB,MAAO,CACL+C,MAAOzC,EAAO,GAAG9O,MAAQuI,EAAMvI,KAC/BwP,OAAQV,EAAO,GAAG9O,MAAQuI,EAAMvI,KAChC8P,WAAYnJ,EACZ+I,KAAMZ,EAAO,GAAGW,OAASX,EAAO,GAAGW,OAAOC,UAAOzO,EACjDoP,MAAO9H,EAAM8H,MACbjY,KAAMmQ,EAAMnQ,MAKlB,OAAImQ,EAAMnQ,MAAQmQ,EAAMnQ,KAAKkY,KACpB,CACLiB,MAAOzC,EAAO,GAAG9O,MAAQuI,EAAMvI,KAC/BwP,OAAQV,EAAO,GAAG9O,MAAQuI,EAAMvI,KAChC8P,WAAYhB,EAAO,GAAGxF,OAAOqE,UAC7BgC,WAAYb,EAAO,GAAGW,OAASX,EAAO,GAAGW,OAAOE,gBAAa1O,EAC7D8N,KAAM,QAIH,CACLrI,QAASoI,EAAO1S,IAAI,SAAA2U,GACV,IAAA/Q,EAAA+Q,EAAA/Q,KAAMyP,EAAAsB,EAAAtB,OACd,GAAIA,EAAQ,CAEV,IAAQ+B,EAAAhW,EAAA,EAAAiU,EAAA,IAER,OADC+B,EAAkB3a,KAAOmJ,EACnBwR,EAET,MAAO,CAAE3a,KAAMmJ,KAEjB+O,KAAM,QACNsB,MAAO9H,EAAM8H,MACbjY,KAAMmQ,EAAMnQ,KACZuO,KAAIA,IAID,SAAS8K,EAAcjO,EAAiBkO,EAAoBhE,QAAA,IAAAA,OAAA,GACjE,IAAMiB,EAAQnL,EAAKsL,OAAO4C,GAC1B,IAAK/C,EACH,OAAOnL,EAKT,IADA,IAAM9L,EAAkB,GACf0J,EAAI,EAAGA,EAAIoC,EAAKrD,OAAQiB,IAC/B1J,EAAMkT,KAAKxJ,GAEb,IAAMkI,EAASqF,EAAMrF,OAGjBqI,EAAU,SAAC5V,EAAWmP,GAGxB,OAFW5B,EAAOrN,IAAIF,GACXuN,EAAOrN,IAAIiP,IAoBxB,OAfIyD,EAAMI,OAASf,EAAA,UAAUI,SAC3BuD,EAAU,SAAC5V,EAAWmP,GACpB,IAAM0G,EAAatI,EAAOrN,IAAIF,GACxB8V,EAAavI,EAAOrN,IAAIiP,GAC9B,OAAO0G,EAAGE,cAAcD,KAK5Bna,EAAMuT,KAAK0G,GACPjE,GACFhW,EAAMgW,UAIDlS,EAAA,KACFgI,EAAI,CACPsL,OAAQtL,EAAKsL,OAAO1S,IAAI,SAAA2U,GACtB,OAAOvV,EAAA,KACFuV,EAAC,CACJzH,OAAQ,IAAIyI,EAAA,EAAahB,EAAEzH,OAAQ5R,SASpC,SAASsa,EAAiBxO,GAC/B,OAAOhI,EAAA,KACFgI,EAAI,CACPsL,OAAQtL,EAAKsL,OAAO1S,IAAI,SAAA2U,GACtB,IAAMkB,EAAOzW,EAAA,EAAIuV,EAAEzH,OAAOqE,WAE1B,OADAsE,EAAKvE,UACElS,EAAA,KACFuV,EAAC,CACJzH,OAAQ,IAAIsG,EAAA,EAAYqC,SAMzB,IAAMC,EAAe,SAAC9P,GAC3B,IAAK,IAAIhB,EAAI,EAAGA,EAAIgB,EAAO0M,OAAO3O,OAAQiB,IACxC,GAAIgB,EAAO0M,OAAO1N,GAAG2N,OAASf,EAAA,UAAUQ,KACtC,MAAO,CACL2D,UAAW/P,EAAO0M,OAAO1N,GACzBgR,UAAWhR,GAIjB,MAAO,IAMF,SAASiR,EAAgB7O,EAAiB0E,WACzCoB,EAAgB,OACtB,IAAoB,IAAAuG,EAAArU,EAAA,EAAAgI,EAAKsL,QAAMiB,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAE,CAA5B,IAAMrB,EAAKoB,EAAAxT,MACd+M,EAAOsB,KAAK+D,EAAMrF,OAAOrN,IAAIiM,sGAE/B,OAAOoB,EAMF,SAASgJ,EAAe9O,GAU7B,MAAO,CACLsL,OAVyBtL,EAAKsL,OAAO1S,IAAI,SAAA2U,GACzC,MAAO,CACL/Q,KAAM+Q,EAAE/Q,KACR+O,KAAMgC,EAAEhC,KACRU,OAAQsB,EAAEtB,OACVnG,OAAQyH,EAAEzH,OAAOqE,aAMnB0C,MAAO7M,EAAK6M,MACZjY,KAAMoL,EAAKpL,KACX4H,KAAMwD,EAAKxD,KACXmQ,OAAQ3M,EAAK2M,gCClajB,SAAApO,GAwJCuJ,OANDjJ,KAAAsI,QAAAC,KAAA,CACAC,KA9IA,SAAAxI,GA0IAA,EAAAyI,MAAAyH,kBAAA3H,KA5HA,SAAAvI,EAAA5B,EAAAqP,GACA,SAAArP,EAAA+R,QAAA,IAAA/R,EAAA+R,MAAA,CAGA,IAAA/D,EAjBA,SAAAhO,EAAAgS,GAEA,IADA,IAAAC,EAAA,KACAtR,EAAA,EAA2BA,EAAAqR,EAAAtS,QAC3BM,GAAAgS,EAAArR,KADiDA,EAIjDqR,EAAArR,GAAAoR,OAAA/R,EAAA+R,QACAE,EAAAD,EAAArR,IAGA,OAAAsR,EAOAC,CAAAlS,EAAA4B,EAAAK,WACA,GAAA+L,EAAA,CAiBA,IAdA,IAKAmE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAOAC,EAAAC,EAZAC,EAAAtD,EAAAuD,UACAC,EAAAxD,EAAAwD,OACAC,EAAA9E,EAAAqB,WAAAuD,UACAG,EAAA/E,EAAAqB,WAAAwD,OACAG,EAAA,GAEAC,EAAAjT,EAAAkT,MAAAvM,KACAwM,EAAAnT,EAAAoT,KAAAD,WACAE,EAAAV,EAAA,IAAAQ,EAAA9D,EAAAiE,OAAA,GAAAvO,EAAAsK,EAAAiE,OAAA,GAAAtO,GACAuO,EAAAN,GAAAjT,EAAAkT,MAAAM,MACAC,EAAAN,EAAA,IACAO,EAAAP,EAAA,IACAxS,EAAA,EAAA2I,EAAA,IAGA3I,GAAAkS,EAAAnT,QAAA4J,GAAAyJ,EAAArT,SADA,CAMA,GAFA+S,EAAAO,EAAAtT,OAEAiB,EAAAkS,EAAAnT,QAAA,MAAAmT,EAAAlS,GAAA,CAEA,IAAA+R,EAAA,EAA+BA,EAAAC,IAAQD,EACvCM,EAAA7I,KAAA0I,EAAAlS,EAAA+R,IACA/R,GAAAgS,OAEA,GAAAhS,GAAAkS,EAAAnT,OAAA,CAEA,IAAAgT,EAAA,EAA+BA,EAAAC,IAAQD,EACvCM,EAAA7I,KAAA4I,EAAAzJ,EAAAoJ,IACAW,IACAL,EAAAP,EAAA,GAAAM,EAAAzJ,EAAAoK,IACApK,GAAAwJ,OAEA,GAAAxJ,GAAAyJ,EAAArT,OAAA,CAEA,IAAAgT,EAAA,EAA+BA,EAAAC,IAAQD,EACvCM,EAAA7I,KAAA0I,EAAAlS,EAAA+R,IACA/R,GAAAgS,OAEA,GAAArJ,EAAAyJ,EAAArT,QAAA,MAAAqT,EAAAzJ,GAEAA,GAAAwJ,MAEA,CAQA,GANAX,EAAAU,EAAAlS,EAAA8S,GACArB,EAAAS,EAAAlS,EAAA+S,GACApB,EAAAS,EAAAzJ,EAAAmK,GACAlB,EAAAQ,EAAAzJ,EAAAoK,GACAlB,EAAA,EAEAL,GAAAG,EAAA,CACA,IAAAI,EAAA,EAAmCA,EAAAC,IAAQD,EAC3CM,EAAA7I,KAAA0I,EAAAlS,EAAA+R,IAEAM,EAAAP,EAAAiB,IAAAnB,EACAC,EAAAD,EAEA5R,GAAAgS,EACArJ,GAAAwJ,OAEA,GAAAX,EAAAG,EAAA,CAEA,MAAA3R,EAAA,CACA,IAAA+R,EAAA,EAAuCA,EAAAC,IAAQD,EAC/CM,EAAA7I,KAAA4I,EAAAzJ,EAAAoJ,IACAF,EAAAD,EAIA,GAAA5R,EAAA,SAAAkS,EAAAlS,EAAAgS,GAAA,CAIA,IAHAN,EAAAD,GAAAS,EAAAlS,EAAAgS,EAAAe,GAAAtB,IAAAE,EAAAH,IAAAU,EAAAlS,EAAAgS,EAAAc,GAAAtB,GACAa,EAAA7I,KAAAmI,GACAU,EAAA7I,KAAAkI,EAAAE,GACAG,EAAA,EAAuCA,EAAAC,IAAQD,EAC/CM,EAAA7I,KAAA0I,EAAAlS,EAAA+R,IACAF,EAAAD,EAGAjJ,GAAAwJ,MAEA,CACA,IAAAJ,EAAA,EAAmCA,EAAAC,IAAQD,EAC3CM,EAAA7I,KAAA0I,EAAAlS,EAAA+R,IAIApJ,EAAA,SAAAyJ,EAAAzJ,EAAAwJ,KACAN,EAAAD,GAAAQ,EAAAzJ,EAAAwJ,EAAAY,GAAAnB,IAAAJ,EAAAG,IAAAS,EAAAzJ,EAAAwJ,EAAAW,GAAAnB,IAEAU,EAAAP,EAAAiB,IAAAlB,EAEA7R,GAAAgS,EAGAgB,SAAA,EAEAlB,GAAAO,EAAAtT,QAAA2T,IACAL,EAAAP,EAAA,GAAAD,GAIA,GAAAe,GAAAd,GAAAO,EAAAtT,QAAA+S,EAAA,GACA,MAAAO,EAAAP,IACAO,EAAAP,IAAAO,EAAAP,EAAAE,IACAK,EAAAP,EAAA,IAAAO,EAAAP,EAAAE,EAAA,IACA,IAAAD,EAAA,EAA+BA,EAAAC,IAAQD,EACvCM,EAAAP,EAAAE,EAAAD,GAAAM,EAAAP,EAAAC,GACAM,EAAAP,EAAA,GAAAO,EAAAP,EAAAE,EAAA,IAIAtD,EAAAwD,OAAAG,OAQAvR,QAnJA,CACAE,OAAA,CAAiBoQ,MAAA,OAmJjBxS,KAAA,QACAqL,QAAA,QAtJA,yBCrCA,IAAA3N,EAAA,8DAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,GAAgEA,EAAAC,IAAAN,EADhE,i2LAEAG,EAAAI,QAAAP,qCCHAxI,EAAAC,EAAAC,EAAA,sBAAAif,IAAA,IAAAC,EAAApf,EAAA,QAEAmf,EAAA,WAGE,SAAAA,IACErZ,KAAKuZ,QAAU,IAAID,EAAA,aA6BvB,OA1BED,EAAA5Y,UAAA9E,KAAA,SAAKqJ,EAAcwD,GACjBxI,KAAKuZ,QAAQ5d,KAAKqJ,EAAMwD,IAG1B6Q,EAAA5Y,UAAA+Y,GAAA,SAAGxU,EAAcyU,EAAkCC,GAAnD,IAAA5Z,EAAAE,KAGE,GAFAA,KAAKuZ,QAAQC,GAAGxU,EAAMyU,GAElBC,EACF,IAAMC,EAASD,EAAME,IAAI,WAAY,WACnC9Z,EAAKyZ,QAAQM,IAAI7U,EAAMyU,GACvBE,OAKNN,EAAA5Y,UAAAqZ,mBAAA,SAAmBC,GACjB/Z,KAAKuZ,QAAQO,mBAAmBC,IAGlCV,EAAA5Y,UAAAoZ,IAAA,SAAI7U,EAAcyU,GAChBzZ,KAAKuZ,QAAQM,IAAI7U,EAAMyU,IAGzBJ,EAAA5Y,UAAAuZ,cAAA,WACE,OAAQha,KAAKuZ,QAAgBU,cAEjCZ,EAjCA,wCCAA,IAAYa,EA6DAC,EA7DZjgB,EAAAC,EAAAC,EAAA,sBAAA8f,IAAAhgB,EAAAC,EAAAC,EAAA,sBAAA+f,IAAA,SAAYD,GACVA,EAAA,wBACAA,EAAA,kBACAA,EAAA,sBACAA,EAAA,YACAA,EAAA,cALF,CAAYA,MAAY,KA6DxB,SAAYC,GACVA,EAAA,YACAA,EAAA,mBACAA,EAAA,sBAHF,CAAYA,MAAa,mLCtDnBC,EAAYlc,OAAAmc,EAAA,EAAAnc,CAAc,SAACsB,GAAwB,OACvDoP,KAAM1Q,OAAAoc,EAAA,IAAApc,CAAGqc,MAAA/Z,EAAA,yKAG8B,qCAAxBhB,EAAMgb,WAAWpS,KAAKqS,IAGrCC,QAASxc,OAAAoc,EAAA,IAAApc,CAAGyc,MAAAna,EAAA,yNAMZoa,QAAS1c,OAAAoc,EAAA,IAAApc,CAAG2c,MAAAra,EAAA,+DAGZsa,aAAc5c,OAAAoc,EAAA,IAAApc,CAAG6c,MAAAva,EAAA,gIAMNwa,EAA4D,SAAClZ,OACxEyP,EAAAzP,EAAAyP,MACA0J,EAAAnZ,EAAAmZ,aACAvJ,EAAA5P,EAAA4P,UACA3P,EAAAD,EAAAC,UAEMvC,EAAQtB,OAAAuE,EAAA,WAAAvE,CAAWgd,EAAA,GACnBC,EAASf,EAAU5a,GAEnB4b,EAAa,SAACxM,EAAkBlS,GACpC,OAAOuF,EAAAlB,EAAAmB,cAAA,QAAMH,UAAWoZ,EAAOvM,MAAOqM,EAAeA,EAAarM,EAAMlS,GAASkS,EAAKpN,QAGlF6Z,EAAa,SAACzM,GAAqB,SAAGA,EAAKpN,OAEjD,MAAqB,UAAdkQ,EACLzP,EAAAlB,EAAAmB,cAAA,OAAKH,UAAW7D,OAAAoc,EAAA,GAAApc,CAAGid,EAAOT,QAAS3Y,IACjCE,EAAAlB,EAAAmB,cAAA,OAAKH,UAAWoZ,EAAOP,SACrB3Y,EAAAlB,EAAAmB,cAACoZ,EAAA,EAAU,CAAC/J,MAAOA,EAAMC,OAAO,SAAA5C,GAAQ,OAAe,IAAfA,EAAK2M,QAAcH,WAAYA,EAAYC,WAAYA,KAEjGpZ,EAAAlB,EAAAmB,cAAA,OAAKH,UAAW7D,OAAAoc,EAAA,GAAApc,CAAGid,EAAOP,QAASO,EAAOL,eACxC7Y,EAAAlB,EAAAmB,cAACoZ,EAAA,EAAU,CAAC/J,MAAOA,EAAMC,OAAO,SAAA5C,GAAQ,OAAe,IAAfA,EAAK2M,QAAcH,WAAYA,EAAYC,WAAYA,MAInGpZ,EAAAlB,EAAAmB,cAACsZ,EAAA,EAAI,CAACjK,MAAOA,EAAO6J,WAAYA,EAAYC,WAAYA,EAAYtZ,UAAWA,KAInFiZ,EAAWS,YAAc,2JCvDzB,SAASC,EAAoBC,EAAsBC,GACjD,IAAKD,EACH,OAAO,EAGT,GAAwB,MAApBA,EAAa,GAAY,CAC3B,IAAME,EAAQ3d,OAAA4d,EAAA,gBAAA5d,CAAgByd,GAC9B,OAAmC,MAA5BC,EAAYG,MAAMF,GAG3B,OAAOF,IAAiBC,EAanB,SAASI,EAAmBxT,EAAoBlN,EAAYgQ,GACjE,IAAK,IAAIlF,EAAI,EAAGA,EAAIoC,EAAKrD,OAAQiB,IAAK,CACpC,IAAMgB,EAASoB,EAAKpC,GAGd6V,EAFQ3gB,EAAM4gB,OACA9U,EAAO+U,OAAS,GACH,GAC3B5R,EAAYrM,OAAAiE,EAAA,eAAAjE,CAAe+d,EAAKlD,QAGtC,GAAIjY,EAAAC,EAAEqb,SAAS9gB,EAAM+gB,UACnBjV,EAAO4U,mBAAmBzR,EAAWjP,EAAM+gB,SAAU,WAChD,GAAIvb,EAAAC,EAAEqb,SAASH,EAAKI,UACzBjV,EAAO4U,mBAAmBzR,EAAW0R,EAAKI,SAAW,EAAG,UACnD,CAIC,IAAAva,EAAAwa,EAAA9T,GAAE+T,EAAAza,EAAAya,QAASC,EAAA1a,EAAA0a,QACX3H,EAAA3W,OAAAue,EAAA,oBAAAve,CAAAqe,EAAAC,EAAAP,EAAA3Q,GAAEoR,EAAA7H,EAAA6H,aAAcC,EAAA9H,EAAA8H,eAChBC,GAAuBF,IAAiB,GAAK,EACnDtV,EAAO4U,mBAAmBzR,EAAWqS,EAAqBD,EAAiB,KAK1E,SAASL,EAAc9T,WACxB+T,EAAU,KACVC,EAAU,SAEd,IAAqB,IAAAK,EAAArc,EAAA,EAAAgI,GAAIsU,EAAAD,EAAA7H,QAAA8H,EAAA7H,KAAA6H,EAAAD,EAAA7H,OAAE,CAAtB,IAAM5N,EAAM0V,EAAAvb,OACC,OAAZib,GAAoBA,EAAUpV,EAAO2V,MAAM9U,OAC7CuU,EAAUpV,EAAO2V,MAAM9U,MAET,OAAZsU,GAAoBA,EAAUnV,EAAO2V,MAAMpU,OAC7C4T,EAAUnV,EAAO2V,MAAMpU,uGAI3B,MAAO,CAAE4T,QAAOA,EAAEC,QAAOA,GAQ3B,IAAAQ,EAAA,WAmCE,SAAAA,EAAYC,GACVjd,KAAK8U,WAAamI,EAAKnI,WACvB9U,KAAKwB,MAAQyb,EAAK1G,MAClBvW,KAAKnD,GAAKogB,EAAK1G,MACfvW,KAAKuW,MAAQ0G,EAAK1G,MAClBvW,KAAKkd,aAAepc,EAAAC,EAAEoc,OAAOF,EAAK1G,OAClCvW,KAAKkL,MAAQ+R,EAAK/R,MAClBlL,KAAK6Y,KAAO,CAAEuE,UAAWH,EAAK/R,OAC9BlL,KAAKqd,cAAgBnf,OAAAiE,EAAA,eAAAjE,CAAe,QACpC8B,KAAK+c,MAAQ,GACb/c,KAAKgQ,QAAS,EACdhQ,KAAK0U,KAAOuI,EAAKvI,KACjB1U,KAAKsd,eAAiBL,EAAKK,eAC3Btd,KAAKud,WAAaN,EAAKM,WACvBvd,KAAKwd,gBAAkBxd,KAAKyd,uBA2PhC,OAxPET,EAAAvc,UAAAid,qBAAA,SAAqBC,GACnB3d,KAAK2Y,MAAQ,GACb3Y,KAAK4d,OAAS,CACZC,WAAY,IAEd7d,KAAKsY,OAAS,GACdtY,KAAKmc,MAAQ,EACbnc,KAAK8d,OAAS,EACd9d,KAAK+d,cAAgB,YACd/d,KAAKwX,aACLxX,KAAK6Y,KAAKzM,KAEjB,IAAK,IAAIhG,EAAI,EAAGA,EAAIuX,EAAUxY,OAAQiB,IAAK,CACzC,IAAM4X,EAAWL,EAAUvX,GACtBsV,EAAoBsC,EAASzH,MAAOvW,KAAKuW,cAGvB,IAAnByH,EAASrF,QACX3Y,KAAK2Y,MAAMvM,KAAO4R,EAASrF,YAEL,IAApBqF,EAASJ,SACX5d,KAAK4d,OAAOxR,KAAO4R,EAASJ,OAC5B5d,KAAK2Y,MAAMhL,UAAY,QAED,IAApBqQ,EAAS1F,SACXtY,KAAKsY,OAAOlM,KAAO4R,EAAS1F,aAER,IAAlB0F,EAASnF,OACX7Y,KAAK6Y,KAAKzM,KAAO4R,EAASnF,WAEN,IAAlBmF,EAASxO,OACXxP,KAAK2Y,MAAMnJ,KA1ID,KADWA,EA2IiBwO,EAASxO,MA1IjC,KAAQA,EAAO,SA4IR,IAAnBwO,EAASxG,QACXxX,KAAKwX,MAAQwG,EAASxG,YAEG,IAAvBwG,EAASC,YACXje,KAAK2Y,MAAMhL,UAAY3N,KAAK4d,OAAOxR,KAAO,EAAI4R,EAASC,UACvDje,KAAK4d,OAAOjQ,UAAYqQ,EAASC,gBAEP,IAAxBD,EAASH,aACX7d,KAAK4d,OAAOC,WAAW,GAAKG,EAASH,iBAEV,IAAzBG,EAASE,cACXle,KAAK4d,OAAOC,WAAW,GAAKG,EAASE,kBAER,IAA3BF,EAASD,gBACX/d,KAAK+d,cAAgBC,EAASD,oBAEH,IAAzBC,EAASG,cACXne,KAAKsY,OAAOnO,OAAS6T,EAASG,kBAEH,IAAzBH,EAASI,cACXpe,KAAK2Y,MAAMM,MAAQ+E,EAASI,kBAEN,IAApBJ,EAASF,SACX9d,KAAK8d,OAASE,EAASF,aAEI,IAAzBE,EAASK,cACXre,KAAKqe,YAAcL,EAASK,kBAEP,IAAnBL,EAAS9S,OACXlL,KAAKse,SAASN,EAAS9S,YAEE,IAAvB8S,EAASO,YACXve,KAAKue,UAAYP,EAASO,gBAEJ,IAApBP,EAAShO,SACXhQ,KAAKgQ,OAASgO,EAAShO,aAEI,IAAzBgO,EAASQ,cACXxe,KAAKwe,YAAcR,EAASQ,kBAGP,IAAnBR,EAAS7B,QACXnc,KAAKmc,MAAQ6B,EAAS7B,QAvL9B,IAA6B3M,GA4L3BwN,EAAAvc,UAAAge,aAAA,SAAa1Q,GACX,IAAM5M,EAAS,GAEfnB,KAAK+c,MAAM2B,MAAQ,EACnB1e,KAAK+c,MAAM9U,KAAO0W,OAAOC,UACzB5e,KAAK+c,MAAMpU,IAAMgW,OAAOC,UACxB5e,KAAK+c,MAAM8B,OAASF,OAAOC,UAC3B5e,KAAK+c,MAAM+B,IAAM,KACjB9e,KAAK+c,MAAMgC,QAAU,KACrB/e,KAAK+c,MAAMiC,MAAQ,KACnBhf,KAAK+c,MAAMkC,MAAQ,EACnBjf,KAAK+c,MAAMmC,KAAO,KAClBlf,KAAK+c,MAAMoC,MAAQ,KACnBnf,KAAK+c,MAAMqC,SAAWT,OAAOC,UAC7B5e,KAAKqf,WAAY,EACjBrf,KAAKsf,WAAY,EAWjB,IATA,IAEIC,EACAC,EAEAC,EALEC,EAA4B,cAAd3R,EACd4R,EAA2B,iBAAd5R,EAGf6R,EAAW,EAEXC,EAAgB,EAChBC,GAAkB,EAEb1Z,EAAI,EAAGA,EAAIpG,KAAK8U,WAAW3P,OAAQiB,IAAK,CAM/C,GALAoZ,EAAexf,KAAK8U,WAAW1O,GAAG,GAClCmZ,EAAcvf,KAAK8U,WAAW1O,GAAG,QAIZH,IAAjBwZ,EAA4B,CAC9B,IAAML,EAAWG,EAAcE,EAC3BL,EAAWpf,KAAK+c,MAAMqC,WACxBpf,KAAK+c,MAAMqC,SAAWA,GAK1B,GAFAK,EAAeF,EAEM,OAAjBC,EAAuB,CACzB,GAAIE,EACF,SAEEC,IACFH,EAAe,GAIE,OAAjBA,IACE1e,EAAAC,EAAEqb,SAASoD,KACbxf,KAAK+c,MAAM2B,OAASc,EACpBxf,KAAKqf,WAAY,EACjBO,KAGEJ,EAAexf,KAAK+c,MAAM9U,MAC5BjI,KAAK+c,MAAM9U,IAAMuX,GAGfA,EAAexf,KAAK+c,MAAMpU,MAC5B3I,KAAK+c,MAAMpU,IAAM6W,GAGM,OAArBxf,KAAK+c,MAAMiC,MACbhf,KAAK+c,MAAMiC,MAAQQ,EAEfK,EAAgBL,GAElBM,GAAkB,EACd1Z,IAAMpG,KAAK8U,WAAW3P,OAAS,IAEjCnF,KAAK+c,MAAMkC,OAASO,KAIpBxf,KAAK+c,MAAMkC,OADTa,EACkBN,EAAeK,EAEfL,EAEtBM,GAAkB,GAGtBD,EAAgBL,EAEZA,EAAexf,KAAK+c,MAAM8B,QAAUW,EAAe,IACrDxf,KAAK+c,MAAM8B,OAASW,GAGD,IAAjBA,IACFxf,KAAKsf,WAAY,IAIrBne,EAAOyO,KAAK,CAAC2P,EAAaC,IAyB5B,OAtBIxf,KAAK+c,MAAM9U,OAAS0W,OAAOC,YAC7B5e,KAAK+c,MAAM9U,IAAM,MAEfjI,KAAK+c,MAAMpU,MAAQgW,OAAOC,YAC5B5e,KAAK+c,MAAMpU,IAAM,MAGfxH,EAAOgE,SAAWnF,KAAKqf,YACzBrf,KAAK+c,MAAM+B,IAAM9e,KAAK+c,MAAM2B,MAAQkB,EACpC5f,KAAK+c,MAAMgC,QAAU5d,EAAOA,EAAOgE,OAAS,GAAG,GACpB,OAAvBnF,KAAK+c,MAAMgC,SAAoB5d,EAAOgE,OAAS,IACjDnF,KAAK+c,MAAMgC,QAAU5d,EAAOA,EAAOgE,OAAS,GAAG,KAG5B,OAAnBnF,KAAK+c,MAAM9U,KAAmC,OAAnBjI,KAAK+c,MAAMpU,MACxC3I,KAAK+c,MAAMoC,MAAQnf,KAAK+c,MAAM9U,IAAMjI,KAAK+c,MAAMpU,KAEtB,OAAvB3I,KAAK+c,MAAMgC,SAAyC,OAArB/e,KAAK+c,MAAMiC,QAC5Chf,KAAK+c,MAAMmC,KAAOlf,KAAK+c,MAAMgC,QAAU/e,KAAK+c,MAAMiC,OAGpDhf,KAAK+c,MAAMgD,MAAQ5e,EAAOgE,OACnBhE,GAGT6b,EAAAvc,UAAAub,mBAAA,SAAmBgE,EAA0B3D,EAAwBM,GACnE3c,KAAKqd,cAAgB2C,EACrBhgB,KAAKqc,SAAWA,EAChBrc,KAAK2c,eAAiBA,GAGxBK,EAAAvc,UAAAwf,YAAA,SAAY1e,GAIV,OAHKT,EAAAC,EAAEmf,SAAS3e,KACdA,EAAQ,MAEHvB,KAAKqd,cAAc9b,EAAOvB,KAAKqc,SAAUrc,KAAK2c,iBAGvDK,EAAAvc,UAAAgd,qBAAA,WACE,IAAK,IAAIrX,EAAI,EAAGA,EAAIpG,KAAK8U,WAAW3P,OAAQiB,IAC1C,GAA8B,OAA1BpG,KAAK8U,WAAW1O,GAAG,SAAyCH,IAA1BjG,KAAK8U,WAAW1O,GAAG,GAAkB,CACzE,IAAM+Z,EAAYngB,KAAK8U,WAAW1O,GAAG,GAAGP,WACxC,GAAyB,KAArBsa,EAAUhb,QAAiBgb,EAAY,KAAS,EAClD,OAAO,EAIb,OAAO,GAGTnD,EAAAvc,UAAA2f,eAAA,SAAelZ,GACb,SAAIA,EAAQmZ,YAAargB,KAAKqf,cAIzBrf,KAAKgQ,WAKN9I,EAAQoZ,WAAYtgB,KAAKsf,aAO/BtC,EAAAvc,UAAA6d,SAAA,SAASpT,GACPlL,KAAKkL,MAAQA,EACblL,KAAK6Y,KAAKuE,UAAYlS,GAE1B8R,EA5SA,+BC1EA,IAAAta,EAAA,qDAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,GAAgEA,EAAAC,IAAAN,EADhE,4VAEAG,EAAAI,QAAAP,wBCHA,IAAAA,EAAA,2DAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,GAAgEA,EAAAC,IAAAN,EADhE,8iKAEAG,EAAAI,QAAAP,wBCHA,IAAAA,EAAA,mDAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,GAAgEA,EAAAC,IAAAN,EADhE,+2CAEAG,EAAAI,QAAAP,uCCyCA,IAAY6d,EAOAC,EAPZtmB,EAAAC,EAAAC,EAAA,sBAAAmmB,IAAArmB,EAAAC,EAAAC,EAAA,sBAAAomB,IAAAtmB,EAAAC,EAAAC,EAAA,sBAAAqmB,IAAA,SAAYF,GACVA,EAAA,sBACAA,EAAA,oBACAA,EAAA,0BACAA,EAAA,8BAJF,CAAYA,MAAkB,KAO9B,SAAYC,GACVA,EAAA,yBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,gBACAA,EAAA,sBALF,CAAYA,MAAkB,KAavB,IAAMC,EAAgB,2BC/D7B,IACQtmB,EAEAumB,EACAC,EAEAC,EASAC,EAdA1mB,EAAS2E,SAET4hB,EAAevmB,EAAE+H,cAAc,SAC/Bye,EAAY,qBAAsBxmB,EAElCymB,EAAmB,SAAC7M,EAAc+M,GAElCH,EACFxmB,EAAEymB,iBAAiB7M,EAAM+M,GAEzB3mB,EAAE4mB,YAAY,KAAOhN,EAAM+M,IAIzBD,EAAS,SAACG,GAEZN,EAAaO,WAAcP,EAAaO,WAAWD,QAAUA,EAAYN,EAAaQ,UAAYF,GAGtG7mB,EAAE4E,qBAAqB,QAAQ,GAAGoiB,YAAYT,GAG9CE,EAAiB,YAAa,WAC5BC,EAAO,+DAGTD,EAAiB,UAAW,WAC1BC,EAAO,4BC7BX,IAAAne,EAAA,gEAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,GAAgEA,EAAAC,IAAAN,EADhE,0jGAEAG,EAAAI,QAAAP,wBCHA,IAAAA,EAAA,oDAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,GAAgEA,EAAAC,IAAAN,EADhE,yyEAEAG,EAAAI,QAAAP,uCCYe,SAAS0e,IACtB,MAAO,CACLC,UAAA,SAAUC,EAAsB/d,EAAoByR,GAClD,IAAMzT,EAAQgC,EAAOhC,MAErB,GAAIA,EAAMggB,UAAUC,WAClB,OAAOxM,IAGT,GAAkB,UAAdsM,EAAMhb,KAAmBgb,EAAMG,SAAU,CAC3CH,EAAMI,iBAEE,IAEFC,EA1Bd,SAAmB9lB,GACjB,IAAI+lB,EAAS/lB,EAAKsJ,OAAStJ,EAAKgmB,WAAW1c,OAC3C,GAAIyc,EAAQ,CAEV,IADA,IAAID,EAAS9lB,EAAK,KACT+lB,GACPD,GAAU9lB,EAAK,GAEjB,OAAO8lB,EAET,MAAO,GAiBcG,CAFPvgB,EAAAwgB,WAC2BlmB,MAGnC,OAAO0H,EACJye,aACAC,WAAWN,GACXO,QAGL,OAAOlN,MAlCb9a,EAAAC,EAAAC,EAAA,sBAAAgnB,yFC6BAe,EAAA,WAKE,SAAAA,EAAoBtS,GAAA7P,KAAA6P,OAJZ7P,KAAAoiB,QAAe,GACfpiB,KAAAqiB,KAAO,IAAIC,IACXtiB,KAAAuiB,YAAa,EA8GvB,OA1GEJ,EAAA1hB,UAAA+hB,YAAA,SAAY3lB,WACV,IAAKmD,KAAKuiB,WAAY,CACpB,GAAIviB,KAAK6P,SACP,IAAkB,IAAAgF,EAAArU,EAAA,EAAAR,KAAK6P,QAAMkF,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAE,CAA1B,IAAMyN,EAAG1N,EAAAxT,MACZvB,KAAK0iB,SAASD,qGAGlBziB,KAAKiQ,OACLjQ,KAAKuiB,YAAa,EAEpB,GAAI1lB,EACF,OAAOmD,KAAKqiB,KAAKphB,IAAIpE,IAKzBslB,EAAA1hB,UAAAQ,IAAA,SAAIpE,GACF,IAAMmJ,EAAIhG,KAAKwiB,YAAY3lB,GAC3B,IAAKmJ,EACH,MAAM,IAAIoQ,MAAM,cAAgBvZ,GAElC,OAAOmJ,GAGTmc,EAAA1hB,UAAAkiB,cAAA,SAAc5D,EAAoBvN,eAC3BxR,KAAKuiB,YACRviB,KAAKwiB,YAAY,OAGnB,IAAMI,EAAS,CACb1b,QAAS,GACT6X,QAAS,IAGL8D,EAAkB,GACxB,GAAI9D,MACF,IAAiB,IAAA+D,EAAAtiB,EAAA,EAAAue,GAAOgE,EAAAD,EAAA9N,QAAA+N,EAAA9N,KAAA8N,EAAAD,EAAA9N,OAAE,CACxB6N,EADWE,EAAAxhB,QACM,wGAIrB,IAAkB,IAAAwT,EAAAvU,EAAA,EAAAR,KAAKoiB,SAAOxM,EAAAb,EAAAC,QAAAY,EAAAX,KAAAW,EAAAb,EAAAC,OAAE,CAA3B,IAAMyN,EAAG7M,EAAArU,MACZ,IAAIkhB,EAAIO,qBAGJxR,GAAWA,EAAOiR,IAAtB,CAIA,IAAMQ,EAAS,CACb1hB,MAAOkhB,EAAI5lB,GACX2E,MAAOihB,EAAIzd,KACXke,YAAaT,EAAIS,aAGnBN,EAAO1b,QAAQ0I,KAAKqT,GAChBJ,EAAWJ,EAAI5lB,KACjB+lB,EAAO7D,QAAQnP,KAAKqT,sGAGxB,OAAOL,GAMTT,EAAA1hB,UAAA0iB,KAAA,SAAKC,WACH,GAAIA,EAAK,CACP,IAAMC,EAAa,OACnB,IAAiB,IAAAC,EAAA9iB,EAAA,EAAA4iB,GAAGG,EAAAD,EAAAtO,QAAAuO,EAAAtO,KAAAsO,EAAAD,EAAAtO,OAAE,CAAjB,IAAMnY,EAAE0mB,EAAAhiB,MACLyE,EAAIhG,KAAKwiB,YAAY3lB,GACvBmJ,GACFqd,EAAMzT,KAAK5J,qGAGf,OAAOqd,EAKT,OAHKrjB,KAAKuiB,YACRviB,KAAKwiB,YAAY,OAEZhiB,EAAA,EAAIR,KAAKoiB,UAGlBD,EAAA1hB,UAAAiiB,SAAA,SAASD,WACP,GAAIziB,KAAKqiB,KAAKmB,IAAIf,EAAI5lB,IACpB,MAAM,IAAIuZ,MAAM,iBAAmBqM,EAAI5lB,IAKzC,GAHAmD,KAAKqiB,KAAKpmB,IAAIwmB,EAAI5lB,GAAI4lB,GACtBziB,KAAKoiB,QAAQxS,KAAK6S,GAEdA,EAAIgB,aACN,IAAoB,IAAA5O,EAAArU,EAAA,EAAAiiB,EAAIgB,UAAQ1O,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAE,CAA7B,IAAMuB,EAAKxB,EAAAxT,MACTvB,KAAKqiB,KAAKmB,IAAIjN,IACjBvW,KAAKqiB,KAAKpmB,IAAIsa,EAAOkM,qGAKvBziB,KAAKuiB,YACPviB,KAAKiQ,QAIDkS,EAAA1hB,UAAAwP,KAAR,aAGFkS,EAjHA,wCChCA,IAAYuB,GAAZ,SAAYA,GACVA,EAAA,oBACAA,EAAA,wBACAA,EAAA,4BAHF,CAAYA,MAAsB,0CCAlCxpB,EAAAC,EAAAC,EAAA,sBAAAupB,IAAAzpB,EAAAC,EAAAC,EAAA,sBAAAwpB,IAAA,IAAApjB,EAAAtG,EAAA,QAIaypB,EAAsB,WAAM,OACvC5P,KAAM,QACNrT,MAAO,CAAEmjB,OAAQ,CAAC,IAAK,KAAM,QAC7BC,QAAS,CAAE/P,KAAM,MAAO8P,OAAQ,IAChCE,UAAW,CAAEhQ,KAAM,KAAM8P,OAAQ,CAAC,OAClCG,SAAU,CAAEjQ,KAAM,SAGP6P,EAA+B,SAC1CK,EACAC,EACAC,EACAC,GAAsB,OAAA5jB,EAAA,OAhBxByF,OAgBwB,EACrBoe,QAAO,sFACR,GAAuB,IAAnBH,EAAQ/e,OACV,SAAO,qCAGT,GAAI8e,GAAmBA,EAAgB9e,OACrC,SAAO,sDAGLmf,EAAuB,EACvBC,EAAgC,0CAEfC,EAAAhkB,EAAA,EAAA0jB,GAAOO,EAAAD,EAAAxP,6CAAjBR,EAAMiQ,EAAAljB,MACTmjB,EAASlQ,EAAOmQ,YAAcP,EACzB,GAAMD,EAAcljB,IAAIyjB,aAA7BE,EAAK/P,EAAAgQ,QACHznB,KAAK0nB,SAEFF,EAAGG,wBAA0BH,EAAGG,uBAAuBvQ,IAChE+P,IAFAD,sMAMJ,OAAIA,IAAyBJ,EAAQ/e,OACnC,GAAO,oDAGLof,IAAkCL,EAAQ/e,OAC5C,GAAO,yDAGT,GAAO,gCC/CT,IAAAzC,EAAA,0EAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,GAAgEA,EAAAC,IAAAN,EADhE,ghBAEAG,EAAAI,QAAAP,8ICMAsiB,EAAA,oBAaEC,EA8BCC,EAAAC,EAAAC,EAAAC,EAAA1kB,EAAA2kB,GA7BS,IAAAxlB,EAAME,KACNA,KAAAklB,SACAllB,KAAAmlB,OAASA,EACTnlB,KAAAolB,UAAUA,EACVplB,KAAAqlB,aACArlB,KAAAW,WAAYA,EAEpBX,KAAAslB,eAIAJ,EAAK7pB,UAAW2E,KAAA3E,eACd6pB,OAAKtL,IAAA,WAAU,WACf9Z,EAAAzE,UAAWkqB,qCACJ,WACLzlB,EAAKulB,WAAUG,SAAA,cAAe,CAAA3b,SAAA,IAC7B/J,EAAAzE,UAAAoqB,mBAILzlB,KAAK0lB,UAAUC,EAA2B,EAACC,2BAC3C5lB,KAAK6lB,QAAS7lB,KAAG3E,UAAK+B,KAAUyoB,QAEhC7lB,KAAK8lB,UAAA9lB,KAAgB3E,UAAG+B,KAAAyoB,QACxB7lB,KAAK+lB,mBAEL/lB,KAAKgmB,iBACLhmB,KAAKqlB,WAAWY,WAAS,eAAiBjmB,KAAAgmB,eAAqB5lB,KAAKJ,MAAAklB,GACpEllB,KAAKqlB,WAAWG,SAAA,cAAW,CAAAU,SAAwB,EAAArf,IAAW,IAC/D7G,KAAAqlB,WAAAY,WAAA,kBAAAjmB,KAAAmmB,WAAA/lB,KAAAJ,MAAAklB,GAqMF,OAnOCD,EAAAmB,QACU,UACA,SACA,YACA,aACsB,aACI,wDA2BlC,IAAIC,EAACvkB,EAEL9B,KAAIsmB,SAAK,GACPtmB,KAAK3E,UAAS+B,KAAKC,eACjBipB,SAAO1W,KAAA,CACPhU,MAAI,UACJiB,GAAI,WACHf,KAAA,iCAEDwqB,SAAO1W,KAAA,CACPhU,MAAI,cACJiB,GAAI,cACHf,KAAA,gCAEDwqB,SAAO1W,KAAA,CACPhU,MAAI,YACJiB,GAAI,aACHf,KAAA,8BAEDwqB,SAAO1W,KAAO,CACdhU,MAAI,QACJiB,GAAI,QACHf,KAAA,sBAIHkE,KAAK3E,UAASwB,IAAKmD,KAAA3E,UAAA+B,KAAAyoB,cACjBS,SAAO1W,KAAA,CACPhU,MAAI,WACJiB,GAAI,WACHf,KAAA,wBAIHkE,KAAK3E,UAASwB,IAAKmD,KAAA3E,UAAA+B,KAAAmpB,eACjBD,SAAO1W,KAAA,CACPhU,MAAI,cACJiB,GAAI,cACHf,KAAA,qBAIHkE,KAAK3E,UAAS+B,KAAKopB,sBACjBF,SAAO1W,KAAA,CACPhU,MAAM,UACNE,KAAI,0BACHe,GAAA,uBAIHypB,SAAO1W,KAAA,CACPhU,MAAI,aACJiB,GAAI,iBACHf,KAAA,qBAGH,IAAM+nB,EAAM7jB,KAAKolB,UAAUjlB,yCAEtB,IAAM0U,EAAA4R,EAAO,EAAAzmB,KAAAsmB,UAAAvR,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CAChB,IAAM4F,EAAA7F,EAAaxT,MACnBmlB,EAAcC,EAAA5lB,EAAA0O,SAAO,CAAAmX,SAAkBhM,EAAM/d,IAAAgnB,GAC9CjJ,EAAAjU,IAAA8N,EAAA,EAAAoS,UAAAlgB,EAAA,IAAAmgB,EAAA/lB,EAAAgmB,MAAAL,yGAIIjmB,UAAculB,eAAgB,WAEnChmB,KAAIgnB,OAAKhnB,KAAQolB,UAAAjlB,SAAAymB,SACf5mB,KAAKgnB,SACNhnB,KAAAsV,KAAA2R,EAAAlmB,EAAAmmB,OAAAlnB,KAAA3E,UAAA8rB,qBAAA,IAGe,aAAdnnB,KAAKgnB,QAAyBhnB,KAAA3E,UAAA+B,KAAAopB,kBAC/BxmB,KAAAgnB,OAAA,iBAGoBL,EAAA5lB,EAAA6J,KAAA5K,KAAAsmB,SAAA,CAAAzpB,GAAAmD,KAAAgnB,gBAEjBV,SAAOc,QAAW,CAClBxrB,MAAI,YACJiB,GAAI,MACHf,KAAA,wBAEJkE,KAAAgnB,OAAA,UAIIvmB,UAAa4mB,gBAAkB,WACrCrnB,KAAAslB,aAAAgC,qBAGM7mB,UAAa8mB,cAAgB,WACnCvnB,KAAAslB,aAAAiC,mBAED9mB,UAIC+mB,kBAAA,WAHC,IAAI1nB,EAACE,UACHslB,aAAYmC,kBAASznB,KAAAsV,MAAApU,KAAA,WACpBpB,EAAAqlB,OAAAuC,cAIEjnB,UAAA0lB,WAAyB,WAC/BnmB,KAAA2nB,wBAAA,KAEDlnB,UAQCmnB,aAAA,WAPC,IAAM9nB,EAAAE,KACN6nB,EAAgB7nB,KAAColB,UAASjlB,gBAC1B0nB,EAAWjB,oBACJ,aACHvB,WAAKyC,OAAU,WACdhoB,EAAAslB,UAAAjlB,OAAA0nB,UAKApnB,UAAUsnB,aAAgB,WAC/B/nB,KAAK3E,UAAU2sB,UAAK,EACpBhoB,KAAK3E,UAAU+B,KAAKopB,iBAAe,EACnCxmB,KAAK3E,UAAU+B,KAAKC,SAAU,EAC9B2C,KAAK3E,UAAS+B,KAAGyoB,SAAK,EACtB7lB,KAAK8lB,WAAS,EACd9lB,KAAKgnB,OAAA,WAELhnB,KAAM+lB,mBACN,IAAIkC,EAAetB,EAAe5lB,EAAI6J,KAAC5K,KAAAsmB,SAAA,CAAAzpB,GAAAmD,KAAAgnB,SACxChnB,KAAAolB,UAAAze,IAAAshB,EAAAthB,QAEDlG,UA6CCynB,gBAAA,WA5CC,IAAIpoB,EAAAE,KACAtE,EAAa,GAEbF,EAAKwE,KAAA3E,UAAeO,SACtBoE,KAAA3E,UAAA+B,KAAA+qB,cACS,EAAAxsB,KAAA,gBAAqC,CAC5CC,MAAM,sCAINC,KAAK,qKAMLL,MAAA,wPAAmBwE,KAAA3E,UAAA+B,KAAAgrB,sBAAA,aACnBC,eAAM,EACNvsB,KAAM,WACLwsB,OAAA,gBAKHC,EAAO5B,EAAiB5lB,EAAEynB,MAACxoB,KAAA3E,UAAAsB,OAAA,SAAArB,GAC1B,OAAAA,EAAAG,MAAA,MAGD8sB,EAAA,IACA7sB,EAAQ,SACTF,EAAA,2BAAA+sB,EAAA,oEAGgB,EAAA5sB,KAAA,iBACfC,MAAM,SACNC,KAAK,wCACLL,MAAMA,EACNM,KAAA,WACAJ,YAASA,EACTK,QAAS,mBACF,WACL+D,EAAKzE,UAAA+B,KAAAyoB,SAAwB,EAC9B/lB,EAAA2oB,kCAILhoB,UAKCgoB,yBAAA,WAJC,IAAI3oB,EAACE,UACHW,WAAAunB,gBAAUloB,KAAK3E,UAAAqtB,KAAiB,GAACxnB,KAAA,WACjCykB,EAAuB,EAAChqB,KAAA,qCAAAmE,EAAAzE,UAAAO,MAAA,sBACvBkE,EAAAslB,UAAAze,IAAA,UAIElG,UAAckoB,eAAY,SAAUC,GACzC5oB,KAAK3E,UAAU+B,KAAKyrB,SAAWD,EAAG/rB,GAClCmD,KAAK3E,UAAA+B,KAAA0rB,YAA6BF,EAAChtB,MACpCoE,KAAA2nB,wBAAA,KAGQlnB,UAAAsoB,UAAA,iBACH,CACFlsB,GAAAmD,KAAO3E,UAAK+B,KAAUyrB,SACtBjtB,MAAKoE,KAAK3E,UAAU+B,KAAK0rB,YACzBniB,IAAA3G,KAAA3E,UAAA+B,KAAA4rB,YAEL/D,EAhPD,sDAoPI,CACAgE,SAAA,IACAC,YAAY,2EACZC,WAAAnE,EACAoE,kBAAc,EACdC,aAAY,OACZC,YAAS,EACT5P,MAAA,CAAAre,UAAA,6CCvPmCkuB,EAAA,SAAoB3pB,gBAsB1D,cAAAA,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KAtBsC,OAAvCymB,EAAA,EAAAiD,EAAA9pB,KAKmBa,UAAAkpB,kBAAgB,WAE/B,IAAMC,EAAQ1rB,OAAGX,EAAA,iBAAHW,GAGV2rB,EAAW,CAAGxuB,UAAY2E,KAAKH,MAAAxE,WACpC2E,KAAA8pB,WAAAF,EAAAG,KAAA/pB,KAAAgqB,QAAAH,EAHiB,8EAMPppB,UAAYwpB,qBAAA,WACnBjqB,KAAK8pB,YACN9pB,KAAA8pB,WAAAI,aAGHzpB,UAECoB,OAAA,WADC,IAAA/B,EAAOE,KACR,OAAA0Q,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,sBAAAooB,IAAA,SAAAH,GAAA,OAAAlqB,EAAAkqB,cArBoCN,EAAA,8BCNrCU,EAAA,WAeD,kBAbGpqB,KAAK1E,MAAM0E,KAAA3E,UAAiBgvB,gBAC1B/uB,MAAIgvB,kBAAAtqB,KAAA1E,MAAAgvB,mBAAA,CACJ,KACA,MACA,MACA,KACA,KACA,MACA,MACA,KACA,KACA,OAbJ,GAkDKC,EAA2B,k1CAE9B,CACAtB,SAAU,IACVuB,SAAUD,EACVpB,WAAAiB,EACAhB,kBAAc,EACdC,aAAO,aACL,CACDhuB,UAAA,QClELnB,EAAAC,EAAAC,EAAA,sBAAAmvB,yCCIA,IAAAkB,EAQAC,EAeAC,EC3BAC,YDKEH,GACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,0BACAA,EAAA,0BALUA,EAAS,yBAQrBA,IAAYA,EAUX,cATCC,GAEAA,EAAA,kBAEAA,EAAiB,YAEjBA,EAAA,gBACAA,EAAuB,iBAIzBA,MAAA,cAIEC,GACAA,EAAA,gBACAA,EAAA,kBACAA,EAAA,kBAJUA,EAAA,uCC1BVC,GAEAA,EAAA,gBAGAA,EAAA,gBACAA,EAAA,4BACAA,EAAA,wCACAA,EAAA,aAAa,eATHA,EAAA,wCCMVC,EAAc,CACdhuB,GAAI4tB,EAAOK,SACX9lB,KAAA,MACAke,YAAA,yBACAF,mBAAkB,EAElB5gB,eAAM,OACJ,SAAM8E,OACJ6jB,EAAO7jB,EAAA9F,IAAgB,SAAQ6hB,GAC9B,OAAA+H,EAAA/H,wCAEI,IAAMgI,EAAKxE,EAAA,EAAAsE,GAAAG,EAAAD,EAAAjW,QAAAkW,EAAAjW,KAAAiW,EAAAD,EAAAjW,OAAA,KAEZmW,EADQD,EAAQ3pB,OAChBoS,GACD,2GAGH,6CAIF,IAAIyX,EAAItpB,eACH,IAAMupB,EAAG5E,EAAA,EAAAvf,GAAAokB,EAAAD,EAAArW,QAAAsW,EAAArW,KAAAqW,EAAAD,EAAArW,OAAA,CACZ,IAAIuW,EAAKD,EAAY/pB,MACnB1F,EAAIsJ,OAAU,IACftJ,GAAA,QAED,IAAI2vB,EAAIC,EAAQxqB,IAAAsqB,EAAA1uB,IACjBhB,GAAA2vB,EAAAE,sBAAAF,EAAAE,sBAAAH,GAAAC,EAAAxmB,uGAEF,OAAAnJ,IAID8vB,EAAc,CACd9uB,GAAI4tB,EAAOK,SACX9lB,KAAA,MACAke,YAAA,yBACAF,mBAAkB,EAElB5gB,eAAM,OACJ,SAAM8E,OACJ6jB,EAAO7jB,EAAA9F,IAAgB,SAAS6hB,GAC/B,OAAA2I,EAAA3I,wCAEI,IAAM4I,EAAKpF,EAAA,EAAAsE,GAAAe,EAAAD,EAAA7W,QAAA8W,EAAA7W,KAAA6W,EAAAD,EAAA7W,OAAA,KAEZmW,EADQW,EAAQvqB,OAChBgM,GACD,2GAGH,6CAIF,IAAIwe,EAAIjqB,eACH,IAAMkqB,EAAGvF,EAAA,EAAAvf,GAAA+kB,EAAAD,EAAAhX,QAAAiX,EAAAhX,KAAAgX,EAAAD,EAAAhX,OAAA,CACZ,IAAIuW,EAAKU,EAAY1qB,MACnB1F,EAAIsJ,OAAU,IACftJ,GAAA,QAED,IAAI2vB,EAAIU,EAAQjrB,IAAAsqB,EAAA1uB,IACjBhB,GAAA2vB,EAAAE,sBAAAF,EAAAE,sBAAAH,GAAAC,EAAAxmB,uGAEF,OAAAnJ,IAIDswB,EAAc,CACdtvB,GAAI4tB,EAAO2B,SACXpnB,KAAA,MACAke,YAAA,2BACAF,mBAAkB,EAElB5gB,eAAM,OACJ,SAAM8E,OACJ6jB,EAAO7jB,EAAA9F,IAAgB,SAAQ6hB,GAC9B,OAAA+H,EAAA/H,wCAEI,IAAMoJ,EAAK5F,EAAA,EAAAsE,GAAAuB,EAAAD,EAAArX,QAAAsX,EAAArX,KAAAqX,EAAAD,EAAArX,OAAA,MAEZmW,EADSmB,EAAQ/qB,OACVoS,GACR,2GAGH,6CAIF,IAAI4Y,EAAIzqB,eACH,IAAM0qB,EAAG/F,EAAA,EAAAvf,GAAAulB,EAAAD,EAAAxX,QAAAyX,EAAAxX,KAAAwX,EAAAD,EAAAxX,OAAA,CACZ,IAAIuW,EAAKkB,EAAYlrB,MACnB1F,EAAIsJ,OAAI,IACTtJ,GAAA,SAED,IAAI2vB,EAAIC,EAAQxqB,IAAAsqB,EAAA1uB,IACjBhB,GAAA2vB,EAAAE,sBAAAF,EAAAE,sBAAAH,GAAAC,EAAAxmB,uGAEF,OAAAnJ,IAID6wB,EAAc,CACd7vB,GAAI4tB,EAAO2B,SACXpnB,KAAA,MACAke,YAAA,2BACAF,mBAAkB,EAElB5gB,eAAM,OACJ,SAAM8E,OACJ6jB,EAAO7jB,EAAA9F,IAAgB,SAAS6hB,GAC/B,OAAA2I,EAAA3I,wCAEI,IAAM0J,EAAKlG,EAAA,EAAAsE,GAAA6B,EAAAD,EAAA3X,QAAA4X,EAAA3X,KAAA2X,EAAAD,EAAA3X,OAAA,MAEZmW,EADSyB,EAAQrrB,OACVgM,GACR,2GAGH,6CAIF,IAAIsf,EAAI/qB,eACH,IAAMgrB,EAAGrG,EAAA,EAAAvf,GAAA6lB,EAAAD,EAAA9X,QAAA+X,EAAA9X,KAAA8X,EAAAD,EAAA9X,OAAA,CACZ,IAAIuW,EAAKwB,EAAYxrB,MACnB1F,EAAIsJ,OAAI,IACTtJ,GAAA,SAED,IAAI2vB,EAAIU,EAAQjrB,IAAAsqB,EAAA1uB,IACjBhB,GAAA2vB,EAAAE,sBAAAF,EAAAE,sBAAAH,GAAAC,EAAAxmB,uGAEF,OAAAnJ,IAIDmxB,EAAc,CACdnwB,GAAI4tB,EAAOwC,YACXjoB,KAAA,MACAke,YAAA,yBAEAF,mBAAM,MACJ,SAAWC,GACX,IAAAiK,EAAOlC,EAAa/H,UAClB,SAAatP,GACb,OAAAuZ,EAAAvZ,2BAIc,SAAczM,GAC9B,IAAMskB,EAAOC,EAAQxqB,IAAAiG,EAAqBrK,IAE3C,cADQ2uB,EAASE,sBAAKF,EAAAE,sBAAAxkB,WAAAskB,EAAAxmB,QAKvBmoB,EAAc,CACdtwB,GAAI4tB,EAAOwC,YACXjoB,KAAA,MACAke,YAAA,yBAEAF,mBAAM,MACJ,SAAWC,GACX,IAAAiK,EAAOtB,EAAiB3I,UACtB,SAAa1V,GACb,OAAA2f,EAAA3f,2BAIc,SAAcrG,GAC9B,IAAMskB,EAAOU,EAAQjrB,IAAAiG,EAAqBrK,IAE3C,cADQ2uB,EAASE,sBAAKF,EAAAE,sBAAAxkB,WAAAskB,EAAAxmB,QAKvBooB,EAAY,SAAAzZ,GACZ,UAGA0Z,EAAY,SAAA9f,GACZ,UAGA+f,EAAa,SAAA3Z,GACb,UAGA4Z,EAAa,SAAAhgB,GACb,UAGAigB,EAAyB,CACzB3wB,GAAI4tB,EAAEgD,YACNzoB,KAAA,aAEAke,YAAK,mBACH,SAAOD,GACR,OAAAmK,yBAGiB,SAAAlmB,GACjB,iBAIDwmB,EAAyB,CACzB7wB,GAAI4tB,EAAEgD,YACNzoB,KAAA,aAEAke,YAAK,mBACH,SAAOD,GACR,OAAAoK,yBAGiB,SAAAnmB,GACjB,iBAIDymB,EAAwB,CACxB9wB,GAAI4tB,EAAEmD,WACN5oB,KAAA,YACAke,YAAA,cAEAF,mBAAM,MACJ,SAAOC,GACR,OAAAqK,yBAGgB,SAAApmB,GAChB,gBAID2mB,EAAwB,CACxBhxB,GAAI4tB,EAAEmD,WACN5oB,KAAA,YAEAke,YAAK,kBACH,SAAOD,GACR,OAAAsK,yBAGgB,SAAArmB,GAChB,gCCpPD4mB,EAAkB,CAClBjxB,GAAI6tB,EAAcqD,OAClB/oB,KAAA,aACAke,YAAA,uBAEA9gB,eAAM,WACJ,SAAW4rB,GACX,IAAAnS,EAAO3d,OAACkV,EAAY,EAAblV,CAAa8vB,UAClB,SAAara,GACb,OAAAkI,EAAAtV,KAAAoN,EAAA3O,8BAIK,SAAegpB,GACvB,qBAAAA,IAKDC,EAAkB,CAClBpxB,GAAI8tB,EAAcoD,OAClB/oB,KAAA,aACAke,YAAA,uBAEA9gB,eAAM,WACJ,SAAW4rB,GACX,IAAAnS,EAAO3d,OAACkV,EAAgB,EAAjBlV,CAAiB8vB,UACtB,SAAazgB,GACb,OAAAsO,EAAAtV,KAAAgH,EAAAvI,MAAA,4BAIK,SAAegpB,GACvB,qBAAAA,oBClCDE,EAAkB,CAClBrxB,GAAI6tB,EAAcyD,OAClBnpB,KAAA,aACAke,YAAA,gCAEA9gB,eAAMgsB,EAAe,EAAAnb,WACnB,SAAOc,UACL,SAAWJ,GACX,OAAAI,IAAAJ,EAAAI,6BAIK,SAAsBA,GAC9B,qBAAAA,IAMDsa,EAAI,CACJxxB,GAAI6tB,EAAE4D,QACNtpB,KAAA,iBAEAke,YAAK,8BACH,WACD,OAAAgL,EAAAjtB,IAAAmtB,EAAA,EAAAnb,+BAGQ,WACR,yBAKDsb,EAAI,CACJ1xB,GAAI6tB,EAAelX,KACnBxO,KAAA,cAEAke,YAAK,4BACH,WACD,OAAAgL,EAAAjtB,IAAAmtB,EAAA,EAAA5a,6BAGQ,WACR,0BC5CDgb,EAAI,CACJ3xB,GAAI8tB,EAAe8D,QACnBzpB,KAAA,cACAke,YAAA,kBAEA9gB,eAAM,QACJ,SAAO4rB,UACL,SAAOzgB,GACP,OAAAygB,IAAAzgB,EAAA8H,8BAIe,SAAU2Y,GAC5B,gBAAAA,oBCJDvC,EAAO,IAAAtJ,EACF,aAIJ,OAAAsE,EAAA,EJ4OF,CAAAoE,EAAAsB,EAAAa,EAAAQ,EAAAG,GEtMA,CAAAO,EAAAG,EAAAE,GDVA,CAAAT,MGzBC5B,EAAO,IAAA/J,EACF,aAIJ,OAAAsE,EAAA,EJwOF,CAAAkF,EAAAe,EAAAS,EAAAO,EAAAG,GChNA,CAAAI,GE5BA,CAAAO,eCOOxD,EAAOvW,GACb,IAAIjE,EAAOib,EAAAxqB,IAAAwT,EAAA5X,QACT2T,EACD,UAAA4F,MAAA,oBAAA3B,EAAA5X,IAEF,OAAA2T,EAAAvP,IAAAwT,EAAAvN,kBAGO0kB,EAAOnX,GACb,IAAIjE,EAAO0b,EAAAjrB,IAAAwT,EAAA5X,QACT2T,EACD,UAAA4F,MAAA,oBAAA3B,EAAA5X,IAEF,OAAA2T,EAAAvP,IAAAwT,EAAAvN,aCtCDwnB,cCEEC,EAAI,CACJ9xB,GAAI+tB,EAAU7f,OACd/F,KAAA,SACAke,YAAA,wEAEA9gB,eAAA,eAKS,SAAC8E,sBACN,IAAImf,EAAKvkB,KACP0G,EAAArD,OAAY,EACb,OAAAqD,wBAII,IAAOqM,EAAA4R,EAAA,EAAAje,EAAA,GAAAsL,QAAAiB,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CACV,IAAAe,EAAAhB,EAAUxT,MAIXqtB,EAAAC,SAAApI,EAAA,KAAA1Q,EAAA,CAAAzH,OAAAmY,EAAA,EAAA1Q,EAAAzH,OAAAqE,oHAGC,IAAMvM,EAAK,EAAGA,EAAIoC,EAAIrD,OAAAiB,IAAA,KACtB,IAAMmH,EAAA/E,EAAWpC,GACjB0oB,EAAiBvhB,EAAGpI,OACZ4J,EAAG,EAAGA,EAAMxB,EAAMuG,OAAI3O,OAAA4J,IAAA,CAC5B,IAAIxR,EAAIgQ,EAAGuG,OAAU/E,GACjBggB,EAAOH,EAAAtgB,OAAA/Q,EAAAyH,MACT+pB,IAODA,EAAAH,EAAAC,SAAApI,EAAA,KAAAlpB,EAAA,CAAA+Q,OAAA,KAAAwgB,GAAAxgB,YAIC,IAAKvI,EAAI,EAAGA,EAACwH,EAAOpI,OAAQY,IAC7BgpB,EAAAjpB,IAAAvI,EAAA+Q,OAAArN,IAAA8E,IAGJ6oB,EAAAI,WAED,OAAAJ,qDDHI,IAAAvI,EAAAvkB,EAAAspB,EAAAvW,EAAAoa,EAAOla,EAEXpB,EAAMzM,EAAKyM,MAAYub,EAAShoB,EAAUgoB,aAC5Cvb,IAAUub,KAAA/pB,OAAA,EACX,YAGCwO,EAAAwb,MAAA,kBAEK,IAAOC,EAAA3I,EAAA,EAAAyI,GAAAG,EAAAD,EAAApa,QAAAqa,EAAApa,KAAAoa,EAAAD,EAAApa,OAAA,CACV,IAAIvP,EAAC4pB,EAAY9tB,MACfoS,EAAOwb,MAAMlb,eAAGxO,IACjB6pB,EAAA1f,KAAAnK,wGAGD6pB,EAAOnqB,OAAA,EAGR,OAAAshB,EAAA,KAAA9S,EAAAwb,OAKH,IAAAI,EAAAC,EAAArM,KAAA+L,MAGSvb,EAAMrF,OACPnJ,OAAQ,iCACT,IAAMsqB,EAAOhJ,EAAA,EAAA8I,GAAAG,EAAAD,EAAAza,QAAA0a,EAAAza,KAAAya,EAAAD,EAAAza,OAAA,CAEjBma,GADCrL,EAAc4L,EAAMnuB,OACrB1E,IAAA,OAAAinB,EAAA6L,iBAAA7L,EAAA6L,iBAAA,uGAEF,OAAAhc,EAAAwb,QAGD,IAAMS,EAAcjc,EAAAc,OAAamb,cAC3BlQ,EAAakQ,IAAkBC,EAAa,cAACC,OAEnDnQ,EAAAiQ,IAAAC,EAAuD,cAAAE,UAEtC,IAAfR,EAAMpqB,QAAgBoqB,EAAE,GAAOS,OAAO,CACtC,IAAAC,EAAcV,EAAA,GAAAS,OAAArc,EAAA+L,EACTC,GAIN,OADChM,EAAAwb,MAAO1I,EAAO,KAAA9S,EAAAwb,MAAAc,GACfA,iBAmIatc,EAAA+L,EAAAC,OACZwP,EAAM,CACNe,IAAK,EACLjoB,KAAK0W,OAAOC,UACZjW,IAAAgW,OAAQC,UACRC,OAAMF,OAAIC,UACVuR,KAAM,KACNC,KAAK,KACLpR,MAAA,KACAqR,YAAY,KACZC,aAAQ,KACRvQ,MAAA,EACAwQ,aAAW,EACXlR,WAAW,EACXC,WAAW,EACXH,MAAM,KACND,KAAK,KACLD,MAAM,EAENuR,KAAA7R,OAAAC,UAEckB,iBAAA,GAGhBtX,EAAWmL,EAAGrF,OAEd6gB,EAAKpP,MAASvX,EAAGrD,WACf,IAAIiB,EAAA,EAAAA,EAAYoC,EAAGrD,OAAUiB,IAAE,CAE/B,IAAIoZ,EAAShX,EAAAvH,IAAAmF,MACL,IAANA,IACD+oB,EAAAnQ,MAAAQ,GAID2P,EAAIiB,KAAA5Q,EACe,OAAjBA,EAAiB,IACfE,EACD,SAECC,IACDH,EAAA,MAIDA,QAA4C,CAC5C,IAAIiR,EAAS,OAAAtB,EAAAmB,gBACXG,IACDtB,EAAAmB,aAAA9Q,GAGCkR,IAAalR,GAAa,IAC1B2P,EAAMe,KAAA1Q,EACN2P,EAAM9P,WAAY,EAElB8P,EAAKoB,gBACHE,EAAU,CACV,IAAID,EAAMhR,EAAa2P,EAAAkB,YACrBlB,EAAMqB,KAAOA,IACdrB,EAAAqB,QAGCrB,EAAAkB,YAAgB7Q,GAEhB2P,EAAKrP,iBAAmB,EACtB1Z,IAAAoC,EAAArD,OAAgB,IAEjBgqB,EAAAlQ,OAAAO,KAGC2P,EAAMrP,gBACPqP,EAAAlQ,OAAAuR,EAEArB,EAAAlQ,OAAAO,EAEF2P,EAAArP,iBAAA,GAIDN,EAAY2P,EAAAlnB,MACbknB,EAAAlnB,IAAAuX,GAGCA,EAAY2P,EAAAxmB,MACbwmB,EAAAxmB,IAAA6W,GAGCA,EAAe2P,EAAAtQ,QAAaW,EAAA,IAC7B2P,EAAAtQ,OAAAW,GAIc,IAAfA,IACD2P,EAAA7P,WAAA,GAGF6P,EAAAkB,YAAA7Q,GAID2P,EAAMlnB,OAAM0W,OAAKC,YAClBuQ,EAAAlnB,IAAA,MAGCknB,EAAMxmB,MAAMgW,OAAKC,YAClBuQ,EAAAxmB,IAAA,MAGCwmB,EAAMqB,OAAO7R,OAAKC,YACnBuQ,EAAAqB,KAAA,MAGCrB,EAAMoB,aAAa,IACpBpB,EAAAgB,KAAAhB,EAAAe,IAAAf,EAAAoB,cAGCpB,EAAM9P,YACP8P,EAAA7P,WAAA,GAGe,OAAd6P,EAAMlnB,KAA8B,OAAhBknB,EAAMxmB,MAC3BwmB,EAAAhQ,MAAAgQ,EAAAlnB,IAAAknB,EAAAxmB,KAGC+nB,IAAmBvB,EAAAmB,eAAoBI,IAAavB,EAAAkB,eACrDlB,EAAAjQ,KAAAiQ,EAAAkB,YAAAlB,EAAAmB,cAGF,OAAAnB,kBA9PM,IAAMwB,EAAOlK,EAAA,EAAA8I,GAAAqB,EAAAD,EAAA3b,QAAA4b,EAAA3b,KAAA2b,EAAAD,EAAA3b,OAAA,CAChB,IAAI8O,EAAQ8M,EAAArvB,OACV+M,EAAM2F,eAAG6P,EAAAjnB,KAAAinB,EACJkM,SAGN1hB,EAAAmY,EAAA,KAAAnY,EAAAwV,EAAAkM,OAAArc,EAAA+L,EAAAC,uGASJ,OADChM,EAAAwb,MAAc1I,EAAA,KAAA9S,EAAAwb,MAAA7gB,GACfA,YAhHCogB,GACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,YACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,YACAA,EAAA,cAEAA,EAAA,YACAA,EAAA,4BAEAA,EAAA,0BACAA,EAAA,0BAEAA,EAAA,8BACAA,EAAA,sBArBUA,EAAA,UAAS,aA2CrBA,MAAA,SA+EEc,EAAA,IAAArN,EAAA,qBAEEtlB,GAAI6xB,EAAE2B,YACNrrB,KAAA,kBACAke,YAAU,sBACV2N,UAAU,EACVpN,SAAQ,YACTuM,OAAAc,IAGCj0B,GAAI6xB,EAAQ0B,KACZprB,KAAA,OACAke,YAAU,aACV2N,UAAQ,EACTb,OAAAe,GAED,CAAAl0B,GAAA6xB,EAAA1P,MAAAha,KAAA,QAAAke,YAAA,cAAA2N,UAAA,EAAAb,OAAAgB,IAEEn0B,GAAI6xB,EAAE4B,aACNtrB,KAAA,mBACAke,YAAU,uBACV2N,UAAQ,EACTb,OAAAiB,GAED,CAAEp0B,GAAI6xB,EAAU/lB,IAAK3D,KAAM,MAAOke,YAAa,gBAAiB2N,UAAU,GAC1E,CAAEh0B,GAAI6xB,EAAUzmB,IAAIjD,KAAM,MAAQke,YAAa,gBAAiB2N,UAAU,GAC1E,CAAAh0B,GAAA6xB,EAAAyB,KAAAnrB,KAAA,OAAAke,YAAA,gBAAA2N,UAAA,EAAApN,SAAA,UAEE5mB,GAAI6xB,EAASwB,IACblrB,KAAA,QACAke,YAAA,wBACAyM,iBAAc,EACdkB,UAAU,EACXpN,SAAA,YAGC5mB,GAAI6xB,EAAS3O,MACb/a,KAAA,QACAke,YAAA,+BACAyM,iBAAc,EACfkB,UAAA,IAGCh0B,GAAI6xB,EAASvP,MACbna,KAAA,QACAke,YAAU,gDACX2N,UAAA,IAGCh0B,GAAI6xB,EAASzP,MACbja,KAAA,QACAke,YAAU,6BACX2N,UAAA,IAGCh0B,GAAI6xB,EAAQ8B,KACZxrB,KAAA,OACAke,YAAU,kCACX2N,UAAA,IAGCh0B,GAAI6xB,EAAExP,KACNla,KAAA,aACAke,YAAU,2CACX2N,UAAA,IAGCh0B,GAAI6xB,EAAE7P,OACN7Z,KAAA,mBACAke,YAAU,yBACX2N,UAAA,IAGCh0B,GAAI6xB,EAAEpP,UACNta,KAAA,YACAke,YAAA,sBACAyM,kBAAc,EACfkB,UAAA,IAGCh0B,GAAI6xB,EAAErP,UACNra,KAAA,YACAke,YAAA,sBACAyM,kBAAc,EACfkB,UAAA,IAGCh0B,GAAI6xB,EAAEwC,YACNlsB,KAAA,eACAke,YAAU,oCACV2N,UAAQ,EACTb,OAAAmB,IAGCt0B,GAAI6xB,EAAE0C,cACNpsB,KAAA,iBACAke,YAAU,4BACV2N,UAAQ,EACTb,OAAAqB,eAuIDL,EAAgBrd,EAAM+L,EAAgBC,GACvC,OAAAX,MAAArL,EAAArF,OAAArN,IAAA,aAGOgwB,EAAoBtd,EAAA+L,EAAAC,OAC1B,IAAAnX,EAASmL,EAAOrF,OACPgjB,EAAG,EAAKA,EAAO9oB,EAAErD,OAAAmsB,IAAA,CACxB,IAAItrB,EAACwC,EAAQvH,IAAIqwB,MACf,MAAAtrB,QAASC,IAAAD,EACV,OAAAsqB,aAAAtqB,GAGJ,OAAAsqB,aAAA,eAGOS,EAAapd,EAAO+L,EAAAC,GAC1B,IAAAnX,EAASmL,EAAMrF,OAChB,OAAA8hB,KAAA5nB,EAAAvH,IAAAuH,EAAArD,OAAA,aAGO2rB,EAAoBnd,EAAA+L,EAAAC,OAC1B,IAAInX,EAAMmL,EAAKrF,OACfgjB,EAAU9oB,EAAKrD,OAAE,EACfmsB,GAAU,GAAK,CACf,IAAItrB,EAACwC,EAAQvH,IAAIqwB,QACf,MAAAtrB,QAASC,IAAAD,EACV,OAAAqqB,YAAArqB,GAGJ,OAAAqqB,YAAA,eAGOc,EAAoBxd,EAAA+L,EAAAC,OAC1B,IAAInX,EAAKmL,EAAKrF,OACVyR,EAAQ,EACRf,GAAY,EAChBoR,EAAU,KACJhqB,EAAA,EAAAA,EAAYoC,EAAGrD,OAAUiB,IAAE,CAC/B,IAAIoZ,EAAYhX,EAAKvH,IAAMmF,MACR,OAAjBoZ,EAAiB,IACfE,EACD,SAECC,IACDH,EAAA,GAGDR,GAAQoR,IAAA5Q,GACTO,IAEDf,GAAO,EACRoR,EAAA5Q,EAGF,OAAA0R,YAAAnR,YAGOsR,EAAoB1d,EAAA+L,EAAAC,OAC1B,IAAMnX,EAAAmL,EAAWrF,OACjBijB,EAAc,IAAGC,IACXprB,EAAA,EAAAA,EAAYoC,EAAGrD,OAAUiB,IAAE,CAC/B,IAAIoZ,EAAYhX,EAAKvH,IAAMmF,MACR,OAAjBoZ,EAAiB,IACfE,EACD,SAECC,IACDH,EAAA,GAGJ+R,EAAAzrB,IAAA0Z,GAEF,OAAA4R,cAAAG,EAAAnpB,kCEjaCqpB,EAAI,CACJ50B,GAAI+tB,EAAWoF,OACfhrB,KAAA,UACAke,YAAA,+DACa,CACZgM,SAAA,CAAAR,EAAA/lB,IAAA+lB,EAAAzmB,IAAAymB,EAAAyB,KAAAzB,EAAA0B,mBAOO,SAAUlpB,GAChB,IAAMskB,EAAAtkB,EAAc4M,OAAQkX,EAAoB9jB,EAAS4M,QAASsZ,EAC5DsE,EAAWxqB,EAAWgoB,UAAKhoB,EAAKgoB,SAAE/pB,OAAIqqB,EAAArM,KAAAjc,EAAAgoB,UAAA,GAE5CA,EAAOwC,EAAkBtwB,IAAA,SAAA2B,GAAA,OAAAA,EAAAlG,wBACvB,IAAMwpB,EAAAvkB,EAASspB,EAAkBvW,EAACoa,EAAAla,EAAAgX,EAAAnW,eAC7B,IAAMiH,EAAM4J,EAAA,EAAAje,GAAAsU,EAAAD,EAAA7H,QAAA8H,EAAA7H,KAAA6H,EAAAD,EAAA7H,OAAA,CACf,IAAM5N,EAAwB0V,EAAGvb,MAC3B+M,EAAkB,GAClBwF,EAAgC,GACtCuO,EAAW,GACX/T,EAAOsB,KAAK,IAAA2C,EAAA,KACV3C,KAAM,CACN5K,KAAM,QACN+O,KAAMqa,EAAW,EAAAhb,OACjB9E,OAAQA,EAAE,GACTmG,OAAA,aACE,IAAMkd,GAAIvG,OAAA,EAAA3E,EAAA,EAAAiL,IAAAE,EAAAD,EAAA3c,QAAA4c,EAAA3c,KAAA2c,EAAAD,EAAA3c,OAAA,CACb,IAAMxE,EAAOohB,EAAIrwB,MACbwtB,EAAM,IAAGxc,EAAQ,EACrB8P,EAAA7R,EAAO3T,IAASkyB,EAChBzgB,EAAOsB,KAAKmf,KACVnf,KAAM,CACN5K,KAAMwL,EAAA3T,GACNkX,KAAMqa,EAA2B,EAAA3a,MACjCnF,OAAQA,IAAAnJ,OAAA,UACN,CAEDvJ,MAAA4U,EAAAxL,8GAIH,IAAMoB,EAAK,EAAGA,EAAAgB,EAAO0M,OAAU3O,OAAAiB,IAAA,CAC/B,IAAIuN,EAAQvM,EAAM0M,OAAE1N,MAClBolB,EAAM7X,GAAU,KACdke,EAAKC,EAAA,CACLne,QACCub,8CAGE,IAAM6C,GAAI9C,OAAA,EAAAxI,EAAA,EAAAiL,IAAAM,EAAAD,EAAA/c,QAAAgd,EAAA/c,KAAA+c,EAAAD,EAAA/c,OAAA,CACb,IACIhP,EAAC6rB,GADCrhB,EAAIwhB,EAAiBzwB,OACN1E,IACtBwlB,EAAA7R,EAAA3T,IAAA2V,OAAA5C,KAAA5J,+GAGA,IAAO6P,GAAAkW,OAAA,EAAAtF,EAAA,EAAA3S,IAAAgC,EAAAD,EAAAb,QAAAc,EAAAb,KAAAa,EAAAD,EAAAb,OAAA,CACV,IAAMe,EAAID,EAAAvU,MACNyU,EAAG9X,OAAA+zB,EAAA,EAAA/zB,CAAA6X,GACLC,IACDD,EAAAhC,KAAAiC,uGAIKpG,KAAA6W,EACY,EAAM,GACvBrf,EAAA,CACJ0M,SAAA3O,OAAAmJ,EAAA,GAAAnJ,4GAED,OAAAypB,KC7EJsD,EAAI,CACJr1B,GAAI+tB,EAAQuH,KACZntB,KAAA,OACAke,YAAA,2BAEA9gB,eAAA,eAKS,SAAC8E,GACT,gBAAAsB,GAAA,OAAAA,KCRD4pB,EAAsB,CACtBv1B,GAAI+tB,EAAiByH,aACrBrtB,KAAA,gBACAke,YAAA,2CACa,CACZoP,QAAA,CAAAz1B,GAAA6tB,EAAA4D,sBAOM,SAAQpnB,OACXA,EAAOorB,UAAAprB,EAAgBqrB,QACxB,OAAAL,EAAAM,YAAA,IAGD,IAAMF,EAAUprB,EAAQorB,QAAUtH,EAAgB9jB,EAAQorB,SAAW,KAErEC,EAAOrrB,EAAkBqrB,QAAAvH,EAAA9jB,EAAAqrB,SAAA,wBACvB,IAAMlM,EAAAvkB,eACD,IAAM+a,EAAM4J,EAAA,EAAAje,GAAAsU,EAAAD,EAAA7H,QAAA8H,EAAA7H,KAAA6H,EAAAD,EAAA7H,OAAA,KACf,IAAA5N,EAAA0V,EAAAvb,MAEAuS,EAAa,GACL1N,EAAK,EAAGA,EAAAgB,EAAO0M,OAAU3O,OAAAiB,IAAA,CAC/B,IAAIuN,EAAOvM,EAAE0M,OAAA1N,MACXmsB,EAAI,IACFA,EAAA5e,GACD,SAEC2e,GACDxe,EAAAlE,KAAA+D,GAGD2e,GAAWA,EAAQ3e,IACpBG,EAAAlE,KAAA+D,MAIDG,EAAA3O,YAIA8R,EAAMwP,EACN,KAAArf,EAAA,CACF0M,OAAUA,IACX8a,EAAAhf,KAAAqH,sGAED,OAAA2X,KAKJ6D,GAAsB,CACtB51B,GAAI+tB,EAAiB8H,aACrB1tB,KAAA,gBACAke,YAAA,4BAEA9gB,eAAA,eAKO,SAAQ8E,OACXA,EAAOorB,UAAAprB,EAAgBqrB,QACxB,OAAAL,EAAAM,YAAA,IAGD,IAAMF,EAAUprB,EAAQorB,QAAU1G,EAAiB1kB,EAAQorB,SAAW,KAEtEC,EAAOrrB,EAAkBqrB,QAAA3G,EAAA1kB,EAAAqrB,SAAA,wBACvB,IAAMnH,EAAAtpB,eACD,IAAM6wB,EAAMlM,EAAA,EAAAje,GAAAoqB,EAAAD,EAAA3d,QAAA4d,EAAA3d,KAAA2d,EAAAD,EAAA3d,OAAA,CACf,IAAI5N,EAASwrB,EAAArxB,SACXgxB,EAAI,IACFA,EAAAnrB,GACD,SAECkrB,GACD1D,EAAAhf,KAAAxI,GAGDkrB,GAAUA,EAAKlrB,IAChBwnB,EAAAhf,KAAAxI,qGAGH,OAAAwnB,KCzFJiE,GAAsB,CACtBh2B,GAAI+tB,EAAEkI,mBACN9tB,KAAA,wBACAke,YAAA,4BAEA9gB,eAAA,eAKQ,SAAa8E,GACnB,IAAI6rB,EAAe,GAcpB,OAbG7rB,EAAAorB,YACMA,QAAe,CACnBz1B,GAAA6tB,EAAiBqD,OACjB7mB,UAAAorB,UAGFprB,EAAAqrB,YACMA,QAAe,CACnB11B,GAAA6tB,EAAiBqD,OACjB7mB,UAAAqrB,UAILH,EAAAI,YAAAO,sBCrBD,IAAI1M,EAAAvkB,EAASspB,EAAGvW,cACX,IAAMwW,EAAM5E,EAAA,EAAAvf,GAAAokB,EAAAD,EAAArW,QAAAsW,EAAArW,KAAAqW,EAAAD,EAAArW,OAAA,CACf,IAAMP,EAAO6W,EAAA/pB,MACPiP,EAAAwiB,GAAmB/xB,IAAYwT,EAAO5X,IAG5Co2B,EAFcziB,EAAWgiB,YAAY/d,EAAAvN,QAErCsrB,CAAA5D,wBAEO,IAAMsE,GAAM9H,OAAA,EAAA3E,EAAA,EAAAwM,IAAAE,EAAAD,EAAAle,QAAAme,EAAAle,KAAAke,EAAAD,EAAAle,OAAA,CACf,IAAI5N,EAAQ+rB,EAAM5xB,MAChB6F,EAAOhK,OACRgK,EAAAhK,KAAA,IAECgK,EAAOhK,KAAK6mB,gBAGb7c,EAAAhK,KAAA6mB,gBAAAwC,EAAA,EAAArf,EAAAhK,KAAA6mB,gBAAA,CAAAzT,EAAA3T,KAFAuK,EAAAhK,KAAA6mB,gBAAA,CAAAzT,EAAA3T,sGAKJ+xB,EAAAqE,qGAGJ,OAAArE,MAyBCoE,GAAe,IAnBiB,SAA6BpzB,gBAgB9D,cAAAA,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KAhBiC,OAAlCymB,EAAA,EAAA2M,EAAAxzB,KAUWa,UAAkBsK,OAAA,SAAmBvC,EAAItB,GACjD,OAAAynB,EAAA6D,YAAAtrB,GAAAynB,EAAAvsB,eAAAusB,CAAAnmB,GAAA,MAGQ/H,UAAkBuvB,OAAA,SAAoBxnB,EAAMtB,GACpD,OAAAuqB,EAAAe,YAAAtrB,EAAAuqB,CAAAjpB,IAf+B4qB,EAAA,CAkB3BjR,EAA6B,GACnB,mBACf+P,EACAE,EACAS,GACAJ,GACA9D,EACD8C,KCpEDv3B,EAAAC,EAAAC,EAAA,sBAAAqwB,IAAAvwB,EAAAC,EAAAC,EAAA,sBAAAswB,IAAAxwB,EAAAC,EAAAC,EAAA,sBAAAuwB,IAAAzwB,EAAAC,EAAAC,EAAA,sBAAAwwB,IAAA1wB,EAAAC,EAAAC,EAAA,sBAAAqxB,IAAAvxB,EAAAC,EAAAC,EAAA,sBAAA8xB,IAAAhyB,EAAAC,EAAAC,EAAA,sBAAA4wB,IAAA9wB,EAAAC,EAAAC,EAAA,sBAAAwxB,IAAA1xB,EAAAC,EAAAC,EAAA,sBAAAi5B,KAAAn5B,EAAAC,EAAAC,EAAA,sBAAA44B,KAAA94B,EAAAC,EAAAC,EAAA,sBAAAs0B,IAAAx0B,EAAAC,EAAAC,EAAA,sBAAA03B,IAAA53B,EAAAC,EAAAC,EAAA,sBAAAo1B,IAAAt1B,EAAAC,EAAAC,EAAA,kBAA+BF,EAAAC,EAAAC,EAAA,wCCC/B,IAAAsI,EAAA,sEAEAC,OAAAC,QAAAC,uDADA,gKCFA,iBAAAywB,EAAAp5B,EAAA,QAAAA,EAAAC,EAAAC,EAAA,sBAAAk5B,EAAA,QAAAC,EAAAr5B,EAAA,QAAAA,EAAAC,EAAAC,EAAA,sBAAAm5B,EAAA,QAAAC,EAAAt5B,EAAA,QAAAA,EAAAC,EAAAC,EAAA,sBAAAo5B,EAAA,IAAAt5B,EAAAC,EAAAC,EAAA,sBAAAo5B,EAAA,0BCCA,IAAA9wB,EAAA,8DAEAC,OAAAC,QAAAC,uDADA,u4BCYE4wB,EAAa,SAAAt1B,EAAqBu1B,GAIlC,OAAAt1B,KAHWu1B,EAAqBx1B,EAAMC,MAAM,EAAEs1B,GAG9Cl1B,GADSm1B,EAAUx1B,EAAGK,IAAA,EAAGk1B,GACzBv1B,QAGAw1B,EAAI,SAAWpyB,EAAQqyB,EAAAF,UACrBx1B,OAAOX,EAAM,WAAbW,CAAaqD,GACdA,GAGe,IAAdA,EAAKuF,QAAA,OACHvJ,EAAO,SAAAs2B,QAAAtyB,IAIIhE,EAAI,SAAAe,MAAAiD,EAAUqyB,EAACF,IAH3Bx1B,OAAAX,EAAA,SAAAW,GAOHA,OAAAX,EAAA,oBAAAW,CAAAw1B,EAAAnyB,EAAAhE,EAAA,0DCtBsCu2B,EAAA,SAAoBl0B,YAA5Dm0B,IACE,IAAAj0B,EAAgB,OAAhBF,GAAmBA,EAAC4pB,MAAmBxpB,KAAAypB,YAAAzpB,KA8CxC,SA7CSg0B,iBAAmC,SAAjCC,GAER,IAAInyB,EAAKhC,EAACD,MAAYyC,EAAGR,EAAAQ,SAAAoxB,EAAA5xB,EAAA4xB,aACvBQ,MAAAvuB,QAAOsuB,IAKT,IAAIE,EAAQj2B,OAAKX,EAAO,SAAZW,CAAY+1B,GACZ,QAAVP,IACDS,EAAAj2B,OAAAX,EAAA,MAAAW,CAAAi2B,EAAApb,OAAAxb,EAAA,eAGD+E,EAAA6xB,OAGAC,YAAA,SAAAv0B,GAEE8C,OAAA2e,OAED3e,OAAA2e,MAAA+S,mBAyBJv0B,EA/CuC,OAAxC2mB,EAAA,EAAAsN,EAAAn0B,KA0BUa,UAAEoB,OAAA,WACR,IAAIC,EAAI9B,KAAGH,MAAA0B,EAAAO,EAAqBP,MAAO+yB,EAASxyB,EAAAwyB,QAAUZ,EAAA5xB,EAAA4xB,SAEtDO,EAAMN,EAAWpyB,EAAA+yB,EAAAZ,GAiBtB,OAhBGO,EAAIJ,YACLI,EAAA/1B,OAAAX,EAAA,SAAAW,IAeFwS,EAAA3P,EAAAmB,cAAAqyB,EAAAxzB,EAAA,CAAAQ,MAAA0yB,EAAAO,SAAAC,WAAA,KAAAC,WAAA,KAAA3yB,UAAA,uBAAA4yB,cAAA,4BAAAryB,SAAAtC,KAAAg0B,iBAAAY,YAAA50B,KAAAo0B,YAAAS,UAAAnkB,EAAA3P,EAAAmB,cAAA,QAAAH,UAAA,sBAAA+yB,UAAApkB,EAAA3P,EAAAmB,cAAA,QAAAH,UAAA,wBA9CqCgyB,EAAA,8BCAHgB,EAAA,SAAoBn1B,YAAzDo1B,IACE,IAAAl1B,EAAU,OAAVF,GAAwBA,EAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KA6CzB,SA5CS6zB,QAAA,SAAEtyB,GAER,IAAIO,EAAKhC,EAACD,MAAQ6zB,EAAe5xB,EAAA4xB,SAAAY,EAAAxyB,EAAAwyB,eACf,IAAhB/yB,EAAMuF,QAAO,OACCmuB,EAAC1zB,GAIJoyB,EAAoBpyB,EAAA+yB,EAAAZ,GAClBG,aAIPvxB,SAAA,SAAAgf,GACR,IAAMhf,EAAQxC,EAAMD,MAAOyC,SAE3Bf,EAAS+f,EAAO9M,OAAKjT,MACrBe,EAAAf,EAAAzB,EAAA+zB,QAAAtyB,OAGA2zB,cAAI,SAAA3zB,UACFrD,OAAOX,EAAa,WAApBW,CAAoBqD,GACrBA,EAAAwX,OAAAxb,EAAA,aAEAgE,GAoBJzB,EA9CoC,OAArC2mB,EAAA,EAAAuO,EAAAp1B,KA8BUa,UAAEoB,OAAA,WACR,IAAMC,EAAA9B,KAAAH,MAAc0B,EAAKO,EAAAP,MAAc4zB,EAAOrzB,EAAAqzB,SACxCC,EAAcp1B,KAAAk1B,cAAmB3zB,GAEvC8zB,GACEr1B,KAAA6zB,QAAAuB,GAUH,OAAA1kB,EAAA3P,EAAAmB,cAAAozB,EAAA,GAAAvhB,KAAA,OAAAzR,SAAAtC,KAAAsC,SAAAizB,OAAAv1B,KAAAsC,SAAAkzB,kBAAA,EAAAj0B,MAAA6zB,EAAArzB,UAAA,qBAAAszB,EAAA,aAAAF,cA7CkCH,EAAA,kBCWES,EAAA,SAAuB71B,YAG5D81B,EACE71B,GAUF,IAAAC,EAAAF,EAAAG,KAAkBC,KAAGH,IAACG,KAFrB,SAGC21B,mBAAsB,SAAOp0B,EAAAq0B,GAC7B91B,EAAAe,SAAA,CAAAzC,KAAAmD,EAAAs0B,iBAAAD,OAGAE,iBAAoB,SAAOv0B,EAAAq0B,GAC3B91B,EAAAe,SAAA,CAAArC,GAAA+C,EAAAw0B,eAAAH,OAGAI,sBAAsB,SAASz0B,GAC/BzB,EAAAe,SAAA,CAAAzC,KAAAmD,OAGA00B,oBAAmB,SAAA10B,GACnBA,EAAMtF,IAAI,IAAK,IACfsF,EAAMtF,IAAI,IAAK,IACfsF,EAAKtF,IAAA,IAAS,IACd6D,EAAAe,SAAA,CAAArC,GAAA+C,OAGM20B,aAAA,WACA,IAAAp0B,EAAAhC,EAAAD,MAAEyC,EAAAR,EAAIQ,SAAEoxB,EAAkB5xB,EAAA4xB,SAEhC7e,EAAS/U,EAAAG,MAAA7B,EAAiByW,EAAIzW,KAAEI,EAAEqW,EAAErW,GACpC8D,EAAAmxB,EAAA,CAAAr1B,OAAAI,MAAAk1B,OA/BEzzB,MAAM,CACN7B,KAAIyB,EAAM0B,MAAMpD,IAAMC,KACtBI,GAAAqB,EAAA0B,MAAgBpD,IAAEK,GAClBq3B,kBAAgB,EAChBE,gBAAA,GACHj2B,EAZoC,OAGrC2mB,EAAY,EAAAiP,EAAY91B,KAsCda,UAAAoB,OAAA,WACF,IAAA6xB,EAAA1zB,KAA2DH,MAAzD6zB,SAEF5xB,EAAA9B,KAAUC,MAAA41B,EAAoB/zB,EAAA+zB,iBAAeE,EAAAj0B,EAAAi0B,eAAA33B,EAAA0D,EAAA1D,KAAAI,EAAAsD,EAAAtD,GAEnDq1B,EACEgC,GAAAE,SACErlB,EAAA3P,EAAAmB,cAAA,MAAK,CAAAH,UAAU2zB,EAAAS,oBACbp1B,EAAAmB,cAAA,OAAAH,UAAK,8BACHhB,EAAAmB,cAAA,OAAAH,UAAK,4CACHhB,EAAAmB,cAAA,OAAAH,UAAK,kDACHhB,EAAAmB,cAAA,OAAAH,UAAO,WACP2O,EAAA3P,EAAAmB,cAAC,SAAAH,UAAA,iBACC,QAQN2O,EAAA3P,EAAAmB,cAAA6yB,EAAe,CAAAT,SAAA,EAAAZ,SAAiDA,EAAAnyB,MAAAnD,EAAAkE,SAAAtC,KAAA21B,mBAAAR,SAAA,QAC9Dp0B,EAAAmB,cAAA,MAAC,CAAAH,UAAA,mDAQL2O,EAAA3P,EAAAmB,cAAA4xB,EAAe,CAAAJ,WAAwCY,SAAA,EAAA/yB,MAAAnD,EAAAkE,SAAAtC,KAAAg2B,4BACrDj1B,EAAAmB,cAAA,OAAAH,UAAK,4CACHhB,EAAAmB,cAAA,OAAAH,UAAK,kDACHhB,EAAAmB,cAAA,OAAAH,UAAO,WACP2O,EAAA3P,EAAAmB,cAAC,SAAAH,UAAA,iBACC,MAQN2O,EAAA3P,EAAAmB,cAAA6yB,EAAe,CAAAT,SAAA,EAAAZ,WAAiDnyB,MAAA/C,EAAA8D,SAAAtC,KAAA81B,iBAAAX,SAAA,QAC9Dp0B,EAAAmB,cAAA,MAAC,CAAAH,UAAA,mDAIP2O,EAAA3P,EAAAmB,cAAK4xB,EAAsC,CAAAQ,SAAA,EAAAZ,WAAAnyB,MAAA/C,EAAA8D,SAAAtC,KAAAi2B,2BACzCl1B,EAAAmB,cAAA,OAAAH,UAAY,8BAMnB2O,EAAA3P,EAAAmB,cAAA,UAAA6R,KAAA,SAAAhS,UAAA,kBAAAq0B,UAAAvC,EAAAwC,QAAAr2B,KAAAk2B,cAAA,YACHR,EAAAS,iBAAC,sBAjGsCT,EAAA,CAATY,EAAA,2FCK5BC,EAAsB,CACtB,CAAEn4B,KAAM,SAASI,GAAI,MAAOD,QAAS,iBAAmBqc,QAAS,GACjE,CAAExc,KAAM,UAAWI,GAAI,MAAOD,QAAS,kBAAmBqc,QAAS,GACnE,CAAExc,KAAM,UAAUI,GAAI,MAAOD,QAAS,kBAAeqc,QAAY,GACjE,CAAExc,KAAM,SAAUI,GAAI,MAAOD,QAAS,cAAcqc,QAAS,GAC7D,CAAExc,KAAM,SAAUI,GAAI,MAAOD,QAAS,eAAgBqc,QAAS,GAC/D,CAAExc,KAAM,SAASI,GAAI,MAAOD,QAAS,eAAiBqc,QAAS,GAC/D,CAAExc,KAAM,UAAWI,GAAI,MAAOD,QAAS,gBAAiBqc,QAAS,GACjE,CAAExc,KAAM,UAAUI,GAAI,MAAOD,QAAS,gBAAeqc,QAAY,GACjE,CAAExc,KAAM,SAAUI,GAAI,MAAOD,QAAS,cAAeqc,QAAS,GAC9D,CAAExc,KAAM,SAASI,GAAI,MAAOD,QAAS,cAAgBqc,QAAS,GAC9D,CAAExc,KAAM,UAAWI,GAAI,MAAOD,QAAS,eAAgBqc,QAAS,GAChE,CAAExc,KAAM,UAAUI,GAAI,MAAOD,QAAS,eAAiBqc,QAAS,GAChE,CAAExc,KAAM,SAAUI,GAAI,MAAOD,QAAS,gBAAeqc,QAAU,GAC/D,CAAExc,KAAM,SAAUI,GAAI,MAAOD,QAAS,cAAcqc,QAAS,GAC7D,CAAExc,KAAM,SAAUI,GAAI,MAAOD,QAAS,eAAgBqc,QAAS,GAC/D,CAAExc,KAAM,SAAUI,GAAI,MAAED,QAAY,eAASqc,QAAa,GAC1D,CAAExc,KAAM,WAAYI,GAAI,WAAYD,QAAS,YAAAqc,QAAsB,GACnE,CAAExc,KAAM,WAAYI,GAAI,WAAYD,QAAS,uBAAsBqc,QAAU,GAC7E,CAAExc,KAAM,WAAYI,GAAI,WAAYD,QAAS,qBAAiBqc,QAAY,GAC1E,CAAExc,KAAM,WAAYI,GAAI,WAAYD,QAAS,gBAAgBqc,QAAS,GACtE,CAAExc,KAAM,WAAYI,GAAI,WAAYD,QAAS,iBAAiBqc,QAAU,GACxE,CAAExc,KAAM,WAAWI,GAAE,WAASD,QAAS,gBAAqBqc,QAAA,GAC5D,CAAExc,KAAM,QAASI,GAAI,QAAOD,QAAS,QAAAqc,QAAgB,GACrD,CAAExc,KAAM,QAASI,GAAI,MAAOD,QAAS,eAAeqc,QAAU,GAC9D,CAAExc,KAAM,QAASI,GAAI,QAAOD,QAAS,YAAAqc,QAAoB,GACzD,CAAExc,KAAM,QAASI,GAAI,MAAOD,QAAS,mBAAgBqc,QAAY,GACjE,CAAExc,KAAM,QAASI,GAAI,QAAOD,QAAS,aAAAqc,QAAqB,GAC1D,CAAExc,KAAM,QAASI,GAAI,MAAOD,QAAS,oBAAeqc,QAAY,GAChE,CAAExc,KAAM,QAASI,GAAI,QAAOD,QAAS,YAAAqc,QAAoB,GACzD,CAAAxc,KAAA,QAAAI,GAAA,MAAAD,QAAA,mBAAAqc,QAAA,IAGA4b,EACE,sDACsB,yBAEtBz1B,EAAAmB,cAAA,WACF,YAK8Bu0B,EAAA,SAAA72B,YAAhC82B,IACE,IAAA52B,EAAgB,OAAhBF,GAAmBA,EAAA4pB,MAAAxpB,KAAAypB,YAA4BzpB,KA+GhD,OA7GCF,EAAA62B,iBAAez4B,OAAAo4B,EAAA,UAAAp4B,KACb+B,MAAA,CACA22B,cAAA,KAGAC,iCAAkC,SAAAlU,OAChCzb,EAAOyb,EAAAvhB,IAAA,SAAA01B,SACL,CACAt1B,MAAOs1B,EAAUv4B,QACjBgD,MAAAu1B,KASJ,SALE1P,QAAO,CACP5lB,MAAO,oBACND,MAAA,CAAAnD,KAAA,SAAAI,GAAA,SAAAD,QAAA,SAAAqc,QAAA,KAGH1T,KAGM6vB,gBAAmC,SAAjCnoB,GAER,IAAI9M,EAAKhC,EAAKD,MAAQyC,EAAWR,EAAAQ,SAAaoxB,EAAE5xB,EAAA4xB,SAC9C9kB,EAAArN,OAAA,WAAAqN,EAAArN,MAAAnD,gBAEO,WACH0B,EAAEe,SAAA,CAAA+1B,cAAA,KACN,GAIAhoB,EAAArN,OACDe,EAAAmxB,EAAA,CAAAr1B,KAAAwQ,EAAArN,MAAAnD,KAAAI,GAAAoQ,EAAArN,MAAA/C,IAAAk1B,OAIOsD,eAAA,SAAAx5B,IAER8E,EADSxC,EAAWD,MAAAyC,UACf9E,GACLsC,EAAAe,SAAA,CAAA+1B,cAAA,OAGAK,cAAgB,WAChBn3B,EAAAe,SAAA,CAAA+1B,cAAA,KAiEH92B,EAhH+B,OAAhC2mB,EAAA,EAAAiQ,EAAA92B,KAkDUa,UAAAoB,OAAE,WACA,IAAAC,EAAA9B,KAAAH,MAAAq3B,EAAAp1B,EAA4B6gB,cAAAphB,EAAAO,EAAAP,MAAA41B,EAAAr1B,EAAAq1B,eAAAC,EAAAt1B,EAAAs1B,cAAAC,EAAAv1B,EAAAu1B,OAAA3D,EAAA5xB,EAAA4xB,SAC9BkD,EAAe52B,KAAAC,MAAA22B,aACf1vB,EAAAlH,KAAa62B,iCAAwBK,GAErCI,EAAgBpwB,EAAK0D,KAAM,SAAAgE,GAAA,OAoEFqU,EApEErU,EAAArN,OAoEM4d,EApEN5d,GAqEpCpD,IAAAC,OAAA6kB,EAAA7kB,MAAA+gB,EAAAhhB,IAAAK,KAAAykB,EAAAzkB,OADkCykB,EAAQ9D,IAlEjCoY,EAAe,QAAf7D,EACA8D,EAAA,SAAoBhkB,GAAA,OAAA+jB,EAAA/jB,EAAAikB,MAAAjkB,EAAAkkB,UAAA,MACxBC,EAAa,CACbn5B,GAAIjB,EAAE,SAAAq6B,aAASr2B,EAAapD,IAAMK,IAAQ+C,EAAIpD,IAAMK,GAAIg5B,EAAOj2B,EAAa/C,IAC5EJ,KAAAb,EAAA,SAAAq6B,aAAAr2B,EAAApD,IAAAC,MAAAmD,EAAApD,IAAAC,KAAAo5B,EAAAj2B,EAAAnD,OAGIy5B,EACJt6B,EAAA,UAAAu6B,kBAAAH,GACGn2B,EAAAkP,EAAgB3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KAChBylB,GAAalmB,EAAI3P,EAAAmB,cAAA,kCACjB00B,GAASlmB,EAAA3P,EAAAmB,cAAA,OAAM,KAAU21B,GAGxBN,GAAA7mB,EAAa3P,EAAAmB,cAAW,OAAM,CAAIH,UAAI,2BAE5Cg2B,EACE75B,OAAAX,EAAA,WAAAW,CAAAqD,EAAKpD,IAAAK,WACHkS,EAAA3P,EAAAmB,cAAA,MAAK,CAAAH,UAAU,cAAAooB,IAAqBnqB,KAAA22B,oBACvB51B,EAAAmB,cACT,OAAAH,UAAA,0BACE2O,EAAA3P,EAAAmB,cAAG,SAAU,CAAAH,UAAA,yCAEhBs0B,QAAAc,GACDzmB,EAAA3P,EAAAmB,cAAC,KAAAH,UAAA,wBAUA2O,EAAc3P,EACbmB,cAAA81B,EAAQ,EAAU,CAAAj2B,UAAA,4BAAyCR,MAAO+1B,EAAe91B,QAAA0F,UAAA+wB,cAAA,IAAA31B,SAAAtC,KAAA+2B,gBAAAmB,UAAA,sBAAAC,eAAAznB,EAAA3P,EAAAmB,cAAAk2B,EAAA,CAAA56B,UAAA+D,SAC/EmP,EAAA3P,EAAAmB,cAAG,SAAU,CAAAH,UAAA,yCAEhBs0B,QAAAe,GAED1mB,EAAA3P,EAAAmB,cAAC,KAAAH,UAAA,2BACChB,EAAAmB,cAAAm2B,EAAiB,EAAC,CAAA1mB,QAAA6kB,EAAA9kB,UAAwC,YACxD3Q,EAAAmB,cAAA,UAAGH,UAAU,wCAEPs0B,QAAAgB,GAET3mB,EACC3P,EAAAmB,cAAA,KAAAH,UAAC,4BACC2O,EAAA3P,EAAAmB,cAACo2B,EAAwC,EAAE,CAAAjC,QAAUr2B,KAAQi3B,eAMxEvmB,EAAA3P,EAAAmB,cAAAuzB,EAAA,CAAAl0B,QAAAmyB,WAAApxB,SAAAtC,KAAAg3B,qBA/G6BN,EAAA,oBAkHI,SAAS50B,GAAiC,IAAAtE,EAC5EsE,EAAAtE,iBACGkT,EAAe3P,EAAAmB,cAAOwO,EAAY3P,EAAAoQ,SAAA,KACnC3T,EAAAY,KAAA2a,OAAAxb,EAAK,aACJmT,EAAa3P,EAAAmB,cAAO,OAAYH,UAEpC,qBAACvE,EAAAgB,GAAAua,OAAAxb,EAAA,qCC/LF,IAAAmF,EAAA,0DAEAC,OAAAC,QAAAC,uDADA,u0CCDA,IAAAH,EAAA,mFAEAC,OAAAC,QAAAC,uDADA,2pCC+EA,SAAAkE,GA4RAA,EAAAM,KAAAsI,QAAAC,KAAA,CACAC,KA5RA,SAAAxI,GACA,IAAAka,EAAwB,CACxBvC,MAAA,CAAAxU,GAAA,EAAAC,GAAA,GAAA8tB,OAAA,CAAA/tB,GAAA,EAAAC,GAAA,GACA2B,MAAA,EACAosB,QAAA,eAYA,SAAAC,EAAAC,GACAnX,EAAAiX,cAGAnxB,EAAAE,iBAAAoxB,QAAA,iBAAAC,OAIA,SAAAC,EAAAH,GACA,GAAAA,EAAAI,mCAOA7yB,IAAAnH,SAAAi6B,eAAA,MAAAC,EAAAD,gBACAC,EAAAD,cAAAj6B,SAAsDi6B,cACtDj6B,SAAAi6B,cAAA,2BAEA9yB,IAAAnH,SAAAm6B,QAAA,MAAAD,EAAAC,SACAD,EAAAC,OAAAn6B,SAA+Cm6B,OAC/Cn6B,SAAAm6B,OAAA,8DAcA,SAAAP,eAIAzyB,IAAAnH,SAAAi6B,gBACAj6B,SAAAi6B,cAAAC,EAAAD,oBACA9yB,IAAAnH,SAAAm6B,mCAIA1X,EAAAiX,QAAA,OAGAU,IACAC,EAAAT,IAGArxB,EAAAE,iBAAAoxB,QAAA,qBACAtxB,EAAAE,iBAAAoxB,QAAA,yBAGAS,WAAA,WACa/xB,EAAAgyB,aAAA,YAzBbtyB,EAAAjI,UAAAw6B,IAAA,UAAAC,IA+BA,SAAAX,IACA,IAAAM,uCAKA,IAAAnwB,EAAA,GAAAsF,EAAAkT,EAAAvC,MAAAwa,EAAAjY,EAAAgX,OACAkB,EAAApyB,EAAAqyB,UAeA,OAZA3yB,EAAA4yB,KAAAF,EAAA,SAAAz0B,EAAAiX,GACAA,EAAA2d,OACAC,SAAA,KAIA9yB,EAAA4yB,KAAAF,EAAA,SAAAz0B,EAAAiX,GACAA,EAAA2d,KACA,IAAAE,EAAA7d,EAA+B8d,IAAA1rB,EAAA4N,EAAA+d,YAAAC,EAAAhe,EAAA8d,IAAAP,EAAAvd,EAAA+d,YAC/BjxB,EAAA/D,GAAA,CAAA5G,KAAAc,KAAAyJ,IAAAmxB,EAAAG,GAAAz7B,GAAAU,KAAA+I,IAAA6xB,EAAAG,MAGAlxB,EAGA,SAAAowB,EAAA7X,aAIAvY,EAAAmxB,QAAA5Y,EAAA4Y,2EAMAnxB,EAAAoxB,OAAApxB,EAAAoT,OACA9U,EAAAE,iBAAAoxB,QAAA,aAAAyB,GAAArxB,EAAAoxB,MAAA/7B,KAAAi8B,GAAAtxB,EAAAoT,MAAA/d,KAAAk8B,GAAAvxB,EAAAoxB,MAAA37B,GAAA+7B,GAAAxxB,EAAAoT,MAAA3d,MAGA,SAAAg8B,EAAA7xB,EAAApH,EAAA0G,GACA,OAAA1G,EAAAoH,IAAApH,EAAA0G,IAAA1G,EAGA,SAAAk5B,EAAA5zB,EAAA6xB,GACA,IAAAgC,EAAArzB,EAAAG,aACAoa,EAAAva,EAAAE,iBAAAqa,SACA+Y,EAAAtzB,EAAAuzB,gBACA/zB,EAAA2D,EAAAgwB,EAAA,EAAA9B,EAAAmC,MAAAjZ,EAAAkZ,KAAAH,EAAAG,KAAAzzB,EAAAxI,iDAGA,KAAA67B,EAAAnZ,UAAAwZ,mCAGA,KAAAL,EAAAnZ,UAAAwZ,OACAl0B,EAAA4D,EAAA5D,GAAA0a,EAAAvC,MAAA,EAAA3X,EAAAiE,UAGA,SAAA0vB,EAAAn0B,GACA,MAAAA,EAAAg0B,QAGAJ,EAAAlZ,EAAAgX,OAAA1xB,GACAqyB,KACA7xB,EAAAgyB,aAAA,EACA9X,EAAAnV,MAAA,EACA/E,EAAA4zB,wBAGAC,GAAA,IAGA,SAAAA,EAAAC,GACA5Z,EAAAnV,OACAmV,EAAAnV,MAAA,EACA/E,EAAA4zB,uBACAE,GACA9zB,EAAAE,iBAAAoxB,QAAA,sBAKA,SAAAyC,EAAAC,EAAAC,6BAGA,QAAAv1B,KAAA0zB,EAEA,IADAxd,EAAAwd,EAAA1zB,IACAi0B,WAAAsB,IAEAD,EADA/0B,EAAAg1B,EAAArf,EAAAsf,EAAA,SAC6C,GAA7Ctf,EAA6Csf,IAC7Cj1B,EAAAg1B,EAAA,QACAD,EAAA/0B,IAAA,CACAlI,EAAAi9B,EAAA/0B,GAAAlI,KACAI,EAAA68B,EAAA/0B,GAAA9H,GACA,MAaA,GAPA68B,EAAA/0B,KACA2V,EAAA,KAAAqf,EAAAj0B,EAAAm0B,WAAA,GAAAn0B,EAAAo0B,WAAA,GACAr9B,EAAAi9B,EAAAC,EAAA,KACA98B,EAAA68B,EAAAC,EAAA,MAIA,MAAAl9B,GAAA,MAAAI,GAAAJ,EAAAI,EAAA,CACA,IAAAk9B,EAAAt9B,EACAA,EAAAI,EACAA,EAAAk9B,EAGA,OAAAt9B,OAAAI,KAAAyd,QAkCA,SAAAid,IACA,IAAAyC,EAAAt0B,EAAAG,aAAA+Z,UAAAoa,QACA,OAAAz8B,KAAA08B,IAAAra,EAAAgX,OAAA/tB,EAAA+W,EAAAvC,MAAAxU,IAAAmxB,GACAz8B,KAAA08B,IAAAra,EAAAgX,OAAA9tB,EAAA8W,EAAAvC,MAAAvU,IAAAkxB,EAGAt0B,EAAA6zB,iBACA7zB,EAAAw0B,aAtCA,SAAAR,EAAAF,0BAGA,KAAAT,EAAAnZ,UAAAwZ,MACAxZ,EAAAvC,MAAAxU,EAAA,EACA+W,EAAAgX,OAAA/tB,EAAAnD,EAAAxI,qBAKA0iB,EAAAvC,MAAAxU,EAAA2U,EAAAlD,KAAA6f,IAAA3c,EAAA/gB,MACAmjB,EAAAgX,OAAA/tB,EAAA2U,EAAAlD,KAAA6f,IAAA3c,EAAA3gB,KAGA,KAAAk8B,EAAAnZ,UAAAwZ,MACAxZ,EAAAvC,MAAAvU,EAAA,EACA8W,EAAAgX,OAAA9tB,EAAApD,EAAAiE,sBAKAiW,EAAAvC,MAAAvU,EAAA0U,EAAAlD,KAAA6f,IAAA3c,EAAA/gB,MACAmjB,EAAAgX,OAAA9tB,EAAA0U,EAAAlD,KAAA6f,IAAA3c,EAAA3gB,KAGA+iB,EAAAnV,MAAA,EACA/E,EAAA4zB,wBACAE,GAAAjC,KACAC,sBAaA9xB,EAAAyI,MAAAisB,WAAAnsB,KAAA,SAAAvI,EAAA20B,GAEA,MADA30B,EAAAG,aACA+Z,UAAAwZ,OACAiB,EAAAC,UAAAxD,GACAuD,EAAAE,UAAArD,MAKAxxB,EAAAyI,MAAAqsB,YAAAvsB,KAAA,SAAAvI,EAAAC,GAEA,GAAAia,EAAAnV,MAAA8sB,IAAA,CACA,IAAAyB,EAAAtzB,EAAAuzB,iCAGAtzB,EAAAgC,wEAKAhC,EAAAkG,YAAAzK,EAAAq5B,MAAA,QAAAv2B,WACAyB,EAAAqG,UAAA,EACArG,EAAA+0B,SAAA3B,EAAAnZ,UAAA+a,6CAGA,IAAA9xB,EAAAtL,KAAAyJ,IAAA4Y,EAAAvC,MAAAxU,EAAA+W,EAAAgX,OAAA/tB,GAAA,GACAC,EAAAvL,KAAAyJ,IAAA4Y,EAAAvC,MAAAvU,EAAA8W,EAAAgX,OAAA9tB,GAAA,GACApL,EAAAH,KAAA08B,IAAAra,EAAAgX,OAAA/tB,EAAA+W,EAAAvC,MAAAxU,GAAA,qCAGAlD,EAAA0G,SAAAxD,EAAAC,EAAApL,EAAAk9B,yBAGAj1B,EAAAuC,aAIAxC,EAAAyI,MAAA0sB,SAAA5sB,KAAA,SAAAvI,EAAA20B,GACAA,EAAAS,OAAA,YAAAhE,2BAGAc,GACSxyB,EAAAjI,UAAA29B,OAAA,UAAAlD,MAOTryB,QAAA,CACAqa,UAAA,CACAwZ,KAAA,KACA7vB,MAAA,UACAoxB,MAAA,QACAX,QAAA,IAGA32B,KAAA,YACKqL,QAAA,QAvSL,oHCvEsBqsB,EAAA56B,GACpB,IAAI8M,EAAK9M,EAAA8M,YACPA,EAAA+tB,cACDjsB,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,uBAAAxE,IAAAqR,EAAA+tB,gBAEC/tB,EAAAguB,cACDlsB,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,uBAAAxE,IAAAqR,EAAAguB,gBAEQ,WAAPhuB,EAAAiuB,KACDnsB,EAAA3P,EAAAmB,cAAA,KAAA46B,MAAA,CAAAj+B,MAAA,OAAAyM,OAAA,QAAAvJ,UAAA,uBAGF2O,EAAA3P,EAAAmB,cAAA,KAAA46B,MAAA,CAAAj+B,MAAA,OAAAyM,OAAA,QAAAvJ,UAAA,gCAE0Bg7B,EAAIj7B,GAC7B,IAAI8M,EAAK9M,EAAA8M,YACPA,EAAAtN,OACDoP,EAAA3P,EAAAmB,cAAA,QAAAH,UAAA,uCAEC6M,EAAAouB,OACDtsB,EAAA3P,EAAAmB,cAAA,QAAAH,UAAA,uCAEF2O,EAAA3P,EAAAmB,cAAA,QAAAH,UAAA,6CASgD,SAAoBnC,YAArEq9B,IACE,IAAAn9B,EAAA,OAAAF,GAAsBA,EAAC4pB,MAAwCxpB,KAAAypB,YAAAzpB,KA2DhE,SA1DGk9B,oBAAW,SAAoBja,GAC/BnjB,EAAAD,MAAAq9B,oBAAAp9B,EAAAD,MAAA+O,KAAAqU,EAAA1hB,UAGA47B,aAAW,WACXr9B,EAAAD,MAAAs9B,aAAAr9B,EAAAD,MAAA+O,OAqDH9O,EA5DgD,OAAjD2mB,EAAA,EAAAwW,EAAAr9B,KAUUa,UAAEoB,OAAI,WACZ,IA7CiBu7B,EA6CXt7B,EAAA9B,KAAAH,MAAiB+O,EAAO9M,EAAC8M,KAAAyuB,EAAkBv7B,EAAKu7B,WAChDC,GAAyB,IAAzB1uB,EAAyB2uB,cAAA3uB,EAAAwuB,UAE/BI,EACEC,EAAe,EAAA7yB,KAAkB,SAAM8yB,GAAU,OAAAA,EAAAn8B,QAAAqN,EAAA+uB,oBAC/CjtB,EAAA3P,EAAAmB,cAAA,KAAI,CAAAH,WAlDSq7B,EAkDaxuB,EAAAwuB,UAjDhCA,EAAA,0BAkDQr8B,EAAAmB,cAAA,KAAC,CAAA46B,MAAU,CAAAj+B,MAAO,OAEpB6R,EAAA3P,EAAAmB,cAAAw6B,EAAW,CAAE9tB,KAAOA,OACR7N,EAAAmB,cAAA,MAAA46B,MAAA,CAAAj+B,MAAA,eAAE,IAEd6R,EAAA3P,EAAAmB,cAAA66B,EAAA,CAAAnuB,YACQ7N,EAAAmB,cAAa,KAAc,wEAEP,wBACtB,IAEKwO,EAER3P,EAAAmB,cAAA,KAAAH,UAAA,YAAA67B,KAAAP,EAAA12B,IAAA,gBAAA02B,EAAAzhC,OACA,KAEH0hC,GAAA5sB,EAAI3P,EAAAmB,cAAU,MAAAH,UAAwB,wCACtC2O,EAAA3P,EAAAmB,cAAA,MAAAH,UAAA,0BACEhB,EAAAmB,cAAA,YACEnB,EAAAmB,cAAA,MAAC,CAAAH,UAAM,WAUX2O,EAAA3P,EAAAmB,cAAA3E,EACS,QAAAsgC,cACL,EAAA32B,QAAAu2B,EAAa,EAAAn7B,SAA2BtC,KAAAk9B,oBAA0B9rB,WAAAxC,EAAAwuB,UAAAr7B,UAAA,0CAAAR,MAAAi8B,QAChEz8B,EAAAmB,cAAA,UAAG0M,EAAAwuB,UASX1sB,EAAA3P,EAAAmB,cAAA,UAAAH,UAAA,6BACH2O,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA,gBAVwB2O,EAGf3P,EAAAmB,cAAA,KAAAH,UAAA,2BAAkBs0B,QAAAr2B,KAAAm9B,cAChBzsB,EAAA3P,EAAAmB,cAAA,KAAGH,UAAU,qBArDsBk7B,EAAA,oBCjC4B,SAAAr9B,gBAmC5E,cAAAA,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KAnCuD,OAAxDymB,EAAA,EAAAqX,EAAAl+B,KAEYa,UAAoBoB,OAAA,WAC5B,IAAM+M,EAAA5O,KAAAH,MAAA+O,KAEN4uB,EACEC,EAAc,EAAA7yB,KAAkB,SAAA8yB,GAAA,OAAAA,EAAAn8B,QAAAqN,EAAA+uB,oBAC9BjtB,EAAA3P,EAAAmB,cAAA,KAAI,CAAAH,UAAc,sBAChBhB,EAAAmB,cAAA,MAAA46B,MAAG,CAAKj+B,MAAI,OAEd6R,EAAA3P,EAAAmB,cAAA,IAAI,CAAA46B,MAAS,CAAAj+B,MAAO,OAAOyM,OAAA,QAAAvJ,UAAA,0BACfhB,EAAAmB,cAAA,MAAA46B,MAAA,CAAAj+B,MAAA,QACV+P,EAAA5J,KAEF0L,EAAA3P,EAAAmB,cAAA,OAAM,CAAAH,UAAA,yCACN2O,EAAA3P,EAAAmB,cAAA,WACAwO,EAAA3P,EAAAmB,cAAA,MAAAH,UAAA,0BACEhB,EAAAmB,cAAA,YACEnB,EAAAmB,cAAA,MAAC,CAAAH,UAAM,WASX2O,EAAA3P,EAAAmB,cAAA3E,EAAA,QAAA2J,QAAAu2B,EAAA,EAAAn7B,SAAA,aAAA8O,YAAA,EAAArP,UAAA,0CAAAR,MAAAi8B,QACEz8B,EAAAmB,cAAA,YACEnB,EAAAmB,cAAA,UAAGH,UAAU,6BAKtB2O,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA,mBAlCqD+7B,EAAqB,cCMhDC,EAAA,SAAoBn+B,gBA6ChD,cAAAA,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KA7C4B,OAA7BymB,EAAA,EAAAuX,EAAAp+B,KAEUa,UAAEoB,OAAA,WAER,IAAAC,EACE9B,KAAAH,MAAA0R,EAAAzP,EAAAyP,MAAA4rB,EAAOr7B,EAAAq7B,aAAUD,EAA4Bp7B,EAAAo7B,oBAAAe,EAAAn8B,EAAAm8B,WAAAZ,EAAAv7B,EAAAu7B,kBAC3C3sB,EAAA3P,EAAAmB,cAAA,SAAAH,UAAA,gCACEhB,EAAAmB,cAAA,QAAC,OAGSnB,EAAAmB,cAAOg8B,EAAA,CAAA53B,IAAA,EAAAsI,KAAA,CACb5J,KAAA,QACA24B,WAAM,EAER7hC,KAAA,+BAEAsF,IAAA,SACEwN,EAAA0iB,GAQF,OAAA5gB,EAAA3P,EAAAmB,cAAAi8B,EAAA,CAAA73B,IAAAgrB,EAAA,EAAA1iB,OAAAuuB,eAAAD,sBAAAG,kBAGE,OAAA9rB,EAAApM,OAAA,EAAIuL,EAAU3P,EAAAmB,cAAA,YACZnB,EAAAmB,cAAA,MAAAyO,QAAA,GAKLD,EAAoB3P,EAAImB,cAAY,KACnC,uCACE,OAAAqP,EAAApM,OAAA,EAAIuL,EAAU3P,EAAAmB,cAAA,YACZnB,EAAAmB,cAAA,MAAAyO,QAAA,GAObD,EAAA3P,EAAAmB,cAAA,kFA5C0B87B,EAAA,CA+Cd1H,EAAA,6CC7Df,iBAAA8H,EAAAlkC,EAAA,QAAAmkC,EAAAnkC,EAAAqhC,EAAA6C,GAAuBE,EAAApkC,EAAA,QAIrBqkC,EAAa,IAAAD,EAAA,GACbvqB,KAAM,eACF,CACF,CAAA/O,KAAA,aAAA+O,KAAA,SAAAyqB,eAAA,IAEEx5B,KAAM,OACN+O,KAAA,SACD7M,QAAA,gDAEF,CAAAlC,KAAA,KAAA+O,KAAA,SAAA7M,QAAA,+CAEAu3B,cAAA,oCAmGDC,EAAOC,EAAAC,UAGHP,EAA4Ct9B,EAAAivB,OAAW2O,EAAA,SAAAjnB,EAAAmnB,GAWzD,YAVgB54B,IAAZ44B,EAAGC,aAAkC74B,IAAV44B,EAAGt9B,OAC/BmW,EAAA9H,KAAAivB,EAAAC,OAAA,IAAAD,EAAAt9B,YAIa0E,IAAZ44B,EAAGE,aAAkC94B,IAAV44B,EAAGG,OAC/BtnB,EAAA9H,KAAAivB,EAAAE,OAAA,IAAAF,EAAAG,OAKCtnB,GACP,IAAAjR,KAAAm4B,GAqBgBxkC,EAAa,GAC5BmkC,gBACAU,8BAxFeh/B,UACbA,OACE,WACE,CACApE,KAAA,KACAq8B,UAAU,yBACVgH,WAAA,sBAGF,iBACE,CACArjC,KAAA,WACAq8B,UAAU,2BACVgH,WAAA,4BAGF,gBACE,CACArjC,KAAA,UACAq8B,UAAU,iBACVgH,WAAA,2BAGF,eACE,CACArjC,KAAA,SACAq8B,UAAU,cACVgH,WAAA,0BAGF,gBACE,CACArjC,KAAA,UACAq8B,UAAU,oBACVgH,WAAA,2BAGF,gBACE,CACArjC,KAAA,UACAq8B,UAAU,iBACVgH,WAAA,sBAKP,MAAAC,QAAA,wBA2CCC,eAvII,EAAmBvjC,KAAG,QAAA0F,MAAA,UAwI1B89B,cA/HQ,CACR,CAAExjC,KAAM,WAAY0F,MAAO,MAC3B,CAAE1F,KAAM,WAAA0F,MAAkB,MAC1B,CAAE1F,KAAM,mBAAmB0F,MAAO,iBAClC,CAAE1F,KAAM,kBAAgB0F,MAAO,gBAC/B,CAAA1F,KAAA,eAAA0F,MAAA,aA2HA+9B,cAvHmB,EAAAzjC,KAAA,KAAA0F,MAAA,OAAA1F,KAAA,MAAA0F,MAAA,QAwHnBg+B,YA1GQ,CACR,CAAE1jC,KAAM,WAAW0F,MAAO,YAC1B,CAAE1F,KAAM,UAAA0F,MAAiB,WACzB,CAAE1F,KAAM,kBAAmB0F,MAAA,cAC3B,CAAA1F,KAAA,KAAA0F,MAAA,OAuGAi+B,oBAnGwB,CAAC,CAAA3jC,KAAU,WAAA0F,MAAA,aAAA1F,KAAA,kBAAA0F,MAAA,eAoGnCk+B,aAzHe,CACf,CAAE5jC,KAAM,QAAS0F,MAAO,OACxB,CAAE1F,KAAM,QAAS0F,MAAO,OACxB,CAAE1F,KAAM,QAAS0F,MAAO,OACxB,CAAE1F,KAAM,QAAS0F,MAAO,OACxB,CAAE1F,KAAM,UAAU0F,MAAO,SACzB,CAAE1F,KAAM,SAAU0F,MAAO,QACzB,CAAE1F,KAAM,WAAU0F,MAAO,UACzB,CAAE1F,KAAM,SAAA0F,MAAgB,QACxB,CAAE1F,KAAM,iBAAkB0F,MAAO,gBACjC,CAAA1F,KAAA,mBAAA0F,MAAA,mBAgHAm+B,2BApGgBrjC,GAChB,IAAAsjC,EAAO,IAAIrB,EAAU,EAAK,CAAEvqB,KAAK1X,EAAA0X,KAAA0qB,cAAA,KAClC,WAAAH,EAAA,EAAAjiC,EAAAsjC,IAmGCC,gCA5BAC,UAKExB,EAAsCt9B,EAAA4E,QAAAk6B,EAAAr3B,MACvCk2B,EAAAmB,EAAAr3B,KAAA,MACC61B,EAAiDt9B,EAAC4E,QAAAk6B,EAAAr3B,KAAAs3B,aACnDpB,EAAAmB,EAAAr3B,KAAAs3B,YAAA,MAGCD,EAAAr3B,KAAO6sB,MACR,UAAAwK,EAAAr3B,KAAA6sB,MAGF,IAcC0K,oBA9IW,CACXjb,SAAU,EACVkb,QAAS,EACTC,QAAK,EACLC,GAAA,EACAC,OAAA,iHChBmB,SAAMr+B,GACzB,IAAMs+B,EAAAt+B,EAAAs+B,KAAAC,EAA2Bv+B,EAAAu+B,UAC/BC,EAAqBF,EAAKrV,SAAKngB,KAAA,SAAA21B,GAC9B,WAAAA,EAAA/H,gBAUCv2B,EAAAlB,EAAAmB,cAAA,MAAO,CAAAH,UAAW,mCAAuBs+B,GAEzCp+B,EAAAlB,EAAAmB,cAAA,SAAAH,UACW,uBAACu+B,EACHxkC,KAAA0kC,QAAoB,6BAKCz/B,EAAAmB,cAAA,UAAAH,UAAA,8BAAAR,MAAA++B,EAAA35B,IAAArE,SAhB1B,SAAcyX,GACpB,IAAMiQ,EAAMjQ,EAAQvF,OACpB7N,EAAAqjB,EAAA9iB,QAAA8iB,EAAAyW,eAAAl/B,MACAm/B,EAAA,EAAA/kC,KAAA,mBAAAiiC,KAAAj3B,KAagC9J,GAAA,0BAAAujC,EAAArV,SAAA3pB,IAAA,SAAAm/B,UACxBA,EAAAI,aAED,KASP1+B,EAAAlB,EAAAmB,cAAA,UAAAoE,IAAAi6B,EAAA55B,IAAApF,MAAAg/B,EAAA55B,KAAA45B,EAAA1kC,aAGY,SAAAiG,GACd,IAAAs+B,EACEt+B,EAAAs+B,KAAAC,EAAAv+B,EAAAu+B,iBAEQp+B,EAAkBlB,EAAAmB,cAAA,MAAAH,UAAA,WAAAs+B,GAAAD,EAAArV,SAAA3pB,IAAA,SAAAw/B,EAAAtP,MACpBsP,EAAAD,aACD,gBAGCE,EAAAC,IAAoB,CACpBC,gBAAY,EACXvI,OAAAoI,EAAApI,gBAICv2B,EAAAlB,EAAAmB,cAAA,KAAG,CAAAH,UAAW,eAAoBuE,IAAIs6B,EAAMj6B,OAC1C5F,EAAAmB,cAAA,KAAAH,UAAG8+B,EAAmBrsB,OAAIosB,EAAApsB,OAAAopB,KAAAgD,EAAAj6B,KACzB1E,EAGLlB,EAAAmB,cAAA,KAAAH,UAAA6+B,EAAA9kC,OAGN8kC,EAAA/kC,aAGkB,SAAIiG,GACxB,IAAAs+B,EACEt+B,EAAAs+B,YACEn+B,EAAAlB,EAAAmB,cAAC,MAAS,KACVD,EAAAlB,EAAAmB,cAAC8+B,EAAK,CAAAX,UAAU,0BAA8BD,KAEhDA,IACFn+B,EAAAlB,EAAAmB,cAAA++B,EAAA,CAAAZ,UAAA,oBAAAD,WAEsCc,EAAA,SAAAthC,cAEpCC,GACD,OAAAD,EAAAG,KAAAC,KAAAH,IAAAG,KAHqC,OACtCQ,EAAwB,EAAA0gC,EAAAthC,KAKtBa,UAAA0gC,sBAAA,WAED,gDAGC,IAAI9a,EAACvkB,OACHlG,GAAYwlC,GAAA,IAAAA,EAAAj8B,QACb,gBAGCi8B,GAAO,IAAAA,EAAAj8B,OACR,OAAAlD,EAAAlB,EAAAmB,cAAA,MAAAH,UAAA,sBAAAnG,oBAGI,IAAMylC,EAAE7gC,EAAA,EAAA4gC,GAAAE,EAAAD,EAAArsB,QAAAssB,EAAArsB,KAAAqsB,EAAAD,EAAArsB,OAAA,CACX,IAAIusB,EAAGD,EAAK//B,MACVggC,EAAA56B,IAKD66B,EAAA5xB,KAAA3N,EAAAlB,EAAAmB,cAAA,KAAAH,UAAA,YAAAuE,IAAAk7B,EAAAr8B,OAAAy4B,KAAA2D,EAAA56B,KAAA46B,EAAA3lC,uDACiE,MACjE2lC,EAAA3lC,0GAKJ,wDAH+D,MAE9DA,IACDqG,EAAAlB,EAAAmB,cAAA,MAAAH,UAAA,sBAAAy/B,MAGQ/gC,UACLghC,kBAAA,SAAArB,UACEn+B,EAAAlB,EAAAmB,cAAA,MAAM,CAAAH,UAAU,wBACAhB,EAAAmB,cAAA,QAAAH,UAAA,qBACbq+B,EAAKtkC,MAAOmG,EAAAlB,EAAAmB,cAAA,KAAAH,UAAc,qBAAoBq+B,EAAKtkC,OAGtDskC,EAAAsB,KAAAz/B,EAAAlB,EAAAmB,cAAK,MAAU,CAAAH,UAAA,mBAAyBxE,IAAA6iC,EAAAsB,SACJ3gC,EAAAmB,cAAY,OAAAH,UAAA,2BAC7C/B,KAAK2hC,YAAYvB,EAAAvkC,KAAAukC,EAAAgB,aAIzBhB,EAAAwB,UAAA3/B,EAAAlB,EAAAmB,cAAA,OAAAH,UAAA,0BAAAq+B,EAAAwB,eAGSnhC,UAAAoB,OAAA,WAER,IAAIxF,EAAQ2D,KAAAH,MAAAxD,UACVA,EACD,YAID,IAAA+jC,EACE/jC,EAAA+jC,YACEn+B,EAAAlB,EAAAmB,cAAA,MAAK,CAAAH,UAAU,wBACbhB,EAAAmB,cAAA,OAAAH,UAAK,oBAC0BhB,EAAAmB,cAAA,OAAAH,UAAA,eAC5B/B,KAAKyhC,kBAAYrB,GAK3BA,EAAArV,UAAA9oB,EAAAlB,EAAAmB,cAAA2/B,EAAA,CAAAzB,aAvEqCc,EAAA,4ICzEjCY,EAAYnd,OACfA,EAED,YAECA,IAAYod,EACb,SAED,IAAAnd,EAASD,EACV,OAAAC,EAAAxnB,MAAAwnB,EAAAxnB,KAAA4H,OAAA+8B,WAGCC,EAAW96B,UACT,IAAM+6B,EAAY,WAAAC,GAClB,IAAM7mC,EAAA6C,OAAkBikC,EAAqC,EAAvDjkC,GAAuDkkC,aAEzDC,WA0CmBC,OACvBA,IAAOA,EAAUn9B,OAClB,OAEF,OAAAm9B,EAAA,GAAAC,QA9CyBC,CAAAt7B,EAAAo7B,aACpBD,EAED,OADCH,EAAWltB,KAACytB,EAAA,+BACb,KAGD,IAAMC,EAAarnC,EAAYsnC,aAAaz7B,EAACq7B,SAEzCK,EAAgBvnC,EAAAsnC,aAAAN,OAClBO,EAED,OADCV,EAAWltB,KAACytB,EAAA,kBAAAJ,IACb,KAGD,IAAMQ,EAAeD,EAAeE,iBAClCC,EAAMF,EAAgBn7B,SAAA,GAAAs7B,UAAA,MACpB,SAAYx6B,GACZ0N,QAAAxG,IAAW,4BAAWlH,GACvB05B,EAAAltB,KAAAxM,SAMOk6B,EAAAO,WAAA,CACR,IAAMte,EAAWie,EAAAje,WAAAT,EACZ0e,EACH1e,QAIFgf,EAAezc,EAAc,KAAAvf,EAAA,CAAAyd,aAAA4d,QAAAF,EAAAC,QAAApe,IAC9B2e,EAAA//B,IAAAogC,UAGC,WACAhtB,QAAAxG,IAAY,gCACZqzB,EAAAI,0BAYJV,EAAOW,SACL,CACAnjC,MAAM1C,EAAI,aAAA6Y,MACVhP,OAAO,GACPiuB,MAAA,CAAS8J,QAAEiE,GACX5lC,UAAAD,EAAA,gHCtDF8lC,EAAsB3iC,GACvB,OAAAxE,KAAAC,UAAAuE,OAayC4iC,EAAA,SAA2B1jC,YACnE2jC,EACE1jC,GAqDF,IAAAC,EAAAF,EAAAG,KAAiBC,KAAAH,IAAWG,KAhD3B,SAiDSwjC,eAAA,SAAA3mC,GACR,IAAMyF,EAAQxC,EAAKD,MAAQyC,SAC3B5B,EAAMZ,EAAY2jC,WAClB/iC,EAAA6hC,QAAgB1lC,EAEhByF,EAAA5B,GAEAZ,EAAAD,MAAAvE,MAAAooC,aA6BQC,oBAAA,SAAAroC,GACR,IAAMsoC,EAAe9jC,EAAWG,MAAE2jC,kBAE9BC,EAAMvoC,EAAQqpB,WAAcrpB,EAAAqpB,WAAAif,SACP,IAAvBtoC,EAAA4oB,QAAO/e,OACR,cAAA0+B,EAGDvoC,EAAA4oB,QAAA/e,OAAA,eAAA0+B,KAhGE5jC,MAAA,CACA2jC,kBAAW,GACX/R,QAAA,IACH/xB,EAPuC,OACxC2mB,EAAA,EAAY8c,EAAY3jC,KASda,UAAAgjC,SAAqB,WAE9B,OADazjC,KAACH,MAA4BvE,MAC1C4oB,QAAA,6FAGCuC,EAA8B,EAAAzmB,KAAA,SAAA8B,8NAItB,EAGA,SADH9B,KAASH,MAAIikC,UACLC,GAAcA,EAAMD,YAA6BA,EAAA,QAC1CpjC,EAAAV,KAAAH,MAAAvE,MAAM4oB,QAAA,qCAAlB,SACA8f,EAAYC,EAAApf,OACZxpB,EAAQ6C,OAAUikC,EAA4B,EAAtCjkC,GAAsCkkC,cAEpD9mC,EAAKD,EAAOsnC,aAAAjiC,EAAA6hC,+CAEVviC,KAAAa,SAAA,CAAA+iC,kBAAOI,EAAAh/B,OACR,UAEK,EACAk/B,EAAuBD,EAACpf,6BAEVof,EAAAE,KAAAv0B,KAAA,2DAAf,OAAAiF,EAAAI,KAAA,SACQJ,EAAMtT,OAAaojB,+CAAM,WAAN,+BAAiD,qBAAzE,EAGAyf,GAFAxf,EAAG7P,GAEKsuB,oBAAAze,EAAAye,sBACRgB,EAAAnmC,OAAYomC,EAA0B,EAAtCpmC,CAAsC4lC,EAAAS,EAAAlvB,OAE5CmvB,EAAUH,GAAAP,IACRl0B,KAAK,CACLyF,MAAOkvB,EAAIlvB,MACX3U,MAAO0jC,EAACG,GACR7C,IAAI9c,EAAExnB,KAAAoT,KAAUi0B,MAAMC,MACtBl8B,KAAKg8B,EAAWp9B,OACfiuB,MAAAmP,EAAAnP,4MAGL,4FAeM50B,UAAAkkC,gBAAuB,SAAAC,GAE/B,IAAA/S,EACE7xB,KAAAC,MAAA4xB,eAEInhB,EACE3P,EAAAmB,cAAA,WAAK2vB,EAAAzwB,IAAU,SAAAoT,EAAA9X,UACbgU,EAAA3P,EAAAmB,cAAA,MAAK,CAAAH,UAAU,2BAA0BuE,IAAA5J,KACvCqE,EAAAmB,cAAA,OAAAH,UAAU,4BACT2O,EAAY3P,EAAAmB,cAAA,OAAA3E,IAAAiX,EAAAktB,IAAA7iC,MAAA,GAAAkD,UAAA7D,OAAA2mC,EAAA,IAAA3mC,CAAA,CAAA4mC,YAAA,YACTzvB,MACN,OACEtU,EAAAmB,cAAA,OAAAH,UAAS,sCACChB,EAAKmB,cAAA,KAAA07B,KAAAgH,WAEb,IAOZl0B,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA,6DAcJ,IAAAqpB,EAAAtpB,EAKQijC,EAJAjlC,EAAAE,KACA3E,EAAY6C,OAACikC,EAAW,EAAZjkC,GAAYkkC,aAE1B1hC,EAAiCV,KAACyjC,wBAGjC,IAAM5uB,EAAK4R,EAAA,EAAAprB,EAAAsB,QAAAoY,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CACd,IAAM1Z,EAAMyZ,EAAGxT,MACXyjC,EAASvwB,EAAA,EAAA9X,OAAArB,EAAAyY,SACXixB,IAIA1pC,EAAM4oB,SAAO5oB,EAAAqpB,aAAAod,GAAA,KACXnzB,EAAO,CACPrN,MAAOjG,EAAMuB,GACb2E,MAAAlG,EAAaM,MAAKN,EAAAM,MAAA,SAA0BN,EAAAuB,GAC5CqmB,YAAQljB,KAAO2jC,oBAAgBroC,GAC/BoG,OAAAsjC,EAAAx0B,KAAAi0B,MAAAC,OAIF/nC,EAAIiT,KAAMhB,GACRlO,EAAA6hC,UAAgBjnC,EAAAuB,KACjBkoC,EAAAn2B,yGAKHjS,EAAOwI,OACL,EAIH,OAAAuL,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA7D,OAAA2mC,EAAA,IAAA3mC,CAAA,CAAA+mC,QAAA,kGAKD,IAAAL,EACE,KAAAvpC,EAAAqtB,IAAA,IAAArtB,EAAAO,MAAA,6BAAA8E,EAAA6hC,eACE7xB,EAAA3P,EAAAmB,cAAA,MAAK,OACHnB,EAAAmB,cAAA,OAAAH,UAAK,WACL2O,EAAA3P,EAAAmB,cAAC,OAAAH,UAAA,iBACY,0BAOf2O,EAAA3P,EAAAmB,cAAAgjC,EAAgB,QAAA3iC,YAAI,eAAWs7B,cAAkB,EAAA32B,QAAevK,EAAC4E,MAAAwjC,EAAwBziC,SAE3F,SAAAsM,GAAA,OAAA9O,EAAA0jC,eAAA50B,EAAArN,WACHmP,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA7D,OAAA2mC,EAAA,IAAA3mC,CAAA,CAAA+mC,QAAA,UAAAvkC,EAAA6hC,SAAAviC,KAAA2kC,gBAAAC,MA7JuCrB,EAAA,kBCtC1CrpC,EAAAC,EAAAC,EAAA,sBAAA0nC,IAAA5nC,EAAAC,EAAAC,EAAA,sBAAA4nC,IAAA9nC,EAAAC,EAAAC,EAAA,sBAAAkpC,uCCwBA,SAAA6B,EAAA5J,EAAA6J,GACA,OAAAA,EAAAlmC,KAAA+N,MAAAsuB,EAAA6J,uBAQA,sBAAAjrC,EAAAkrC,SACA,OAAAlrC,EAAAkrC,SAAAjB,GAGA,MAAAkB,EAAA,SAAA/J,EAAAgK,GAGA,OADAA,EAAA,UAAAA,EAAA,IAAAA,GACA,IAFAhK,EAAA,GAAAA,GAEAp2B,OAAAogC,EAAAhK,KAGAxyB,EAAA,GACAoU,GAAA,EACAqoB,EAAArrC,EAAAsrC,kBAGA,MAAAC,IACAA,EAAA,2EAGA,MAAAC,IACAA,EAAA,6CAMGC,EADHJ,EAAA,GACGA,EAAA,GACH,GAAAA,EACG,GAEHA,gDAOA,GAAAroB,EAAA,CACA,OAAApa,GACA,QAAAA,EAAA,GAAA4iC,EAAAxrC,EAAA0rC,UAAA,MACA,QAAA9iC,EAAA,GAAA2iC,EAAAvrC,EAAA2rC,YAA4C,MAC5C,QAAA/iC,EAAAuiC,EAAAnrC,EAAA4rC,UAAA,IAA6C,MAC7C,QAAAhjC,EAAAuiC,EAAAnrC,EAAA4rC,UAAA,KAA2C,MAC3C,QACA,QAAAhjC,EAAAuiC,EAAAE,GAAA,MACA,QAAAziC,EAAAuiC,EAAAM,GAAA,MACA,QAAA7iC,EAAAuiC,EAAAM,EAAA,WACA,QAAA7iC,EAAAuiC,EAAAnrC,EAAA2rC,WAAA,EAA2C,UAC3C,QAAA/iC,EAAAuiC,EAAAnrC,EAAA6rC,cAAA,MAEA,QACAjjC,EAAA,IAAA7D,KAAA+N,MAAA9S,EAAA2rC,WAAA,GAA2C,SAC3C,QAAA/iC,EAAAuiC,EAAAnrC,EAAA8rC,cAAA,MACA,QAAAljC,EAAAuiC,EAAAnrC,EAAA+rC,cAAwC,WACxC,QAAAnjC,EAAA,GAAA5I,EAAA+rC,cAAA,MACA,QAAAnjC,EAAA,YAAsD,MACtD,QAAAA,EAAA,OAAmC,WACnC,QAAAA,EAAA,GAAA5I,EAAA0rC,SAEA98B,EAAA6G,KAAA7M,GACIoa,GAAA,MAEJ,KAAApa,EACKoa,GAAA,EAELpU,EAAA6G,KAAA7M,GAKA,OAAAgG,EAAAtC,KAAA,kBAUA,SAAA0/B,EAAAC,EAAAC,EAAAC,EAAAC,GACAH,EAAAC,GAAA,WACA,OAAAC,EAAAC,GAAA/c,MAAA8c,EAAA7c,YAIA,IAAAgO,EAAA,CACAxD,KAAA95B,GAKA8L,MAAA9L,EAAAkrC,UACAc,EAAA1O,EAAA,WAAAt9B,EAAA,YAGAgsC,EAAA1O,EAAA,UAAAt9B,EAAA,sCAKA,uFAAAqsC,EAAA,EAAAA,EAAA3mC,EAAAsF,OAAAqhC,IACAL,EAAA1O,EAAA,MAAA53B,EAAA2mC,GAAArsC,EAAA,SAAA0F,EAAA2mC,IACAL,EAAA1O,EAAA,MAAA53B,EAAA2mC,GAAArsC,EAAA,SAAA0F,EAAA2mC,IAGA,OAAA/O,EAMA,SAAAgP,EAAAC,EAAAzpB,GACA,cAAAA,EAAA0pB,SACG,WAAArzB,KAAAozB,GACH,GAAAzpB,EAAA0pB,UAAA,OAAA1pB,EAAA0pB,SAEA,wBAAAC,iBAAA,IAAAA,WAAAtzB,KAAA,CACA,IAAAnZ,EAAA,IAAAysC,WAAAtzB,KAKG,OAFHnZ,EAAA0sC,YAAA5pB,EAAA0pB,UACAxsC,EAAA2sC,QAAAJ,GACGvsC,EAEH,OAAA4sC,EAAA,IAAAzzB,KAAAozB,IATG,OAAAK,EAAA,IAAAzzB,KAAAozB,IAeH,IAAAM,EAAA,CACAzO,OAAA,IACA0O,OAAA,IACAC,KAAA,KACAC,IAAA,MACAC,MAAA,OACAC,QAAA,OACAC,KAAA,iBAMAC,EAAA,CACA,qDACA,cACA,qDACA,cACA,iCACA,uBACA,8BACA,uCACA,aAMAC,EAAAD,EAAAE,OAAA,yBACA,aACAC,EAAAH,EAAAE,OAAA,0CAgOA1gC,EAAAM,KAAAsI,QAAAC,KAAA,CACAC,KA9NA,SAAAxI,GACAA,EAAAyI,MAAAC,eAAAH,KAAA,SAAAvI,EAAAH,oDAKA,QAAA+V,EAAA8d,mCAGA,IAAA4M,EAAA,GACAxtC,EAAAssC,EAAAxqB,EAAAtT,IAAAsU,OAMA2qB,EAAA3qB,EAAA4qB,UACA,YADA5qB,EAAA4qB,SAAA,IAEA5qB,EAAA6qB,yBAAA7qB,EAAA6qB,YAAA,OAGA,MAAA7qB,EAAA6qB,cAEQnM,EADR,iBAAA1e,EAAA4qB,SACQ5qB,EAAA4qB,SAER5qB,EAAA6qB,YAAA,GAAAd,EAAA/pB,EAAA6qB,YAAA,KAIA,QAAA1hC,EAAA,EAAAA,EAAAwhC,EAAAziC,OAAA,KACA8W,EAAAgD,OAAA2oB,EAAAxhC,GAAA,GAAA4gC,EAAAY,EAAAxhC,GAAA,IACAwhC,EAAAxhC,EAAA,MAAA4gC,EAAAY,EAAAxhC,EAAA,WACAwhC,EAAAxhC,GAAA,GAAA4gC,EAAAY,EAAAxhC,GAAA,KAAAu1B,KAHAv1B,GAQA,IAAAgC,EAAAw/B,EAAAxhC,GAAA,2BAUA,SAAA6W,EAAA6qB,aAAA,QAAA7qB,EAAA6qB,YAAA,GACQ1/B,EAAAlJ,KAAA+N,MAAAgQ,EAAA6qB,YAAA,SAGR,IAAAC,EAAA7oC,KAAA8oC,IAAA,GAAA9oC,KAAA+N,MAAA/N,KAAAwQ,IAAAuM,EAAAgD,MAAA+nB,EAAAM,MAAApoC,KAAA+oC,0BAIS7/B,EADT8/B,EAAA,IACS,EACTA,EAAA,EACS,EACTA,EAAA,IACS,EAET,GAGA9/B,GAAA2/B,EAKA3/B,EAAA,IACAA,EAAA,GAIA6T,EAAA4rB,SAAA5qB,EAAA4qB,UAAA,CAAAz/B,EAAAsM,GACA,IAAAmzB,EAAA5rB,EAAA4rB,SAAA,gCAKA,UAAAnzB,EACOva,EAAAguC,WAAAhD,EAAAhrC,EAAA8rC,aAAA4B,IACP,UAAAnzB,EACOva,EAAAiuC,WAAAjD,EAAAhrC,EAAA6rC,aAAA6B,IACP,QAAAnzB,EACOva,EAAAkuC,SAAAlD,EAAAhrC,EAAAsrC,WAAAoC,IACP,SAAAnzB,EACOva,EAAAmuC,SAAAnD,EAAAhrC,EAAA2rC,WAAA+B,IACP,WAAAnzB,EACAva,EAAAmuC,SAAA,EAAAnD,EAAAhrC,EAAA2rC,WAAA,EACO+B,IACP,QAAAnzB,GACAva,EAAAouC,YAAApD,EAAAhrC,EAAA+rC,cAAA2B,yBAOArX,GAAAwW,EAAAC,QACA9sC,EAAAguC,WAAA,GAEA3X,GAAAwW,EAAAE,MACA/sC,EAAAiuC,WAAA,GAEA5X,GAAAwW,EAAAG,KACAhtC,EAAAkuC,SAAA,GAEA7X,GAAA,EAAAwW,EAAAG,KACAhtC,EAAAquC,QAAA,GAEAhY,GAAA,EAAAwW,EAAAI,OACAjtC,EAAAmuC,SAAAnD,EAAAhrC,EAAA2rC,WAAA,IAEAtV,GAAA,EAAAwW,EAAAK,SACAltC,EAAAmuC,SAAAnD,EAAAhrC,EAAA2rC,WAAA,IAEAtV,GAAAwW,EAAAM,MACAntC,EAAAmuC,SAAA,GAGA,MAAAG,EAAA,EACAziC,EAAA2Y,OAAA+pB,OASA,GAJAC,EAAA3iC,EACAA,EAAA7L,EAAAyuC,oBAGA,SAAAl0B,GAAA,WAAAA,UAQAva,EAAAquC,QAAA,GACA,IAAAK,EAAA1uC,EAAAyuC,UACAzuC,EAAAmuC,SAAAnuC,EAAA2rC,YACA,WAAApxB,EAAA,MACA,IAAAo0B,EAAA3uC,EAAAyuC,UACAzuC,EAAA2sC,QAAA9gC,EAAAyiC,EAAAzB,EAAAE,MAAA4B,EAAAD,GAAAhB,GACAY,EAAAtuC,EAAAsrC,WACStrC,EAAAkuC,SAAA,QAETluC,EAAAmuC,SAAAnuC,EAAA2rC,WACA+B,GAAA,WAAAnzB,EAAA,UAEA,QAAAA,EACQva,EAAAouC,YAAApuC,EAAA+rC,cAAA2B,GAER1tC,EAAA2sC,QAAA9gC,EAAAwqB,wBAIA,OAAAmX,sDASA,SAAA1qB,EAAA8rB,WACA,OAAAC,EAAA7uC,EAAA8iB,EAAA8rB,WAAA9rB,EAAAyoB,WAAAzoB,EAAA0oB,UAMA,IAAAsD,EAAAhtB,EAAA/U,QAAA2gC,UACA,WAAA5rB,EAAA/U,QAAA2gC,SAAA,IACA5rB,EAAA/U,QAAA4gC,iDAGA9xB,EAAAiG,EAAA4rB,SAAA,GAAAb,EAAA/qB,EAAA4rB,SAAA,IACAl9B,EAAAsR,EAAAhU,IAAAgU,EAAAtT,IACAugC,EAAAjsB,EAAA,yBACAksB,EAAAlsB,EAAA,0BAgCA,WA7BAjH,EAAAgxB,EAAAC,OACOkC,EAAA,SAAAD,EACPlzB,EAAAgxB,EAAAG,IACAx8B,EAAA,EAAAq8B,EAAAG,IACQgC,EAAA,MAAAD,EAER,SAAAC,EAAA,MAAAD,EAEAlzB,EAAAgxB,EAAAI,MACO,QACP6B,GAAAjzB,EAAAgxB,EAAAK,UACA4B,GAAAjzB,EAAAgxB,EAAAM,KACA38B,EAAAq8B,EAAAM,KACQ,KAER,QAEA2B,GAAAjzB,EAAAgxB,EAAAM,KACA38B,EAAAq8B,EAAAM,KACQ,MAER,SAGA,qCAcApgC,QAvZA,CACAizB,MAAA,CACAwM,SAAA,KACAoC,WAAA,KACAK,iBAAA,EACA1D,WAAA,OAmZA1gC,KAAA,OACEqL,QAAA,6DCtaF,aAAAnW,EAAAC,EAAAC,EAAA,sBAAAivC,IAAAnvC,EAAAC,EAAAC,EAAA,sBAAAkvC,IAAApvC,EAAAC,EAAAC,EAAA,sBAAAmvC,IAAA,IAAAnL,EAAAlkC,EAAA,QAAAmkC,EAAAnkC,EAAAqhC,EAAA6C,GAAAoL,EAAAtvC,EAAA,QAAAA,EAAAC,EAAAC,EAAA,sBAAAovC,EAAA,IAWA,IAAAH,EAAA,+EAEEI,EAAc,SAAcC,GAE5B,OADAL,EAAOM,UAAmB,EAC1BN,EAAAO,KAAAF,IAuB+BJ,EAAA,YAEAC,cAAA,GAAAM,EAAA,EAAAA,EAAApgB,UAActkB,OAAA0kC,sBAE7C,IAAIC,EAAMC,IAAA5kC,OAAA,GACV4kC,EAAM,GAAA1L,EAA6Ct9B,EAAAipC,SAAAD,EAAA,IAAAA,EAAA,GAAA7rC,OAAA,OAAA6rC,EAAA,IAAAtjC,KAAA,KACnD,IACMk4B,EADUoL,EAAAE,MAAe,GAAM,GAAAxjC,KAAA,KAEnCsV,MAAOstB,GAQV,SAPyB,OAAL1K,KACL/zB,KAAA,SAAWmR,GACjB,IAAAmuB,EAAeT,EAAa1tB,GAC5B,cAAAmuB,KAAApjC,QAAAgjC,IAAA,+KC9CVK,oCACEA,GACAA,EAAA,kCACAA,EAAA,sCAHUA,EAAW,yCAoBhBA,IAAoBA,EAAG,SAC5BC,EAAiB,WAAC,MAAc,CADwBr2B,KAEvDo2B,EAAAE,iBAGDC,EAAkB,SAAAC,GAAgB,OAClCx2B,KAAAo2B,EAAcK,iBAFmEC,QAGhFF,IAGDG,EAAiB,SAAChqC,GAAc,OAChCqT,KAAAo2B,EAAcQ,eAFuDF,QAGpE/pC,aAMHkqC,EAMC1jC,GALC,IAAApH,EAAOE,qHACL,SAC8B6qC,EAAAT,6DAAxB,SACNG,EAAQzoC,EAAC+iB,kCAIbimB,EAMCjuC,EAAAqK,GALC,IAAApH,EAAOE,oMACL,SACM8B,EAAA+iB,OACNkmB,EAASC,IAAAC,SAAqBvqC,MAAOT,OAAY,kECrDrD,IAAAyC,EAAA,6DAEAC,OAAAC,QAAAC,uDADA,kuCCa0Bw1B,EAAA,SAAAv2B,GACxB,IAAMipB,EAAAjpB,EAAAipB,SAAoBvrB,EAAAsC,EAAAtC,MAAA0rC,EAAA1qC,EAAsC,EAAAsB,EAAA,sBAC1DqpC,EAAAjtC,OAAyBuE,EAAmC,UAA5DvE,GAENktC,EACE,sBAAA5rC,EAAA,wBAACA,EAAA,WAEGyC,EAAAlB,EAAAmB,cAAAmpC,EAAA,EAAA7qC,EAAA,KAAA0qC,GAAA,SAAAI,EAAAC,EAAAC,GAOA,IAAAC,EACEjrC,EAAA,KAAAgrC,EAAA,CAAAp/B,UAAAnG,IAAAilC,EAAA9+B,KAAA8+B,EAAA9+B,KAAAo/B,EAAAp/B,cACGnK,EACClB,EAAAmB,cAAAD,EAAClB,EAAAoQ,SAAA,OAOiB4N,SAAA9c,EAAqBlB,EAAAmB,cAAAwpC,EAAA,EAAAlrC,EAAA,KAAAirC,EAAA,CAAAE,aAAAL,EAAAM,aAAAL,EAAAM,iBAAAV,EAAApsB,QAAA+sB,iBAAA,SAAA/pC,UAAAqpC,EAAAW,YAAA,SAAAjqC,GAAO,IAAAkqC,EAC1ClqC,EAAAkqC,WAAAt6B,EAAA5P,EAAA4P,UACD,OAEJzP,EAAAlB,EAAAmB,cAAA,MAAA1B,EAAA,GAAAuB,UAAA,gBAAAkqC,iBAAAv6B,GAAAs6B,UAEuBjrC,EAAAmrC,aAAAnhB,EAAA,CACtBZ,IAAAghB,EACAQ,aAAcL,EAGnBM,aAACL,yqBCjCGY,EAAiBjuC,OAAGkuC,EAAA,EAAHluC,CAAuB,oBAA0CmuC,SAElFC,EAAoBpuC,OAAGkuC,EAAA,EAAHluC,CAAG,qBAA2CmuC,SAElEE,EAAsBruC,OAAAkuC,EAAA,EAAAluC,CAAA,yBAAAmuC,SAEtBG,EAAqBtuC,OAAGuuC,EAA6C,EAAhDvuC,CAA4E,0BAASmuC,SAE1GK,EAAAxuC,OAA4BkuC,EAAA,EAA5BluC,CAA4B,4BAA6BmuC,SAEzDM,EAA2BzuC,OAAAkuC,EAAA,EAAAluC,CAAiC,iCAAgCmuC,SAE5FO,EAAA1uC,OAA+BkuC,EAAA,EAA/BluC,CAA+B,gCAA6BmuC,SAE5DQ,EAAoB3uC,OAAAkuC,EAA6B,EAA7BluC,CAA6B,qCAAiCmuC,SAElFS,EAAe5uC,OAAAkuC,EAA8B,EAA9BluC,CAA8B,wBAA2BmuC,SAY9EU,EAAS7uC,OAAekuC,EAAA,EAAfluC,CAAe,kBAAAmuC,kBAA/BW,IACE,IAAAltC,EAAOE,wLACC,SACNitC,EAASnrC,EAAA+iB,kCAIbqoB,EAUCrwC,GATC,IAAAiD,EAAOE,+LACC,SACcmtC,EAAArrC,EAAA+iB,oCAAd,SACSuoB,EAAAtrC,EAAA+iB,+BAAT,SAENmgB,EAASljC,EAAA+iB,OACTgmB,EAASsB,EAAAgB,IACTtC,EAAS0B,EAAAa,wDAIbC,EAoBCrI,GAnBC,IAAAllC,EAAOE,mJACL,SAEM8B,EAAA+iB,OAEAyoB,EAAcC,IAAAD,0BACZ,CACNtoC,KAAMggC,EAAOhgC,KACb+O,KAAMixB,EAAEnoC,GACR2wC,OAAA,QACAC,UAAA,IAAAH,EAAAnoC,QAGAuoC,EAAAJ,EAAmBK,EAAY3oC,QAChC2oC,EAAA3oC,cA6CHsoC,EAAAtoC,QAGE0oC,EAAAJ,EAAAtoC,IAGE4oC,EAAc5oC,GAOfA,EAAA,GAAA6oC,EAAA7oC,IAyBqB8oC,EAzBrBC,EAAA/oC,GA0BJgpC,MAAAF,GAAA,EAAAA,EAAA,GAhCI9oC,GAAA,SA+BqB8oC,EArBzB,OAAA9oC,EA9DIipC,CAAAX,EAAAK,EAAA3oC,qEAEK,SACN7D,EAASW,EAAA+iB,2EAIbqpB,IACE,IAAApuC,EAAOE,qHACL,SACe6qC,EAAA2B,0FAAT,SACNrrC,EAASW,EAAA+iB,kCAIbspB,EAMChB,GALC,IAAArtC,EAAOE,0LACL,SACA8B,EAAA+iB,oBAAA,SACA/iB,EAAA+iB,qCAIJupB,IACE,IAAAtuC,EAAOE,uHACC,SACNmtC,EAAAI,IAAMD,YAAAH,+EAAN,SACArrC,EAAA+iB,oBAAA,SACA/iB,EAAA+iB,gEASF6oB,EACEJ,EAAmBtoC,UACjBsoC,EAAO97B,OAAgB,SAAA27B,GACtB,OAAMA,EACTnoC,KAAA4O,gBAAA5O,EAAA4O,gBACHzO,OAAA,WAuBCkpC,WACGnwC,OAAIowC,EAAyB,cAA7BpwC,GACA+C,IAAI,0BACHC,KAAA,SAAAqtC,GACAC,EAAA,EAAOC,YAAAF,EAAoBE,YAC3BD,EAAA,EAAA5K,kBAAA2K,EAAA3K,kBACC1lC,OAAAwwC,EAAA,EAAAxwC,GAAA2R,kBAIL+9B,EAAY5oC,GACb,OAAAA,EAAA2pC,SAAA,IAAA3pC,EAAAG,OAAA,YAGC4oC,EAAgB/oC,GACjB,OAAAqG,SAAArG,EAAAilC,OAAA,gBAOC4D,EAAY7oC,GACb,OAAAA,EAAAilC,MAAA,EAAAjlC,EAAAG,OAAA,4BCvKD,iBAEe,sCCyBf,aAAAjL,EAAAC,EAAAC,EAAA,sBAAAw0C,IAAA10C,EAAAC,EAAAC,EAAA,sBAAAy0C,IAAkD30C,EAACC,EAAAC,EAAA,sBAAA00C,IAe5C,IAAMF,EAAc,UAEdC,EAAA,sBACXC,EAAoB,CACpB1wC,KAAkB,GAClBI,GAAG,GACHL,IAAA,CAAAC,KAAA,KAAAI,GAAA,iVChCF2rC,wEACEA,GACAA,EAAA,yBACAA,EAAA,kCACAA,EAAA,yBAJUA,EAKX,gDAqBMA,IAAmBA,EAAkB,SAC1C4E,EAAM,SAAYnmB,GAAU,OAC5B7U,KAAAo2B,EAAe6E,WAFkDvE,QAGhE7hB,IAGDqmB,EAAiB,SAACC,GAAc,OAChCn7B,KAAAo2B,EAAiBgF,eAFuD1E,QAGvEyE,IAGDE,EAAkB,SAAA79B,GAAqB,OACvCwC,KAAAo2B,EAAckF,sBAFgF5E,QAG7Fl5B,aAEH+9B,EAMC5mB,GALC,IAAA5oB,EAAOE,sKACC,SACN4oB,EAAS9mB,EAAA+iB,OACTgmB,EAASkE,EAAAnmB,sDAIb2mB,EAAA3mB,GACE,IAAA9oB,EAAOE,uHAEH,MAAO,GAAY9B,OAAAsxC,EAAA,EAAAtxC,GAAA8E,IAAA,gBAAA4lB,EAAAF,IAAA,CACnB9sB,MAAOgtB,EAAEhtB,MACTyU,QAAAuY,EAAAvY,gBAHI,SAKNqH,EAAA5V,EAAA+iB,OAGA5pB,EAAS,EAAAU,KAAA,gBAAe,CAAE,6EAI9B8zC,EAKC/mB,GAJC,IAAA5oB,EAAOE,iKACL,SACA8B,EAAA+iB,8DAIJ6qB,EAKChnB,GAJC,IAAA5oB,EAAOE,0LACC,SACNiR,EAASnP,EAAA+iB,kCAKX8qB,EAAO/gC,SACL,CACAtN,OAAQsN,EAAKtN,OACb07B,OAAMpuB,EAAKouB,OACXH,KAAAjuB,EAAUiuB,KACVc,WAAA/uB,EAAA+uB,qBAGJiS,EAuBCC,EAAAC,GAtBC,IAAAhwC,EAAOE,qIACC,EACA4oB,EAAA2kB,IAAmB3kB,oBAEd9mB,EAAItB,EAAA,EAAAooB,EAAA3X,aAAA4D,EAAA/S,EAAAkT,QAAAH,EAAAI,KAAAJ,EAAA/S,EAAAkT,QACbpG,EAAIiG,EAAKtT,OACP67B,YAKF2S,EAAAJ,EAAA/gC,GAEEihC,IAAQjhC,IACTmhC,EAAApS,WAAAmS,GAGFE,EAAApgC,KAAAmgC,uLAED,SACAn6B,EAAAiP,4BAAA,qCAIJorB,EAeCC,GAdC,IAAApwC,EAAOE,mIACC,EACA4oB,EAAA2kB,IAAmB3kB,oBAEd9mB,EAAItB,EAAA,EAAAooB,EAAA3X,aAAA4D,EAAA/S,EAAAkT,QAAAH,EAAAI,KAAAJ,EAAA/S,EAAAkT,QACbpG,EAAIiG,EAAKtT,OACP67B,WAASxuB,IAAAshC,GAGZF,EAAApgC,KAAA+/B,EAAA/gC,uLAED,SACAgH,EAAAiP,4BAAA,qCAIJsrB,EAsBCC,GArBC,IAAAtwC,EAAOE,mIACC,EACA4oB,EAAA2kB,IAAmB3kB,oBAEd9mB,EAAItB,EAAA,EAAAooB,EAAA3X,aAAA4D,EAAA/S,EAAAkT,QAAAH,EAAAI,KAAAJ,EAAA/S,EAAAkT,QACbpG,EAAIiG,EAAKtT,OACP67B,WAGH4S,EAAApgC,KAAA+/B,EAAA/gC,8GAGSgB,KAAO,CACftO,OAAQ8uC,EAAQ9uC,OAChB07B,OAAMoT,EAAQpT,OACdH,KAAAuT,EAAYvT,KACXc,WAAAyS,EAAAzS,yFAEH,SACA/nB,EAAAiP,4BAAA,wKC9JFwrB,EAAa9uC,GACd,OAAAA,EAAA1D,QAAA,+DAgBCyyC,EAAA,oBAPQA,IACAtwC,KAAA6b,MAAa00B,EAAG,EAChBvwC,KAAAtD,MAAA,GACAsD,KAAAwwC,iBAAmB,GACnBxwC,KAAAywC,SAAS,GACTzwC,KAAAxC,UAAA,KAGNwC,KAAK0wC,mBAAqB,GAC1B1wC,KAAKywC,SAAS,WAAgB,CAAA50C,KAAK,KAAM0F,MAAO,MAChDvB,KAAKywC,SAAe,eAAA50C,KAAA,MAAA0F,MAAA,OACrBvB,KAAA2wC,UAAA,GAqUF,SAlUQlwC,UAAYoP,KAAA,SAAU8gC,EAAAnzC,GAC3BwC,KAAK2wC,UAAYA,EACjB3wC,KAAKxC,UAAWA,EACjBwC,KAAA4wC,iBAGQnwC,UAAKowC,wBAA0B,WACvC,OAAA7wC,KAAAywC,SAAAK,WAAAvvC,0CAGC,IAAMO,UAGJpF,MAAIsD,KAAA2wC,UAAoB3gB,OAAK,SAAY+gB,EAACvxB,GAD1B,IAAUje,EAKzB,OAHCie,EAAIT,UAAqBS,EAAaT,QAAAiyB,UAFdzvC,EAEcie,EAAAT,QAAAxd,QAFW,KAAZA,MAGtCwvC,EAAAvxB,EAAAxa,MAAAwa,GAEIuxB,GAEP,IACE/wC,KAAMxC,UAAY,CAClB,IAAMY,EAAK4B,KAAKxC,UAAYY,KAAC6yC,UAAUprC,WAEnCrH,EAACwB,KAAQxC,UAAAgB,GAAAyyC,UAAAprC,gBAGTnJ,MAAS8D,EAA2B,KAAAR,KAAAtD,QAAAoF,EAAA,YACrCid,QACM,CAAAxd,MAAGnD,EAAAvC,KAAAuC,MACD,KAAI,CACZ2gB,QACD,CAAAxd,MAAA/C,EAAA3C,KAAA2C,IACHsD,QAIIrB,UAAYywC,gBAAU,SAAA1zC,GAC3BwC,KAAKxC,UAAWA,EACjBwC,KAAA4wC,iBAGMnwC,UAAM0wC,oBAA0B,SAAAC,GACtCpxC,KAAAtD,MAAA00C,EAAApsC,MAAAosC,KAGK3wC,UAAkB4wC,gBAAA,SAAAjtB,GAEtB,IAAIktB,EAAK,MACPtxC,KAAK2wC,cACH,IAAMvqC,EAAA,EAAQA,EAAGpG,KAAK2wC,UAAWxrC,OAAEiB,IAAA,CACnC,IAAIgrC,EAASpxC,KAAI2wC,UAAYvqC,GAClB,UAATgrC,EAASr9B,OAKe,OAAxBq9B,EAAOzsB,YAAkBysB,EAAgBzsB,aAAEP,EAC5CktB,IAAA7J,OAAA2J,EAAAE,SAC2C,IAAtCF,EAAKzsB,WAAgB7d,QAAC,MACxB9G,KAAAnC,QAAUuzC,EAAQzsB,cAAgBP,IACnCktB,IAAA7J,OAAA2J,EAAAE,WAMR,OAAAA,KAGK7wC,UAAY8wC,aAAe,SAAAhwC,SACtB,iBAAAA,EACR8uC,EAAA9uC,GAECA,aAAO2yB,OAAY,IAAA3yB,EAAA4D,OACpB,YAKF,IAHgBrE,EAAwBC,EAAAK,IAAAG,EAAA,SAAA+D,GACpC,UAAA+qC,EAAA/qC,GAAA,MAEJmB,KAAA,eAMQhG,UAAA+wC,yBAAgC,SAAYC,UACjDjsC,mBACKisC,GAAA5zC,QAAA,oBAAAkF,SACF,MAEE2uC,WAAW,GACX7rC,SAAA,IAEJ8rC,mBAIHlxC,UAAAwf,YAAA,SAAA1e,EAA2CwX,EAAAq4B,MAG3CA,EAAWA,GAAW,GACN,mBAAPr4B,EACR,OAAAA,EAAAxX,EAAA6vC,EAAApxC,KAAAigB,oBAGClH,OACE,WACS,iBAAAxX,EACR,OAAAqwC,EAAA,EAAAC,YAAAtwC,GAGD,IAAIuwC,EAAchxC,EAAcC,EAAAK,IAAAG,EAAAqwC,EAAA,EAAAC,oBACN,IAAxBC,EAAO3sC,OACR2sC,EAAA,GAEF,IAAAA,EAAArrC,KAAA,aAEC,SACD,OAAAzG,KAAAuxC,aAAAhwC,OAEC,aACe,iBAANA,EACRA,EAEFA,EAAAkF,KAAA,SAEC,oBACe,iBAANlF,EACRA,EAEFvB,KAAA+xC,mBAAAxwC,EAAA6vC,EAAApsC,UAEC,aACElE,EAAuBC,EAAA4E,QAAApE,GACxBA,EAAAkF,KAAA,KAEFlF,MAEC,OACD,OAAArF,KAAAC,UAAAoF,OAEC,uBAEET,EAA2CC,EAAA4E,QAAWpE,GACvDvB,KAAAwxC,yBAAA,IAAAjwC,EAAAkF,KAAA,UAEFzG,KAAAwxC,yBAAAjwC,kBAGGT,EAAmCC,EAAA4E,QAAApE,MAAA4D,OAAA,EACpC,IAAA5D,EAAAkF,KAAA,SAEFlF,MAKEd,UAAAuxC,mBAA+B,SAAAhtC,EAAAzD,GACrCvB,KAAAwwC,iBAAAxrC,GAAAzD,KAGMd,UAAMwxC,gBAAc,SAAAC,GACzBlyC,KAAM6b,MAAK8tB,UAAc,EACzB,IAAI5tB,EAAQ/b,KAAA6b,MAAA+tB,KAAAsI,UACVn2B,EAGiBA,EAACkuB,MAAA,GAAAr/B,KAAA,SAAAmR,GAAA,YAAA9V,IAAA8V,IAFnB,QAMStb,UAAQ0xC,eAAgB,SAAYD,GAC9C,IAAAltC,EAAWhF,KAAIiyC,gBAAgBC,GAChC,OAAAltC,QAAA,IAAAhF,KAAAtD,MAAAsI,MAEDvE,UAaC2xC,yBAAA,SAAAX,GAZC,IAAI3xC,EAAQE,YACVyxC,GAAO3wC,EAAIC,EAAAipC,SAAAyH,IAIbA,EAAK3wC,EAAoBC,EAAAoc,OAAAs0B,GACzBzxC,KAAA6b,MAAW8tB,UAAY,EACrB8H,EAAI5zC,QAAUmC,KAAK6b,MAAI,SAAaE,EAAIs2B,EAAKC,EAASC,EAAIC,UACxD1yC,EAAApD,MAAO21C,GAAAC,GAAAE,IAAA1yC,EAAkC2wC,SAAW4B,GAAAC,GAAUE,GAC/D,mCAAAz2B,EAAA,UAEAA,KATF01B,KAaGhxC,UAASgyC,YAAU,SAAArB,MACrBA,EAAOsB,SACR,OAAAtB,EAAAsB,aAED,IAAApkC,EAAa,GACXlI,EAAO,EAAKA,EAAAgrC,EAASlqC,QAAW/B,OAAOiB,IACxCkI,EAAAsB,KAAAwhC,EAAAlqC,QAAAd,GAAA7E,OAEF,OAAA+M,KAGO7N,UAAWkyC,iBAAK,SAAmBC,GACzC,IAAIC,EAAU7yC,KAAA0wC,mBAAAkC,UACZC,IAIH7yC,KAAA0wC,mBAAAkC,GAAA9xC,EAAAC,EAAA+xC,SAAAF,OAGOnyC,UAAYsyC,iBAAW,SAAcjJ,EAAA8I,EAAA90C,GAC3C,IAAIk1C,EAAYl1C,EAAAgsC,UACdkJ,EAIAJ,EACD5yC,KAAA2yC,iBAAAC,EAAA5yC,CAAAgzC,EAAAzxC,OAGFyxC,EAAAzxC,MAPE,QASHd,UAwCC5C,QAAA,SAAA2W,EAAA1W,EAAAib,GAvCC,IAAIjZ,EAAOE,YACTwU,GAKFxU,KAAA6b,MAAO8tB,UAAe,EACpBn1B,EAAM3W,QAAYmC,KAAO6b,MAAI,SAAaE,EAAAs2B,EAAAC,EAAAC,EAAAC,EAAAI,EAAAK,GAC1C,IAAMnJ,EAAWuI,GAAWC,GAAAE,EACtBpB,EAAUtxC,EAAIpD,MAAQotC,GAExB1F,EAAAmO,GAAYU,GAAAl6B,KACdjb,EAAW,CACX,IAAIo1C,EAAKpzC,EAASizC,iBAAcjJ,EAAW8I,EAAA90C,MACzCo1C,QACD,OAAApzC,EAAAmgB,YAAAizB,EAAA9O,EAAAgN,OAIDA,EACD,OAAAr1B,EAGD,IAAIo3B,EAAarzC,EAAA0wC,iBAAAY,EAAAryB,QAAAxd,UACf4xC,EACD,OAAArzC,EAAAmgB,YAAAkzB,EAAA/O,EAAAgN,GAGD,IAAI7vC,EAAK6vC,EAAWryB,QAAQxd,aAC1BzB,EAAKszC,WAAQ7xC,KACbA,EAAAzB,EAAA2yC,YAAArB,GAEEA,EAAOsB,UACR5yC,EAAAjC,QAAA0D,GAIOzB,EAACmgB,YAAA1e,EAAA6iC,EAAAgN,MAnCZ58B,KAwCM/T,UAAU2yC,WAAa,SAAM7xC,GACrC,iBAAAA,GAAA2yB,MAAAvuB,QAAApE,IAAA,WAAAA,EAAA,MAEDd,UAyBC4yC,gBAAA,SAAA7+B,EAAA1W,GAxBC,IAKIszC,EALAtxC,EAAOE,YACTwU,GAMFxU,KAAA6b,MAAO8tB,UAAe,EACpBn1B,EAAI3W,QAAYmC,KAAA6b,MAAA,SAAAE,EAAAs2B,EAAAC,EAAAC,EAAAC,MACd10C,EAAY,CACZ,IAAImlB,EAAQnlB,EAAAu0C,GAAAC,GAAAE,MACVvvB,EACD,OAAAA,EAAApnB,UAIHu1C,EAAKtxC,EAAUpD,MAAA21C,GAAAC,GAAAE,IAEd,OAAAz2B,EAID,IAAAxa,EAAOzB,EAAO0wC,iBAAqBY,EAAQryB,QAASxd,OACnD,uBAAAA,IAAA6vC,EAAAryB,QAAAljB,QArBF2Y,KAyBD/T,UAAA6yC,yBAAC,SAAUzvB,EAAC/lB,KAC4BiD,EAAI44B,KAAC35B,KAAK2wC,UAAQ,SAAAS,MACtDtzC,QAA2C,IAA7BA,EAAUszC,EAAMpsC,MAAa,IACzClH,EAAOszC,EAAApsC,MAAAuuC,YACR,OAEF1vB,EAAA,OAAAutB,EAAApsC,MAAAlH,EAAAszC,EAAApsC,MAAAzD,UACC,IACE6vC,EAAOmC,YACR,OAEF1vB,EAAA,OAAAutB,EAAApsC,MAAAosC,EAAAoC,uBAKK/yC,UAAAsxC,mBAAA,SAAAxwC,EAAE6vC,GAQX,SAPOtwC,EAAaC,EAAAK,IAAAG,EAAA,SAAA+D,EAAA5I,UACR,IAAPA,EACD00C,EAAA,IAAA9rC,EAEAA,KAGJmB,KAAA,MACF6pC,EAzUC,0DCtBF,IAAA5tC,EAAA,gEAEAC,OAAAC,QAAAC,uDADA,4xDCkBE,IAAMwjB,EAAAvkB,EAA0BspB,EAAGvW,EAE7B4+B,EAAA,GACJC,EAAQx1C,OAAAy1C,EAAA,oBAAAz1C,CAAA,QACN,CACDme,SAAAu3B,EAAAv3B,oBAGE,IAAMw3B,EAAMrzC,EAAA,EAAAszC,GAAAC,EAAAF,EAAA7+B,QAAA++B,EAAA9+B,KAAA8+B,EAAAF,EAAA7+B,OAAA,CACP,IAAA5N,EAAA2sC,EAAAxyC,MACJ4V,EAAYjZ,OAAA81C,EAAA,aAAA91C,CAAAkJ,GAAA+P,aACdA,OAIA88B,EAAU,SAAStgC,kCAElB,qBAIC2E,EAAQpa,OAAAy1C,EAAS,aAATz1C,CAAS,CACjBg2C,OAAQ/8B,EACRg9B,OAAAxgC,EACCic,cAAAokB,EAAA,cAAAI,UAGD97B,EAAMnT,OAAA,EAAW,CACjB,IAAIkvC,EAAAn2C,OAAkB81C,EAAiB,YAAnC91C,CAAmC,CAAAyV,QAAAub,SAAA0kB,EAAA72B,QAEnCu3B,OAAqB,EACvBV,EAAA72B,UACQ62B,EAAmB72B,MAAA3b,IAAiB,SAAAmzC,GAE1C,IAAAC,EAAOd,EAAAW,EAAAE,IAKN,OAAA/zC,EAAA,KAAAg0C,EAAA,CAAA34C,KAAA24C,EAAA34C,KAAAD,MAAA24C,WAKDE,EAAEC,EAAA/gC,EAAA3O,OAAA0vC,EAAA/gC,EAAA3O,MAAAkG,MACAhN,OAAAy1C,EAAuB,yBAAvBz1C,CAAuBw2C,EAAA/gC,EAAA3O,MAAAkG,OAEvByoC,EAAM,OAAAF,EAAAtuC,OAAAwuC,EAAA,OAAAxuC,UACVyK,KAAO,CACPpO,MAAMmS,EAAM3O,KACZwD,KAAK8P,EACLpN,MAAMupC,EACNjkC,KAAA8jC,EACAK,WAAO,QACL,CACDj4C,MAAAg4C,EAAA/gC,EAAA3O,OAAA0vC,EAAA/gC,EAAA3O,MAAAuW,OAAA,eAzCF,IAAMxG,GAAKqW,OAAA,EAAA5qB,EAAA,EAAA4G,EAAA0M,SAAA8B,EAAAb,EAAAC,QAAAY,EAAAX,KAAAW,EAAAb,EAAAC,OAAA,CA4Cfi/B,EA5CUr+B,EAAKrU,6MAgDlB,OAAAkyC,yBCjFF,IAAA/wC,EAAA,sDAEAC,OAAAC,QAAAC,uDADA,guZCFA,iBAAA+xC,EAGC16C,EAAAC,EAAAC,EAAA,sBAAAw6C,aAFCA,GACAA,IAAA,6BAFUA,EAAWA,EAGtB,+DCFD,IAAAlyC,EAAA,qDAEAC,OAAAC,QAAAC,uDADA,+xBCFA,iBAAAgyC,EAOAC,EAPA56C,EAAAC,EAAAC,EAAA,sBAAA26C,IAAA76C,EAAAC,EAAAC,EAAA,sBAAA46C,IAAA96C,EAAAC,EAAAC,EAAA,sBAAA66C,IAKC/6C,EAAAC,EAAAC,EAAA,sBAAA86C,aAJCL,GACAA,EAAe,kDACfA,EAAA,cACAA,EAAA,cAJUA,EAAA,WAAU,cAOtBA,IAQCA,EAAA,cAPCC,GACAA,EAAa,gDACbA,EAAA,YACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,aAAe,eAPLA,EAAA,eAULA,IAAkBA,EAAG,SAC1BC,EAAA,EAEEl5C,KAAK,QACL0F,MAAA,cACA4zC,WAAW,CAAEL,EAAWM,MAACN,EAAYO,OAAWP,EAAMQ,MAAAR,EAAAS,cACvDC,YAAA,CAAAX,EAAAY,WAAAZ,EAAAa,SAGC75C,KAAK,OACL0F,MAAA,aACA4zC,WAAW,CAAEL,EAAWM,MAACN,EAAYO,OAAWP,EAAMQ,OACvDE,YAAA,CAAAX,EAAAY,WAAAZ,EAAAa,SAGC75C,KAAK,cACL0F,MAAA,oBACA4zC,WAAW,CAAEL,EAAWM,MAAON,EAAAO,OAAAP,EAAAQ,OAChCE,YAAA,CAAAX,EAAAc,SAGC95C,KAAK,aACL0F,MAAA,8BACE,CACAuzC,EAAWM,MACXN,EAAWO,OACXP,EAAWQ,MACXR,EAAWS,aACXT,EAAWc,OACXd,EAAWe,uBACZf,EAAAgB,MAEFN,YAAA,CAAAX,EAAAc,SAGC95C,KAAK,MACL0F,MAAA,YACA4zC,WAAW,CAAEL,EAAWM,MAAMN,EAAYO,OAAOP,EAAAQ,OAClDE,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,SAGC75C,KAAK,MACL0F,MAAA,YACA4zC,WAAW,CAAEL,EAAWM,MAAMN,EAAYO,OAAOP,EAAAQ,OAClDE,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,SAGC75C,KAAK,OACL0F,MAAA,aACA4zC,WAAW,CAAEL,EAAWM,MAAMN,EAAYO,OAAOP,EAAAQ,OAClDE,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,SAGC75C,KAAK,QACL0F,MAAA,cACA4zC,WAAW,CAAEL,EAAWM,MAAMN,EAAYO,OAAOP,EAAAQ,MAAAR,EAAAgB,MAClDN,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,SAGC75C,KAAK,MACL0F,MAAA,YACA4zC,WAAW,CAAEL,EAAWM,MAAMN,EAAYO,OAAOP,EAAAQ,MAAAR,EAAAS,cAClDC,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,SAGC75C,KAAK,SACL0F,MAAA,eACA4zC,WAAW,CAAEL,EAAWM,MAAMN,EAAYO,OAAOP,EAAAQ,OAClDE,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,SAGC75C,KAAK,aACL0F,MAAA,mBACA4zC,WAAW,CAAEL,EAAWgB,MACzBN,YAAA,CAAAX,EAAAc,SAGC95C,KAAK,cACL0F,MAAA,oBACA4zC,WAAW,CAAEL,EAAWgB,MACzBN,YAAA,CAAAX,EAAAc,SAGC95C,KAAK,gBACL0F,MAAA,sBACA4zC,WAAW,CAAEL,EAAWgB,MACzBN,YAAA,CAAAX,EAAAc,SAGC95C,KAAK,gBACL0F,MAAA,sBACA4zC,WAAW,CAAEL,EAAWS,cACzBC,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,SAGC75C,KAAK,gBACL0F,MAAA,sBACA4zC,WAAW,CAAEL,EAAWS,cACzBC,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,SAGC75C,KAAK,gBACL0F,MAAA,sBACA4zC,WAAW,CAAEL,EAAWS,cACzBC,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,SAGC75C,KAAK,gBACL0F,MAAA,sBACA4zC,WAAW,CAAEL,EAAWS,cACzBC,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,SAGC75C,KAAK,iBACL0F,MAAA,uBACA4zC,WAAW,CAAEL,EAAWM,MAAMN,EAAYO,OAAOP,EAAAQ,OAClDE,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,SAIDV,EAAA,EAEEn5C,KAAK,OACL0F,MAAA,yBACE,CACAuzC,EAAWM,MACXN,EAAWO,OACXP,EAAWQ,MACXR,EAAWS,aACXT,EAAWgB,KACZhB,EAAAc,QAEFJ,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,MAAAb,EAAAY,WAAAZ,EAAAkB,2BAGCl6C,KAAK,OACL0F,MAAA,cACA4zC,WAAW,CAAEL,EAAWM,MAAMN,EAAYO,OAAOP,EAAAQ,MAAAR,EAAAS,cAClDC,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,SAGC75C,KAAK,MACL0F,MAAA,aACA4zC,WAAW,CAAEL,EAAWM,MAAMN,EAAYO,OAAQP,EAAWQ,OAC9DE,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,MAAAb,EAAAY,WAAAZ,EAAAkB,2BAGCl6C,KAAK,MACL0F,MAAA,aACA4zC,WAAW,CAAEL,EAAWM,MAAMN,EAAYO,OAAQP,EAAWQ,OAC9DE,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,MAAAb,EAAAY,WAAAZ,EAAAkB,2BAGCl6C,KAAK,MACL0F,MAAA,aACA4zC,WAAW,CAAEL,EAAWM,MAAMN,EAAYO,OAAQP,EAAWQ,MAAAR,EAAYS,cAC1EC,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,MAAAb,EAAAY,WAAAZ,EAAAkB,2BAGCl6C,KAAK,YACL0F,MAAA,gBACA4zC,WAAW,CAAEL,EAAWM,MAAMN,EAAYO,OAAQP,EAAWQ,MAAAR,EAAYS,cAC1EC,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,MAAAb,EAAAY,WAAAZ,EAAAkB,2BAGCl6C,KAAK,QACL0F,MAAA,0BACE,CACAuzC,EAAWM,MACXN,EAAWO,OACXP,EAAWQ,MACXR,EAAWS,aACXT,EAAWgB,KACZhB,EAAAc,QAEFJ,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,MAAAb,EAAAY,cAGC55C,KAAK,aACL0F,MAAA,oBACA4zC,WAAW,CAAEL,EAAWgB,MACzBN,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,SAGC75C,KAAK,cACL0F,MAAA,qBACA4zC,WAAW,CAAEL,EAAWgB,MACzBN,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,SAGC75C,KAAK,kBACL0F,MAAA,uBACA4zC,WAAW,CAAEL,EAAWM,MAAMN,EAAYO,OAAQP,EAAWQ,MAAAR,EAAWS,cACzEC,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,MAAAb,EAAAY,cAGC55C,KAAK,kBACL0F,MAAA,uBACA4zC,WAAW,CAAEL,EAAWM,MAAMN,EAAYO,OAAQP,EAAWQ,MAAAR,EAAWS,cACzEC,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,MAAAb,EAAAY,cAGC55C,KAAK,kBACL0F,MAAA,uBACA4zC,WAAW,CAAEL,EAAWM,MAAMN,EAAYO,OAAQP,EAAWQ,MAAAR,EAAWS,cACzEC,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,MAAAb,EAAAY,cAGC55C,KAAK,iBACL0F,MAAA,uBACA4zC,WAAW,CAAEL,EAAWM,MAAMN,EAAYO,OAAQP,EAAWQ,MAAAR,EAAWS,cACzEC,YAAA,CAAAX,EAAAc,MAAAd,EAAAa,MAAAb,EAAAY,cAIDR,EAAQ,CACR,CAAEp5C,KAAM,eAAA0F,MAAoB,gBAC5B,CAAE1F,KAAM,mBAAmB0F,MAAE,oBAC7B,CAAE1F,KAAM,KAAM0F,MAAO,QACrB,CAAE1F,KAAM,KAAM0F,MAAO,SACrB,CAAE1F,KAAM,KAAK0F,MAAO,SACpB,CAAE1F,KAAM,MAAO0F,MAAO,SACtB,CAAE1F,KAAM,MAAM0F,MAAO,UACrB,CAAE1F,KAAM,KAAM0F,MAAO,UACrB,CAAE1F,KAAM,KAAM0F,MAAO,UACrB,CAAE1F,KAAM,KAAM0F,MAAO,WACrB,CAAE1F,KAAM,KAAM0F,MAAO,WACrB,CAAE1F,KAAM,KAAM0F,MAAO,YACrB,CAAA1F,KAAA,KAAA0F,MAAA,aAGA2zC,EAAW,CACXc,IAAI,OACJC,GAAG,QACHxwC,EAAG,IACHkD,IAAG,IACH4zB,EAAG,IACHpiC,EAAE,IACF+7C,GAAI,KACJC,GAAI,KACJC,GAAA,KACAC,QAAM,UACNC,KAAM,SACNC,OAAK,MACLC,IAAA,mCCpQF,IAAA9zC,EAAA,kDAEAC,OAAAC,QAAAC,uDADA,2kDCDA,IAAAH,EAAA,0CAEAC,OAAAC,QAAAC,uDADA,gnDCDA,IAAAH,EAAA,uEAEAC,OAAAC,QAAAC,uDADA,yWCDA,IAAAH,EAAA,2DAEAC,OAAAC,QAAAC,uDADA,yzKCwBE4zC,EAAmC,oBAAnCC,EAmBCluC,GAnBmB,IAAA1I,EAAAE,KAHZA,KAAAwI,KAAKA,EAIXxI,KAAMtD,MAA2B,eAE/Bu3C,EAAW,SAAQ7tC,GACnB,IAAMuN,EAAMnL,EAAGsL,OAAA1N,GACbuwC,EAAO,WACP,OAAAhjC,EAAArF,OAAArN,IAAAnB,EAAApD,QAEAkJ,EAAAqO,eAAON,EAAkB3O,cACvByN,eAAgB7M,EAAA+N,EAAA3O,KAAA,CAChB4xC,YAAW,EACV31C,IAAA01C,WAGHlkC,eAAiB7M,EAAAQ,EAAA,CACjBwwC,YAAW,EACV31C,IAAA01C,OAdK,EAAAvwC,EAAAoC,EAAAsL,OAAA3O,OAAAiB,IAeT6tC,EAAA7tC,GAEFpG,KAAA4F,MAgCF,6BA9BC8wC,EAAAj2C,UAAA,iBACE,WACD,OAAAT,KAAAwI,oBAAAquC,cAAA,0BAEDH,EAAAj2C,UAAA,cACE,WACD,OAAAT,KAAAwI,KAAArD,sBAAA0xC,cAAA,MAGWp2C,UAAOQ,IAAA,SAAAqwB,GAElB,OADCtxB,KAAAtD,MAAY40B,EACbtxB,KAAA4F,OAGkBnF,UAAGkS,QAAA,eACpB,IAAAmkC,EAAU,GACJ1wC,EAAK,EAAAA,EAAApG,KAAAwI,KAAArD,OAAAiB,IACV0wC,EAAAlnC,KAAA6W,EAAA,KAAAzmB,KAAAiB,IAAAmF,KAEF,OAAA0wC,KAGQr2C,UAAYmS,OAAG,WACvB,OAAA5S,KAAA2S,aAGWlS,UAAUs2C,WAAU,SAAaC,OACzC,IAAA5wC,EAAS,EAAAA,EAAKpG,KAAOwI,KAACrD,OAAAiB,IACvB4wC,EAAAh3C,KAAAiB,IAAAmF,KAEJswC,EAnDoC,eCdnCO,EAA2B,oBAL3BC,EAA6B1uC,GAErBxI,KAAA8T,OAAA,GACA9T,KAAAm3C,YAAmD,GAGzDn3C,KAAKo3C,YAAc,GAKnBp3C,KAAK8T,OAAStL,EAAGsL,OAAQ1S,IAAA,SAAeuS,EAAK2d,GAAA,OAAA7K,EAAA,KAAA9S,EAAA,CAAAjX,MAAA40B,UAC3C,IAAMlrB,EAAK,EAAGA,EAAIoC,EAACsL,OAAU3O,OAAAiB,IAAA,CAC7B,IAAAuN,EAAAnL,EAAAsL,OAAA1N,MAEEuN,EAAOI,OAAGxW,EAAA,UAAAkW,MAAA,CACV,IAAIuC,EAAG9X,OAAAX,EAAA,uBAAAW,CAAAyV,GACLqC,IACDrC,EAAAI,KAAAiC,GAGDhW,KAAKo3C,YAAYzjC,EAAMI,QACxB/T,KAAAo3C,YAAAzjC,EAAAI,MAAA,IAMD/T,KAAIo3C,YAAKzjC,EAAYI,MAAMnE,KAAO6W,EAAA,KAAA9S,EAAA,CAAAjX,MAAA0J,KAChCpG,KAAAm3C,YAAaxjC,EAAA3O,MACdkR,QAAAC,KAAA,uCAAAxC,EAAA3O,MAEAhF,KAAAm3C,YAAAxjC,EAAA3O,MAAAyhB,EAAA,KAAA9S,EAAA,CAAAjX,MAAA0J,KAsCN,SAjCQ3F,UAAM42C,UAAA,SAAAtjC,OACTA,EACD,OAAA0S,EAAA,EAAAzmB,KAAA8T,QAED,IAAIA,EAAQ9T,KAAAo3C,YAAArjC,UACVD,EACD2S,EAAA,EAAA3S,GAEF,MAGOrT,UAAa62C,eAAiB,SAACvjC,GACrC,IAAA8b,EAAY7vB,KAAIo3C,YAAYrjC,GAC7B,OAAA8b,KAAA1qB,OAAA,KAGU1E,UAAQ82C,oBAAkB,SAAAxjC,GACnC,IAAI+iC,EAAG92C,KAAQo3C,YAAYrjC,MACzB+iC,GAAOA,EAAI3xC,OAAG,EACf,OAAA2xC,EAAA,MAKMr2C,UAAO+2C,cAAkB,SAAAxyC,GACjC,QAAAhF,KAAAm3C,YAAAnyC,MAMQvE,UAAKg3C,eAAkB,SAAAzyC,GAC/B,OAAAhF,KAAAm3C,YAAAnyC,IACFkyC,EAjE4B,2BCAmBQ,EAAA,SAAmB93C,cAE/DsH,UACEtH,EAAOG,KAAIC,UAAAiG,EAAA,SAAAuM,GAIX,WAAAmlC,EAAA,EAAAlxB,EAAA,KAAAvf,EAAA,CAAAsL,eACHxS,KAR6C,OAC9CymB,EAAY,EAAAmxB,EAAwBh4C,GADUg4C,EAAA,kBCZhD19C,EAAAC,EAAAC,EAAA,sBAAAq8C,IAAAv8C,EAAAC,EAAAC,EAAA,sBAAA68C,IAAA/8C,EAAAC,EAAAC,EAAA,sBAAAs9C,IAAAx9C,EAAAC,EAAAC,EAAA,sBAAAy9C,EAAA,IAAA39C,EAAAC,EAAAC,EAAA,sBAAAy9C,EAAA,IAAA39C,EAAAC,EAAAC,EAAA,sBAAA63B,EAAA,IAAA/3B,EAAAC,EAAAC,EAAA,sBAAA63B,EAAA,IAAA/3B,EAAAC,EAAAC,EAAA,sBAAA63B,EAAA,IAAA/3B,EAAAC,EAAAC,EAAA,sBAAA63B,EAAA,IAAA/3B,EAAAC,EAAAC,EAAA,sBAAA63B,EAAA,IAAA/3B,EAAAC,EAAAC,EAAA,sBAAA63B,EAAA,IAAA/3B,EAAAC,EAAAC,EAAA,sBAAA63B,EAAA,IAAA/3B,EAAAC,EAAAC,EAAA,sBAAA63B,EAAA,IAAA/3B,EAAAC,EAAAC,EAAA,sBAAA63B,EAAA,IAAA/3B,EAAAC,EAAAC,EAAA,sBAAA63B,EAAA,IAAA/3B,EAAAC,EAAAC,EAAA,sBAAA63B,EAAA,IAAgC/3B,EAAAC,EAAAC,EAAA,sBAAA63B,EAAA,w+FCyEhCjI,EAAAlrB,SAAAoD,cAAA,uBAGA6E,EAAAijB,GAAAhf,IAAA,CAAAgvB,UAAA,MAAA8d,SAAA,WAAAhd,KAAA,EAAAid,IAAA,iBAKA/tB,EAAAguB,YAAA,CACA,IAAAr1C,OAAAs1C,mBAGA,UAAA7hC,MAAA,yMAFK4T,EAAArnB,OAAAs1C,mBAAAC,YAAAluB,wDAmBLmuB,EAAAx1C,OAAAw1C,kBAAA,EACAC,EACAnxC,EAAAoxC,8BACApxC,EAAAqxC,2BACArxC,EAAAsxC,0BACAtxC,EAAAuxC,2GAWAx4C,KAAAy4C,cAAA,kBAMAz4C,KAAA04C,WAAA,GACA14C,KAAA24C,eAAAh2C,OAAAi2C,kBAAAj2C,OAAAi2C,mBAAA,GAoYA,SAAAC,EAAAt2C,EAAAu2C,EAAAC,EAAAppC,GAMA,IAAAvI,EAAA,GACAF,EAAA,CAEA8xC,OAAA,oDACAhpC,OAAA,CACA5D,MAAA,EACA6sC,UAAA,EACAC,eAAA,KACAC,oBAAA,OACAC,UAAA,KACAtB,SAAA,KACA5vC,OAAA,EACA4F,gBAAA,KACAurC,kBAAA,IACiBC,OAAA,MAEjBnf,MAAA,CACA/tB,KAAA,KACA0rC,SAAA,SACA/c,KAAA,KACA5yB,KAAA,KACA+C,MAAA,KACAquC,UAAA,KACAh7B,UAAA,KACAi7B,iBAAA,KACA7wC,IAAA,KACAV,IAAA,KACAwxC,gBAAA,KACA9R,MAAA,KACA+R,cAAA,KACAC,WAAA,KACAC,YAAA,KACAC,aAAA,KACAC,WAAA,KACAC,mBAAA,KACAr9B,aAAA,KACAmrB,SAAA,KACiBC,YAAA,MAEjB3rB,MAAA,CACAs9B,gBAAA,IACiB3B,SAAA,QAEjBkC,MAAA,GACA99B,MAAA,GACA9U,OAAA,CACAkR,OAAA,CACAlM,MAAA,EACAjC,OAAA,EACAwD,UAAA,EACA6B,MAAA,EACA4N,UAAA,UACqB68B,OAAA,UAErBthC,MAAA,CAGAhL,UAAA,EACA6B,MAAA,EACA4N,UAAA,KACAnE,OAAA,GAIAJ,KAAA,CACAzM,MAAA,EACAuB,UAAA,EACAusC,SAAA,EACA1qC,MAAA,EACA4N,UAAA,KACA+8B,MAAA,OACAvhC,YAAA,EACqBwhC,MAAA,GAErBC,WAAA,EACiBC,eAAA,MAEjB7sC,KAAA,CACArB,MAAA,EACAmuC,WAAA,EACArvC,MAAA,UACA4C,gBAAA,KACAJ,YAAA,KACA6rC,UAAA,KACArxC,OAAA,EACAgE,YAAA,EACAsuC,mBAAA,EACAC,WAAA,EACA7sC,YAAA,EACA8sC,gBAAA,KACAC,SAAA,KACAC,cAAA,UACAC,kBAAA,EAEAC,WAAA,EACAC,WAAA,EACAC,eAAA,EACiBC,kBAAA,IAEjBC,YAAA,CACiBC,sBAAA,QAEJrrC,MAAA,IAEbsrC,EAAA,KACAC,EAAA,KACArf,EAAA,KACA10B,EAAA,KAAAg0C,EAAA,KACAtB,EAAA,GAAA99B,EAAsB,GACtBye,EAAA,CAAAG,KAAA,EAAAygB,MAAA,EAAAxD,IAAA,EAAA9/B,OAAA,GACAujC,EAAA,EAAAC,EAAA,EACA3rC,EAAA,CACAC,eAAA,GACA2rC,eAAA,GACAnkC,kBAAA,GACAokC,cAAA,GACAC,aAAA,GACAtuC,eAAA,GACAuuC,WAAA,GACA1rC,KAAA,GACA4rB,WAAA,GACAI,YAAA,GACSK,SAAA,WAgFT,SAAAsf,EAAAC,EAAAhS,GACAA,EAAA,CAAA1iC,GAAAogC,OAA2BsC,GAC3B,QAAA3jC,EAAA,EAAAA,EAAA21C,EAAA52C,SAAAiB,EACA21C,EAAA31C,GAAAojB,MAAAxpB,KAAA+pC,GAoKA,SAAAiS,EAAA7hD,GACAiN,EAKA,SAAAjN,GAEA,IADA,IAAAud,EAAA,GACAtR,EAAA,EAAAA,EAAAjM,EAAAgL,SAAyCiB,EAAA,gCAGzC,MAAAjM,EAAAiM,GAAAoC,MACA/C,EAAA+C,KAAArO,EAAAiM,GAAAoC,0CAKArO,EAAAiM,GAAAoC,KAAA/C,EAAA+C,MAGA/C,EAAA+C,KAAArO,EAAAiM,GACAsR,EAAA9H,KAAAnK,GAGA,OAAAiS,EAvBAukC,CAAA9hD,oCAoHA,IAAAiM,EAAA,EAAAA,EAAAgB,EAAAjC,SAAAiB,EAAA,CACA,IAAA81C,EAAA90C,EAAAhB,GAAA8E,MACA,MAAAgxC,IACAC,IACA,iBAAAD,KAAAE,IACAA,EAAAF,IAQAC,GAAAC,IACAD,EAAAC,EAAA,GAMA,IAAAr5C,EAAAi2C,EAAA,GAAAqD,EAAAn1C,EAAA8xC,sEAeA5yC,EAAAk2C,GAAA,GAAAl2C,IAGyBm2C,EAFzBA,GAAA,EACAA,EAAA,IACyBA,EAAA,GACJ,GACrBA,GAGAvD,EAAA5yC,GAAArD,EAAAq5B,MAAA,QAAAmgB,GAKA,IAAuB92C,EAAvB+2C,EAAuB,EACvB,IAAAp2C,EAAA,EAAAA,EAAAgB,EAAAjC,SAAAiB,EAAA,CAYA,GARA,eAAA8E,OACAzF,EAAAyF,MAAA8tC,EAAAwD,GAAA32C,aACA22C,GAEA,iBAAA/2C,EAAAyF,uCAIA,MAAAzF,EAAAkT,MAAAvM,KAAA,CACA,IAAApG,EAAAoG,GAAA,EACA,IAAApG,KAAAP,EACA,GAAAA,EAAAO,IAAAP,EAAAO,GAAAoG,KAAA,CACAA,GAAA,EACA,MAEAA,IACA3G,EAAAkT,MAAAvM,MAAA,GAMA,MAAA3G,EAAAkT,MAAAyhC,OACA30C,EAAAkT,MAAAyhC,OAAA30C,EAAAkT,MAAAnJ,MAIA/J,EAAA00B,MAAAsiB,EAAAzC,EAAA0C,EAAAj3C,EAAA,MACAA,EAAA0W,MAAAsgC,EAAAvgC,EAAAwgC,EAAAj3C,EAAA,OApMAk3C,GAwMA,WACA,IAGAv2C,EAAA2I,EAAAhJ,EAAAoS,EACA1S,EAAA6S,EAAAF,EAAA9S,EAAAyQ,EAAAywB,MAJAoW,EAAAj+B,OAAAk+B,kBACAC,EAAAn+B,OAAAo+B,kBACAC,EAAAr+B,OAAAC,UAKA,SAAAq+B,EAAAhhC,EAAAtT,EAAAV,GACAU,EAAAsT,EAAAM,SAAA5T,IAAAq0C,IACA/gC,EAAAM,QAAA5T,GACAV,EAAAgU,EAAAO,SAAAvU,GAAA+0C,IACA/gC,EAAAO,QAAAvU,GAUA,IAPAlB,EAAA4yB,KAAAujB,IAAA,SAAAC,EAAAlhC,GAEAA,EAAAM,QAAAqgC,EACA3gC,EAAAO,QAAAsgC,EACa7gC,EAAA2d,MAAA,IAGbxzB,EAAA,EAAAA,EAAAgB,EAAAjC,SAAAiB,GACAX,EAAA2B,EAAAhB,2BAGA01C,EAAAhsC,EAAA4rC,eAAA,CAAAj2C,IAAA+C,KAAA/C,EAAAqP,aAIA,IAAA1O,EAAA,EAAAA,EAAAgB,EAAAjC,SAAAiB,EAAA,CAMA,UAHAoC,EAAA/C,EAAA+C,8BAGA,CAMA,IALAuQ,EAAA,IAEAnJ,KAAA,CAAiCpF,GAAA,EAAAyI,QAAA,EAAAmqC,UAAA,yCAGjC33C,EAAA+R,OAAA/R,EAAAoT,KAAAzM,MAAA3G,EAAAkT,MAAAvM,MAAA3G,EAAAkT,MAAAnJ,KAAA,CACA,IAAA6tC,KAAqC53C,EAAAoT,KAAAzM,MAAA3G,EAAAoT,KAAAuhC,MAAA30C,EAAAkT,MAAAvM,MAAA3G,EAAAkT,MAAAyhC,MACrCrhC,EAAAnJ,KAAA,CAAAnF,GAAA,EAAAwI,QAAA,EAAAmqC,UAAA,EAAAE,aAAA,EAAAD,cACA53C,EAAAoT,KAAAD,oBACAG,IAAA5T,OAAA,GAAAsF,EACAsO,IAAA5T,OAAA,GAAAqF,GAAA,GAIA/E,EAAAqP,WAAAiE,SAGA,GAA6B,MAA7BtT,EAAAqP,WAA6BuD,UAA7B,iCAKAD,EAAA3S,EAAAqP,WAAAuD,gCAGA,IAAAklC,EAAA93C,EAAAkT,MAAAvM,MAAA3G,EAAAkT,MAAAM,MAGA,iCAAAlK,EAAAhJ,EAAA,EAAAgJ,EAAAvG,EAAArD,SAAA4J,EAAAhJ,GAAAqS,EAAA,CAGA,IAAAolC,EAAA,eACA,IAAAA,EACA,IAAArlC,EAAA,EAAAA,EAAAC,IAAAD,EACA7S,EAAAkhC,EAAAruB,cAIApC,EAAA9C,QAA+C,MAAA3N,IAC/CA,KACA0oC,MAAA1oC,GACAA,EAAA,KACAA,GAAAm4C,IACAn4C,EAAA03C,EACA13C,IAAAm4C,MACAn4C,GAAA03C,IAGA,MAAA13C,IACAyQ,EAAAqnC,iBAGA,MAAArnC,EAAAunC,eACAh4C,EAAAyQ,EAAAunC,gBAIAhlC,EAAAvS,EAAAoS,GAAA7S,EAIA,GAAAk4C,EACA,IAAArlC,EAAA,EAAAA,EAAAC,IAAAD,EAEA,OADA7S,EAAAgT,EAAAvS,EAAAoS,MAIA,KAFApC,EAAAgD,EAAAZ,IAEAklC,YACAtnC,EAAAvL,GACAyyC,EAAAx3C,EAAA00B,MAAA70B,KAEAyQ,EAAAtL,GACAwyC,EAAAx3C,EAAA0W,MAAA7W,MAIAgT,EAAAvS,EAAAoS,GAAA,KAIA,GAAAolC,GAAAx3C,EAAA,KAAAy3C,GAAA,MAAAllC,EAAAvS,EAAAqS,IAAA,CAEA,IAAAD,EAAA,EAAAA,EAAAC,IAAAD,qCAOAqlC,eAIAz3C,GAAAqS,KAMA,IAAAhS,EAAA,EAAAA,EAAAgB,EAAAjC,SAAAiB,EAAA,CAMA,GALAX,EAAA2B,EAAAhB,GACAkS,EAAA7S,EAAAqP,WAAAwD,gCAI6B,eAA7B7S,EAAA8Y,UACA,IAAAxP,EAAA,EAAAA,EAAAuJ,EAAAnT,OAAA4J,GAAAqJ,EACA,MAAAE,EAAAvJ,KAGAzJ,EAAAgT,EAAAvJ,EAAA,GACAuJ,EAAAvJ,EAAA,IAAAzJ,GAIAw2C,EAAAhsC,EAAAyH,kBAAA,CAAA9R,IAAAqP,aAIA,IAAA1O,EAAA,EAAAA,EAAAgB,EAAAjC,SAAAiB,EAAA,CACAX,EAAA2B,EAAAhB,GACAkS,EAAA7S,EAAAqP,WAAAwD,OACAF,EAAA3S,EAAAqP,WAAAuD,gCAGA,IAAAqlC,EAAAd,EAAAe,EAAAf,UAGA,IAAA7tC,EAAA,EAAAA,EAAAuJ,EAAAnT,OAAA4J,GAAAqJ,EACA,SAAAE,EAAAvJ,GAGA,IAAAoJ,EAAA,EAAAA,EAAAC,IAAAD,EACA7S,EAAAgT,EAAAvJ,EAAAoJ,IACApC,EAAAgD,EAAAZ,MACA,IAAApC,EAAAsnC,WAAA/3C,GAAA03C,GAAA13C,IAAA03C,IAGAjnC,EAAAvL,IACAlF,EAAAo4C,IACAA,EAAAp4C,GACAA,EAAAs4C,IACAA,EAAAt4C,IAEAyQ,EAAAtL,IACAnF,EAAAq4C,IACAA,EAAAr4C,GACAA,EAAAu4C,IACAA,EAAAv4C,KAKA,GAAAG,EAAAoT,KAAAzM,KAAA,OAIA,OAAA3G,EAAAoT,KAAAshC,OACA,WACAl7B,EAAA,EACA,MACA,YACAA,GAAAxZ,EAAAoT,KAAAqhC,SACA,MACA,QACAj7B,GAAAxZ,EAAAoT,KAAAqhC,SAAA,EAGAz0C,EAAAoT,KAAAD,YACA+kC,GAAA1+B,EACA4+B,GAAA5+B,EAAAxZ,EAAAoT,KAAAqhC,WAGAwD,GAAAz+B,EACA2+B,GAAA3+B,EAAAxZ,EAAAoT,KAAAqhC,UAIA+C,EAAAx3C,EAAA00B,MAAAujB,EAAAE,GACAX,EAAAx3C,EAAA0W,MAAAwhC,EAAAE,GAGA92C,EAAA4yB,KAAAujB,IAAA,SAAAC,EAAAlhC,GACAA,EAAAM,SAAAqgC,IACA3gC,EAAAM,QAAA,MACAN,EAAAO,SAAAsgC,IACa7gC,EAAAO,QAAA,QAtabshC,GAwBA,SAAApB,EAAA92C,EAAA01B,GACA,IAAAv6B,EAAA6E,EAAA01B,EAAA,QAKA,MAJA,iBAAAv6B,IACAA,IAAAw6B,GACsB,iBAAAx6B,IACtBA,EAAA,GACAA,EAGA,SAAAm8C,IAEA,OAAAn2C,EAAAg3C,KAAA/D,EAAAvS,OAAAvrB,GAAA,SAAAnb,GAAA,OAAAA,IAGA,SAAAi9C,EAAAn3C,GAEA,IAAuBT,EAAA6V,EAAvBvE,EAAA,GACA,IAAAtR,EAAA,EAAAA,EAAA4zC,EAAA70C,SAAAiB,GACA6V,EAAA+9B,EAAA5zC,MAEAsR,EAAA,IAAAuE,EAAAsf,GAAAtf,EAAA8d,IAAAlzB,EAAAi0B,OAGA,IAAA10B,EAAA,EAAAA,EAAA8V,EAAA/W,SAAAiB,GACA6V,EAAAC,EAAA9V,MAEAsR,EAAA,IAAAuE,EAAAsf,GAAAtf,EAAA8d,IAAAlzB,EAAAkxC,MAQA,YALA9xC,IAAAyR,EAAA0iB,KACA1iB,EAAAlN,EAAAkN,EAAA0iB,SACAn0B,IAAAyR,EAAA2iB,eAGA3iB,EAsCA,SAAA+kC,EAAAhjB,EAAAxmB,GAQA,OAPAwmB,EAAAxmB,EAAA,KACAwmB,EAAAxmB,EAAA,IACAsoB,EAAAtoB,EACA+mB,UAAAP,GAAAugB,EAA8C,QAC9C9yC,QAAAH,EAAAqJ,QAAA,KAAAqpB,GAAAugB,EAAA9yC,EAAAizB,MAAAjzB,EAAAiV,SAGAsd,EAAAxmB,EAAA,GAqXA,SAAAupB,IACAyhB,mBAGAjiB,EAAAS,OAAA,YAAAhE,GACAuD,EAAAS,OAAA,aAAAmP,uBAGAkQ,EAAAhsC,EAAA0sB,SAAA,CAAAR,sBAsCA,IAAA/e,EAAAhB,EAAA/U,QACAygC,EAAA1rB,EAAA0rB,OAAA,GACAgS,EAAA18B,EAAA08B,YAAA,EACAC,EAAA38B,EAAA28B,aAAA,EACAsE,EAAAvE,IAAA,KAAA19B,EAAA+d,UAAA96B,KAAA+N,MAAAmuC,EAAAv8C,OAAA8oC,EAAAxiC,QAAA,UACAg5C,EAAAliC,EAAA+d,UAAA,QAAA/d,EAAA+d,UAAA/d,EAAAsf,EAAA,OACA6iB,EAAA,QAAAniC,EAAA+d,UAAA,cAAA/d,EAAA+d,UAAA/d,EAAAsf,EAAA,SAAA4iB,uEAOA,GAAAnoC,EAAAxU,MAAA,yCAMAm4C,EAAAz6C,KAAA+I,IAAA0xC,EAAAnpC,EAAA3R,MAAA,GACA+6C,EAAA16C,KAAA+I,IAAA2xC,EAAAppC,EAAAlF,SAGA2Q,EAAA09B,WAAA18B,EAAA08B,cACA19B,EAAA29B,YAAA38B,EAAA28B,eAGA,SAAAyE,EAAApiC,GAOA,IAAA9S,EAAA8S,EAAA09B,WACA2E,EAAAriC,EAAA29B,YACA/yC,EAAAoV,EAAA/U,QAAA4wC,SACAyG,EAAA,MAAAtiC,EAAA+d,UACA8f,EAAA79B,EAAA/U,QAAA4yC,WACAW,EAAAvzC,EAAAuG,KAAAgtC,WACAxV,EAAA/9B,EAAAuG,KAAAvB,YACAsyC,EAAAt3C,EAAAuG,KAAA+sC,mBACAiE,GAAA,EACAC,GAAA,EACA1/B,GAAA,OAKAjY,EAAA4yB,KAAA4kB,EAAAvE,EAAA99B,EAAA,SAAA9V,EAAArF,GACAA,MAAAqL,MAAArL,EAAA84C,gBACA94C,IAAAkb,EACqBoH,GAAA,EACrBtiB,EAAAmG,QAAA4wC,WAAAjxC,IACAwc,EACyBq7B,GAAA,EAEzBD,GAAA,GAGAp7B,IACArE,GAAA,MAOA0/B,IACAjE,EAAA,GAKA,MAAAX,IACAA,EAAA96B,EAAA,UAGAgvB,OAAA8L,YAGAyE,GAEAD,GAAArZ,OAGA,UAAAp+B,GACA8zB,EAAA1iB,QAAgCqmC,EAAA7D,EAChCx+B,EAAA0iC,IAAA,CAAA5G,IAAAqD,EAAA9vC,OAAAqvB,EAAA1iB,OAAA3M,OAAAgzC,KAGAriC,EAAA0iC,IAAA,CAAA5G,IAAApd,EAAAod,IAAA0C,EAAAnvC,OAAAgzC,GACA3jB,EAAAod,KAAAuG,EAAA7D,UAMA,QAAA5zC,GACAoV,EAAA0iC,IAAA,CAAA7jB,KAAAH,EAAAG,KAAA2f,EAAA57C,MAAAsK,GACAwxB,EAAAG,MAAA3xB,EAAAsxC,IAGA9f,EAAA4gB,OAAgCpyC,EAAAsxC,EAChCx+B,EAAA0iC,IAAA,CAAA7jB,KAAAsgB,EAAAv8C,MAAA87B,EAAA4gB,MAAA18C,MAAAsK,KAKA8S,EAAA67B,SAAAjxC,EACAoV,EAAA69B,aACA79B,EAAA0iC,IAAA1Z,UACAhpB,EAAA0iC,IAAAH,sBACAviC,EAAAwiC,YA4DA,SAAAG,4BAKA,QAAA79C,KAAA45B,EAAA,CACA,IAAAzyB,EAAAhB,EAAAuG,KAAAvF,QAAA,EACAyyB,EAAA55B,GAAA,iBAAAmH,MAAAnH,IAAA,EAOA,QAAAA,4BAAA45B,EACA,iBAAAzzB,EAAAuG,KAAA,YACAktB,EAAA55B,IAAA89C,EAAA33C,EAAAuG,KAAAG,YAAA7M,GAAA,EAGA45B,EAAA55B,IAAA89C,EAAA33C,EAAAuG,KAAAG,YAAA,KAIA7G,EAAA4yB,KAAAF,EAAA,SAAA0jB,EAAAlhC,GACA,IAAA6iC,EAAA7iC,EAAA/U,QACA+U,EAAA7P,KAAA,MAAA0yC,EAAA1yC,KAAA6P,EAAA2d,KAAAklB,EAAA1yC,KACA6P,EAAA49B,aAAA,MAAAiF,EAAAjF,aAAA59B,EAAA7P,KAAA0yC,EAAAjF,aA8DA,SAAA59B,GACA,IAAAgB,EAAAhB,EAAA/U,QACAyB,IAAA,MAAAsU,EAAAtU,IAAAsU,EAAAtU,IAAAsT,EAAAM,SACAtU,IAAA,MAAAgV,EAAAhV,IAAAgV,EAAAhV,IAAAgU,EAAAO,eAGA,MAAAyC,EAAA,CAGA,6BAGA,MAAAhC,EAAAtU,MACAA,GAAAo2C,GAIA,MAAA9hC,EAAAhV,KAAA,MAAAgV,EAAAtU,MACAV,GAAA82C,OAGA,CAEA,IAAA72C,EAAA+U,EAAAw8B,gBACA,MAAAvxC,IACA,MAAA+U,EAAAtU,MACAA,GAAAsW,EAAA/W,GAGA,SAAA+T,EAAAM,SAAAN,EAAAM,SAAA,IACA5T,EAAA,GAEA,MAAAsU,EAAAhV,MACAA,GAAAgX,EAAA/W,GACA,SAAA+T,EAAAO,SAAAP,EAAAO,SAAA,IACAvU,EAAA,IAIAgU,EAAAtT,MACAsT,EAAAhU,MArGa+2C,CAAA/iC,6BAYb,IALA,IAAAgjC,EAAAl4C,EAAAg3C,KAAAtkB,EAAA,SAAAxd,GACiB,OAAAA,EAAA7P,MAAA6P,EAAA49B,eAGjBqF,GAAA,EACA94C,EAAA,EAAAA,EAAA,IACAW,EAAA4yB,KAAAslB,EAAA,SAAA9B,EAAAlhC,GAEAkjC,EAAAljC,GACAmjC,EAAAnjC,GACAijC,EAAAG,EAAApjC,IAAA0rB,QAAAuX,EAEqBI,EAAArjC,KAGrBijC,GAAApvC,EAAA8rC,aAAAz2C,OAAA,GAVAiB,IAWA01C,EAAAhsC,EAAA8rC,aAAA,IACqBsD,GAAA,EASrB,IAAA94C,EAAA64C,EAAA95C,OAAA,EAAAiB,GAAA,IAAAA,WAxGA,WAIA,MAAAm5C,EAAAr4C,EAAAuG,KAAAitC,gBAMA,SAAA6E,EAEA,IADAA,EAA2B,EAC3Bn5C,EAAA,EAAAA,EAAAgB,EAAAjC,SAAAiB,EACAm5C,EAAArgD,KAAA+I,IAAAs3C,EAAA,GAAAn4C,EAAAhB,GAAAkS,OAAAnO,OAAA/C,EAAAhB,GAAAkS,OAAA3K,UAAA,IAGA,IAAA6xC,EAAA,CACA1kB,KAAAykB,EACAhE,MAAAgE,EACAxH,IAAAwH,EACAtnC,OAAAsnC,GAMAx4C,EAAA4yB,KAAAujB,IAAA,SAAAC,EAAAlhC,GACAA,EAAA49B,cAAA59B,EAAA0rB,OAAA1rB,EAAA0rB,MAAAxiC,SACA,MAAA8W,EAAA+d,WACAwlB,EAAA1kB,KAAA57B,KAAA+I,IAAAu3C,EAAA1kB,KAAA7e,EAAA09B,WAAA,GACqB6F,EAAAjE,MAAAr8C,KAAA+I,IAAAu3C,EAAAjE,MAAAt/B,EAAA09B,WAAA,KAErB6F,EAAAvnC,OAAA/Y,KAAA+I,IAAAu3C,EAAAvnC,OAAAgE,EAAA29B,YAAA,GACA4F,EAAAzH,IAAA74C,KAAA+I,IAAAu3C,EAAAzH,IAAA97B,EAAA29B,YAAA,OAKAjf,EAAAG,KAAA57B,KAAAC,KAAAD,KAAA+I,IAAAu3C,EAAA1kB,KAAAH,EAAAG,OACAH,EAAA4gB,MAAAr8C,KAAAC,KAAAD,KAAA+I,IAAAu3C,EAAAjE,MAAA5gB,EAAA4gB,QACA5gB,EAAAod,IAAA74C,KAAAC,KAAAD,KAAA+I,IAAAu3C,EAAAzH,IAAApd,EAAAod,MACApd,EAAA1iB,OAAA/Y,KAAAC,KAAAD,KAAA+I,IAAAu3C,EAAAvnC,OAAA0iB,EAAA1iB,YAsEAlR,EAAA4yB,KAAAslB,EAAA,SAAA9B,EAAAlhC,IA5HA,SAAAA,GAGA,KAAAA,EAAA+d,WACA/d,EAAA0iC,IAAA7jB,KAAAH,EAAAG,KAAA7e,EAAA09B,WAAA,EACA19B,EAAA0iC,IAAA9/C,MAAAu8C,EAAAv8C,MAAA87B,EAAAG,KAAAH,EAAA4gB,MAAAt/B,EAAA09B,aAGA19B,EAAA0iC,IAAA5G,IAAApd,EAAAod,IAAA97B,EAAA29B,YAAA,EACA39B,EAAA0iC,IAAArzC,OAAA8vC,EAAA9vC,OAAAqvB,EAAA1iB,OAAA0iB,EAAAod,IAAA97B,EAAA29B,aAoHiB6F,CAAAxjC,KAKjBu/B,EAAAJ,EAAAv8C,MAAA87B,EAAAG,KAAAH,EAAA4gB,gCAIAx0C,EAAA4yB,KAAAF,EAAA,SAAA0jB,EAAAlhC,IA7RA,SAAAA,0BAMA,IAAAxW,EAAA0S,EAAAnC,EAAAiG,EAAA/U,QAAAqX,WAAAmhC,+BAKA,KAAAzjC,EAAA+d,WACAv0B,EAAAwW,EAAAmgB,MAAAof,EAAAt8C,KAAA08B,IAAA5lB,EAAAiG,EAAAhU,KAAA+N,EAAAiG,EAAAtT,MACAwP,EAAAjZ,KAAAyJ,IAAAqN,EAAAiG,EAAAhU,KAAA+N,EAAAiG,EAAAtT,QAIAlD,IADAA,EAAAwW,EAAAmgB,MAAAqf,EAAAv8C,KAAA08B,IAAA5lB,EAAAiG,EAAAhU,KAAA+N,EAAAiG,EAAAtT,OAEAwP,EAAAjZ,KAAA+I,IAAA+N,EAAAiG,EAAAhU,KAAA+N,EAAAiG,EAAAtT,OAKAsT,EAAA6f,IADA9lB,GAAA0pC,EACA,SAAAlZ,GAAA,OAAAA,EAAAruB,GAAA1S,GAEA,SAAA+gC,GAAA,OAAAxwB,EAAAwwB,GAAAruB,GAAA1S,GAKAwW,EAAA8d,IAHA4lB,EAGA,SAAA58C,GAAA,OAAA48C,EAAAxnC,EAAApV,EAAA0C,IAFA,SAAA1C,GAAA,OAAAoV,EAAApV,EAAA0C,GAkQam6C,CAAA3jC,KAGb4iC,GAmkBA93C,EAAA4yB,KAAAujB,IAAA,SAAAC,EAAAlhC,GACA,cAAA0iC,EAAA1iC,EAAA0iC,IACAR,EAAAliC,EAAA+d,UAAA,QAAA/d,EAAA+d,UAAA/d,EAAAsf,EAAA,OACA6iB,EAAA,QAAAniC,EAAA+d,UAAA,cAAA/d,EAAA+d,UAAA/d,EAAAsf,EAAA,SAAA4iB,EACAh2C,EAAA8T,EAAA/U,QAAAiB,MAAA,4BASA,mBAAA8T,EAAA7P,MAAA,GAAA6P,EAAA0rB,MAAAxiC,0CAKA06C,EAAA5jC,EAAA0rB,MAAAvhC,IACA5E,OAAAq+C,EAAA75C,EAAAiW,EAAAtT,KAAAk3C,EAAA75C,EAAAiW,EAAAhU,MAGA,KAAAgU,EAAA+d,WACA8lB,EAAA,SACAt1C,EAAAmwB,EAAAG,KAAA7e,EAAA6f,IAAA+jB,EAAA75C,GACA,UAAAiW,EAAA67B,SACyBrtC,EAAAk0C,EAAA5G,IAAA4G,EAAA1Z,QAAA0Z,EAAAH,qBAEzB/zC,EAAAk0C,EAAA5G,IAAA4G,EAAArzC,OAAAqzC,EAAA1Z,QACA8a,EAAA,YAGAA,EAAA,SACAt1C,EAAAkwB,EAAAod,IAAA97B,EAAA6f,IAAA+jB,EAAA75C,GACA,QAAAiW,EAAA67B,UACAttC,EAAAm0C,EAAA7jB,KAAA6jB,EAAA9/C,MAAA8/C,EAAA1Z,QACyB6a,EAAA,SAEzBt1C,EAAAm0C,EAAA7jB,KAAA6jB,EAAA1Z,SAIAmW,EAAA4E,QAAA5B,EAAA5zC,EAAAC,EAAAo1C,EAAAr+C,MAAA2G,EAAA,UAAA23C,EAAAC,iBAmhBA,MAAA74C,EAAA8I,OAAAopC,UACaryC,EAAAG,EAAA8I,OAAAopC,WAAA6G,KAAA,IAEb19C,EAAAqI,KAAA,WAAAs1C,SAGA,IAAAh5C,EAAA8I,OAAA5D,KACA,OAQA,IALA,QAAA+zC,EAAA,GAAAC,EAAA,GAAAC,GAAA,4BAKAj6C,EAAA,EAAAA,EAAAgB,EAAAjC,SAAAiB,GACAX,EAAA2B,EAAAhB,IACA5E,QACAA,EAAA8+C,IAAA76C,EAAAjE,MAAAiE,KAAAjE,QAEA4+C,EAAAxwC,KAAA,CACApO,QACyB0J,MAAAzF,EAAAyF,QAQzB,GAAAhE,EAAA8I,OAAAspC,OACA,GAAAvyC,EAAAw5C,WAAAr5C,EAAA8I,OAAAspC,QACiB8G,EAAAnwC,KAAA/I,EAAA8I,OAAAspC,aACjB,cAAApyC,EAAA8I,OAAAspC,OACiB8G,EAAA1tC,cACjB,CACA,IAAA8tC,EAAA,cAAAt5C,EAAA8I,OAAAspC,OACA8G,EAAAnwC,KAAA,SAAAlP,EAAAmP,GACA,OAAAnP,EAAAS,OAAA0O,EAAA1O,MAAA,EACAT,EAAAS,MAAA0O,EAAA1O,OAAAg/C,EAAA,8CAYAp6C,EAAAc,EAAA8I,OAAAipC,WAAA,IACAoH,GACAF,EAAAvwC,KAAA,SACAuwC,EAAAvwC,KAAA,QACAywC,GAAA,GAGAF,EAAAvwC,KACA,2DAAA1I,EAAA8I,OAAAmpC,oBAAA,iEAAAsH,EAAAv1C,MAAA,8DACAu1C,EAAAj/C,MAAA,SAIA6+C,mBAGA,MAAAF,EAAAh7C,cAGA,IAAAwQ,EAAA,yCAAAzO,EAAAuG,KAAAvC,MAAA,KAAAi1C,EAAA15C,KAAA,eACA,SAAAS,EAAA8I,OAAAopC,UACAryC,EAAAG,EAAA8I,OAAAopC,WAAA6G,KAAAtqC,OACA,CACA,IAAA9O,EAAA,GACA2/B,EAAAt/B,EAAA8I,OAAA8nC,SACA3/B,EAAAjR,EAAA8I,OAAA9H,OACA,MAAAiQ,EAAA,KACAA,EAAA,CAAAA,MACA,KAAAquB,EAAAka,OAAA,GACA75C,GAAA,QAAAsR,EAAA,GAAAwiB,EAAAod,KAAA,MACA,KAAAvR,EAAAka,OAAA,KACA75C,GAAA,WAAAsR,EAAA,GAAAwiB,EAAA1iB,QAAA,OACA,KAAAuuB,EAAAka,OAAA,GACA75C,GAAA,UAAAsR,EAAA,GAAAwiB,EAAA4gB,OAAA,MACA,KAAA/U,EAAAka,OAAA,KACA75C,GAAA,SAAAsR,EAAA,GAAAwiB,EAAAG,MAAA,OACA,IAAA9qB,EAAAjJ,EAAA,uBAAA4O,EAAA9X,QAAA,sCAAAgJ,EAAA,eAAA85C,SAAAp+C,GACA,MAAA2E,EAAA8I,OAAAqpC,kBAAA,CAIA,IAAAt2C,EAAAmE,EAAA8I,OAAAlC,gBACA,MAAA/K,KAGAA,GAFAA,EAAAmE,EAAAuG,KAAAK,kBACA,iBAAA/K,EACAgE,EAAAmE,MAAA5M,MAAAyE,GAEAgE,EAAAmE,MAAA01C,QAAA5wC,EAAA,qBACAjP,EAAA,EACAgC,IAAA8C,YAEA,IAAAg7C,EAAA7wC,EAAA+a,WACAhkB,EAAA,uCAAA85C,EAAAhiD,QAAA,aAAAgiD,EAAAv1C,SAAA,MAAAzE,EAAA,oBAAA9D,EAAA,cAAA+9C,UAAA9wC,GAAAhF,IAAA,UAAA9D,EAAA8I,OAAAqpC,qBAnuCA0H,GA+DA,SAAA5B,EAAAljC,OAIA+kC,cAEAA,EADA,iBAAA/jC,EAAA0qB,OAAA1qB,EAAA0qB,MAAA,EACA1qB,EAAA0qB,sDAMA,IAAA1oB,GAAAhD,EAAAhU,IAAAgU,EAAAtT,KAAAq4C,EACAC,GAAA/hD,KAAA+N,MAAA/N,KAAAwQ,IAAAuP,GAAA/f,KAAA+oC,uBAGA,MAAAiZ,GAAAD,EAAAC,IACAD,EAAAC,GAGA,MAAAnZ,EAAA7oC,KAAA8oC,IAAA,IAAAiZ,GACA/Y,EAAAjpB,EAAA8oB,EAoCA,GAjCAG,EAAA,IACa9/B,EAAA,EACb8/B,EAAA,GACA9/B,EAAA,EAEA8/B,EAAA,aAAAgZ,GAAAD,EAAA,GAAAC,KACA94C,EAAA,MACA64C,IAGa74C,EADb8/B,EAAA,IACa,EAEb,QAKA,MAAAjrB,EAAA6qB,aAAA1/B,EAAA6U,EAAA6qB,cACA1/B,EAAA6U,EAAA6qB,aAGA7rB,EAAAgD,QACAhD,EAAAS,aAAAxd,KAAA+I,IAAA,QAAAi5C,IAAAD,4BAIA,OAAAhkC,EAAAP,mBAAAzW,IAAAgX,EAAAP,eACAT,EAAAU,eAAAV,EAAAS,aAAAukC,GAMA,QAAAhkC,EAAA8d,OAAA9e,EAAAklC,cACA,UAAA/qC,MAAA,4CAgDA,iDAtCA,MAk8CAmlB,EAAA6J,EAl8CAuC,EAAA,GACAkB,GAi8CAtN,EAj8CAtf,EAAAtT,KAi8CAy8B,EAj8CAnpB,EAAA4rB,UAk8CA3oC,KAAA+N,MAAAsuB,EAAA6J,IAj8CAh/B,EAAA,EACAJ,EAAA2Y,OAAA+pB,IAGA,GACAC,EAAA3iC,EACAA,EAAA6iC,EAAAziC,EAAA6V,EAAA4rB,SACAF,EAAA/3B,KAAA5J,KACqBI,QACrBJ,EAAAiW,EAAAhU,KAAAjC,GAAA2iC,GACA,OAAAhB,iCAKA,IAAAyZ,EAAAnlC,EAAAS,aAAAxd,KAAA8oC,IAAA,GAAA/rB,EAAAS,cAAA,yBAMA,SAAAT,EAAAS,aAAA,CACA,IAAA2kC,EAAAC,EAAAx6C,QAAA,KACAy6C,GAAA,GAAAF,EAAA,EAAAC,EAAAn8C,OAAAk8C,EAAA,EACA,GAAAE,EAAAtlC,EAAAS,aACA,OAAA6kC,EAAAD,IAAA,SAAAF,GAAAI,OAAA,EAAAvlC,EAAAS,aAAA6kC,GAIA,OAAAD,IAIAv6C,EAAAw5C,WAAAtjC,EAAAy8B,+EAGA,MAAAz8B,EAAA88B,mBAAA,CACA,IAAA0H,GAAA,KAAAxlC,EAAA+d,UAAAggB,EAAA99B,GAAAe,EAAA88B,mBAAA,GACA,GAAA0H,KAAA7nB,MAAA6nB,GAAAxlC,EAAA,CAEA,IAAAylC,EAAAzlC,EAAAklC,cAAAllC,GAqBA,GApBAylC,EAAAv8C,OAAA,IACA,MAAA8X,EAAAtU,MACAsT,EAAAtT,IAAAzJ,KAAAyJ,IAAAsT,EAAAtT,IAAA+4C,EAAA,KACA,MAAAzkC,EAAAhV,KAAAy5C,EAAAv8C,OAAA,IACA8W,EAAAhU,IAAA/I,KAAA+I,IAAAgU,EAAAhU,IAAAy5C,IAAAv8C,OAAA,MAGA8W,EAAAklC,cAAA,SAAAllC,GAEA,IAAmCjW,EAAAI,EAAnCuhC,EAAmC,GACnC,IAAAvhC,EAAA,EAAAA,EAAAq7C,EAAA9Z,MAAAxiC,SAAAiB,EACAJ,GAAAy7C,EAAA9Z,MAAAvhC,GAAAJ,EAAAy7C,EAAA94C,MAAA84C,EAAAx5C,IAAAw5C,EAAA94C,KACA3C,EAAAiW,EAAAtT,IAAA3C,GAAAiW,EAAAhU,IAAAgU,EAAAtT,KACAg/B,EAAA/3B,KAAA5J,GAEA,OAAA2hC,IAKA1rB,EAAA8e,MAAA,MAAA9d,EAAAP,aAAA,CACA,IAAAilC,EAAAziD,KAAA+I,IAAA,IAAA/I,KAAA+N,MAAA/N,KAAAwQ,IAAAuM,EAAAgD,OAAA/f,KAAA+oC,4BAMAvB,EAAAvhC,OAAA,YAAAoB,MAAAmgC,EAAA,GAAAA,EAAA,IAAAkb,QAAAD,MACA1lC,EAAAS,aAAAilC,MAMA,SAAAvC,EAAAnjC,GACA,IAYA7V,EAAAJ,EAZA67C,EAAA5lC,EAAA/U,QAAAygC,QAAA,GAcA,IAbA,MAAAka,GAAA,iBAAAA,KAAA,EACAla,EAAA1rB,EAAAklC,cAAAllC,GACA4lC,IAGAla,EAFA5gC,EAAAw5C,WAAAsB,GAEAA,EAAA5lC,GAEA4lC,GAKA5lC,EAAA0rB,MAAuB,GACvBvhC,EAAA,EAAAA,EAAAuhC,EAAAxiC,SAAAiB,EAAA,CACA,IAAA5E,EAAA,KACAwU,EAAA2xB,EAAAvhC,GACA,iBAAA4P,GACAhQ,GAAAgQ,EAAA,GACAA,EAAA7Q,OAAA,IACA3D,EAAAwU,EAAA,KAGAhQ,GAAAgQ,EACA,MAAAxU,IACAA,EAAAya,EAAAy9B,cAAA1zC,EAAAiW,IACA+xB,MAAAhoC,IACAiW,EAAA0rB,MAAA/3B,KAAA,CAAA5J,IAAAxE,WAIA,SAAA69C,EAAApjC,EAAA0rB,GACA,IAAAma,GAAA,EAYA,OAXA7lC,EAAA/U,QAAAuyC,iBAAA9R,EAAAxiC,OAAA,IAEA,MAAA8W,EAAA/U,QAAAyB,MACAsT,EAAAtT,IAAAzJ,KAAAyJ,IAAAsT,EAAAtT,IAAAg/B,EAAA,GAAA3hC,GACA87C,GAAA,GAEA,MAAA7lC,EAAA/U,QAAAe,KAAA0/B,EAAAxiC,OAAA,IACA8W,EAAAhU,IAAA/I,KAAA+I,IAAAgU,EAAAhU,IAAA0/B,IAAAxiC,OAAA,GAAAa,GACA87C,GAAA,IAGAA,8DAYAr0C,EAAArB,MAAAqB,EAAAK,kBA6DAxG,EAAAgC,iCAGAhC,EAAAyG,UAAAg0C,EAAA76C,EAAAuG,KAAAK,gBAAA2tC,EAAA,4BACAn0C,EAAA0G,SAAA,IAAAwtC,EAAAC,GACAn0C,EAAAuC,WA/DA4D,EAAArB,OAAAqB,EAAA8sC,WACAyH,IAGA,QAAA57C,EAAA,EAAAA,EAAAgB,EAAAjC,SAAAiB,EACA01C,EAAAhsC,EAAA+rC,WAAA,CAAAv0C,EAAAF,EAAAhB,KACAy1C,EAAAz0C,EAAAhB,kBAKAqH,EAAArB,MAAAqB,EAAA8sC,WACAyH,eAQA/mB,IAGA,SAAAG,EAAAC,EAAAC,GAGA,sBAAAl1B,EAAA,EAAAA,EAAAqzB,EAAAt0B,SAAAiB,EAEA,IADA6V,EAAAwd,EAAArzB,IACA4zB,WAAAsB,IAEAD,EADA/0B,EAAAg1B,EAAArf,EAAAsf,EAAA,SAC6C,GAA7Ctf,EAA6Csf,IAC7Cj1B,EAAAg1B,EAAA,QACAD,EAAA/0B,IAAA,CACAlI,EAAAi9B,EAAA/0B,GAAAlI,KACAI,EAAA68B,EAAA/0B,GAAA9H,GACA,MAaA,GAPA68B,EAAA/0B,KACA2V,EAAA,KAAAqf,EAAA0e,EAAA,GAAA99B,EAAA,GACA9d,EAAAi9B,EAAAC,EAAA,KACA98B,EAAA68B,EAAAC,EAAA,MAIA,MAAAl9B,GAAA,MAAAI,GAAAJ,EAAAI,EAAA,CACA,IAAAk9B,EAAAt9B,EACAA,EAAAI,EACAA,EAAAk9B,EAGA,OAAAt9B,OAAAI,KAAAyd,QAYA,SAAA+lC,gBAGA16C,EAAAgC,iCAIA,IAAAqxC,EAAAzzC,EAAAuG,KAAAktC,SACA,GAAAA,EAaA,IAZA5zC,EAAAw5C,WAAA5F,MACAlhB,EAAApyB,EAAAqyB,WAGAgkB,KAAAjkB,EAAAU,MAAAxxB,IACA8wB,EAAAmkB,KAAAnkB,EAAAU,MAAAlyB,IACAwxB,EAAAkkB,KAAAlkB,EAAAtd,MAAAxT,uBAGAgyC,IAAAlhB,IAGArzB,EAAA,EAAAA,EAAAu0C,EAAAx1C,SAAAiB,EAAA,CACA,IAAA+R,EAAAwiC,EAAAv0C,GACA67C,EAAA7mB,EAAAjjB,EAAA,gBAcA,GAVA,MAAA8pC,EAAA7jD,OACA6jD,EAAA7jD,KAAA6jD,EAAAhmC,KAAAtT,KACA,MAAAs5C,EAAAzjD,KACAyjD,EAAAzjD,GAAAyjD,EAAAhmC,KAAAhU,KACA,MAAAi6C,EAAA9jD,OACA8jD,EAAA9jD,KAAA8jD,EAAAjmC,KAAAtT,KACA,MAAAu5C,EAAA1jD,wBAIAyjD,EAAAzjD,GAAAyjD,EAAAhmC,KAAAtT,KAAAs5C,EAAA7jD,KAAA6jD,EAAAhmC,KAAAhU,KACAi6C,EAAA1jD,GAAA0jD,EAAAjmC,KAAAtT,KAAAu5C,EAAA9jD,KAAA8jD,EAAAjmC,KAAAhU,KADA,CAIAg6C,EAAA7jD,KAAAc,KAAA+I,IAAAg6C,EAAA7jD,KAAA6jD,EAAAhmC,KAAAtT,KACAs5C,EAAAzjD,GAAAU,KAAAyJ,IAAAs5C,EAAAzjD,GAAAyjD,EAAAhmC,KAAAhU,KACAi6C,EAAA9jD,KAAAc,KAAA+I,IAAAi6C,EAAA9jD,KAAA8jD,EAAAjmC,KAAAtT,oCAGA,IAAAw5C,EAAAF,EAAA7jD,OAAA6jD,EAAAzjD,mBAGA,IAAA2jD,IAAAC,EAUA,GALAH,EAAA7jD,KAAAc,KAAA+N,MAAAg1C,EAAAhmC,KAAA6f,IAAAmmB,EAAA7jD,OACA6jD,EAAAzjD,GAAAU,KAAA+N,MAAAg1C,EAAAhmC,KAAA6f,IAAAmmB,EAAAzjD,KACA0jD,EAAA9jD,KAAAc,KAAA+N,MAAAi1C,EAAAjmC,KAAA6f,IAAAomB,EAAA9jD,yCAGA+jD,GAAAC,EAAA,CACA,IAAAz0C,EAAAwK,EAAAxK,WAAAzG,EAAAuG,KAAAotC,kBACAwH,EAAA10C,EAAA,OACArG,EAAA6H,YACA7H,EAAAkG,YAAA2K,EAAAjN,OAAAhE,EAAAuG,KAAAmtC,cACAtzC,EAAAqG,YACAw0C,GACA76C,EAAAg7C,OAAAL,EAAAzjD,GAAA6jD,EAAAH,EAAA9jD,MACyBkJ,EAAA+H,OAAA4yC,EAAAzjD,GAAA6jD,EAAAH,EAAA1jD,MAEzB8I,EAAAg7C,OAAAL,EAAA7jD,KAAA8jD,EAAA1jD,GAAA6jD,GACA/6C,EAAA+H,OAAA4yC,EAAAzjD,GAAA0jD,EAAA1jD,GAAA6jD,IAEqB/6C,EAAAiI,cAErBjI,EAAAyG,UAAAoK,EAAAjN,OAAAhE,EAAAuG,KAAAmtC,cACAtzC,EAAA0G,SAAAi0C,EAAA7jD,KAAA8jD,EAAA1jD,GACAyjD,EAAAzjD,GAAAyjD,EAAA7jD,KACA8jD,EAAA9jD,KAAA8jD,EAAA1jD,KAMAi7B,EAAAyjB,yBAGA,QAAAnuC,EAAA,EAAAA,EAAA0qB,EAAAt0B,SAAA4J,EAAA,CACA,IACAvE,EAAAC,EAAA83C,EAAAC,EADAvmC,EAAAwd,EAAA1qB,GAAA4vC,EAAA1iC,EAAA0iC,IACA3oC,EAAAiG,EAAA69B,WACA,GAAA79B,EAAA7P,MAAA,GAAA6P,EAAA0rB,MAAAxiC,OAAA,CAiDA,kBA3CA,KAAA8W,EAAA+d,WACAxvB,EAAA,EAEAC,EADA,QAAAuL,EACA,OAAAiG,EAAA67B,SAAA,EAAA2D,EAEAkD,EAAA5G,IAAApd,EAAAod,KAAA,OAAA97B,EAAA67B,SAAA6G,EAAArzC,OAAA,KAGAb,EAAA,EAEAD,EADA,QAAAwL,EACA,QAAAiG,EAAA67B,SAAA,EAAA0D,EAEAmD,EAAA7jB,KAAAH,EAAAG,MAAA,QAAA7e,EAAA67B,SAAA6G,EAAA9/C,MAAA,IAIAod,EAAAwiC,YACAn3C,EAAAkG,YAAAyO,EAAA/U,QAAAgE,MACA5D,EAAA6H,YACAozC,EAAAC,EAAA,EACA,KAAAvmC,EAAA+d,UACAuoB,EAAA/G,EAAA,QAIA,GAAAl0C,EAAAqG,YACA,KAAAsO,EAAA+d,UACyBvvB,EAAAvL,KAAA+N,MAAAxC,GAAA,GAEzBD,EAAAtL,KAAA+N,MAAAzC,GAAA,IAIAlD,EAAAg7C,OAAA93C,EAAAC,GACAnD,EAAA+H,OAAA7E,EAAA+3C,EAAA93C,EAAA+3C,GACAl7C,EAAAiI,4CAOAjI,EAAA6H,YACA/I,EAAA,EAAAA,EAAA6V,EAAA0rB,MAAAxiC,SAAAiB,EAAA,0BAKA4nC,MAAAhoC,MAAAiW,EAAAtT,KAAA3C,EAAAiW,EAAAhU,KAEA,QAAA+N,IACA,iBAAAysC,KAAAxmC,EAAA67B,UAAA,GAAA2K,EAAA,KACAz8C,GAAAiW,EAAAtT,KAAA3C,GAAAiW,EAAAhU,OAGA,KAAAgU,EAAA+d,WACAxvB,EAAAyR,EAAA6f,IAAA91B,oBAGA,OAAAiW,EAAA67B,WACA0K,QAGA/3C,EAAAwR,EAAA6f,IAAA91B,oBAGA,QAAAiW,EAAA67B,WACAyK,OAGA,GAAAj7C,EAAAqG,YACA,KAAAsO,EAAA+d,UACAxvB,EAAAtL,KAAA+N,MAAAzC,GAAA,GAEAC,EAAAvL,KAAA+N,MAAAxC,GAAA,IAGAnD,EAAAg7C,OAAA93C,EAAAC,GACAnD,EAAA+H,OAAA7E,EAAA+3C,EAAA93C,EAAA+3C,IAGAl7C,EAAAiI,UAKAkzC,IAGAlhB,EAAAr6B,EAAAuG,KAAAC,YACA,iBAAA+0C,GAAA,iBAAAlhB,GAC8B,iBAAAkhB,IAC9BA,EAAA,CAAA1K,IAAA0K,EAAAlH,MAAAkH,EAAAxqC,OAAAwqC,EAAA3nB,KAAA2nB,IAE8B,iBAAAlhB,IAC9BA,EAAA,CAAAwW,IAAAxW,EAAAga,MAAAha,EAAAtpB,OAAAspB,EAAAzG,KAAAyG,IAGAkhB,EAAA1K,IAAA,IACAzwC,EAAAkG,YAAA+zB,EAAAwW,IACAzwC,EAAAqG,UAAA80C,EAAA1K,IACAzwC,EAAA6H,YACA7H,EAAAg7C,OAAA,EAAAG,EAAA3nB,KAAA,EAAA2nB,EAAA1K,IAAA,GACAzwC,EAAA+H,OAAAmsC,EAAA,EAAAiH,EAAA1K,IAAA,GACAzwC,EAAAiI,UAGAkzC,EAAAlH,MAAA,IACAj0C,EAAAkG,YAAA+zB,EAAAga,MACAj0C,EAAAqG,UAAA80C,EAAAlH,MACAj0C,EAAA6H,YACA7H,EAAAg7C,OAAA9G,EAAAiH,EAAAlH,MAAA,IAAAkH,EAAA1K,KACAzwC,EAAA+H,OAAAmsC,EAAAiH,EAAAlH,MAAA,EAAAE,GACAn0C,EAAAiI,UAGAkzC,EAAAxqC,OAAA,IACA3Q,EAAAkG,YAAA+zB,EAAAtpB,OACA3Q,EAAAqG,UAAA80C,EAAAxqC,OACA3Q,EAAA6H,YACA7H,EAAAg7C,OAAA9G,EAAAiH,EAAAlH,MAAAE,EAAAgH,EAAAxqC,OAAA,GACA3Q,EAAA+H,OAAA,EAAAosC,EAAAgH,EAAAxqC,OAAA,GACA3Q,EAAAiI,UAGAkzC,EAAA3nB,KAAA,IACAxzB,EAAAkG,YAAA+zB,EAAAzG,KACAxzB,EAAAqG,UAAA80C,EAAA3nB,KACAxzB,EAAA6H,YACA7H,EAAAg7C,OAAA,EAAAG,EAAA3nB,KAAA,EAAA2gB,EAAAgH,EAAAxqC,QACA3Q,EAAA+H,OAAA,EAAAozC,EAAA3nB,KAAA,KACAxzB,EAAAiI,YAIAjI,EAAAqG,UAAA80C,EACAn7C,EAAAkG,YAAAtG,EAAAuG,KAAAC,YACApG,EAAAuG,YAAA40C,EAAA,GAAAA,EAAA,EAAAjH,EAAAiH,EAAAhH,EAAAgH,KAIAn7C,EAAAuC,UA0FA,SAAAgyC,EAAAz0C,GACAA,EAAAuR,MAAAvM,OAaA,SAAAhF,GACA,SAAAs7C,EAAA5tC,EAAA6tC,EAAAC,EAAAC,EAAAC,GACA,IAAAxqC,EAAAxD,EAAAwD,OACAF,EAAAtD,EAAAuD,wBAGA/Q,EAAA6H,YACA,QAAA/I,EAAAgS,EAAAhS,EAAAkS,EAAAnT,OAAAiB,GAAAgS,EAAA,CACA,IAAAgiB,EAAA9hB,EAAAlS,EAAAgS,GAAAiiB,EAAA/hB,EAAAlS,EAAAgS,EAAA,mBAGA,SAAAgiB,GAAA,MAAAE,EAAA,CAIA,GAAAD,GAAAE,GAAAF,EAAAyoB,EAAAn6C,IAAA,CACA,GAAA4xB,EAAAuoB,EAAqCn6C,IACrC,SAEAyxB,GAAA0oB,EAAAn6C,IAAA0xB,IAAAE,EAAAF,IAAAC,EAAAF,KACAC,EAAAyoB,EAAAn6C,SAEA,GAAA4xB,GAAAF,GAAAE,EAAAuoB,EAAAn6C,IAAA,CACA,GAAA0xB,EAAAyoB,EAAAn6C,IACA,SACA2xB,GAAAwoB,EAAAn6C,IAAA0xB,IAAAE,EAAAF,IAAAC,EAAAF,KACAG,EAAAuoB,EAAAn6C,IAIA,GAAA0xB,GAAAE,GAAAF,EAAAyoB,EAAA76C,IAAA,CACA,GAAAsyB,EAAAuoB,EAAA76C,IACA,SACAmyB,GAAA0oB,EAAA76C,IAAAoyB,IAAAE,EAAAF,IAAAC,EAAAF,KACAC,EAAAyoB,EAAA76C,SAEA,GAAAsyB,GAAAF,GAAAE,EAAAuoB,EAAA76C,IAAA,CACA,GAAAoyB,EAAAyoB,EAAA76C,IACA,SACAqyB,GAAAwoB,EAAA76C,IAAAoyB,IAAAE,EAAAF,IAAAC,EAAAF,KACAG,EAAAuoB,EAAA76C,IAIA,GAAAmyB,GAAAE,GAAAF,EAAAyoB,EAAAl6C,IAAA,CACA,GAAA2xB,EAAAuoB,EAAAl6C,IACA,SACA0xB,GAAAwoB,EAAAl6C,IAAAyxB,IAAAE,EAAAF,IAAAG,EAAAF,KACAD,EAAAyoB,EAAAl6C,SAEA,GAAA2xB,GAAAF,GAAAE,EAAAuoB,EAAAl6C,IAAA,CACA,GAAAyxB,EAAAyoB,EAAAl6C,IACA,SACA4xB,GAAAsoB,EAAAl6C,IAAAyxB,IAAAE,EAAAF,IAAAG,EAAAF,KACAC,EAAAuoB,EAAAl6C,IAIA,GAAAyxB,GAAAE,GAAAF,EAAAyoB,EAAA56C,IAAA,CACA,GAAAqyB,EAAAuoB,EAAA56C,IACA,SACAoyB,GAAAwoB,EAAA56C,IAAAmyB,IAAAE,EAAAF,IAAAG,EAAAF,KACAD,EAAAyoB,EAAA56C,SAEA,GAAAqyB,GAAAF,GAAAE,EAAAuoB,EAAA56C,IAAA,CACA,GAAAmyB,EAAAyoB,EAAA56C,IACA,SACAsyB,GAAAsoB,EAAA56C,IAAAmyB,IAAAE,EAAAF,IAAAG,EAAAF,KACAC,EAAAuoB,EAAA56C,IAGAmyB,GAAA2oB,GAAA1oB,GAAA2oB,mCAGAD,EAAAzoB,EACA0oB,EAAAzoB,EACAjzB,EAAA+H,OAAAwzC,EAAA/mB,IAAAxB,GAAAqoB,EAAAG,EAAAhnB,IAAAvB,GAAAqoB,IAEAt7C,EAAAiI,SAiJAjI,EAAAgC,OACAhC,EAAA27C,UAAAtoB,EAAAG,KAAAH,EAAAod,wBAGA,IAAA5uC,EAAA/B,EAAAuR,MAAAhL,UACAu1C,EAAA97C,EAAAizC,WAEA,GAAAlxC,EAAA,GAAA+5C,EAAA,GAEA57C,EAAAqG,UAAAu1C,EACA57C,EAAAkG,YAAA,kBAEA,IAAA21C,EAAAjkD,KAAAgQ,GAAA,GACAwzC,EAAAt7C,EAAA0N,WAAA5V,KAAAoL,IAAA64C,IAAAh6C,EAAA,EAAA+5C,EAAA,GAAAhkD,KAAAkL,IAAA+4C,IAAAh6C,EAAA,EAAA+5C,EAAA,GAAA97C,EAAA+yB,MAAA/yB,EAAA+U,OACA7U,EAAAqG,UAAAu1C,EAAA,EACAR,EAAAt7C,EAAA0N,WAAA5V,KAAAoL,IAAA64C,IAAAh6C,EAAA,EAAA+5C,EAAA,GAAAhkD,KAAAkL,IAAA+4C,IAAAh6C,EAAA,EAAA+5C,EAAA,GAAA97C,EAAA+yB,MAAA/yB,EAAA+U,OAGA7U,EAAAqG,UAAAxE,EACA7B,EAAAkG,YAAApG,EAAA8D,MACA,IAAA6C,EAAAq1C,EAAAh8C,EAAAuR,MAAAvR,EAAA8D,MAAA,EAAAuwC,GACA1tC,IACAzG,EAAAyG,YApKA,SAAA+G,EAAA+tC,EAAAC,GACA,IAAAxqC,EAAAxD,EAAAwD,OACAF,EAAAtD,EAAAuD,UACAJ,EAAA/Y,KAAAyJ,IAAAzJ,KAAA+I,IAAA,EAAA66C,EAAAn6C,KAAAm6C,EAAA76C,KACA7B,EAAA,EAAAi9C,GAAA,cAMA,OACAjrC,EAAA,GAAAhS,EAAAkS,EAAAnT,OAAAiT,IADA,CAMA,IAAAgiB,EAAA9hB,SAAAF,GACAiiB,EAAA/hB,EAAAlS,EAAAgS,EAAAkrC,mBAGA,GAAAD,EAAA,CACA,GAAAjrC,EAAA,SAAAgiB,GAAA,MAAAE,EAAA,CAEAipB,EAAAn9C,EACAgS,KACAkrC,EAAA,EACA,SAGA,GAAAlrC,EAAA,GAAAhS,GAAAo9C,EAAAprC,EAAA,CAEA9Q,EAAAkI,OACA6zC,GAAA,EAEAC,EAAA,EACAl9C,EAAAo9C,EAAAD,GAFAnrC,MAGA,UAIA,SAAAgiB,GAAA,MAAAE,EAAA,CAMA,GAAAF,GAAAE,GAAAF,EAAAyoB,EAAAl6C,IAAA,CACA,GAAA2xB,EAAAuoB,EAAAl6C,IACA,SACA0xB,GAAAwoB,EAAAl6C,IAAAyxB,IAAAE,EAAAF,IAAAG,EAAAF,KACAD,EAAAyoB,EAAAl6C,SAEA,GAAA2xB,GAAAF,GAAAE,EAAAuoB,EAAAl6C,IAAA,CACA,GAAAyxB,EAAAyoB,EAAAl6C,IACA,SACA4xB,GAAAsoB,EAAAl6C,IAAAyxB,IAAAE,EAAAF,IAAAG,EAAAF,KACAC,EAAAuoB,EAAAl6C,IAIA,GAAAyxB,GAAAE,GAAAF,EAAAyoB,EAAA56C,IAAA,CACA,GAAAqyB,EAAAuoB,EAAA56C,IACA,SACAoyB,GAAAwoB,EAAA56C,IAAAmyB,IAAAE,EAAAF,IAAAG,EAAAF,KACAD,EAAAyoB,EAAA56C,SAEA,GAAAqyB,GAAAF,GAAAE,EAAAuoB,EAAA56C,IAAA,CACA,GAAAmyB,EAAAyoB,EAAA56C,IACA,SACAsyB,GAAAsoB,EAAA56C,IAAAmyB,IAAAE,EAAAF,IAAAG,EAAAF,KACAC,EAAAuoB,EAAA56C,IAWA,GARAo7C,IAEA/7C,EAAA6H,YACA7H,EAAAg7C,OAAAO,EAAA/mB,IAAA1B,GAAA0oB,EAAAhnB,IAAA7jB,IACAorC,GAAA,GAIAhpB,GAAAyoB,EAAA76C,KAAAsyB,GAAAuoB,EAAA76C,IACAX,EAAA+H,OAAAwzC,EAAA/mB,IAAA1B,GAAA0oB,EAAAhnB,IAAAgnB,EAAA76C,MACAX,EAAA+H,OAAAwzC,EAAA/mB,IAAAxB,GAAAwoB,EAAAhnB,IAAAgnB,EAAA76C,WAGA,GAAAoyB,GAAAyoB,EAAAn6C,KAAA4xB,GAAAuoB,EAAAn6C,IACArB,EAAA+H,OAAAwzC,EAAA/mB,IAAA1B,GAAA0oB,EAAAhnB,IAAAgnB,EAAAn6C,MACArB,EAAA+H,OAAAwzC,EAAA/mB,IAAAxB,GAAAwoB,EAAAhnB,IAAAgnB,EAAAn6C,UAFA,aAgBA0xB,GAAAE,GAAAF,EAAAyoB,EAAAn6C,KAAA4xB,GAAAuoB,EAAAn6C,KACAyxB,GAAA0oB,EAAAn6C,IAAA0xB,IAAAE,EAAAF,IAAAC,EAAAF,KACAC,EAAAyoB,EAAAn6C,KAEA4xB,GAAAF,GAAAE,EAAAuoB,EAAAn6C,KAAA0xB,GAAAyoB,EAAAn6C,MACA2xB,GAAAwoB,EAAAn6C,IAAA0xB,IAAAE,EAAAF,IAAAC,EAAAF,KACAG,EAAAuoB,EAAAn6C,KAIA0xB,GAAAE,GAAAF,EAAAyoB,EAAA76C,KAAAsyB,GAAAuoB,EAAA76C,KACAmyB,GAAA0oB,EAAA76C,IAAAoyB,IAAAE,EAAAF,IAAAC,EAAAF,KACAC,EAAAyoB,EAAA76C,KAEAsyB,GAAAF,GAAAE,EAAAuoB,EAAA76C,KAAAoyB,GAAAyoB,EAAA76C,MACAqyB,GAAAwoB,EAAA76C,IAAAoyB,IAAAE,EAAAF,IAAAC,EAAAF,KACAG,EAAAuoB,EAAA76C,KAKAmyB,GAAAqpB,GACAn8C,EAAA+H,OAAAwzC,EAAA/mB,IAAA2nB,GAAAX,EAAAhnB,IAAAzB,IAOA/yB,EAAA+H,OAAAwzC,EAAA/mB,IAAA1B,GAAA0oB,EAAAhnB,IAAAzB,gCAIAC,GAAAopB,IACAp8C,EAAA+H,OAAAwzC,EAAA/mB,IAAAxB,GAAAwoB,EAAAhnB,IAAAvB,IACAjzB,EAAA+H,OAAAwzC,EAAA/mB,IAAA4nB,GAAAZ,EAAAhnB,IAAAvB,QA4BAopB,CAAAv8C,EAAA0N,WAAA1N,EAAA+yB,MAAA/yB,EAAA+U,QAGAhT,EAAA,GACAu5C,EAAAt7C,EAAA0N,WAAA,IAAA1N,EAAA+yB,MAAA/yB,EAAA+U,OACA7U,EAAAuC,UAvQA+5C,CAAAx8C,GACAA,EAAAkR,OAAAlM,MAAAhF,EAAAyR,KAAAzM,MAzCA,SAAAhF,GAUA,IANA,IAAAy8C,EAAA,GACAC,EAAA,KACAC,EAAA,KACAjvC,EAAA1N,EAAA0N,WAEAkvC,EAA2B,GAC3Bj1C,EAAA,EAAAA,EAAA+F,EAAAuD,UAAA,EAAAtJ,IACAi1C,EAAAp0C,KAAA,GAEA,QAAAxJ,EAAA,EAAAA,EAAA0O,EAAAwD,OAAAnT,OAAAiB,GAAA0O,EAAAuD,UAAA,CACA,IAAA7N,EAAAsK,EAAAwD,OAAAlS,GAAAqE,EAAAqK,EAAAwD,OAAAlS,EAAA,GAEiB29C,EADjB39C,IAAA0O,EAAAwD,OAAAnT,OAAA2P,EAAAuD,UACiB,KAEjBvD,EAAAwD,OAAAlS,EAAA0O,EAAAuD,WAEA,OAAA7N,GAAA,OAAAC,GAAA,OAAAq5C,GAAA,OAAAC,IACAF,EAAAj0C,KAAApF,GACAq5C,EAAAj0C,KAAAnF,GACAo5C,EAAAj0C,KAAA4Z,MAAAq6B,EAAAG,QAKA,IAAAC,EAAAnvC,EAAAwD,kBAGAlR,EAAAkR,OAAAnO,OAAA/C,EAAAuR,MAAAhL,UAAA,EAEAu2C,EAAA98C,GAEA0N,EAAAwD,OAAA2rC,EAQAE,CAAA/8C,IAGAA,EAAAyR,KAAAzM,MA4aA,SAAAhF,SAoBA,OATAE,EAAAgC,iCAIAhC,EAAAqG,UAAAvG,EAAAyR,KAAAlL,gCAKAvG,EAAAyR,KAAAshC,OACA,WACAiK,EAAA,EACA,MACA,YACAA,GAAAh9C,EAAAyR,KAAAqhC,SACA,MACA,QACAkK,GAAAh9C,EAAAyR,KAAAqhC,SAAA,EAGA,IAAAmK,EAAAj9C,EAAAyR,KAAArJ,KAAA,SAAAyI,EAAA8/B,GAAA,OAAAqL,EAAAh8C,EAAAyR,KAAAzR,EAAA8D,MAAA+M,EAAA8/B,IAAA,MA9BA,SAAAjjC,EAAAsvC,EAAAE,EAAAD,EAAAxB,EAAAC,GAGA,iCAAA18C,EAAA,EAAAA,EAAAkS,EAAAnT,OAAAiB,GAAAgS,EACA,MAAAE,EAAAlS,IAEAm+C,EAAAjsC,EAAAlS,GAAAkS,EAAAlS,EAAA,GAAAkS,EAAAlS,EAAA,GAAAg+C,EAAAE,EAAAD,EAAAxB,EAAAC,EAAAx7C,EAAAF,EAAAyR,KAAAD,WAAAxR,EAAAyR,KAAAlL,YAyBA62C,CAAAp9C,EAAA0N,WAAAsvC,IAAAh9C,EAAAyR,KAAAqhC,SAAAmK,EAAAj9C,EAAA+yB,MAAA/yB,EAAA+U,OACA7U,EAAAuC,UA5cA46C,CAAAr9C,GACAA,EAAAkR,OAAAlM,MACA83C,EAAA98C,GAiQA,SAAA88C,EAAA98C,GACA,SAAAs9C,EAAA5vC,EAAA3K,EAAA4D,EAAA6T,EAAAxT,EAAAy0C,EAAAC,EAAA7I,GAGA,iCAAA7zC,EAAA,EAAAA,EAAAkS,EAAAnT,OAAAiB,GAAAgS,EAAA,CACA,IAAA5N,EAAA8N,EAAAlS,GAAAqE,EAAA6N,EAAAlS,EAAA,GACA,MAAAoE,KAAAq4C,EAAAl6C,KAAA6B,EAAAq4C,EAAA56C,KAAAwC,EAAAq4C,EAAAn6C,KAAA8B,EAAAq4C,EAAA76C,MAGAX,EAAA6H,YACA3E,EAAAq4C,EAAA/mB,IAAAtxB,GACAC,EAAAq4C,EAAAhnB,IAAArxB,GAAAmX,EACA,UAAAq4B,EACA3yC,EAAA8H,IAAA5E,EAAAC,EAAAN,EAAA,EAAAiE,EAAAlP,KAAAgQ,GAAA,EAAAhQ,KAAAgQ,IAAA,GAEA+qC,EAAA3yC,EAAAkD,EAAAC,EAAAN,EAAAiE,iBAGAL,IACAzG,EAAAyG,YACAzG,EAAAkI,QAEAlI,EAAAiI,WAIAjI,EAAAgC,iCAGA,IAAAH,EAAA/B,EAAAkR,OAAA3K,UACAu1C,EAAA97C,EAAAizC,WACAlwC,EAAA/C,EAAAkR,OAAAnO,yBAWA,GAHA,GAAAhB,YAGAA,EAAA,GAAA+5C,EAAA,GAEA,IAAA7jD,EAAA6jD,EAAA,EACA57C,EAAAqG,UAAAtO,EACAiI,EAAAkG,YAAA,kBACAk3C,EAAAt9C,EAAA0N,WAAA3K,EAAA,KAAA9K,IAAA,wBAGAiI,EAAAkG,YAAA,kBACAk3C,EAAAt9C,EAAA0N,WAAA3K,EAAA,KAAA9K,EAAA,KACA+H,EAAA+yB,MAAA/yB,EAAA+U,MAAA89B,GAGA3yC,EAAAqG,UAAAxE,EACA7B,EAAAkG,YAAApG,EAAA8D,MACAw5C,EAAAt9C,EAAA0N,WAAA3K,EACAi5C,EAAAh8C,EAAAkR,OAAAlR,EAAA8D,OAAA,KACA9D,EAAA+yB,MAAA/yB,EAAA+U,MAAA89B,GACA3yC,EAAAuC,UAGA,SAAA06C,EAAA/5C,EAAAC,EAAAyF,EAAAk0C,EAAAE,EAAAD,EAAAxB,EAAAC,EAAA//C,EAAA6V,EAAAjL,GACA,IAAAmtB,EAAAygB,EAAAtjC,EAAA8/B,EACA4M,EAAAC,EAAAC,EAAAC,IAMAlsC,GACAksC,EAAAF,EAAAC,GAAA,EACAF,GAAA,EAGA5M,EAAAttC,EAAA25C,SADA7I,EAAA/wC,IADAswB,EAAA5qB,KAOAwrB,EAAA6f,EACAA,EAAAzgB,EACAA,EAAAY,EACAipB,GAAA,EACAC,GAAA,KAIAD,EAAAC,EAAAC,GAAA,EACAC,GAAA,EACAhqB,EAAAtwB,EAAA45C,EACA7I,EAAA/wC,EAAA85C,SACArsC,EAAA/H,KAKAwrB,EAAAqc,EACAA,EAAA9/B,EACAA,EAAAyjB,EACAopB,GAAA,EACAD,GAAA,IAKAtJ,EAAAsH,EAAAl6C,KAAAmyB,EAAA+nB,EAAA56C,KACA8vC,EAAA+K,EAAAn6C,KAAAsP,EAAA6qC,EAAA76C,MAGA6yB,EAAA+nB,EAAAl6C,MACAmyB,EAAA+nB,EAAAl6C,IACAg8C,GAAA,GAGApJ,EAAAsH,EAAA56C,MACAszC,EAAAsH,EAAA56C,IACA28C,GAAA,GAGA3sC,EAAA6qC,EAAAn6C,MACAsP,EAAA6qC,EAAAn6C,IACAm8C,GAAA,GAGA/M,EAAA+K,EAAA76C,MACA8vC,EAAA+K,EAAA76C,IACA48C,GAAA,GAGA/pB,EAAA+nB,EAAA/mB,IAAAhB,GACA7iB,EAAA6qC,EAAAhnB,IAAA7jB,GACAsjC,EAAAsH,EAAA/mB,IAAAyf,cAIA8I,IACAthD,EAAAgL,UAAAs2C,EAAApsC,EAAA8/B,GACAh1C,EAAAiL,SAAA8sB,EAAAid,EAAAwD,EAAAzgB,EAAA7iB,EAAA8/B,IAIApqC,EAAA,IAAAg3C,GAAAC,GAAAC,GAAAC,mBAIA/hD,EAAAu/C,OAAAxnB,EAAA7iB,GACA0sC,EACA5hD,EAAAsM,OAAAyrB,EAAAid,GAEAh1C,EAAAu/C,OAAAxnB,EAAAid,GACA8M,EACA9hD,EAAAsM,OAAAksC,EAAAxD,GAEAh1C,EAAAu/C,OAAA/G,EAAAxD,GACA6M,EACA7hD,EAAAsM,OAAAksC,EAAAtjC,GAEAlV,EAAAu/C,OAAA/G,EAAAtjC,GACA6sC,EACA/hD,EAAAsM,OAAAyrB,EAAA7iB,GAEAlV,EAAAu/C,OAAAxnB,EAAA7iB,GACAlV,EAAAwM,WAwCA,SAAA6zC,EAAA2B,EAAAtQ,EAAAx8B,EAAA8/B,GACA,IAAAvoC,EAAAu1C,EAAAv1C,KACA,IAAAA,cAGA,GAAAu1C,EAAA3nC,sCAGA,IAAAra,EAAAgE,EAAAmE,MAAA5M,MAAAm2C,GAGA,OAFA1xC,EAAAhC,EAAA,iBAAAyO,IAAA,GACAzM,EAAAiiD,YACAjiD,EAAA8C,WAznEAwB,EAAA20C,UACA30C,EAAAu3C,YACAv3C,EAAA8I,OACA9I,EAAAE,eAAA,WAAqC,OAAAhF,GACrC8E,EAAA49C,UAAA,kBAAyC7J,EAAApxB,SACzC3iB,EAAAuzB,cAAA,WAAkC,OAAAD,GAClCtzB,EAAAxI,MAAA,WAAmC,OAAA28C,GACnCn0C,EAAAiE,OAAA,kBAAAmwC,GACAp0C,EAAAua,OAAA,WACA,IAAA8Y,EAAAsB,EAAApa,SAGA,OAFA8Y,EAAAI,MAAAH,EAAAG,KACAJ,EAAAqd,KAAApd,EAAAod,IACArd,GAEArzB,EAAAK,QAAA,kBAAAN,GACAC,EAAAqyB,QAAA,WACA,IAAAhiB,EAAA,GAKA,OAJA3Q,EAAA4yB,KAAAqgB,EAAAvS,OAAAvrB,GAAA,SAAAihC,EAAAlhC,GACAA,IACavE,EAAAuE,EAAA+d,WAAA,GAAA/d,EAAAsf,EAAAtf,EAAAsf,EAAA,YAAAtf,KAEbvE,GAEArQ,EAAAm0B,SAAA,WAAqC,OAAAwe,GACrC3yC,EAAAo0B,SAAA,kBAAAvf,GACA7U,EAAA0yB,IAAAikB,EACA32C,EAAAy0B,IAwRA,SAAAj1B,kBAIA,IAAAT,EAAA,EAAAA,EAAA4zC,EAAA70C,SAAAiB,EAEA,IADA6V,EAAA+9B,EAAA5zC,KACA6V,EAAA2d,OACAtzB,EAAA,IAAA2V,EAAAsf,EACA,MAAA10B,EAAAP,IAAA,GAAA2V,EAAAsf,WAGA,MAAA10B,EAAAP,IAAA,CACAoR,EAAAojB,KAAA7e,EAAA6f,IAAAj1B,EAAAP,IACA,MAKA,IAAAF,EAAA,EAAAA,EAAA8V,EAAA/W,SAAAiB,EAEA,IADA6V,EAAAC,EAAA9V,KACA6V,EAAA2d,OACAtzB,EAAA,IAAA2V,EAAAsf,EACA,MAAA10B,EAAAP,IAAA,GAAA2V,EAAAsf,WAGA,MAAA10B,EAAAP,IAAA,CACAoR,EAAAqgC,IAAA97B,EAAA6f,IAAAj1B,EAAAP,IACA,MAKA,OAAAoR,GAvTArQ,EAAAG,WAAA,kBAAAN,GACAG,EAAA69C,YACA79C,EAAA89C,cACA99C,EAAA4zB,uBACA5zB,EAAA+9C,YAAA,SAAAlwC,GACA,OACA4lB,KAAAzvB,SAAA2uC,EAAA0C,EAAAxnC,EAAA,QAAA4mB,KAAA5mB,EAAA1K,GAAAmwB,EAAAG,KAAA,IACAid,IAAA1sC,SAAA6Q,EAAAwgC,EAAAxnC,EAAA,QAAA4mB,KAAA5mB,EAAAzK,GAAAkwB,EAAAod,IAAA,MAGA1wC,EAAAm1B,WACAn1B,EAAA6iB,QAAA,WACAsS,iCAGAp1B,EAAA,GACAF,EAAA,KACAk0C,EAAA,KACAC,EAAA,KACArf,EAAA,KACA10B,EAAA,KACAg0C,EAAA,KACAtB,EAAA,GACA99B,EAAA,GACApM,EAAA,KACAu1C,EAAA,GACAh+C,EAAA,MAEAA,EAAAi+C,OAAA,WACA,IAAAzmD,EAAA0D,EAAA1D,QACAyM,EAAA/I,EAAA+I,SACA8vC,EAAAkK,OAAAzmD,EAAAyM,GACA+vC,EAAAiK,OAAAzmD,EAAAyM,yBA8BA,IAJA,IAAAi6C,EAAA,CACAC,UAGAp/C,EAAA,EAAAA,EAAAuJ,EAAAxK,SAAAiB,EAAA,CACA,IAAAogC,EAAA72B,EAAAvJ,GACAogC,EAAA32B,KAAAxI,EAAAk+C,GACA/e,EAAAt/B,SACAH,EAAAqJ,QAAA,EAAAlJ,EAAAs/B,EAAAt/B,UA3BAu+C,gCAwCAxoC,KAAA+7B,SACA9xC,EAAA8xC,OAAA/7B,EAAA+7B,QAGA,MAAA9xC,EAAAizB,MAAAjvB,QACAhE,EAAAizB,MAAAjvB,MAAAnE,EAAAmE,MAAA5M,MAAA4I,EAAAuG,KAAAvC,OAAAkxB,MAAA,SAAAv2B,YACA,MAAAqB,EAAAiV,MAAAjR,6EAGA,MAAAhE,EAAAizB,MAAAof,YACAryC,EAAAizB,MAAAof,UAAAryC,EAAAuG,KAAA8rC,WAAAryC,EAAAizB,MAAAjvB,OACA,MAAAhE,EAAAiV,MAAAo9B,+DAGA,MAAAryC,EAAAuG,KAAAC,cACAxG,EAAAuG,KAAAC,YAAAxG,EAAAuG,KAAAvC,OACA,MAAAhE,EAAAuG,KAAA8rC,oFASA,IAAAnzC,EAAAs/C,EAAAC,EACAC,EAAArjD,EAAAyI,IAAA,aACA66C,EAAAD,KAAA/nD,QAAA,YACAioD,EAAA,CACAhpB,MAAAv6B,EAAAyI,IAAA,cACA5C,KAAAlJ,KAAA6mD,MAAA,GAAAF,GACAG,QAAAzjD,EAAAyI,IAAA,gBACAi7C,OAAA1jD,EAAAyI,IAAA,eACAC,OAAA1I,EAAAyI,IAAA,oBAGA26C,EAAuBz+C,EAAA8yC,MAAe70C,QAAA,eAGtCugD,EAAAx+C,EAAA8yC,MAAA5zC,MACAs/C,EAAAnM,YACAmM,EAAAnM,UAAAmM,EAAAx6C,OAGAw6C,EAAA3+C,EAAAqJ,QAAA,KAAAlJ,EAAAizB,MAAAurB,gBAGAA,EAAAv9C,OACAu9C,EAAAv9C,KAAApB,EAAAqJ,OAAA,GAAA01C,EAAAJ,EAAAv9C,MACAu9C,EAAAv9C,KAAA+C,QACAw6C,EAAAv9C,KAAA+C,MAAAw6C,EAAAx6C,OAEAw6C,EAAAv9C,KAAA+9C,aACAR,EAAAv9C,KAAA+9C,WAAAhnD,KAAA6mD,MAAA,KAAAL,EAAAv9C,KAAAC,YAKAu9C,EAAuBz+C,EAAAgV,MAAe/W,QAAA,eAGtCugD,EAAAx+C,EAAAgV,MAAA9V,MACAs/C,EAAAnM,YACAmM,EAAAnM,UAAAmM,EAAAx6C,OAGAw6C,EAAA3+C,EAAAqJ,QAAA,KAAAlJ,EAAAiV,MAAAupC,gBAGAA,EAAAv9C,OACAu9C,EAAAv9C,KAAApB,EAAAqJ,OAAA,GAAA01C,EAAAJ,EAAAv9C,MACAu9C,EAAAv9C,KAAA+C,QACAw6C,EAAAv9C,KAAA+C,MAAAw6C,EAAAx6C,OAEAw6C,EAAAv9C,KAAA+9C,aACAR,EAAAv9C,KAAA+9C,WAAAhnD,KAAA6mD,MAAA,KAAAL,EAAAv9C,KAAAC,QAMAlB,EAAAizB,MAAA6mB,SAAA,MAAA95C,EAAAizB,MAAAwN,QACAzgC,EAAAizB,MAAAwN,MAAAzgC,EAAAizB,MAAA6mB,SACA95C,EAAAiV,MAAA6kC,SAAA,MAAA95C,EAAAiV,MAAAwrB,QACAzgC,EAAAiV,MAAAwrB,MAAAzgC,EAAAiV,MAAA6kC,SACA95C,EAAAi/C,SACAj/C,EAAA8yC,MAAA,GAAAjzC,EAAAqJ,QAAA,KAAAlJ,EAAAizB,MAAAjzB,EAAAi/C,QACAj/C,EAAA8yC,MAAA,GAAAlC,SAAA,MAEA,MAAA5wC,EAAAi/C,OAAAx9C,MACAzB,EAAA8yC,MAAA,GAAArxC,IAAA,MAEA,MAAAzB,EAAAi/C,OAAAl+C,MACAf,EAAA8yC,MAAA,GAAA/xC,IAAA,OAGAf,EAAAk/C,SACAl/C,EAAAgV,MAAA,GAAAnV,EAAAqJ,QAAA,KAAAlJ,EAAAiV,MAAAjV,EAAAk/C,QACAl/C,EAAAgV,MAAA,GAAA47B,SAAA,QAEA,MAAA5wC,EAAAk/C,OAAAz9C,MACAzB,EAAAgV,MAAA,GAAAvT,IAAA,MAEA,MAAAzB,EAAAk/C,OAAAn+C,MACAf,EAAAgV,MAAA,GAAAjU,IAAA,OAGAf,EAAAuG,KAAA44C,eACAn/C,EAAAuG,KAAAktC,SAAAzzC,EAAAuG,KAAA44C,cACAn/C,EAAAuG,KAAA64C,oBACAp/C,EAAAuG,KAAAmtC,cAAA1zC,EAAAuG,KAAA64C,mBACAp/C,EAAAyR,OACA5R,EAAAqJ,QAAA,EAAAlJ,EAAAE,OAAAuR,MAAAzR,EAAAyR,OACAzR,EAAAoR,QACAvR,EAAAqJ,QAAA,EAAAlJ,EAAAE,OAAAkR,OAAApR,EAAAoR,QACApR,EAAA2R,MACA9R,EAAAqJ,QAAA,EAAAlJ,EAAAE,OAAAyR,KAAA3R,EAAA2R,MACA,MAAA3R,EAAAmzC,aACAnzC,EAAAE,OAAAizC,WAAAnzC,EAAAmzC,YACA,MAAAnzC,EAAAozC,2DAIA,IAAAl0C,EAAA,EAAAA,EAAAc,EAAA8yC,MAAA70C,SAAAiB,EACAq2C,EAAuBzC,EAAA5zC,EAAA,GAAAc,QAA0BA,EAAA8yC,MAAA5zC,GACjD,IAAAA,EAAA,EAAAA,EAAAc,EAAAgV,MAAA/W,SAAAiB,8BAIA,QAAAm1B,KAAAzrB,EACA5I,EAAA4I,MAAAyrB,IAAAr0B,EAAA4I,MAAAyrB,GAAAp2B,uCAGA22C,EAAAhsC,EAAAC,eAAA,CAAA7I,IA5KAq/C,CAAAxN,GA4lBA,8CAMA,UAAAx2C,EAAAyI,IAAA,0CAGAowC,EAAA,IAAAoK,EAAA,YAAAjjD,6BAGA+E,EAAA8zC,EAAAn0C,iEAUAu/C,IACAA,EAAAhqB,WACA6e,EAAAoL,SAIAlkD,EAAAiG,KAAA,OAAAnB,GAvnBAq/C,GACA1K,EAAAlD,GACA8F,IACAzuC,IAunBA,WAEAjJ,EAAAuG,KAAAstC,2BASA/e,EAAA57B,KAAA,aAAAwrC,IAGA1kC,EAAAuG,KAAAqtC,sBAGAgB,EAAAhsC,EAAAisB,WAAA,CAAAC,OA8hDA,IAAAqpB,EAAA,UAwGA,SAAA5sB,EAAAC,GACAxxB,EAAAuG,KAAAstC,WACA4L,EAAA,YAAAjuB,EACA,SAAAjzB,GAAA,UAAAA,EAAA,YAGA,SAAAmmC,EAAAlT,GACAxxB,EAAAuG,KAAAstC,WACA4L,EAAA,YAAAjuB,EACA,SAAAjzB,GAAA,WAGA,SAAA4wB,EAAAqC,GACArxB,EAAAgyB,aAIAstB,EAAA,YAAAjuB,EAAA,SAAAjzB,GAAA,UAAAA,EAAA,YAKA,SAAAkhD,EAAAC,EAAAtlC,EAAAulC,GACA,IAAAjlC,EAAAoa,EAAApa,SACAklC,EAAAxlC,EAAAuZ,MAAAjZ,EAAAkZ,KAAAH,EAAAG,KACAisB,EAAAzlC,EAAA0lC,MAAsCplC,EAAAm2B,IAAApd,EAAAod,wBAGtClxC,EAAAg0B,MAAAvZ,EAAAuZ,sBAIAh0B,EAAAqzB,QAAA5Y,EAAA4Y,kCApIA,SAAA+sB,EAAAC,EAAAL,GACA,UAAAM,EAAAjgD,EAAAuG,KAAAwtC,kBACAmM,EAAAD,IAAA,SAGA,IAAA/gD,EAAAgB,EAAAjC,OAAA,EAAAiB,GAAA,IAAAA,EACA,GAAAygD,EAAAz/C,EAAAhB,IAAA,CAGA,IAAAX,EAAA2B,EAAAhB,GACAy8C,EAAAp9C,EAAA00B,MACA2oB,EAAAr9C,EAAA0W,MACA7D,EAAA7S,EAAAqP,WAAAwD,OACA+uC,EAAAxE,EAAA9oB,IAAAktB,GACAK,EAAAxE,EAAA/oB,IAAAmtB,GACAK,EAAAJ,EAAAtE,EAAAzmB,kBAWA,GARAhkB,EAAA3S,EAAAqP,WAAAuD,UAGAwqC,EAAA37C,QAAAsyC,mBACA+N,EAAA5oC,OAAAC,WACAkkC,EAAA57C,QAAAsyC,uCAGA/zC,EAAAkT,MAAAvM,MAA+B3G,EAAA6S,OAAAlM,KAC/B,IAAA2C,EAAA,EAAAA,EAAAuJ,EAAAnT,OAAA4J,GAAAqJ,EAAA,CACA,IAAA5N,EAAA8N,EAAAvJ,GAAAtE,EAAA6N,EAAAvJ,EAAA,GACA,SAAAvE,KAKAA,EAAA68C,EAAAE,GAAA/8C,EAAA68C,GAAAE,GACA98C,EAAA68C,EAAAE,GAAA/8C,EAAA68C,GAAAE,GADA,CAMA,IAAAC,EAAAvoD,KAAA08B,IAAAinB,EAAA/mB,IAAAtxB,GAAAy8C,GACAS,EAAAxoD,KAAA08B,IAAAknB,EAAAhnB,IAAArxB,GAAqDy8C,aAKrDS,EAAAP,IACAA,EAAAO,EACA/4C,EAAA,CAAAxI,EAAA2I,EAAAqJ,iCASA,OAAA3S,EAAAoT,KAAAshC,OACA,WACAiK,EAAA,EACA,MACA,YACAA,GAAA3+C,EAAAoT,KAAAqhC,SACA,MACA,QACAkK,GAAA3+C,EAAAoT,KAAAqhC,SAAA,EAKA,wBAAAnrC,EAAA,EAAAA,EAAAuJ,EAAAnT,OAAA4J,GAAAqJ,EAAA,CACA5N,EAAA8N,EAAAvJ,GAAAtE,EAAA6N,EAAAvJ,EAAA,OAAAmB,EAAAoI,EAAAvJ,EAAA,GACA,MAAAvE,IAIApD,EAAAhB,GAAAyS,KAAAD,WACAyuC,GAAAnoD,KAAA+I,IAAAiI,EAAA1F,IAAA68C,GAAAnoD,KAAAyJ,IAAAuH,EAAA1F,IACA88C,GAAA78C,EAAA25C,GAAAkD,GAAA78C,EAAA65C,EACA+C,GAAA78C,EAAA45C,GAAAiD,GAAA78C,EAAA85C,GACAgD,GAAApoD,KAAAyJ,IAAAuH,EAAAzF,IAAA68C,GAAApoD,KAAA+I,IAAAiI,EAAAzF,MACAmE,EAAA,CAAAxI,EAAA2I,EAAAqJ,MAKA,OAAAxJ,GACAxI,EAAAwI,EAAA,GACAG,EAAAH,EAAA,+BAGA,CAAAg5C,UAAAxgD,EAAAhB,GAAA0O,WAAAwD,OAAA2xB,MAAAl7B,EAAAqJ,GAAArJ,EAAA,GAAAqJ,GACAyvC,UAAA94C,EACA3H,SAAAhB,GACA0hD,YAAA1hD,IAGA,aA8CA,GANAwI,IAEAA,EAAAisB,MAAAxvB,SAAAuD,EAAAxH,OAAA+yB,MAAA2B,IAAAltB,EAAAg5C,UAAA,IAAAhmC,EAAAkZ,KAAAH,EAAAG,KAAA,IACAlsB,EAAAo4C,MAAA37C,SAAAuD,EAAAxH,OAAA+U,MAAA2f,IAAAltB,EAAAg5C,UAAA,IAAAhmC,EAAAm2B,IAAApd,EAAAod,IAAA,KAGA7wC,EAAAuG,KAAAutC,cAAA,CAEA,QAAA50C,EAAA,EAAAA,EAAAi/C,EAAAlgD,SAAAiB,EAAA,CACA,IAAAm2B,EAAA8oB,EAAAj/C,GACAm2B,EAAAwrB,MAAAnB,GACAh4C,GAAA2tB,EAAAn1B,QAAAwH,EAAAxH,QACAm1B,EAAArnB,MAAA,IAAAtG,EAAAg5C,UAAA,IACArrB,EAAArnB,MAAA,IAAAtG,EAAAg5C,UAAA,IACAzC,EAAA5oB,EAAAn1B,OAAAm1B,EAAArnB,OAGAtG,GACAs2C,EAAAt2C,EAAAxH,OAAAwH,EAAAg5C,UAAAhB,GAGArkD,EAAAo2B,QAAAiuB,EAAA,CAAA//C,EAAA+H,IAGA,SAAAqsB,IACA,IAAAjlB,EAAA9O,EAA0Bg0C,YAAAC,uBAC1B,GAAAnlC,EAKAioC,IACAA,EAAA7kB,WAAA+C,EAAAnmB,IALAmmB,IAQA,SAAAA,IAQA,IAAA/1B,EAAA4hD,EACA,WALA1M,EAAAhyC,OACA+xC,EAAAoL,kCAIArgD,EAAA,EAAAA,EAAAi/C,EAAAlgD,SAAAiB,WAGAgB,OAAAyR,KAAAzM,KACA67C,EAAAD,EAAA5gD,OAAA4gD,EAAA9yC,OAEAgzC,EAAAF,EAAA5gD,OAAA4gD,EAAA9yC,mBAIA4mC,EAAAhsC,EAAAqsB,YAAA,CAAAmf,IAGA,SAAA4J,EAAAz/C,EAAAyP,EAAA6yC,GAIA,GAHA,iBAAAtiD,YAGA,iBAAAyP,EAAA,CACA,IAAAkD,EAAA3S,EAAAqP,WAAAuD,UACAnD,EAAAzP,EAAAqP,WAAAwD,OAAA2xB,MAAA7xB,EAAAlD,EAAAkD,GAAAlD,EAAA,IAGA,IAAA9O,EAAA+hD,EAAA1iD,EAAAyP,IACA,GAAA9O,qCAGA60B,KAEA8sB,IACA1C,EAAAj/C,GAAA2hD,MAAA,GAGA,SAAA5C,EAAA1/C,EAAAyP,GACA,SAAAzP,GAAA,MAAAyP,EAGA,OAFAmwC,EAAA,QACApqB,IAOA,GAHA,iBAAAx1B,YAGA,iBAAAyP,EAAA,CACA,IAAAkD,EAAA3S,EAAAqP,WAAAuD,UACAnD,EAAAzP,EAAAqP,WAAAwD,OAAA2xB,MAAA7xB,EAAAlD,EAAAkD,GAAAlD,EAAA,IAGA,IAAA9O,EAAA+hD,EAAA1iD,EAAAyP,IACA,GAAA9O,kBAGA60B,KAIA,SAAAktB,EAA2B1iD,EAAA+gC,GAC3B,QAAApgC,EAAA,EAAAA,EAAAi/C,EAAAlgD,SAAAiB,EAAA,CACA,IAAAm2B,EAAA8oB,EAAAj/C,GACA,GAAAm2B,EAAAn1B,QAAA3B,GAAA82B,EAAArnB,MAAA,IAAAsxB,EAAA,IACAjK,EAAArnB,MAAA,IAAAsxB,EAAA,GACA,OAAApgC,EAEA,SAGA,SAAA8hD,EAAA9gD,EAAA8N,GACA,IAAA1K,EAAA0K,EAAA,GAAAzK,EAAAyK,EAAA,GACA2tC,EAAAz7C,EAAA+yB,MAAA2oB,EAAA17C,EAAA+U,2GAGA,KAAA3R,EAAAq4C,EAAAl6C,KAAA6B,EAAAq4C,EAAA56C,KAAAwC,EAAAq4C,EAAAn6C,KAAA8B,EAAAq4C,EAAA76C,KAAA,CAGA,IAAAmgD,EAAAhhD,EAAAkR,OAAAnO,OAAA/C,EAAAkR,OAAA3K,UAAA,EACA2tC,EAAA3tC,UAAAy6C,EACA9M,EAAA9tC,YAAA8sC,EACA,IAAAnwC,EAAA,IAAAi+C,EACA59C,EAAAq4C,EAAA/mB,IAAAtxB,cAGA8wC,EAAAnsC,YACA,UAAA/H,EAAAkR,OAAA2hC,OACAqB,EAAAlsC,IAAA5E,EAAAC,EAAAN,EAAA,IAAAjL,KAAAgQ,IAAA,GAEA9H,EAAAkR,OAAA2hC,OAAAqB,EAAA9wC,EAAAC,EAAAN,GAAA,GACAmxC,EAAAhsC,YACAgsC,EAAA/rC,UAGA,SAAA04C,EAAA7gD,EAAA8N,GACA,MAAAolC,EAAA,iBAAAlzC,EAAAkzC,eAAAlzC,EAAAkzC,eAAAvzC,EAAAmE,MAAA5M,MAAA8I,EAAA8D,OAAAkxB,MAAA,QAAAv2B,WACAkI,EAAAusC,EAGA,OAAAlzC,EAAAyR,KAAAshC,OACA,WACAiK,EAAA,EACA,MACA,YACAA,GAAAh9C,EAAAyR,KAAAqhC,SACA,MACA,QACAkK,GAAAh9C,EAAAyR,KAAAqhC,SAAA,EAGAoB,EAAA3tC,UAAAvG,EAAAyR,KAAAlL,0BAGA42C,EAAArvC,EAAA,GAAAA,EAAiC,GAAAA,EAAA,IAAkB,EAAEkvC,IAAAh9C,EAAAyR,KAAAqhC,SACrD,kBAAAnsC,GAAA3G,EAAA+yB,MAAA/yB,EAAA+U,MAAAm/B,EAAAl0C,EAAAyR,KAAAD,WAAAxR,EAAAyR,KAAAlL,WAGA,SAAAo0C,EAAAna,EAAA3vB,EAAA8/B,EAAAsQ,GACA,oBAAAzgB,EACA,OAAAA,EAOA,0CAAAxhC,EAAA,EAAA8R,EAAA0vB,EAAAoR,OAAA7zC,OAAAiB,EAAA8R,IAAA9R,EAAA,CACA,IAAArD,EAAA6kC,EAAAoR,OAAA5yC,GACA,oBAAArD,EAAA,CACA,IAAAulD,EAAAvhD,EAAAmE,MAAA5M,MAAA+pD,GACA,MAAAtlD,EAAAwlD,aACAD,IAAAlsB,MAAA,MAAAr5B,EAAAwlD,aACA,MAAAxlD,EAAAqI,UACAk9C,EAAAvnD,GAAAgC,EAAAqI,SACArI,EAAAulD,EAAAziD,WAEA2iD,EAAAC,aAAAriD,GAAA8R,EAAA,GAAAnV,GAGA,OAAAylD,GAnoGAzhD,EAAA2hD,GAAAC,SACA5hD,EAAA2hD,GAAAC,OAAA,WACA,OAAA3oD,KAAA25B,KAAA,WACA35B,KAAA4oD,YACA5oD,KAAA4oD,WAAAC,YAAA7oD,2CAoFA,GAAAnB,GAAA,GAAAyM,GAAA,EACA,UAAA8K,MAAA,wCAAAvX,EAAA,cAAAyM,GAGA,IAAA0e,EAAAhqB,KAAAgqB,QACA/iB,EAAAjH,KAAAiH,0BAUAjH,KAAAnB,WACAmrB,EAAAnrB,QAAAiqD,EACA9+B,EAAA8S,MAAAj+B,QAAA,KACAmB,KAAAnB,SAGAmB,KAAAsL,YACA0e,EAAA1e,SAAAw9C,EACA9+B,EAAA8S,MAAAxxB,SAAA,KACAtL,KAAAsL,UAOArE,EAAA4C,mBAOA5C,EAAAm1B,MAAA0sB,MAKAtD,EAAA/kD,UAAAgmD,MAAA,WACAzmD,KAAAiH,QAAA8hD,UAAA,IAAA/oD,KAAAnB,MAAAmB,KAAAsL,6DAYA,QAAA09C,KAAAC,kBAGA,IAAA7K,EAAAp+C,KAAAkpD,aAAAF,UAKA,QAAAG,cAAAC,EACA,GAAAn1C,EAAAlU,KAAAqpD,EAAAD,GAAA,CACA,IAAAE,EAAAD,EAAAD,GACA,QAAA7iD,KAAA+iD,kBAKA,QAAAvR,mBAAA1xC,EAAA,EAAA0xC,EAAAwR,EAAAljD,OACA0xC,EAAAtf,OACAsf,EAAAyR,WACAnL,EAAArzC,OAAA+sC,EAAA9tB,SACA8tB,EAAAyR,UAAA,IAGAD,EAAAvsD,OAAAqJ,IAAA,GACA0xC,EAAAyR,UACAzR,EAAA9tB,QAAA2+B,UAKA,GAAAW,EAAAnkD,eACAkkD,EAAA/iD,IAOA83C,EAAAhyC,iEA+CA,iBA1BA,MAAApM,KAAAy4C,gBACAz4C,KAAAy4C,cAAA1xC,EAAA,gDACAiE,IAAA,CACA8sC,SAAA,WACAC,IAAA,EACAjd,KAAA,EACA7iB,OAAA,EACAsjC,MAAA,EACAiO,YAAA,UACMt+C,MAAA,YAENu+C,YAAAzpD,KAAAgqB,UAGAo0B,EAAAp+C,KAAAnE,KAAA0pD,GAAAx+C,EAAA,eACA2iD,SAAAnE,GACAv6C,IAAA,CACA8sC,SAAA,WACAC,IAAA,EACAjd,KAAA,EACA7iB,OAAA,EACKsjC,MAAA,IAELoF,SAAA3gD,KAAAy4C,gBAGA2F,qEAsDGuL,EADH,iBAAAxhD,EACGA,EAAA20B,MAAA,IAAA30B,EAAA69C,QAAA,IAAA79C,EAAA89C,OAAA,IAAA99C,EAAAC,KAAA,MAAAD,EAAA+9C,WAAA,MAAA/9C,EAAA8C,OAEH9C,EAOA,+BACAihD,EAAAppD,KAAA04C,WAAA0F,GAAA,IAKA,iBACAiL,EAAAD,EAAAO,GAAA,oBASA,IAAA3/B,EAAAjjB,EAAA,eAAAk5C,KAAApkD,GACAmP,IAAA,CACA8sC,SAAA,WACA8R,YAAA/qD,EACKk5C,KAAA,sCAIL,iBAAA5vC,EACA6hB,EAAAhf,IAAA,CACA7C,KAAAwhD,EACKz+C,MAAA/C,EAAA+C,QAEL,iBAAA/C,GACA6hB,EAAA0/B,SAAAvhD,mCAKA,IAAAC,EAAApI,KAAA24C,eAAA98C,GACAuM,GACAoI,EAAA3R,MAAAuJ,EAAAvJ,MACI2R,EAAAlF,OAAAlD,EAAAkD,SAEJkF,EAAA3R,MAAAmrB,EAAA6/B,YAAA,GACAr5C,EAAAlF,OAAA0e,EAAA8/B,aAAqC,GACrC9pD,KAAA24C,eAAA98C,GAAA,CAAAgD,MAAA2R,EAAA3R,MAAAyM,OAAAkF,EAAAlF,SAEA0e,EAAA2+B,SAGA,OAAAn4C,mDAyBA,IAAAA,EAAAxQ,KAAA+pD,YAAA3L,EAAAviD,EAAAsM,EAAAg7C,EAAAtkD,iBAKA,UAAAihD,EACGt1C,GAAAgG,EAAA3R,MAAA,EACH,SAAAihD,IACAt1C,GAAAgG,EAAA3R,OAGA,UAAAkhD,EACGt1C,GAAA+F,EAAAlF,OAAA,EACH,UAAAy0C,IACAt1C,GAAA+F,EAAAlF,QAMA,QAAAwsC,EAAA1xC,EAAA,EAAA0xC,EAAAwR,EAAAljD,OACA,GAAA0xC,EAAAttC,MAAAstC,EAAArtC,KAEA,YADAqtC,EAAAtf,QAAA,GAUAsf,EAAA,CACAtf,QAAA,EACA+wB,UAAA,EACAv/B,QAAAs/B,EAAAnkD,OAAAqL,EAAAwZ,QAAAggC,QAAAx5C,EAAAwZ,QACAxf,IACAC,eAOAqtC,EAAA9tB,QAAAhf,IAAA,CACA+sC,IAAA74C,KAAA6mD,MAAAt7C,GACAqwB,KAAA57B,KAAA6mD,MAAAv7C,GACGy/C,aAAAnK,KAwBH0F,EAAA/kD,UAAAypD,WAAA,SAAA9L,EAAA5zC,EAAAC,EAAA5O,EAAAsM,EAAAg7C,GACA,SAAAtnD,EAAA,CACA,IAAAutD,EAAAppD,KAAA04C,WAAA0F,GACA,SAAAgL,EACA,QAAAD,KAAAC,EACA,GAAAn1C,EAAAlU,KAAAqpD,EAAAD,GAAA,CACA,IAAAE,EAAAD,EAAAD,GACA,QAAA7iD,KAAA+iD,EACA,GAAAp1C,EAAAlU,KAAAspD,EAAA/iD,GAEA,IADA,IAAAgjD,EAAAD,EAAiC/iD,GAAAgjD,UACjCljD,EAAA,EAAA0xC,EAAAwR,EAAAljD,OACA0xC,EAAAtf,QAAA,OAQA,KACAsf,EAAA,IADAwR,EAAAtpD,KAAA+pD,YAA4B3L,EAAAviD,EAAAsM,EAAyBg7C,GAAAmG,UACrDljD,EAAA,EAAA0xC,EAAAwR,EAAAljD,OACA0xC,EAAAttC,MAAAstC,EAAArtC,OACAqtC,EAAAtf,QAAA,KAisFAzxB,EAAAM,KAAA,SAAA9E,EAAAiG,EAAAtB,GAIA,OAFA,IAAA2xC,EAAA9xC,EAAAxE,GAAAiG,EAAAtB,EAAAH,EAAAM,KAAAsI,mDAWA5I,EAAA2hD,GAAArhD,KAAA,SAAAmB,EAAAtB,GACA,OAAAlH,KAAA25B,KAAA,WACS5yB,EAAAM,KAAArH,KAAAwI,EAAAtB,wRCppGHijD,sEAGJ,SAAAC,EAAAplD,EAAAlD,EAAAuoD,GAEoB,IAAAx1C,EAACrU,EAAA,EAAAsB,EAAA,SAClB,CACHsoD,IAAIA,EACJplD,gBACO,CACLslD,MALmBz1C,EAAA,GAMpB01C,KANoB11C,EAAA,IAQrBw1C,gBAGAG,EAAO,SAAAxlD,GACP,OAAAylD,IAAAv2B,MAAA91B,KAAAssD,IAAAp8C,WAAAkD,OAAA,SAAAm5C,GAAA,OAAAA,EAAA3lD,WAAA,IAGA4lD,EAAO,SAAAC,EAAArrD,GAGP,OAAAirD,IAAAv2B,MAAA91B,KAAAssD,IAAAp8C,WAAAkD,OAAA,SAAAm5C,GAAA,OAAAA,EAAAG,SAAAtrD,KAAAqrD,IAAA,IAGAE,EAAM,SAAW7/C,GAEjB,MADe,8DACf3E,KAAA2E,IAGA8/C,EAAY,SAAA9/C,EAAA1L,MACV0L,KAIAA,EAAApE,QAAO,QAAU,OAGjBikD,EAAM7/C,GAAU,CAChB,IAAAy/C,EAAiBC,EAAmB1/C,EAAE1L,GAAUyrD,EAAA,EAAAC,MACjD,OAAAP,IAAA3lD,UAAAiB,EAGD,OAAAiF,IAGAigD,EAAmB,SAAAC,GAGnB,IAAAT,EAAiBF,IAAwCv2B,MAAA91B,KAAAssD,IAAAp8C,WAAAkD,OAAA,SAAAm5C,GAAA,OAAAA,EAAA3lD,OAAAomD,IACzD,OAAAT,EAAAxlD,OAAA,EAAAwlD,EAAA,QAAA1kD,GAGAolD,EAA2B,SAAMngD,EAAW1L,MAC1C0L,EAAApE,QAAa,WAAAikD,EAAA7/C,GACd,OAAAA,EAID,IAAIogD,EAAkBH,EAAAjgD,UACpBogD,EAIF9rD,EAAA8rD,EAAAR,SAAAtrD,GAAA8rD,EAAAR,SAAAP,KAHC,IAAAgB,EAAAxqD,EAAAmK,GAAAsgD,eAMDC,EAAe,SAAcvgD,EAAO1L,GACpC,OAAAA,EAAA0L,EAAA4/C,SAAAtrD,GAAA0L,EAAA4/C,SAAAP,MA2DAG,EAAI,kBACFP,IAvDIuB,EAAU,IAAGppC,IAqCbqpC,EAAO,CApCKC,EAAqB,QAAS,mBAAe,YAAW,GACpEA,EAAgB,QAAqB,aAAS,WAAoB,YACrDA,EAAqB,QAAS,kBAAgB,WAAW,YACtEA,EAAkB,QAAqB,cAAS,WAAsB,YAExDA,EAAqB,QAAU,oBAAsB,WAAY,aAgC/EC,EAAQ,CA/BKD,EAAqB,SAAU,oBAAgB,YAAW,GACvEA,EAAiB,SAAqB,cAAU,WAAqB,YACvDA,EAAqB,SAAU,mBAAiB,WAAW,YACzEA,EAAmB,SAAqB,eAAU,WAAuB,YAE9DA,EAA4B,SAAQ,qBAAuB,WAAM,aA2B5EE,EAAK,CA1BKF,EAAqB,MAAO,iBAAa,YAAW,GAC9DA,EAAc,MAAqB,WAAO,WAAkB,YACjDA,EAAqB,MAAO,gBAAc,WAAW,YAChEA,EAAgB,MAAqB,YAAO,WAAoB,YAEpDA,EAAqB,MAAQ,kBAAoB,WAAY,aAsBzEG,EAAO,CArBIH,EAAqB,OAAQ,kBAAc,YAAW,GACjEA,EAAe,OAAqB,YAAQ,WAAmB,YACnDA,EAAqB,OAAQ,iBAAe,WAAW,YACnEA,EAAiB,OAAqB,aAAQ,WAAqB,YAErDA,EAAqB,OAAU,mBAAoB,CAAE,UAAU,aAiB7EI,EAAU,CAhBGJ,EAAqB,SAAU,oBAAgB,YAAW,GACvEA,EAAiB,SAAqB,cAAU,WAAqB,YACvDA,EAAqB,SAAU,mBAAiB,WAAW,YACzEA,EAAmB,SAAqB,eAAU,WAAuB,YAE3DA,EAAqB,SAAU,qBAAsB,WAAiB,aAa1FK,EAAY,CAZOL,EAAqB,SAAU,oBAAgB,YAAW,GACvEA,EAAiB,SAAqB,cAAU,WAAqB,YACvDA,EAAqB,SAAU,mBAAiB,WAAW,YACzEA,EAAmB,SAAqB,eAAU,WAAuB,YAE/DA,EAAuB,SAAe,qBAAY,WAAiB,aAQnFF,EAAQzvD,IAAI,QAAQ0vD,GACpBD,EAAQzvD,IAAI,SAAO4vD,GACnBH,EAAQzvD,IAAI,MAAM6vD,GAClBJ,EAAQzvD,IAAI,OAAQ8vD,GACpBL,EAAQzvD,IAAI,SAAU+vD,GAEtBN,EAAOzvD,IAAA,SAAQgwD,GASf9B,EARAuB,GArDkD,IAE5CA,EAqCAC,EACAE,EACAC,EACAC,EACAC,EAENC,gQC9JWC,EAAU,CAAG1qD,MAAO,MAAQD,MAAO,IACnC4qD,EAAA,CAAA3qD,MAAoB,OAAMD,MAAO,QACjC6qD,EAAU,kBAAqC,sBAAoB,UAAW,MAErFC,EAAS,SAAGC,GAAA,OAAAA,IAAAH,EAAW5qD,OAC3B6Y,EAAOlc,OAAAquD,EAAA,QAAAruD,CAAA,SAAAsB,SACL,CAMAgtD,aAAAtuD,OAAAuuD,EAAA,IAAAvuD,CAAAqc,MAAA/Z,EAAA,0MAAAhB,EAAAw5C,OAAA0T,WAgBmCC,EAAA,SAAA/sD,YAMrC+sD,EACE9sD,GAGF,IAAAC,EAAAF,EAAAG,KAAkBC,KAAGH,IAACG,KAFrB,SAGC4sD,mBAAwB,SAAGC,GAC3B,OAAgBA,GAAkBT,GAE/B56C,OAAI,SAAAigC,GAAQ,MAAO,KAAHA,IAEfrwC,IAAI,SAAO0rD,GAAe,OAAAtrD,MAAAsrD,EAAAvrD,MAAAurD,KAM9B,OALEhtD,EAAAD,MAAQktD,eACT7lD,EAAAkgB,QAAA+kC,GAGDjlD,EAAOkgB,QAAQ8kC,GACfhlD,KAGQ8lD,eAAA,SAAAp+C,GACR,IAAIq+C,EAAmBntD,EAAAD,MAAAotD,kBACrBA,GAEDA,EAAAr+C,EAAArN,QArBFzB,EARoC,OAMrCU,EAAwB,EAAAmsD,EAAA/sD,KA2BhBa,UAAEoB,OAAA,WACR,IAAMC,EAAA9B,KAAUH,MAAKqtD,EAAAprD,EAAAorD,UAA4BL,EAAE/qD,EAAA+qD,UAAAM,EAAArrD,EAAAqrD,QAAA5rD,EAAAO,EAAAP,MAAA6rD,EAAAtrD,EAAAsrD,cAAAC,EAAAvrD,EAAAurD,sBAAA7tD,EAAAsC,EAAAtC,MAC7C0H,EAAAlH,KAAe4sD,mBAAYC,GAC3BrtC,EAAaje,GAAW,GACxB+rD,EAASpmD,EAAe0D,KAAE,SAAAgE,GAAA,OAAAA,EAAArN,QAAAie,KAAA0sC,EAE1B/wC,EAAAf,EAAa5a,GACjB+tD,EAAAzsB,IAAsB,CACtB0sB,kBAAA,EACAC,sBAAsBH,EAAe9rD,QAAK0qD,EAAU1qD,MACnDksD,uBAAAJ,IAAAnB,WAIClqD,EAAAlB,EAAAmB,cAAA,MAAK,CAAAH,UAAUwrD,KAIXxsD,EAAAmB,cAAA,OAAAH,UAAA,6BACEE,EACElB,EAAAmB,cAAUyrD,EACV,GAAAj8C,UAAS,MAAUC,QAAAw7C,KAEnBpsD,EAAAmB,cAAA,UAAGH,UAAU,sEAGlBs0B,QAAA62B,GACDjrD,EAAAlB,EAAAmB,cAAC,KAAAH,UAAA,oBAWRE,EAAAlB,EAAAmB,cAAA0rD,EAAA,GAAA7rD,UAAA++B,IAAA,0BAAA3lB,EAAAqxC,aAAAa,GAAA9rD,MAAA+rD,EAAA9rD,MAAA8rD,EAAA9rD,MAAA0F,UAAA5E,SAAAtC,KAAAgtD,eAAA/0B,cAAA,SAnEM00B,EAAAT,UAAUA,EAoEnBS,EAAAR,WAACA,EAxEsCQ,EAAA,CAATlqD,EAAA,sDCtC9B,IAAAC,EAAA,kDAEAC,OAAAC,QAAAC,uDADA,iFCDA,IAAAH,EAAA,4CAEAC,OAAAC,QAAAC,uDADA,2hBCDA,IAAAH,EAAA,uEAEAC,OAAAC,QAAAC,uDADA,8uECFA,iBAAAgrD,EA2DAC,EAMAC,EAKAC,EAtEA9zD,EAAAC,EAAAC,EAAA,sBAAAyzD,IAAA3zD,EAAAC,EAAAC,EAAA,sBAAA0zD,IAAA5zD,EAAAC,EAAAC,EAAA,sBAAA4zD,IAAA9zD,EAAAC,EAAAC,EAAA,sBAAA6zD,IAAA/zD,EAAAC,EAAAC,EAAA,sBAAA8zD,IAAAh0D,EAAAC,EAAAC,EAAA,sBAAA+zD,IAICj0D,EAAAC,EAAAC,EAAA,sBAAAg0D,aAHCP,GACAA,EAAA,gBACAA,EAAA,gBAHUA,EAAA,MAAO,SA2DnBA,IAAYA,EAIX,cAHCC,GACAA,IAAA,eACAA,IAAA,eAHUA,EAAeA,EAAA,MAI1B,YAEDA,IAAYA,EAGX,cAFCC,GACAA,IAAA,iBAFUA,EAAyBA,EAAA,MAGpC,YAEDA,IAKCA,EAAA,cAJCC,GACAA,EAAA,YACAA,EAAA,YACAA,EAAA,gBAJUA,EAAA,OAAS,UAYdA,IAAMA,EAAsB,KAEjCD,EAAAM,UAmBFF,EAhBEF,EAAmB,CACnB,CAAE1sD,MAAOysD,EAAUM,KAAMzyD,KAAM,QAC/B,CAAE0F,MAAOysD,EAAUO,KAAM1yD,KAAM,QAC/B,CAAE0F,MAAOysD,EAAUQ,OAAQ3yD,KAAM,6BACjC,CAAA0F,MAAAysD,EAAAS,OAAA5yD,KAAA,8BAGAqyD,EAAyB,CACzB,CAAE3sD,MAAOusD,EAAgBY,KAAMltD,MAAO,OAAQ0hB,YAAa,wBAC3D,CAAA3hB,MAAAusD,EAAAa,KAAAntD,MAAA,OAAA0hB,YAAA,yCAEE3hB,MAAOusD,EAAOc,MACdptD,MAAA,QACD0hB,YAAA,kFAIDirC,GACAA,IAAA,mBAFUA,EAAmBA,EAAA,MAG9B,YAQMA,IAA2BA,EAAyB,SACzDC,EAAS,CACT,CAAA7sD,MAAA4sD,EAAAU,OAAArtD,MAAA,SAAA0hB,YAAA,mBAEE3hB,MAAO4sD,EAAOS,MACdptD,MAAA,QACD0hB,YAAA,6ECvHH,IAAAxgB,EAAA,4FAEAC,OAAAC,QAAAC,uDADA,o5hBCEwDisD,EAAcC,aAAd,GAAAllB,EAAA,EAAAA,EAAApgB,UAAAtkB,OAAc0kC,wBAGpE,IAAAmlB,EAAkBC,EAAA,EAAAzlC,WAAA,EAAAhpB,EAAA,EAAAupC,GAAAklB,CAAAF,UAChB,SAAOlvD,GACP,OAAAoC,EAAAlB,EAAAmB,cAAA8sD,EAAAxuD,EAAA,KAAAX,EAAA,CAAAqvD,MAAAC,EAAA,oOCkCFC,EAAyB,oBAAzBA,EAAAlqC,EAgBCmqC,GAoOD,IAAAvvD,EAAAE,KAnPEA,KAAKsvD,mBAAqB,SAACtqB,KAC3BhlC,KAAKqvD,UAAYA,EACjBrvD,KAAKolB,UAASiqC,EAAOpuD,IAAA,aACrBjB,KAAKklB,OAAQA,EACbllB,KAAKuvD,SAAUF,EAAMpuD,IAAA,YACrBjB,KAAKwvD,WAAa,GAClBxvD,KAAKhD,OAASgD,KAAI1E,MAAA0B,OAElBgD,KAAMyvD,OAAS,GACf,IAAIzqB,EAAQ0qB,EAAA,EAAA/yD,OAAAqD,KAAA1E,MAAAyY,MACVixB,IACAhlC,KAAK2vD,SAAU3qB,EAAGnoC,GACnBmD,KAAA4vD,WAAA5qB,EAAAhgC,MAGFkgB,EAAAtL,IAAA,wCAAA9Z,EAAA+vD,kBAsOF,SAnOQpvD,UAAWovD,cAAC,WACjB7vD,KAAKhD,OAAArB,KAAU,uBAChBqE,KAAA3E,UAAAy0D,iBAAA9vD,KAAA1E,UAGCmF,UAAAsvD,mBAAA,WACDC,EAAA,EAAAD,wBAGMtvD,UAAMijC,QAAU,WACtB1jC,KAAA1E,MAAAooC,aAGMjjC,UAAOwvD,gBAAsB,SAAOC,EAAAn2C,GAC1C/Z,KAAAklB,OAAAirC,MAAA3qC,SAAA0qC,EAAAn2C,MAGMtZ,UAAA2vD,WAAgB,SAAAntB,EAAqBotB,QACxCJ,gBAAU,qBACVhtB,WAAIA,EACJotB,OACC9tB,QAAAviC,KAAA1E,MAAAuB,QAIE4D,UAAW6vD,UAAY,WAC7BtwD,KAAAowD,YAAA,SAGM3vD,UAAW8vD,UAAY,WAC7BvwD,KAAAowD,YAAA,SAGM3vD,UAAW+vD,eAAc,WAC/BxwD,KAAAowD,YAAA,SAGM3vD,UAAKgwD,aAAmB,WAC3BzwD,KAAK0wD,oBACL1wD,KAAK0wD,mBAAY,EACjB1wD,KAAKhD,OAAArB,KAAA,iBAAyB,MAC/BqE,KAAA2wD,uBAAAzyD,OAAA0yD,EAAA,EAAA1yD,CAAA2yD,EAAA,OAIKpwD,UAAYqwD,aAAO,SAAEl1D,EAAWm1D,EAAEr0D,EAAIZ,GAE5C,IAAIk1D,EAAA,CAAAp1D,QAAAm1D,cAAUj1D,KAACA,GACbm1D,EAAwBlwD,EAAAipC,SAAA+mB,OACtBA,YAAoB,WACpB,OAAA7nC,YAAA6nC,KAIFr0D,EACDsD,KAAAwvD,WAAAzyD,OAAAL,EAAA,EAAAs0D,GAEAhxD,KAAAwvD,WAAA5/C,KAAAohD,2IAIK,SACNE,EAAK,IACHthD,KAAM,CACN/T,KAAK,OACLs1D,MAAM,oBACNr1D,KAAA,qBACCs1D,SAAA,MAGDpxD,KAAK3E,UAAK+B,KAAAC,WACRuS,KAAM,CACN/T,KAAK,OACLs1D,MAAM,oBACNt0B,KAAM,SACN/gC,KAAA,qBACCs1D,SAAA,QAIHxhD,KAAM,CACN/T,KAAK,QACLs1D,MAAM,qBACNr1D,KAAA,oBACCs1D,SAAA,QAEHv8C,qBAAA,CACcq8C,0CADd,SAGMr8C,EAAA2U,MAAA1nB,EAAYiT,EAAG0yB,OAAK,CAAAjnC,EAAkB,EAAAgpB,WAAA,GAAA5T,EAAAiP,YAC5CwsC,EAAUrxD,KAAAsxD,oBACR1hD,KAAM,CACN/T,KAAK,WACLs1D,MAAM,GACNr1D,KAAA,mBACCy1D,QAAAF,IAGDrxD,KAAK3E,UAAO+B,KAAOC,UACnB6zD,EAAKthD,KAAK,CAAA4hD,SAAA,EAAA30B,KAAA,aACRjtB,KAAM,CACN/T,KAAK,SACLs1D,MAAM,sBACNt0B,KAAM,SACN/gC,KAAA,oBACCs1D,SAAA,uBAOC3wD,UAAU6wD,gBAAA,WAChB,IAAIJ,EAAM,GAsBX,OArBGlxD,KAAK1E,MAAK2nC,YAAAjjC,KAAA3E,UAAA+B,KAAAC,YACRuS,KAAM,CACN/T,KAAK,YACLs1D,MAAM,mBACNt0B,KAAA,SACCu0B,SAAA,UAGDxhD,KAAM,CACN/T,KAAK,OACLs1D,MAAM,mBACLt0B,KAAA,cAIHjtB,KAAM,CACN/T,KAAK,aACJs1D,MAAA,qCAGHnxD,KAAAhD,OAAYrB,KAAA,qBAAAu1D,GACbA,kGAIC1wD,EAAU,EAAAR,KAAA,SAAA8B,uBAIVrB,UAAYgxD,2BAA8B,WAC3C,OAAAzxD,KAAA3E,UAAA+B,KAAA6lC,aAAAjjC,KAAA1E,MAAA2nC,cAGMxiC,UAAAixD,qBAAkC,SAAApyD,GACvCU,KAAKV,gBAASA,EACfU,KAAAsL,OAAApN,OAAAyzD,EAAA,EAAAzzD,CAAA8B,KAAA1E,MAAAgE,MAGMmB,UAAWoB,OAAS,SAAU4oC,GACpCzqC,KAAAhD,OAAArB,KAAA,SAAA8uC,MAGChqC,UAAAmxD,UAAA,WACD1zD,OAAAyzD,EAAA,EAAAzzD,CAAA8B,KAAA3E,UAAA2E,KAAA1E,UAGCmF,UAAApG,YAAA,WACD6D,OAAAyzD,EAAA,EAAAzzD,CAAA8B,KAAA3E,UAAA2E,KAAA1E,OAAA,MAGCmF,UAAAjG,cAAA,WACD0D,OAAAyzD,EAAA,EAAAzzD,CAAA8B,KAAA3E,UAAA2E,KAAA1E,UAGCmF,UAAAlG,UAAA,WACD2D,OAAAyzD,EAAA,EAAAzzD,CAAA8B,KAAA1E,UAGCmF,UAAAhG,WAAA,WACDyD,OAAAyzD,EAAA,EAAAzzD,CAAA8B,KAAA3E,UAAA2E,KAAA1E,UAGKmF,UAAYoxD,YAAA,kBACd7xD,KAAAq1B,MACD,QAECr1B,KAAO1E,MAAM4nB,YACd,OAECljB,KAAA1E,MAAOw2D,OAAQ9xD,KAAA1E,MAAAw2D,MAAA3sD,OAChB,QAEF,2CAGS,IAAAkhB,EAAAvkB,EACJxG,EAAQ0E,KAAG1E,MAEXy2D,EAAQz2D,EAAS4nB,aAAW,GACd,YAAhBhc,EAAQ6zB,OACTg3B,EAAA/xD,KAAAq1B,OAAA/5B,EAAA4nB,aAAA,IAGD,IACI8uC,EADEhyD,KAAAqvD,UAAuBpuD,IAAA,eAClBpD,QAAAk0D,EAAAz2D,EAAiDwC,YAEtDmiD,EAAK,iDACPgS,EAAI/zD,OAAAlD,EAAO,eAAPkD,CAAO8zD,MAEf/R,GAAIyP,EAAuC,EAAAwC,oBAAAD,EAAA/zD,OAAAi0D,EAAA,EAAAj0D,CAAA+zD,GACzC32D,EAAMw2D,OAAAx2D,EAAiBw2D,MAAG3sD,OAAA,GAE1B,IAAIitD,EAAIl0D,OAAAm0D,EAAuC,EAAvCn0D,CAAuC5C,GAAAg3D,6DAC1C,IAAMC,EAAI/xD,EAAA,EAAA4xD,GAAAI,EAAAD,EAAAv9C,QAAAw9C,EAAAv9C,KAAAu9C,EAAAD,EAAAv9C,OAAA,CACb,IAAIy9C,EAAAD,EAAAjxD,iDAGFrD,OAAAi0D,EAAY,EAAZj0D,CAAYu0D,EAAA70B,MACZ,aACA1/B,OAAIi0D,EAAA,EAAJj0D,CAAIu0D,EAAAj+C,QACJ,KACAtW,OAAAi0D,EAAY,EAAZj0D,CAAYu0D,EAAA72D,OACf,8GAEFqkD,GAAA,QAKF,OADCA,GAAO,UAKVmP,EAtPwB,yBC3CzB,aAAAl1D,EAAAC,EAAAC,EAAA,sBAAAs4D,IAAA,IAAAC,EAAAz4D,EAAA,QAAA04D,EAAA14D,EAAAqhC,EAAAo3B,GAAAE,EAAA34D,EAAA,QAAkC44D,EAAA54D,EAAA,UAQgB,SAAA4H,GAChD,IAAAixD,EACEjxD,EAAAixD,0BACEH,EAAA7xD,EAAAmB,cAAA0wD,EAA4B7xD,EAAAoQ,SAAqB,KACjDyhD,EAAA7xD,EAAAmB,cAAA,MAAAH,UAAc,gBAAgB,qBAC5BhB,EAAAmB,cAAA,OAAAH,UAAK,mBACHhB,EAAAmB,cAAA,OAAAH,UAAO,aACLhB,EAAAmB,cAAA,SAAAH,UAAA,8BACEhB,EAAAmB,cAAA,eACEnB,EAAAmB,cAAA,UACA0wD,EAAA7xD,EAAAmB,cAAA,UAAI,QAGR0wD,EAAA7xD,EAAAmB,cAAA,MACGyO,QAAA,eACyB5P,EAAAmB,cAAsB,QAC5C,KAAA6wD,KACE3xD,IAAA,SAAA4xD,EAAAt2D,GAAA,OAAAk2D,EAA0B7xD,EAAAmB,cAAA,MAAAoE,IAAA5J,GAC1Bk2D,EAAA7xD,EAAAmB,cAAA,UAAK8wD,EAAWC,MAChBL,EAAA7xD,EAAAmB,cAAA,UACG8wD,EAAWE,MAW1BN,EAAA7xD,EAAAmB,cAAK,KAAU,KAAA8wD,EAAeG,UAAAP,EAAA7xD,EAAAmB,cAAA,KAAAH,UAAA,iCAAA6wD,EAAA7xD,EAAAmB,cAAA,KAAAH,UAAA,yDAC5BhB,EAAAmB,cAAA,MAAC,CAAAH,UAAa,iBAKtB6wD,EAAA7xD,EAAAmB,cAAAkxD,EAAA,CAAAL,6BAM2D,SAAAjxD,GAC3D,IAAMixD,EAAWjxD,EAAAixD,uBACFA,EAAAM,KAAA,SAAA7iD,GAAA,OAAAA,EAAA6kB,QAEd,YAGD,IAAAi+B,EAAmB,KACHC,QAAE,SAAA/iD,GACdA,EAAA6kB,OACDi+B,EAAA1jD,KAAAY,SAKCgjD,EAAAF,EAAAlyD,IAAA,SAAAoP,EAAA9T,GAAA,OAAMk2D,EAA0B7xD,EAAAmB,cAAA,OAAAoE,IAAA5J,KACpBqE,EAAAmB,cAAA,QAAA46B,MAAA,CAAA22B,WAAA,aAAG,IACbjjD,EAAA0iD,KAEFN,EAAA7xD,EAAAmB,cAAA,YACC0wD,EACC7xD,EAAAmB,cAAA,YAAAsO,EAAA6kB,WACEi+B,EAAAnuD,OAAA,GAAAytD,EAAM7xD,EAAAmB,cAAA0wD,EAAA7xD,EAAAoQ,SAAA,KACNyhD,EAAA7xD,EAAAmB,cAAA,WAMD0wD,EAAA7xD,EAAAmB,cAAC,eACR,OAAA0wD,EAAA7xD,EAAAmB,cAAA2wD,EAAA,GAAAj3D,MAAA,mBAAA83D,SAAAZ,EAAA,wBAAA18C,MAAAu9C,KAAAH,2BCjFF,iBACEI,EAAS,CACT,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGAC,EAAS,CACT,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAsBoBz5D,EAAA,GACpB05D,8BAhBuB9uD,GACvB,IAAM+uD,WAMEtiB,OACR,IAAAsiB,EAAU,KACJ3tD,EAAI,EAAIA,EAAIqrC,EAAEtsC,OAAUiB,IAC7B2tD,MAAA,GAAAA,EAAAtiB,EAAAC,WAAAtrC,GAEF,OAAA2tD,EAXYC,CAAGhvD,EAAA4O,eAGf,OAAA1I,MAFO0oD,EAAc10D,KAAA08B,IAAAm4B,EAAkBH,EAAazuD,SAEpDuI,YADemmD,EAAa30D,KAAA08B,IAAAm4B,EAAGF,EAAA1uD,gIChEJ8uD,EAAA,SAAAr0D,YAI1Bq0D,EACEp0D,GAJF,IAAAC,EAAIF,EAAgBG,KAASC,KAAAH,IAAcG,KAKnCF,EAAAo0D,KAAAp1D,SAAEoD,cAAA,OAER,IAAIJ,EAAAhC,EAAWD,MAAAkC,EAAAD,EAAAC,UAAA8S,EAAA/S,EAAAqyD,YAAA,IAAAt/C,EAAA/V,SAAA60D,KAAA9+C,EAMhB,OALG9S,GACDjC,EAAAo0D,KAAAE,UAAAtuD,IAAA/D,GAGDjC,EAAKu0D,WAAWF,mCACjBr0D,EAdyB,OAI1BU,EAAwB,EAAAyzD,EAAAr0D,KAatBa,UAAKwpB,qBAA4B,WAClCjqB,KAAAq0D,WAAAxL,YAAA7oD,KAAAk0D,SAGCzzD,UAAOoB,OAAA,WACR,OAAAyyD,EAAAvzD,EAAAwzD,aAAAv0D,KAAAH,MAAAkrB,SAAA/qB,KAAAk0D,OAtByBD,EAAA,uCCqD5B,SAAAltD,UA6GAM,KAAAsI,QAAAC,KAAA,CACAC,KArGA,SAAAxI,+BA4BA,SAAAmtD,EAAA97B,GACA+7B,EAAAC,SAGA,GAAAD,EAAAjqD,IACAiqD,EAAAjqD,GAAA,EACAnD,EAAA4zB,wBAIA,SAAAxC,EAAAC,GACA,IAAA+7B,EAAAC,OAGA,GAAArtD,EAAAuxB,cAAiCvxB,EAAAuxB,eACjC67B,EAAAjqD,GAAA,MADA,CAKA,IAAAoX,EAAAva,EAAAua,SACA6yC,EAAAjqD,EAAAtL,KAAA+I,IAAA,EAAA/I,KAAAyJ,IAAA+vB,EAAAmC,MAAAjZ,EAAAkZ,KAAAzzB,EAAAxI,UACA41D,EAAAhqD,EAAAvL,KAAA+I,IAAA,EAAA/I,KAAAyJ,IAAA+vB,EAAAsuB,MAAAplC,EAAAm2B,IAAA1wC,EAAAiE,WACAjE,EAAA4zB,wBA9CA5zB,EAAAstD,aAAA,SAAA9tD,GACA,GAAAA,EAEA,CACA,IAAA6zB,EAAArzB,EAAAy0B,IAAAj1B,GACA4tD,EAAAjqD,EAAAtL,KAAA+I,IAAA,EAAA/I,KAAAyJ,IAAA+xB,EAAAI,KAAAzzB,EAAAxI,UACA41D,EAAAhqD,EAAAvL,KAAA+I,IAAA,EAAA/I,KAAAyJ,IAAA+xB,EAAAqd,IAAA1wC,EAAAiE,gBAJAmpD,EAAAjqD,GAAA,EAOAnD,EAAA4zB,wDAKA5zB,EAAAutD,cAAA,SAAA/tD,GACAA,GACAQ,EAAAstD,aAAA9tD,GACA4tD,EAAAC,QAAA,GAGArtD,EAAAwtD,gBAAA,WACAJ,EAAAC,QAAA,GA4BArtD,EAAAyI,MAAAisB,WAAAnsB,KAAA,SAAAvI,EAAA20B,GACA30B,EAAAG,aAAAitD,UAAA15B,OAGAiB,EAAA84B,SAAAN,GACSx4B,EAAAC,UAAAxD,MAGTpxB,EAAAyI,MAAAqsB,YAAAvsB,KAAA,SAAAvI,EAAAC,GACA,IAAAvE,EAAAsE,EAAAG,aAAAitD,UACA,GAAA1xD,EAAAg4B,KAAA,yBAQA,GAHAzzB,EAAAgC,kCAGA,GAAAmrD,EAAAjqD,EAAA,iDAQA,GALAlD,EAAAkG,YAAAzK,EAAAmI,MACA5D,EAAAqG,UAAA5K,EAAA4K,6BAGArG,EAAA6H,aACA,GAAApM,EAAAg4B,KAAAj0B,QAAA,MACA,IAAAiuD,EAAA71D,KAAA+N,MAAAwnD,EAAAjqD,GAAAwqD,EACA1tD,EAAAg7C,OAAAyS,EAAA,GACAztD,EAAA+H,OAAA0lD,EAAA1tD,EAAAiE,UAEA,OAAAvI,EAAAg4B,KAAAj0B,QAAA,MACA,IAAAmuD,EAAA/1D,KAAA+N,MAAAwnD,EAAAhqD,GAAAuqD,EACA1tD,EAAAg7C,OAAA,EAAA2S,GACA3tD,EAAA+H,OAAAhI,EAAAxI,QAAAo2D,GAEA3tD,EAAAiI,SAESjI,EAAAuC,aAGTxC,EAAAyI,MAAA0sB,SAAA5sB,KAAA,SAAAvI,EAAA20B,GACAA,EAAAS,OAAA,WAAA+3B,GACSx4B,EAAAS,OAAA,YAAAhE,MAMTvxB,QA9GA,CACAutD,UAAA,CACA15B,KAAA,KACA7vB,MAAA,wBACAyC,UAAA,IA2GA3I,KAAA,YACKqL,QAAA,QAjHL,gIC/CE6kD,EAAY,CACZC,WAAU,+BACVC,SAAA,YASqC,SAAAtzD,GACrC,IAAAipB,EAAAjpB,EAAAipB,SAAAsqC,EAAAvzD,EAAAwzD,GAAAzgD,EAAA/S,EAAkDyzD,iBAAA,IAAA1gD,EAf5B,QAe4BA,EAAAE,EAAAjT,EAAAg7B,aAAA,IAAA/nB,EAAAmgD,EAAAngD,EAIhDygD,EAAmB,CACnBC,OAAQ,CAAEF,UAAW,GACrBG,SAAS,CAAEH,UAAWA,GACtBI,QAAS,CAAEJ,UAAW,QAAGH,SAAA,WACzBQ,QAAA,CAAAL,UAAA,IAgBF,OAAAtzD,EAAAlB,EAAAmB,cAAA2zD,EAAA90D,EAAA,CAAAu0D,GAAAD,EAAAS,QArCiC,KAqCjC,SAAA71D,GAAA,OAAAgC,EAAAlB,EAAAmB,cAAA,OAAA46B,MAAAt8B,EAAA,KAAAs8B,EAAA04B,EAAAv1D,KAAA8qB,yDC/BAgrC,EAA0D,SAAGC,GAE7D,IAAMC,EAAY,GAsBlBC,EAAe,CAACC,UArBV,SAAkB1hD,MACpBwhD,EAAUxhD,EAAMjD,OAAAuC,MACjB,UAAAqC,MAAA,mDAAA3B,EAAAjD,OAAAuC,MAKD,OADAkiD,EAAOxhD,EAASjD,OAAAuC,MAAAU,EAAA2hD,OAChBF,GAcc7pB,OAZqC,2BAAApsC,EAA2Bo2D,QAC/D,IAATp2D,IAAoBA,EAAO+1D,GAEjC,IAAII,EAAQH,EAAAI,EAAAtiD,aACVqiD,EACDA,EAAAn2D,EAAAo2D,GAGDp2D,KAKF,OAAAi2D,GC5CFh8D,EAAAC,EAAAC,EAAA,sBAAAk8D,EAAA,IAAAp8D,EAAAC,EAAAC,EAAA,sBAAAk8D,EAAA,IAAuCp8D,EAAAC,EAAAC,EAAA,sBAAA27D,wBCCvC,IAAArzD,EAAA,gEAEAC,OAAAC,QAAAC,uDADA,o9DCCE0zD,EAAc,CACdC,SAAU,IAAAC,EAAK11D,EAAA21D,SACfC,UAAS,EACTC,KAAA,EACAC,QAAQ,EACRC,UAAU,EACVC,YAAW,EACXC,aAAY,EACZC,OAAA,YAGAC,EAAOC,GACRV,EAAA11D,EAAAq2D,WAAA3wC,EAAA,KAAA8vC,EAAAY,aAGCE,EAAO5lB,GACR,OAAAglB,IAAAhlB,GAAA,aCPC6lB,EAAAx1D,GAMA,IAAAy1D,EAAkBz1D,EAACy1D,YAAOC,EAA4B11D,EAAA01D,gBACvD,OAAAD,EAAAvnC,OAAA,SAAA+gB,EAAA0mB,GAAA,OAAAhxC,EAAA,EAAAsqB,EAAA2mB,EAAAF,EAAAC,KAAA,QAGCE,EAAc,SAAQC,GACtB,OAAAA,EAAA/5D,QAAA,mCAMA65D,EAAAG,EAAAD,OAEEC,IAAUD,EACX,SAEK,IAEFE,EAFEn5B,EAAA,GACF78B,EAAAi2D,EAAeJ,EAAAC,IAAAI,EAAAl2D,EAAAk2D,QAAAC,EAAAn2D,EAAAm2D,UAGlBH,EAAA,IAAAI,OAAA,MAAAF,EAAA,IAAAC,SACC5iC,GACD,OAAAsJ,EAcF,SAbsC9gC,QAAAi6D,EAAO,SAAAK,aAAP,GAAAtuB,EAAA,EAAAA,EAAApgB,UAAAtkB,OAAO0kC,2BAExCsuB,EAAY,CACZ,IAAAv2C,EAAaw2C,IAAAjzD,OAAA,KACPyK,KAAE,CACN/T,KAAKs8D,EACLtvB,MAAMjnB,EACNzc,OAAKgzD,EAAShzD,OACb2jC,IAAAlnB,EAAAu2C,EAAAhzD,SAGJ,WAEJw5B,EAGD,IAAM05B,EAAY,IAElBC,EAAA,4BAIQP,EAAyBl8D,GAE/B,IAAMo8D,EAAO,IAAGzmC,IAAK,aAenB,CACAwmC,QAfMn8D,EAAWgC,QAAMy6D,EAAW,SAAY7mB,EAAA7/B,OAE9C,IAAA2mD,EAAc3mD,EAAM4mD,WAAYH,GACxBjyD,EAAI,EAAGA,EAAKwL,EAACzM,SAAUiB,EAAA,CAC7B,IAAIqyD,EAAA7mD,EAAY8uC,OAAMt6C,GACpBmyD,GAAY3mD,EAAM8uC,OAACt6C,EAAA,KAAAiyD,EACpBJ,EAAAS,OAAAD,GACMA,IAASJ,GACfJ,EAAAnyD,IAAA2yD,GAGF,WAKDR,MAAA/jC,MAAA91B,KAAA65D,GAAAxxD,KAAA,KClFJvM,EAAAC,EAAAC,EAAA,sBAAAgZ,EAAA,IAAAlZ,EAAAC,EAAAC,EAAA,sBAAAgZ,EAAA,IAAAlZ,EAAAC,EAAAC,EAAA,sBAAAgZ,EAAA,IAAAlZ,EAAAC,EAAAC,EAAA,sBAAAgZ,EAAA,IAAAlZ,EAAAC,EAAAC,EAAA,sBAAAgZ,EAAA,IAAAlZ,EAAAC,EAAAC,EAAA,sBAAA88D,IAAAh9D,EAAAC,EAAAC,EAAA,sBAAAi9D,IAAAn9D,EAAAC,EAAAC,EAAA,sBAAAk9D,IAAAp9D,EAAAC,EAAAC,EAAA,sBAAAs9D,IAAyBx9D,EAAAC,EAAAC,EAAA,sBAAA29D,2ICmDf,SAAAn4D,cAqBNC,GACD,OAAAD,EAAAG,KAAAC,KAAAH,IAAAG,KAtBO,OAoBRymB,EAAgC,EAAAkyC,EAAA/4D,GApBxB+4D,EAAA,QACNC,EAAqB,SACrBC,gBAjCgB3E,GACnB,gBAAAA,EAAA53D,QAAA,eAAA43D,EAAAngD,MAiCG+kD,mBA3BkB5E,GACrB,oBA2BG6E,0BAjBMl5D,EAAqB0D,EAAAyR,GAC7B,IAAIgkD,EAAWn5D,EAAIm5D,cACjBA,EAAWjlD,OAAGklD,EAAA,EACf,OAAAjkD,IAGD,IAAAjT,EAAOi3D,EAAAxwD,KAAAvH,IAAA,aACR,OAAAyP,EAAA3P,EAAAmB,cAAA,QAAAH,aAAAlC,EAAAkrB,uBCpC0BmuC,EAAAC,QACC,IAApBA,IAA4BA,EAAW,IAE7C,IAAAl8C,EAAO,IAAA/V,EAAAiyD,SACL,cACY,SAAOjF,EAAO3wD,EAAAyR,UACtBiI,EAAA47C,OAAa3E,YAqBCj3C,EAAKm8C,GACzB,IAAMC,EAAUp8C,EAAA67C,UAAMM,GAClBE,EAAUC,EAAAx4D,EAAAy4D,UAAAH,OACZC,EAED,SAID,IAAMG,EAAAL,EAAYM,WACZC,EAASF,EAAAr4D,IAAA,SAAMvF,GAAS,OAAWA,GAASA,EAAA+9D,YAAAnzD,KAAA,MAElDozD,EAAAN,EAAAx4D,EAAA+4D,SAAoCH,EAAAL,GAEhCS,EAAc,GACdC,EAAY,EAEhBC,EAAc,EAsDf,SArDG1G,QAAU,SAAS13D,GAEnBo+D,EAAUD,EAAKn+D,EAAA+9D,UAAAz0D,OACf,IAAAyc,EAAS,EA8CTi4C,EAAAtG,iBA7CM2G,EAAYC,EAAKC,OAqBfpB,KApBM,iBAANmB,EACFC,IACEpB,EAAWqB,EAAA,CACXx+D,OACAm+D,UAAOA,EACPC,QAAOA,EACPpxB,MAAKjnB,EACLknB,IAAAlnB,EAAWu4C,EAAAh1D,OACXpD,UAAK,qBAAAq4D,EACJhB,YAGFW,EAAAnqD,KAAAopD,GAGJp3C,GAAAu4C,EAAAh1D,eAGCi1D,EAAIA,EAAO,IAAMD,EAAOpmD,KAAK,KAAUomD,EAAA5jD,OAAA,IAClB,iBAAb4jD,EAAAxoD,SACJqnD,EAAWqB,EAAA,CACXx+D,OACAm+D,UAAOA,EACPC,QAAOA,EACPpxB,MAAKjnB,EACLknB,IAAAlnB,EAAWu4C,EAAAxoD,QAAAxM,OACXpD,UAAK,qBAAAq4D,EACJhB,YAGFW,EAAAnqD,KAAAopD,GAGFp3C,GAAAu4C,EAAAxoD,QAAAxM,gBAGG,IAAAiB,EAAA,EAAAA,EAAa+zD,EAAAxoD,QAAAxM,OAAAiB,GAAA,EAEd8zD,EAAAC,EAAAxoD,QAAAvL,GAAAg0D,KAONJ,EAAAC,EAAA,IAGJF,EAzFIO,CAAAr9C,EAAAs9C,EAAA,EAAAluB,OAAA6nB,IAFEl/C,sBAKI,SAAAnV,EACH0D,EAAAyR,UACEiI,EAAQ87C,iBAAgB,CACxBhuC,SAAUlrB,EAAEkrB,SAEdiuC,WAEDn5D,EAAAm5D,YAAAz1D,EAAAyR,cAqFLqlD,EACAv4D,GAeA,IAAIjG,EAAKiG,EAAIjG,KAAOm+D,EAAWl4D,EAAAk4D,UAAWC,EAAAn4D,EAAAm4D,QAAApxB,EAAA/mC,EAAA+mC,MAAAC,EAAAhnC,EAAAgnC,IAAA/mC,EAAAD,EAAAC,UAAAq3D,EAAAt3D,EAAAs3D,aACxCvwB,GAAAoxB,GAAAnxB,GAAAkxB,EAED,MAIDnxB,EAAM3pC,KAAK+I,IAAI4gC,EAAKmxB,GAEpBlxB,EAAA5pC,KAAAyJ,IAAAmgC,EAAAmxB,GAEApxB,GAAOmxB,EAEPlxB,GAAMkxB,EACIZ,EAAAiB,iBAAY,CACpB/9D,OAAQ,oBACH,CACHgK,IAAAzK,EAAQyK,IACRsb,OAAQinB,EACTvsC,OAAA,eAEI,CACHgK,IAAAzK,EAAQyK,IACRsb,OAAQknB,EACTxsC,OAAA,SAEDyX,KAAMklD,EAAa,EAClBzwD,KAAA,CAAAzG,gBC5JsC7H,EAAAC,EAAAC,EAAA,sBAAA8+D,0BCC3C,IAAAx2D,EAAA,oEAEAC,OAAAC,QAAAC,uDADA,ihPCFA,sBACE23D,UACE,CACAC,eAAW,WAAM,MAAI,IACrBrhB,UAAS,WAAM,MAAC,IAChBshB,QAAA,WAAmB,UACnBC,kBAAO,WAAU,UACjB/oD,MAAA,WAAc,MAAM,IACpBgpD,aAAA,WAAqB,MAAM,IAC3BC,oBAAoB,WAAM,MAAC,IAC3BC,mBAAO,WAAM,MAAI,IACjBC,MAAA,WAAkB,UAClBC,iBAAgB,WAAM,MAAC,IACvBC,eAAM,WAAS,MAAC,IAChB/J,KAAA,WAAW,MAAoC,aAAlC,SAAApvD,SACX,CACAyzD,UAFmDzzD,EAAAyzD,YAIrD2F,WAAA,WAAiB,MAAM,IACvBC,gBAAgB,WAAE,MAAM,IACxBC,iBAAkB,WAAM,UACxB54D,iBAAQ,WAAS,MAAC,IAClBygB,OAAA,WAAa,MAAM,IACnB1gB,YAAa,WAAM,UACnB84D,YAAA,WAAgB,MAAM,IACtBC,eAAA,sBAzBqCphE,EAAAC,EAAAC,EAAA,sBAAAogE,wBCCzC,IAAA93D,EAAA,4EAEAC,OAAAC,QAAAC,uDADA,q9BCcU04D,EAAA,SAAA17D,GAER,IAAAkrB,EACElrB,EAAAkrB,SAAAywC,EAAC37D,EAAA27D,WAAAhzD,EAAA3I,EAAA2I,YACCkI,EAAA3P,EAAAmB,cAAAu5D,EAAe,EAAAC,OAAAj1C,EAAiC,KAAA5mB,KACxCkB,EAAMmB,cAAI,OAAAH,UAAA,mCAChByG,EAAA9G,QAAAgP,EAAA3P,EAAAmB,cAAK,MAAU,CAAAH,UAAA,uCAAuCxE,IAAAiL,EAAA9G,WACpDX,EAAAmB,cAAA,OAAAH,UAAM,yCACL2O,EAAK3P,EAAWmB,cAAI,WAAA6oB,GAEtBviB,EAAA0a,aAAcxS,EAAA3P,EAAAmB,cAAG,MAAS,CAACH,UAAA,yCAGhCyG,EAAA0a,cACFs4C,GAAA9qD,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA,cAAA45D,cAAA,YAIQC,EAAA,SAAA/7D,GAER,IAAAkrB,EACElrB,EAAAkrB,SAAAviB,EAAC3I,EAAA2I,YACCkI,EAAA3P,EAAAmB,cAAAu5D,EAAe,EAAAG,YAA+Bn1C,EAAA,KAAA5mB,KACtCkB,EAAMmB,cAAI,OAAAH,UAAA,iCACfyG,EAAA9G,QAGLgP,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,uCAAAxE,IAAAiL,EAAA9G,SACFqpB,OC7B6C,SAAwCnrB,YAAvFi8D,IACE,IAAA/7D,EAAQ,OAAHF,GAAGA,EAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KA0CT,SAzCGC,MAAU,CACV67D,UAAA,KAqBAC,iBAAc,aACZl7D,SAAW,SAAUm7D,GAAQ,OADJF,UAEvBE,EAAAF,aAiBPh8D,EA3C8C,OAA/C2mB,EAAA,EAAAo1C,EAAAj8D,KAMkBa,UAAMkpB,kBAAU,cAC5B3pB,KAAKH,MAAA2I,KAAWszD,SACjB97D,KAAAa,SAAA,CAAAi7D,UAAA,SACS,GAAA97D,KAAAH,MAAAo8D,aAAAj8D,KAAAH,MAAAo8D,YAAuC16D,MAAA,CAE/C,IAAI2xC,EAAKlzC,KAAQH,MAAMo8D,YAAS16D,MAAKA,MACnC2xC,GAAKlzC,KAAWH,MAAAqH,QAAcmsD,KAAI,SAAApwC,GAAA,OAAAA,EAAA1hB,QAAA2xC,KACnClzC,KAAAa,SAAA,CAAAi7D,UAAA,QAKWr7D,UAAAy7D,mBAA+B,SAAAC,GACT,KAAlCA,EAAKF,YAAWG,YACjBp8D,KAAAa,SAAA,CAAAi7D,UAAA,OAUKr7D,UAAEoB,OAAA,WACA,IAAAC,EAAA9B,KAAAH,MAAAkrB,EAAAjpB,EAAwBipB,SAAAvpB,EAAAM,EAAAN,MAEhCs6D,EACE97D,KAAAC,MAAA67D,gBACEprD,EAAA3P,EAAAmB,cAAA,MAAK,CAAAH,UAAU,sCACbhB,EAAAmB,cAAA,OAAAH,UAAM,2CAAsCs0B,QAAAr2B,KAAA+7D,kBAC5CrrD,EAAA3P,EAAAmB,cAAA,OAAG,CAAAH,UAAW,eAAiBP,GAAwCkP,EACnE3P,EAAAmB,cAAA,KAAAH,UAAA,OAAA+5D,EAAA,mCACL,KAGNA,GAAA/wC,IA1C4C8wC,EAAA,kJC+C7CQ,EACE,SAAAx8D,UACE6Q,EAAA3P,EAAAmB,cAACu5D,EAAA,EAAeY,SAAC51C,EAA+B,KAAS5mB,GAK7D6Q,EAAA3P,EAAAmB,cAAAo6D,EAAA,GAAAC,UAAA,EAAAC,cAAA,WAAA38D,EAAAkrB,YAE6B0xC,EAAA,SAAA78D,gBAkG9B,cAAAA,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KAlG8B,OAA/BymB,EAAA,EAAAi2C,EAAA98D,KAuBUa,UAAAoB,OACJ,WA4BF,IAAIC,EAAA9B,KAAUH,MAAMy9C,EAAAx7C,EAAAw7C,aAAAqf,EAAA76D,EAAA66D,eAAAC,EAAA96D,EAAA86D,eAAAt6D,EAAAR,EAAAQ,SAAA4E,EAAApF,EAAAoF,QAAA3E,EAAAT,EAAAS,YAAA1D,EAAAiD,EAAAjD,MAAA0C,EAAAO,EAAAP,MAAAQ,EAAAD,EAAAC,UAAAqP,EAAAtP,EAAAsP,WAAAlR,EAAA4B,EAAA5B,UAAA29B,EAAA/7B,EAAA+7B,aAAAg/B,EAAA/6D,EAAA+6D,YAAAC,EAAAh7D,EAAAg7D,sBAAAC,EAAAj7D,EAAAi7D,QAAAC,EAAAl7D,EAAAk7D,UAAAC,EAAAn7D,EAAAm7D,gBAAA1nC,EAAAzzB,EAAAyzB,OAAA0C,EAAAn2B,EAAAm2B,cAAAz1B,EAAAV,EAAAU,iBAAA06D,EAAAp7D,EAAAo7D,OAAA75D,EAAAvB,EAAAuB,WAAA80B,EAAAr2B,EAAAq2B,eAAAglC,EAAAr7D,EAAAq7D,gBAAAC,EAAAt7D,EAAAs7D,YAAAC,EAAAv7D,EAAAu7D,WAChBC,EAAO,GACTz+D,IACDy+D,EAAA,SAAAz+D,GAGD,IAAM0+D,EAAmBC,IAAA,gBAAK,+BAAmCF,EAAav7D,GAE9E07D,EACEh3C,EAAC,KAAAi2C,EAAcgB,aAAar6D,WAAaA,UAErCqN,EACE3P,EAAAmB,cAAAy7D,EAAC,CAAAP,cACCC,WAAgBA,EAAAllC,eAChBA,EAAW+kC,OACXA,GAAY,SAAAU,EACAC,GA4BpB,OAAAntD,EAAA3P,EAAAmB,cAAAu5D,EAAA,GAAAqC,gBAAA,qBAAA/7D,UAAAw7D,EAAAl6D,WAAAo6D,EAAAngB,eAAA/7C,QAAAo7D,iBAAAC,iBAAAmB,0BAAA,EAAAlgC,eAAAv7B,WAAA4E,UAAA3E,eAAA,SAAA4Y,OAAAjd,OAAAs8D,EAAA,EAAAt8D,GAAAkT,aAAAlR,YAAA28D,cAAAG,YAAAznC,SAAA0nC,kBAAAhlC,gBAAAz1B,mBAAAu6D,UAAAD,wBAAAkB,WAAAd,EAAAe,WAAAL,EAAAM,YAAAL,EAAAV,yBA9FFO,aAAa,CACb37D,UAAU,GACVqP,YAAY,EACZysB,cAAa,EACbg/B,aAAS,EACTE,SAAA,EACAE,iBAAgB,EAChBD,WAAW,EACX98D,WAAA,EACA48D,uBAAkB,EAClB7kC,cAAe,IACfklC,iBAAY,aACF,CACRzB,OAAAH,EACAK,cACAuC,oBAAQA,EAAA,EACR9B,SAAOA,EACR+B,MAAAC,IAnB0B3B,EAAA,CAAZpmC,EAAA,eAoGiBgoC,EAAA,SAAA1+D,gBA6FnC,cAAAA,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KA7FmC,OAApCymB,EAAA,EAAA83C,EAAA3+D,KAgBUa,UAAAoB,OACJ,WA4BF,IAAIC,EAAA9B,KAAUH,MAAMy9C,EAAAx7C,EAAAw7C,aAAAqf,EAAA76D,EAAA66D,eAAAC,EAAA96D,EAAA86D,eAAAt6D,EAAAR,EAAAQ,SAAAC,EAAAT,EAAAS,YAAA1D,EAAAiD,EAAAjD,MAAA0C,EAAAO,EAAAP,MAAAQ,EAAAD,EAAAC,UAAAM,EAAAP,EAAAO,YAAAD,EAAAN,EAAAM,eAAAlC,EAAA4B,EAAA5B,UAAA+6D,EAAAn5D,EAAAm5D,eAAAz4D,EAAAV,EAAAU,iBAAA4O,EAAAtP,EAAAsP,WAAAysB,EAAA/7B,EAAA+7B,aAAAg/B,EAAA/6D,EAAA+6D,YAAAC,EAAAh7D,EAAAg7D,sBAAAE,EAAAl7D,EAAAk7D,UAAAznC,EAAAzzB,EAAAyzB,OAAA0nC,EAAAn7D,EAAAm7D,gBAAAhlC,EAAAn2B,EAAAm2B,cAAA8kC,EAAAj7D,EAAAi7D,QAAA5kC,EAAAr2B,EAAAq2B,eAAAilC,EAAAt7D,EAAAs7D,YAAAC,EAAAv7D,EAAAu7D,WAAAH,EAAAp7D,EAAAo7D,OAChBI,EAAO,GACTz+D,IACDy+D,EAAA,SAAAz+D,GAID,IAAA0+D,EACEC,IAAC,gBAAa,+BAA2BF,EAAYv7D,UAEjD2O,EACE3P,EAAAmB,cAAAy7D,EAAiB,CACfP,cAAgBC,WAChBA,EAAWllC,eAAgBA,EACf+kC,UAAA,SAAAU,EAAAC,UACVntD,EAAQ3P,EAAAmB,cAAYs8D,EAAAz9D,EAAA,CAAA+8D,gBAAA,qBAAA/7D,UAAAw7D,EAAAl6D,WAAA,CACpBq4D,OAAAH,EACAK,cACAuC,oBAAgBA,EAAA,EAElBM,iBAAcA,EAEd,GAwBRnhB,eAAA/7C,QAAAo7D,iBAAAC,iBAAAmB,0BAAA,EAAAz7D,WAAAD,cAAAnC,YAAAkC,iBAAAG,eAAA,SAAA4Y,OAAAjd,OAAAs8D,EAAA,EAAAt8D,GAAA+8D,iBAAAz4D,mBAAA4O,aAAAysB,eAAAg/B,cAAAG,YAAAznC,SAAA0nC,kBAAAhlC,gBAAA8kC,UAAAD,+BAzFFY,aAAa,CACb37D,UAAU,GACVsB,WAAA,GACA43D,eAAY,WAAK,oBACjB7pD,YAAW,EACXyrD,aAAS,EACTE,SAAA,EACAl/B,cAAA,EACAi/B,uBAAgB,EAChBE,WAAA,EACAC,iBAAe,EACfhlC,cAAA,KAbgCsmC,EAAA,CAAZjoC,EAAA,eA2GWqnC,EAAA,SAAA/9D,YAAnC8+D,IACE,IAAA5+D,EAA6B,OAAxBF,GAAwBA,EAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KA2C9B,SA1CGC,MAAA,CACA0+D,gBAAA,KAGQtB,WAAA,WACR,IAAIA,EAAYv9D,EAAAD,MAAAw9D,WACdA,GACDA,IAEDv9D,EAAAe,SAAA,CAAA89D,gBAAA,OAGQvB,YAAA,WACR,IAAIA,EAAat9D,EAAAD,MAAAu9D,YACfA,GACDA,IAEDt9D,EAAAe,SAAA,CAAA89D,gBAAA,KAyBH7+D,EA5CkC,OAAnC2mB,EAAA,EAAAi4C,EAAA9+D,KAsBUa,UAAiDoB,OAA/C,WACA,IAAAC,EAAA9B,KAAAH,MAAAkrB,EAAAjpB,EAAAipB,SAAAmyC,EAA8Bp7D,EAAAo7D,OAAA/kC,EAAAr2B,EAAAq2B,eAIlCymC,OAAc34D,SAFqBjG,KAAAC,MAAU0+D,gBAGjCzB,KACf0B,GAAA,GAGCzmC,EAEIznB,EAAA3P,EAAAmB,cAAAm2B,EAEiB,GAAAjsB,KAAYwyD,EAAKjtD,QAGpCwmB,EAAAzmB,UAAA,UACHhB,EAAA3P,EAAAmB,cAAA,WAAA6oB,EAAA/qB,KAAAq9D,WAAAr9D,KAAAo9D,eAEA1sD,EAAA3P,EAAAmB,cAAA,WAAA6oB,EAAA/qB,KAAAq9D,WAAAr9D,KAAAo9D,eA1C8BsB,EAAA,8CCtRnC,aAAAxkE,EAAAC,EAAAC,EAAA,sBAAAykE,IAAA3kE,EAAAC,EAAAC,EAAA,sBAAA0kE,IAAA,IAAAnM,EAAAz4D,EAAA,QAA0C04D,EAAA14D,EAAAqhC,EAAAo3B,GAI7BoM,EAAA,KAAoB,IAAG,QAAC,IAAa,qDAChDF,EAAY,SAAAt9D,UACVA,EAQaw9D,EAAC/uC,OAAA,SAAAgvC,EAAAC,GAAA,OAAAD,EAAAnhE,QAAAohE,EAAA,KAAAA,IAAA19D,GAPfA,GAiCCu9D,EAAA5gE,OAAAy0D,EAAA,WAAAz0D,CACE,SACA2B,EAAKsqB,GACL,OAASyoC,EACF7xD,EAAAmB,cAAwB,QAAY,CAC3CH,UAAUlC,EAAAq/D,gBAGZtM,EAAA7xD,EAAAmB,cAAA,QAAG,CAAAioB,IAASA,EAACpW,KAAA,OAAAhS,UAAAlC,EAAiCs/D,eAE/C59D,OAhCWA,EAgCX1B,EAAA0B,MA/BCA,EAQaw9D,EAAC/uC,OAAA,SAAAgvC,EAAAC,GAAA,OAAAD,EAAAnhE,QAAA,KAAAohE,MAAA19D,GAPfA,GA8BAe,SAAA,SAAAgf,GAAA,OAAAzhB,EAAAyC,SAAAu8D,EAAAv9C,EAAA9M,OAAAjT,SAAAgB,YAAA1C,EAAA0C,YAAA1C,EAAA0C,YAAA,6EAhCW,IAAAhB,wBCjBd,IAAAmB,EAAA,sEAEAC,OAAAC,QAAAC,uDADA,o6JCWU47D,EAAA,SAAQ5+D,GAChB,IAAAkrB,EACElrB,EAAAkrB,gBACE9oB,EAAAlB,EAAAmB,cAAAk9D,EAAgD,EAAA1D,OAAAl7D,EAAA,KAAAX,KAC9CkB,EAAAmB,cAAA,OAAAH,UAAK,mCAIXE,EAAAlB,EAAAmB,cAAA,OAAAH,UAAA,yCAAAgpB,kCCnBF,sBACQs0C,EAAcr5D,OACpB,IAAA8wC,EAAU,GACH1wC,EAAI,EAAEA,EAAKJ,EAAEb,OAAAiB,IACnB0wC,EAAA1wC,GAAAJ,EAAA/E,IAAAmF,GAEF,OAAA0wC,EAN4C58C,EAAAC,EAAAC,EAAA,sBAAAilE,wBCD7C,IAAA38D,EAAA,sDAEAC,OAAAC,QAAAC,uDADA,w7CCKMy8D,EAAiB,EAEjBC,EAAiB,EACjBC,EAAU,IACVC,EAAQ,OACRC,EAAA,IAaAC,EAAgD,0BACpDv9D,EAAgB,CAChBw9D,eArByB,uBAsBzBC,OAAA,EACAl5B,SAAA,aAGKm5B,EAAMjkE,UACTA,EAICA,EACAkkE,MAAKL,GACLj5D,KAAAi5D,EAAQA,GACR7hE,QAAQ,YAAY,OACxBA,QAAA,WAPEhC,EAUH,IAAAmkE,EAAS,IAAWC,mBACbC,EAAMrkE,OACTA,EACD,OAAAA,EAGD,IAAAi8D,EAAS,oBACDoI,EAAY3+D,GAEnB,OADiBy+D,EAAMG,gBAAY5+D,EAAA,aACnCoyD,KAAAyM,YAEF,OAAAvkE,EAAAgC,QAAAi6D,EAAAoI,GAAAriE,QAAAi6D,EAAAoI,YAGCG,EAAwBC,GACzB,OAAAA,EAAA,OAAAd,EAAAC,EAAA,YAE8Bc,EAAArzD,EAAAszD,QACf,IAAVA,IAAUA,GAAA,OACd,IAAA3kE,EAAU,GACJuK,EAAA,EAAAA,EAAA8G,EAAA/H,OAAAiB,GAAA,EACFlI,OAAIuiE,EAAW,UAAfviE,CAAegP,EAAA9G,KAAAlI,OAAAuiE,EAAA,SAAAviE,CAAAgP,EAAA9G,KAAAlI,OAAAwiE,EAAA,kBAAAxiE,CAAAgP,EAAA9G,IAChBvK,GAAAqR,EAAA9G,GAEAvK,GAAA,GAAA6jE,EAAAI,EAAA5hE,OAAAuiE,EAAA,SAAAviE,CAAAgiE,EAAAhzD,EAAA9G,MAAAs5D,EAGCt5D,EAAI8G,EAAI/H,OAAA,IACTtJ,GAAA2jE,GAGJ,OAAAgB,EAAA3kE,EAAA4jE,EAAA5jE,WAGO8kE,EAAAC,EAAA15D,OACN,IAAIpF,EAAItB,EAAqD,KAAM4B,EAAY8E,GAAA04D,EAAA99D,EAAA89D,eAAAC,EAAA/9D,EAAA+9D,MAAAl5B,EAAA7kC,EAAA6kC,SAC/E9qC,EAASwkE,EAAiBR,GAAcU,EAAU,CAAC,SAAQ,iBACpDzY,EAAY,EAAGA,EAAW8Y,EAAaz7D,OAAW2iD,GAAc,MACnE,IAAI1hD,EAAI,EAAAA,EAAAw6D,EACN9Y,GAAAhzC,WAAA3P,OAAAiB,GAAA,KACEm6D,EAAW,CACXK,EAAQ9Y,GAAUvxC,MACd,iBACMuF,EAAE,UAAA8kD,EAAA9Y,GAAAhzC,WAAA1O,GAAAk5D,IACL7nC,MACH1e,OAAA6mD,GACJ1hE,OAAW4d,EAA6C,SAAxD5d,CAAwD0iE,EAAA9Y,GAAAhzC,WAAA1O,GAAAk5D,IAAAvmD,OAAA6mD,GAEzDgB,EAAG9Y,GAAWhzC,WAAa1O,GAAWm5D,IAE1Cn5D,EAAAw6D,EAAA9Y,GAAAhzC,WAAA3P,OAAA,GAAA2iD,EAAA8Y,EAAAz7D,OAAA,GAGJ,OAAAtJ,WAGOglE,EAAOD,EAAuB15D,GAErC45D,EADCH,EAAkCC,EAAE15D,GACrCy4D,YAGOoB,EAAAH,EAAA15D,OACN,IAAApF,EAAAtB,EAAa,KAAA4B,EAAA8E,GAAA04D,EAAA99D,EAAA89D,eAAAC,EAAA/9D,EAAA+9D,MAAAl5B,EAAA7kC,EAAA6kC,SAGX9qC,EAAAwkE,EAEIR,KACE,CAAO,QAAIp4B,OAAMm5B,EAAAx/D,IAAA,SAAAkE,GAGtB,OAACA,EAAAiR,qBA+BgBqqD,OACpB,IAAAI,EAAiB,GACT56D,EAAA,EAAAA,EAAYw6D,EAAGz7D,OAAciB,QACnC,IAAA66D,EAAiBL,EAAGx6D,GAAa0O,WAC/B/F,EAAA,EAAWA,EAAKkyD,EAAa97D,OAAG4J,IACjCiyD,EAAApxD,KAAAqxD,EAAAlyD,GAAAuwD,IAIH0B,EAAe9iE,OAAGuiE,EAAA,WAAHviE,CAAG8iE,EAAA/wD,YAClB,IAAA9O,EAAa,GACLiF,EAAA,EAAAA,EAAYw6D,EAAGz7D,OAAciB,IAAA,KACnC,IAAM66D,EAAAL,EAAmBx6D,GAAA0O,WACnBosD,EAAkBD,EAAM7/D,IAAA,SAAAolC,GAAA,OAAAA,EAAA84B,KAC9B6B,EAAoB,GACZpyD,EAAA,EAAAA,EAAYiyD,EAAW77D,OAAG4J,IAAA,CAChC,IAAMoR,EAAU6gD,EAAGjyD,GACfqyD,EAAUljE,OAASuiE,EAAA,cAATviE,CAASgjE,EAAA/gD,IACrB,IAAAihD,EACDD,EAAAvxD,KAAAqxD,EAAAG,IAEAD,EAAAvxD,KAAA,MAAAuQ,IAGJhf,EAAAyO,KAAAuxD,GAEF,OAAAhgE,EApDWkgE,CAAAT,GACR3sB,EAAM,SACJ7tC,OACE+Z,EAAE,QAAAwmB,SACM7qB,EAAE,UAAAwlD,EAAA,GAAAl7D,GAAAk5D,IACL7nC,MACH1e,OAAA6mD,GAEF1hE,OAAI4d,EAEuB,SAF3B5d,CAE2BojE,EAAU,GAAAl7D,GAAAk5D,IAAAvmD,OAAA6mD,MACnCW,EAAO,CAAApgD,GAAcsnB,OAAA65B,EAAmBlgE,IAAA,SAAA0T,GAE3C,OACGA,EAAA1O,GAAAm5D,0BAdE,EAAAn5D,EAAAk7D,EAAA,GAAAn8D,OAAAiB,GAAA,EAgBT6tC,EAAA7tC,GAGF,OAAAvK,WAoCO0lE,EAAOX,EAA8B15D,GAE5C45D,EADCC,EAAoCH,EAAA15D,GACrCy4D,YAEuD6B,EAAA7rD,EAAAkqD,QAC3C,IAAPA,IAAOA,GAAoB,GAC/B,IAAAhkE,EAAAwkE,EAAeR,GAEfhkE,GAAA0kE,EAAe5qD,EAAAjK,QAAAtK,IAAA,SAAAkE,GAAA,OAAAA,EAAA1J,OAAA0J,EAAAzJ,YAEb,IAAIuK,EAAI,EAAAA,EAAAuP,EAAUhK,KAAMxG,OAAUiB,GAAG,EACtCvK,GAAA0kE,EAAA5qD,EAAAhK,KAAAvF,KAAAuP,EAAAhK,KAAAxG,OAAA,GAEF,OAAAtJ,WAEsD4lE,EAAA9rD,EAAAkqD,QACxC,IAAPA,IAAOA,GAAqB,GAEnCiB,EADCU,EAAmB7rD,EAAiBkqD,GACrCF,YAGOmB,EAAWr2B,EAAMi3B,GACvB,IAAAC,EAAA,IAAAC,KAAA,CAAAn3B,GAAA,CAAA12B,KAAA,2CACD7V,OAAA2jE,EAAA,OAAA3jE,CAAAyjE,EAAAD,yNC1LYI,EAAY7/D,EAA0ElB,EAAAghE,cAAA7jE,OAAA8jE,EAAA,EAAA9jE,CAAA+jE,EAAA,EAAA/W,OACjGgX,EAAM,SAA6DC,OACjEC,EAAA,SAAaviE,GAEb,OAAAoC,EAAAlB,EAAAmB,cAAA4/D,EAAAO,SAAA,cAAA7iE,GAAA,OAAAyC,EAAAlB,EAAAmB,cAAAigE,EAAA3hE,EAAA,KAAAX,EAAA,CAAAL,cAMF,OAHA4iE,EAAA3mD,YAAA,aAAA0mD,EAAA1mD,YAAqB,IAErB6mD,IAA4BF,EAAAD,GAC5BC,YAGAG,IACD,OAAArkE,OAAAuE,EAAA,WAAAvE,CAAA4jE,0BC1BD,iBAAAU,EAAAtoE,EAAA,QAAAA,EAAAwgC,EAAA8nC,EAAA,4BAAAtoE,EAAAC,EAAAC,EAAA,4CAAAooE,EAAA,0BAAAtoE,EAAAwgC,EAAA8nC,EAAA,2BAAAtoE,EAAAC,EAAAC,EAAA,2CAAAooE,EAAA,yBAAAtoE,EAAAwgC,EAAA8nC,EAAA,uBAAAtoE,EAAAC,EAAAC,EAAA,uCAAAooE,EAAA,qBAAAtoE,EAAAwgC,EAAA8nC,EAAA,uBAAAtoE,EAAAC,EAAAC,EAAA,uCAAAooE,EAAA,qBAAAtoE,EAAAwgC,EAAA8nC,EAAA,uBAAAtoE,EAAAC,EAAAC,EAAA,uCAAAooE,EAAA,qBAAAtoE,EAAAwgC,EAAA8nC,EAAA,kBAAAtoE,EAAAC,EAAAC,EAAA,kCAAAooE,EAAA,gBAAAtoE,EAAAwgC,EAAA8nC,EAAA,YAAAtoE,EAAAC,EAAAC,EAAA,4BAAAooE,EAAA,UAAAtoE,EAAAwgC,EAAA8nC,EAAA,wBAAAtoE,EAAAC,EAAAC,EAAA,wCAAAooE,EAAA,sBAAAtoE,EAAAwgC,EAAA8nC,EAAA,0BAAAtoE,EAAAC,EAAAC,EAAA,0CAAAooE,EAAA,4BAAAC,EAAAvoE,EAAA,QAAAA,EAAAwgC,EAAA+nC,EAAA,4BAAAvoE,EAAAC,EAAAC,EAAA,4CAAAqoE,EAAA,0BAAAvoE,EAAAwgC,EAAA+nC,EAAA,2BAAAvoE,EAAAC,EAAAC,EAAA,2CAAAqoE,EAAA,yBAAAvoE,EAAAwgC,EAAA+nC,EAAA,uBAAAvoE,EAAAC,EAAAC,EAAA,uCAAAqoE,EAAA,qBAAAvoE,EAAAwgC,EAAA+nC,EAAA,uBAAAvoE,EAAAC,EAAAC,EAAA,uCAAAqoE,EAAA,qBAAAvoE,EAAAwgC,EAAA+nC,EAAA,uBAAAvoE,EAAAC,EAAAC,EAAA,uCAAAqoE,EAAA,qBAAAvoE,EAAAwgC,EAAA+nC,EAAA,kBAAAvoE,EAAAC,EAAAC,EAAA,kCAAAqoE,EAAA,gBAAAvoE,EAAAwgC,EAAA+nC,EAAA,YAAAvoE,EAAAC,EAAAC,EAAA,4BAAAqoE,EAAA,UAAAvoE,EAAAwgC,EAAA+nC,EAAA,wBAAAvoE,EAAAC,EAAAC,EAAA,wCAAAqoE,EAAA,sBAAAvoE,EAAAwgC,EAAA+nC,EAAA,0BAAAvoE,EAAAC,EAAAC,EAAA,0CAAAqoE,EAAA,4BAAAC,EAAAxoE,EAAA,QAAAA,EAAAwgC,EAAAgoC,EAAA,4BAAAxoE,EAAAC,EAAAC,EAAA,4CAAAsoE,EAAA,0BAAAxoE,EAAAwgC,EAAAgoC,EAAA,2BAAAxoE,EAAAC,EAAAC,EAAA,2CAAAsoE,EAAA,yBAAAxoE,EAAAwgC,EAAAgoC,EAAA,uBAAAxoE,EAAAC,EAAAC,EAAA,uCAAAsoE,EAAA,qBAAAxoE,EAAAwgC,EAAAgoC,EAAA,uBAAAxoE,EAAAC,EAAAC,EAAA,uCAAAsoE,EAAA,qBAAAxoE,EAAAwgC,EAAAgoC,EAAA,uBAAAxoE,EAAAC,EAAAC,EAAA,uCAAAsoE,EAAA,qBAAAxoE,EAAAwgC,EAAAgoC,EAAA,kBAAAxoE,EAAAC,EAAAC,EAAA,kCAAAsoE,EAAA,gBAAAxoE,EAAAwgC,EAAAgoC,EAAA,YAAAxoE,EAAAC,EAAAC,EAAA,4BAAAsoE,EAAA,UAAAxoE,EAAAwgC,EAAAgoC,EAAA,wBAAAxoE,EAAAC,EAAAC,EAAA,wCAAAsoE,EAAA,sBAAAxoE,EAAAwgC,EAAAgoC,EAAA,0BAAAxoE,EAAAC,EAAAC,EAAA,0CAAAsoE,EAAA,4BAAAC,EAAAzoE,EAAA,QAAAA,EAAAwgC,EAAAioC,EAAA,4BAAAzoE,EAAAC,EAAAC,EAAA,4CAAAuoE,EAAA,0BAAAzoE,EAAAwgC,EAAAioC,EAAA,2BAAAzoE,EAAAC,EAAAC,EAAA,2CAAAuoE,EAAA,yBAAAzoE,EAAAwgC,EAAAioC,EAAA,uBAAAzoE,EAAAC,EAAAC,EAAA,uCAAAuoE,EAAA,qBAAAzoE,EAAAwgC,EAAAioC,EAAA,uBAAAzoE,EAAAC,EAAAC,EAAA,uCAAAuoE,EAAA,qBAAAzoE,EAAAwgC,EAAAioC,EAAA,uBAAAzoE,EAAAC,EAAAC,EAAA,uCAAAuoE,EAAA,qBAAAzoE,EAAAwgC,EAAAioC,EAAA,kBAAAzoE,EAAAC,EAAAC,EAAA,kCAAAuoE,EAAA,gBAAAzoE,EAAAwgC,EAAAioC,EAAA,YAAAzoE,EAAAC,EAAAC,EAAA,4BAAAuoE,EAAA,UAAAzoE,EAAAwgC,EAAAioC,EAAA,wBAAAzoE,EAAAC,EAAAC,EAAA,wCAAAuoE,EAAA,sBAAAzoE,EAAAwgC,EAAAioC,EAAA,0BAAAzoE,EAAAC,EAAAC,EAAA,0CAAAuoE,EAAA,4BAAAC,EAAA1oE,EAAA,QAAAA,EAAAC,EAAAC,EAAA,uCAAAwoE,EAAA,IAAA1oE,EAAAC,EAAAC,EAAA,uCAAAwoE,EAAA,IAAA1oE,EAAAC,EAAAC,EAAA,kCAAAwoE,EAAA,QAAAC,EAAA3oE,EAAA,QAAAA,EAAAC,EAAAC,EAAA,4BAAAyoE,EAAA,IAAA3oE,EAAAC,EAAAC,EAAA,wCAAAyoE,EAAA,IAAA3oE,EAAAC,EAAAC,EAAA,0CAAAyoE,EAAA,QAAAC,EAAA5oE,EAAA,QAAAA,EAAAwgC,EAAAooC,EAAA,4BAAA5oE,EAAAC,EAAAC,EAAA,4CAAA0oE,EAAA,0BAAA5oE,EAAAwgC,EAAAooC,EAAA,2BAAA5oE,EAAAC,EAAAC,EAAA,2CAAA0oE,EAAA,yBAAA5oE,EAAAwgC,EAAAooC,EAAA,uBAAA5oE,EAAAC,EAAAC,EAAA,uCAAA0oE,EAAA,yBAAAC,EAAA7oE,EAAA,QAAAA,EAAAwgC,EAAAqoC,EAAA,4BAAA7oE,EAAAC,EAAAC,EAAA,4CAAA2oE,EAAA,0BAAA7oE,EAAAwgC,EAAAqoC,EAAA,2BAAA7oE,EAAAC,EAAAC,EAAA,2CAAA2oE,EAAA,yBAAA7oE,EAAAwgC,EAAAqoC,EAAA,uBAAA7oE,EAAAC,EAAAC,EAAA,uCAAA2oE,EAAA,yBAAAC,EAAA9oE,EAAA,QAAAA,EAAAwgC,EAAAsoC,EAAA,4BAAA9oE,EAAAC,EAAAC,EAAA,4CAAA4oE,EAAA,0BAAA9oE,EAAAwgC,EAAAsoC,EAAA,2BAAA9oE,EAAAC,EAAAC,EAAA,2CAAA4oE,EAAA,yBAAA9oE,EAAAwgC,EAAAsoC,EAAA,uBAAA9oE,EAAAC,EAAAC,EAAA,uCAAA4oE,EAAA,yBAAAC,EAAA/oE,EAAA,QAAAA,EAAAwgC,EAAAuoC,EAAA,4BAAA/oE,EAAAC,EAAAC,EAAA,4CAAA6oE,EAAA,0BAAA/oE,EAAAwgC,EAAAuoC,EAAA,2BAAA/oE,EAAAC,EAAAC,EAAA,2CAAA6oE,EAAA,yBAAA/oE,EAAAwgC,EAAAuoC,EAAA,uBAAA/oE,EAAAC,EAAAC,EAAA,uCAAA6oE,EAAA,yBAAAC,EAAAhpE,EAAA,QAAAA,EAAAwgC,EAAAwoC,EAAA,4BAAAhpE,EAAAC,EAAAC,EAAA,4CAAA8oE,EAAA,0BAAAhpE,EAAAwgC,EAAAwoC,EAAA,2BAAAhpE,EAAAC,EAAAC,EAAA,2CAAA8oE,EAAA,yBAAAhpE,EAAAwgC,EAAAwoC,EAAA,uBAAAhpE,EAAAC,EAAAC,EAAA,uCAAA8oE,EAAA,yBAAAC,EAAAjpE,EAAA,QAAAA,EAAAC,EAAAC,EAAA,4CAAA+oE,EAAA,IAAAjpE,EAAAC,EAAAC,EAAA,2CAAA+oE,EAAA,IAAAjpE,EAAA,YAAAkpE,EAAAlpE,EAAA,QAAAA,EAAAC,EAAAC,EAAA,uCAAAgpE,EAAA,IAAAlpE,EAAA,QAAAA,EAAA,8BCAA,aAAAA,EAAA6O,EAAA3O,GAAA,IAAAipE,EAAAnpE,EAAA,QAAAA,EAAAC,EAAAC,EAAA,gCAAAipE,EAAA,IAAAnpE,EAAAC,EAAAC,EAAA,mCAAAipE,EAAA,QAAAC,EAAAppE,EAAA,QAAAA,EAAAC,EAAAC,EAAA,gCAAAkpE,EAAA,IAAAppE,EAAAC,EAAAC,EAAA,+BAAAkpE,EAAA,IAAAppE,EAAAC,EAAAC,EAAA,sCAAAkpE,EAAA,IAAAppE,EAAAC,EAAAC,EAAA,kCAAAkpE,EAAA,QAAAC,EAAArpE,EAAA,QAAAA,EAAAC,EAAAC,EAAA,8BAAAmpE,EAAA,QAAAC,EAAAtpE,EAAA,QAAAA,EAAAC,EAAAC,EAAA,qCAAAopE,EAAA,IAAAtpE,EAAAC,EAAAC,EAAA,kCAAAopE,EAAA,IAAAtpE,EAAAC,EAAAC,EAAA,qCAAAopE,EAAA,QAAAC,EAAAvpE,EAAA,QAAAA,EAAAC,EAAAC,EAAA,qCAAAqpE,EAAA,QAAAC,EAAAxpE,EAAA,QAAwB,QAAAypE,KAAAD,EAAA,+LAAA58D,QAAA68D,GAAA,YAAAr9D,GAAApM,EAAAC,EAAAC,EAAAkM,EAAA,kBAAAo9D,EAAAp9D,KAAA,CAAAq9D,0MCoMtBC,+FA3LAC,EAAA,EAEEtiE,MAAO,GAAAuiE,EAAY,oBAAAC,SACnBviE,MAAA,aACAwiE,cAAQ,0BACTC,OAAAH,EAAA,eAAAI,UAGC3iE,MAAO,GAAAuiE,EAAkB,oBAAAK,cACzB3iE,MAAA,mBACAwiE,cAAQ,uCACTC,OAAAH,EAAA,eAAAI,UAGC3iE,MAAO,GAAAuiE,EAAgB,oBAAAM,YACvB5iE,MAAA,iBACAwiE,cAAQ,qCACTC,OAAAH,EAAA,eAAAI,UAIDG,EAAA,EAEE9iE,MAAO,GAAAuiE,EAAM,oBAAAQ,UACb9iE,MAAA,OACAwiE,cAAQ,oDACTC,OAAAH,EAAA,eAAAS,QAIDC,EAAA,EAEEjjE,MAAO,GAAAuiE,EAAS,oBAAAW,aAChBjjE,MAAA,UACAwiE,cAAQ,2CACTC,OAAAH,EAAA,eAAA9kC,QAGCz9B,MAAO,GAAAuiE,EAAM,oBAAAY,UACbljE,MAAA,OACAwiE,cAAQ,wCACTC,OAAAH,EAAA,eAAA9kC,QAGCz9B,MAAO,GAAKuiE,EAAA,oBAAAa,SACZnjE,MAAA,MACAwiE,cAAQ,YACTC,OAAAH,EAAA,eAAA9kC,QAID4lC,EAAa,SAAYpjE,GACzB,OAAAA,EAAAsF,QAAA,aAAAtF,EAAA,SAAAA,GAIEqjE,EAA8B,kBAAArkE,EAAA,EAAAskE,EAAA,EAAAn0B,UAAAvvC,IAAA,SAAAgwC,GAAA,OAC9B7vC,MAAO6vC,EAASpsC,KAChBxD,MAAM4vC,EAAEpsC,KAH+Bi/D,OAItCH,EAAA,eAAAiB,YACH,EAEExjE,MAAO,GAAAuiE,EAAe,oBAAAkB,YACtBxjE,MAAA,gBACAwiE,cAAQ,yBACTC,OAAAH,EAAA,eAAAiB,WAIHlB,IACEoB,EAAe,SAAAnxB,SACLmd,EAAElwD,EAAAmkE,MAAApxB,EAAA1yC,IAAA,SAAA+jE,GAAA,OAAAjnE,OAAAgH,KAAAigE,EAAAhwD,QAAA,OACTiwD,UACAC,OAEH9jE,eACEf,EAAA,IAEEe,MAAO,GAAAuiE,EAAM,oBAAAwB,WACb9jE,MAAA,OACAwiE,cAAQ,qBACTC,OAAAH,EAAA,eAAAyB,WAEMnkE,IAAE,SAAAI,GAAkB,OACzBD,MAAO,kBAAiBqjE,EAAApjE,GACxBA,MAAA,UAAkBA,EAClBwiE,cAAQxiE,EAAA,eAJayiE,OAMvBH,EAAA,eAAAyB,YAGFC,EAAiC,SAAY1xB,GAC7C,IAAM2xB,EAAYR,EAAGnxB,GACnB4xB,EAAU,CACVnkE,MAAO,GAAAuiE,EAAM,oBAAA6B,UACbnkE,MAAA,OACAwiE,cAAQ,oDACRC,OAAAH,EAAA,eAAA9kC,OAGF,OAAAx+B,EAAA,EAAAilE,EAAApB,EAAAG,EAAA,CAAAkB,GAAAb,MAGAe,EAA6C,SAAA9xB,GAC7C,IAAM2xB,EAAYR,EAAGnxB,GACnB+xB,EAAU,CACVtkE,MAAO,GAAAuiE,EAAkB,oBAAAgC,UACzBtkE,MAAA,mBACAwiE,cAAQ,mDACRC,OAAAH,EAAA,eAAA9kC,OAEF,OAAAx+B,EAAA,EAAAilE,EAAApB,EAAAG,EAAA,CAAAqB,GAAAhB,MAOAkB,EAAgB,oBACIA,EAAAC,EAAAC,GAAkC,IAAAnmE,EAAOE,KA0B7DA,KAAAgmE,kCACEE,mBAA4B,SAAAzT,EAAA30D,EAAAmmE,GAC5B,IAAMniE,EAEA+hB,EAAqB,GACzBsiD,EAAejoE,OAAOkoE,EAAc,EAArBloE,CAAqB4B,EAAAmmE,QAAAI,mBACpC71D,EAAO,CACPotB,KAAM60B,EAAE9rD,IAAK9I,QAAA,SAAc,IAC3BjC,MAAMkE,EAAAkmE,YAAAnoE,QAAA40D,EAAA72D,OAAA,GAAAkC,GACN0W,OAAAi+C,EAAA6T,YAAA,iBACFrC,OAAKA,GAGLnkE,EAAKkmE,YAAY1yB,yBAAyBzvB,EAAM/lB,OAG5CyoE,EAAMroE,OAAYkoE,EAAA,EAAZloE,CAAY2lB,GA1CkD,SA2CpE+Z,KAAO99B,EAAAkmE,YAAYnoE,QAAA2S,EAAAotB,KAAAp9B,EAAA,KAAA1C,IAAAgE,EAAA,IAAAgiE,EAAA,oBAAAC,UAAA,CACpBloE,KACAsqE,EACC5kE,MAAM4kE,KACNrC,EAAqB,oBAAAkB,aAAA,CACtBnpE,KACA0qE,EAEHhlE,MAAWglE,GACXzkE,KApDwE0O,YAA1E4V,QAAA,eAA0E,aAIlE3lB,UAAiC+lE,WAAG,SAAA/T,GAE1C,IAAI9rD,EAAK3G,KAAAgmE,YAAUnoE,QAAA40D,EAAA9rD,KAAA,IACjBkd,EAAW,MACX4uC,EAAAsR,SAAc,CACd,IAAA5kD,EAAYnf,KAAGimE,QAASI,kBACzBxiD,EAAA,KAAA1E,EAAA/gB,KAEGylB,EAAK,GAAA1E,EAAa3gB,GAOxB,OALGi0D,EAAAuS,aAEDhlE,KAAOgmE,YAAA1yB,yBAAAzvB,GAGT3lB,OAAAkoE,EAAuB,EAAvBloE,CAAuByI,EAAAzI,OAAAkoE,EAAA,EAAAloE,CAAA2lB,OAEjBpjB,UAAQgmE,cAAgB,SAAMhU,GAClC,IAAIjiD,EAAM,GAgCZ,OA/BEA,EAAAotB,KAAY59B,KAAAwmE,WAAA/T,GACbjiD,EAAA5U,MAAAoE,KAAAgmE,YAAAnoE,QAAA40D,EAAA72D,OAAA,IA8BD4U,KAOE/P,UAAYimE,uBAAyB,SAAYjU,EAAI30D,GAEzD,OADGI,OAAAyoE,EAAA,mBAAAzoE,CAAA,6DACH8B,KAACkmE,mBAAAzT,EAAA30D,EAAA,OAhEiB,GAsElB,SAAC8oE,EAAAC,GAEMjD,EAASiD,EAEhB,SAACC,IAED,OAAAlD,iDC3MA,aAAA1pE,EAAAC,EAAAC,EAAA,sBAAA2sE,IAAA7sE,EAAAC,EAAAC,EAAA,sBAAA4sE,IAAA9sE,EAAAC,EAAAC,EAAA,sBAAA6sE,IAAA/sE,EAAAC,EAAAC,EAAA,sBAAA8sE,IAAAhtE,EAAAC,EAAAC,EAAA,sBAAA+sE,IAAAjtE,EAAAC,EAAAC,EAAA,sBAAAgtE,IAAAltE,EAAAC,EAAAC,EAAA,sBAAAitE,IAAAntE,EAAAC,EAAAC,EAAA,sBAAAktE,IAAAptE,EAAAC,EAAAC,EAAA,sBAAAmtE,IAAA,IAAA/mE,EAAAtG,EAAA,QA4FAstE,EAAAttE,EAAA,iDA5FiD+L,qFAWjC,EAAN,6BAAM,GAA4C/H,OAAAspE,EAAA,cAAAtpE,GAAA+C,IAAA,yBACxD,SAEE,EAAQ,CACR,CAAE+D,KAAM,cAAezD,WAFvBsjB,QAEgC4iD,OAChC,CAAEziE,KAAM,eAAezD,MAAOmW,EAAKgwD,QACnC,CAAE1iE,KAAM,gBAAAzD,MAAAmW,EAAAiwD,SACR,CAAE3iE,KAAM,gBAAAzD,MAAAmW,EAAAkwD,SACR,CAAE5iE,KAAM,mCAAoCzD,MAAOmW,EAAEmwD,aACrD,CAAE7iE,KAAM,oCAAoCzD,MAAOmW,EAAKowD,cACxD,CAAE9iE,KAAM,qCAA8BzD,MAAcmW,EAAEqwD,eACtD,CAAE/iE,KAAM,qCAA+BzD,MAAYmW,EAAAswD,eACnD,CAAEhjE,KAAM,kBAAmBzD,MAAMmW,EAAIuwD,gBACrC,CAAEjjE,KAAM,mBAAmBzD,MAAOmW,EAAIwwD,YACtC,CAAEljE,KAAM,aAAAzD,MAAmBmW,EAAKywD,MAChC,CAAEnjE,KAAM,kBAAAzD,MAAwBmW,EAAK0wD,WACrC,CAAEpjE,KAAM,kBAAAzD,MAA0BmW,EAAE2wD,WACpC,CAAErjE,KAAM,uBAAuBzD,MAAImW,EAAQtC,MAC3C,CAAApQ,KAAA,2BAAAzD,MAAAmW,EAAA4wD,mDAEF,QACAC,EAAMzmE,EAAK+iB,8EAhCkC5e,qCAqClC,EAAAjG,KAAA,SAAA8B,yJArCkCmE,qCAyClC,EAAAjG,KAAA,SAAA8B,+JAzCkCmE,oCA6ClC,EAAAjG,KAAA,SAAA8B,4JA7CkCmE,2DAiDxB,EAAAjG,KAAA,SAAA8B,wBAAjB,QAAW,GAAwD5D,OAAAspE,EAAA,cAAAtpE,GAAA+C,IAAA,mBAAAunE,SACjE,SACRv7B,EAAAnrC,EAAA+iB,WACU7f,KAAI8L,EAAEm8B,EAAOn8B,QAAEC,EAAKk8B,EAAOl8B,MAAEtP,EAAAwrC,EAAAxrC,MAAAyP,EAAA+7B,EAAA/7B,eAAAE,EAAA67B,EAAA77B,WAAAkB,EAAA26B,EAAA36B,MAAAL,EAAAg7B,EAAAh7B,OACrC,EAAa,CACbzB,KAAK,CAAAxL,OAAA8L,UAAAC,QAAAtP,SACLwP,YAAK,CAAAC,iBAAAE,cACLkB,sDAxD6CrM,qCA4DlC,EAAAjG,KAAA,SAAA8B,iJA5DkCmE,0CAgExB,EAAAjG,KAAA,SAAA8B,wBAAjB,QAAW,GAAoE5D,OAAAspE,EAAA,cAAAtpE,GAAA+C,IAAA,oBAAApE,EAAA,sBACrF,SAEA4rE,EAAA3mE,EAAA+iB,QACEnS,aACM+1D,EAAUrnE,IAAA,SAAAsnE,SACd,CACA7rE,GAAA6rE,EAAQ7rE,GACR8rE,SAASD,EAAEC,SACXC,OAAQ1qE,OAAE81C,EAAgB,SAAlB91C,CAAkBwqE,EAAAE,QAAAC,UAC1BC,UAAS5qE,OAAQ81C,EAAO,SAAf91C,CAAewqE,EAAAI,WAAA/vD,OAAA,iBACxBgwD,SAAAL,EAAgBK,SAChBC,QAAIN,EAAUM,QACdC,eAAWP,EAAQO,eACnBC,GAAAR,EAAQQ,GACRC,UAAAT,EAAAS,UACDC,OAAAV,EAAAU,iDAhF4CnjE,oCAoFlC,EAAAjG,KAAA,SAAA8B,wBAEZ,EAAC,SAAA5D,OAAAspE,EAAA,cAAAtpE,GAAAmrE,KAAA,oBAAA/nE,EAAA,sBAFFgoE,YAAAC,mEApF+CtjE,oCA0FlC,EAAAjG,KAAA,SAAA8B,0IC1Ff,SAAAe,EAAAI,GAEA,IAAAP,EAAA,8HACA,63BCHuB8mE,EAAApjD,QAAA,iCACAqjD,EAAArjD,QAAA,+CACiBsjD,EAAAtjD,QAAA,aAExCujD,GAAAvjD,QAAgB,eACTwjD,GAASxjD,QAA+B,mBAC1BA,QACjB,mBACAA,QAAA,0BACAA,QAAA,wCAGAA,QAAA,0BACAA,QAAA,sBACAlsB,EAAA,QAEFysB,EAAOzsB,EAAAqhC,EAAAsuC,KAGH3vE,EAA2B,UACVA,EAAAqhC,EAAAuuC,KAGX5vE,EAAS,mBASL6vE,2BASL,+CACJ,6BAED1tE,MAAM,0BAIA6oB,EAAW8kD,EAAGC,SACTnjD,IAhBF,6HAiBJA,uKAAMkjD,KACLrpB,SAAAqpB,iBAEE/pB,KAAKgqB,EAAKC,YAEbC,SACDjlD,EAAOklD,OAAK,iBAAAC,GAGd1jD,EAAA5lB,EAAA44B,KAAAzU,EAAAolD,UAAA,SAAA17D,GAEI+X,EAAoB5lB,EAAA44B,KAAA/qB,EAAA2iD,QAAA,SAAAgZ,GACVA,EAAAhpE,QAAA8oE,GACCG,EAAAvqB,KAAAsqB,EAAA1uE,gBAOf4uE,EAAiB9jD,EAAiB5lB,EAAAivB,OAAO9K,EAAAolD,UAAA,SAAAI,EAAAnpE,EAAA7E,GAYzC,OAXM6E,EAAOgwD,QAKb5qC,EAAmB5lB,EAAC44B,KAAAp4B,EAAAgwD,QAAA,SAAA3iD,EAAA+7D,GACpB/7D,EAAAuiD,MAAA,oBAAAz0D,EAAA,IAAAiuE,EAAA,IAEUD,EAAA96D,KAAArO,EAAgB1F,KAAA,IAAa+S,EAAA/S,SAPnC0F,EAAA4vD,MAAS,oBAAwBz0D,EAAQ,IAC3CguE,EAAA96D,KAAQrO,EAAQ1F,OASlB6uE,0BASO,SAAAhuE,EAAAiuE,SACAzlD,EAAAolD,UAAA5tE,GACL+tC,EAAG,CAAAmgC,MAAAC,GAEHA,EAAItZ,cAAc,IAAAoZ,MAChBG,SAAcD,EAAAtZ,QAAAoZ,gCAEXlgC,KAbLsgC,SACAzlE,IAAA,MACE8G,+BAEI,gBAaN,eAAU,eACX4+D,UAAA,CACAC,OAAAR,EAEHS,UAAc,EACZ35D,MAAO,GACP45D,QAAO,SAAO5pE,GACd,IAAOJ,EAAQ,GAkBf,OAjBCwlB,EAAA5lB,EAAA44B,KAAAzU,EAAAolD,UAAA,SAAAO,GAESlkD,EAAC5lB,EAAA44B,KAAAkxC,EAAAtZ,QAAA,SAAA6Z,GACK7pE,IAASspE,EAAUhvE,KAAO,IAAIuvE,EAAAvvE,OAC7CsF,EAAA2pE,SAAAM,EAEYjqE,EAACypE,MAAUC,OAKjB1pE,EAAOypE,OACP1lD,EAAQ4C,OAAA,WACH5C,EAAGmmD,0BAAAlqE,KAGfmqE,EAAA3yC,QAAA,QACW,MAGb6xC,EAAGrZ,MAAA,WAEHqZ,EAASO,OACVO,EAAAl/D,OACDk/D,EAAAppD,UAGJopD,EAAgBC,MAAA,WACAvB,EAAAwB,YAAmB,OAAa,KAAAF,EAAAhmE,SAIxC0kE,EAAA9tC,UACJ,SAAAniB,GACAA,EAAA2H,mBAGK4pD,EAAAjiE,KAAA,WACEiiE,EAAAP,OACLO,EAAWhmE,IAAA,IACXklE,EAAAp+D,OACAo+D,EAAOtoD,QAGHkX,WAAC,WACC4wC,EAASyB,YAAA,SAEV,SAEJzB,EAAA0B,YAAAxmD,gBAMe6kD,2BASZ,gDACE,kEAEI,mBAEJ7kD,EAAG8kD,EAAAC,SACFnjD,IAdC,6FAeL5B,EAAEymD,sBACJzmD,EAAAymD,oBAAA,qBAKGnB,EAAU1jD,IAnBJ,oJAoBE,MACN,iBACKkjD,KACLrpB,SAAAqpB,iBAEE/pB,KAAKgqB,EAAKC,YAEbC,SACDjlD,EAAOklD,OAAK,iBAAAC,GAGd1jD,EAAA5lB,EAAA44B,KAAAzU,EAAAolD,UAAA,SAAA17D,GAEI+X,EAAoB5lB,EAAA44B,KAAA/qB,EAAA2iD,QAAA,SAAAgZ,GACVA,EAAAhpE,QAAA8oE,GACCG,EAAAvqB,KAAAsqB,EAAA1uE,gBAOf4uE,EAAiB9jD,EAAiB5lB,EAAAivB,OAAO9K,EAAAolD,UAAA,SAAAI,EAAAnpE,EAAA7E,GAYzC,OAXM6E,EAAOgwD,QAKb5qC,EAAmB5lB,EAAC44B,KAAAp4B,EAAAgwD,QAAA,SAAA3iD,EAAA+7D,GACpB/7D,EAAAuiD,MAAA,oBAAAz0D,EAAA,IAAAiuE,EAAA,IAEUD,EAAA96D,KAAArO,EAAgB1F,KAAA,IAAa+S,EAAA/S,SAPnC0F,EAAA4vD,MAAS,oBAAwBz0D,EAAQ,IAC3CguE,EAAA96D,KAAQrO,EAAQ1F,OASlB6uE,OAEAkB,EAAU,aACRb,SACAzlE,IAAA,MACE8G,+BAEI,4BAED,SAAA1P,EAAAiuE,SACAzlD,EAAAolD,UAAA5tE,GACL+tC,EAAG,CAAAmgC,MAAAC,GAEHA,EAAItZ,cAAc,IAAAoZ,MAChBG,SAAcD,EAAAtZ,QAAAoZ,gCAEXlgC,eAIL,eAAU,eACXugC,UAAA,CACAC,OAAAR,EAEHS,UAAc,EACZ35D,MAAO,GACP45D,QAAO,SAAO5pE,GACd,IAAOJ,EAAQ,GAmBlB,OAlBIwlB,EAAA5lB,EAAA44B,KAAAzU,EAAAolD,UAAA,SAAAO,GAESlkD,EAAC5lB,EAAA44B,KAAAkxC,EAAAtZ,QAAA,SAAA6Z,GACK7pE,IAASspE,EAAUhvE,KAAO,IAAIuvE,EAAAvvE,OAC7CsF,EAAA2pE,SAAAM,EAEYjqE,EAACypE,MAAUC,OAKd1pE,EAAAypE,OACV1lD,EAAc4C,OAAG,WACf5C,EAAAmmD,0BAAoBlqE,KAIhBmqE,EAAM3yC,QAAQ,QACvB,MAIL6xC,EAAArZ,MAAA,WACAqZ,EAAAO,4BC/QAO,EAAgBC,MAAA,WACAvB,EAAAwB,YAAiB,OAAa,KAAAF,EAAAhmE,SAEtC0kE,EAAE9tC,UAAC,SAAsBniB,GACrBA,EAAA2H,iBACAmqD,EAAAxiE,KAAA,SAEJA,KAAO,WACPwiE,EAAAxiE,KAAA+vB,WAAA,WACIwyC,YAEF5B,EAAK0B,YAAAxmD,gBAaE6kD,wBAET7kD,EAAA8kD,GACF,IAAGjP,EAAAiP,EAAA,GACJ8B,EAAA,WACD,IAAAxqD,EAAA,IAAAyqD,MAAA,UACH,OAAAhR,EAAAiR,cAAA1qD,kBChCsB,wBACA,sBAIP,uBACc,OAAawqD,IAGvC,aAKA/Q,EAAAn6C,iBAAA,iBAAAqrD,GAIA/mD,EAAAtL,IAAA,sBAEKmhD,EAAAmR,oBAAA,iBAAAD,kBAaClC,EAAgBoC,EAAAnG,yBAahB,eACE,6CAKA9gD,EAAI8kD,aAlBJ,sIAoBC9kD,EAAAknD,UACFtlD,IAAAslD,EAAAC,WAdD,wJAFG,mIAgBI,OACL,QACA,IACQnnD,EAAAonD,oBACRtC,cACDA,yBAEiB,SAAAzoE,GACjB,KAAAA,GAAA6qE,EAAA7qE,WAIH2jB,EAAI4C,OAAQ,WACV,IAAAid,EAAOpe,EAAA5lB,EAAA6J,KAAAsa,EAAAqnD,YAAA,CAAAhrE,UACRwjC,GAEDqnC,EAAa7qE,MAAWwjC,EAACxjC,MACzB6qE,EAAansB,KAAKlb,EAAAkb,MAAAksB,EAAAK,YAAAxG,EAAA5zB,yBAAArN,EAAAxjC,QACV6qE,EAAQK,MAAA,EACTL,EAAOM,WAAA3nC,EAAA2nC,WACF3nC,EAAGhxB,OACRq4D,EAAAr4D,KAAoBgxB,EAAOhxB,OAIlC,UAAAq4D,EAAAO,SACAP,EAAA7qE,QACA6qE,EAAansB,KAAUksB,EAACK,YAAOxG,EAAmB5zB,yBAAA7wC,IAClD6qE,EAAAM,YAAA,EAEKN,EAASK,MAAC,GAEbvnD,EAAO5iB,6BAGH,SAAOsqE,OACNA,iBAIDC,0BAKFzgE,SACC0gE,oBAAAxB,EAAAhmE,SAEP4f,EAAE6nD,UAAA,WAIAF,EAASzzC,WAAalU,EAAO8nD,aAAA,eAEpB,SAAQtsE,EAAAogB,KACfgH,OAAO,WACR5C,EAAA1d,WAAA,CAAAylE,OAAAvsE,IAAAQ,KAAA,SAAAqrE,GAEMrnD,EAAIqnD,YAAOA,EACXrlE,EAAAyf,EAAmB5lB,EAAAK,IAAA8jB,EAAAqnD,YAAA,SAAAW,GAEd,OAACvmD,EAAA5lB,EAAAoc,OAAA+vD,EAAA3rE,SAIC,UAAF6qE,EAAEO,SACCP,EAAAK,OAAA,IAAA9lD,EAAA5lB,EAAA+F,QAAAI,EAAAklE,EAAA7qE,QACd2F,EAAAkgB,QAAAT,EAAA5lB,EAAAoc,OAAAivD,EAAA7qE,SAGIuf,EAAO5Z,UAIXikE,QAAA,SAAA5pE,UACDA,EAAIolB,EAAA5lB,EAAAosE,SAAA5rE,MACK6qE,EAAK7qE,OACb6rE,aAAAP,GAACvB,EAAUppD,QACH3gB,IAET+pE,EAAAhmE,IAAA/D,GAEF2jB,EAAW8nD,cAAC,GACLzrE,MAELiqB,QAAY,SAAA5c,GACZ,GAAAy+D,EACA,OAAS,EAER,IAAA57B,EAAAzxC,KAAAU,MAEe,MAAZ+wC,EAAA,KACNA,EAAUA,EAAM0mB,UAAG,IAEa,MAAxB1mB,IAAQtsC,OAAK,KACnBssC,EAAOA,EAAO0mB,UAAM,EAAO1mB,EAACtsC,OAAS,IAGnC,IACF,OAAUyJ,EAAMgF,cAAGmI,MAAE01B,EAAA79B,eAGvB,MAAQ8kB,GACN,aAGC5tB,KAAA,4BACHwgE,EAAGN,UAAA,CAEHC,OAAQ/lD,EAAM+lD,OACZC,UAAU,EACV35D,MAAO,IAEP45D,QAAQjmD,EAAOimD,QACf3/C,QAAOtG,EAAOsG,cAGdw/C,EAAWM,EAAM9iE,KAAA,eAEX8kE,OAAS,WACfttE,KAAIU,MAASV,KAAEutE,SAAAjoE,OAAA,OACbiM,EAAOvR,KAAMirE,OAAEjrE,KAAAU,MAAAomB,EAAA/lB,EAAAysE,MAAAxtE,KAAAytE,QAAAztE,cACfuR,EAAUvR,KAAMytE,QAAGl8D,MAEpBm8D,IAEH1C,EAAYsC,OAAO3mD,EAAW5lB,EAAAurE,SAAAtB,EAAAsC,OAAA,KAAAhtE,SAAA,KAG/BkqE,EAAAmD,QAAA,SAAA5zD,GAEJ,KAAAA,EAAA6zD,SAAA,KAAA7zD,EAAA6zD,SAEepD,EAAArZ,UAGZqZ,EACErZ,MAAA,WACMjqD,EAAK,KACNokE,EAAAtgE,IAAA,QAAA9L,KAAA+I,IAAAuiE,EAAA3rE,QAAA,aACL2rE,EAAUO,OACVO,EAASl/D,OACTk/D,EAAUppD,QACVmrD,GAAa,EACd,IAAArC,EAAAM,EAAA9iE,KAAA,aACKwiE,IACCM,EAAShmE,IAAA,IACR0lE,EAAAsC,mBAIIpoD,EAAO6nD,eACXrB,YAAUxmD,gBAML2oD,EAAaC,mBAGtB,+KAMM,aAEH,wBAEG5oD,EAAa8kD,EAAGC,0BAEV,SAAa1oE,WACRR,EAAO6J,KAAAsa,EAAAhe,QAAA,CAAA3F,YACf,UACD0oE,EAAO8D,gBACN9D,EAAA0C,OACLprE,MAAG0hB,IAAApnB,KAAA0F,EACJ8qE,WAAApC,EAAAoC,YAGH,OAAOwB,EAAeG,WAAG5B,yBAED,kBACpBlnD,EAAIhe,WACKge,EAAWhe,QACnB4mE,EAAAG,KAAAtnD,EAAA5lB,EAAAK,IAAA8jB,EAAAhe,QAAA,SAAA+b,SAAU,CAAA1hB,MAAM0hB,EAAWpnB,UAGvBqpB,EAAA1d,aAAAtG,KAAA,SAAAgG,GAEN,OADCgnE,EAAkBhnE,EACnByf,EAAA5lB,EAAAK,IAAA8F,EAAA,SAAA+b,GAED,OAAAA,EAAAg9B,KACAh9B,EAEgB,CAAA1hB,MAAA0hB,EAAApnB,WAMlBqpB,EAAOipD,gBAAiB,WACzB,GAAAD,EAAA,CACF,IAAAjrD,EAAA0D,EAAA5lB,EAAA6J,KAAAsjE,EAAA,CAAAryE,KAAAqpB,EAAAknD,QAAA7qE,QACD0hB,KAAA1hB,QAAA2jB,EAAA4tB,SACH5tB,EAAA4tB,SAAA7vB,EAAA1hB,MAGoB,UAAV0oE,EAAA0C,qICxQuBznD,EAAAknD,QAAAlnD,EAAAkpD,eAAAlpD,EAAA4tB,eFgBzB,EAAAu7B,UAAA,oBAAAC,KACW,EAAAD,UAAA,qBAAAE,KCQf,EAAAF,UAAA,mBAAAG,GCnBLC,EAA0B,EAAAJ,UAAA,gBAAAK,KACjB,EAAAL,UAAA,qBAAAM,SAGHz0E,EACE,UACeA,EAAkBqhC,EAAA34B,KAGjC1I,EAAW,UACSA,EAAqBqhC,EAAAqzC,KAG7C10E,EAAA,mBAUI6vE,mBAEC,SACD,SAACrwD,EAAAswD,EAAAC,GAEH,IAAA4E,EAAM,gCACJ5E,EAAAnuE,MAAA,mBACC,mBAEHgzE,EAAsB,EAAAC,WAAA/E,EAAAnuE,QACpB,eACEgC,QAAM,YAAUA,QAAU,cAC3BmxE,YAAAjF,EAAA9iD,EAAAlmB,EAAAipB,QAAA6kD,GAAA9E,CAAArwD,iBAgCAqwD,SACJ,CACD9gD,SAAA,IACHwpC,KAAA,SAAA/4C,EAAAsQ,EAAAigD,GAEDvwD,EAAgB0wD,OAAA,SAAA1wD,GACP,OAAcA,EAAAu1D,MAAahF,EAAAiF,UAC3B,SAAA3tE,GACGyoB,EAAKi2B,KAAA1+C,GACPwoE,EAAC//C,EAAY0hD,WAAb3B,CAAkCrwD,kBAoBjCqwD,mBAEH,kBACMrwD,EAAKswD,EAAAC,OACXkF,EAAAlF,EAAYmF,OAAA,eAAAnF,EAAAmF,OAAA,OACZC,EAAApF,EAAAoF,IAAe,SAAApF,EAAAoF,IAAA,YAEf7kD,EAAA,2DADMy/C,EAAKqF,OAAA,aAAArF,EAAAqF,OAAA,SAGd,iBAEJrF,EAAA5tE,MAEe,mBACP4tE,EAAApuE,KACAwzE,EACG,kCAEApF,EAAI5tE,MACJ,sCAEA4tE,EAAM5tE,MACN,IAEF8yE,EAEF,sBACAlF,EAAK5tE,MACL,0BAEA4tE,EAAK5tE,MACL,2BACA2yE,YAAQjF,EAAA9iD,EAAAlmB,EAAAipB,QAAAQ,GAAAu/C,CAAArwD,iBAKFqwD,EAAGwF,mBAET,SAEF,SAAW71D,EAAQswD,EAAGC,GACtB,IAAIpuE,EAAC0zE,EAAStF,EAAApuE,KAAT0zE,CAA6B71D,GAC9Brd,EAAMkzE,EAAStF,EAAA5tE,MAATkzE,CAAiB71D,GAC5By1D,EAAAlF,EAAAmF,OAAA,eAAAnF,EAAAmF,OAAA,OACDC,EAAApF,EAAAoF,IAAA,SAAApF,EAAAoF,IAAA,YACH7tE,EAAA,eAAAkY,EAAA81D,IAAAnzE,EAAA,4BAAAR,EAAAwzE,EAAA,WAEe7kD,EAAA,0BACP9Q,EAAW81D,IACTnzE,EACD,sCAGDA,EACG,IAEF8yE,EACF,sBACA9yE,EACD,0BAICqd,EAAM81D,IACNnzE,EACA,4BACiBmF,IACjBkoD,SAAG,sBACFzJ,KAAK8pB,EAAQ9iD,EAAgBlmB,EAAAipB,QAAUQ,GAAlCu/C,CAA8CrwD,iBAKpD+1D,EAAO1F,EAAAxa,GAqCf,yFCtNwC,IAAA79C,EAAAg+D,EAAAlnE,KAAA,aACEye,EAAAlmB,EAAAipB,iBDkLpC2lD,EAASp+D,EAAWG,aAEnB,8BADqB,QAAdA,EAAmB,SAAc,IACxC,kDAEChV,EAAW,EAACA,EAAA6U,EAAApM,OAAAzI,IAAA,CACd,IAAGkS,EAAO2C,EAAK7U,GAChB,GAAAkS,EAAA4iD,QAEMoe,EAAG7yE,OAAAL,EAAA,qCAFT,CAMD,IAAQmzE,EAAE,OACHjhE,EAAI2iD,SAAA3iD,EAAA2iD,QAAApsD,OAAA,gCACL,+BAGJyJ,EAASgvB,MAAA,IACP,KACAhvB,EAAMuiD,MAAQ,cAAGviD,EAAQuiD,MAAQ,SACjCviD,EAAA4F,OAAS,YAAoB5F,EAAE4F,OAAA,SAC/B5F,EAAAkhE,OAAS,iBAAclhE,EAAAkhE,OAAqB,IAAO,IAClD,KAEHlhE,EAAS/S,MAAS,IACnB,OACD+S,EAAA2iD,SAAA3iD,EAAA2iD,QAAApsD,SACH0qE,GAAAF,EAAA/gE,EAAA2iD,SAAA9qD,KAAA,OAGDopE,GAAA,QACAD,EAAA7yE,OAAAL,EAAU,EAAC,EAAAmzE,IAEX,OAAAD,ECnN0CD,CAAAp+D,EAAAG,GAAAjL,KAAA,KAEpBgjD,YAAAimB,GACb3F,EAAA2F,EAAA16D,KAAA,oBAAA+0D,CAAArwD,KAELg2D,EAAWhmB,SAAA,mBAAA5+C,KAAA,8BAIA,EAAAujE,UAAA,MAAA0B,KACR,EAAA1B,UAAA,kBDmCP,WAEA,OACA30D,MAAS,CACAkgD,QAAA,oBAELnH,KAAM,SAAC/4C,EAAYswD,GACjBtwD,EAAMk1D,UACJ,IAAAoB,EAAWjvE,EAAAipE,EAAA,IACTnuE,KAAA,WAEF,OAAC6d,EAAUkgD,aAGXlgD,EACAk1D,UAAAp1D,GAAA,qBACHy2D,GAAA,EAAAt0E,KAAA,mDAEJ+d,EAAAE,IAAA,sBAEmBF,EAAAk1D,WACXl1D,EAAAk1D,UAAA1kD,kBCtDK,EAAAmkD,UAAA,UAAwBa,KACf,EAAAb,UAAA,uCD8Ef6B,SAAA,8BACMx2D,EAAKsQ,KACXxQ,GAAA,mBACAE,EAAMoO,OAAI,WACPpO,EAAAw2D,SAAA,CAAA9T,WAAApyC,EAAA1kB,kBCjFU,EAAA+oE,UAAA,gBAAA8B,KACX,EAAW9B,UAAC,iBAAyB+B,KACpC,EAAA/B,UAAA,aAAA7E,SAGPtvE,EAAA,QCRJu0E,EAAyB,EAAAJ,UAAA,iCDerB,UACO,aACH,kCAEC30D,EAAA22D,EAAAvlE,EAAAwlE,GACM,UAAPxlE,EAAAiJ,MAAiB,aAAAjJ,EAAAiJ,OAGrBs8D,EAAAx2D,IAAA,wBACHw2D,EAAAjwE,KAAA,kBAEQsZ,EAAaoO,OAAA,WACbwoD,EAAAC,cAAAF,EAAA/qE,kBC1BA,EAAA+oE,UAAA,qDDmCA,wBACS30D,EAAG22D,EAAApG,EAASuG,KACtBC,SAAO7gE,KAAK,SAAY8gE,GACxB,WAAAA,EACH,KAEJA,UCxCY,EAAArC,UAAuB,sIAbb,IAAAqC,EAAA5pE,QAAA,UAAA4pE,EAAA5pE,QAAA,QAKwB,IAFEvJ,EAAA,UAAAS,kBAAA0yE,GAEjBzyE,mBAW3B/D,EAAA,QAIIA,EAAkB,iBAUvBokB,EAAOtZ,EAAAglB,SACL2mD,EAAsB,EAAA7c,qBAAA9uD,GAAAkG,EAAApJ,EAAAoJ,MAAAwC,EAAA5L,EAAA4L,cACtB1C,IAAA,mBAAAE,GACJ8e,EAAChf,IAAA,eAAA0C,KCFgB,EAAI2gE,UAAU,oCDM7B,OACE,CAAKuC,iBAAY,UACjB,SAAAl3D,EAAkBsQ,GACnB1L,EAAA5E,EAAAk3D,iBAAA5mD,SCRW,EAAAqkD,UAAO,yCDYjBwC,EAAKn3D,EAAQo5B,eAMb7rB,EAAUlmB,EAAAw/C,WAAa7mC,EAAAo3D,QAAAh+B,IACrBp5B,EAAOo3D,QAAKh+B,GAGd,SAAOlkC,UACLA,EAAAkkC,oBAIC,kBAED,yBACU,oEAIJp5B,EAAOsQ,EAAMigD,SACdjqE,KACJinB,EAAAlmB,EAAA4E,QAAA+T,EAAArd,SAEHqd,EAAUrd,MAAA,UAEDyqB,IAAwB,SAAAkD,KAC7BznB,oBACE,cAAmB0nE,EAAG1nE,eAEzBwuE,UAAA,CACD/F,UAAM,QACG/jD,EAAAlmB,EAAAw/C,WAAA7mC,EAAAo3D,QAAA7G,EAAA+G,kBACNt3D,EAASo3D,QAAO7G,EAAA+G,iBAChB,MAED1T,WAAG2M,EAAA3M,WACL2T,UAASJ,EAAYn3D,EAAYuwD,EAAAiH,WAChCC,SAAAN,EAAAn3D,EAAAuwD,EAAAmH,UAEHC,SAAUpqD,EAAelmB,EAAAw/C,WAAW7mC,EAAAo3D,QAAA7G,EAAAqH,WAC5B53D,EAAMo3D,QAAM7G,EAAMqH,UACpB,WACF,OAAWrH,EAACqH,iBAGX,qBAAAhwD,IACF,IAAA5H,EAAArd,MAAAyK,QAAAwa,EAAA1S,QACA8K,EAAArd,MAAAuT,KAAA0R,EAAA1S,MAES8K,EACV63D,eAEO73D,EAAA63D,iBAIL,IAAAC,EAAiB5uD,EAEZ5N,OACH+V,SAAO,QACRvZ,OAAA,WAGJ,OAACsV,IAAAhnB,GAAAjE,SAAAylB,EAAA1S,OAEJ0P,EAAAgD,EAAA1S,KAAA4iE,KAGJ5uD,EAAApJ,GAAA,cAAW,SAAU8H,GACrB,IAAAgQ,EAAA5X,EAAWrd,MAAAyK,QAAUwa,EAAA1S,mCCrHS8K,EAAA63D,eACP73D,EAAA63D,mBAmBrB73D,EAAA0wD,OAAA,mBAA2BnjD,EAAAlmB,EAAA4E,QAAA+T,EAAArd,SAAIqd,EAAArd,MAAA,IAE/BumB,EAAAmuD,UAuBC,aAtBM,QAAA3qE,EAAe,EAAGA,EAAKsT,EAAArd,MAAS8I,OAAQiB,IACxCwc,EAAcmuD,UAAM,MAAAr3D,EAAArd,MAAA+J,MAGpB,aAaM,oBAINqrE,EAAuB3D,GAC7B9tE,KAAA8tE,cAHG1nD,QAAA,SAMmB3lB,UAAS2L,KAAQ,WAEtC,IAAItM,EAAQE,UACV0xE,gBAAA1xE,KAAAoxC,SAAAryB,QAAAljB,UACA81E,gBAAM,eACC3xE,KAAOoxC,SAAQlqC,4BACXyf,EAAM5lB,EAAAyQ,OAAAxR,KAAAkH,QAAA,CAAA69B,UAAA,cACdpe,EAAA5lB,EAAAK,IAAApB,KAAAoxC,SAAAh8B,KAAA,SAAA7T,OACDqwE,EAAK,CAAA/1E,KAAS0F,EAAMwjC,UAAQ,YACjBhkC,EAAA44B,KAAG75B,EAAQsxC,SAAQryB,QAAA3J,KAAA,SAAAy8D,GAC5BA,EAAIh2E,OAAA0F,MACFswE,KAGJD,SAGFzxE,OAAA,CACAO,MAAM,GAENwG,QAAAlH,KAAakH,QAAA+iC,MAAA,EAAA/qC,KAAAyJ,IAAA3I,KAAAkH,QAAA/B,OAAA,YAEb2sE,iBAAkB,KAEjBrxE,UAAAsxE,eAAA,eACFhzD,EAAA/e,KAAAoxC,SAAAryB,aAAM3J,MAAA2J,EAAA3J,KAAAjQ,OAAA,CAEN,IAAA6sE,EAAArrD,EAAA5lB,EAAAyQ,OAAAxR,KAAAoxC,SAAAlqC,QAAA,SAAA+b,GACF,IAAAA,EAAA8hB,SAED,SAGU,IAAC,IAAA3+B,EAAA,EAAeA,EAAA2Y,EAAQ3J,KAAAjQ,OAAAiB,IAAA,CAC9B,IAAAwrE,EAAE7yD,EAAS3J,KAAChP,GACV,IAAwB,IAAjBugB,EAAgB5lB,EAAC+F,QAAA8qE,EAAAtjE,OAAA2U,EAAA1hB,OACvB,SAEH,WAGD0wE,EAAAtrD,EAAA5lB,EAAAK,IAAA4wE,EAAA,QAEFhyE,KAAAkqE,SAAA+H,EAAAxrE,KAAA,OAEDzG,KAAAkqE,SAAA/kE,OAAA,IAAAnF,KAAAkqE,UAoBC,YAhBGlqE,KAAAkqE,SAAgBlqE,KAAGoxC,SAAKryB,QAASljB,QAEjB4E,UAAUyxE,gBAAkB,gBAC7CC,eAAAxrD,EAAA5lB,EAAAyQ,OAAAxR,KAAAkH,QAAA,CAAA69B,UAAA,IAED/kC,KAAOmyE,eAAiBhtE,OACtBwhB,EAAa5lB,EAAA44B,KAAO35B,KAAAkH,QAAA,SAAA+b,GAChBA,EAAA8hB,UAAa,MAIdhkC,EAAA44B,KAAA35B,KAAAG,OAAA+G,QAAA,SAAA+b,GACAA,EAAA8hB,UAAA,IAIN/kC,KAAAoyE,mBAAA,MAGqB3xE,UAAI4xE,UAAA,SAAAT,OACtB9xE,EAAKE,cACN+kC,UAAA6sC,EAAA7sC,UAEC6sC,EAAKtjE,OAINtO,KAAA8tE,GAAAG,KAAA2D,EAAAtjE,QAHAtO,KAAAoxC,SAAAkhC,gBAAAV,EAAA/1E,OAKiBqF,KAAQ,SAAWoN,KACjCA,OAAKA,IACNikE,WAAAjkE,EAAA7H,KAAA,SAAM1F,EAAA44B,KAAA75B,EAAAoH,QAAA,SAAA+b,IACsD,IAAvD0D,EAAa5lB,EAAI+F,QAAQ8qE,EAAAtjE,OAAY2U,EAAC1hB,SAC3C0hB,EAAA8hB,SAAA6sC,EAAA7sC,YAGDjlC,EAAKsyE,mBAAiB,MAI1BX,EAAAhxE,UAAA+xE,QAAA,SAAAz4D,GACqB,KAAfA,EAAC6zD,SACN5tE,KAAA+qE,OAqCA,KAnCDhxD,EAAA6zD,SACM5tE,KAACyyE,cAAQ,GAEZ,KAAA14D,EAAA6zD,SAED5tE,KAAOyyE,eAAgB,GAGP,KAAhB14D,EAAA6zD,UAE+B,IAAzB5tE,KAAAG,OAAA+G,QAAwB/B,OAC5BnF,KAAA0yE,qBAGGC,YAAA3yE,KAAAG,OAAA+G,QAAAlH,KAAA2xE,gBAAA,WAIL,KAAA53D,EAAA6zD,SACI5tE,KAAA2yE,YAAc3yE,KAAAG,OAAA+G,QAAAlH,KAAA2xE,gBAAA,aAIElxE,UAASgyE,cAAe,SAAAz4C,QAC1C23C,gBAAA3xE,KAAsB2xE,eAAO33C,GAAAh6B,KAAAG,OAAA+G,QAAA/B,UAE9B1E,UAAAkyE,YAAA,SAAA1vD,EAAA3B,EAAAsxD,EAAAC,SAAW7yE,QACVijB,KAEK8hB,UAAU/kC,KAAOoxC,SAAU0hC,QAAO7vD,EAAS8hB,WAEhD8tC,IAA6B,MAC9BE,EAAA,SAAA1I,GAEG1jD,EAAC5lB,EAAA44B,KAAkB75B,EAAAoH,QAAc,SAAAuM,GACtCwP,IAAAxP,IAEDA,EAAAsxB,SAAAslC,SAPIuI,IAAoB,OAalB7tC,UAAK,GAER,QAAA9hB,EAAApnB,MAAAg3E,GAEDE,GAAyB,GACzBH,GAAE,GAEE5yE,KAAAoxC,SAAC0hC,OAIAxxD,EAAE4Y,SAAA5Y,EAAA0xD,SAAA1xD,EAAAG,eACJ,EACAsxD,GAAA,QALQ,MACA,GAOX/yE,KAAKoyE,kBAAiBQ,OAERnyE,UAAe2xE,kBAAkB,SAAAQ,GAE/C,IAAI9yE,EAAME,UACRmyE,eAAcxrD,EAAgB5lB,EAAKyQ,OAAAxR,KAAAkH,QAAkB,CAAK69B,UAAC,IAC5D/kC,KAAAmyE,eAAAhtE,OAAA,GAEiB,QAAdnF,KAAAmyE,eAAc,GAAAt2E,OACZmE,KAACmyE,eAAgB,GAAAptC,UAAA,EACtB/kC,KAAAmyE,eAAAnyE,KAAAmyE,eAAAloC,MAAA,EAAAjqC,KAAAmyE,eAAAhtE,SAKDwhB,EAAe5lB,EAAC44B,KAAA35B,KAAQoV,KAAM,SAAUw8D,GAClCA,EAAC7sC,UACNpe,EAAA5lB,EAAA44B,KAAAi4C,EAAAtjE,OAAA,SAAA/M,GAAeolB,EAAe5lB,EAAA6J,KAAM9K,EAAQqyE,eAAA,CAAA5wE,YAC3CqwE,EAAA7sC,UAAA,OAMF/kC,KAAKizE,aAActsD,EAAG5lB,EAAAyQ,OAAAxR,KAAAoV,KAAA,CAAA2vB,UAAA,IAEtB/kC,KAAIoxC,SAAKryB,QAASxd,MAAYolB,EAAU5lB,EAAAK,IAAApB,KAAemyE,eAAE,cACvD/gC,SAAKryB,QAAYljB,KAAA8qB,EAAA5lB,EAAAK,IAAApB,KAAAmyE,eAAA,QAAA1rE,KAAA,YAClB2qC,SAAAryB,QAAA3J,KAAApV,KAAAizE,aACFjzE,KAAAoxC,SAAA0hC,QAED9yE,KAAAoxC,SAAAryB,QAAAxd,MAAAvB,KAAAmyE,eAAA,GAAA5wE,OACMqxE,GACA5yE,KAAC0yE,mBAIcjyE,UAAQiyE,cAAe,WAGxC,IAAJ1yE,KAAAG,OAAA+G,QAAA/B,QAAAnF,KAAAG,OAAAO,MAAAyE,OAAA,EACMnF,KAACoxC,SAAYryB,QAAQ,CAAAljB,KAASmE,KAAOG,OAAKO,MAAOa,MAAAvB,KAAAG,OAAAO,OAEtD,IAAAV,KAAAmyE,eAAAhtE,SACFnF,KAAAkH,QAAA,GAAA69B,UAAA,8BAGM/kC,KAAS8xE,iBAAoB,EAClC9xE,KAAO+xE,iBACL/xE,KAASoxC,SAASryB,QAAOljB,OAAUmE,KAAK0xE,iBACxC1xE,KAAAkzE,eAGkBzyE,UAAI0yE,aAAA,WACtB,IAAIrzE,EAAEE,UACJ2xE,gBAAe,OACfxxE,OAAM+G,QAAcyf,EAAK5lB,EAAAyQ,OAAAxR,KAAwBkH,QAAA,SAAA+b,GACjD,OAAmC,IAA7BA,EAAUpnB,KAAK+X,cAAc9M,QAAAhH,EAAAK,OAAAO,MAAAkT,6BAGjC1M,QAAYlH,KAAOG,OAAO+G,QAAI+iC,MAAO,EAAK/qC,KAAMyJ,IAAI3I,KAAKG,OAAC+G,QAAA/B,OAAA,SAG/C1E,UAAGoP,KAAA,6BAEN7P,KAAQoxC,SAAAryB,QAAA3J,MAAA,4BAjOT,cA6OM20D,EAACqJ,EAAA7jB,EAAAlqC,gBAEf,CAAAhqB,UAAA,IAAA+1C,SAAA,IAAA8hC,UAAA,iBAEQ,0DACH,uCACF,uBACE,gBACCx5D,EAAAswD,SACJ/iD,EAAAlmB,EAAAipB,QAAAopD,EAAAt0E,SAAA60D,MACF0f,EAAArJ,EAAAp/D,KAAA,wBAED0oE,EAAatJ,EAAAp/D,KAAA,SAqBnB,SAAA2oE,EAAW76C,GACU,IAArBsxC,EAAAxmD,IAAAkV,EAAWlkB,QAAArP,mDCnTDuU,EAAG0wD,OAAS,8BAAAC,GACJA,KD8RRr/D,IAAA,QAAe9L,KAAA+I,IAAAorE,EAAAx0E,QAAA,YAChBuN,SAAM2+D,SACL7oD,UACD,WACAsxD,EAAAh6D,GAAA,QAAA+5D,IAEG,GAAG,KAQTD,EAASvI,OACVsI,EAAAjnE,OACDonE,EAAA35D,IAAA,QAAA05D,QCtSGE,GAAAp4E,UAAAme,GAAA,6CACDE,EAAU+5D,GAAC1B,kBACZr4D,GACGA,EAAG+5D,GAAK5jE,oBA8BH6jE,wBAEJ,YACF,cAEK,WACJ,+BAECh6D,EAAAswD,EAAAC,EAAAuG,EAAAlnD,OAED8vC,EAAKua,EAAcC,WACjBC,UAEc3zB,WACG,MAEjByzB,IACDA,EAAAG,aAAM,MAEN1a,IACAwa,WAtCQG,SACb7f,EAAA6f,EAAa,GACbC,EAAMD,EAACA,EAAU5uE,OAAa,OAG5B8uE,sBACE,EAAI/f,IAAA8f,GAAkB9f,EAAA9tD,QACpB2tE,EAAA3tE,KAAiB8tD,WAElBptC,IAAA,GAAAmjB,MAAAlqC,KAAAg0E,EAAA,EAAA3tE,OAECwJ,KAAAskD,QAED+f,sBAECF,EAuBDG,CAAA9a,EAAApP,OACJ0pB,EAAAS,MAAAP,GAAA1yE,KAAA,WACD0yE,EAAA,OAGJxa,EAAA,MCvEwC1/C,EAAA0wD,OAAAH,EAAAn3B,SAAA,SAAAvxC,EAAA6yE,GAExCT,GAAWpyE,IAAU6yE,GACZP,IAEDF,IAAkBpyE,IAAA0oE,EAAAoK,SAYZR,IAXPvqD,EAAA,SAAA0gC,EAAAsqB,GAGDX,EAAeW,EAERtqB,EAAUA,EAAA7kD,UAAArG,SAAAy1E,cAAA,2BACNnb,EAAA,CAAApP,SACR0pB,EAAAc,MAAAxqB,EAAAggB,EAAAyK,SAAAzK,SDSTyE,EAAgB,EAAAtlD,WAAA,0BAAAurD,GAChBjG,EAAyB,EAAAJ,UAAa,sBAAA5E,KCElC,EAAA4E,UAAA,kBAAA3E,wCCzB0B,gBAAAhwD,EAAAsQ,EAAAigD,GACUjgD,EAAAmnC,MAAA,SAAAz4B,GAExCA,EAAArE,oBAIE3a,EAAA0wD,OAAAH,EAAoB0K,UAAe,SAAAtK,GAAnCA,GAEIjxC,WAAI,WACFpP,EAAK9H,QACN,IAAA0yD,EAAA5qD,EAAA,GACD,GAAA4qD,EAAAC,kBAAA,CAEG,IAAWhuE,EAAqB,EAAjBmjB,EAAA1kB,MAAgBH,OAE9ByvE,EAAcC,kBAAGhuE,OAErB,iBAWJiuE,EAAC,yBAGI,IAASh1E,EAAKE,KACnBA,KAAOqlB,aAMTrlB,KAAA+0E,SAAA,IAAAC,iBALgB,SAASC,GACP,IAAPA,EAAO9vE,QACNrF,EAAKulB,WAAAG,SAAA,qBAQyExlB,KAAA+0E,SAAAG,QAAAjuD,EAAAlmB,EAAAipB,QAAA,kBAH/D,CAC3BmrD,YAAA,EACEC,gBAAgB,UAChBC,eAAoB,EAAAC,WAAA,EAAqBC,SAAA,WAd1CC,EAAApvD,QAAA,iBAgBC3lB,UAAAg1E,WAWC,WAVCz1E,KAAI+0E,SAAmBW,gBAlBxB,GA+BIjH,EAAiB,EAAAJ,UAAA,8BAJpBllD,WAAG2rD,EACJj3E,SAAA,EACHorB,SAAA,aAI4B,oBAGxB0sD,EAAazwD,EAAAG,EAAAuwD,GACb51E,KAAKklB,OAAEA,OACLG,WAAMA,OACNuwD,cAAiBA,EC9DvB,SD0DaxvD,QAAI,0CAMZ3lB,UAAAo1E,SAAA,SAAAC,GACD,IACAr5C,EADA38B,EAAUE,KCvESA,KAAAklB,OAAA6wD,aAAA70E,KAAA,WACOu7B,EAAA38B,EAAAulB,WAAAzL,IAAA,kBDwE7B,WACD9Z,EAAA81E,cAAW,IAAAE,QCzEmB11E,KAAAN,OAK9B61E,EDwD4B,KCnCV,EAAAtH,UAAA,0BAhBhB,MAAO,CAAAllD,WAAAwsD,EACLtsD,aAAO,OAEPxrB,SAAO,WACC,UACN,CAEAi4E,KAAA,eAEArjB,KAAA,YACAsjB,WAAS,cAGP,sHAUepzE,UACT5B,EAAA2nD,GAAAstB,gCAIPxrE,EAAAC,EAAAwS,OAEDnd,EAAQE,cACR8mB,EAA6B/lB,EAACqP,QAAM,KAAAX,EAAAwN,GAEpCjd,KAAQ25B,KAAK,WACb,IACC96B,EAAAyM,EADD2qE,EAAanvD,IAAyBhnB,GAExCm2E,EAAAvsB,SAAA,mBACC5iC,IAAA,YAAAo5B,+GChDyC,SAAA6pB,EAAA1kD,GACH,IAAA6wD,EAAA7wD,EAAA8wD,MAAA,GAE3CxvD,EAAW5lB,EAAUqP,OAAA8lE,EAAYj5D,EAAAm5D,WACtBrM,EAAiBkM,EAAjBlM,CAAiBmM,GACjBA,EAAAG,UACKH,EAAGpC,gBAIXmC,EAAapsB,YAAA,KACdosB,EAAAnsB,aAAA,GACDmsB,EAAMjrE,IAAA,OAAWR,EAAEyS,EAAI2E,OAAA/iB,EAAAy3E,EAAAz3E,QAAA2L,EAAAyS,EAAA2E,OAAA/iB,EAAA2L,EAAAyS,EAAA2E,2EAKL,cAGV1nB,EAAc,UAKrB,EAAAm0E,UAAA,uBAEJ,OACAplD,SAAA,iGC5BH,SAAAvP,EAAA68D,8LAmKiB,2BACd,uBAEQ,SACK,KACR,KACM,KACT,IAED,uBACDC,EAAA98D,EAAAswD,EAAAC,UAEDxjD,EAAuC,EAAAzmB,UAAA,+BAtHvCuB,mBAAA25B,sDACoC,EAAAl7B,KAAA,SAAA8B,UACpCA,EAAAN,cAGA,OAHAi1E,EAA+BxM,EAAAlvC,MAAA27C,EAC/BC,EAAA1M,EAAA0M,UAAMC,0BAANC,EAAmC5M,EAAA4M,SAAAC,EACnCC,EAAA9M,EAAM8M,kBAAA,SAAA9M,EAAA8M,kBAAAC,mDAANC,EAAqCjN,EAAA/oE,IAAA,GACrC,GAAM/G,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAA8b,EAAA5V,KAAA,YAAkC,YACxC,OADA82E,EAAAp1E,EAAyC+iB,OAAAsyD,QACzC,GAAMj9E,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAA8b,EAAA5V,KAAA,wBACN,OADA0B,EAAA+iB,OACA,GAAM3qB,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAA8b,EAAA5V,KAAA,wBACN,OADA0B,EAAA+iB,OACA,GAAM3qB,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAA8b,EAAA5V,KAAA,wBACN,OADA0B,EAAA+iB,OACA,GAAM3qB,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAA8b,EAAA5V,KAAA,wBAEN,OAFA0B,EAAA+iB,OAEA,GAAa3qB,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAA8b,EAAA5V,KAAA,sBACb,EADA,mBAAalG,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAA8b,EAAA5V,KAAA,sBACb,EAGM,OADA0B,EAAA+iB,OACA,GAAgB3qB,EAAwBw+B,EAAA,IAAAx3B,KAAAhH,EAAA8b,EAAA5V,KAAA,sBAExC,kBAEJ,GAAYlG,EAAUw+B,EAAA,IAAAx3B,KAAAhH,EAAA8b,EAAA5V,KAAA,wCAGtB,GAAAlG,EAA0Bw+B,EAAA,IAAAx3B,KAAAhH,EAAA8b,EAAA5V,KAAA,yCAG1B,GAAAlG,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAA8b,EAAA5V,KAAA,sBAEF,GAEA,OADA0B,EAAA+iB,OACA,GAAA3qB,EAA+Bw+B,EAAA,IAAAx3B,KAAAhH,EAAA8b,EAAA5V,KAAA,sBAC/B,GAEC,OADD0B,EAAA+iB,OACC,GAA4B3qB,EAAoBw+B,EAAI,IAAAx3B,KAAAhH,EAAA8b,EAAA5V,KAAA,sBACrD,GAIA,OAFA0B,EAAA+iB,OAEA,GAAiB3qB,EAAew+B,EAAA,IAAAx3B,KAAAhH,EAAA8b,EAAA5V,KAAA,sBAEhC,UAEM0B,EAAA+iB,OACNuyD,EAASF,EAAQ7mB,KAAC4mB,GAElBI,EAAUD,EAAiBE,eACd,UACTX,aACMY,UACFV,oBACUE,uBACN,mBACP,EACHS,0BAAQ,GAIVJ,EAAAhgB,WAAiBqgB,KAEbC,gBAAiBj6B,MAEhB+Y,SAAAmhB,gBAAA,OACLP,EAAG5gB,SAAAohB,WAAA,MA/DHC,mCAAAC,0BAyHaC,MACXb,EAAAc,SAAW,0BACZZ,EAAAhgB,WAAA,+EArIK6gB,eAAiB,KAEjBC,EAAUd,IACVe,WAAgBD,EAAWC,WAAAluC,UAC3BkuC,WAAiBvoE,KAAG8J,EAAMu+D,sBAIhB,YAAYF,IACHK,QAAAC,GAmEzBC,CAAY7B,KACJ/8D,EAAc/H,oBAEZ,uBACJ/G,KAAA,aACD8+C,SAAE,mBACJ6uB,iBACAn/C,WAAA,WAEHo/C,EAAct2D,QACZ,IAAM0yD,EAAU4D,EAAC,GAChB,GAAA5D,EAAAC,kBAAA,CAEO,IAAAhuE,EAAY,EAAA2xE,EAAAlzE,MAAAH,OACpByvE,EAAWC,kBAAUhuE,OAGvB,OAGW2S,GAAE,SAAK,SAAiBkf,GACjChf,EAAMoO,OAAA,WACJ,IAAAuiD,EAAc+M,EAAGqB,WAClB/+D,EAAA/H,QAAA04D,0DAmCJA,IAAAqO,GAAArO,IAAA+J,GAEkC16D,EAAAi/D,aAAA,WAC1BC,EAAAvO,OAII+M,EAAK59D,GAAA,kBACAE,EAAGpX,aAEPoX,EAAKE,IAAA,sBACDw9D,EAAKltD,YAGnBktD,EAAAyB,SAAAC,WAAA,CACH9zE,KAAA,eAED+zE,QAAW,CAAAC,IAAS,aAAaC,IAAE,iECjL3B,EAAA5K,UAAA,wBAdmC,OAE3CplD,SAAgB,IACTuB,SAAS0uD,EACdx/D,MAAO,CACL/H,QAAa,IACbgT,WAAS,IACT4zD,gBAAW,IACXj2E,SAAa,IACb21E,aAAU,UAERzB,KAMLt8E,EAAA,UCCwB,EAAAm0E,UAAA,kEAvBF30D,OAAA,EAIuB7b,SAAA,EACe2sB,SAAA,oFAC1BioC,KAAA,SAAA/4C,EAAAsQ,EAAAigD,EAAAE,GACwBzwD,EAAAywD,UAS3DzwD,EAAAy/D,cAAA,SAAAjuE,GAIEi/D,EAAgBoG,cAAArlE,cAMhBhR,EAcC,YAXc,YAGE,QAUTk/E,EAAA,oBAGJC,EAAO14E,EAAgBmtE,QACxBntE,aAEDX,KAAA8tE,GAAOA,OACLwL,aAAcpqB,EAAA,EAAAqqB,QAAA,gDACPrqB,EAAO,EAAAqqB,QAAA,8BCtCM,SDgClBnzD,QAAQ,cAAc,QAQpB3lB,UAAA+4E,oBAAA,SAAAlzD,SACDtmB,KACL,OAAGA,KAAAy5E,2BAAAv4E,KAAA,SAAAC,GACJA,EAAAgE,OAAA,IAEOmhB,EAAA,OAAY,CACb1qB,MAAY,SACjBE,KAAA,gBAEY49E,OAAC,EACJC,WAAQ,EAChB7d,SAAAh8D,EAAAw5E,aAEWM,OAAA95E,EAAA+5E,aAA2Bz5E,KAAKN,GAClCyR,MAAKpQ,SAMVV,UAAAg5E,yBAAoC,WACzC,IAAAK,EAAAnzD,EAAU5lB,EAAAg5E,KAAAC,EAAgC,EAAAC,qBAAe,IACzD,OAAuB,IAAvBH,EAAO30E,OACRkf,QAAA61D,QAAA,IAEDl6E,KAAAW,WAiBCR,OAAA,CAAAg6E,aAAAL,IAAA54E,KAAA,SAAAC,GAhBK,OAAC24E,EACH14E,IAAO,SAAQg5E,GAChB,OAAAzzD,EAAA5lB,EAAA6J,KAAAzJ,EAAA,CAAAtE,GAAAu9E,MAGK5oE,OAAO,SAAU6oE,GAAE,OAAAA,MAAAC,2BAGfT,aAAE,SAAcj/D,4BACZA,EAACkhD,UAAAlhD,EAAAkhD,WACC,EAAA7/D,IAAK,yBAAa+D,KAAAs5E,iBAC5Bxd,UAAYlhD,EAACrJ,MAAapM,eACnB+0E,QAAMt/D,GAEhB5a,KAAAy5E,2BAAAv4E,KAAA,SAAAC,GAEJ,OADIyZ,EAAArJ,MAAApQ,EACJkjB,QAAA61D,QAAAt/D,QAGOna,UAAgB85E,cAAG,SAAA3/D,GAGzB,OAFA5a,KAAMw6E,cAAc5/D,EAAAkhD,UAAAlhD,EAAAkhD,SACpB5M,EAAc,EAAAjzD,IAAE,0BAAe+D,KAAAw6E,eACzBn2D,QAAU61D,QACdt/D,MAEAna,UAAQg6E,WAAO,SAAAn0D,OACfxmB,EAAQE,KAEV,OAAK06E,EAAuB,EAAUC,WAIjC36E,KAAOW,WAACR,OAAgB,CAAAy6E,SAAY,EAAAC,MAAA,KAAA35E,KAAA,SAAAC,GACvCA,EAASgE,OAAU,IACpBmhB,EAAA,SAEK1qB,MAAY,UACbE,KAAY,eACT49E,OAAS,EAChB5d,SAAAh8D,EAAA06E,cAEQZ,OACF95E,EAAAy6E,cAAkBn6E,KAAON,GACrByR,MAAKpQ,MAddkjB,QAAc61D,WAqBlBb,EAAC54E,UAAAN,OAAA,SAAA+G,GAEO,IAAApH,EAAAE,UACF86E,EAAQ,GACVp6E,EAAOimB,EAAS5lB,EAAAipD,MAAA9iD,GACjB6zE,EAAA7zE,EAAAxG,8BAEDwG,EAAA0zE,SACA1zE,EAAkB8zE,WAAA9zE,EAAA8zE,UAAA71E,OAAA,WAAP81E,YAAGF,KACRnrE,KAAI5P,KAAIw5E,oBAAoBlzD,mBAElBy0D,UACV/6E,KAAKy6E,WAAOn0D,gBAEZ5lB,EAAQs6E,WAAO,mBAET,iBAENr6E,WAAMR,OAAcO,GAAAQ,KAAA,SAAA2wB,YACpBqpD,mBAAO50D,EAAOuL,WAEjBi8C,GAAAqN,IAAAL,GAAA55E,KAAA,kBACFylB,EAAA5lB,EAAAq6E,OAAAz0D,EAAA5lB,EAAAuN,OAAAgY,GAAA,kGAED,IAAkB,IAAA+0D,EAAA50D,EAAA,EAAAoL,GAAOypD,EAAAD,EAAArmE,QAAAsmE,EAAArmE,KAAAqmE,EAAAD,EAAArmE,OAAE,CACR,iBADRqlE,EAAGiB,EAAA/5E,OACJwS,OACNuS,EAAS+zD,EAAAx9E,IAAA,CACVA,GAAAw9E,EAAAx9E,GAEG6rB,IAAO2xD,EAAG3xD,IACT9sB,MAASy+E,EAAAz+E,MACRkgE,UAAI,EACNvqD,MAAO,UACDvR,KAAIu7E,aAAQn7E,KAAAJ,UAChBq6E,EAAK1zE,SACL,qBACGggB,EAAe5lB,EAAAmE,KAAAohB,GAAAnhB,qBAKlB,CAAAkwB,MAAAmmD,mBAEQF,EAAArmE,OAAAnT,EAAAu5E,EAAAI,SAAA35E,EAAA/B,KAAAs7E,gBAER,MAAOh1D,EAAAgP,qBAGP5O,EAA+B,EAAIoL,GAAC6pD,EAAAC,EAAA3mE,QAAA0mE,EAAAzmE,KAAAymE,EAAAC,EAAA3mE,OAAA,UAEpC,qBADOzT,iBAIXqZ,EAAS0L,EAAI+zD,EAAQxxD,UAAS,GAC/BjO,IAGOA,EADAy/D,EAAAxxD,SACU,CACnBhsB,GAAAw9E,EAAAxxD,6JAImB,CACLhsB,GAAQ,EAELjB,MAAQ,UACT2V,MAAQ,GACxBzV,KAAA,oBAEa89E,OAAA55E,KAAAu7E,aAAAn7E,KAAAJ,MACA05E,MAAW/yD,EAAA5lB,EAAAmE,KAAAohB,GAAAnhB,QAKhBmhB,EAAQ+zD,EAAAxxD,UAAiB,GAAAjO,GAEnCA,EAAAkhD,UAAA,EAEDlhD,EAAArJ,MAAA3B,KAAAyqE,KAGF,MAAAuB,GAACxwD,EAAA,CAAAiK,MAAAumD,GAAA,YAEDF,IAAWA,EAAQzmE,OAAaJ,EAAA8mE,EAASF,SAAE5mE,EAAA9U,KAAA47E,8LCpNzC,IAAAj7E,EAAA,CACFs6E,UAAA,CAAApgE,EAAA/d,uDAIA,OADY+d,EAAArJ,MAAAsgB,EACZxN,QAAA61D,QAAAt/D,MAGAy+D,EAAA54E,UAAAo7E,iBAAA,WACA,OAAA77E,KAAAW,WAAAM,IAAA,yBAG0Bo4E,ED8BhB,GC1BV5K,EAAA,EAAAqN,QAAA,YAAA1C,OAGE9iD,EAAAp8B,EAAA,QACAwW,EAAYxW,EAAkBqhC,EAAAjF,GAI9BylD,EAAA7hF,EAAA,QACA8hF,EAAW9hF,EAAAqhC,EAAAwgD,YAoBTE,EAAYj3E,EAAAqqD,GAGd,GAAApoC,EAAOlmB,EAAew/C,WAAAv7C,GACvB,OAAAA,EAIC,IAAIA,EACF,UAAUoR,MAAA,mDAGZ,IAAM8lE,MAEJA,EAAmB7sB,EAAOpuD,IAAO+D,iBAGhCk3E,MACCA,EAAal3E,EAAO+6D,MAAA,KAAA/vC,OAAA,SAAAjR,EAAAo9D,GAEjB,OAAAp9D,EAAAo9D,IACJx5E,QAEH,MAAQ+1B,IAET,IAAAwjD,EAED,MAAA9lE,MAAA,+BAAApR,qBAsCQo3E,GAAAx2E,EAAqB8T,EAAA2iE,GAE3B,OAAMn+E,OAAAgH,KAAAU,GAAqB,IAAKoqB,OAAC,SAAA2Y,EAAAriC,cAEjCmO,GAAmB4nE,GAAA,IAAA/1E,IAAA,YAOhBA,GAAA2gB,EAAAlmB,EAAAw/C,WAAAh/C,KAAA,IAAAkT,EAAA6nE,sEAtCF,IAAAvyC,EAAAtgB,UACM8yD,EAAA7iE,EAAey2C,MAAUqsB,QAChC,MAAkB,WAAXD,GAA8B,YAAPA,EACjB7zB,EAAGl/B,MAAQ,KAACugB,0DAQnB0yC,gBAAQ,EAEZC,EAyBCC,CAAAp7E,EAAAmY,GAAAnY,EAEDonC,oCAgEKi0C,gIAvDH,IAAAC,EAAeC,EAAYv7E,MACrBw7E,GAsDHH,EAtDMC,EAuDf3oD,MAAAvuB,QAAAi3E,KAAA,GAAAA,GAtDGI,EAAAC,GAAAC,EAAAL,GAGOE,IAAYA,EAAAhhE,MAAqB,WAAY,aAAAihE,IAIvD,eAAAA,GAAAG,EACSzjE,EAAA0jE,iBAAgCL,EAA2BM,GAEhD,cAAhBL,GAAsBM,EACrBC,EAAA3tE,KAAAmtE,GAIIrjE,EAAY0wD,OAAS2S,EAAAM,EAAA,cAAAL,KAK9B,MAASxB,GAAAn1D,EAAc,CAASgP,MAAAmmD,GAC9B,QACD,IAEDsB,MAAkD7nE,OAAAnT,EAAA07E,EAAA/B,SAAA35E,EAAA/B,KAAAy9E,GAEhD,QAAa,GAAAn3D,EAAQ,MAAQA,EAAIgP,OAGnC,aAAA6nD,6CAQQO,GAAeC,EAAY79E,EAAK6Z,EAAAswD,KACpC2T,WAAY,WACX3B,EAAAj7E,EAAAc,OAAA6O,EAAA3P,EAAAmB,cAAAw7E,EAAA79E,GAAAmqE,EAAA,MASL,SAAC4T,GAAAhB,GAED,OAAA1oD,MAAAvuB,QAAmBi3E,KAAA,MAanB,SAAAiB,GAAA5T,EAAA6T,GAKM,OAAA7T,EAJN/rE,OAAAgH,KAAA+kE,GAAAr/D,KAAA,SAAAE,GACA,OAAYA,EAAA8I,gBAAAkqE,EAAAlqE,eAAA9I,EAAA8I,gBAAA1V,OAAA2rE,EAAA,UAAA3rE,CAAA4/E,eAMRb,GAAac,EAAAnB,UACE1oD,MAAYvuB,QAAiBi3E,IAAU31D,EAAAlmB,EAAAi9E,SAAApB,EAAA,KAAAA,EAAA,GAAAM,YAuBrDa,MC/MHE,GAAAh3D,EAAAlmB,EAAA8B,OAAA,eACEwrE,UAAM,iBAAc,aD8MnB,SAAAhf,SACD,CACFpmC,SAAA,IAEFprB,SAAA,EACA40D,KAAA,SAAA/4C,EAAAswD,EAAAC,GACE,IAAAnqE,EAAAE,KACFk8E,EAA8BD,EAAAhS,EAAAjlE,KAAAqqD,GAC5B6uB,EAAA,WACF,IACAr+E,EAAAu8E,GADA1iE,EAAAu1D,MAAAhF,EAAApqE,OACgD6Z,GAChD+jE,GAA+BvB,EAAAr8E,EAAA6Z,EAAAswD,IAGpBC,EAAApqE,MAAAs+E,GAAAlU,EAAAiT,WAAAxjE,EAAA,CAAAuwD,EAAApqE,OAAAq+E,OAEXxkE,EAAAE,IAAA,sBACEqwD,EAAAmU,eAIA1kE,EAAAu1D,MAAAhF,EAAAmU,eAAA,CACFC,iBAAArC,EAAAj7E,EAAAu9E,uBAAAl+E,KAAAN,EAAgGkqE,EAAA,MAJhGgS,EAAAj7E,EAAAu9E,uBAA2DtU,EAAA,cC9NvDuU,QAAI,iBAAuB,aDuQjB,SAAAlvB,mBACJmvB,EAAqB3+E,EAAK4+E,EAAAC,SACxB,uBAED,OAEH,SAAAhlE,EAAAswD,EAAAC,GACA,IAAAnqE,EAAYE,KAEZk8E,EAAAD,EAAkCuC,EAAAnvB,KAI/B,iBAAM,GACL56C,EAAM,aACJ,SAAgBmoE,OACfkB,EA9Hf,SAAAlB,GACA,OAAS1oD,MAAAvuB,QAAAi3E,GAAkBA,EAAA,GAAsBA,EA6HlC+B,CAAA/B,GACJ/yD,EAAAi0D,GAAApkE,EAAAu1D,MAAA4O,GAAA5T,EAAA6T,IACArpE,EAAAqpE,GAAAF,GAAAhB,KAEL/yD,EAAAuyD,GAAAvyD,EAAAnQ,EAAAjF,GACKoV,EAAQ5C,EAAgBlmB,EAAEqP,OAAM,GAAAyZ,EAAA60D,GACvCjB,GAAAvB,EAAAryD,EAAAnQ,EAAAswD,IAKa4U,KAhBH/+E,GAAO3B,OAAAgH,KAAcg3E,EAAE2C,WAAA,KAgBDz9E,IAAW,SAAEw7E,yIC3TZljE,EAAAu1D,MAAAhF,EAAAmU,eAAA,CACMC,iBAAArC,EAAAj7E,EAAAu9E,uBAAAl+E,KAAAN,EAAAkqE,EAAA,2CAiBzC,OAAA/iD,EAAYlmB,EAAAqP,OAA2Bi+D,EAAAoQ,cAUXvkF,EAAA,QAI5B4kF,GAAC5kF,EAAA,QAYHioC,GAAAjoC,EAAA,WA4OyB,oBACrB6kF,EAAkBtqE,QAClBA,OAAKA,WA5NLhU,UAAAnC,MAAY,SAACoC,GACb,IAAAs+E,EAAA9gF,OAAA4gF,GAA+B,MAA/B5gF,CAAiCwC,EAAKV,KAAAyU,QACtC,uBAAAuqE,EAEK,CACAnjF,KAAQmjF,GAGRA,KAkNgB,MA9MX,oBAILC,EAAW/5D,EAAOE,EAAAmqC,EAAA2vB,OACrBp/E,EAAQE,UACPolB,YACJplB,KAAAuvD,WAEDvvD,KAAAk/E,YACEl/E,KAAKm/E,QAAS,WACf,OAAAr/E,EAAAo/E,UAAArD,oBAGC77E,KAAIo/E,oBAAiB,SAAUhqE,GAC7BtV,EAAKY,MAAK0U,KAAGA,EAKdtV,EAAAK,aACoB,EAAAqZ,GAAA,mBAAAxZ,KAAAq/E,WAAAj/E,KAAAJ,MAAAklB,MACpB,EAAA1L,GAAA,mBAAAxZ,KAAAs/E,YAAAl/E,KAAAJ,MAAAklB,GACD+qD,GAAA,EAAUz2D,GAAA,eAAmBtb,OAAE2rE,EAAA,SAAF3rE,CAAE8B,KAAAG,OAAAC,KAAAJ,MAAA,KAAAklB,GAChCllB,KAAAu/E,yBAAA,MAEDv/E,KAAAw/E,SAAA9E,EAAyC,EAAA8E,SAAzCx/E,KAAA4lB,2BA0BC80D,EAAA,EAAA90D,2BA1BU5lB,KAAAy/E,cAAAz/E,KAAAy/E,cAA8Br/E,KAAAJ,MACvCA,KAAIqhB,UAAarhB,KAAAqhB,UAAAjhB,KAAAJ,WACfU,MAAK,CACLA,MAAO,GACRs+E,YAAA,CAAAnjF,KAAA,IAEGuZ,KAAC,GACDwlE,SAAC,GAEL56E,KAAK0/E,YAAa,IAAAC,GAAA,CACdC,SAAS,sBAlCXx5D,QAAA,gDAqCA3lB,UAAQ6+E,YAAA,gBACRpiB,OAASl9D,KAAK6/E,eAGXp/E,UAAAg/E,cAAoB,SAAA/+E,GAErBV,KAACU,MADc,iBAAdA,EACY+lB,EAAK,KAAAzmB,KAAAU,MAAA,CAAAs+E,YAAAh/E,KAAA0/E,YAAAphF,MAAAoC,aAIfA,EAEPuvE,GAAQ,EAAAt0E,KAAA,iBAGVsjF,EAAAx+E,UAAA4+E,WAAA,SAAU50C,GACR,IAAI3qC,EAAIE,UACD,IAALyqC,IAAmBA,EAAA,IACpBzqC,KAAAk9D,OACGl9D,KAAIs/E,eAGRt/E,KAAIk9D,QAAI,OACN4iB,iBAAmB,OACpBr/C,eAAA,EACDzgC,KAAI6xB,QAAW,QACbnxB,MAAM,CACNA,MAAM+pC,EAAW/pC,MAAG+pC,EAAA/pC,MAAqB,OAEzCs+E,YAAIh/E,KAAa0/E,YAAAphF,MAAAmsC,EAAA/pC,YACf,YACE,wBAGO,oBACL,kBACA,gBACD,aACFm/E,aAAA,qBAAM,iCAKJx+D,UAAA,SAAAtH,GAWT,GAVO,qBACFulE,cAEJ,KAAAvlE,EAAA6zD,SAED5tE,KAAA+/E,cAAA,GAEsB,KAAhBhmE,EAAC6zD,SACN5tE,KAAA+/E,eAAA,GAQA,KANDhmE,EAAA6zD,QAMC,CALK,IAECoS,EAFmBhgF,KAAAigF,kCAEVjgF,KAAAygC,eACZ,GAAAu/C,EACM,QAAA/5E,IAAA+5E,EAAAE,eAAA,CACT,IAAAC,EAAAngF,KAAA6xB,QAAAmuD,EAAAI,aAAA7uE,MAAAyuE,EAAAE,gBAEDC,IACkBngF,KAAColB,UAAcjlB,OAAA,IACtBH,KAAAolB,UAAA1iB,KAAAy9E,EAAAx5E,KACR3G,KAAAs/E,mBAKG,CACE,IAAAe,EAAYrgF,KAAc6xB,QAAKmuD,EAAWI,aACvCC,GACNA,EAAAzG,OAAAyG,QAMD5/E,UAAK6/E,iBAAmB,gBACxBR,iBAAO,OACRS,kBAGK9/E,UAAY8/E,aAAK,WACvB,IAAIzgF,EAACE,KACLA,KAAM6/E,aAAe,EAErB7/E,KAAIuvD,SAAA,WACFzvD,EAAK+/E,aAAc,WAIjBp/E,UAAas/E,cAAc,SAAK/lD,MAChB,IAAlBh6B,KAAK6xB,QAAK1sB,cAGTnF,KAAAigF,kCAEDD,EAAaQ,EAAaxgF,KAAAygC,eAY9B,GAXIu/C,SACD/5E,IAAA+5E,EAAAE,eAEOlgF,KAAC6xB,QAAQmuD,EAAaI,aAAa7uE,MAAAyuE,EAAYE,gBAAAn7C,UAAA,EAGtD/kC,KAAA6xB,QAAAmuD,EAAAI,aAAAr7C,UAAA,GAKH,IAAA/K,EAAA,CAGE,IAAM/xB,EAAAu4E,EAAer7E,OAEbs7E,GAAAzgF,KAAAygC,cAAAzG,GAA2B/xB,EAEnCjI,KAAIygC,cAAaggD,EAAc,EAAEA,EAAAx4E,EAAAw4E,MAC/BC,EAAeF,EAAAxgF,KAAAygC,uBAChBx6B,IAAAy6E,EAAAR,gBAAA,IAAAlgF,KAAA6xB,QAAA6uD,EAAAN,aAAAvjF,eAacoJ,MAAPi6E,eACAlgF,KAAA6xB,QAAa6uD,EAAQN,aAAiBtkB,cAI1C97D,KAAI6xB,QAAC6uD,EAAkBN,aAAA7uE,MAAAmvE,EAAAR,gBAAAn7C,UAAA,QAHrB/kC,KAAA+/E,cAAO/lD,QAMdh6B,KAAA6xB,QAAA6uD,EAAAN,aAAAO,WAED3gF,KAAA+/E,cAAA/lD,GAGCh6B,KAAA6xB,QAAA6uD,EAAAN,aAAAr7C,UAAA,GAxBO/kC,KAAK+/E,cAAG/lD,QAXhBh6B,KAAAygC,eA8BC,MAQKhgC,UAAAmgF,iBAAe,SAAYC,OAC7B/gF,EAAKE,UACL8gF,gBAAc9gF,KAAA8gF,gBAAA,MACfC,EAAA/gF,KAAA8gF,gBACF9F,EAAA,GAEDgE,EAAAh/E,KAAAU,MAAAs+E,YACoB,YAAd6B,GACA7F,EAAUprE,KAAA1R,OAAAikC,GAAA,EAAAjkC,GAAAkkC,aAAAhlC,KAAAyrB,UAEd,IAAInoB,EAAA+lB,EAAkB,KAAAzmB,KAAAU,MAAA,CAAAA,MAAAs+E,EAAAnjF,KAAA+1E,IAAA5xE,KAAAU,MAAA0U,KAAA4lE,cACtB,OAAIh7E,KAAAk/E,UACL/+E,OAAAsmB,EAAA,KAAA/lB,IAWDQ,KAAA,SAAA2wB,GACOkvD,EAAiBjhF,EAAAghF,kBAGvBhhF,EAAA+xB,WAAA,GAED/xB,EAAAI,WAAA,EACMJ,EAAMigF,cAAY,OAGxBd,EAACx+E,UAAAugF,kBAAA,WAED,IAAAtgF,EAAAV,KAAAU,MACE,MAAuB,KAAlBA,UAAmB,IAAAA,EAAAk6E,SAAA,IAAAl6E,EAAA0U,KAAAjQ,UAEnB1E,UAAAwgF,YAAsB,SAAMrP,IAClC,IAAAjrD,EAAA5lB,EAAA+F,QAAA9G,KAAAU,MAAA0U,KAAAw8D,KAED5xE,KAAAU,MAAA0U,KAAAxF,KAAAgiE,GACM5xE,KAACG,aAIDM,UAAWygF,UAAK,SAAAtP,EAAA73D,GAEpB/Z,KAAAU,MAAO0U,KAAAuR,EAAU5lB,EAAAogF,QAAKnhF,KAASU,MAAA0U,KAAOw8D,QACpCzxE,cAEA2/E,iBAAY,4CAMZr/E,UAAS2gF,kBACP,sBACE1gF,MAAO,mBACL,oBAILD,UAAC4gF,YAAA,gBAEF3gF,MAAAk6E,SAAc56E,KAAAU,MAAAk6E,aACdkF,iBAAc,EAChB9/E,KAAGG,UAEP8+E,EAAAx+E,UAACN,OAAA,WAAAH,KAAAshF,YAAA,wBAEMthF,KAAS4gF,iBAAe5gF,KAAAU,MAAAs+E,YAAA,WAE3Bv+E,UAAa8gF,gBAAA,WACbvhF,KAAA+/E,cAAa,MAEbt/E,UAAgBw/E,gCAAM,WACtB,IAAAG,EAAc,EACd,OAAOz5D,EAAE5lB,EAAAygF,QAAAxhF,KAAA6xB,QAAA,SAAApsB,GACT,IAAAtE,EAAA,GACHA,EAAAyO,KAAA,CAEDwwE,wBCtV+B,8FAD/BA,IAC+Bj/E,KAI3B89E,EDmEU,KCnDO,EAAC5Q,UAAA,6CAXV,gBACF,2DACEoT,qBAEQ,eAEJ,4BASQ,WACRvnF,EAA4BqhC,EAAAmmD,ICF5CjT,EAAC,EAAAJ,UAAA,sGDeS,gBACE30D,EAAMswD,EAAEC,EAAMuG,EAAAlnD,SACd2gD,EAAAroD,QAAa,cACXk2B,UAAA,iGAKD,gBAEH/c,MAEFivC,EAAAtgB,SAAA,sBAAAugB,EAAAlvC,QAEE,SAAaivB,EAAIsqB,OAEjB3iE,EAAY7S,SAASoD,cAAc,SACjCH,UAAY,kBACNhB,EAAG44B,KAAAqwB,EAAA,SAAAkK,GACXviD,EAAGwP,YAAA+yC,KAEJ,IAAAytB,EAAA,CACJntE,OAAAw1D,EAAA,GACDr4D,UACHmmC,WAEDyN,4CCnEuBq8B,cAAA,CACiBhgE,SAEfigE,YAAA,CACV,CAENrjF,GAAA,SACQsjF,WAAA,WACKC,KAAA,MAOdroE,EAAIsoE,YAAA,WACF,IAAAC,EAAS,IAAIC,GAAwBnhF,EAAE4gF,GACxCllD,EAAA/iB,EAAAE,IAAA,sBAAMqoE,EAAA/3D,UACLuS,gBCWQ,EAAA4xC,UAAA,uBA7BK,OACcplD,SAAA,IAEHk5D,QAAA,UAElC1vB,KAAA,SAAA/4C,EAAAsQ,EAAAlf,EAAAq/D,GAiBKA,EAAAsG,SAAA7gE,KAZH,SAAA/T,GACO,OAASA,GAAM,IAAAkkE,MAAA,OAahBoK,EAAKiY,YAAaxyE,KAVxB,SAAA/T,GACY,OAAA8qB,EAAgB5lB,EAAA4E,QAAA9J,IACRA,GAAK,IAAS4K,KAAE,KA0CnC5K,eAzBK3B,EAAY,YCApB,IDQ2B,oBACpBmoF,SAEDC,UAAU,sBAEFC,gBAAY,iBAClB5/E,OAAOsoC,gBACP,WAAA/yB,EAAAsqE,SAAA,kBAAAtqE,EAAA+6C,KAAAwvB,EAAA,EAAA57D,UAAA,mBAGA67D,cAAsB,iBACtB1iF,iBACA2iF,YACA3iF,KAAA2iF,YAGJ3iF,KAAO4iF,MAAiB,IAAZ5iF,KAAA4iF,KAAYC,WACzBx+D,QAAA61D,QAAAl6E,KAAA4iF,OAGC5iF,KAAA2iF,YAAe,IAAMt+D,QAAS,SAAA61D,EAAA4I,GAE1B5sE,QAAQxG,IAAC,uBACX5P,EAAA8iF,KAAY,IAAAG,UAAAjjF,EAAAyiF,mBACZziF,EAAA8iF,KAAOI,QAAA,SAAAjpE,GACR7D,QAAAxG,IAAA,0BAAAqK,GAEK+oE,EAAW,CAAA3jD,QAAK,sBACjBr/B,EAAQ6iF,YAAE,KACTvpD,WAACt5B,EAAemjF,UAAQ7iF,KAAQN,GAAM,MAE3CA,EAAA8iF,KAAAM,UAAA,SAAAnpE,GAEOja,EAAMqjF,cAASppE,EAAAvR,OAGzB1I,EAAA8iF,KAAAQ,QAAS,SAATrpE,GAAAja,EAAA6iF,YAaC,KAZCG,EAAA,CAAA3jD,QAAA,qBACIjpB,QAAAxG,IAAC,wBAAsBqK,IAE1Bja,EAAA8iF,KAAAS,OAAA,SAAAtpE,GAEO7D,QAAIxG,IAAA,UAEP5P,EAAA6iF,YAAqB,KACxBzI,EAAAp6E,EAAE8iF,SAGD5iF,KAAA2iF,cAGLN,EAAA5hF,UAAA0iF,cAAA,SAAchkD,GAEb,IADCA,EAAUjjC,KAAKoC,MAAK6gC,IACrBmkD,OAAA,CAKC,IAAIvO,EAAC/0E,KAAesiF,UAAMnjD,EAACmkD,QACzBvO,EAIJA,EAAA//D,KAAAmqB,GAHKn/B,KAAAujF,eAAApkD,EAAAmkD,OAAA,WALLptE,QAAAxG,IAAA,wCAAsCyvB,MAUpC1+B,UAAYwiF,UAAU,WAEtB,IAAInjF,EAACE,KAEF,IAAA2mB,EAAA5lB,EAAAmE,KAAAlF,KAAAsiF,WAAAn9E,SAGL+Q,QAAAxG,IAAA,yBACE1P,KAAA0iF,gBAAYxhF,KAAA,SAAwB0hF,GAEpCj8D,EAAO5lB,EAAA44B,KAAA75B,EAAAwiF,UAAW,SAAO/gF,EAAC+E,GACxBxG,EAAK0jF,KAAA,CAAWntB,OAAC,YAAoBitB,OAAEh9E,YAKtC7F,UAAA+iF,KAAA,SAAAh7E,GAEHxI,KAAA4iF,KAAAY,KAAAtnF,KAAAC,UAAAqM,OAEA/H,UAAMgjF,YAAA,SAAAH,EAAAvO,GACP,IAAAj1E,EAAAE,KACHA,KAAAsiF,UAACgB,GAAAvO,EAAA/0E,KAAA0iF,gBAAAxhF,KAAA,SAAA0hF,4LChIkC9iF,EAAA0jF,KAAA,CAAAntB,OAAA,cAAAitB,cAcnCjB,EAAA5hF,UAAAuiC,UAAA,SAAA0gD,GAGE,IAAA5jF,EAAgBE,KACI,OAApBkW,QAAAxG,IAAA,sBAAmCg0E,GAAfzhD,GAAe,EAAAoK,OAAA,SAAA0oC,GAElC,OADKj1E,EAAK2jF,YAAGC,EAAA3O,GACb,WAEDj1E,EAAAyjF,eAAAG,EAAA3O,OAQEsN,EDWuB,ICLXnoF,EAAc,QAKN,8SACX,WAGZ,SAAAypF,EAAAt+D,GAEDrlB,KAAAqlB,WAAgBA,EACTrlB,KAAS+6B,KAAWm0B,EAAe,EAAAjuD,IAAA,6CAJtCmlB,QAAA,iBAMa3lB,UAAAmjF,SAAA,WACb5jF,KAAK+6B,KAAI,OACTm0B,EAAmB,EAAAjzD,IAAS,wCAC1BopB,WAAYG,SAAG,sBAAU,WAEpB/kB,UAASojF,SAAW,gBAEzB9oD,KAAA,SAGS,EAAY9+B,IAAA,2BAAW,wBAC5BupB,SAAY,sBAAsB,WAnB/B,YCDTmkD,GAAYtkD,SACZ,CACD4D,SAAA,IAEDvP,MAAA,GAAA+4C,KAAA,SAAA/4C,EAICswD,GAHC,IACEjoE,EAAY,qBADFmtD,EAAS,EAAAjuD,IAAA,qCAElB+oE,EAAAtgB,SAAA3nD,GACJsjB,EAAAY,WAAA,+BAAAlM,EAAA+pE,GACH9Z,EAACyB,YAAA1pE,KAAA,oBAAA+hF,iBAEepqE,OAIQ,EAAA20D,UAAA,iBDcxB,WACA,kCCvE8CjlD,kBAAA,EAExCC,aAAW,OAeX3P,MAAA,GAeN8Q,SAAAu5D,QAyBsB,EAAI1V,UAAA,aAAA1E,WAIV,6iBACD,kjBACO,oBAGlBqa,EAAU9+D,EAAAqqC,GACVvvD,KAAAuvD,WACHvvD,KAAAoM,MAAA,EAEMpM,KAASnD,GAAAqoB,EAAAsqD,aALXppD,QAAA,wBAOD3lB,UAAawjF,iBAAA,WACb,IAAAnkF,EAAYE,KACZ,OAAAA,KAAYuvD,SAAQ,WACpB,OAAAzvD,EAAgBwC,gBAZE,KCjCE,EAAA+rE,UAAA,0CDqDnB,IACDllD,WAAU66D,GACV36D,aAAA,OACHD,kBAAA,EAED1P,MAAA,CACAwqE,QAAA,6BCzF8C/2B,QAAA,IAGxCg3B,YAAA,IAIN7hF,SAAA,KAKEkoB,SAAA45D,QAmBY,EAAA/V,UAAA,kCAjBZ,CACEplD,SAAK,IAELE,WAAY66D,gBACN,yBACG,QACJ,CACFE,QAAA,IACJ1iF,MAAA,IACH6iF,WAAA,IAACl3B,QAAA,oBAEe7qD,SAAA,KAEZkoB,SAAU85D,aAQV,yHACHC,GAAA,yBCpCsBvkF,KAAAW,6CAEuB4jF,EAAA9jF,UAAA+jF,QAAA,WAExC,IAAA1kF,EAAAE,KAYC,OADPA,KAAAkH,QAAgB,EAAA3F,MAAA,EAAA1F,KAAA,YACAmE,KAAAW,WAAAR,OAAyB,CAAAy6E,SAAgB,IAAA15E,KAAA,SAAAwW,GACjDA,EAAA67C,QAAgB,SAAAkxB,GAEf3kF,EAAAoH,QAAA0I,KAAA,CAAArO,MAAAkjF,EAAA5nF,GAAAhB,KAAA4oF,EAAA7oF,eDiBR,KCKkB,EAAAyyE,UAAc,qCAd7B,UACQ,eACAkW,qBACA,eACA,gBAEAG,SAEN,OACE,eAae,oZAEH1e,SACX,4FAGH,aACE2e,eAEA,gBACM,aAEF,mBAGGz/D,EAAY8kD,SACjB9kD,EAAO0/D,OACLA,EAAOjlD,MACNqqC,EAAAp/D,KAAA,4BACJsa,EAAAonD,kBAGIuY,EAAQC,GAGf,IAAAC,EAASj+D,IAAmD9mB,MAC1DsrE,EAAAyZ,EAAA/vE,OACAs2D,EAAMhmE,IAAKs/E,EAAK/gE,OAAIihE,MAClB95E,IAAA,QAAe+5E,EAAMlmF,QAAW,GAAC,QAClCksE,OACFO,EAAAl/D,OAEDk/D,EAASppD,QACPopD,EAAA1oD,SACA,IAAIooD,EAAYM,EAAK9iE,KAAO,aAC7BwiE,IAEDM,EAAShmE,IAAA,IACH0lE,EAAOsC,mBAILP,EAAA+X,SAEEh+D,IAAwB9mB,QACxBsrE,EAAM3iC,SACR2iC,EAAUhmE,OACR,QAAOs/E,EAAIjlD,IAAA9b,OAAWihE,GAAAE,mBACrBhf,EAAA5zB,yBAAAi4B,MACJ4a,YAAA3Z,EAAAhmE,MAAAw/E,KACDh9D,OAAO,WACR5C,EAAAggE,YAAA,CAAAC,OAAA,CAAAngF,KAAA,wDAOG8/E,EAASpsD,GAEV,KAAHA,EAAEI,OACFi0C,EAAAhtE,KAAAC,KAAA8kF,YAKAM,SAEAtoD,MAAOj+B,MAAI,KAAAmB,KAAAuB,MAAA4D,QAAA,kDCrHE,KAAA4hB,EAAAi+D,UAAAJ,EAAA/gE,OAAA1e,QAAAzI,GAAA,CAIjBA,EAAW,GAWDoqB,IAAA,mBAAA65B,SAAA0kC,GAER,IAAgBC,EAAAtf,EAAA5zB,yBAAAwyC,EAAsD/gE,OAAAnnB,IAErE6oF,EAAAz+D,IAAA,+CAAAw+D,EAAA,QACQha,EAAAxkD,IAAA0+D,GACHD,EAAA5kC,SAAA0kC,GACH/Z,EAAA3qB,SAAA0kC,GACC/Z,EAAGjiE,KAAAsd,EAAA5lB,EAAA0kF,QAAA1Y,EAAArwE,IACT4uE,EAAaC,MAAG6Z,GACR9Z,EAAKoa,SAAA/+D,EAAA5lB,EAAA0kF,QAAAE,EAAAjpF,IACd6oF,EAAAp0B,MAAAxqC,EAAA5lB,EAAA0kF,QAAAZ,EAAAnoF,aD6Fe4uE,EAAAvkD,EAAE+9D,QACV59E,SAAW6f,EAAAyX,eA0Bf8sC,EAAOxgE,KAAA,eAAoB,aAC3BwgE,EAAAN,UAAA,CAEFC,OA1BmB,SAAAvqE,EAAAogB,GACf,GAACiG,EAAA7f,QAAA,CACA,IAAAA,EAAA6f,EAAA7f,QAOD,MAL2B,QAAvB6f,EAAYhT,OACR7M,EAASyf,EAAA5lB,EAAAK,IAAA8F,EAAA,SAAA5B,GACP,OAAQA,EAAAO,cAGlBqB,EAGAge,EAAA4C,OAAU,WACX5C,EAAAggE,YAAA,CAAAC,OAAA,CAAAngF,KAAA,uBAAA9D,KAAA,SAAAC,GACF,IAAAykF,EAAAj/D,EAAA5lB,EAAAK,IAAAD,EAAA,SAAA0kF,GAEM,OAAkBl/D,EAAA5lB,EAAAoc,OAAA0oE,EAAAtkF,SAEduf,EAAA8kE,QAST1a,UAAA,EACE35D,MAAI,YACF,SAAOhQ,GAOH,OANLA,EAAAolB,EAAA5lB,EAAAosE,SAAA5rE,GAEG63B,WAAW,WACb2zC,EAAAhtE,KAAAurE,EAAA,GAAEwZ,IACH,GAEKvjF,SAINypE,EAAWM,EAAQ9iE,KAAC,eACd8kE,OAAS,WAEfttE,KAAAU,MAAYV,KAAAutE,SAAAjoE,OAAS,GACrB,IAAAiM,EAAYvR,KAACirE,OAAAjrE,KAAcU,MAAAomB,EAAA/lB,EAAAysE,MAAAxtE,KAAAytE,QAAAztE,OAC3B,OAAOuR,EAAQvR,KAACytE,QAAAl8D,GAAEA,GAGlBm8D,IACC1C,EAAAsC,OAAA3mD,EAAA5lB,EAAAurE,SAAAtB,EAAAsC,OAAA,KAAAhtE,SAAA,MCjJDwlF,CAAkBxa,EAAavkD,EAASrqB,QD2C1CqpF,YAAc,KA0GdC,gBAAiB,WACjB9gE,EAAAggE,YAAA,CAAqBC,OAAG,CAAAngF,KAAA,sBAAA9D,KAAA,SAAAwW,GACzBwN,EAAA6gE,YAAAruE,KAIHwN,EAAA+gE,kBAAA,SAAA5vB,GACHnxC,EAAAggE,YAAA,CAAAC,OAAA,CAAAngF,KAAA,SAAAqxD,aCxJWgvB,EAAiBa,QACnBC,QASS,EAAI9X,UAAQ,kBAAazE,WAQrB,0bAEF5D,SACX,sEAEH,aAEDogB,+BAGU,IACV9Z,SAAC,mBAGCpnD,EAAA8kD,OACA4a,EAAM1/D,EAAQ0/D,KACdyB,EAAMzB,EAAWjlD,IAEjB0lD,EAAmBrb,EAAIp/D,KAAK,4BACfsa,EAAAonD,WAEN,gBAEIwY,OAEVC,EAAAj+D,IAAA9mB,MAEDsrE,EAAayZ,EAAC/vE,OACds2D,EAAMhmE,IAAIs/E,EAAG/gE,OAAAihE,IACdxZ,EAAAtgE,IAAA,QAAA+5E,EAAAlmF,QAAA,SAEDkmF,EAASha,OACPO,EAAAl/D,OACAk/D,EAAMppD,UACJU,aACDooD,EAAAM,EAAA9iE,KAAA,aACFwiE,IAEDM,EAAShmE,IAAA,IACP0lE,EAAAsC,UAIF,SAASP,EAAAzB,EAAawZ,GACpBjY,EAAWzzC,WAAY,WACrB4zC,EAAO1B,EAAAwZ,IACR,cAGC9X,EAAU1B,EAASwZ,SAEbxZ,EAAM3iC,SACR2iC,EAAUhmE,OACR,QAAOs/E,EAAIjlD,IAAA9b,OAAWihE,GAAAE,mBACrBhf,EAAA5zB,yBAAAi4B,MACJ4a,YAAA3Z,EAAAhmE,MAAAw/E,KACDh9D,OAAO,WACR5C,EAAAggE,YAAA,CAAAC,OAAA,CAAAngF,KAAA,wDAQG8/E,EAAApsD,GAEE,gBACD5R,IAAA9mB,MAAA8kF,YAIJM,IAGHplF,KAAA88B,MAAWj+B,MAA8B,GAA7B,EAAAmB,KAAgBuB,MAAA4D,QAAa,kDC5H1B,KAAA4hB,EAAAi+D,UAAAJ,EAAA/gE,OAAA1e,QAAAzI,GAAA,CAKDA,EAAC,GACLoqB,IAAA,SAAAu/D,EAAAznD,UAAA,WAAA+hB,SAAA0kC,GAEf,IAAAC,EAAAtf,EAAA5zB,yBAAAwyC,EAAA/gE,OAAAnnB,IACmB6oF,EAAAz+D,IAAA,+CAAAw+D,EAAA,QACRha,EAAaxkD,IAAA0+D,GACxBD,EAAA5kC,SAAA0kC,GACW/Z,EAAW3qB,SAAQ0kC,GACnB/Z,EAASjiE,KAAIsd,EAAgB5lB,EAAA0kF,QAAA1Y,EAAAzB,EAAA5uE,IACxC4uE,EAAAC,MAAA6Z,GACW9Z,EAAWoa,SAAS/+D,EAAe5lB,EAAE0kF,QAAEE,EAAAjpF,IACpD6oF,EAAAp0B,MAAAxqC,EAAA5lB,EAAA0kF,QAAAZ,EAAAnoF,aD+GiB4uE,EAAAvkD,EAAe+9D,MACvB/9D,EAAA7f,SAAY6f,EAAAyX,eA6Bd8sC,EAAAxgE,KAAA,4BAEFwgE,EAAON,UAAA,CACLC,OA7BY,SAACvqE,EAACogB,MACViG,EAAI7f,QAAU,KACZA,EAAA6f,EAAa7f,QAMhB,MALkB,QAAf6f,EAAMhT,OACN7M,EAAOyf,EAAM5lB,EAAAK,IAAA8F,EAAA,SAAA5B,GACd,OAAAA,EAAAO,cAGFqB,EAGHge,EAAU4C,OAAM,WACV5C,EAAMggE,YAAQ,CAAAC,OAAc,CAAAngF,KAAO,oBAAA+hB,WAAA7lB,KAAA,SAAAC,GACjC,IAAQykF,EAAiBj/D,EAAO5lB,EAAAK,IAAAD,EAAA,SAAE0kF,GAC5B,OAAOl/D,EAAe5lB,EAAEoc,OAAO0oE,EAAAtkF,UAIyB,IAA1DolB,EAAS5lB,EAAA+F,QAAE8+E,EAAShB,EAAU/gE,OAAQihE,KACjDc,EAAAx+D,QAAAT,EAAA5lB,EAAAoc,OAAAynE,EAAA/gE,OAAAihE,KAGIhkE,EAAkB8kE,QAQvB1a,UAAA,EAEF35D,MAAS,IACP45D,QAAA,SAAO5pE,GAEH,OADEA,EAAMolB,EAAiB5lB,EAAAosE,SAAO5rE,MACzBqjF,EAAA/gE,OAAAihE,IACR1X,aAAAP,GAEGvB,EAAWppD,QACb3gB,GAGIA,SAINypE,EAAWM,EAAQ9iE,KAAC,eACd8kE,OAAS,WAEfttE,KAAAU,MAAYV,KAAAutE,SAAAjoE,OAAS,GACrB,IAAAiM,EAAYvR,KAACirE,OAAAjrE,KAAcU,MAAAomB,EAAA/lB,EAAAysE,MAAAxtE,KAAAytE,QAAAztE,OAC3B,OAAOuR,EAAQvR,KAACytE,QAAAl8D,GAAEA,GAGlBm8D,IACC1C,EAAAsC,OAAA3mD,EAAA5lB,EAAAurE,SAAAtB,EAAAsC,OAAA,KAAAhtE,SAAA,MCxKXwlF,CAAAxa,EAAAvkD,EAAArqB,oBDqDuB,KAuHfspF,gBAAiB,WACjB9gE,EAAAggE,YAAA,CAAqBC,OAAG,CAAAngF,KAAA,sBAAA9D,KAAA,SAAAwW,GACzBwN,EAAA6gE,YAAAruE,KAIHwN,EAAA+gE,kBAAA,SAAA5vB,GACHnxC,EAAAggE,YAAA,CAAAC,OAAA,CAAAngF,KAAA,SAAAqxD,aC5JWgvB,EAAWa,QAEXC,eAcPG,GAAA13E,SAAM5O,KAAAU,YACD,SAIC,QAAL,OACD+wC,EAAA0mB,UAAA,IAGiB,MAAlB1mB,EAAIA,EAACtsC,OAAY,OACfssC,EAAM0mB,UAAO,EAAA1mB,EAAAtsC,OAAgB,MAE7ByO,cAAYmI,MAAA01B,EAAA79B,kBAnBI,EAAKy6D,UAAA,gBAAAkY,WAqBI,oBAI3BC,EAAmBthE,EAAAqoD,EAAApB,EAAAnG,EAAA8H,GACnB,IAAMhuE,EAAAE,KACNA,KAAAklB,OAAUA,OACRinD,KAAKA,OACLnG,YAAYA,EACdhmE,KAAE8tE,KAEF9tE,KAAIymF,aAAelZ,EAAA3iE,KAAA,SAAAoU,aACjB0nE,YAAUnZ,EAAS3iE,KAAA,KAAAoU,aACpBquD,UAAA,EAEDrtE,KAAK6sE,WAAY,OAEfzC,OAAQ,aAAcpqE,KAAO2mF,aAAavmF,KAAIJ,YAC5C4mF,eACDr5B,WAAA,iBAAAvtD,KAAA+tE,SAID/tE,KAAIutD,WAAW,yCAASvtD,KAAA+tE,gCAGrB0Y,aAAO37E,KAAA,cAAA9K,KAAAuC,aAEZvC,KAAGymF,aAAA37E,KAAA,4BAEH9K,KAAKymF,aAAazb,UAAU,CAExBC,OAAKjrE,KAAAgxE,gBAAW5wE,KAAAJ,MAClBkrE,UAAW,EACZ35D,MAAA,IACF45D,QAAAnrE,KAAA6mF,iBAAAzmF,KAAAJ,MAEDwrB,QAAA86D,SAIGtb,EAAAhrE,KAAAymF,aAAAj+E,KAAA,aACDwiE,EAAOsC,OAAY,WACpBttE,KAAAU,MAAAV,KAAAutE,SAAAjoE,OAAA,GAEDtF,KAAAirE,OAAAjrE,KAAAU,MAAAV,KAAAytE,QAAArtE,KAAAJ,QAECA,KAAAssE,WAEDtB,EAAAsC,OAAA3mD,EAAA5lB,EAAAurE,SAAAtB,EAAAsC,OAAA,KAAAhtE,SAAA,KACEN,KAAI0mF,YAAA/Y,QAAE,SAAc5zD,GAEnB,KAAAA,EAAA6zD,SAAA,KAAA7zD,EAAA6zD,SAAM9tE,EAAA4mF,YAAAv1B,4BAGEwc,QAAA,SAAuB5zD,GACR,OAAlB6zD,oBACK,WACJ9tE,EAAA2mF,aAAAp9E,QACJ,YAEAo9E,aAAAp9E,KAAArJ,KAAA+sE,UAAA3sE,KAAAJ,OACFA,KAAA8mF,WACF1tD,WAAAp5B,KAAA+mF,KAAA3mF,KAAAJ,MAAA,GCnIH,SDuEIomB,QAAA,UAA0B,wCA+DrB3lB,UAAkBumF,mBAAa,SAAatmF,OAC/CS,EAAKnB,KAAAwH,WAAc,CAAOylE,OAACvsE,WAE3BV,KAAAinF,cAAgB9lF,GACVA,EAEHnB,KAAA8tE,GAAAG,KAAA9sE,MAGKV,UAACwmF,cAAwB,SAASrhF,aAClC,mBAAFA,EAAA1E,QAEHT,UAAAkmF,aAAA,iBACF3mF,KAED2mB,EAAS5lB,EAAAi9E,SAAah+E,KAAA3D,OACrB2D,KAAAknF,cAAAlnF,KAAA3D,MAAAR,MAKDmE,KAAAmnF,WACInnF,KAACgnF,mBAAqB,IAAA9lF,KAAA,SAAAgG,GACnB,IAAK0H,EAAA+X,EAAA5lB,EAAA6J,KAAA1D,EAAA,CAAA3F,MAAAzB,EAAAzD,QACbyD,EAAAonF,cAAAt4E,IAAA/S,KAAAiE,EAAAzD,SAKF2D,KAAAknF,cAAAlnF,KAAA3D,UAKEoE,UAAAuwE,gBAAA,SAAAtwE,EAAAogB,GAED,IAAAhhB,EAAYE,KACZA,KAAKgnF,mBAAkBtmF,GAAAQ,KAAA,SAAAgG,GACnBpH,EAACsnF,YAAgBlgF,EAEjB,IAACmgF,EAAgB1gE,EAAG5lB,EAAAK,IAAA8F,EAAA,SAAA2+E,GACnB,OAAAl/D,EAAiB5lB,EAAAoc,OAAgB0oE,EAAIhqF,QAI1CiE,EAAAwnF,aAAA,KAAAxnF,EAAAjE,OAC2C,IAA3C8qB,EAAA5lB,EAAA+F,QAAAugF,EAA2CvnF,EAAAjE,OACtCwrF,EAAajgE,QAAWtnB,EAAKjE,MAGpCilB,EAAAumE,QAIW5mF,UAAAomF,iBAAA,SAAAhrF,UACRA,IAAAmE,KAAAnE,MAEGuxE,aAAQptE,KAAO6sE,YACjB7sE,KAAMymF,aAAcvkE,QAEhBrmB,sBAEKyJ,IAAAzJ,sBACN,SAEA4E,UAAAusE,aAAA,SAAAJ,QACDS,WAAYT,iBAER5sE,KAAA6sE,4BACI,oBACP,oBAAM9B,wBACD3+D,wBACLpM,KAAAymF,aAAAnhF,WAEF7E,UAAAssE,UAAA,gBAIDF,WAAYzzC,WAAYp5B,KAACgtE,aAAA5sE,KAAAJ,MAAA,QAErBS,UAAK8mF,YAAkB,SAAW1rF,SACjCmE,KAEJ,QADE2mB,EAAA5lB,EAAAosE,SAAAtxE,KACFmE,KAAAnE,UAIHmE,KAAKklB,OAAO4C,OAAK,WACb,IAAC7E,EAAU0D,EAAU5lB,EAAA6J,KAAY9K,EAAKsnF,YAAY,CAAAvrF,SACvDonB,GAED0D,EAAI5lB,EAAAi9E,SAAJl+E,EAAAzD,OACOyD,EAAazD,MAAI4mB,EAKjBnjB,EAAYzD,MAAO4mB,EAAA1hB,MAGlBzB,EAASjE,KAAQonB,EAAApnB,MAEhBiE,EAAAwnF,cACL3gE,EAAmB5lB,EAAAi9E,SAAAl+E,EAAAzD,OACpByD,EAAAzD,MAAAR,KAAAiE,EAAAzD,MAAAkF,MAAA1F,EAEJiE,EAAAzD,MAAAR,EAEKiE,EAAAjE,KAAWA,GAkBbiE,EAAUolB,OAAAyzD,aAAA,WACV74E,EAAYolB,OAAA4C,OAAA,WACZhoB,EAAkBwC,SAAI,CAAAklF,QAAAvkE,aAKZxiB,UAAKymF,cAAA,SAAArrF,QACbA,KAAQA,OACR0C,QAAWyB,KAAKmsE,KAAAK,YAAAxsE,KAAAgmE,YAAA5zB,yBAAAv2C,OAEhB4E,UAAesmF,KAAA,gBACfN,aAAaz7E,IAAG,QAAA9L,KAAA+I,IAAAjI,KAAA0mF,YAAA7nF,QAAA,kBAChB4nF,aAAcr6E,YACdq6E,aAAavkE,aACdwkE,YAAA3b,OACD/qE,KAAAqtE,UAAA,EACH,IAAArC,EAAAhrE,KAAAymF,aAAAj+E,KAAA,aAEDwiE,2CCvRAwb,EDoE+B,MCjEb,qSCGI,EAAAnY,UAAA,kCDDlB,CAEAplD,SAAO,aACCw+D,cACCC,GACTt+D,kBAAE,EAEFC,aAAO,OACR3P,MAAA,CACHrd,MAAA,IAACmL,WAAA,iBAEDumE,SAAA,kCCnBwCoZ,WAAA,IACH5kF,YAAA,IAErCukF,UAAA,IACExa,SAAgB,eAU2B,oBAIzCqb,EAAcziE,KACZ5P,KAAU2R,EAAKlmB,EAAAmmB,OAAmBhC,EAAG7oB,MAAAC,QAAmB,oBAClB,IAA7B4oB,EAAU7oB,MAAOE,eAAY2oB,EAAA7oB,MAAAc,oBAC7B+nB,EAAS7oB,MAAMiB,oBACf,eACPsqF,EAAO3gE,EAAoBlmB,EAAG8mF,SAAA3iE,EAAa5P,QAE3CjZ,MAAOE,cAAWqrF,EAAe1iE,EAAO7oB,MAAKC,WAE5CwrF,uBAAA,kBAAA5iE,EAAA5P,eAXH8Q,QAAA,WAcFuhE,EAhBuC,KAmBpC,EAAAx+D,WAAA,iBAAA4+D,WAOW,WAEjB,SAAAC,EAAA9iE,EAAA+iE,EAAAC,EAAAvnF,iBAEDukB,EAAAijE,UAAA,qBC5CqCrsF,KAAA,uBACGD,KAAA,SAExC+lC,SAAA,gCACER,YAAgB,EAAAxlC,MAAA,QAAA+K,IAAA,YACyBue,EAAArV,KAAA,WACvClP,EAAWM,IAAQ,oBAASgnF,EAAAG,MAAAlnF,KAAA,SAAAmnF,GACrBnjE,EAAOijE,UAAKnjF,KAAAqjF,EAAArjF,KAEZkgB,EAAAijE,UAAep3E,MAAAs3E,EAAAt3E,MAEhBmU,EAASijE,UAAU3f,SAAS6f,EAAAt3E,MAElCmU,EAAAijE,UAAAG,WAA4BL,EAAAG,KACxBljE,EAAOqjE,SAAUF,EAAYrjF,MAAOqjF,EAAAt3E,OAAcs3E,EAAA7f,SACpDtjD,EAAWsjE,UAACH,EAAiBG,aAI/BtjE,EAAOujE,OAAS,WACTvjE,EAASwjE,WAASC,QAIzBhoF,EAAO0oE,KAAA,4BAA2BnkD,EAAAijE,WAAAjnF,KAAA,WAC3ByB,OAAAsoC,SAAgBrN,KAAM6kD,EAAA,EAAA57D,UAAA,uBDiBjCmhE,EAAA5hE,QAAC,sDAFiB,KCNZ,EAAA+C,WAAA,cAAAy/D,QAMJC,GAAC,oBAIGC,EAAO5jE,EAAAvkB,EAAAykB,EAAA8iE,QACRhjE,SAEDllB,KAAKW,WAAWA,IACPooF,UAAU,SACT/oF,OACPmoF,UAAA,SAAM/iE,EAAAjlB,YAEN4Q,OAAA8S,EAAA9S,MAAAgL,MAAA,cAGNmJ,EAAAijE,UAAAp2E,QAAA8R,EAAA9S,gCAEDmU,EAAAijE,UAAA3f,SAAW3kD,EAAW9S,sDCzDkBmU,EAAA8jE,eAAA,EACH9jE,EAAA+jE,SAAA,CAGrC7oD,KAAA,CACEtkC,KAAgB,uBAChBD,KAAA,UACS+lC,SAAS,gCACTR,YAAc,EAAAxlC,MAAA,QAAA+K,IAAA,YAGrBhG,EAAOM,IAAA,4BAAmBC,KAAA,SAAOgG,GAE3Bge,EAAMgkE,mBAAsBhiF,EAAAgiF,mBAC9BhkE,EAAO8jE,cAAM9hF,EAAA8hF,iBDuCd9yE,QAAAxG,IAAA,0BAVE0W,QAAY,UAAW,aAAQ,4BC1BnC3lB,UAAAgoF,OAAA,WAEDzoF,KAAOklB,OAAQikE,WAAGR,wBAGRtf,KAAA,yBAAgBrpE,KAAAklB,OAAAijE,WAAAjnF,KAAA,SAAAkoF,GACZ,2BAAVA,EAAAhB,KACAzlF,OAAAsoC,SAAgBrN,KAAO6kD,EAAwB,EAAA57D,UAAA,+BAI5ClkB,OAAAsoC,SAAiBrN,KAAA6kD,EAAA,EAAA57D,UAAA,SDYzB,KCLG,EAAAsC,WAAA,aAAA0/D,WAO4C,oBAG3CQ,EAAAnkE,EAAAvkB,EAAAykB,KAED+iE,UAAe,UACb,SACCmB,YAAA7G,EAAA,EAAA6G,YACLpkE,EAAEqkE,iBAAA9G,EAAA,EAAA8G,iBACHrkE,EAAAskE,iBAAA/G,EAAA,EAAA+G,iBACH,IAAA3lE,EAAAuB,EAACjlB,SAAA0jB,EAAAukE,sBAEDljE,EAAAijE,UAAAC,KAAWvkE,EAAWukE,kBCtDehoD,KAAA,CACGtkC,KAAA,uBACID,KAAA,iBAE5C+lC,SAAA,8BACER,YAAgB,EAAAxlC,MAAA,QAAA+K,IAAA,YAGdue,EAAOukE,eAAY,WAEdvkE,EAAWwkE,cAAYf,QAI5BhoF,EAAW0oE,KAAS,sCAAEnkD,EAAAijE,WAAAjnF,KAAA,WAChBgkB,EAAC6V,KAAW,gBAGlB7V,EAAGykE,YAAA,WACJzkE,EAAA0kE,UAAAjB,+DCnByBhoF,EAAA0oE,KAAA,2BAAAnkD,EAAAijE,WAAAjnF,KAAA,WACJkkB,EAAA1iB,KAAA,WDqBxBwiB,EAAAM,SAAW,gBAAW,8BAAwB,gBDsBtCY,QAAO,sCAFmC,GGxClDqoD,EAAA,EAAAtlD,WAAA,oBAAA0gE,QAMAC,GAAC,WAED,SAAAC,EAAA7kE,EAAAgjE,EAAA8B,GACA9kE,EAAA+jE,SAAAe,EAAkBC,yDCX4Bha,GAAA,EAAAt0E,KAAA,0BAG9CupB,EAAAtL,IAAA,qBAGEsuE,EAAgBvN,YAChB1K,GAAwD,EAAAt0E,KAAA,4BAExD,uDAAAouF,EDDD,KCIG,EAAA5gE,WAAa,YAAA2gE,WAcK,oBAEdI,cAEFzpF,UAAKxE,IAAW,mBACjByT,IAAA,0CALiB,KAWC,EAACosE,QAAG,WAAAoO,WAKN,oBAIjBC,EAAQ9kE,EAAe+kE,QACrB/kE,WAAcA,EAChBrlB,KAAGoqF,kBAJAhkE,QAAA,wBAOL+jE,EAAA1pF,UAAAoP,KAAA,WACEogE,GAA8B,EAAAz2D,GAAI,aAAGxZ,KAAAqqF,UAAAjqF,KAAAJ,WAAAqlB,YAErC4qD,GAA0B,EAAAz2D,GAAA,aAAWxZ,KAAAsqF,UAAAlqF,KAAAJ,WAAAqlB,eACb,EAAG7L,GAAA,gBAAoBxZ,KAAAuqF,iBAAuBnqF,KAACJ,MAAWA,KAAGqlB,eAGrF5kB,UAAc6pF,UAAQ,WACtBtqF,KAAMwqF,YAAexqF,KAAKwqF,WAAAC,SAC1BzqF,KAAMwqF,WAAQC,aAIdhqF,UAAM4pF,UAAoB,SAAUnjF,GACpClH,KAAMwqF,YAAcxqF,KAAQwqF,WAAWC,SACvCzqF,KAAMwqF,WAAaC,UAEnBzqF,KAAKwqF,WAAWtjF,EAAQwS,MACxBxS,EAAY7K,OACZ2D,KAAMwqF,WAAgBxqF,KAAGqlB,WAAM8wD,OAE/Bn2E,KAAAwqF,WAAAnuF,MAAA6K,EAAe7K,OAER2D,KAAEwqF,aACPxqF,KAAAwqF,WAAYxqF,KAAAqlB,WAAe8wD,QAE9B,IAAAuU,EAAA1qF,KAAAoqF,OAAA,CACHO,WAACzjF,EAAAyjF,WAAAngE,SAAAtjB,EAAA3J,gCAEDqtF,SAAA,gCChFuBC,UAAA,EACuBC,SAAA5jF,EAAA4jF,WAI9CzmE,QAAA61D,QAAAwQ,GAAAxpF,KAAA,SAAA6pF,GACAA,EAAAL,MAAA,aAIsBjqF,UAAQ8pF,iBAAiB,SAAA9/C,GAH7C,IAAA/wB,EAAM1Z,KAAoCqlB,WAAA8wD,OAGOz8D,EAAAsxE,kBAAA,SAAAzpF,GAEjDmY,EAAAuxE,iBAAAxgD,EAAS/uC,YAA8BkY,gBAAArS,EAAAqS,eAErC8F,EAAA9d,MAAc6uC,EAAC7uC,MAChB8d,EAAA7d,KAAA4uC,EAAA5uC,KAED6d,EAAAle,MAAAivC,EAAAjvC,MACEke,EAAK2O,cAASoiB,EAACpiB,cACf3O,EAAKhe,YAAe+uC,EAAQ/uC,YAC7Bge,EAAA1d,UAAAyuC,EAAAzuC,UAED0d,EAAAwxE,YAAAzgD,EAAAygD,YAAAxxE,EAAAyxE,cAKC1gD,EAAA0gD,cAJCzxE,EAAA5d,KAAA2uC,EAAM3uC,MAAM,aACVC,QAAK0uC,EAAS1uC,SAAU,MAC1B2d,EAAG4O,OAAAmiB,EAAAniB,QAAA,SACH5O,EAAKuxE,kBAAYvxE,EAAAhe,YAClBu0E,GAAA,EAAAt0E,KAAA,cACH4B,IAAC,yCAAAmc,wCDcoB,GExCgB+0D,EAAA,EAAAqN,QAAA,UAAAsP,QAMnCC,GAAA,oBAGIC,EAAA/7B,QACAA,SAAWA,OACVg8B,OAAA,oBAHI,yBAKW7oE,SAAE,SAAA8oE,sBAClB57E,KAAA47E,kBAGGC,OAAA,SAAAD,GACLxrF,KAAIurF,OAAQ5kE,EAAO5lB,EAAAogF,QAAAnhF,KAAAurF,OAAAC,GACnBxrF,KAAGuvD,SAAWk8B,OAAAD,MAEd/qF,UAAUirF,UAAA,WACX,IAAA5rF,EAAAE,KAED2mB,EAAA5lB,EAAA44B,KAAI35B,KAAJurF,OAAA,SAAAv1E,GAAAlW,EAAAyvD,SAOCk8B,OAAAz1E,UALGu1E,OAAW,MApBT,KAyBL,EAAAzP,QAAA,QAAAuP,QAKDM,GAAoB,WAGrB,SAAAC,EAAAvmE,EAAAD,GAEDplB,KAAAqlB,uCAHGe,QAAA,2BCxCoBwlE,EAAAnrF,UAAAorF,OAAA,WACuB/kE,EAAA/lB,EAAA+qF,KAAA,CAC9CnlF,IAAa,gDACkBolF,SAAA,SAE/B9iC,OAAgB,IAEV,IAAA+iC,EAAQrpF,OAAaqpF,GAEpBrpF,OAAQqpF,IAET,YACDA,EAAAC,EAAAD,EAAAC,GAAA,IAAAr8E,KAAA6Z,mBAGCuiE,EAAC9zE,GAAO,IAAA5E,KACV04E,EAAA,SAAYvJ,EAAE,EAAAyJ,kBAAA,gBACZ,eAAiB,GACjBF,KAGIvrF,UAAQoP,KAAA,WACd,IAAI/P,EAAUE,KAEdA,KAAMqlB,WAAUzL,IAAA,gCACd,IAAAuyE,EAAW,CAAAC,KAAAtsF,EAAAslB,UAAAze,OACTqlF,EAAKrpF,OAACqpF,IAAWlsF,EAAA+rF,iBAEbM,YACF,iBDSY,YCAjBE,GAACC,GAEF7J,EAAgB,EAAAyJ,qBACDr8E,mBAcXk6D,EAAQ1kD,EAAckqC,SACtB,gBACA,gBAECg9B,mBAID,SAAUrlF,GACZslF,IAEAA,EAAQD,QACRC,EAAS,MAGX,IACAvK,EADAvoE,EAAAiN,EAAwB5lB,EAAAqP,OAAAiV,EAAA8wD,MAAA,GAAAjvE,EAAA7K,OClErBqd,EAAS+wE,QAAA,WACJxI,EAAGsK,SAaX,IAAAE,EAAA3tF,SAAwBoD,cAAA,gBACXgf,UAAYha,EAAQsjB,WAC7BiiE,GAAiB/yE,KACjB,cACA,IAAKwoE,GAAenhF,EAAA,CACpByT,OAAKtN,EAAU8iB,QACfrY,QAAO86E,EACR30C,SAAA5wC,EAAA4wC,SAEGyN,QAAAr+C,EAAEwlF,YAAS,eACbC,OAAKzlF,EAAQylF,OACbC,gBAAiB,IACjBhL,cAAO,CACRC,YAAA,EAAArjF,GAAA,eAAAsjF,WAAA,iBAKItoE,GAAA,QAAW,sBDqCT,WACNE,EAAAo6D,WACDmO,EAAA4K,QACF5K,EAAA/3D,UAGJhjB,EAAA4lF,uBC9EwCN,EAAA,QAsClCA,EAASvK,GACJ8E,aAGL,WACI9E,GACLA,EAAAsK,mBAWEQ,GAAuB5gB,EAAAnG,OAC1BgnB,EAAOhtF,KACPitF,EAAA,kBAEE,SAAY/lF,GACd,MAAW,MAAJA,GAAqC,MAAjBA,EAAO3F,OAClCvB,KAAAuB,MAAA,IAEGvB,KAAUigD,KAAGksB,EAACK,YAAY,iCACtBxsE,KAAI+T,KAAA7M,EAAc6M,UACzB/T,KAAA0sE,YAAA,IAIA/lD,EAAA5lB,EAAAipC,SAAA9iC,IAEGlH,KAAWuB,MAAG2F,OACVlH,KAAIigD,KAAAksB,EAAcK,YAASxG,EAAa5zB,yBAAmBpyC,KAAAuB,WAKlEvB,KAAAnE,KAAAqL,EAAA3F,MAEGvB,KAAA+tE,SAAc7mE,EAAW6mE,SAC5B/tE,KAAO2sE,OAAIzlE,EAAcylE,OACzB3sE,KAAA+T,KAAA7M,EAAA6M,KAEG/T,KAAAysE,KAAevlE,EAAAulE,KAClBzsE,KAAOuB,MAAA2F,EAAE3F,MACPvB,KAAAqsE,WAAWnlE,EAAcmlE,WACxBrsE,KAAA+T,KAAA7M,EAAA6M,KACH/T,KAAA0sE,WAAAxlE,EAAAwlE,gBAEG1sE,KAAAigD,KAAA/4C,EAAsB+4C,MAAAksB,EAACK,YAAwBxG,EAAE5zB,yBAA0BpyC,KAAAuB,WAhC9E,2BAoCK,SAAAA,EAAA2rF,UAEH3rF,EACEvB,KAAAguE,WAAEzsE,QAGCysE,WAAA,CAAAzsE,MAAA2rF,EAAAzgB,MAAA,+BAIW,WAClB,OAAE,IAAAwgB,EAAA,CAAA1rF,MAAA,qBAAAkrE,MAAA,KAGJzsE,KAAKmtF,QAAA,SAAkBtxF,EAAAkY,EAAAg6D,GACrB,OAAO,IAAIkf,EAAc,CAAE1rF,MAAO1F,EAAA4wE,MAAA,EAAiB14D,KAAMA,EAAOg6D,SAACA,KAGnE/tE,KAAKguE,WAAa,SAAG9mE,GACnB,OAAO,IAAI+lF,EAAc/lF,gBAEjB,SAAAZ,UACN,IAAM2mF,EAAa,CAAA1rF,MAAA+E,EAAAyN,KAAA,MAAAg6D,SAAA,4BAEpBqf,YAAE,SAAA7rF,GACH,WAAA0rF,EAAA,CAAA1rF,QAAAwS,KAAA,QAAAg6D,SAAA,yBAGJ/tE,KAAAqtF,aAAA,SAAWC,8KC1HmBttF,KAAAutF,aAAA,SAAAC,GACU,OAAA7mE,EAAA5lB,EAAAK,IAAAosF,EAAA,SAAA3H,GAExC,WAAAoH,EAAA,CAAA1rF,MAAAskF,EAAA9xE,KAAA,WAAAg6D,SAAA,mCAEsB0f,oBAAA,SAAiCC,EAAAC,GAAI,gBAAA97D,GAEzD,IAAA+7D,EAAAjnE,EAAA5lB,EAAAK,IAAYywB,EAAZ,SAAyBu6C,GACjB,OAAQ4gB,EAAAhf,WAAQ,CAAAzsE,MAAQ6qE,EAASvwE,KAAA6wE,WAAmBN,EAAEM,eAW1D,OARMghB,GACA/mE,EAAc5lB,EAAA44B,KAAAqsC,EAAAr1B,UAAA,SAAAS,QACvB,IAAAu8C,OAAAv8C,EAAAr9B,MAED65E,EAAAxmE,QAAA4lE,EAAAhf,WAAe,CAAEj6D,KAAc,QAAYxS,MAAY,IAAA6vC,EAAApsC,KAAA0nE,YAAA,OAI5CkhB,yBAIP,kBACA,IAAAX,EAAiB,CAAA1rF,MAAa,gBAAKkrE,MAAA,UAGrCohB,cAAiB,WAClB,WAAAZ,EAAA,CAEDxgB,MAAA,EAAAxsB,KAAA,8BACQlsC,KAAA,cACJg6D,SAAU,kBFaG,EAAA+N,QAAY,qBAAiB6P,IAAA7oF,IAAAupF,MCK9B,EAAAvQ,QAAW,aAAOgS,MCdtB,EAAAhS,QAAkB,eAAKiR,MAGvB,eAKL,sBAEAhjB,QACFA,oBAFG3jD,QAAU,eAKT3lB,UAAastF,aAAA,SAAA/jE,EAAAhlB,EAAA0U,GACrB,IAAAyR,EAAAlE,EAAAlmB,EAAAipB,QAAAlrB,SAAAoD,cAAA8C,IACHhF,KAAA+pE,SAAA5+C,EAAAnrB,CAAA0Z,GAACsQ,EAAAk8D,QAEDl8D,EAAAjf,OAAAogB,oJCtD8CnrB,KAAA+tF,aAAA/jB,EAAAgkB,EAAAhpF,KAAA0U,eAENu0E,EAAAxtF,UAAA4rC,OAAA,SAAAnlC,GACgB,IAAApH,EAAAE,WACN,CAGlDipB,SAAA,IACAvP,MAAAxS,EAAAwS,MAGE+4C,KAAA,SAAgB/4C,EAAAswD,EAAAC,GAChB,GAAA/iE,EACUgnF,UACA,CADA,IAASC,EAAkB,KAC3Bz0E,EAAA0wD,OAAyBljE,EAAAgnF,UAAA,WACzBC,GACAA,EAA6Bra,WAGhCqa,EAAwBz0E,EAAAy8D,OAC9Br2E,EAAA2yD,KAAA07B,EAAAnkB,EAAAC,EAAA/iE,UAISpH,EAAU2yD,KAAG/4C,EAAKswD,EAASC,EAAO/iE,QDoBrC,KCVF,EAAA40E,QAAA,sBAAAsS,WAIDl0F,EAAA,WAIIA,EAAkB,WAKxBA,EAAA,WASyB,sBAGlBkrB,EAAAmqC,EAAA6jB,EAAA/tD,EAAAF,kBACKC,OACTmqC,WACHvvD,KAAGozE,UAEHpzE,KAAAqlB,kBACEF,OAAMA,OACNkpE,qBAAS,6BARJ,qEAUIx+E,KAAA,iBACR7P,UAEDqlB,WAAKzL,IAAS,wBAAAG,EAAAvR,OACZ8lF,EAAAxuF,EAAAslB,UAAAze,MACK4nF,GAA6B,EAACvjD,WAClCC,SAAAtkC,MAAA2nF,GACFC,GAAA,EAAA1jD,SAAA3sC,OAAAswF,GAAA,EAAAtwF,CAAA,CACJwE,KAAA5C,EAAAslB,UAAA1iB,OACFhC,MAAAZ,EAAAslB,UAAAjlB,SAAAsuF,YAAA3uF,EAAAqlB,OAAApG,QAAA8E,oEC7EoB0qE,GAAA,EAAA1jD,SAAA3sC,OAAAswF,GAAA,EAAAtwF,CAAA,CACDwE,KAAA5C,EAAAslB,UAAA1iB,OACGhC,MAAAZ,EAAAslB,UAAAjlB,SACNsuF,YAAA3uF,EAAAqlB,OAAApG,QAAA8E,YAIM0qE,GAAA,EAAAvrD,UAAA,WACU,IAAA/iC,EAAAsuF,GAAA,EAAAvjD,WACXsjD,EAAAxuF,EAAAslB,UAAAze,sDCTC7G,EAAAyvD,SAAA,WACOzvD,EAAAslB,UAAAze,OAGW1G,EAAAgrC,SAAAptC,SAEzCiC,EAAUslB,UAAQvnB,YAGdqY,QAAAxG,IAAA,uCAAA/I,MAIFspE,GAAwC,EAAAz2D,GAAA,2BAAAixB,GAClC,IAACikD,EAAEC,GAAkB,EAAAC,iBAAAnkD,EAAA7M,MACvB99B,EAAUuuF,qBAAmBvnF,QAAA4nF,IAAA,EAC9B5uF,EAAAszE,QAAAnoC,SAAArN,KAAA6M,EAAA7M,KAGF99B,EAAAyvD,SAAA,WAGMzvD,EAACslB,UAAUze,IAAA+nF,UFkCS,eGpCJ1oB,SACf,SAAYnqE,EAAM6d,oBAElB82D,MACO92D,EAAK82D,KAAMl1E,OAAAoe,EAAa82D,KAAAtjE,KAAApP,WAGxB4b,EAAKxM,IAAIpP,WAEpBkoE,EAAe3yB,gBAAEx3C,EAAAiC,wBAEN,MDHb,EAAAg+E,QAAA,YAAA+S,MAoBe,EAAMr9E,OAAI,aAAW,kBACnC,SAAAupD,GAED,OAAOA,EAAA9qD,YAIS,EAAAuB,OAAA,mBACnB,gBAAAslC,EAAAjO,EAAAC,GAED,OAAAniB,EAAA5lB,EAAU+tF,YAAQh4C,KACHA,EAAA7M,MAAApB,EAAAC,iHCxDfniB,EAAA5lB,EAAAguF,OAAAj4C,GAAA,KAAAA,EAAAjxC,gBAOqB,EAAA2L,OAAA,oCACPyiB,EAAA8G,UACNA,OACA,MACA,OAAM78B,OAAQX,EAAM,SAAdW,CAAyB+1B,GAAE40C,iBAElC3qE,OAAAX,EAAA,SAAAW,CAAA+1B,GAAA40C,eAkBa,EAAEr3D,OAAM,0BAA6Bw9E,IAI/C90F,EAAkB,QAGlBA,EAAa,eAKd,oBAEH+0F,IACHjvF,KAAAm1B,SAAA,EAEDn1B,KAAAkvF,UAAA,CACEC,OAAA,CACD,CAAAjqF,KAAA,UAAAge,YAAA,wBACH,CAAAhe,KAAC,UAAAge,YAAA,kBAAAhe,KAAA,UAAAge,YAAA,qEAGQksE,UAAA,CACG,CAAElqF,KAAG,UAAAge,YAAA,kBACb,CAAAhe,KAAa,UAAAge,YAAA,sBACb,CAAUhe,KAAE,UAAQge,YAAA,sBACpB,CAAAhe,KAAgB,KAAM,KAAAge,YAAA,gCACtB,CAAUhe,KAAM,UAAAge,YAAA,qCAChB,CAAAhe,KAAc,KAAM,KAAAge,YAAA,mBACb,CAAEhe,KAAA,UAAAge,YAAA,qBACT,CAAAhe,KAAA,UAAAge,YAAA,iDACH,CAAAhe,KAAA,UAAAge,YAAA,iCAED,CAAAhe,KAAA,KAAU,KAACge,YAAU,6VCpEEmsE,aAAA,CACV,CAAAnqF,KAAA,UAAAge,YAAA,uBACa,CACoBhe,KAAA,8CAExBge,YAAA,wBAOhB,CAEUhe,KAAe,+CACtBge,YAAA,sCAMHziB,UAAWgqF,QAAU,cACX,EAAgB9uF,KAAI,iBDwB3B,KCJO,EAAA0yE,UAAY,uCAXpB,gBACA,uDACGihB,qBACO,cACV,eACK,mBASRp1F,EAAA,YAILyrB,GAAAzrB,EAAW,mBCATq1F,GAAgB,2EAChBC,GAAA,uBAAoB,oBA8BlB,EAAAnhB,UAAA,oCA5BA,CACDplD,SAAA,IAEDwpC,KAAA,SAAA/4C,EAAAswD,EAAAC,GAAA,IAAAwlB,EAICzlB,EAAAyK,SAHMib,EAAc1lB,EACjB9zD,QAAKxG,IAAI,UACRu6D,EAAA0lB,kBAAA,iBAAA1lB,EAAA0lB,mBACJF,EAAAC,GAEDD,EAAA/lC,SAIC8lC,IAHC1oE,IAA4ByoE,IAAkB5uC,SAAO8uC,GACnDzlB,EAAItgB,SAACkmC,IACJ,IAAAC,EAAA,CACJ17B,KAAAs7B,EAAA,GAEDC,WAAA,GACSI,IAAA,cACRC,SAAA,aACHC,aAAC,aAAA7D,MAAA,+BAGQ8D,EAAAC,KAAAL,GACLn2E,EAAUE,IAAG,sBACLq2E,EAAEE,qqCC3EYnwF,KAAAowF,aAAA1V,EAAA,EAAAr5E,KAAAwQ,MACH7R,KAAAqwF,cA0CrB,gCAtBFC,EAAA7vF,UAAA4vF,YAAA,WAAkC,IAAAvwF,EAAAE,KAOhCA,KAAAW,WAAAM,IAAY,kBAAYC,KAAA,SAAAinE,GAAxBroE,EAAAqoE,KACEA,KAEFmoB,EAAC7vF,UAAA8vF,YAAA,SAAAC,GAED,IAAA1wF,EAAAE,KACE,OAAKA,KAAAW,WAAkB0oE,KAAE,mBAAuBmnB,EAAK3+E,OAAK3Q,KAAA,WAC3DpB,EAAA2wF,kBAAAhO,EAAA,EAAA57D,WAAA47D,EAAA,EAAA57D,UAAA8nB,SAAA,uBAAA6hD,EAAA3+E,YAIQpR,UAAWgwF,kBAAc,SAAa7yD,UAC5CqN,SAAArN,QAGH0yD,OAciB,EAAEjiB,UAAM,yBATzB,gBAAe,IACb7jD,SAAOkmE,GACRvnE,WAAAwnE,GAEDvnE,kBAAA,EACEC,aAAO,aACL,CAAKohE,QAAE,YAMXmG,GAAC12F,EAAA,WAGSA,EAAO,WAQa,SAAoB0F,GAiBlD,SAACixF,EAAAhxF,GAlEM,IAAAC,EAAAF,EAAAG,KAA+BC,KAAAH,IAAAG,KAEpC,OADAF,EAAAG,MAAa,CAAAiH,QAAA,IACNpH,WAkDL,EAAA+wF,EAACjxF,KAhDHa,UAAAkpB,kBAAA,WA+DJ3pB,KAAAa,SAAA,CAACqG,QAAAlH,KAAA8wF,aAAA9wF,KAAAH,UApEwBgxF,EAAApwF,UAAAswF,iCAAA,SAAA50B,4FCpBF00B,EAAApwF,UAAA0gC,sBAAA,SAAAg7B,GAGqB,IAAA60B,EAAAhxF,KAAA8wF,aAAA30B,GAE2B,OAAAA,EAAA56D,QAAAvB,KAAAH,MAAA0B,QAAAolB,EAAA5lB,EAAAkwF,QAAAD,EAAAhxF,KAAAC,MAAAiH,UAsB1C2pF,EAAApwF,UAAAqwF,aAAA,SAA6BhvF,GAWxD,IAAA+S,EAAA/S,EAAA6uC,UAAwBA,OAAA,IAAA97B,EAAA,GAAAA,EAAA3N,EAAApF,EAAAoF,QAAxB,OAAAypC,EACExrC,OAAA,EAAMshB,EACP,GAAAzmB,KAAAkxF,qBAAAhqF,QAXCzG,UAAAywF,kBAAqB,iBACrB,CACA1vF,MAAA,qBACA0F,QAASlH,KAAEH,MAAA8wC,UAAAvvC,IAAA,SAAA4E,GAAA,OACXxE,MAAU,IAAAwE,EAAAhB,KACVzD,MAAA,IAAgByE,EAAEhB,YAuEVvE,UAAA0wF,kBAAA,eACFrxF,EAAAE,KAENkH,EAAMlH,KAAUC,MAAAiH,eACNA,EAAAkqF,MAAK,SAAE12D,GAAA,OAAYA,EAAAxzB,UAAYyf,EAAiB5lB,EAAAqkE,QAAAl+D,EAAA9F,IAAA,SAAAs5B,GAAA,OAAAA,EAAAxzB,cACnD0D,KAAA,SAAKqY,GAAC,OAAAA,EAAA1hB,QAAAzB,EAAAD,MAAA0B,WAETd,UAASoB,OAAI,iBACb7B,KAAKH,MAAI0C,EAAWT,EAAAS,YAAAR,EAAAD,EAAAC,UAAA87B,EAAA/7B,EAAA+7B,aAAAv7B,EAAAR,EAAAQ,WACpBtC,KAAWC,MAAIiH,UACblH,KAAAmxF,2BAENzgF,EAAgB3P,EAAAmB,cAAOgjC,EAAa,QAAAnjC,YAAAg7D,SAAA,EAAAF,aAAA,EAAAC,uBAAA,EAAAx6D,SAAA,SAAAsM,GAAA,OAAAtM,EAAAsM,EAAArN,QAAA2F,UAAA22B,eAAA5F,cAAA,IAAA11B,cAAAC,iBAAA,qCAAAjB,MAAA8vF,OAGlC3zB,aAAK,WACN,GACHx2D,QAAE,GAEF22B,cAAA,KDtD8B,GCyD5B98B,EAAKohE,cAjFU,SAAAviE,GAEjB,SAAC0xF,EAAAzxF,GAEK,IAAAC,EAAAF,EAAAG,KAAAC,KAAAH,IAANG,KAeM,yDAdJ,4FAEQ87E,SACqBh8E,EAAAG,MAAAsxF,kFACvB,OAAKp5E,EAAA2jE,UAAW9V,EAAcnoE,QAAAi+E,gIAIhCA,EAAA0V,yBACAA,EAASn+B,KAAA,SAAAl7C,GAAA,OAAAA,EAAA5W,QAAAykE,EAAAnoE,QAAA4zF,+EAEV3xF,EAAA4xF,4BAAAnwF,0EAGCzB,WAlBD,EAAAwxF,EAAA1xF,8KAmBYQ,KAAcN,WACD6xF,4BAAiBvxF,KAAAN,qCAC3B,oBAChB,EAAOE,UAAA,SAAkB,mIAI5B,OAAAymB,EAAA,EAAAzmB,KAAA,SAAA8B,GAEK,OAAAA,EAAAN,6HAC+B,GAAKxB,KAAAH,MAAC8kB,WAAAitE,qBACnB,OACDC,EAAe/vF,EAAA+iB,OACZ7kB,KAAMa,SAAO,CAAAgxF,eAAqBA,IACjC/vF,EAAIN,MAAC,EACd,wDAIE,OAHnB+mE,EAAAzmE,EAAA+iB,OAEDorD,GAA4B,EAAAt0E,KAAA,mBAAkB4sE,GAE7Cua,IADoC,CAAC,EAAK,GAC1C,0CAQWgP,sBAAO,kBACdrrE,EAAU,EAAAzmB,UAAA,oBACT,IAAAuxF,EACA,OAAO9qE,EAAM,EAAAzmB,KAAA,SAAA8B,GACb,OAASA,EAAAN,OACT,KAAa,EACX,6BAAAxB,KAAAC,MAAA4xF,eAAA,MACiB,CAAC,EAAA7xF,KAAAH,MAAA8kB,WAAAotE,eAAA/xF,KAAAC,MAAA4xF,iBACzB,OA8BY,OAFbN,EAAAzvF,EAAA+iB,OACmB7kB,KAAAa,SAAA,CAAiB0wF,kBAAMA,IACtB,GAAAA,GACT,aAAC,CAAC,EAAY,YAOvB9wF,UAAOkxF,4BAAA,kBACLlrE,EAA2B,EAAAzmB,UAAA,oBAC3B,IAAAuxF,EAAoBS,EAAYR,EAAU1V,EAAImW,SAC5CxrE,EAAmB,EAAAzmB,KAAA,SAAA8B,GAQjB,OAPFyvF,EAAmBvxF,KAAAC,MAAAsxF,kBAF8BS,EAGhDhyF,KAAAkyF,gBAAAX,GACHC,EAAAxxF,KAAAmyF,eAAAZ,GACHzV,EAAA0V,EAAArsF,OAAA,EAAAqsF,EAAA,GAAA1V,QAAA,GAEDmW,EAAAjyF,KAAA0xF,4BAAA1xF,KAAAH,MAAA4xF,YACQzxF,KAAAa,SAAE,CAAA0wF,kBAAQA,EAAES,SAASA,EAAAR,QAAuBA,EAAA1V,UAAAmW,qBAC5C,qBAMEP,4BAAA,SAAMD,SACNzxF,iBASFC,MAAAsxF,kBAAA3mF,KAAA,SAAKqnD,GAAS,OAACA,EAAAl+C,OAAAjU,EAAuBD,MAAAmmE,YAAAnoE,QAAA4zF,QAIxChxF,UAAA0xF,eAAA,SAAAZ,SACEvxF,KAAA0xF,4BAAe1xF,KAASH,MAAA4xF,0CAShB,OAAUt5E,EAAA2jE,UAAIsW,EAAAtW,0BACd,MAAO,sCAOf3jE,EAAAsD,wBACEtD,EAAA+K,mBAnKiBouE,EAAA7wF,UAAMyxF,gBA0KlC,SAAAX,8MCpMY,OACA/vF,MAAA,qBAEb0F,QAAAlH,KAAAH,MAAAmmE,YAAAr1B,UAAAvvC,IAAA,SAAA4E,GAAA,OAIExE,MAAA,IACUwE,EAAAhB,KAAAzD,MAAA,IAAAyE,EAAAhB,UAIPssF,EAAC7wF,UAAAoB,OAAA,WAEJ,IAAAC,EAAA9B,KAAAC,MAAA+xF,EAAAlwF,EAAAkwF,SAAAlW,EAAAh6E,EAAAg6E,QAAA0V,EAAA1vF,EAAA0vF,QAAA38E,EAAA7U,KAAAH,MAqBC4xF,EAAA58E,EAAA48E,WAAAzrB,EAAAnxD,EAAAmxD,YApBC,OAAKt1D,EAAgB3P,EAAAmB,cAAiBwO,EAAc3P,EAAAoQ,SAAY,KAE5DT,EAAC3P,EAAcmB,cAAM,OAAAH,UAAA,kBACpB2O,EAAgB3P,EAAAmB,cAAI,MAAK,CAAAH,UAAA,WACpB2O,EAAW3P,EAAAmB,cAAA,QAAAH,UAAA,kDACjB2O,EAAM3P,EAAAmB,cAAAmwF,GAAA,CAAA/vF,SAAAtC,KAAAsyF,gBAAA/wF,MAAAu6E,EAAA50E,QAAA8qF,EAAAn0D,cAAA,EAAAt7B,YAAA,kBAAAR,UAAA,gBACChB,EAAAmB,cAAoB,MAAK,CAAAH,UAAa,yBAC3C2O,EAAM3P,EAAAmB,cAAA,OAAAH,UAAA,0CACFhB,EAAAmB,cAAA,OAAAH,UAAA,oBACChB,EAAAmB,cAAoB,MAAK,CAAAH,UAAa,WAC3C2O,EAAM3P,EAAAmB,cAAA,QAAAH,UAAA,iDACR2O,EAAM3P,EAAAmB,cAAAmwF,GAAA,CAAA/vF,SAAAtC,KAAAuyF,mBAAAhxF,MAAAkwF,EAAA9gD,UAAAq1B,EAAAr1B,UAAAzpC,QAAA,CACC,CACC1F,MAAA,UACFs6D,UAAA,EACC50D,QAAesqF,IAEvBjvF,YAAA,gBAAAR,UAAA,cACA2O,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,yBACE2O,EAAqB3P,EAACmB,cAAe,MAAC,CAAAH,UAAA,wCAC5C/B,KAAAH,MAAAkrB,SAAA/qB,KAAAC,MAAAgyF,sBDUgB,mBCLd/3F,EAAA,WAQ8B,sBAC3B2zE,EAAAv8B,EAAOkhD,EAAsBC,qBAC9B5kB,wCACC2kB,2BACDC,WAGHhyF,UAAYiyF,kBAAkB,iBACtB1yF,wBAEFA,KAAA6tE,aAAuBG,WAAE,CAAAvB,MAAA,EAAAlrE,MAZnB,4CAaR,gBACDgyD,QAAA,SAAAx9C,EAAArZ,UACFA,EAAA,GAED,6DACD,OAEDoD,EAAA6yF,eAAA/iF,KAAA9P,EAAqB+tE,aAAC+kB,YAAa78E,IAAnC,MACQ,OACGjW,EAAK6yF,eAAa/iF,KAAA9P,EAAW+tE,aAAAuf,YAAAr3E,IAClC,MACA,OACCjW,EAAA6yF,eAAA/iF,KAAA9P,EAAA+tE,aAAAwf,aAAAt3E,OAMP/V,KAAA6yF,iBAAA7yF,KAAA2yF,mBAESlyF,UAAAqyF,WAAsB,SAAU1mB,EAAK1vE,EAAaq2F,UACxDtsE,EAAA,EAAAzmB,UAAA,oBACD,IAAQgzF,EACJ,OAACvsE,EAAqC,EAACzmB,KAAA,SAAiB8B,GACvD,MAAwB,cAAxBsqE,EAAer4D,KACrB,IAAA/T,KAAA6tE,aAAAG,WAAA,SAG4B,aAAtB5B,EAAer4D,KACpB,GAA4B/T,KAAA6tE,aAAA0f,aAAA,wBAEN,QAAfnhB,EAAAr4D,MAAoC,gBAATq4D,EAASr4D,KAC1Cg/E,GAAA3mB,EAAA7qE,OA7CW,wBA6CX6qE,EAAA7qE,OAEDvB,KAAAizF,cAAA1xF,MA/CY,sBAgDW,CAAC,EAAc8iB,QAAO61D,QAAQ,CAAAl6E,KAAKizF,kBAG3D,GAAAjzF,KAAAwyF,kBAAApmB,EAnDa,wBAuDiB,UAAvBA,EAAcr4D,OAEfi/E,EAAehzF,KAAYyyF,oBAAS/1F,IACpByI,OAAa,EACjC,GAAAnF,KAAAkzF,sBAAAF,IAIW,CAAI,EAAK,WAGdvyF,UAAAyyF,sBAA2B,SAAA/9E,OAChCrV,EAAKE,KAOX,OANKmV,EAAA/T,IAAA,SAAA8W,UAAUpY,EAAQ+tE,aAASG,WAAW,CACjCzsE,MAAC,GAAA2W,EACNw0D,YAAA,iICtHyCN,EAAAr4D,KAAA,MAEyB/T,KAAA2yF,eAAA/iF,KAAA5P,KAAA6tE,aAAA+kB,YAAA,MAIvE5yF,KAAA2yF,eAAA/iF,KAAA5P,KAAA6tE,aAAAsf,QD2CU,eC3CV,iCAeEgG,EAAA1yF,UAAA2yF,oBAAyC,SAA2B12F,GAAhDsD,KAAA2yF,eAAM51F,OAAKL,EAAA,GAAqCA,EAAA,GAAwB,cAAbsD,KAAX2yF,eAAwBj2F,EAAA,GAAAqX,MAd5F/T,KAAA2yF,eAAA51F,OAAyBL,EAAG,KAgBrB,IAADA,GAAcsD,KAAK2yF,eAAcxtF,OAAA,iBAAAnF,KAAA2yF,eAAA,GAAA5+E,MACtC/T,KAAA2yF,eAAA51F,OAAA,QAGM0D,UAAcoyF,iBAAA,SAAAjF,OACjB7tE,EAAK6tE,EAAAzoF,SACIyoF,EAAK1uF,KAAA+I,IAAa8X,EAAA,MAC1BszE,GAAE,gBAAAA,EAAAt/E,MACH65E,EAAKh+E,KAAA5P,KAAA6tE,aAAsBggB,oBAKxBptF,UAAc6yF,qBAAO,SAAAlnB,EACnB1vE,SAKa,gBAAhB0vE,EAACr4D,KACN/T,KAAAuzF,qBAAAnnB,EAAA1vE,mBDKa,2HACN,gDCHNsD,KAAA2yF,oCAAmBnhF,OAAA,SAAA/L,GAAA,sBAAAA,EAAAsO,OAAA3S,IAAA,SAAAoyF,GAAA,OAAAA,EAAAjyF,WDIY,MCUR,sBAKd2jB,EAAU2oD,EAAa7H,uFAK1B,+CACD,wDAEJhmE,KAAAyzF,uBAXGrtE,QACF,4FAaHpmB,KAAA0zF,gBAAA1zF,KAAA2zF,SAAAvyF,IAAA,SAAAwyF,GAEK,OAAA9zF,EAAA+tE,aAAAgmB,mBAAND,wRACiBlB,uBAAXjyF,UAAWqzF,uBAAmC,oBAEjC,EAAA9zF,UAAQ,OAAK,mCAID,EAAAA,KAAW,SAAQ8B,UAChDA,EAAAN,cACE,SAAAxB,KAAU+zF,cACX,SAEDjyF,EAAA+iB,SACI3mB,OAAQgH,KAAAlF,KAAAg0F,UAAAC,cAAA,IAAA7yF,IAAA,SAAA8W,UACRpY,EAAA+tE,aAAAG,WACK,OACH,gBAAkB91D,cAClB,6EACP,OAAApY,EAAA+tE,aAAAG,WAAA,CAEKzsE,MAAA,kBAAN2W,oGACiBlY,KAAA6tE,aAAMG,WAAK,8BAAXtB,YAAmC,OAIhD,GAAAwnB,0FAKH,IAAAA,EAEDp0F,EAAAE,KACM,OAAOymB,EAA8B,EAAAzmB,KAAO,SAAA8B,GAC1C,OAACA,EAAAN,OACN,gBAAAxB,KAAA8zF,0BAAM,OAOJ,OANWI,EAAWpyF,EAAA+iB,QACxB,IAAA7kB,KAAAsxC,QAAAxqC,QAAA9G,KAAAm0F,qBAEeD,EAAcA,EAA8B1iF,OAAA,SAAAknB,GAAA,OAAAA,EAAAn3B,QAAAzB,EAAAq0F,uBAEnC/nB,GAAA,gBAAAA,EAAAr4D,OACtB,IAAAmgF,EAAA/uF,OACW,OAGQ,GAAmC,gBAAnBinE,EAAOr4D,KACtBmgF,EACGztE,EAAkB,EAAAytE,EAAA,CAC7Cl0F,KAAA6tE,aAAAG,WAAA,CAAAvB,MAAA,EAAAlrE,MAAA2oD,GAAAlqD,KAAAo0F,iDAGCC,YAAM,SAAKjoB,oDACLpsE,cACK,EAACA,KAAA,SAAe8B,yEAKb,OAFhBoyF,GAFCA,EAAApyF,EAAA+iB,QAEDrT,OAAe,SAAfknB,GAAgB,OAAa,IAAA54B,EAAA6zF,SAAA7sF,QAAA4xB,EAAAn3B,WACQ6qE,GAA4B,gBAAfA,EAAAr4D,OACc,IAA5BmgF,EAAgB/uF,OACtC,QAGKnF,KAAAizF,cAAoB1xF,MAAAvB,KAAUo0F,0BAEjC,CAAU,EAA0B,gBAAzBhoB,EAAoBr4D,KAAemgF,EAAaztE,EAA0B,EAAAytE,EAAA,CAAAl0F,KAAAizF,0BAMlGxyF,UAAA6zF,eAAA,SAAAloB,EAAA1vE,GAEG0vE,EAAA7qE,QAAkBvB,KAACizF,cAAiB1xF,MACtCvB,KAAA0zF,gBAAqB32F,OAACL,EAAa,GAItC0vE,EAAAr4D,KAAA,QAGC,IAOM4/E,EAAQ3zF,KAAQ0zF,gBAAQ1jE,OAPd,SAAK06C,EAAA8oB,GAItB,OAHMA,EAAQ/mB,MACP/B,EAAC96D,KAAA4jF,EAAAjyF,OAERmpE,GAG+B,IAC9B1qE,KAAMu0F,gBAAc,CAAAZ,SAAcA,IAElC3zF,KAAK6yF,iBAAe7yF,KAAA0zF,oBAEnBjzF,UAAAqyF,WAAA,SAAA1mB,EAAA1vE,GACF,OAAA+pB,EAAA,EAAAzmB,UAAA,oBACH,IAAA+yF,EAAC,OAAAtsE,EAAA,EAAAzmB,KAAA,SAAA8B,mBAEe,gBAAA9B,KAAA+zF,SACP,OAGO,OAFPjyF,EAAA+iB,OACQkuE,EAAA/yF,KAAAg0F,UAAAC,cAAsE,IAAtE/1F,OAAAgH,KAAAlF,KAAAg0F,UAAsEC,cAAA9uF,OACvE,GAAAnF,KAAA2yF,eAAqBG,WAAA1mB,EAAA1vE,EAAAq2F,YAKjBtyF,UAAA+zF,gBAAA,SAAA93F,OACd+3F,EAAYz0F,KAAAgmE,YAAAnoE,QAAAmC,KAAA2yF,8BAAAj2F,EAAA,GAAA6E,WACZkzF,IAAaz0F,KAAAg0F,UAAAC,cAAA,IAAA/1F,OAAAgH,KAAAlF,KAAAg0F,UAAAC,cAAA9uF,OACb,MAAO,OAEPuvF,EAAAD,EAAoBt8B,UAAAs8B,EAAA3tF,QAAA,qBACpB2tF,EAAAj8B,WAAiB,kBAAAx4D,KAAAg0F,UAAAC,aAAAhgF,eAAAygF,GAClB10F,KAAAg0F,UAAAC,aAAAS,GAEJD,EAAAj8B,WAAA,oBAAAx4D,KAAAg0F,UAAAW,eAAA1gF,eAAAygF,GAED10F,KAAAg0F,UAAWW,eAAUD,2DCjMuB,IAMdE,EAAAn0F,UAAA6yF,qBAAA,SAAAlnB,EAAA1vE,GAmBxB,IAAA40C,EAAiBtxC,KAAA2yF,eAAAW,qBAAAlnB,EAAA1vE,GACrB40C,EAAgB+hB,KAAA,SAAAt9C,GAAA,MFqBR,iBErBQA,KAChB/V,KAAA60F,eAAkB,CAAAvjD,aAIpBsjD,EAAAn0F,UAAAoyF,iBAAA,SAAAjF,GAA4B,IAAA7tE,EAAA6tE,EAAAzoF,OAA5BkuF,EAAAzF,EAAA1uF,KAAA+I,IAAA8X,EAAA,iCAiFC6tE,EAAAh+E,KAAA5P,KAAA6tE,aAAAggB,oBDtD0B,KCCrB,EAAAxf,UAAA,kDAnB0C,kFACtCymB,gBAEA,yBACC,WACL,qBAGA,YACA,aAEI,YACJ,mBACA,oBACQ,iBACR,eAgBH,CAEDb,aAAA,kBACY,iBACD,OAEoB,SAAUr0F,YAErCm1F,WACD,OAAAn1F,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,cAFuB,EAAA+0F,EAAUn1F,KAIlCa,UAAMkpB,kBAAsB,WAC7B,OAAAlD,EAAA,EAAAzmB,UAAA,oBAED,IAAA8B,EAAA6xF,EAAAriD,EAAAmiD,EAAA7pE,EAAAC,EAAAkqE,EACUj0F,EAACE,KACP,OAAKymB,EAAoB,EAAAzmB,KAAA,SAAA6U,GAC1B,OAAA7U,KAAAgqB,6KAIDlqB,EAAAD,MAAAg1F,eAAWvjD,2GAQPyiD,u0BAXL,gFAiBErW,UAAEsX,gFAGLt7E,EAAA43B,QAAAtxC,KAAMH,MAANyxC,QAAA53B,EAAAi6E,SAEC3zF,KAAAH,MAAA8zF,WAADoB,EAACt0F,UAAAwpB,qBAAA,WACHjqB,KAAC09E,WAjF2B19E,KAAK09E,UAAUxzD,qMCjCjB,IAAA9sB,EAG6C,OAAAqpB,EAAA,EAAAzmB,KAAA,SAAA8B,GACV,OAAAA,EAAAN,OAqB7D,cAAkCM,EAAAqiC,KAAAv0B,KAAA,MAA6B,IAA/D5P,KAAAH,MAAA4xF,WAAA,OAAA/3E,EAAAs6E,aACiB,OACC,gBAAAh0F,KAAAH,MAAA8kB,WAAAswE,UAAAj1F,KAAAH,MAAA4xF,WAAAzxF,KAAAH,MAAAwV,QACd,KAAwB,EACxBjY,EAAA0E,EAAA+iB,OAAAznB,KA8BFsc,EAA0Bs6E,UAAA52F,EACV0E,EAAAN,MAAS,EACrB,OAEF,OADI04E,IACJ,aA5BF,OA8DDp4E,EAAA+iB,OAlECorD,GAAA,EAAAt0E,KAAA,0DAAAqE,KAAAH,MAAA4xF,aAC0B/3E,EAAOs6E,aAChC9Z,IAED,MACqB,KAAU,EAAC,mCAO1Br4E,OAAA,iBACE7B,cACQe,EAAEmB,cAAI,OAAAioB,IAAA,SAAAH,GAAA,OAAAlqB,EAAAkqB,WAAA8S,MAAA,CAAAj+B,MAAA,aDkCQ,GCzBxBkC,EAAAohE,WAWN+yB,GAAAh7F,EAAA,WASU,SAAC0F,sBAWC,UAAAA,EAAA4pB,MAAAxpB,KAAAypB,YAAYzpB,8DAWvBF,EAAAq1F,wBAAA,WACHr1F,EAAAe,SAAC,SAAAZ,GAAA,OAxEiCm1F,wBAwEjCn1F,EAAAm1F,sCAdS,EAAAC,EAAAz1F,GCjF6Dy1F,EAAA50F,UAAAkpB,kBAAA,WAW1D3pB,KAAAs1F,cAAyBt1F,KAAyDH,QAC7Fw1F,EACE50F,UAAAswF,iCAAA,SAAA50B,GACEn8D,KAAAs1F,cAAAn5B,MAEI17D,UAAA60F,cAAA,SAAAxzF,SACAA,EAAAmwF,iBAYRj9C,EAAA,gJC1B4Dh1C,KAAAa,SAAA,CAAAm0C,kBAY5Dv0C,UAAAoB,OAAA,WAMM,IAAAC,EAAS9B,KAAGC,MAAAm1F,EAAatzF,EAAAszF,uBAAWpgD,EAAQlzC,EAAKkzC,WACjDngC,EAAA7U,KAAAH,MAAmBmmE,EAAMnxD,EAAAmxD,YAAI1jE,EAAauS,EAAAvS,SAAAizF,EAAoB1gF,EAAc0gF,mBAElF,OACE7kF,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KACET,EAAA3P,EAAAmB,cAAA,MAAK,CAAAH,UAAU,kBACb2O,EAAA3P,EAAAmB,cAAA,MAAK,CAAAH,UAAU,WACb2O,EAAA3P,EAAAmB,cAAA,QAAO,CAAAH,UAAU,uCAAqC,eACtD2O,EAAA3P,EAAAmB,cAACmwF,GACC,CAAA/vF,SAAUA,EACVf,MAAOg0F,EACP5kD,UAAWq1B,EAAYr1B,UAChBzpC,QAAE8tC,EAAAzyC,YAAA,iBAAAR,UAAA,gBACPhB,EAAAmB,cAAA,OAAAH,UAAA,2BACOhB,EAAEmB,cAAA,QAAmB,CAAAH,UAAA,uCAChBhB,EAAAmB,cAAI,KAAAm0B,QAAAr2B,KAAAm1F,yBACdzkF,EAAS3P,EAAAmB,cAAAwO,EAAA3P,EAAgBoQ,SAAK,KAI/BT,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA,gBAAAqzF,EAAA,kBAEH,yBAIJp1F,KAAAH,MAAAkrB,SAAA/qB,KAAAC,MAAAm1F,4BFyBI,gBG7DiBI,GAAA,SAAA1zF,GAG3B,IAAA2zF,EAAwB3zF,EAAA2zF,iBAAAzvB,EAAAlkE,EAAAkkE,YAAA1jE,EAAAR,EAAAQ,SAAAyyC,EAAAjzC,EAAAizC,oBAAxBrkC,EACE3P,EAAAmB,cAAMwO,EAGP3P,EAAAoQ,SAAA,KAYDT,EAAQ3P,EAAAmB,cAAU,OAAAH,UAAA,iBAChB2O,EAAa3P,EAACmB,cAAW,MAAO,CAAKH,UAAI,0BACzC2O,EAAK3P,EAAAmB,cAA2B,QAAO,CAAAH,UAAA,mDACvC2O,EAAA3P,EAAAmB,cAAAmwF,GAAA,CAAA/vF,WAAAf,MAAAk0F,EAAA9kD,UAAAq1B,EAAAr1B,UAAAzpC,QAAA6tC,EAAAxyC,YAAA,mBAAAR,UAAA,iBAfF2zF,GAACx7F,EAAA,QAUDy7F,GAAC,SAAA7zF,GAOD,IAAA8zF,EAAA9zF,EAAM8zF,gBAAN5vB,EAAAlkE,EAAAkkE,YAAA1jE,EAAAR,EAAAQ,SAAAmzF,EAAA3zF,EAAA2zF,iBAAAI,EAAA/zF,EAAA+zF,oBACEC,EACEJ,GAAA,EAAA9qF,KAAA,SAAAmrF,GAAA,OAAAA,EAAAx0F,QAAAykE,EAAAnoE,QAAA43F,OACE3mB,EAAK,EAAAknB,aAAUH,GAAgB,eAAAC,IAAAj6F,KAAA,iBAC7BkF,EAAAmB,cAAAwO,EAAK3P,EAAAoQ,SAAU,OACbpQ,EAAAmB,cAAA,OAAAH,UAAA,oBACAhB,EAAAmB,cAAA,OAACH,UAAA,WAEH2O,EAAA3P,EAAAmB,cAAA,QAAK,CAAAH,UAAU,uCAAuB,sBACpChB,EAAAmB,cAAAmwF,GAAe,CAAA/vF,WAAAf,MAAAq0F,EAIrBjlD,UAAAq1B,EAAAr1B,UAAAzpC,QAAA,CACH,CACF1F,MAAA,oBAAAs6D,UAAA,6QCtCgB,SAAoBl8D,iBAiBpC,IAAAE,EAAAF,EAAAG,KAAAC,KAAAH,IAAAG,YAdOF,EAAAwC,SAAA,SAAAo2B,uJACgB,eAHpB,EAAAu9D,EAAAr2F,iCAIgB,yIACjBI,KAAAa,SAAA,CAAAU,MAAA46D,EAAA56D,WAICd,UACEoB,OAAA,kBACE6O,EAAA3P,EAAAmB,cAAAwO,EAAM3P,EAASoQ,SAAC,KAChBT,EAAA3P,EAAAmB,cAAC,OAAAH,UAAA,kBAGN2O,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,WACF2O,EAAA3P,EAAAmB,cAAA,SAAAH,UAAA,mDAnBkC2O,EAmBlC3P,EAAAmB,cAAAgjC,EAAA,OAAAnxB,KAAA,OAAAhS,UAAA,yBAAAR,MAAAvB,KAAAC,MAAAsB,MAAAe,SAAAtC,KAAAsC,uJAjBgB,CCdSg0B,EAAA,cAmBJ,SAAA12B,YAElBs2F,IAEF,IAAAp2F,EAAgB,OAAhBF,GAAgBA,EAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,cACdC,MAAK,CACLk2F,YAAA,sBAGAr2F,WARqB,EAAAo2F,EAAAt2F,4CAgGxB,OAAA6mB,EAAA,EAAAzmB,UAAA,oBArFC,IAAAm2F,EACE,OAAO1vE,EAAmC,EAACzmB,KAAA,SAAA8B,GAC5C,OAAAA,EAAAN,OAED,KAAM,EAAN,SAAAxB,KAAAH,MAAA8kB,WAAAitE,qBACQ,OAKF,OAJEuE,EAAEr0F,EAAA+iB,OAGN7kB,KAAAa,SAAA,CAAAs1F,gBACE,6BAIgB,iBAILn2F,KACPC,MAAAk2F,qBACEp1F,EAAAmB,cAAA,OAAAH,UAAO,mGACKhB,EAAAmB,cAAAgjC,EAAG,OAAAnjC,UAAW,yBAA+Bq0B,UAAU,EAAAriB,KAAS,OAAAxS,MAAU40F,QAjC9E,GA0Cbp1F,EAAAohE,6CAaK,OAAAviE,KAAA4pB,MAAAxpB,KAAAypB,YAAUzpB,oBACV,gCACoB,mBAEpB,sBACA,CAAAo2F,aAAAt2F,EAAAG,MAAAm2F,mCAEA,sBACE,CAAAC,gBAAAv2F,EAAAG,MAAAo2F,6BAVK,EAAAC,EAAA12F,qCAeH,SAAAu8D,wDAGA,8CACGr6D,EAAAu0F,4BACL1xE,EAAA9P,EAAA8P,WAAA4xE,EAAA1hF,EAAA0hF,SAAAC,EAAA3hF,EAAA2hF,wBACEz1F,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAO,4DAGTpQ,EAAAmB,cAAAu0F,GAAA,CAAA9xE,iBACE5jB,EAAAmB,cAAA,OAAAH,UAAA,UAAUs0B,QAAAr2B,KAAA02F,2FAEZ,eACE31F,EAAAmB,cAAA,KAAAH,UAAO,gBAAyBq0F,EAAA,oGAQzC1lF,EACC3P,EAAAmB,cAAA,SAAAH,UAAK,+BACH,aAKT2O,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA,gBAAAs0F,EAAA,gBAAAM,UAAA,oBACFjmF,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,yBAnG+B2O,EAmG/B3P,EAAAmB,cAAA,OAAAH,UAAA,+TCpHyB2O,EAAA3P,EAAAmB,cAAA,4BAKU,oIACFwO,EAAA3P,EAAAmB,cAAA,WACY,IACJwO,EAAA3P,EAAAmB,cAAA,WACY,WAClBwO,EAAA3P,EAAAmB,cAAA,oFACNwO,EAAA3P,EAAAmB,cAAA,WAEwB,aAoBlBwO,EAAA3P,EAAAmB,cAAA,sDAClBwO,EAAA3P,EAAAmB,cAAoB,WACtBwO,EAAA3P,EAAAmB,cAAA,WACAwO,EAAA3P,EAAAmB,cAAA,0BACDwO,EAAA3P,EAAAmB,cAAA,WACJwO,EAAA3P,EAAAmB,cAAA,UACEwO,EAAA3P,EAAAmB,cAAA,UACHwO,EAAA3P,EAAAmB,cAAA,yCACY,sEACHwO,EAAA3P,EAAkBmB,cAAA,UACjBwO,EAAY3P,EAAAmB,cAAA,yCAClB,uDACDwO,EAAA3P,EAAAmB,cAAA,UACAwO,EAAA3P,EAAAmB,cAAA,4CACK,0CACHwO,EAAA3P,EAAAmB,cAAA,UACKwO,EAAA3P,EAAAmB,cAAA,qDACK,sEACvBwO,EAAA3P,EAAAmB,cAAA,UAEFwO,EAAA3P,EAAAmB,cAAA,6CAAiC,uDAAjCwO,EAAA3P,EAAAmB,cAAA,UAAAwO,EAAA3P,EAAAmB,cAAA,YAwJC,cAvJgB,kFAiDfs0F,GAAA9lF,EAAsB3P,EAAuDmB,cAAA,OAAAH,UAAA,WAArD2O,EAAA3P,EAAAmB,cAAW,OAAAH,UAAA,iCAAsBy0F,WAMvDz1F,EAAKohE,WArDPy0B,GAAA,gBACQ,gCACC,cACA,aACD,SACN,WAGE,GAEJliF,KAAC,GAED6gF,mBAAA,8BACa,oCACA,aACb5B,SAAC,GAEDriD,QAAA,2BACc,aACR,kBACG,uBACM,OAEmB,SAAK1xC,YAEpCqE,IACF,IAAAnE,EAAA,OAAAF,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,YAEDF,EAAAG,MAAA22F,GACE92F,EAAIyyF,mBAAU,SAAAzwF,GACV,IAAA+0F,EAAe/0F,EAAA+0F,UAAAC,EAAAh1F,EAAAg1F,WAAA/iF,EAAAjS,EAAAiS,KAAAW,EAAA5S,EAAA4S,KACXG,EAAI/U,EAAOD,MAAMmmE,EAAOnxD,EAAAmxD,YAAAyZ,EAAA5qE,EAAA4qE,cAAAsX,EAAAliF,EAAAkiF,eAC9BhiF,EAAA7W,OAAcg3F,GAAyB,EAAvCh3F,CAA6D,CAAC24F,UAAKA,EAAAC,aAAArB,iBAAA31F,EAAAG,MAAAw1F,kBAAAzvB,GAAAyvB,EAAA1gF,EAAA0gF,iBAAA1gD,EAAAhgC,EAAAggC,aACpEj1C,EAAAe,SAAA,CAAMk0C,aAAgBA,EACf0gD,iBAAeA,EACrBhE,WAAY19E,EACRW,OACFmiF,UAAIA,aACFC,cACArX,EAAM3/E,EAAAG,cAIXH,ECnGqB,SDgFjB,EAAAmE,EAAArE,GAqBPqE,EAACxD,UAAAkpB,kBAAA,WAwBD,IAAA7nB,EAAA9B,KAAAH,MAAA7C,EAAA8E,EAAA9E,OAAAwX,EAAiB1S,EAAc0S,OAAewxD,EAAAlkE,EAAAkkE,iEAA9ChpE,EAAAwc,GAAA,aAKCxZ,KAAAg3F,YAAA52F,KAAAJ,OAJC,IAAI6U,EAAC3W,OAAQg3F,GAAoB,EAA5Bh3F,CAA4BsW,EAAAwxD,GAAAyvB,EAAA5gF,EAAA4gF,iBAAA1gD,EAAAlgC,EAAAkgC,kBAC/Bl0C,SAAK4lB,EAA+B,EAAC,GAAAzmB,KAAAH,MAAA2U,OAAA,CAAAugC,eACrC0gD,iBAAWA,MAEfxxF,EAACxD,UAAAwpB,qBAAA,WAEDjqB,KAAAH,MAAA7C,OAAA6c,IAAA,gBAAA7Z,KAAAi3F,gBAAAj3F,KAAAH,MAAA7C,OAwEC6c,IAAA,aAAA7Z,KAAAg3F,gBAxDOv2F,UAAAw2F,eAAE,SAAAC,GAER,IAAAp3F,EACEE,KACEoH,EAAA8vF,EAAAtsF,KAAA,SAACgE,GAAA,OAAOA,EACNyG,QAAcvV,EAAED,MAAA2U,OAChBa,gBAkBIxU,SAAA,WAQIs2F,mBAAA/vF,EAA0BhK,KACxBm5F,UADFC,eASW,GACfX,oBAAAzuF,EAAAhK,KAACw4F,mBAef3xF,EAAAxD,UAACu2F,YAAA,SAAAI,GAxJgC,IAAAC,mFEnDpB,GAAAD,EAAe5uF,MAAO4uF,EAAA5uF,KAAAqpB,QAAA,CAE/B,IAAAylE,EAAAF,EAAA5uF,KAAAqpB,QAAA7xB,KAAAH,MAAK2U,OAAUa,OAEX,GADFgiF,EAAAF,mBAAAG,EAAKl6F,KAASm5F,UACZe,KAAAjiE,MACA,wCAIA,MAAAvzB,GAIA00F,EAAAc,EAAAjiE,qBAIkB,CAAAgiE,YAAAb,sBAGlB/1F,UAAA82F,iBAAA,SAAA3a,EAAAr7E,qBAGAV,WAAAiB,EAAA,IAAA86E,GAAAr7E,EAAAO,GAAA,aACEjC,MAAA4/E,cAAA3/E,EAAAG,qEAKFH,EAAAE,OACEA,KAAAC,MAAA41F,EAAA/zF,EAAA+zF,oBAAUhE,EAA8B/vF,EAAA+vF,eAAAJ,EAAA3vF,EAAA2vF,WAAA8D,EAAAzzF,EAAAyzF,mBAAA5B,EAAA7xF,EAAA6xF,SAAAriD,EAAAxvC,EAAAwvC,QAAAmkD,EAAA3zF,EAAA2zF,iBAAA1gD,EAAAjzC,EAAAizC,aAAA6gD,EAAA9zF,EAAA8zF,gBAAA4B,EAAA11F,EAAA01F,QAAAH,EAAAv1F,EAAAu1F,UAAAb,EAAA10F,EAAA00F,eAAAnhF,EAAAvT,EAAAuT,kCACtC2wD,EAAAnxD,EAAAmxD,mBACJt1D,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,OACEpQ,EAAAmB,cAAAu1F,GAAA,CAAO5F,eAAGA,EAAAJ,WAAuCA,EAAAzrB,cAAArhD,aAAAriB,SAAAtC,KAAAuyF,oBAAA,SAAAzzD,GAAA,OAAApuB,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,0CAC/C,SAAA5P,GAAA,OAAAzB,EAAAy3F,iBAAA,UAAAh2F,IAAAgzF,gBAAA,SAAAhzF,GAAA,OAAAzB,EAAAy3F,iBAAA,WAAAh2F,IAAA+vC,UAAAqiD,WAAAt+E,QAAAo+E,cAAA,EAAAztB,cAAArhD,aAAA8sE,WAAA3yD,IAAA/qB,KAAA,KACJrD,EAAA3P,EAAAmB,cAAAw1F,GAAA,CAAAzF,iBAAAnzD,EAAAknC,cAAAuvB,qBAAA5B,WAAArxF,SAAA,SAAAf,GAAA,OAAAzB,EAAAy3F,iBAAA,qBAAAh2F,KAAA,SAAA6zF,GACE,OAAAA,GAAA1kF,EAAU3P,EAAAmB,cAAAszF,GAAiC,CAAQzgD,eAAAixB,cAAAyvB,mBAAAnzF,SAAA,SAAAf,GAAA,OAAAzB,EAAAy3F,iBAAA,mBAAAh2F,QAK3DmP,EAAA3P,EAAAmB,cAAAyzF,GAAA,CAAA3vB,cAAA4vB,kBAAAH,mBAAAI,sBAAAvzF,SAAA,SAAAf,GAAA,OAAAzB,EAAAy3F,iBAAA,kBAAAh2F,yKD3CwB0C,ED+EU,CC9EAyM,EAAA3P,EAAAohE,WAsBlCw1B,GAAgB,WAChB,OAAAjnF,EAAc3P,EAAAmB,cAAA,OAAAH,UAAA,2BAAA+6B,MAAA,CAAAmI,QAAA,IACdv0B,EAAW3P,EAAAmB,cAAA,OAAAH,UAAA,+BAAA+6B,MAAA,CAAAgI,YAAA,IACXp0B,EAAc3P,EAAAmB,cAAA,qCACdwO,EAAa3P,EAAAmB,cAAA,SACN,0JACE,KACDwO,EAAA3P,EAAAmB,cAAA,+JACRwO,EAAA3P,EAAAmB,cAAA,8BAEF,mCAA2CwO,EAAA3P,EAAAmB,cAAA,SAA3C,mBAAAwO,EAAA3P,EAAAmB,cAAA,uFACEwO,EAAe3P,EAAAmB,cAAA,aAAa,aAQ5BwO,EAAA3P,EAAAmB,cAAqB,IAAwD,KAArDwO,EAAA3P,EAAAmB,cAAW,gCACzB,gCACRwO,EAAa3P,EACXmB,cAAA,SACEwO,EAAY3P,EAAImB,cAAA,+BAChB,wEACSnB,EAAAmB,cAAA,SACTwO,EAAU3P,EAAAmB,cAAA,+BAEZ,yDACEnB,EAAAmB,cAAyB,IAAC,KAE5BwO,EAAA3P,EAAAmB,cAAA,kCACF,qEA+DHwO,EAAA3P,EAAAmB,cAAA,2CAlFC,4DACMwO,EAAU3P,EAAAmB,cAAA,SAGfwO,EAAA3P,EAAAmB,cAAA,6CAiBD,6DAQU,gBAGN,gCACE,yBAqBA,6DAYK,SAAKtC,oBAYVE,EAAA,OAAAF,KAAC4pB,MAAAxpB,KAAeypB,YAElBzpB,YACHF,EAAAG,MAAA23F,GACH93F,EAAAyyF,mBAAC,SAAAzwF,GArF0C,IAAA+0F,EAAe/0F,EAqFzD+0F,UAAAC,EAAAh1F,EAAAg1F,WAAA/iF,EAAAjS,EAAAiS,KAAAW,EAAA5S,EAAA4S,kHEpHD,SF2GU,EAAAmjF,EAAKj4F,iNG3Gfi4F,EAAap3F,UAAAoB,OAAA,WACsC,IAAA/B,EAAAE,KAEb8B,EAAA9B,KAAAC,MAAA4xF,EAAA/vF,EAAA+vF,eAAAJ,EAAA3vF,EAAA2vF,WAAAngD,EAAAxvC,EAAAwvC,QAAAj8B,EAAAvT,EAAAuT,MAAAzZ,EAAAkG,EAAAlG,MAAAC,EAAAiG,EAAAjG,KAOzBgZ,EAAY7U,KAAAH,MAAC8kB,EAA0B9P,EAAA8P,WAAAqhD,EAAAnxD,EAAAmxD,YAC1C,OAAAt1D,EAAM3P,EAAAmB,cAAAwO,EAAW3P,EAAAoQ,SAAA,KAEvBT,EAAA3P,EAAAmB,cAACu1F,GAAA,CAAA5F,iBAAiBJ,aAAAzrB,YAAUA,EAAArhD,aAAAriB,SAAAtC,KAAAuyF,oBAAA,SAAAzzD,GAAA,OAAApuB,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KAC1BT,EAAA3P,EAAAmB,cAAA41F,GAAgB,CAAAjD,eAAA,SAAAtzF,GAAkC,OAASzB,EAAQwC,SAAA,UAAAf,IAAA+vC,UAAAj8B,QAAAo+E,cAAA,EAAAztB,cAAArhD,aAAA8sE,WAAA3yD,IAAA/qB,KAAA,QACjErD,EAAA3P,EAAAmB,cAAC,OAAAH,UAAA,0BAIP2O,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,WAEa2O,EAAA3P,EAAAmB,cAAA,QAAAH,UAAU,imBDvBb2O,EAAA3P,EAAAmB,cAAAy1F,GAAA,QAEZE,EFoGa,CEnGsCnnF,EAAA3P,EAAAohE,WAKXjhC,GAAAhnC,EAAA,QAG0B69F,GAAA79F,EAAA,QAgBhEuhE,GAAYvhE,EAAY,WAKtBA,EAAkB,WACDA,EAAUqhC,EAAIy8D,SAGb,QASpBC,GAAA,SAAAp4F,OACE2I,EAAM3I,EAAO2I,KAAKzG,EAAelC,EAAAkC,UAAOP,EAAC3B,EAAE2B,aAErCkP,EAAa3P,EAAGmB,cAAAu5D,GAAA,EAAAC,OAAAj1C,EAAA,KAAA5mB,KACpBkB,EAAAmB,cAAiB,OAAAH,UAAoB,mCAAAA,GAAA,KACrC2O,EAAa3P,EAAAmB,cAAAg2F,GAAA,GAAA12F,QAAA22F,YAAA,EAAAp4E,MAAAvX,EAAAuX,cAKb7lB,EAAmB,WAeA,SAAA0F,cAEhBC,SACDD,EAAAG,KAAgBC,KAAEH,IAACG,KAjDI,uBAkDb,SAAAU,YAERb,MACEu4F,aAAAl3F,KAAA,SAACgG,YACC9F,IAAA,SAAA6hB,GAAC,OAGN1hB,MAAA0hB,EAAAw0C,KACFj2D,MAAAyhB,EAAAw0C,KACD13C,MAAAkD,EAAAlD,cAOEzd,SAAA,SAAA+1F,GAGLv4F,EAAAD,MAAAyC,SAAA+1F,EAAAj3F,IAAA,SAAAwwE,GAAA,OAAAA,EAAArwE,UArE4BzB,WA+CR,EAAAw4F,EAAA14F,yGEvEW+iB,EAAA,CAM5Bm7C,gBAA2B,qBACvBf,SAAA,EACF36D,gBAAoB,EAGxBC,YAAArC,KAAAu4F,cACEj2F,SAAAtC,KAAAsC,SACGP,UAAU,6CACVQ,YAGN,OACD04D,eAAA,+BAEaz4D,iBAAA,wHCpBmBjB,MAAA6T,EACU+F,OAAAjd,OAAAgnC,EAAA,kBAAAhnC,GAOtCs6F,aAA8B,SAAAv1E,EAAKw1E,GAGrC,OAFqBvgC,OAAAh6D,OAAA4gE,GAAA,EAAA5gE,CAAAu6F,GAAA,KAErBlyF,KAAA0c,EAAA1hB,QAEI8B,WAAA,CACEq4D,OAAAu8B,GAGE95B,oBAAQj5B,EAAA,oBACRu5B,iBAAcv5B,EAAa,iBAC7BwzD,gBAAO,WAGb,aAGWC,iBAAA,SAAA94F,yECzBmB6Q,EAAA3P,EAAAmB,cAAAg2F,GAAA,GAAA5xF,IAAAkC,EAAAhH,YAAAgH,EAAAhH,MAAA22F,YAAA,EAAAp4E,MAAAvX,EAAAuX,YAShC,OACErP,EAAA3P,EAAAmB,cAAA,MAAK,CAAAH,UAAU,iDACb2O,EAAA3P,EAAAmB,cAAA,MAAG,CAAAH,UAAU,cACX2O,EAAA3P,EAAAmB,cAAAs8D,GAAMz9D,EAAU0lB,EAA2B,KAAA9D,OACzC5hB,EAAAmB,cAAA,KAAAH,UAAG,mCAIPu2F,EJqDmB,CIlDvB5nF,EAAA3P,EAAAohE,WCLEy2B,GAdmB,SAAA/4F,GACuB,IAAAsrB,EAAAtrB,EAAAsrB,MACZ0tE,EAAA1tE,EAAAqmC,QAAA,aAE5B,OAAA9gD,EAAsB3P,EAAAmB,cAAA,MAAAH,UAAA82F,GACpBnoF,EAAU3P,EAAAmB,cAAE,KAAU07B,KAAAzS,EAAAxkB,KACtBwkB,EAASrvB,MAAG4U,EAAE3P,EAAAmB,cAAgB,KAAAH,UAAQopB,EAACrvB,OAG3CqvB,EAAAtvB,QCAMi9F,0HAVwBpoF,EAAA3P,EAAAmB,cAAA,MAAAH,UAAA,oBACsC2O,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA,wBAAA67B,KAAA60B,EAAA9rD,KAGzC+J,EAAQ3P,EAAAmB,cAAA,QAAAH,UAAA,sBAAA0wD,EAAA52D,QAAL42D,EAAA1nC,UAC1B0nC,EAAQ1nC,SAAG3pB,IAAA,SAAkB+pB,EAAAzuB,GAEjC,OAAAgU,EAAA3P,EAAAmB,cAAK02F,GAAyB,CAAAztE,QAAA7kB,IAAA6kB,EAAAxkB,IAAA,IAAAjK,QCNOq8F,GDqBvC,SAAAl5F,GAEI,IAAA4yD,EAAA5yD,EAAe4yD,KACnB,OAAK/hD,EAAe3P,EAAGmB,cAAA,OAAAH,UAAA,0BACtB2O,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA,gBAAA67B,KAAA60B,EAAA9rD,IAAA6N,OAAAi+C,EAAAj+C,QAEY9D,EAAA3P,EAAAmB,cAAA,QAAAH,UAAA,sJCPXi3F,GARE,iBACAryE,EAAA5lB,EAAAk4F,UAASxW,EAAoB,EAAAyW,SAAAC,WAC3BxyE,EAAc5lB,EAAAyQ,OAAA2nF,EAAA,SAA2BvqF,GAAA,OAAAA,EAAAwqF,wBACxCr4F,EAAAmB,cAAA,OAAAH,UAAA,iBAAAs3F,EAAAj4F,IAAA,SAAAqxD,EAAA/1D,UACJgU,EAAA3P,EAAAmB,cAAA62F,GAAA,CAAAtmC,OAAAnsD,IAAAmsD,EAAA51D,GAAA,IAAAH,WAODxC,EAAA,QA0Bco/F,GAAAp7F,OAAAq7F,GAAoC,EAApC,CAvBR,SAAAz3F,OACN6E,EAAA7E,EACE6E,MACE,kBAAAnB,mBAASmB,YACP5F,EAAAmB,cAAA,OAAAH,UAAM,mBACHhB,EAAImB,cAAS,KAAA07B,KAAA47D,EAAAz3F,UAAG,gBAAgByS,OAAQ,WACnCzT,EAAGmB,cAAI,QAAAH,UAAA,6BAGjB2O,EAAA3P,EAAAmB,cAAA,IAAI,CAAAH,UAAU,4BACNhB,EAAAmB,cACJ,KAAA07B,KAAA47D,EAAAhlF,OAAA,WACEzT,EAAAmB,cAAA,MAAAH,UAAM,wCAAqC86B,KAAQ,QAGtDnsB,EAAK3P,EAAAmB,cACJ,MAAAH,UAAA,oBACE2O,EAAA3P,EAAAmB,cAAA,OAAG,CAAAH,UAAc,sBAAS,yBAEtB9B,GAAA,gCAeE,SAAAL,sBAML,UAAAA,EAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KChE+B,qBDiEhC,SAAYshB,EAAA6J,GACZ,iBAAAxkB,MACJ2a,EAAAI,oBACE,EAAA/lB,KAAA,aAAM,CAKf89F,aAAA,+EC5EuBA,aAAA,uDAGoB35F,eD2DTF,GCzDH85F,EAAAj5F,UAAAoB,OAAA,WAGnB,IAAS/B,EAAAE,KAChB8B,EAAO9B,KAAmBH,MAAA4yD,EAAE3wD,EAAA2wD,KAAUpxD,EAAAS,EAAAT,KACtC,OAAAqP,EAA4B3P,EAAAmB,cAAS,MAAS,CAAAH,UAAA,iCAC9C2O,EAAa3P,EAAAmB,cAAA,KAAA07B,KAAW60B,EAAA9rD,IAAU5E,UAAC,gBAAAyS,OAAAi+C,EAAAj+C,QAC5B9D,EAAA3P,EAAAmB,cAAA,OAAgB,CAAAH,UAAA,6BAEb0wD,EAAC32D,MAAY4U,EAAE3P,EAAAmB,cAAA,KAAAH,UAAA0wD,EAAA32D,OACvB22D,EAAW/wB,KAAQhxB,EAAE3P,EAAKmB,cAAa,MAAI,CAAA3E,IAAWk1D,EAAE/wB,QAC1DhxB,EAAa3P,EAAAmB,cAAA,MAAAH,UAAA,wCAAA86B,KAAA,QACf41B,EAAA7wB,UAAYlxB,EAAuB3P,EAAAmB,cAAA,MAAAH,UAAA,qBACpC2O,EAAA3P,EAAAmB,cAAA,QAAAH,UAAA,sBAAA0wD,EAAA7wB,WACF6wB,EAAAknC,iBAAAjpF,EAAA3P,EAAAmB,cAAA,MAAAH,UAAA,yBAGC2O,EAAA3P,EAAAmB,cAAA,IAAK,CAAAm0B,QAAUr2B,KAAA45F,WACGlpF,EAAA3P,EAAAmB,cAAC,WACFwO,EAAO3P,EAAKmB,cAAA,OAAAH,UAAA,mCAAAV,EAAA0Q,SAClBrB,EAAA3P,EAAAmB,cAAC,OAAAH,UAAe,sCAAwC,iBAGnE2O,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,iCACH2O,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA,4EC7B4C,OAAAopB,EAAAiuE,aAQ7C,KAPyC1oF,EAAA3P,EAAAmB,cAAA,MAAAoE,IAAA6kB,EAAAtvB,KAAA,IAAAa,GACHgU,EAAA3P,EAAAmB,cAAA,KAAA07B,KAAAzS,EAAAxkB,IAAA6N,OAAA2W,EAAA3W,OAAA6hB,QAAA,SAAA/U,GAAA,OAAAxhB,EAAA+5F,YAAAv4E,EAAA6J,KACMA,EAAArvB,MAAA4U,EAAA3P,EAAAmB,cAAA,KAAAH,UAAAopB,EAAArvB,OACPqvB,EAAAtvB,SAIrC6U,EAAA3P,EAAAmB,cAAA,MAAAH,UAAA,oBAAA2O,EAAA3P,EAAAmB,cAAA,QAAAH,UAAA,sBAqBC0wD,EAAA52D,YFgCmB,GElDhB,uCAaQo9F,UAAAxW,EAAA,EAAAyW,SAAAC,WACNxyE,EAAA5lB,EAAAyQ,OAAC2nF,EAAA,SAAUvqF,GAAK,OAAAA,EAAYwqF,iBAC5B1e,EAAC,EAAaC,aACdD,EAAA,EAAAr5E,KACJ,GAACA,KAAAy4F,SAAA,GACH,IAAAC,EAACpzE,EAAA5lB,EAAA6J,KAAAovF,EAAA,CAAAn9F,GAAA,YArB6Bk9F,+MCW5Bx/E,GAAAI,GAAwBE,GAAAE,MAwChBk/E,GC7CRC,GAAAzX,EAAA,EAAA57D,WAAA,OACU,SAAAjnB,YAENu6F,IACF,IAAGr6F,EAAgB,OAAhBF,GAAyBA,EAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KAM5B,OALDF,EAAAs6F,8BAAA,WAEDnqB,GAAM,EAAAt0E,KAAN,2BAGSmE,ECpB6D,SDYzD,EAAAq6F,EAAAv6F,GAkBfu6F,EAAA15F,UAAAoB,OAAC,WAzBgD,6bCTJ6O,EAAA3P,EAAAmB,cAAA82F,GAAA,CAAA1yF,IAAA,eACDoK,EAAA3P,EAAAmB,cAAAm4F,GAAA,CAAA/zF,IAAA,oBAG4B6zF,EDW5D,CCLwB7jE,EAAA,kBAQpCp8B,EAAA,QAqCWogG,GApCT,SAAA16F,YAGE26F,IACA,cAAA36F,KAAa4pB,MAAAxpB,KAAAypB,YAAiBzpB,KA2Ba,SA9BnC,EAAAu6F,EAAyB36F,GAKnC26F,EAAC95F,UAAA0gC,sBAAA,SAAAg7B,GAMD,OAAAn8D,KAAAH,MAAA26F,gBAAM39F,KAANs/D,EAAAq+B,gBAAA39F,MACU4D,UAAAkpB,kBAAA,WAER,IAAA7nB,EACE9B,KAAAH,MAAA26F,EAAA14F,EAAA04F,gBACGC,EAAqB34F,EAAC24F,+BACd,WASZA,EAACD,EAAA39F,KACH29F,EAAA1kC,UA7BsCykC,EAAa95F,UA8BrDoB,OAAA,wEAEK,OAAA6O,EAAA3P,EAAAmB,cAAkBw4F,GAAwB,GAAAhnC,SAAA8mC,EAAA9mC,SAAA93D,MAAA4+F,EAAA5+F,MAAA+3D,KAAA6mC,EAAA3+F,KAAAC,KAAA0+F,EAAA1+F,KAAAgxF,QAAA,kBAAA2N,EAAAD,EAAA39F,QAE7C09F,EAjCD,CAmCFjkE,EAAM,WAKSqkE,GAAAzgG,EAAA,WCvBX,SAAA0F,GAGS,SAAAg7F,IAMH,IAAA96F,EAAM,OAANF,GAAMA,EAAA4pB,MAAAxpB,KAAYypB,YAAAzpB,YAC1BF,EACE+6F,uBAAA,SAAAh+F,GAEIiD,EAAAD,MAASi7F,qBAAMj+F,IAEfiD,SAdN2mB,EAAA,EAAAm0E,EAAAh7F,KAiBIa,UAAAkpB,kBAAM,WACN,IAAAoxE,EAAA/6F,KAAAH,MAAAk7F,UAKA9qB,GAAA,EAAAz2D,GAAA,gBAAe,SAACtS,GAAA,OAAuB6zF,EAAS78F,OAAAy8F,GAAwB,EAAxBz8F,CAAwBgJ,EAAA,GAAAA,EAAA,OACxE+oE,GAAA,EAAAz2D,GAAA,gBAAe,SAACtS,GAAA,OAA2B6zF,EAAQ78F,OAAEy8F,GAEvD,EAFqDz8F,CAErDgJ,EAAA,GAAAA,EAAA,OACF+oE,GAAA,EAAAz2D,GAAA,uBAAAtS,GAAA,OAAA6zF,EAAA78F,OAAAy8F,GAAA,EAAAz8F,CAAAgJ,EAAA,GAAAA,EAAA,sCChEF,IAAApH,EAAAE,mCAAwC,OAAA0Q,EAAA3P,EAAAmB,cAAA,WAAA84F,EAAA55F,IAAA,SAAAo5F,EAAA99F,GACiB,OAAAgU,EAAA3P,EAAAmB,cAAAo4F,GAAA,CAAAh0F,IAAAk0F,EAAA39F,GAAA,IAAAH,EAAA89F,kBAAAC,oBAAA,SAAA59F,GAAA,OAAAiD,EAAA+6F,uBAAAh+F,YDmCrD,qBCtBF,cACW,uBAGT2xF,GAAA,sBALkC,SAAAvuF,GAAA,kEAWpCg7F,GAAA,SAAsCp7F,UAAtCA,EAAAqjB,YAFQxS,EAAa3P,EAAAmB,cAAM,OAAS,CAAoBH,UAAA,gCAAAs0B,QAAAx2B,EAAAq7F,sBAUrCn6F,EAAAmB,cAAA,QAAAH,UAAoB,gCAAAs0B,QAAA,WAC/B1zB,OAAAokF,KAAA,sFAIKlnF,EAAAmF,KAAI,iBAOX,SAAAnF,WACEs7F,KAAAC,EAAAv7F,EAAAu7F,WAAIC,EAAcx7F,EAAEw7F,YAASC,EAAAz7F,EAAAy7F,SAAAJ,EAAAr7F,EAAAq7F,oGAC7B,oBAKLn6F,EAAAmB,cAAA,QAAAH,UAAA,2BAAAs0B,QAAA,kBAAA+kE,EAAAD,QAGCp6F,EAAAmB,cAAA+4F,GAAC,CAAAj2F,KAAAm2F,EAAAx7D,IAAsB36B,KAAAke,YAAAi4E,EAAAx7D,IAAAzc,YACZg4E,kBACGA,MACVn6F,EAAAmB,cAAgB,OAAM,CAAKH,UAAC,uBAAAs0B,QAAA,kBAAAilE,EAAAH,QAC5Bp6F,EAAAmB,cAAA,OAAuB,CAAAH,UAAA,4BAAAs0B,QAAA,kBAAAglE,EAAAF,WAa7BzqF,EAAA3P,EAAAw6F,KAAA,kBAAA90E,EAAA,OAPIxgB,OAOJ,wBA5CAu1F,WAC2B,EAAAx7F,KAAA,SAAA8B,UACzBA,EAAAN,8DACH,OA2CD,OAAAg6F,EAAA15F,EAAA+iB,OAAAsyD,QAAA,GAuCC,CArCGA,QAAA,SAAAt3E,GAAC,OAAA6Q,EAAA3P,EAAAmB,cAAkB,MAAS,CAAKu5F,wBAAwB,CAACC,OAAMF,EAAW37F,EAAGqjB,6BAelE,SAAWtjB,cAAiCC,SAAAD,EAI/CG,KAAAC,KAAAH,IAAAG,KCrET,oBDuEQ0Q,EAAA3P,EAAA46F,4BAII,SAAa75F,SACCA,EAAE85F,uBACjB97F,EACDD,MAASu7F,EAAQvmF,EAASumF,WAEpBC,EAAexmF,EAAAwmF,YAGzBtmF,EAAAF,EAAAsmF,KAAAx7D,IAAA36B,EAAA+P,EAAA/P,KAAAke,EAAAnO,EAAAmO,YAIT,OADGpjB,EAAAG,MAAA47F,mBAENnrF,EAAC3P,EAAAmB,cAAA,OAAA46B,MAAA,CAAAs4B,SAAA,OAAAG,UAAA,QAAAumC,UAAA,OAAAroC,WAAA,WA5FkC/iD,EA4FlC3P,EAAAmB,cAAA,MAAA46B,MAAA,CAAA5xB,MAAA,UAEyB,0QCnHgB0wF,KAC7BV,kBAAA,WACsBp7F,EAAAe,SAAA,CAAAg7F,oBAAA,cAEDD,WAsB7B97F,EAAAG,MAAA,CAJG47F,oBAAoB,GAGhB/7F,EA4CV,SDqBgC,EAAAi8F,EAAAn8F,KCjD7Ba,UAAAoB,OACmB,WAQnB,IAAA/B,EAAAE,KAbG,OAAO0Q,EAAa3P,EAAAmB,cAAKgjC,EAAA,mBAAAvzB,QAAA3R,KAAAg8F,cAAAtqF,UAAA,MAAAuqF,UAAA,cAAA3wD,EAAAC,EAAAC,GACrB,OAAQ96B,EAAY3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KAEpBrR,EAEYo8F,YAAAxrF,EAAA3P,EAAAmB,cAClBgjC,EAAA,QAAAze,EAAA,KAAA+kB,EAAA,CAAAK,iBAAA/rC,EAAAo8F,WAAAn9E,QAAA+sB,iBAAA,SAAA/pC,UAAA,qBAAA6pC,aAAA,WACS9rC,EAAAe,SAAU,CAAMg7F,oBAAa,IACvBtwD,KACAI,aAAAL,EAAAS,YAAA,SAAAjqC,GACD,IAAOkqC,EAAKlqC,EAAAkqC,WAAAt6B,EAAA5P,EAAA4P,UAK7B,OAAAhB,EAAA3P,EAAAmB,cAAA,MAAAukB,EAAA,GAAA1kB,UAAA,gBAAAkqC,iBAAAv6B,GAAAs6B,QAIKt7B,EAAA3P,EAAAmB,cACJ,QAAAioB,IAAGrqB,EAAAo8F,WAAA7lE,QAAAmV,EAAAp/B,KAAAm/B,EAAAD,EAAAM,aAAA,WAMJL,IAEmEzrC,EAAmCe,SAAA,CAAAg7F,oBAAA,KAAhC/+D,MAAO,CAAAq/D,OAAA,YAAUr8F,EAAAD,MAAAs7F,KAAAx7D,IAAA36B,UAIjF+2F,EDqBS,GCjBZh7F,EAAAq7F,oBAUqB,WAGjBliG,EACIqhC,EAAA8gE,iBC1BZC,GAAA,SAAAx6F,8DA5Cc,SAAAtC,GAAW,OACzBkb,QAAMxc,OAAS2mC,GAAA,IAAT3mC,CAA6Bqc,KAAGA,GAAAkM,EAAA,oTAEtC,oCAAAvoB,OAAAgnC,EAAwD,mBAAxDhnC,CAAwD,CAClDosD,MAAA9qD,EAAaw5C,OAAGujD,MACpBhyC,KAAE/qD,EAAUw5C,OAAAwjD,SAIPzoF,OAEPgnD,MAAM78D,OAAA2mC,GAAqB,IAArB3mC,CAAqByc,QAAA8L,EAAA,2VACzB,2DACiBjnB,EAAAi9F,QAAAxqC,GAAAzyD,EAAAi9F,QAAAxqC,GAAAzyD,EAAAi9F,QAAAhiF,GAAAjb,EAAAi9F,QAAAxqC,GAAA/zD,OAAAgnC,EAAA,mBAAAhnC,CAAA,SACX86C,OAAY0jD,WACbl9F,EAAAw5C,OAAA2jD,SAED5oF,MAAM7V,OAAUgnC,EAAmC,mBAA7ChnC,CAA6C,OAEnD0+F,KACEp9F,EAAAw5C,OAAAujD,eAME,qBAEEvjD,OAAAwjD,uBAYPt+F,OAAA2mC,GAAA,IAAA3mC,CAAA2c,QAAA4L,EAAA,kEACDvoB,OAAK2mC,GAAA,GAAL3mC,CAAKA,OAAA2mC,GAAA,IAAA3mC,CAAA6c,QAAA0L,EAAA,0IAAAjnB,EAAAgb,WAAApS,KAAAy0F,GAAAr9F,EAAAi9F,QAAAxqC,GAAAzyD,EAAAi9F,QAAAxqC,GAAAzyD,EAAAi9F,QAAAhiF,GAAAjb,EAAAi9F,QAAAxqC,IAAA,kQN1D2DvhD,EAAA3P,EAAAmB,cAAA,QAAAukB,EAAA,GAAA1S,KAAA,OAAAxR,YAAA,0BAAAhB,MAAAb,QAAA4B,SAAA,SAAAgf,GACNhf,EAAAgf,EAAAw7E,cAAAv7F,QAE3B4zB,SAAA,EAAA4nE,YAAA,GAAAC,EAAA,CAAAj7F,UAAAoZ,EAAA4/C,SAerCrqD,EAAA3P,EAAAmB,cAAA,OAAAH,UAAAoZ,EAAA8hF,eAqBI,SAAAn7F,OAEFo7F,EAAgBp7F,EAAAo7F,qBAAqCC,EAAAr7F,EAAAq7F,iBAAA5rF,EAAAzP,EAAAyP,MAAA6rF,EAAA32E,EAAA,EAAA3kB,EAAA,uDACnD5D,OAAKo4B,EAAuB,WAA5Bp4B,CAA6BgnC,EAAgB,cAC/C+lC,EAAEiyB,MAGM3rF,IACNnQ,IAAK,SAAMwQ,GAAc,OAAA6U,EAAK,EAAI,GAAC7U,EAAS,CAAAL,MAAAK,EAAAL,MAAAC,OAAA,SAAA5C,GAAA,OAAAA,EAAApN,YAC5C,GAzBE67F,EAAApyB,EAGF,WACE,IAAIA,EACJ,OAAK,KAEL,IAAAqyB,EAAAryB,EAAA7jE,OAAAoW,gBAAA,8UACH9M,EAAA3P,EAAAmB,cAAA,cAAAi7F,EAAAlyB,EAAArjB,UAAA,GAAA01C,IAmBD5sF,EAAA3P,EAAAmB,cAAA,WACQwO,EAAE3P,EAAAmB,cAAMgjC,EAAO,WAAqB,CAAAh6B,MAAA+/D,EAAA7jE,OAAA8D,QAClCwF,EAAA3P,EAAAmB,cAAY,OAAgB,CAAAH,UAAA7D,OAAA2mC,GAAA,IAAA3mC,CAAA+7F,QAAAxzE,EAAA,8MAAAjnB,EAAAi9F,QAAAc,KAAAtyB,EAAA7jE,OAAAmP,UAGpC,cAEIxV,EAAAmB,cAAAgjC,EAAc,YAAAze,EAAoC,KAAA22E,EAAA,CAAA7rF,MAAAisF,EAAAH,sBAMhDnjG,EAAA,WAiBG,SAAA0F,cASGC,SAIND,EAAAG,KAAAC,KAAAH,IAAAG,oBACE,SAAAshB,GAOTxhB,EAAAe,SAAA,CAAAmE,KAAAsc,EAAA9M,OAAAjT,SAnFsCzB,EAAA29F,cAoFxC,SAAAn8E,sMOpGgD,IAAAxf,EAAAhC,EAAAD,MAAAwB,KAAA2D,EAAAlD,EAAAkD,KAAA+L,EAAAjP,EAAAiP,MAAAtP,EAAAK,EAAAL,MAS/C,OADF3B,EAAAG,MAAA,CAA+B+E,OAA/B+L,iBACEjR,WP4EW,EAAA49F,EACC99F,GO3EZ89F,EAACj9F,UAAAoB,OAAA,WAED,IAAAC,EAAA9B,KAAAC,MAAA+E,EAAAlD,EAAAkD,KAAA+L,EAAAjP,EAAAiP,MAAAtP,EAAAK,EAAAL,MACQk8F,EAAiC39F,KAA/BH,MAAA89F,aAEJnU,EAAW/G,EAAA,EAAA+G,wBACb94E,EAAO3P,EAAAmB,cAAAwO,EAAC3P,EAAAoQ,SAAA,KACTT,EAAA3P,EAAAmB,cAAA,MAAAH,UAAA,oCAED2O,EACE3P,EAAAmB,cAAA,QAAA8C,KAAA,WAAAjD,UACG,iBAEG2O,EAAA3P,EAAAmB,cAAA,MAAI,CAAAH,UAAU,wBACd2O,EAAA3P,EAAAmB,cAAAgjC,EAAe,UAAe,CAAAnjC,UAAA,mBAC5B2O,EAAA3P,EAAAmB,cAAAgjC,EAAiB,OAAAnjC,UAAA,6BAA0BgS,KAAA,OAAAzR,SAAAtC,KAAA49F,aAAAr8F,MAAAyD,OACzCjE,EAAAmB,cAAA,OAAAH,UAAA,0BACEhB,EAAAmB,cAAAgjC,EAAA,WAAAnjC,UAAA,sBACEhB,EAAAmB,cAAAgjC,EAAM,OAAAnjC,UAAA,6BAAAgS,KAAA,OAAAzR,SAAAtC,KAAAy9F,cAAAl8F,MAAAwP,EAAAqlB,SAAAozD,OACN94E,EAAA3P,EAAAmB,cAAAgjC,EAAa,SAAAvzB,QAAA,uDACb5Q,EAAAmB,cAAA,KAAAH,UAAA,gDACAhB,EAAAmB,cAAA,OAAAH,UAAA,wBAGJ2O,EAAA3P,EAAAmB,cAAAgjC,EACa,WAAAnjC,UAAa,WAAK,cAEzBhB,EAAAmB,cAAAgjC,EAAI,MAAK,CAAAnjC,UAAK,6BAAAgS,KAAA,OAAAzR,SAAAtC,KAAA69F,cAAAt8F,MAAAE,EAAA20B,SAAAozD,OACZ94E,EAAA3P,EAAAmB,cAAIgjC,EAAU,QAAqB,CAAAvzB,QAAA,uDACjC5Q,EAAAmB,cAAA,KAAAH,UAAK,gDAEPhB,EAAAmB,cAAA,OAAAH,UAAA,wBACAhB,EAAAmB,cAAAgjC,EAAK,OAAK,CAAA8gB,QAAW,UAAA3vB,QAAAr2B,KAAA89F,sBAAA1nE,SAAAunE,GAAA,cPmChC,GOvBV,4BC5CoCI,GAAA,SAAAn+F,gBA0DtC,cAAAA,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KA1DsC,OAAvCymB,EAAA,EAAAu3E,EAAAp+F,KAESa,UAAMkpB,kBAAW,WACvB3pB,KAAAH,MAAAo+F,eAEDx9F,UAAAoB,OAoDC,WAnDO,IAAAC,EAAA9B,KAAAH,MAAEK,EAAA4B,EAAA5B,UAAW+R,EAAAnQ,EAAAmQ,MAEnB,OAAI/R,EACKwQ,EAAA3P,EAAAmB,cAACgjC,EAAA,mBAAkB,CAACrpC,KAAK,qBAIhC6U,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KACGc,EAAK9M,OAAU,GACduL,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KACET,EAAA3P,EAAAmB,cAAA,MAAIH,UAAU,oBAAkB,SAChC2O,EAAA3P,EAAAmB,cAAA,OAAKH,UAAU,iBACb2O,EAAA3P,EAAAmB,cAAA,SAAOH,UAAU,4BACf2O,EAAA3P,EAAAmB,cAAA,aACEwO,EAAA3P,EAAAmB,cAAA,UACEwO,EAAA3P,EAAAmB,cAAA,WACAwO,EAAA3P,EAAAmB,cAAA,kBACAwO,EAAA3P,EAAAmB,cAAA,UACG,SAEPwO,EAAA3P,EAAAmB,cAAA,UACQ,eAEFnB,EAAAmB,cAAA,aAAA+P,EAAI7Q,IAAK,SAAK+Q,EAAAzV,UACZgU,EAAA3P,EAAAmB,cAAA,MAAKoE,IAAI5J,GACTgU,EAAA3P,EAAAmB,cAAA,MAAAH,UAAS,uBACT2O,EAAA3P,EAAAmB,cAAA,MAAI,CAAAH,UAAU,uBACFxE,IAAS4U,EAACxQ,eAOTZ,EAAAmB,cAAgB,KAAM,KAAAiQ,EAAAnN,QAC5BjE,EAAAmB,cAOT,UAAAiQ,EAAApB,OAObL,EACH3P,EAAAmB,cAAA,UAAAiQ,EAAA+rF,sBAxDiCF,EAAA,kBCTCG,GAAA,SAAAv+F,GAEE,SAAAw+F,IACO,cAAAx+F,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,YAFOymB,EAAA,EAAA23E,EAAAx+F,GAOlDw+F,EACE39F,UAAAkpB,kBAAA,WACG3pB,KAAAH,MAAOw+F,cAUR59F,UAAAoB,OAAC,WACA,IAAC/B,EAAOE,KAajB8B,EAAA9B,KAAAH,MAAAK,EAAA4B,EAAA5B,UAAAioE,EAAArmE,EAAAqmE,KAAA9mE,EAAAS,EAAAT,KAEa,OAAAnB,2bCxCHwQ,EAAA3P,EAAAmB,cAAA,kBACwBwO,EAAA3P,EAAAmB,cAAA,aAE5BwO,EAAA3P,EAAAmB,cAAA,aAAAimE,EAAA/mE,IAAA,SAAAovF,EAAA9zF,GAC0E,OAAAgU,EAAA3P,EAAAmB,cAAA,MAAAoE,IAAA5J,GAElCgU,EAAA3P,EAAAmB,cAAA,UAAAsuF,EAAAxrF,MACU0L,EAAA3P,EAAAmB,cAAA,UAAAsuF,EAAA3zD,MAQ7CnsB,EAA6B3P,EAAAmB,cAAK,KAAS,CAAAH,UAAA,cAA0ByuF,EAAY3+E,QAAAxQ,EAAAwQ,MAAAnB,EAAA3P,EAAAmB,cAAA,QAAAH,UAAA,wCAAA2O,EAAA3P,EAAAmB,cAAAgjC,EAAA,QAAA8gB,QAAA,UAAA59C,KAAA,KAAAiuB,QAAA,WAC9Ev2B,EAAAD,MAAAy+F,WAAY9N,KAE1B,oBAGI4N,EDjBkC,GCkBpC,eCb2GG,GAPiC,kBAAA7tF,EAAA3P,EAAAmB,cAAAs8F,GAAA,GAAAl9F,OAAAm9F,GAAA,OAAAvF,SAAA73F,KAAAxE,IAAA,SAAA6hG,EAAAC,EAAA1sF,EAAAk2D,EAAA9mE,GACpF,OAAAqP,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KACMwtF,EAAAC,SAAAluF,EAAA3P,EAAAmB,cAAAgjC,EAAA,oBAAArpC,KAAA,4BAAA6U,EAAA3P,EAAAmB,cAAA28F,GAAA,CAAAC,cAAAJ,EAAAK,kBAAApB,aAAAgB,EAAAI,kBAAA19F,SACLqP,EAAA3P,EAAAmB,cAAA88F,GAAA,GAAAC,YAAA,SACHvuF,EAAA3P,EAAAmB,cAAA67F,GAAA,CAAA79F,UAAAy+F,EAAAV,oBAAAS,EAAAT,UAAAhsF,WACM0sF,EAAAC,UAAAluF,EAAA3P,EAAAmB,cAAAi8F,GAAA,CAAAj+F,UAAAy+F,EAAAN,SAAAC,WAAAI,EAAAJ,WAAAD,SAAAK,EAAAL,SAAAl2B,OAAA9mE,aAKY69F,GAAAhlG,EAAA,QAIrEilG,GAASjlG,EAAyB,WAUbgE,OAAEo4B,EAAa,KAAfp4B,CAAe,SAAkB2B,OACzDg9E,EAAAh9E,EAAQg9E,KAAAl4D,EAAA9kB,EAAA8kB,WAAAriB,EAAAzC,EAAAyC,SAER88F,EAAA,CACAhhG,KAAAkV,KAAA+rF,MAAc,IACd7gG,GAAA8U,KAAS+rF,OAERv9F,EAAA5D,OAAAghG,GAAA,EAAAhhG,CAAAymB,EAAA26E,iBAAAp6D,EAAA,iBAAAq6D,UAAAH,GAAAI,EAAA19F,EAAA09F,cAAAC,EAAA39F,EAAA29F,gBAAAC,EAAA59F,EAAA49F,cAAAC,EAAAl5E,EAAA,EAAA3kB,EAAA,qDACHpB,EAAA,CACE2U,MAAO,GACPwnE,eAECnsE,EAAe3P,EAAAmB,cAAY,MAAa,CAACH,UAAA,iBACzC2O,EAAA3P,EAAAmB,cAAAi9F,GAAA,EAAA14E,EAAA,GAAA9B,aAAAi7E,iBAAA16D,EAAA,iBAAAq6D,UAAA7+F,QAAA4B,SAAA,SAAA5B,GAAA,OAAA4B,EAAA5B,EAAAm8E,OAAAgjB,WAAA,aAAAC,QAAA,GAAAh8D,UAAA,KAAAy0D,cAAAkH,EAAAM,gBAAAL,EAAAM,aAAAR,EAAAS,cAAAb,GAAAO,gBAmBDO,YACAC,GAAc,cAAAC,GAAA,WACdD,GAAW,oBAAAE,GAAA,uDACXF,GAAa,0BAAAG,GAAA,WACZH,GAAyC,gBAAAj/D,GAAA,6BACzCi/D,GAAA,kBAAApI,GAAA,GACH,QACE,aACA,aACA,cACA,CAAC,UAAU,CAAE7a,WAAY,YAAcZ,WAAA,IACvC,SACA,aACC,kBACH,eACE,UACA,wBAEC6jB,GAA0C,iBAAA7D,GAAA,CAC3C,QACC,YACH,aAAApf,WAAA,cACE,aAAO,CAAAA,WAAA,uBAEPijB,GAAY,eAAAI,GAAA,CACZ,OACA,CAAC,WAAW,CAAErjB,WAAY,cAC1B,CAAC,aAAc,CAAAA,WAAY,gBAE7Bh/E,OAAAiiG,GAAA,EAAAjiG,CAAuB,cAAAgnC,EAAsC,aAC3D,QACA,YAAG,CAAAg4C,WAAA,YAAAZ,WAAA,aAEF6jB,GAA+C,GAAE,2BAAOj7D,EAAA,mCACzD,QACA,SACC,gBAEH,iBAEAhnC,OAAAiiG,GAAA,EAAAjiG,CAAuB,eAAAm0F,GAAwB,CAC7C,UACA,WACA,QACC,eAEH,YAEA,cACE,aAAM,CAAAnV,WAAA,uBAELijB,GAA0C,4BAAAK,GAAA,CAC1C,SACJ,wJC/GsBtiG,OAAAiiG,GAAA,EAAAjiG,CAAA,mCAAAuiG,GAAA,CACoB,SACC,gBAE5C,iBAOE,cAAgB,CAAAvjB,WAAA,cAChB,gBAAAA,WAAoB,gBAAiBh/E,OAACiiG,GAAA,EAADjiG,CAAC,kBAAAgnC,EAAA,iBAEtC,uBACE,qCAEQ,CAACg4C,WAAA,YAAoBZ,WAAA,gBAC1B,CAAAY,WAAA,YAAAZ,WAAA,gBAGkC,sBAAAokB,GAAA,wCAI1B,YAAApkB,WAAA,4BAEK,CAACY,WAAA,YAAoBZ,WAAA,wBAC3B,CAAAY,WAAK,YAAqBZ,WAAA,gBAI/B,0BAAAp3C,EAAA,yBAEN,cAED,aAAAg4C,WAAA,YAAgBZ,WAAhB,aAGE6jB,GAAS,yBAAA5B,GAAA,cACe,gCAAAoC,GAAA,mBAGzB,eAAAzjB,WAAA,uBAOOhjF,EAAe,WAQZ,oBAGR0mG,EAAAx7E,GACFplB,KAAAolB,qBAFOgB,QAAgB,CAAC,eAKvB3lB,UAAAogG,mBAAA,SAA+CjmF,GAC/C,IAAI9a,EAAKE,KACP4a,EAAAg/D,UACDh/D,EAAAkhD,UAAA97D,KAAA8gG,mBACF9gG,KAAA8gG,oBAGKlmF,EAAKg/D,OAAAh/D,GAAe1Z,KAAA,SAAA6U,GACjBjW,EAAAkoB,UAAoBjS,EAAE+lD,UAC5B/lD,EAAAxE,QAEQoV,EAAA5lB,EAAA44B,KAAA5jB,EAAAxE,MAAA,SAAAnL,GACHA,EAAA89E,QAAkBnuE,EAAAmuE,UAEvBpkF,EAAAihG,oBACFjhG,EAAAihG,4BAMctgG,UAAAugG,iBAAA,SAAApmF,EAAAb,GACb/Z,KAAAolB,UAAY1iB,KAAAkY,EAAAjU,KACZoT,IACAA,EAAAsa,kBACAta,EAAO2H,qBAGLjhB,UAAoBwgG,gBAAG,SAAAryF,EAAAmL,KACvBmqE,SAAAt1E,EAAes1E,QACft1E,EAAA2C,OACDoV,EAAA5lB,EAAA44B,KAAA/qB,EAAA2C,MAAA,SAAAnL,GACDA,EAAA89E,QAAAt1E,EAAAs1E,6DCjGmBnqE,IACuBA,EAAAsa,kBACFta,EAAA2H,mBAkC5Ck/E,EAACngG,UAAAygG,YAAA,SAAAtyF,IAAA5O,KAAAolB,UAAA1iB,OAAAoE,QAAA8H,EAAAjI,MAAA,GAAAiI,EAAAjI,IAAAG,QAAA9G,KAAAolB,UAAA1iB,SAAA,IAEDutE,GAAA,EAAAt0E,KAAA,uBAgCE8E,UA4BC4xE,UAAA,SAAAT,EAAA73D,GA3BS/Z,KAAAmhG,eAEAnhG,KAAAmhG,cAAA,CAAAC,KAAoBxvB,IA7B9B73D,IAEAA,EAAAsa,kBACAta,EAAA2H,mBAIAk/E,EDOW,KCqCU,EAAIvyB,UAAC,0CAnBxB,CACAplD,SAAK,IAELC,YAAa,mEACJm4E,qBACK,eACL,aACP,CACAr5E,SAAU,IACV6J,QAAA,IACAkvE,mBAAa,IACbI,cAAA,IAEEL,kBAAe,eAkBM,oBAIrBQ,EAAY3gG,EAAWqpF,EAAoB9K,EAAWgJ,SACpDloF,qBACSW,iBACHu+E,kBACLgJ,OACFqZ,kBAAE,EAERvhG,KAAA8lB,WAAA,EAED9lB,KAAAwhG,SAAA,EACExhG,KAAK+6E,YAAU,EACf/6E,KAAKyhG,qBAAkB,EAAA5lG,KAAA,oBAAAu6B,UAAA,IAAAv6B,KAAA,QAAAA,KAAA,OAEvBmE,KAAK6lB,SAAU,EAEf7lB,KAAKw/E,SAAQx/E,KAAAkoF,WAAA1I,cACX55D,2BAAmB5lB,KAAAkoF,WAAAtiE,gCACnBllB,MAAO,CACRA,MAAA,GAEGq6B,KAAC,cAEL6/C,SAAsB,cAAX,eACD,qDAGI,CAAA56E,KAAO6oB,0HCzIzB,SD6GSzC,QAAA,0HA8BJjmB,OAAAH,KAAAU,wJAEOZ,EAAC+lB,QAAY+C,EAAK/C,QACnB/lB,EAAU+lB,UAChB/lB,EAAA8lB,4BAAA,sDAMDS,EAAsBvkB,EAAAspB,EAAAvW,mBAAX,kBACT,OACD0sF,kBAAA,4KAEK,IAAA3mF,EAAkBhF,EAAArU,MACnBqZ,EAAUspE,SAAA,EACV,IACN,QAAAjgD,GAAA7Y,OAAA,EAAA3E,EAAA,EAAA7L,EAAArJ,QAAAmwF,EAAAz9D,EAAAjvB,QAAA0sF,EAAAzsF,KAAAysF,EAAAz9D,EAAAjvB,OAAA,CAED0sF,EAAAngG,kBAGI,MAAAq6E,GAAiBxwD,EAAA,CAAAiK,MAAAumD,GACjB,YAEoB8lB,MAAAzsF,OAAAJ,EAAAovB,EAAAw3C,SAAK5mE,EAAA9U,KAAQkkC,GAC7B,QAAQ,GAAA7Y,EAAW,MAAAA,EAAUiK,kBAGzBhP,EAAA,CAAQgP,MAAGmmD,eAGpB5lE,MAAAX,OAAAnT,EAAAiT,EAAA0mE,SAAA35E,EAAA/B,KAAAgV,sKAED,IAAAka,EAAOntB,EACR6/F,EAAA,EAED,gEACW,IAAK/mF,EAAC7F,EAAAxT,2DAEP0tB,EAAO,CAAEoG,MAAAusE,eAGhB7sF,MAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,oLACD,IAAAkX,EAAOjqB,EAAI+S,EACZ8sF,EAAA,CAEDE,WAAA,GAAAC,cA0BC,IAxBC,IACM,QAAS/sF,EAAG0R,EAA0B,EAAAzmB,KAAAsmB,UAAA1Q,EAAAb,EAAAC,QAAAY,EAAAX,KAAAW,EAAAb,EAAAC,OAAA,CACpC,IAAG4F,EAAAhF,EAAArU,MACP,GAAMqZ,EAAAspE,SAAA,IAAAtpE,EAAA/d,GAEN8kG,EAAmBE,WAAejyF,KAAAgL,EAAA8N,SAE5B,CACT,IAAAqc,EAAApe,EAAA5lB,EAAAyQ,OAAAoJ,EAAArJ,MAAA,CAAA2yE,SAAA,KAAUrvE,EAAA8sF,EAAiBG,eAAAlyF,KAAA4Z,MAAA3U,EAAA4R,EAAA,EAAAE,EAAA5lB,EAAAK,IAAA2jC,EAAA,iBAG1Bg9D,GAAQh2E,EAAA,CAAAsJ,MAAA0sE,WAGV,IACSnsF,IAAQA,EAAAX,OAAAnT,EAAAiT,EAAA0mE,SAAA35E,EAAA/B,KAAAgV,GAEf,QAAO,GAAKgX,EAAA,MAAAA,EAAAsJ,cAEZssE,KAEOlhG,UAAAuhG,aAA2B,SAAK17E,OACvC27E,EAACngG,EACAshB,EAAA,GACJ,IAEO,QAAA8+E,EAAAz7E,EAA0B,EAAlCH,GAAmC67E,EAAsBD,EAAuBltF,QAAAmtF,EAAAltF,KAAAktF,EAAAD,EAAAltF,OAAA,CAAhF,IAAAvP,EAAA08F,EAIC5gG,MAHMkE,EAAAy+E,SACE9gE,EAAAxT,KAAWnK,EAAE5I,0BAKpB,YAEsBslG,MAAAltF,OAAAnT,EAAKogG,EAAQzmB,SAAA35E,EAAA/B,KAAAmiG,WAC3B,GAAAD,EAAW,MAAAA,EAAA5sE,cAElBjS,qKAEDg/E,EAAO,GAAAC,EAAmB,GAC3BxmG,GAAA,uBAAAumG,EAAA,8BAAAC,EAAA,YAED7mG,EAAA,6CAAA4mG,EAAA,iCAKIvmG,GAFIumG,EACJ,EACA,uBAAAA,EAAA,mCAGA,sBAAsB,IAAAC,EAAA,eAEf,EAAA1mG,KAAA,uBACL,cACAE,QACDL,EACAM,KAAA,WACJC,QAAA,SAEDC,UAAA,WAAA8D,EAAAwiG,2BAKC95F,EAAAq5F,WAAAr5F,EAAAs5F,qBADIrhG,UAAA6hG,2BAAA,SAAAT,EAAAC,GACJ,IAAAhiG,EAAAE,KAEDA,KAAAW,WAAA2hG,2BAAAT,EAAoBC,GAAA5gG,KAAA,WACdpB,EAAAyiG,mBAIQ9hG,UAAc+hG,oBAAA,WAC3B,IAAAj2E,EAAAzqB,EAED6/F,EAAA,GACE,IACD,QAAA9sF,EAAA4R,EAAA,EAAAzmB,KAAAsmB,UAAAvR,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CAED,IAAA4F,EAAA7F,EAAAxT,MACcwjC,EAAKpe,EAAiB5lB,EAAAyQ,OAAAoJ,EAAuBrJ,MAAC,CAAA2yE,SAAA,IACrDyd,EAAoB/xF,KAAK4Z,MAAAm4E,EAAoBl7E,EAAA,EAAAE,EAAA5lB,EAAAK,IAAA2jC,EAAA,UAIpD,MAAA09D,GAAAl2E,EAAA,CAAA8I,MAAAotE,GACE,QACI,IACK1tF,MAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAEP,QAAI,GAAA0X,EAAc,MAAGA,EAAA8I,OAExB,OAAAssE,KAGYlhG,UAAgB6hD,OAAA,WAC3B,IAAAq/C,EAAyB3hG,KAACwiG,sBAK1BvyB,GAA0B,EAAGt0E,KAAK,cAClC89F,aALD,iIAMA9O,WAAA,gBAEDtuF,MAAA,cAAAqmG,UAaC1iG,KAAAuiG,YAAAniG,KAAAJ,YAXQS,UAAQkiG,cAAY,iBACvB3iG,iBACDk/E,UAAArD,mBAAA36E,KAAA,SAAA2wB,KAED+wE,iBAAgB,EAAAnrC,KAAA,gBAAcrhC,UAAO,IAACqR,OAAS5V,uBAC9B/xB,EAAK8iG,iBAAiB,QAGxCniG,UAAAwgF,YAAA,SAAArP,0JAEInxE,UAAmBoiG,kBAAA,WACzB,IAAAnrF,EAAA1X,KAAAihF,YAAAjhF,KAAA8iG,kBAAArrC,MAGC,OADFz3D,KAAA8iG,kBAAA9iG,KAAA4iG,iBAAA,GACOlrF,KAEMjX,UAAgBygF,UAAA,SAAAtP,EAAA73D,GAC3B/Z,KAAKU,MAAAkxE,IAAWjrD,EAAG5lB,EAAAogF,QAAAnhF,KAAAU,MAAAkxE,OACpB5xE,KAAAuiG,cAEDxoF,IACMA,EAAGsa,kBAEHta,EAAI2H,qBAIGjhB,UAAAsiG,cAAA,WAGb,OAFC/iG,KAAAU,MAAAk6E,SAAA,EAED56E,KAAAuiG,iBAGmB9hG,UAAEuiG,sBAAA,WAInB,YAHEtiG,MAAOk6E,QAA6B,QAA7B56E,KAAaijG,sBAAgBpnG,UACrConG,sBAAAjjG,KAAAyhG,qBAAA,GAEMzhG,KAAIuiG,eAEfjB,EAAA7gG,UAACyiG,mBAAA,eAAAC,EAAArhG,SAEM,IACE,QAAA+S,EAAA4R,EAAA,EAAAzmB,KAAAsmB,UAAAvR,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CACG,IAAE4F,EAAG7F,EAAAxT,MACAqZ,EAAA+lE,aACD/lE,EAAAspE,QAAAlkF,KAAAuhG,kBAEZ3mF,EAAcrJ,MAAMoV,EAAA5lB,EAAAK,IAAAwZ,EAAArJ,MAAA,SAAA3C,GAEV,OADHA,EAAAs1E,QAAApkF,EAAAyhG,iBACQ3yF,KAIlB,MAAAw0F,GAAAD,EAAA,CAAA9tE,MAAA+tE,GAED,gDC9VA,WAAAD,EAAA,MAAAA,EAAA9tE,OAAAr1B,KAAAqjG,oBAAA/B,EAAA7gG,UAAA6iG,aAAA,WAAAtjG,KAAAU,YAAA,GAAAV,KAAAU,MAAAkxE,IAAA,GAAA5xE,KAAAU,MAAAk6E,SAAA,EAAA56E,KAAAuiG,eAAAjB,EAAA7gG,UAAA8iG,mBAAA,eAAA58F,EAAA,uBAAA3G,KAAA6oB,WAAAliB,GAAA,aAAA3G,KAAA6oB,UAAAliB,GAAA26F,EAAA7gG,UAAA+iG,mBAAA,eAAA78F,EAAA,0BAAA3G,KAAA6oB,WAAAliB,GAAA,aAAA3G,KAAA6oB,UAAAliB,GAAA26F,ED2G6B,GC/FW7yB,EAAA,EAAAJ,UAAA,mBAZxC,WAAyC,OACAplD,SAAA,IACJC,YAAA,sEACVC,WAAAs6E,GACYr6E,kBAAA,EACZC,aAAA,OACiB3P,MAAA,CACJmP,SAAA,IACP66E,UAAA,QAOiBxpG,EAAAC,EAAAC,EAAA,sBAAAw2F,GAAA,IACnB12F,EAAAC,EAAAC,EAAA,sBAAA8lG,KAEqBhmG,EAAAC,EAAAC,EAAA,sBAAAq0E,EAAA,IAQEv0E,EAAAC,EAAAC,EAAA,sBAAA61E,GAAA,IAO3B/1E,EAAAC,EAAAC,EAAA,sBAAAsgF,EAAA,IAUWxgF,EAAAC,EAAAC,EAAA,sBAAAupG,GAAA,mBChC1B9gG,EAAEzI,EAA0BF,sBAGbA,EAAmBC,EAAEC,EAAgB,sBAAAwpG,kBAGxD,KAAQ,SACF,kBACF,kBACE,oBACD,mBACNA,EAAA,oBAKE/gG,EAAUI,gGAIX,MAAMH,IAAK,kBAAI,SAAAC,KAAAC,IAAAN,y3KAKpBmhG,EAAA3pG,EAAA,mBAKSizC,EAAAnI,SACNljC,IACMkjC,EAAA5nC,OACD,KACJ0mG,EAAAtzF,KAAAi0B,MAAAs/D,MACJlnG,GAAA,cAAAswC,EAAAtwC,GAEG+kC,SAAA,SAAAkiE,EAAA9+F,KACF2B,IAAA,QACEwmC,EAAanoC,iBACP,EAAApJ,MAAA,eAAkB+K,IAAA,yBACpB,CACJ,CACG6xB,QAAE,EACJ18B,KAAA,sBACJe,GAAA,uBAAAswC,EAAAtwC,GAEMhB,KAAS,WACjB8K,IAAA,oBAAAwmC,EAAAtwC,GAAA,UAKKmoC,EAAMg/D,YACN,IACA,QAAanvF,EAAIrU,EAAA,EAAAwkC,EAAAg/D,aAAAjvF,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CACjB,IAAAo3E,EAAmBr3E,EAAExT,MACrB0nF,EAAiBl+D,SAAKnb,KAAA,CACV4oB,QAAA,EACP38B,KAAAuwF,EAAAxwF,MACME,KAAKswF,EAAAtwF,KACJ6K,IAAA,oBAAyBwmC,EAAatwC,GAAE,UAAauvF,EAAAvvF,GAC3DA,GAAS,mBAAAuvF,EAAAvvF,MAIf,MAAM2+E,GAASn1D,EAAA,CAAAgP,MAAAmmD,GACf,QACG,IACKzmE,MAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAGJ,QAAE,GAAAwR,EAAA,MAAAA,EAAAgP,gBAGE4uE,mBAAEH,EAAAG,SC/ECr5F,KAAG,SAAY0nB,SAEN,cAApBA,EAAUve,UD8EJgX,SAAEnb,KAAA,SACJ,0DAESu9B,EAAAtwC,QACR,iBACD,oBAAeswC,EAAAtwC,GAAA,kBAGJ,EAAAqnG,UAAAC,yBACJv0F,KAAI,SACV,OACD,sBACA,0BAAWu9B,EAAAtwC,QACX,kBACD,oBAAAswC,EAAAtwC,GAAA,4BAMLunG,EAAAC,GAEF,IAAIj5E,EAAmBtpB,EE5GzBoyD,OF8GE1mB,OAAA,GACA82D,WAAoB,gBAAJ,qBACD,oBACL,WACN,mBAED,WACF,CAAAC,SAAA,cAAAC,cAAA,uIAED,CACEpnG,KAAM,CACFP,GAAE,IACNkX,KAAA4/B,EAAA,WAAAhvB,WACH3f,KAAA,GAEQwL,KAAA,CAELi0F,OAAS,CACAz/F,KAAQ,GACD2B,IAChB,gJEjIJ,yHCCA,MAAAi1E,GAAAxwD,+FFAAgV,OAAA8zB,wBAeQrxD,EAAMI,KAOVyhG,KACH,SAAA7hG,EAAAI,0oPG1BD0hG,OAAA,SAAA9hG,EAAAI,GAAA,IAAAP,EAAA,0EAAAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,EAAA,wlEAAAG,EAAAI,QAAAP,GAA6FkiG,OACX,SAAA/hG,EAAAzI,EAAAF,GAS3E,sBAWL2qG,qCACM,IAAAtjG,EAAYgC,EAAAhC,MACR,GAAAA,EAAAggB,UAAoDC,WAElD,OAAqBxM,OAE7B,MAAAsM,EAAAhb,KAAAgb,EAAA4Y,QAAA,CACA5Y,EAAAI,iBACA,IAAA7lB,EAAA0F,EAAAujG,WAAAjpG,KAEF+lB,EAAArgB,EAAAggB,UAAAwjF,OAAAnjF,OAEEojF,EADGnpG,EAAesJ,OACGyc,EAErB,OADAre,EAAK0hG,cAAQD,IACb,eArB4B9qG,EAAAC,EAAAC,EAAA,sBAAAyqG,mBAgC9BhiG,EAAAzI,EAAAF,GAGG,aACgBA,EAAAC,EAAAC,EAAA,sBAAA8qG,oCACVhrG,EAAAC,EAAAC,EAAA,sBAAe+qG,oDACxBC,EAAAlrG,EAAA,QACFmrG,EAAAnrG,EAAA,kjBChDIorG,EAAsC,SAAUC,GAE/C,OAAS,SAAY16D,GAA+B,OAAArqC,EAAA,kCACrD,OAAOA,EAAA,EAAAR,KAAA,SAAA8B,GAEV,OADC+oC,EAAa3sC,OAAAsnG,EAAA,EAAAtnG,CAAA,CAAAwC,MAAA,CAAAkgC,IAAA2kE,EAAA1oG,GAAA4oG,cAAA,MAAAhgB,SAAA,KACd,WASHigB,oDAMGvrG,EAAAwrG,EAAA,iCAAA/tE,IACI19B,EAA6CC,EAAEwrG,EAAsC,0BAAArnG,MAC/EnE,EAAAwrG,EAAA,4BAAA9xE,MACF15B,EAAAwrG,EAAU,kCAAAhnG,UAClB,KAEcoK,EAAA68F,KACTzrG,EAAAyrG,EAAA,uBAAkB,kBAAAC,MACb1rG,EAAAyrG,EAAK,sCAAA5nG,MACb7D,EAAAyrG,EAAA,sCAAA9tE,MACG39B,EAAAyrG,EAAc,oCAAAE,UAGlB5rG,EAAA,UACiBA,EAAAqhC,EAAA0oE,KAEb/pG,EAAK,UACWA,EAAAqhC,EAAAwqE,KAIX7rG,EAAoB,UAK3B,KAAI,IAAK,IAAO,IAAE,wBAChB2B,gBAGA,oBAAuC,QAApBA,EAAAs8D,UAAa,EAAO,KAAAt8D,EAAAooG,SAAA,+BAqB7C,GAAmB,iBAANpoG,EACT,OAACqC,OAAM8nG,EAAA,EAAN9nG,CAAMrC,GACFA,EAGLoqG,IAAApqG,GACSqC,OAAC8nG,EAAU,EAAX9nG,CAAWrC,QAIzB,6BAOEqqG,OAAA,QACH,QAAArqG,EAAAs8D,UAAA,MACgB3kD,EAAAtV,OAAc8nG,EAAgD,EAA9D9nG,CAA8DyoC,GACtEw/D,EAAAtqG,EAAqBs8D,UAAW,MAAAhzD,WAKtB,KAFPzI,EAAGb,EAAAiL,QAAmB,QAGnBo/F,EAAArqG,EACFsqG,EAAC,KAIJD,EAAUrqG,EAAAs8D,UAAA,EAAAz7D,GACTypG,EAAKtqG,EAAAs8D,UAAAz7D,EAAA,IAET8W,EAAOtV,OAAE8nG,EAAA,EAAF9nG,CAAEgoG,EAAAF,EAAA,IACJG,EAAUhhG,OAEVxG,EAAAwnG,EAAA3yF,EAAAogB,GADEpgB,YASRqgB,EAAAh4B,SAAMyC,EAAAzC,0BAIS,GAAAo4B,MACVJ,oBAYNl1B,EAAOwnG,EAAmB3yF,EAAOogB,WAEjCwyE,EAAKD,EAAgBtoG,QAAO,YACnB2V,IACR,IAAM4yF,EAAAjhG,SACLkB,GAAQ,SACN+/F,EAAa1lD,OAAAt6C,qBAEZ,eAEA,UACQ,MAAJrD,IACL,UACS,MAAJA,EAIV,SAHK,EAKP,GAAAirC,MAAA3iC,SAAA+6F,EAAA1lD,OAAAt6C,GAAA,yGC7J8B,OAMyBigG,EAAAh7F,SAAA+6F,EAAAjuC,UAAAmuC,EAAAlgG,GAAA,IAGnD,GAAW,IAAT2N,GAEe,IAARsyF,EACA,OAIZ,GADG3xF,EAAE0xF,EAAiB1lD,OAAAt6C,MACtBmgG,IAAAC,EAAA9xF,GAEI,OAGiB,IAAbX,EACO6f,EACA6yE,EAAMC,MAAShyF,GAGf+xF,EAAME,QAAOjyF,GAIV,IAAVX,EACF0yF,EAAU3gG,IAAAugG,EAAA3xF,GAEJ,IAAAX,GACX0yF,EAAAG,SAAAP,EAAA3xF,UAIC+xF,MAIF9sE,EAAMz/B,EAAkB,QACxB2sG,EAAwB3sG,EAAqBqhC,EAAA5B,GAI7Ci6D,EAAQ15F,EAAsB,QAC9B4sG,EAA6B5sG,EAAsBqhC,EAAEq4D,GAOrDmT,EAAQ,CACRthG,EAAE,CAAAlH,QAAM,UACR4Z,EAAE,CAAA5Z,QAAM,UACRg+B,EAAE,CAAAh+B,QAAM,QACRpE,EAAE,CAAAoE,QAAM,OACRc,EAAE,CAAAd,QAAM,QACRyoG,EAAA,CAAAzoG,QAAA,SAEIkM,EAAA,CAAAlM,QAAc,SAGpB0oG,EAAK,CACH,CAAA7oG,KAAA,QAAiBI,GAAI,QAASD,QAAS,QAAMqc,QAAM,GAClD,CAAAxc,KAAA,QAAAI,GAAA,MAAAD,QAAA,eAAAqc,QAAA,GAEI,CAAAxc,KAAS,QAAAI,GAAA,QAAqBD,QAAA,YAAyBqc,QAAmB,GAC/E,CAAAxc,KAAM,QAASI,GAAA,MAAAD,QAAQ,mBAAeqc,QAAW,SAC/C,QAAapc,GAAG,QAAOD,QAAY,aAAcqc,QAAC,SAClD,QAAapc,GAAC,MAAQD,QAAA,oBAAAqc,QAAA,GACxB,CAAExc,KAAC,QAAAI,GAAA,QAAAD,QAAA,YAAAqc,QAAA,GAEH,CAAAxc,KAAA,QAAAI,GAAA,MAAAD,QAAA,mBAAAqc,QAAkE,GAClE,CAAAxc,KAAA,WAAAI,GAAA,WAAAD,QAA4C,YAAAqc,QAAA,GAC5C,CACAxc,KAAA,WACAI,GAAM,WACND,QAAM,uBAENqc,QAAa,GAGf,CACExc,KAAO,WACRI,GAAA,WAEDD,QAAA,qBACKqc,QAAA,GAEL,CAAAxc,KAAA,WAAeI,GAAA,WAAAD,QAAA,gBAAAqc,QAAA,GACf,CAAAxc,KAAQ,WAAAI,GAAA,WAAAD,QAAA,iBAAAqc,QAAA,GACR,CAAAxc,KAAA,WAAAI,GAAA,WAAAD,QAAyC,gBAAAqc,QAAA,GAClC,CAAAxc,KAAS,SAAAI,GAAiB,MAAUD,QAAA,iBAAAqc,QAAA,GACzC,CAAAxc,KAAM,UAAcI,GAAA,MAAYD,QAAO,kBAAAqc,QAAA,GACvC,CAAAxc,KAAQ,UAASI,GAAM,MAAOD,QAAE,kBAAAqc,QAAA,SAC1B,SAAUpc,GAAG,MAAQD,QAAO,cAAQqc,QAAA,IACzCxc,KAAA,SAAAI,GAAA,MAAAD,QAAA,eAAAqc,QAAA,GAED,CAAAxc,KAAO,SAAGI,GAAW,MAAOD,QAAU,eAACqc,QAAA,GACvC,CAAAxc,KAAO,UAAEI,GAAA,MAAAD,QAAA,gBAAAqc,QAAA,SACP,UAAWpc,GAAA,MAAAD,QAAA,gBAAAqc,QAAA,IACZxc,KAAA,SAAAI,GAAA,MAAAD,QAAA,cAAAqc,QAAA,GAED,CAAAxc,KAAI,SAAQI,GAAA,MAAAD,QAAA,cAAAqc,QAAA,SACP,UAAWpc,GAAI,MAAMD,QAAQ,eAAAqc,QAAA,IACjCxc,KAAA,UAAAI,GAAA,MAAAD,QAAA,eAAAqc,QAAA,SAAM,SAAApc,GAAA,MAAAD,QAAA,gBAAAqc,QAAA,SACF,SAAWpc,GAAA,MAAWD,QAAO,cAAAqc,QAAA,IACjCxc,KAAA,SAAAI,GAAA,MAAAD,QAAA,eAAAqc,QAAA,GAED,CAAAxc,KAAM,SAAQI,GAAA,MAAAD,QAA0B,eAAOqc,QAAA,MAEhC,wBACP,cAIWssF,EAAoBC,GAWvC,OAVQL,IAAeG,EAAQ,SAAAhkF,YAC3BuV,OAAUvV,EAAM1kB,UAAA4oG,IACVvsF,UAWL,SAASouB,EAAA/U,GACd,OAAMA,EAAMlb,OAAGquF,YAUbppG,EAAiB6+E,OACjBwqB,EAA6B,IAAtBxqB,EAAA/1E,QAAW,MACnB,IAAA+1E,EAAA/1E,QAAA,SAEG+1E,GAAAwqB,EAAA,cAAAxqB,OAEFyqB,EAAAC,EAAc1qB,EAAK,cACpByqB,EAEG,OAAMA,EAGTA,EADCD,EACD,CAAAjpG,KAAAy+E,EAAAr+E,GAAA,OAKU,CAAAJ,KAAkB,MAAAI,GAACq+E,OAE5B2qB,EAAO,sBAAK59D,KAAAizC,MACb2qB,EAAA,CAEK,IAAI9yF,EAAG8yF,EAAA,GACNC,EAAKp8F,SAAYm8F,EAAK,OAC7B78F,EAAAo8F,EAAAryF,mCCzKF4yF,EAAA/oG,SAAAkpG,EAAA,IAAA98F,EAAApM,QAEa+oG,EAAA1sF,QAAoBjQ,EAAAiQ,QACzB6sF,EAAc,IAClBH,EAAA/oG,SAAkB,WAKlB+oG,EAAA/oG,QAAA+oG,EAAelpG,KAAA,OAAAkpG,EAAA9oG,GACf8oG,EAAArpG,SAAA,SAEAqpG,WAEAxvE,EAAmB3Y,OACnB8D,EAAAskF,EAAepoF,EAAA/gB,KAAAyH,WAAA,OAAAsZ,EAAA3gB,GAAAqH,eACfod,EACA,OAAAA,EAAA1kB,WAEAL,OAAA8nG,EAAoB,EAApB9nG,CAAoBihB,EAAA/gB,OAAAF,OAAA8nG,EAAA,EAAA9nG,CAAAihB,EAAA3gB,IACpB,OAAAwqC,EAAa7pB,EAAA/gB,MAAA,OAAA4qC,EAAA7pB,EAAA3gB,OAEbN,OAAA8nG,EAAe,EAAf9nG,CAAeihB,EAAA/gB,MAAA,CACf,IAAAspG,EAAeppG,EAAA6gB,EAAA3gB,IAAA,GACf,OAAAkpG,EAAA1+D,EAAmB7pB,EAAA/gB,MAAA,OAAAspG,EAAA7+B,UAAA,MAEnB3qE,OAAA8nG,EAAc,EAAd9nG,CAAcihB,EAAA3gB,IAAA,CACd,IAAAJ,EAAAE,EAAc6gB,EAAA/gB,MAAA,GACd,OAAAA,IAAeyqE,UAAA,OAAA7/B,EAAA7pB,EAAA3gB,IAAA,SAEF,QAAb2gB,EAAA3gB,GAAAqH,WACA7H,EAAcmhB,EAAA/gB,MACdG,QAEA4gB,EAAA/gB,KAAayH,WAAA,OAAAsZ,EAAA3gB,GAAAqH,eDmFPohG,EAAiB,SAAE15F,KACrBA,EAAMnP,KAAA,OAAAmP,EAAA/O,IAAA+O,UClFV,SAAgBhM,UACG,IAAnBA,EAAAuF,QAAA,MAAmB,IAAAvF,EAAAuF,QAAA,QAIJ,IADf9I,EAAgBuD,GAChBtD,WAKA,kBC5CE,CAAKuD,MAAwB,SAAA0F,QD+F/B,CACA,iBACA,eACA,iBACA,gBACA,eACA,oBACA,eACA,kBACA,sBACA,cACA,kBACA,eACA,gBACA,kBACA,iBACA,kBACA,kBACA,iBACA,eACA,oBClHE,CAAE1F,MAAA,UAAiB0F,QDiNrB,CACA,eACA,oBACA,oBACA,iCACA,8BACA,4BACA,0BACA,6BACA,4BACA,iCACA,0BACA,6BACA,6BACA,4BACA,4BACA,mBACA,mBACA,gBACA,yBACA,mBACA,gBACA,iBACA,uBACA,oBACA,iBACA,gBACA,wBACA,uBACA,iBACA,kBACA,kBACA,kBACA,oBACA,qBACA,kBACA,iBACA,kBACA,uBACA,iBACA,uBACA,iBACA,kBACA,mBACA,mBACA,sBACA,sBACA,oBACA,oBACA,kBACA,oBACA,qBACA,oBACA,oBACA,iBACA,kBACA,iBACA,qBACA,+BACA,uBACA,0BACA,6BACA,4BACA,wBACA,4BACA,0BACA,iBACA,kBACA,kBACA,iBACA,8BACA,8BACA,iBACA,eACA,sBACA,iBACA,kBACA,iBACA,qBACA,oBACA,mBACA,oBACA,iBACA,qBACA,sBACA,mBACA,kBACA,oBAEI,qBACJ,iBACA,mBACA,kBACA,eACA,kBACA,8BACA,8BACA,iCACA,kBACA,iBACA,sBACA,qBACA,kBACA,yBACA,wBACA,sBACA,sBACA,uBACA,sBACA,uBACA,iBACA,iBACA,mBACA,qBACA,mBACA,mBACA,wBACA,oBACA,uBACA,gBACA,mBACA,wBACA,sBACA,gBACA,sBACA,kBACA,kBAEI,oBACJ,qBACA,mBACA,kBACA,wBCpVF,CAAA1F,MAAY,aAAA0F,QDoMO,CACjB,mBACA,mBACA,4BACA,uBACA,oBACA,oBACA,qBACA,mBACA,mBACA,sBC7MA,CAAA1F,MAAA,OAAY0F,QDkHZ,CACA,cACA,aACA,cACA,aACA,cACA,gBACA,cACA,eACA,YACA,eACA,eACA,cACA,eACA,cACA,aACA,kBACA,eACA,gBACA,aACA,YACA,aACA,gBACA,iBACA,YACA,cACA,mBACA,iBACA,YACA,eACA,eACA,gBACA,iBACA,aACA,iBAEI,eACJ,iBACA,gBACA,eACA,mBACA,oBACA,eACA,aACA,eACA,gBACA,cACA,eAEI,oBACJ,mBACA,YACA,YACA,iBACA,iBACA,aACA,gBACA,iBACA,cACA,gBACA,iBACA,aACA,gBACA,iBACA,qBACA,cACA,gBACA,eACA,cACA,eACA,aACA,aACA,mBACA,cACA,gBACA,mBACA,eACA,cACA,qBACA,wBChME,WAAWA,QCNjB,wDACuC,sBACE,iBACR,mBACL,qBACG,qDDEzB,YAAWA,QD4XJ,CACT,qBACF,gEErYF,iKDQK1F,MAAA,SAAA0F,QDuCD,CACA,mBACA,iBACA,mBAEI,gBACJ,kBACA,gBACA,kBACA,mBACA,kBACA,kBACA,oBACA,gBACA,mBACA,kBACA,kBACA,qBACA,cACA,eACA,gBACA,gBACA,oBACA,gBACA,eACA,eACA,gBAEI,gBACJ,cACA,eACA,gBACA,cACA,cACA,gBACA,iBACA,oBACA,eACA,mBACA,iBACA,gBACA,mBACA,kBACA,gBACA,iBACA,mBACA,gBACA,oBACA,kBCtFA,CAAA1F,MAAM,SAAA0F,2JACA,UAAQA,QDgVd,CACA,eACA,mBACA,uBACA,kBACA,gBACA,iBACA,gBAEI,oBACJ,kBACA,eACA,mBACA,oBACA,kBACA,sBACA,eACA,mBACA,qBACA,iBAEI,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AAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,gBAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,UAAA,OACAC,aAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,UAAA,OACAC,aAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,YAAA,OACAC,eAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,sCAGAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,QAAA,OACAC,WAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,UAAA,OACAC,aAAA,OACAC,QAAA,OACAC,WAAA,OACAC,OAAA,OACAC,UAAA,OACAC,QAAA,OACAC,WAAA,wHCnRAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,wSCKA,SAAAC,EAAoB9e,OAClBvlH,EAAAskI,EAAa/e,UACbloH,EAAA2C,YAEAskI,EAAW/e,OACXloH,EAAAwgC,EAAAt5B,EAAaghH,GAAA,KACb1pF,EAAA,IAAAtiB,MAAA,uBAAiBgsG,EAAA,aACjBh6B,KAAA,mBACA1vD,EAGF,OAAMt3B,EAAAghH,KAEJl9G,KAAA,kBACAhH,OAAAgH,KAAA9D,MAEA84E,QAACinD,IACDl+H,QAAAi+H,IACArkI,GAAA,QAKAukI,cACSv+H,EAAGI,OAGZP,EAAI,8DAEHE,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,EADC,6iJACaA,UAId,SAAAG,EAAAzI,EAAAF,0BAGQA,EAAqB,QAIzBqD,EAASrD,EAA6B,kBAOpCmnI,KACE,cACR,gBAAM,cACE,YACR,YACFA,EAAA,gBAEMA,EAAS,OAAe,SAC7BA,EAAmB,+BACVA,EAAG,aACXC,EAAA,IAEoBD,EAAME,MAAA,UACVF,EAAMG,OAAY,SAClCH,EAAAI,MAAA,SAAmBJ,EAAQK,KAAO,QACjCL,EAAkBM,MAAA,OACXN,EAAkBO,QAAS,KACnCP,EAAAQ,QAAA,IAAmBR,EAAQS,aAAS,iBAEnCC,EAAO35H,EAAciU,EAAOM,UAC7B,OAAAvU,EAAU,GAETlJ,KAAA08B,IAAOxzB,GAAA,IACRw5C,EAAAx5C,EAAAiU,GAAA,MACCnd,KAAA08B,IAAAxzB,GAAA,IACO45H,EAAc55H,EAAO,IAAAiU,EAAUM,EAAU,EAAc,OAGzDzd,KAAA08B,IAAAxzB,GAAkB,IAC1B45H,EAAA55H,EAAA,IAAAiU,EAAAM,EAAA,SAGKzd,KAAM08B,IAAKxzB,GAAQ,KACd45H,EAAS55H,EAAO,IAAAiU,EAAAM,EAAA,QAG1BqlH,EAAA55H,EAAA,KAAAiU,EAAAM,EAAA,oBAIGslH,EAAU75H,EAAAiU,EAAAM,UACX,OAAAvU,EAED,GAEElJ,KAAA08B,IAAOxzB,GAAA,IACRw5C,EAAAx5C,EAAAiU,GAAA,MAEQnd,KAAI08B,IAAKxzB,GAAQ,IACjB45H,EAAc55H,EAAO,IAAKiU,EAAUM,EAAa,SAGjDqlH,EAAe55H,EAAA,IAAAiU,EAAAM,EAAA,iBAIpBulH,EAAc95H,EAAOiU,EAAAM,UAChB,OAAPvU,EACD,GACClJ,KAAA08B,IAAAxzB,GAAA,IACOw5C,EAAAx5C,EAAciU,GAAW,MACvBnd,KAAK08B,IAAIxzB,GAAQ,IAEnB45H,EAAc55H,EAAO,IAAMiU,EAAUM,EAAgB,EAAG,MACtDzd,KAAK08B,IAAIxzB,GAAQ,KAEnB45H,EAAc55H,EAAO,IAAOiU,EAAUM,EAAgB,EAAG,QACvDzd,KAAK08B,IAAIxzB,GAAQ,MAEnB45H,EAAc55H,EAAO,KAAQiU,EAAUM,EAAiB,EAAE,SAG5Dzd,KAAA08B,IAAAxzB,GAAkB,QAGX45H,EAAwB55H,EAAyB,MAAAiU,EAA6BM,EAAA,UAE1FqlH,EAAU55H,EAAA,QAAAiU,EAAAM,EAAA,qBAGRwlH,EAAcC,EAAOC,MACvBD,eAAwCC,EACzC,OAAAD,EAAAC,WAEMC,EAASl6H,EAAIiU,EAAaM,UACxB,OAAPvU,EACD,GAEAlJ,KAAA08B,IAAAxzB,GAAA,KAAM45H,EAAA,IAAA55H,EAAAiU,EAAA8lH,EAAAxlH,EAAAN,IAAA,SAGRnd,KAAA08B,IAAAxzB,GAAA,KAEe45H,EAA+C,IAAzB55H,EAAyBiU,EAA6B8lH,EAAAxlH,EAAAN,IAAA,SAGzFnd,KAAA08B,IAAAxzB,GAAA,EAEQ45H,EAAgB,IAAA55H,EAAAiU,EAAA8lH,EAAAxlH,EAAAN,IAAA,SAExBnd,KAAA08B,IAAAxzB,GAAA,GAAUw5C,EAASx5C,EAAKiU,GAAQ,KAEhCnd,KAAA08B,IAAAxzB,GAAA,KACQ45H,EAAc55H,EAAO,GAAGiU,EAAUM,EAAgB,EAAG,QACvDzd,KAAA08B,IAAAxzB,GAAA,MAEN45H,EAAA55H,EAAA,KAAAiU,EAAAM,EAAA,WAGazd,KAAO08B,IAAcxzB,GAAuB,OAEjD45H,EAAG55H,EAAA,MAAAiU,EAAAM,EAAA,UAGHzd,KAAI08B,IAAKxzB,GAAM,QAEvB45H,EAAA55H,EAAA,OAAAiU,EAAAM,EAAA,WACCqlH,EAAO55H,EAAc,SAAUiU,EAAUM,EAAmB,oBACvD4lH,EAAAn6H,EAAAiU,EAAAM,UACE,OAAPvU,EACD,GAGIlJ,KAAS08B,IAAAxzB,GAAuB,GAC7Bw5C,EAAWx5C,EAAAiU,GAAA,OAElBnd,KAAA08B,IAAAxzB,GAAA,KAEO45H,EAAQ55H,EAAA,GAAAiU,EAAAM,EAAA,WAEfzd,KAAA08B,IAAAxzB,GAAA,MAEU45H,EAAG55H,EAAA,KAAAiU,EAAAM,EAAA,UAEbzd,KAAA08B,IAAAxzB,GAAA,OAEU45H,EAAG55H,EAAA,MAAAiU,EAAAM,EAAA,WAGNqlH,EAAe55H,EAAE,OAAAiU,EAAAM,EAAA,oBAGvB6lH,EAAQp6H,EAAAiU,EAAiBM,UACjB,OAARvU,EACM,GAGRlJ,KAAA08B,IAAAxzB,GAAA,GACAw5C,EAAAx5C,EAAAiU,GAAA,QAGMnd,KAAU08B,IAAGxzB,GAAA,IAEnB45H,EAAA55H,EAAA,GAAAiU,EAAAM,EAAmD,UAE/Czd,KAAA08B,IAAaxzB,GAAK,KAElB45H,EAAqB55H,EAAA,IAAQiU,EAAcM,EAAE,WAIvCqlH,EAAe55H,EAAO,KAAIiU,EAAAM,EAAyB,oBAG3D8lH,EAAIr6H,EAAUiU,EAAIM,UAChB,SACA,QAEAif,IAAAxzB,GAAa,EACbw5C,EAAWx5C,EAAGiU,GAAS,OAExBnd,KAAA08B,IAAAxzB,GAAA,IACF45H,EAAA55H,EAAA,EAAAiU,EAAAM,EAAA,WAKaqlH,EAAsB55H,EAAuB,IAAAiU,EAAAM,EAAA,oBAG1D+lH,EAAAt6H,EAAAiU,EAAAsmH,GAED,GAAa,OAAbv6H,EACI,MAAO,MAEV,IAAAA,EAED,WAAau6H,EAAA,OAEXv6H,EAAI,EACJ,OAAIs6H,GAAct6H,EAAEiU,EAAAsmH,GAAA,aAEnB,CACD,CAAAC,KAAOvB,EAAAE,MACR,CAAAqB,KAAAvB,EAAAG,OAED,CAAAoB,KAAWvB,EAAAI,MACP,CAAAmB,KAAOvB,EAASK,KAClB,CAAAkB,KAAIvB,EAASM,MACb,CAAAiB,KAAIvB,EAAaO,cACfP,EAASQ,SACVe,KAAAvB,EAAAS,iBAGkB,IAAnBe,EAAOF,OACR7Y,EAAA,GAIKgZ,GAAuB,EAEzBC,EAAgB,EACN,OAAZ1mH,QAAYpW,IAAAoW,IACb0mH,EAAA1mH,OACC,IAAAjW,EAAS,EAAAA,EAAOogG,EAACrhG,QAAA49H,GAAA,EAAA38H,IAAA,CAClB,IAAA0mD,EAAA,IAAA+1E,EAAAr8B,EAAApgG,GAAAw8H,MAAMrhI,EAAI6G,EAAc0kD,EACvB,GAAAvrD,GAAS,GAAAuhI,EAAc,CACxBA,GAAA,EAEM,IAAA71H,EAAY/N,KAAK+N,MAAI1L,GAC7BmT,EAAA8xF,EAAApgG,GAAAw8H,MAAA,IAAA31H,EAAA,QAEe68G,EAAAl6G,KAAA3C,EAAwB,IAAayH,GAC5CtM,GAAe0kD,EACvBi2E,KAIA,OAAAjZ,EAAArjH,KAAA,eAGKu8H,EAAQ56H,EAAEiU,MACL,OAAPjU,EACD,SAGD,GAAMA,EAAA,IACA,OAAAlK,OAAaX,EAAY,MAAzBW,CAAyBkK,GAAO2Q,OAAQ,aAG9C,GAAA3Q,EAAU,IAAO,CACjB,IAAO66H,EAAY,kBAKpB,OAJA,IAAA5mH,IAEe4mH,EAAY,SAE3B/kI,OAAAX,EAAA,MAAAW,CAAAkK,GAAA2Q,OAAAkqH,GAIA,GAAA76H,EAAA,MAEM,IAAS86H,EAAc,wBAS3B,OARkB,IAAZ7mH,EACR6mH,EAAA,QAGsB,IAAR7mH,IAET6mH,EAAA,eAEHhlI,OAAAX,EAAA,MAAAW,CAAAkK,GAAA2Q,OAAAmqH,GAEF,IAAAnqH,EAAA,wBAEMysB,GAAS,IAAatmC,KAAa+N,MAAE/O,OAAwBX,EAA8B,WAAtDW,CAAqEkK,EAAA,gBAAA+6H,YAAAl5F,OAAA,OAYhH,OAXoB,IAAb5tB,EAEFtD,EAAA,GAEH,IAAAsD,EACDtD,EAAY,QAGkB,IAAhBsD,IACRtD,EAAO,eAEdA,EAAAysB,EAAA,IAAAtnC,OAAAX,EAAA,MAAAW,CAAAkK,GAAA2Q,UAAAysB,kBC1UwC,OAAAk9F,EAAAt6H,EAAAiU,EAAAglH,EAAAS,sBAGnCsB,EAAeh7H,EAAAiU,UACjBqmH,EAAUt6H,EAAAiU,EAAAglH,EAAAQ,iBAEZwB,EAAqCj7H,GACtC,GAAAA,EAAA,EAEM,OAASi7H,GAAkDj7H,GAAA,WAE9D0hH,EAAU,GACXwZ,EAAApkI,KAAA+N,MAAA7E,EAAA,MACDm7H,EAAerkI,KAAM+N,MAAM7E,EAAS,KAAO,IAC5Co7H,EAAAtkI,KAAA+N,MAAA7E,EAAA,gBAEMk7H,EAAS,EAAQxZ,EAAel6G,KAAsB,GAAA0zH,GAAAxZ,EAAAl6G,KAAA,IAAA0zH,GAC3DC,EAAa,EAAIzZ,EAAEl6G,KAAA,GAAA2zH,GAAAzZ,EAAAl6G,KAAA,IAAA2zH,KACR,EAACzZ,EAAAl6G,KAAA,GAAA4zH,GAAA1Z,EAAAl6G,KAAA,IAAA4zH,GACX1Z,EAAArjH,KAAA,cAEGg9H,EAAUr7H,EAASiU,EAAMM,UAC3B2lH,EAAYl6H,EAAG,IAAUiU,EAAUM,YAErC+mH,EAAwBt7H,EAAAiU,GACzB,OAAA2mH,EAAA56H,EAAAiU,YAGKsnH,EAAev7H,EAAAiU,UACjB2mH,EAAU,IAAA56H,EAAAiU,YAEZunH,EAAkBriI,EAAQ8a,EAAOM,EAAUknH,SACxCA,EAAY3lI,OAAAX,EAAA,MAAAW,CAAAqD,GAAArD,OAAAX,EAAA,SAAAW,CAAAqD,iBACZhE,EAAc,YAAAumI,OAAAviI,EAAA,OAClBiS,EAAAuF,OAAA,YAGKvF,EAAKuF,OAAU,gCAElBgrH,EAAAxiI,EAAA8a,EAAAM,EAAAknH,GACD,IAAArwH,EAAOqwH,EAAM3lI,OAAaX,EAAqB,MAAlCW,CAAkCqD,GAAArD,OAAAX,EAAA,SAAAW,CAAAqD,GAChD,OAAArD,OAAAX,EAAA,SAAAW,GAAA4lI,OAAAviI,EAAA,6BCzC4CiS,EAAAuF,OAAA,iCAGrCirH,EAAgBziI,EAAO8a,EAAUM,EAAAknH,GAEvC,OADYA,EAAG3lI,OAAYX,EAAY,MAAxBW,CAAyBqD,GAAArD,OAAAX,EAAA,SAAAW,CAAAqD,IACjCsnE,mBAKLo7D,EAAO77H,EAASiU,GAClB,OAAE,OAAAjU,EACH,GAE4Cw5C,EAAAx5C,EAAAiU,GAAA,aAErC6nH,EAAQ97H,EAAaiU,UAClB,OAAPjU,EACC,GAEJw5C,EAAA,IAAAx5C,EAAAiU,GAAA,aAE6C8nH,EAAA5iI,EAAA8a,GAC5C,GAAY,MAAR9a,EACJ,MAAW,OAET6iI,EAAUC,EAAO9iI,EAAK8a,GACxB,MAAG,MAAA+nH,EAAAjsE,UAAA,KACI,MAAYisE,EAAMjsE,UAAO,UC9B+E,SAAAksE,EAAA9iI,EAAA8a,GAkBnF,aAAA9a,EACyD,GAG1EqpH,WAAgBhpE,EAAArgD,EAA6B8a,IACxDxW,SAAA,IACE8rC,yBAEEpwC,EAAQ8a,UACR,aAGEioH,cAAejoH,cAKX49B,SAEJsqF,EAAM,IADN,IAAM,kCAEAn8H,EAAAiU,EAAAM,MACA,OAARvU,EACD,SAEH,IAAAo8H,EAAAC,EAAAr8H,EAAAiU,EAAAM,GACE,OAAMs9B,EAAAuqF,cAGI9vH,EAAAkN,eACF,QAAUA,EAAM,GAKxB2iH,EAAS,KAJR,6CAAAt6F,MAAAroB,GACFxgB,IAAA,SAAAolC,GACD,UAAAA,EAAA9xB,gBAIYA,EAAWkN,QACb,QAAWA,EAAM,SACjB,CAAE,YAAe,GAAI,QAAU,IAAI,QAAW,IAAC,IAAS,YAKhE2iH,EAAY,OAJRG,EAAMz6F,MAAA,GAAeroB,GAAI,KAC5BxgB,IAAA,SAAAolC,GACF,UAAAA,EAAA9xB,WAUO,WAAa,aAEf,eACA,CACF,CAAE1P,KAAM,OAAAnI,GAAW,OAAI6rD,GAAQ9G,GAC/B,CACE58C,KAAM,QACNnI,GAAM,QACN6rD,GAAM67E,EAAW,IAAI,IAAQ,KAAM,cAAgB,OAAQ,SAAM,4BAEpE,CAAAv/H,KAAA,kBAAAnI,GAAA,UAAA6rD,GAAAu7E,GACF,CAAAj/H,KAAA,oBAAAnI,GAAA,cAAA6rD,GAAAw7E,GACD,CAAAl/H,KAAA,gBAAAnI,GAAA,WAAA6rD,GAAAi8E,EAAA,OACM,CAAE3/H,KAAA,UAAenI,GAAA,KAAA6rD,GAAAi8E,EAAA,OACrB,CAAA3/H,KAAS,mBAAAnI,GAAA,QAAA6rD,GAAAy7E,GACP,CAAEn/H,KAAM,cAAAnI,GAAA,MAAyB6rD,GAAI27E,GACrC,CAAEr/H,KAAM,sBAAAnI,GAA2B,MAAI6rD,GAAAk8E,GACvC,CAAE5/H,KAAM,gBAAAnI,GAAA,SAAA6rD,GAAkCm8E,WAIxC,uBACA,CACF,CAAE7/H,KAAM,cAAAnI,GAAA,SAA6B6rD,GAAIi8E,EAAY,WACrD,CAAE3/H,KAAM,YAAAnI,GAAA,SAAA6rD,GAAAi8E,EAA2C,WACnD,CAAE3/H,KAAM,SAAAnI,GAAA,OAAA6rD,GAAAi8E,EAAsC,SAIlD3/H,KAAA,QACE8/H,QAAM,CACN,CAAA9/H,KAAS,cAAAnI,GAAA,SAAA6rD,GAAAi8E,EAAA,MACP,CAAE3/H,KAAM,UAAAnI,GAAe,SAAI6rD,GAAAi8E,EAAmB,QAC9C,CAAE3/H,KAAM,UAAAnI,GAAc,OAAI6rD,GAAAi8E,EAAmB,SAC7C,CAAE3/H,KAAM,cAAcnI,GAAE,SAAa6rD,GAAIi8E,EAAW,WACpD,CAAE3/H,KAAM,cAAenI,GAAA,SAAa6rD,GAAIi8E,EAAW,mBAIjD,eACA,CACF,CAAE3/H,KAAM,qBAAsBnI,GAAI,SAAE6rD,GAAAi8E,EAAmB,OACvD,CAAE3/H,KAAM,oBAAoBnI,GAAI,SAAE6rD,GAAai8E,EAAM,QACrD,CAAE3/H,KAAM,qBAAsBnI,GAAI,UAAA6rD,GAAei8E,EAAY,gBAI3D,sBACH,CACF,CAAA3/H,KAAA,SAAAnI,GAAA,QAAA6rD,GAAAq8E,EAAA,WACD,CAAA//H,KAAA,UAAAnI,GAAA,SAAA6rD,GAAAq8E,EAAA,aACM,CAAE//H,KAAA,UAAYnI,GAAA,SAAA6rD,GAAAq8E,EAAA,aAClB,CAAA//H,KAAS,UAAAnI,GAAA,SAAA6rD,GAAAq8E,EAAA,aACP,CAAE//H,KAAM,UAAUnI,GAAE,SAAY6rD,GAAAq8E,EAAqB,aACrD,CAAE//H,KAAM,UAAWnI,GAAE,SAAW6rD,GAAEq8E,EAAmB,SAAE,IACvD,CAAE//H,KAAM,UAAWnI,GAAI,SAAU6rD,GAAIq8E,EAAgB,SAAU,IAC/D,CAAE//H,KAAM,UAAWnI,GAAI,SAAU6rD,GAAIq8E,EAAgB,SAAU,YAIhE,gBACFD,QAAA,CACD,CAAA9/H,KAAA,0BAAAnI,GAAA,MAAA6rD,GAAAi8E,EAAA,QACM,CAAE3/H,KAAA,0BAAenI,GAAA,SAAA6rD,GAAAi8E,EAAA,QACrB,CAAA3/H,KAAS,mCAAAnI,GAAA,UAAA6rD,GAAAi8E,EAAA,UACP,CAAE3/H,KAAM,2CAA2CnI,GAAI,WAAE6rD,GAAAi8E,EAAA,WACzD,CAAE3/H,KAAM,oCAA6BnI,GAAA,UAAsB6rD,GAAAi8E,EAAA,UAC3D,CAAE3/H,KAAM,4CAAkCnI,GAAe,WAAU6rD,GAAAi8E,EAAA,WACnE,CAAE3/H,KAAM,oCAAkCnI,GAAA,UAAgB6rD,GAAMi8E,EAAG,UACnE,CAAE3/H,KAAM,4CAAkCnI,GAAe,WAAU6rD,GAAAi8E,EAAA,WACnE,CAAE3/H,KAAM,8BAA8BnI,GAAI,SAAA6rD,GAAei8E,EAAU,SACnE,CAAE3/H,KAAM,sCAAkCnI,GAAA,UAAmB6rD,GAAIi8E,EAAE,UACpE,CAAA3/H,KAAA,mCAAAnI,GAAA,UAAA6rD,GAAAi8E,EAAA,UACF,CAAA3/H,KAAA,gCAAAnI,GAAA,WAAA6rD,GAAAi8E,EAAA,mBAIK,mBACA,CACF,CAAE3/H,KAAM,cAAenI,GAAE,cAAW6rD,GAAAs8E,EAAgB,MACpD,CAAEhgI,KAAM,aAAAnI,GAAiB,cAAe6rD,GAAAs8E,EAAA,MACxC,CAAEhgI,KAAM,WAAAnI,GAAgB,cAAe6rD,GAAEs8E,EAAA,MACzC,CAAEhgI,KAAM,UAAAnI,GAAe,cAAe6rD,GAAEs8E,EAAA,MACxC,CAAEhgI,KAAM,aAAcnI,GAAI,cAAe6rD,GAAAs8E,EAAA,MACzC,CAAEhgI,KAAM,eAAenI,GAAI,cAAa6rD,GAAAs8E,EAAgB,MACxD,CAAEhgI,KAAM,YAAAnI,GAAgB,cAAe6rD,GAAEs8E,EAAA,OACzC,CAAEhgI,KAAM,oBAAqBnI,GAAA,cAAW6rD,GAAAs8E,EAAoB,OAC5D,CAAEhgI,KAAM,uBAAoBnI,GAAO,cAAM6rD,GAAAs8E,EAAuB,OAChE,CAAEhgI,KAAM,uBAAqBnI,GAAO,cAAI6rD,GAAes8E,EAAS,OAChE,CAAEhgI,KAAM,qBAAoBnI,GAAA,cAAa6rD,GAAAs8E,EAAqB,OAC/D,CAAAhgI,KAAA,qBAAAnI,GAAA,cAAA6rD,GAAAs8E,EAAA,QACF,CAAAhgI,KAAA,oBAAAnI,GAAA,cAAA6rD,GAAAs8E,EAAA,QACD,CAAAhgI,KAAA,qBAAAnI,GAAA,cAAA6rD,GAAAs8E,EAAA,QACM,CAAEhgI,KAAA,cAAanI,GAAA,cAAA6rD,GAAAs8E,EAAA,MACnB,CAAAhgI,KAAS,yBAAAnI,GAAA,cAAA6rD,GAAAs8E,EAAA,cAIR,aACFF,QAAA,CACD,CAAA9/H,KAAA,OAAAnI,GAAA,OAAA6rD,GAAAu8E,EAAA,MACM,CAAEjgI,KAAA,QAAQnI,GAAA,QAAA6rD,GAAAu8E,EAAA,MACd,CAAAjgI,KAAS,YAAAnI,GAAA,SAAA6rD,GAAAu8E,EAAA,QACP,CAAEjgI,KAAM,YAAYnI,GAAI,SAAU6rD,GAAEu8E,EAAgB,IAAM,IAC1D,CAAEjgI,KAAM,YAAAnI,GAAiB,SAAI6rD,GAASu8E,EAAI,IAAgB,IAC1D,CAAEjgI,KAAM,YAAAnI,GAAgB,SAAM6rD,GAASu8E,EAAI,IAAgB,IAC3D,CAAEjgI,KAAM,YAAAnI,GAAA,SAAA6rD,GAA8Bu8E,EAAe,IAAE,YAIrD,wBACA,CACF,CAAEjgI,KAAM,OAAAnI,GAAA,UAAuB6rD,GAAIq8E,EAAc,MACjD,CAAE//H,KAAM,QAAAnI,GAAA,WAAwB6rD,GAAEq8E,EAAc,MAChD,CAAE//H,KAAM,YAAAnI,GAAA,YAA8B6rD,GAAIq8E,EAAE,IAAgB,IAC5D,CAAE//H,KAAM,YAAanI,GAAI,YAAa6rD,GAAAq8E,EAAoB,IAAE,IAC5D,CAAE//H,KAAM,YAAAnI,GAAA,YAA8B6rD,GAAIq8E,EAAE,IAAgB,IAC5D,CAAE//H,KAAM,YAAYnI,GAAI,YAAa6rD,GAAAq8E,EAAoB,IAAE,IAC3D,CAAE//H,KAAM,YAAAnI,GAAiB,YAAY6rD,GAAIq8E,EAAiB,IAAI,YAI5D,oBACA,CACF,CAAE//H,KAAM,cAAenI,GAAA,MAAW6rD,GAAAq8E,EAAoB,QACtD,CAAE//H,KAAM,WAAAnI,GAAe,MAAI6rD,GAAQq8E,EAAM,QAC1C,CAAA//H,KAAA,YAAAnI,GAAA,MAAA6rD,GAAAq8E,EAAA,OACF,CAAA//H,KAAA,gBAAAnI,GAAA,MAAA6rD,GAAAq8E,EAAA,SACD,CAAA//H,KAAA,eAAAnI,GAAA,QAAA6rD,GAAAq8E,EAAA,UACM,CAAE//H,KAAM,gBAAAnI,GAAA,MAAA6rD,GAAAq8E,EAAA,SACZ,CAAA//H,KAAS,eAAAnI,GAAA,QAAA6rD,GAAAq8E,EAAA,UACP,CAAE//H,KAAM,gBAAAnI,GAAqB,MAAI6rD,GAAAq8E,EAAe,KAAY,IAC5D,CAAE//H,KAAM,eAAAnI,GAAA,QAA4B6rD,GAAEq8E,EAAe,MAAW,IAChE,CAAE//H,KAAM,gBAAAnI,GAAA,MAA4B6rD,GAAAq8E,EAAe,KAAW,IAC9D,CAAE//H,KAAM,eAAAnI,GAAA,QAA4B6rD,GAAAq8E,EAAe,MAAY,IAC/D,CAAE//H,KAAM,gBAAgBnI,GAAE,MAAU6rD,GAAIq8E,EAAY,KAAQ,IAC5D,CAAE//H,KAAM,eAAAnI,GAAmB,QAAM6rD,GAAAq8E,EAAe,MAAY,OAI/D//H,KAAA,cACD8/H,QAAA,CACM,CAAE9/H,KAAA,sBAAOnI,GAAA,gBAAA6rD,GAAAk7E,GACb,CAAA5+H,KAAS,uBAAAnI,GAAA,eAAA6rD,GAAAq7E,GACP,CAAE/+H,KAAM,WAAAnI,GAAA,kBAAmC6rD,GAAIs7E,WAIhD,SACFc,QAAA,CACD,CAAA9/H,KAAA,WAAAnI,GAAA,OAAA6rD,GAAAq8E,EAAA,MACM,CAAE//H,KAAA,gBAAWnI,GAAA,QAAA6rD,GAAAq8E,EAAA,QACjB,CAAA//H,KAAS,iBAAAnI,GAAA,QAAA6rD,GAAAq8E,EAAA,SACP,CAAE//H,KAAM,+BAA4BnI,GAAA,MAAe6rD,GAACi8E,EAAQ,SAC5D,CAAE3/H,KAAM,mBAAoBnI,GAAE,UAAW6rD,GAAAq8E,EAAqB,OAC9D,CAAE//H,KAAM,wBAAsBnI,GAAO,WAAI6rD,GAAAq8E,EAA2B,SACpE,CAAE//H,KAAM,6BAA6BnI,GAAI,eAAgB6rD,GAAKq8E,EAAM,QACpE,CAAE//H,KAAM,kCAAiCnI,GAAA,gBAAuB6rD,GAAIq8E,EAAA,UACpE,CAAE//H,KAAM,iBAAkBnI,GAAI,QAAS6rD,GAAEq8E,EAAgB,OACzD,CAAE//H,KAAM,sBAAqBnI,GAAK,SAAM6rD,GAAAq8E,EAAyB,KAAE,IACpE,CAAA//H,KAAA,qBAAAnI,GAAA,SAAA6rD,GAAAq8E,EAAA,YACF,CAAA//H,KAAA,mBAAAnI,GAAA,OAAA6rD,GAAAq8E,EAAA,OACD,CAAA//H,KAAA,YAAAnI,GAAA,QAAA6rD,GAAAq8E,EAAA,MACM,CAAE//H,KAAM,qBAAAnI,GAAA,KAAA6rD,GAAAq8E,EAAA,OACZ,CAAA//H,KAAS,aAAAnI,GAAA,MAAA6rD,GAAAq8E,EAAA,MACP,CAAE//H,KAAM,kBAAkBnI,GAAI,OAAQ6rD,GAAIq8E,EAAiB,IAAI,IAC/D,CAAE//H,KAAM,mBAAgBnI,GAAO,OAAM6rD,GAAAq8E,EAAsB,SAC3D,CAAE//H,KAAM,WAAAnI,GAAe,OAAM6rD,GAAAq8E,EAAc,MAC3C,CAAE//H,KAAM,gBAAgBnI,GAAI,QAAS6rD,GAAIq8E,EAAiB,IAAG,IAC9D,CAAA//H,KAAA,iBAAAnI,GAAA,QAAA6rD,GAAAq8E,EAAA,SACF,CAAA//H,KAAA,0BAAAnI,GAAA,MAAA6rD,GAAAq8E,EAAA,QACD,CAAA//H,KAAA,UAAAnI,GAAA,MAAA6rD,GAAAq8E,EAAA,MACM,CAAE//H,KAAA,cAAQnI,GAAA,SAAA6rD,GAAAq8E,EAAA,eAIV,eACA,CACF,CAAE//H,KAAM,oBAAiBnI,GAAA,UAAgB6rD,GAAAi8E,EAAmB,QAC7D,CAAA3/H,KAAA,yBAAAnI,GAAA,UAAA6rD,GAAAi8E,EAAA,QACF,CAAA3/H,KAAA,uBAAAnI,GAAA,UAAA6rD,GAAAi8E,EAAA,QACD,CAAA3/H,KAAA,uBAAAnI,GAAA,UAAA6rD,GAAAi8E,EAAA,QACM,CAAE3/H,KAAA,aAAUnI,GAAA,SAAA6rD,GAAAi8E,EAAA,QAChB,CAAA3/H,KAAS,oBAAAnI,GAAA,UAAA6rD,GAAAi8E,EAAA,UACP,CAAE3/H,KAAM,0BAAiBnI,GAAc,WAAM6rD,GAAAi8E,EAAqB,WAClE,CAAE3/H,KAAM,WAAYnI,GAAA,MAAA6rD,GAAei8E,EAAI,gBAIrC,gBACA,CACH,CAAA3/H,KAAA,qBAAAnI,GAAA,UAAA6rD,GAAAq8E,EAAA,OACF,CAAA//H,KAAA,0BAAAnI,GAAA,WAAA6rD,GAAAq8E,EAAA,SACD,CAAA//H,KAAA,cAAAnI,GAAA,SAAA6rD,GAAAq8E,EAAA,MACM,CAAE//H,KAAA,mBAAWnI,GAAA,UAAA6rD,GAAAq8E,EAAA,gBAIb,oBACA,CACF,CAAE//H,KAAM,aAAcnI,GAAI,KAAE6rD,GAAOq8E,EAAM,QACzC,CAAE//H,KAAM,iBAAWnI,GAAU,MAAI6rD,GAAAq8E,EAAwB,UACzD,CAAE//H,KAAM,iBAAiBnI,GAAI,MAAE6rD,GAAAq8E,EAAiB,MAAgB,IAChE,CAAE//H,KAAM,iBAAkBnI,GAAE,MAAQ6rD,GAAIq8E,EAAgB,MAAM,IAC9D,CAAE//H,KAAM,iBAAAnI,GAAqB,MAAM6rD,GAAAq8E,EAAc,MAAe,IACjE,CAAA//H,KAAA,iBAAAnI,GAAA,MAAA6rD,GAAAq8E,EAAA,UACF,CAAA//H,KAAA,gBAAAnI,GAAA,MAAA6rD,GAAAq8E,EAAA,kBAIK,eACA,CACF,CAAE//H,KAAM,iBAAkBnI,GAAA,SAAc6rD,GAAAq8E,EAAkB,SAC3D,CAAA//H,KAAA,WAAAnI,GAAA,QAAA6rD,GAAAq8E,EAAA,MACF,CAAA//H,KAAA,gBAAAnI,GAAA,SAAA6rD,GAAAq8E,EAAA,QACD,CAAA//H,KAAA,iBAAAnI,GAAA,QAAA6rD,GAAAi8E,EAAA,cAIM,iBACA,CACF,CAAE3/H,KAAM,kBAAmBnI,GAAI,WAAY6rD,GAAAq8E,EAAgB,SAC3D,CAAE//H,KAAM,YAAanI,GAAI,WAAW6rD,GAAAi8E,EAAW,OAC/C,CAAE3/H,KAAM,YAAanI,GAAI,UAAW6rD,GAAAq8E,EAAW,MAC/C,CAAE//H,KAAM,iBAAiBnI,GAAK,WAAW6rD,GAAEq8E,EAAA,QAC3C,CAAE//H,KAAM,YAAYnI,GAAI,WAAS6rD,GAAQi8E,EAAA,eAIvC,mBACA,CACF,CAAE3/H,KAAM,YAAanI,GAAI,eAAc6rD,GAAAq8E,EAAgB,WACxD,CAAA//H,KAAA,OAAAnI,GAAA,cAAA6rD,GAAAq8E,EAAA,QACF,CAAA//H,KAAA,WAAAnI,GAAA,eAAA6rD,GAAAq8E,EAAA,UACD,CAAA//H,KAAA,eAAAnI,GAAA,cAAA6rD,GAAAi8E,EAAA,QACM,CAAE3/H,KAAA,cAAYnI,GAAA,cAAA6rD,GAAAi8E,EAAA,QAClB,CAAA3/H,KAAS,oBAAAnI,GAAA,aAAA6rD,GAAAi8E,EAAA,QACP,CAAE3/H,KAAM,MAAAnI,GAAA,cAAwB6rD,GAAK67E,EAAM,WAAqB,MAAG,kBAIjE,oBACA,CACF,CAAEv/H,KAAM,iBAAkBnI,GAAI,QAAS6rD,GAAIq8E,EAAgB,OAC3D,CAAE//H,KAAM,aAAAnI,GAAiB,QAAS6rD,GAAIq8E,EAAiB,OACvD,CAAE//H,KAAM,YAAAnI,GAAiB,QAAM6rD,GAAOq8E,EAAI,OAC1C,CAAE//H,KAAM,MAAAnI,GAAA,SAAoB6rD,GAAIq8E,EAAW,QAC5C,CAAA//H,KAAA,eAAAnI,GAAA,QAAA6rD,GAAAq8E,EAAA,OACF,CAAA//H,KAAA,MAAAnI,GAAA,SAAA6rD,GAAAq8E,EAAA,QACD,CAAA//H,KAAA,kBAAAnI,GAAA,YAAA6rD,GAAAq8E,EAAA,SACM,CAAE//H,KAAA,eAAUnI,GAAA,OAAA6rD,GAAAq8E,EAAA,MAChB,CAAA//H,KAAS,sBAAAnI,GAAA,SAAA6rD,GAAAq8E,EAAA,iBAIL,sBACH,CACF,CAAA//H,KAAA,eAAAnI,GAAA,UAAA6rD,GAAAi8E,EAAA,OACD,CAAA3/H,KAAA,iBAAAnI,GAAA,YAAA6rD,GAAAi8E,EAAA,OACM,CAAE3/H,KAAA,aAAQnI,GAAA,SAAA6rD,GAAAi8E,EAAA,cAIV,eACA,CACF,CAAE3/H,KAAM,cAAAnI,GAAmB,QAAS6rD,GAAIq8E,EAAc,OACtD,CAAE//H,KAAM,mBAAenI,GAAS,KAAM6rD,GAAAq5E,GACvC,CAAA/8H,KAAA,oBAAAnI,GAAA,KAAA6rD,GAAAu5E,GACF,CAAAj9H,KAAA,oBAAAnI,GAAA,KAAA6rD,GAAAw5E,GACD,CAAAl9H,KAAA,cAAAnI,GAAA,IAAA6rD,GAAA45E,oWChV2Ct9H,KAAA,aAwB7C8/H,QAAA,CACI,CAAU9/H,KAA6B,mBAAAnI,GAAA,MAAA6rD,GAAAw8E,EAAA,QACR,CAAElgI,KAAC,gBAAAnI,GAAA,MAAA6rD,GAAAw8E,EAAA,QAClC,CAAAlgI,KAAgB,qBAAMnI,GAAA,QAAA6rD,GAAAw8E,EAAA,UAEV,CAAAlgI,KAAQ,kBAAsCnI,GAAA,MAAA6rD,GAAAw8E,EAAA,QACxD,CAAKlgI,KAAK,mBAAMnI,GAAA,MAAA6rD,GAAAw8E,EAAA,QAClB,CAAAlgI,KAAU,qBAAAnI,GAAA,OAAA6rD,GAAAw8E,EAAA,SACX,CAAAlgI,KAAA,mBAAAnI,GAAA,MAAA6rD,GAAAw8E,EAAA,QACG,CAAKlgI,KAAK,gBAAOnI,GAAA,MAAmB6rD,GAAAw8E,EAAA,QACtC,CAAAlgI,KAAO,kBAAOnI,GAAA,MAAA6rD,GAAAw8E,EAAA,QACf,CAAAlgI,KAAA,mBAAAnI,GAAA,MAAA6rD,GAAAw8E,EAAA,WAKKlgI,KAAM,WACN8/H,QAAS,CAEf,CAAA9/H,KAAA,sBAA8BnI,GAAA,aAAA6rD,GAAAi8E,EAAA,QAC1B,CAAA3/H,KAAU,yBAA4BnI,GAAA,cAAQ6rD,GAAAi8E,EAAA,SAChD,CAAA3/H,KAAO,mBAAUnI,GAAA,cAAA6rD,GAAAi8E,EAAA,QAClB,CAAA3/H,KAAA,YAAAnI,GAAA,eAAA6rD,GAAAi8E,EAAA,SAID,CACE3/H,KAAM,SACN8/H,QAAM,CACF,CAAA9/H,KAAA,kBAAsBnI,GAAA,SAAA6rD,GAAAq8E,EAAA,SACxB,CAAA//H,KAAQ,YAAYnI,GAAA,QAAY6rD,GAAAq8E,EAAmB,MACpD,CAAA//H,KAAA,cAAAnI,GAAA,KAAA6rD,GAAAi8E,EAAA,OACF,CAAA3/H,KAAA,qBAAAnI,GAAA,MAAA6rD,GAAAi8E,EAAA,QAEM,CAAA3/H,KAAS,kBAACnI,GAAA,MAAA6rD,GAAAi8E,EAAA,QAClB,CAAA3/H,KAAA,UAAAnI,GAAA,UAAA6rD,GAAAi8E,EAAA,YAYyBzqI,EAAiBC,EAAAC,EAA0B,sBAAAwnD,IAClE1nD,EAAAC,EAAAC,EAAA,sBAAA4nI,IAEqB9nI,EAAgBC,EAAAC,EAAA,sBAAAuqI,IACvCzqI,EAAAC,EAAAC,EAAA,sBAAAmqI,IAEuCrqI,EAAAC,EAAAC,EAAA,sBAAAyqI,IAChB3qI,EAAuBC,EAAAC,EAAA,sBAAA8qI,IACxBhrI,EAAAC,EAAAC,EAAA,sBAAA+qI,IACPjrI,EAAAC,EAAAC,EAAA,sBAAAgrI,IACXlrI,EAAAC,EAAAC,EAAA,sBAAAirI,IAKL,IAAAC,EAAA,GACA5oI,EAAA,GACA6oI,GAAA,EACO,SAAS3jF,EAAArgD,EAAY8a,GAC1B,GAAO,OAAP9a,EACE,MAAI,UAEHod,OAAAo+B,kBAED,MAAI,UAGJx7C,IAAOod,OAASk+B,wBACd,YAGIxgC,EAASnd,KAAO8oC,IAAA,GAAA9oC,KAAA+I,IAAA,EAAAoU,IAAA,IAClB7V,OAAWtH,KAAC6mD,MAAAxkD,EAAA6/C,UAEf,MAAAt6C,QAAA,UAAAvF,EAED,OAAI+/C,EAKN,GAAE,MAAAjlC,EAAA,CACH,IAAAsuG,EAAArpE,EAAAx6C,QAAA,KAEey6C,GAA4C,IAAtBopE,EAAsB,EAAArpE,EAAAn8C,OAAAwlH,EAAA,EACtD,GAAAppE,EAAellC,EACjB,OAAUklC,EAAAD,IAAA,KAAA96C,OAAA46C,GAAAI,OAAA,EAAAnlC,EAAAklC,GAGb,OAAAD,WAGO0gF,EAAazgI,EAAQ8a,EAAWM,EAAC6oH,EAAA/iH,GACvC,OAAM9F,QACCilC,EAACrgD,EAAc8a,GAAyBoG,EAG5Cm/B,EAAArgD,EAAAob,EAAA6oH,GAAA/iH,EAIL,SAACkiH,EAAAjwH,GAED,OAAS,SAAYtM,EAAAiU,mBACN,GAEKulC,EAAAx5C,EAAAiU,GAAA,IAAA3H,cAGf0sC,EAAAqkF,yFACFr9H,GAAAg5C,gEAKI,SAASyjF,EAAAtjI,EAAc8a,GAC5B,OAAK,MAAD9a,EACF,GAGKA,EAAMmkI,oBAAIz/H,EAAA,CAAA0/H,sBAAAtpH,IAGZ,SAAS6oH,EAAAjrF,GACd,IACEwqF,EAAAF,EAAe,IADZ,QAAe,qBAEnB,SAAAn8H,EAAAiU,EAAAM,GAED,OAAa,OAANvU,EACR,GAGMq8H,EAAer8H,EAAAiU,EAAAM,GACH,IAAAs9B,YAIf2rF,UACE9jI,EAAIspB,EAAMvW,IACVgxH,kBAEgBp/G,EAAK,EAAA6+G,GAAAQ,EAAAC,EAAA/wH,QAAA8wH,EAAA7wH,KAAA6wH,EAAAC,EAAA/wH,OAAA,OACjB8wH,EAAgBvkI,UAElB,QAAAwT,GAAAqW,OAAA,EAAA3E,EAAA,EAAAu/G,EAAAlB,UAAAlvH,EAAAb,EAAAC,QAAAY,EAAAX,KAAAW,EAAAb,EAAAC,OAAA,CACF,IAAA+D,EAAAnD,EAAArU,MACD7E,EAAAqc,EAAAlc,IAAAkc,EAAA2vC,uGCjLL,MAAA8yB,GAAAn1D,EAAA,CAAAgP,MAAAmmD,GAuDA,QAtDE,IACSsqD,IAAoBA,EAAK7wH,OAAAnT,EAAAikI,EAAAtqD,SAAA35E,EAAA/B,KAAAgmI,GAGlC,WAAA1/G,EAAA,MAAAA,EAAIgP,OAEJkwG,GAAC,WAGCJ,EAAYtoI,GAId,cAACH,EAAAG,YAGCuoI,WACAG,oCAQAD,EAAWlkI,IAAA,SAAA4kI,GACZ,OAEDnqI,KAAAmqI,EAAAhhI,KACAusD,QAAAy0E,EAAAlB,QAAA1jI,IAAA,SAAuB2X,GACb,MAAC,CACLld,KAAAkd,EAAA/T,KACKzD,MAAKwX,EAAUlc,yBAStBgG,EAAQzI,EAAMF,0BAIjB,WAED,SAAA+rI,YAEAA,EAACxlI,UAAAQ,IAAA,SAAAqF,GAED,OAAA3D,OAAAujI,aAAA5/H,IAEA2/H,EAACxlI,UAAAxE,IAAA,SAAAqK,EAAA/E,GACHoB,OAAAujI,aAAC5/H,GAAA/E,qCAEK,YAAY,IAAJo+B,GAAY3/B,KAAA6K,OAAAvE,mCACXq5B,mNC5DX,OAASwmG,GAGVF,EAAAxlI,UAAA2lI,UAAA,SAAA9/H,EAAA/E,gHCFH,IACAvB,KAAA/D,IAAAqK,EAAAgP,qGCDA2wH,EAAAxlI,UAAAoK,OAAA,SAAAvE,GACA,gBAAA3D,OAAAujI,aAAA5/H,wEH8CG,IIhDHlM,EAAA,KAMEisI,cACOxjI,EAAUI,KAQjBqjI,cACEzjI,EAAAI,EAAA/I,SAEKA,EAAuB,UAE5BgL,OAAAquD,QAAA,SAAAjtD,KACAA,MAKEigI,KACc,SAAA1jI,EAAAI,m6BClBpBujI,KAAA,SAAA3jI,EAAAI,GAAA,IAAAP,EAAY,iFAEVE,QAAAC,OAAA,MAAAC,IAAA,kBAAmB,SAAAC,KAAAC,IAAAN,EADnB,2rCAEAO,QAAAP,GAIF+jI,KACE,SAAA5jI,EAAAzI,EAAAF,oDCdA02F,EAAM,6BAHR,2ECAA5wF,KAAA0mI,kJDAAC,iHEAA,SAAAC,GACAA,EAAA,kBACAA,EAAA,kBACAA,8BAHA,8ECAAC,IAAA,oBACAA,MAAA,gGCAAlkI,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,EADA,49HAEAG,EAAAI,QAAAP,uCCDA,IAAAokI,EAAA5sI,EAAA,4NCA4DyI,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,EADiC,4jDAG7FG,EAAMI,QAAAP,GAIJqkI,KACA,SAASlkI,EAAAI,GAGX,IAAMP,EAAA,qEAEJE,QAAQC,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,EADD,osBAEPO,QAAUP,GAKNskI,KACJ,SAASnkI,EAAAI,OAETP,EAAA,wCAEAE,QAASC,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,EADH,ksDAENO,QAAAP,GAgBAukI,KAEW,SAAApkI,EAAAI,k2BC1CbikI,KACA,SAAArkI,EAAAzI,EAAAF,uNCF6C4B,KAAA,cACIg6D,QAAAqxE,EAAA,uBAAAC,SAoDjDC,EAAA,CAAkCzrI,MAAA,GAAlCC,KAAA,YAAAsrI,EA4FC,wBAAAzrB,aA3FC,4BACEyrB,EAAmB,uBAAAzrB,WAEJ,6BAGG,wBAAAtlG,kDAEQ,uBAAAA,SAEzB,SAAAxa,EAAAC,GAAA,OAAA2E,EAAA,KAAA8mI,EAAA,CAAA1rI,QAAAC,OAAAgB,GAAAyW,KAAA+rF,WACD,SAAAzjG,EAAAC,UAQF2E,EAAqD,KAAA+mI,EAAA,CAAA3rI,QAAAC,KAAAqC,OAAAspI,EAAA,EAAAtpI,CAAArC,GAAAgB,GAAAyW,KAAA+rF,2FAGnDp8F,4EACAJ,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,+kCAEFA,mBACEtI,EAAcF,gBAGDA,EAAMC,EAAAC,EAAA,sBAAAokG,oBAAb/7F,EAA6CvI,EAAA,QACnD+H,EAAqC/H,EAAAqhC,EAAA94B,4DAIhC,UAAS7C,EAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,qEAGA,YACd,gDACAynI,eAAA,wHAGA,cACE5mI,SAAA,CAAA6mI,cAAelnI,EAAU,KAAMR,KAAAC,MAAAynI,cAAyB,CAAAC,gBAAM,MAC7D,GAAAzpI,OAAAowC,EAAA,cAAApwC,GAAA8E,IAAA,qBAAAynC,SACU,EACb,gBADMzqC,KAAIa,SAAG,CAA2C6mI,cAAAlnI,EAAA,KAAAR,KAAAC,MAAAynI,cAAA,CAAAC,gBAAA,MACnD,YACL/oC,SAAA,kBAAAp+F,EAAA,EAAAV,OAAA,oBAEF,IAAAuB,2EACMqmI,cAAUlnI,EAAA,KAAAR,KAAAC,MAAAynI,cAAA,CAAA9oC,UAAA,MAEX,GAAA1gG,OAAAowC,EAAA,cAAApwC,GAAA+C,IAAA,mBACH,aACG4jB,qBACK,CAAAxjB,OAAAqmI,cAAAlnI,EAAA,KAAAR,KAAAC,MAAAynI,cAAA,CAAA9oC,SAAA,IAAA1gG,OAAAgH,KAAA7D,GAAA8D,YACJ,gCAIA,OAAA3E,EAAA,EAAAV,OAAA,mCAAC,EAAAE,KAAA,SAAA8B,gDACL4lI,cAAAlnI,EAAA,KAAAR,KAAAC,MAAAynI,cAAA,CAAAzpC,WAAA,kEAGA,yGAAK,gCAII,OAAQz9F,EAAG,EAAAV,OAAA,mCAEQ,EAAdE,KAAe,SAAA8B,sCAG1BjB,SAAC,6IACJb,KAAAa,SAAA,CAAAsnE,OAAAu/D,cAAAlnI,EAAA,KAAAR,KAAAC,MAAAynI,cAAA,CAAArpC,UAAA,kBA3DEC,WAAe,SAAC9N,GAAA,OAAAhwF,EAAA,EAAAV,OAAA,oBACjB,IAAAA,EAAAE,KACF,OAAAQ,EAAA,EAAAR,KAAA,SAAA8B,GA2DD,OAAAA,EAAAN,OACU,OAKI,OAJNxB,KAAEa,SAAA,CAEI6mI,cAAAlnI,EAAA,KAAAR,KAAAC,MAAAynI,cAAA,CAAAD,eAAA,MAEK,GAAQvpI,OAAAowC,EAAA,cAAApwC,GACPmrE,KAAS,mBAAAmnB,EAAA3+E,MAAA,IACV3Q,KAAQ,WACJyB,OAAKsoC,SAAArN,KAAiBgqG,EAAA,EAAA/gH,UAAA,aAEzCjlB,QAAA,WAEK9B,EAAAe,SAAA,CAAA6mI,cAAAlnI,EAAA,KAAAV,EAAAG,MAAGynI,cAAc,CAAAD,eAAe,SAE3C,KAAC,SA5FiC3lI,EAAA+iB,qJCpDlC,OADA7kB,KAAAa,SAAA,CAAA6mI,cAAAlnI,EAAA,KAAAR,KAAAC,MAAAynI,cAAA,CAAA3oC,mBAAA,MACA,GAAA7gG,OAAAowC,EAAA,cAAApwC,GACA8E,IAAA,YAAAynC,mLCFA,OAEA,OADA3oC,EAAA+iB,OACA,0GCFA25E,EAAA/9F,UAAAoB,OAAA,eAAAkpB,EAAA/qB,KAAAH,MAAAkrB,SAAAjpB,EAAA9B,KAAAC,MAAAynI,EAAA5lI,EAAA4lI,cAAAz1H,EAAAnQ,EAAAmQ,MAAAk2D,EAAArmE,EAAAqmE,KAAA9mE,EAAAS,EAAAT,KAAsBq9F,EAAA,CAERipC,eAAY3nI,KAAA2nI,eACxB/oC,SAAa5+F,KAAA4+F,SACTX,UAAWj+F,KAAAi+F,UACRI,SAAIr+F,KAAAq+F,SACNU,kBAAA/+F,KAAA++F,kBAEDT,WAAkBt+F,KAAAs+F,YAErB,OAAAr8F,EAAAlB,EAAAmB,cAAAD,EAAAlB,EAAAoQ,SAAA,KAAA4Z,EAAA2zE,EAAAgpC,EAAAz1H,EAAAk2D,EAAA9mE,+BAYA,SAAAwB,EAAAI,SACC,+DAEDL,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,EADC,ykEAEJG,EAACI,QAAAP,GAMMmlI,KACL,SAAOhlI,EAAWI,SAEf,8FAEAJ,OAAY,MAAEC,IAAS,CAAC,0BAAAC,KAAAC,IAAAN,EADxB,4sCAELG,EAACI,QAAAP,4xECrC2C4zB,EAAAp8B,EAAA,QAEewW,EAAAxW,EAAAqhC,EAAAjF,GAMrDylD,EAAA7hF,EAAiB,QASvB8hF,EAAA9hF,EAAAqhC,EAAAwgD,GAYE+rD,EAAA5tI,EACE,UAGQA,EAAiB,UATzBA,EAAgB,UAahBA,EAAe,UAIVA,EAAoB,YAIT,YAME,QAGpBkxH,EAAClxH,EAAA,UAKUA,EAAqB,QAGhCkrE,EAAClrE,EAAA,QAID6tI,EAAC7tI,EAAA,UAIQA,EAAoB,UAEpBA,EAAwB,QAGjCoxH,GAACpxH,EAAA,WAUI,qGACL8tI,GAAC,SAAApoI,YAKGqoI,EAAe/iH,EAAKmqC,EAAK2W,EAAiBmG,OAC3CrsE,EAAAF,EAAAG,KAAAC,KAAAklB,EAAAmqC,IAAArvD,KAACF,EAAAkmE,YAAUA,IACVmG,KAAQA,IAET+7D,cAAA,CACFntG,KAAA,WA9EMppB,QAAAw2H,IA+ETxhH,EAAA5lB,EAAC0O,SAAA3P,EAAAxE,MAAAwE,EAAAooI,eAhFkCpoI,EAAA9C,OAgFlCwc,GAAA,iBAAA1Z,EAAAsoI,eAAAhoI,KAAAN,IAhFyBA,EAAA9C,OAAAwc,GAAA,UAAA1Z,EAAAotD,UAAA9sD,KAAAN,IAkFYA,EAAA9C,OAAAwc,GAAA,SAAA1Z,EAAAuoI,SAAAjoI,KAAAN,IC1FtC,OAT0DolB,EAAAklD,uEAAAzjD,EAAA5lB,EAAAunI,SAAA,WAE1DxoI,EAAa+B,UAC6D,MAM1E/B,SD+EEmoI,EAAA7hH,QAAA,oCAA0B,UACjB,EAAA6hH,EAAOroI,GChFlBqoI,EAAAxnI,UAAA2nI,eAAA,WAAApoI,KAAA8wD,aAAA,uDAC4C,SAA1C9wD,KAAA1E,MAA0Cy/B,OACxC/6B,KAAE1E,MAAOy/B,KAAA,eAGTt6B,UAAAysD,UAAA,WAEFltD,KAAA6B,YAC2EpB,UAAA4nI,SAAA,WAEzD,aAAlBroI,KAAA1E,MAAAy/B,KACE/6B,KAAIq3D,eAAOr3D,KAAA1E,MAAgBqW,mCAkB9B3R,KAAAuoI,cAAAvoI,KAAA1E,MAAAqW,SAdS3R,KAAA+vD,wBAIFtvD,UAAA+nI,WAAA,SAAK72H,SACHzT,OAAAotH,GAAc,EAAdptH,CAAeyT,GAAS9T,QAAA,kCACtB4qI,MAIJhoI,UAAA42D,eAAA,SAAA1lD,GAGL,IAAA7R,EAAAE,KACHA,KAAAklB,OAAA88D,YAAC,WA7BoCliF,EAAAyoI,cA6BpCrqI,OAAAktH,EAAA,eAAAltH,CAAAyT,yFCvCD,IAC6C3R,KAAA2R,QAAA3R,KAAAmsE,KAAAK,YAAAxsE,KAAAgmE,YAAAnoE,QAAAoiD,EAAAjgD,KAAA1E,MAAAwC,aAEE,MAAA46B,GAEvCxiB,QAAAxG,IAAA,qBAAAgpB,GACuC14B,KAAA2R,QAAA3R,KAAAmsE,KAAAK,YAAAvsB,KAYhBgoF,EAAA/+G,YAAA,4CAC7B++G,EAAAS,YAAwB,EAAxBT,EFoEC,GE5DD,WAFAU,GAAC,SAAA/oI,YAUCgpI,IACA,IAAA9oI,EAAA,OAAAF,KAAA4pB,MAAAxpB,KAAkDypB,YAAAzpB,YAClDF,EAAK+oI,MAAA,CACN,CAAAtnI,MAAA,WAAAC,MAAA,YAED,CAAAD,MAAA,OAAAC,MAAW,QACD,CAAAD,MAAA,OAAAC,MAAA,SAIR1B,EAAAgpI,aAAO,SAAuBl6H,GAC/B,OAAA9O,EAAAD,MAAAkpI,gBAAAtiH,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAA6zB,KAAAnsB,EAAArN,UAGCzB,EAAAkpI,gBACE,SAAOjvH,KACJla,MAAQkpI,gBAActiH,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAAyK,QAAAoI,EAAAvF,OAAAjT,UAEtBzB,SAnBP2mB,EAAA,EAAAmiH,EAAAhpI,GAsBAgpI,EAACnoI,UAAAoB,OAAA,WAED,IAAAC,EAAA9B,KAAAH,MAAAqH,QAAA6zB,EAAAj5B,EAAAi5B,KAAgBppB,EAAe7P,EAAA6P,QAC7B,OAAOjB,EAAK3P,EAAYmB,cAAA3E,EAAA,mBAAc3B,MAAC,QACxC8U,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,kBAED2O,EAAA3P,EAAAmB,cAAA,MAAe,CAAAH,UAAoB,WACzB2O,EAAM3P,EAAAmB,cAAA,OAAO,CAAaH,UAAA,yBAEtB2O,EAAE3P,EAAAmB,cAAA3E,EAAA,QAAA+E,SAAAtC,KAAA8oI,aAAAvnI,MAAAvB,KAAA6oI,MAAAj+H,KAAA,SAAA8tB,GAAA,OAAAqC,IAAArC,EAAAn3B,QAAA2F,QAAAlH,KAAA6oI,UACZn4H,EAAU3P,EAAAmB,cAAA,YAAAX,MAAAoQ,EAAArP,SAAAtC,KAAAgpI,gBAAAjnI,UAAA,gBAAA4J,KAAA,OAGZi9H,EA5CD,GA6Cc,eApDcK,GAkE9B,SAAArpI,4CChF+C,OCEnCE,EAAAopI,WAAwBhrI,OAAA2rE,EAAA,SAAA3rE,CAAA,WAC7B,IAAA+hD,EAAUngD,EAAAqpI,eAAArpI,EAAAD,MAAAqH,SACP+4C,IAAAngD,EAAAG,MAAAggD,MAMTngD,EAAAe,SAAA,CAAAo/C,eDdwCngD,EAAAG,MAAA,CAEUggD,KAAAngD,EAAAqpI,eAAAtpI,EAAAqH,UAEJpH,oBAG7CW,UAAYy7D,mBAAS,SAAAn4B,GAGhB/jC,KAAAkpI,gBAEHzoI,UAAA2oI,YAAA,SAAAnpF,YACcjgD,KAAAH,MAAAwpI,kBACdppF,EAAAxrC,EAAA,EAAAy9C,oBAAAjS,EAAA/hD,OAAAotH,GAAA,EAAAptH,CAAA+hD,yCEdqB,OAAAjgD,KAAAopI,YAAAz3H,EACiE9T,QAAA,cAc9EA,QAAiB,KAAoD,QACxEA,QAAA,aAEFA,QAAA,MAAiB,WAKvByrI,EAAE7oI,UAAA8oI,gBAAA,SAAA53H,GAEI,OAAA3R,KAAAopI,YAAiBlrI,OAACktH,EAA+E,eAAhFltH,CAAgFyT,OAEhGlR,UAAO0oI,eAAA,SAAAjiI,OACV6zB,EAAO7zB,EAAA6zB,KAAAppB,EAAAzK,EAAAyK,eACRA,EAGS,aAAVopB,EACU/6B,KAAKupI,gBAAa53H,GAEjB,SAATopB,EACD/6B,KAAAopI,YAAAz3H,GAMD3R,KAAAwpI,YAAA73H,GAZA,IAeF23H,EACE7oI,UAAAoB,OAAA,WACE,IAAAo+C,EAAAjgD,KAAAC,MAAAggD,YACEvvC,EAAA3P,EAAAmB,cAAA,OAAAH,UAAgB,mCAAA05F,wBAAA,CAAAC,OAAAz7C,QHoCvB,GGvBO,oDAWE,0ICtEmCwpF,sBAAA,SAAAviI,EAAAwiI,EAAAC,GAE7C,MAAQ,SAAAD,EAC8DC,EAItEziI,OAWE,SAAArH,SACOA,EAAMqH,QAAA5E,EAAgBzC,EAAAyC,SAK7BsnI,EAAE,SAAA3mH,GAAA,gBAAA3B,GAEF,IAAAuoH,EAAA,GACEvoH,0BAwBH,cAAA2B,IAfK4mH,EAAA5mH,GAAA3B,EAAA9M,OAAS0vE,QAAA,QAAQ,WAKfz9D,EAAA,KAAKvf,EAAS2iI,gBAGZ9oI,EAAAmB,cAAA3E,EAAQ,kBAAK,CAAC3B,MAAM,YACpBmF,EAAAmB,cAAA,OAACH,UAAA,yBAEH2O,EAAA3P,EAAAmB,cAAC,qBAGNwO,EAAA3P,EAAAmB,cAAA3E,EAAA,QAAAiE,MAAA,cAAA6iF,WAAA,UAAAH,QAAAh9E,EAAAytC,UAAAryC,SAAAsnI,EAAA,eACHl5H,EAAA3P,EAACmB,cAAA3E,EAAA,QAAAiE,MAAA,mBAAA6iF,WAAA,UAAAH,QAAAh9E,EAAA2nH,QAAAvsH,SAAAsnI,EAAA,aA5CqCl5H,EAAa3P,EA4ClDmB,cAAA3E,EAAA,QAAAiE,MAAA,eAAA6iF,WAAA,UAAAH,QAAA,UAAAh9E,EAAAwK,UAAApP,SAAAsnI,EAAA,kPA/BG,SAAA7sH,GAEFza,EAAAmkB,EAAgB,KAAAvf,EAAA,CAAA6V,2RCxBQza,EAAAmkB,EAAA,KAAAvf,EAAA,CAAAmV,SAAAhR,SAAAiW,EAAA9M,OAAAjT,MAAA,YAIkCmP,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,yBAyB5D2O,EAAA3P,EAAAmB,cAAA,2BAA0CwO,EAAA3P,EAAAmB,cAAA3E,EAAA,QAAAiE,MAAqE,kBAAA0iF,UAAAh9E,EAAAoZ,SAAAhe,SAAAsnI,EAAA,oBAgBzG,SAAAhqI,GACJ,SAACkqI,IAEM,IAAAhqI,EAAA,OAAAF,KAAA4pB,MAAPxpB,KAAAypB,YAAkEzpB,YAChEF,EAAAiqI,qBAAO,SAAA7iI,GASRpH,EAAAD,MAAAkpI,gBAAAtiH,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAA8iI,MAAAvjH,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAA8iI,MAAA9iI,OAGOpH,EAAAmqI,sBAAE,SAAA/iI,GACFpH,EAAAD,MAAAkpI,gBAAoBtiH,EAAA,EAA4C,GAAA3mB,EAAQD,MAASqH,QAAA,CAAA8I,OAAA9I,MAEvFpH,EAAAoqI,cAAgB,WAIjBpqI,EAAAiqI,qBAAA,CAAApb,WAAA7uH,EAAAD,MAAAqH,QAAA8iI,MAAArb,aAIc7uH,EAAAqqI,aAAA,WAEPrqI,EAAAiqI,qBAAqC,CAAOrb,UAAM5uH,EAAAD,MAAAqH,QAAA8iI,MAAAtb,cASlD0b,eAAO,aACLL,qBAAY,CAAAnb,YAAA9uH,EAAAD,MAAAqH,QAAA8iI,MAAApb,cAEd9uH,kBAERgqI,EAACrpI,UAAAoB,OAAA,WAED,IAAAC,EAAA9B,KAAAH,MAAAqH,QAAA8iI,MAAAtb,EAAmB5sH,EAAnB4sH,SAAoBE,EAA4B9sH,EAAA8sH,WAAAD,EAAA7sH,EAAA6sH,UAEjC,OAAAj+G,EAAA3P,EAAAmB,cAAMwO,EACJ3P,EAAAoQ,SAAA,KACTT,EAAA3P,EAAAmB,cAA4C,MAAM,CAAAH,UAAA,yBACpD2O,EAAA3P,EAAAmB,cAAA,KACK,CAAMH,UACT,mBAEF,cACE2O,EAAK3P,EAAAmB,cAAA3E,EAAA,QAAAiE,MAAA,QAAA6iF,WAAA,UAAAH,QAAAyqC,EAAArsH,SAAAtC,KAAAkqI,gBACLx5H,EAAA3P,EAAAmB,cAAA3E,EAAA,QAAAiE,MAAA,OAAA6iF,WAAA,UAAAH,QAAAwqC,EAAApsH,SAAAtC,KAAAmqI,eAEDz5H,EAAA3P,EAAAmB,cAA6B3E,EAAA,OAAmB,CAAEiE,MAAA,SAAA6iF,WAAA,UAAAH,QAAA0qC,EAAAtsH,SAAAtC,KAAAoqI,kBACxD15H,EAAA3P,EAAAmB,cAAAmoI,GAAA,CAAAnjI,QAAAlH,KAAAH,MAAAqH,QAAA8I,OAAA1N,SAAAtC,KAAAiqI,0BAGOH,EA9DJ,GA+Da,kBAYG5vI,EAAU,WASJ,SAAA0F,cAERC,SACRD,EAAAG,KAAAC,KAAqBH,IAAKG,KAUtC,6BATgCF,EAAKwqI,oBAAkBlqI,KAAAN,wBACzBA,EAACyqI,mBAAYnqI,KAAAN,kBAC/BA,EAAgB21G,aAAcr1G,KAAAN,gCACJA,EAAM0qI,2BAA2BpqI,KAAAN,KAC3DG,MAAC,CAGPwqI,iBAAAvsI,OAAAuwH,GAAA,EAAAvwH,CAAA2B,EAAA2I,KAAApB,OAAAvH,EAAAqH,QAAAE,OAAAvH,EAAAqH,QAAA8iI,MAAAnqI,EAAAqH,QAAA8I,SAENlQ,WAZ0B,EAAA4qI,EAAA9qI,0RClIAmpI,EAAAtiH,EAAA,KAAAvf,EAAA,CAAAE,OAAAujI,MAGoCD,EAAAjqI,UAAA8pI,mBAAA,SAAA/oI,EAAA+Z,GACe,IAAAnU,EAAApH,KAAAH,MAAAqH,QAAAE,OAIhEwjI,EASZxjI,EAAA5F,GARCilB,EACA,KAASrf,EACT5F,GAAA,CAAA+Z,MAAQkL,EAER,KAAArf,EACA5F,GAAA+Z,MAAA,CAAA7e,MACA6e,MAAA,CAGKA,MAAM,CAEP7e,MAAA6e,IAOFvb,KAAA6qI,sBAASrpI,EAAAopI,MAKDnqI,UAAA6pI,oBAAA,SAAA9oI,EAAA0J,GACR,IAAA9D,EAASpH,KAAAH,MAAAqH,QAAAE,OACTwjI,EAAUxjI,EAAA5F,GACVilB,EAAA,KAAArf,EAAA5F,GAAA,CAAA0J,UAAA,CACMA,SAQAlL,KAAA6qI,sBAAArpI,EAAAopI,IAkBJF,EAEFjqI,UAAAg1G,aAAA,SAAAr6B,GACF,IAAAt5E,EAAA9B,KAAAH,MAAAkpI,EAAAjnI,EAAAinI,gBAAA7hI,EAAApF,EAAAoF,4GCzCWwjI,EAAQjqI,UAAY+pI,2BAAA,SAAApsI,EAAAI,IAE7BssI,EADK9qI,KAAAH,MAAAirI,mBACU,CAAA1sI,OAAAI,UAEEiC,UAAAoB,OAAA,WAClB,IAAA/B,EAAAE,KACO+qB,EAAA/qB,KAAAH,MAAAkrB,SACN0/G,EAAczqI,KAAAC,MAAAwqI,iBACd,OAAA/5H,EAAe3P,EAAAmB,cAAA3E,EAAA,oBAAA6J,OAAAqjI,GAAA,SAAA3oI,GACf,IAAAipI,EAAkBjpI,EAAAipI,eAAAC,EAAAlpI,EAAAkpI,cACnB,OAAAjgH,EAAA,CACS3jB,OAAA4jI,EACVV,oBAAAxqI,EAAAwqI,wFCpCwCS,iBACYP,2BAAA1qI,EAAA0qI,kCHgI1B,gCIvGb,IAAUjtI,EAAC,i3BAAA0tI,YAvBd,CACmBjB,MAAA,CAG/Btb,UAAgB,EACVC,WAAA,EACEC,YAAW,GAEjB5+G,OAAQ,CAER6+G,SAAS,EACPl6E,WAAU,EACVjjC,UAAA,gBAEE,KASoBw5H,UAAAC,QAIlBjxI,EAAgB,QAGRA,EAAO,QAGbA,EAAoB,QAIZA,EAAA,QAIHA,EAAU,QAGpBA,EAAA,QAIsBA,EAAa,QAIjBA,EAAkB,QAGrCA,EAAA,YACuBA,EAAWqhC,EAAAmmD,OAWjB,SAAA13D,EAAe1I,EAACja,OACjC+jI,EAAankH,EAAYlmB,EAAAipB,QAAclrB,UAAOssI,WAC9Cz5H,EAAQ7S,SAASoD,cAAG,SAEpBgf,UAAgB,+EACdmqH,OAAA,kCAGEthE,EAAc1kD,OACdimH,EAAcjkI,EAAAG,aAAAxK,OAAAuuI,QAEdr1D,EAAW7wD,EAAS8wD,MAAA,KACf70D,MAACA,IACDkqH,OAAS,aACPC,UAAQnqH,MAGf3P,GAASukE,KACJG,YAEDvC,iBACF,IAAMoO,GAAEnhF,EAAA,QACRipB,EAAS,WACTrY,WACA,wBACA,+CACA,wBACE,kBACD,CACAkwE,YAAA,EAAArjF,GAAA,SAAAujF,KAAA,EAAAD,WAAA,cAKHiF,YACE,8BACA,aACE78D,qBAML9D,QAAA,+BACLslH,GAAQ,KAG2CC,GAAA,SAAA3hH,EAAA1I,EAAAja,GAErD,IAAAikI,EAAAjkI,EAAAG,aAAAxK,OAAAuuI,uEAaG,IAAAH,EAAAnkH,EAAAlmB,EAAAipB,QAAAlrB,UAAAssI,WAEHz5H,EAAA7S,SAAAoD,cAAA,wGAEGkpI,EAAAC,OAAA,CACH,WASE,aACA,SAAAthE,EACE1kD,GASK,IACA48D,EADOvoE,EAAG2L,EAAO8wD,MAAA,GAEjBz8D,EAAA4H,MAAaA,EACb5H,EAASkyH,UAAYN,EAAAM,UACrBlyH,EAAS6yE,MAAK,WACRtK,EAAGsK,SAEfxiB,EAAAp4D,EAAAo4D,CAAArwD,GAEDA,EAAA28D,WACS4L,EAAK,IAAOC,GAAAnhF,EAAA,CACpByT,OAAAk3H,GAAA,GACD/5H,UACcmmC,SAAQ,gBACrByN,QAAA,kCACDonC,OAAA,QACc/K,cAAU,CACvBC,YAAA,EAAArjF,GAAA,SAAAujF,KAAA,EAAAD,WAAA,aAGAiF,OACDukD,EAAAO,eACO5pD,EAAAzoE,GAAW,QAAK,WAEvB4f,WAAA,WACckyG,EAAQQ,eACrBpyH,EAAAo6D,WACDmO,EAAA/3D,kBAID,OAEDyhH,GAAAvlH,QAAA,+BAyBE2lH,GAAQ,WAGR,SAAAA,EAAAzvI,EAAA0vI,EAAAC,EAAAC,EAAApxG,EAAAid,EAAAl5C,EAAAyM,GACEtL,KAAKmsI,QAAU7vI,EAChB0D,KAAAosI,UAAAJ,EACDhsI,KAAAqsI,WAAAJ,EACEjsI,KAAKssI,UAAUJ,EAChBlsI,KAAAusI,UAAA,CAAAzxG,OAAAid,OACH/3C,KAAAwsI,OAAC3tI,EAAAmB,KAAAysI,QAAAnhI,SAPCygI,EAAC3lH,QAAA,2EASH2lH,EAAAtrI,UAAA5B,MAAA,+BAGAktI,EAAAtrI,UAAA6K,OAAA,WAME,OAAAtL,KAAgBysI,WAEThsI,UAAaq3C,SAAA,WAClB,OAAK93C,KAAMusI,aAEN9rI,UAAa0P,KAAS,WAC5BnQ,KAAAosI,UAAApsI,KAAAmsI,YAGQ1rI,UAAagmD,MAAA,WACrBzmD,KAAAqsI,WAAArsI,KAAAmsI,YAGS1rI,UAAWisI,UAAU,WAC9B,OAAA1sI,KAAAmsI,wCAIEnsI,KAAAusI,UAAAz0F,EACH93C,KAAAssI,UAAAtsI,KAAAmsI,QAAAnsI,KAAAusI,YACER,EAxCM,MA+CH,oBAIDY,EAAYzlI,EAAS0lI,GACvB5sI,KAAG6sI,SAAA3lI,EAEHlH,KAAK8sI,eAAaF,OAChBG,SAAa,WALP3mH,QAAU,WAAY,mBAQ1B3lB,UAASusI,OAAA,kBACVhtI,KAAA8sI,kBAECrsI,UAAU+G,WAAA,kBACXxH,KAAA6sI,YAEApsI,UAAAwsI,UAAA,WACJ,OAAAjtI,KAAAktI,yCAIE,OAAAltI,KAAA+sI,WAEDtsI,UAAAsqE,KAAA,WADF/qE,KAAA+sI,SAAA,KAIItsI,UAAA0sI,OAAA,gBACAJ,SAAS,KA5BR,MAmCA,WAIL,SAAAK,EAAA/lI,mBAEGrH,KAAAqtI,OAAA,GACHrtI,KAAAstI,MAAAjmI,EAAArH,KAAAutI,eAWC,SAhBDH,EAAChnH,QAAA,WAOU3lB,UAAA+sI,UAAA,WACT,OAAOxtI,KAACytI,WAGRhtI,UAAAitI,SAAE,SAAU79G,UACP7vB,KAAKqtI,OAAMx9G,GAMlBu9G,EAAA3sI,UAAAktI,YAAA,SAAA3wI,cAEGwqG,EAAA7gF,EAAA5lB,EAAA6sI,UAAA5wI,EAAA,YACH6wI,EAAArmC,EAAA,GACExqG,EAAAwqG,EAAA,KACuBzmG,EAAA44B,KAAA38B,EAAA,SAAAN,EAAA4kB,GACpB,IAAAwsH,EAAA,IAAAnB,GAAArrH,EAAAxhB,EAAAiuI,UAAAzsH,IACCxhB,EAAC2tI,QAAa79H,KAAAk+H,KAGpBhnH,EAAA/lB,EAAA44B,KAAAk0G,EAAA,SAAAnxI,EAAA4kB,qCAEGxhB,EAAA2tI,QAAA79H,KAAAo+H,KAEDhuI,KAAMytI,QAAOx9H,KAAK,SAAAlP,EAAAmP,GAEZ,IAAA+9H,EAASltI,EAAAyG,aAAc0mI,EAAAh+H,EAAA1I,aACvB,OAAIymI,EAAAtlI,IAAKulI,EAAMvlI,IACP,EAEVslI,EAAAtlI,IAAaulI,EAACvlI,KAElB,EAGS,OAMAlI,UAAM0tI,WAAc,eAE5BruI,EAAAE,OAAMe,EAAA44B,KAAA35B,KAAAytI,QAAA,SAAA/wI,EAAA4kB,GAENxhB,EAAAsuI,YAAA9sH,EAAA9Z,aAAAmB,OAAA2Y,EAAA+sH,WAEO/sH,EAAC0rH,SAAW78H,OAEbmR,EACL0rH,SACDN,YAEQ3hE,YAOPtqE,UAAY6tI,aAAU,eAEtBxzG,EACDid,EAFAj4C,EAAAE,OAAMA,KAAAstI,MAAA1yG,gBAIHT,EAAKn6B,KAAMstI,MAAQ9xG,WAAUx7B,KAAMstI,MAAC9lI,aAAgBxK,OAAKm9B,MAAO,KACnDp5B,EAAA44B,KAAA35B,KAAAytI,QAAoB,SAAA/wI,EAAA4kB,GACpCy2B,EAAArd,EAAAqd,IAAAj4C,EAAAwtI,MAAAhiI,SAAAgW,EAAA0rH,SAAA1hI,WAAM6uB,EAAA2B,IAAAxa,EAAA9Z,aAAAmB,KAAA+xB,EAAAI,KAAAxZ,EAAA0rH,SAAAnuI,QAAA,EACLyiB,EAAA0rH,SAAY1qF,OAAK,CAAOvK,MAAAjd,KAAaA,SAS7Br6B,UAAG8tI,aAAA,aACNxtI,EAAA44B,KAAA35B,KAAAytI,QAAA,SAAA/wI,EAAA4I,GACHA,EAAA0nI,SAAUvmF,eAEVgnF,QAAU,MAKVhtI,UAAAstI,UAAqB,SAASzsH,OAM9By2B,EAAAjd,EAAU5vB,EAAEsjI,EAAAC,EAAAC,EAAA/gI,EACdghI,EANEC,EAAA5uI,KACAo5C,EAAYp5C,KAAAstI,MAAA/lI,iBACZmzB,EAAA16B,KAAAstI,MAAA1yG,kBACD56B,KAASstI,MAAS9xG,WAAEx7B,KAAAstI,MAAA9lI,aAAAxK,OAAAm9B,MAAA,KAKZ7Y,EAAAutH,YACI,YAAXxB,QAAcrtI,KAAAqtI,OAAAyB,IAAA9uI,KAAAqtI,OAAAyB,GAAA5jI,MAIdlL,KAAAqtI,OAAeyB,GAAa5jI,MAH5B,SAKC,YAAAmiI,QAAArtI,KAAAqtI,OAAAyB,IAAA9uI,KAAAqtI,OAAAyB,GAAAN,WAOIxuI,KAAOqtI,OAAAyB,GAAsBN,WAL7B,IAQK,qBAAGxuI,KAAUqtI,OAAOyB,SAAI7oI,IAAAjG,KAAAqtI,OAAAyB,GAAAL,YAInCzuI,KAAAqtI,OAAAyB,GAAAL,aACW,YAAVpB,SAAWrtI,KAAAqtI,OAAAyB,SAAA7oI,IAAAjG,KAAAqtI,OAAAyB,GAAAH,eAIR3uI,KAAAqtI,OAAAyB,GAAAH,gBAGO,MAAZ3uI,KAAAqtI,QAAYrtI,KAAAqtI,OAAAyB,IAAA9uI,KAAAqtI,OAAAyB,GAAAJ,UAKV1uI,KAAAqtI,OAAAyB,GAA+BJ,UAAA96H,cAJxB,WAOC,MAAV5T,KAAIqtI,QAAiBrtI,KAAAqtI,OAAAyB,SAAA7oI,IAAAjG,KAAAqtI,OAAAyB,GAAAnhI,UAKd3N,KAAMqtI,OAAAyB,GAAiBnhI,UAJ5B,MAOFohI,EAAI50G,EAAajzB,QAAEszC,oBAAA,KACJ,MACbzC,IAAA/3C,KAAOstI,MAAMhiI,SAAYyjI,IAC1B50G,EAAA2B,IAAAxa,EAAA3Y,KAAA+xB,EAAAI,SACFg7C,EAAAhvD,IAAA,kDAEK9b,IAAA,CAGF8sC,SAAU,WAEZ1sC,QAAC,GACC0vB,KAAIA,EAAS,KAEfid,IAAA,EACEl5C,MAAO8O,EAAC,YACH3N,KAAEstI,MAAShiI,SAAG,GAAAyjI,sBACFphI,EAAI,yBAClB+gI,EAELM,oBAEU9jI,EAIZA,MAAOA,IAGTy1C,SAAAvH,SAEG,IAAA61F,EAAAnoH,IAAA,qCAAA9b,IAAA,CACH8sC,SAAA,WAAAhd,MAAA0zG,EAyHCtvI,KAAA6mD,MAAAp4C,EAAA,QAxHW67C,YAAQ,EAEZ0lF,cAAiB,EACbrwI,MAAK,EACTyM,OAAY,EACX6jI,cAELX,EACA,uBAKFY,eAAAZ,EAAA,yBAGIS,EAAKtuF,SAAWm1B,GAClB91E,KAAQqtI,OAAOyB,IAChB9uI,KAAAqtI,OAAAyB,GAAAh3F,UAAM,WAAA93C,KAAAqtI,OAAAyB,GAAAh3F,SAAAnG,cACLs9F,EAAajkI,IAAA,CACd+sC,MAAAy2F,EAAA,OAEQa,aAAe,OACtBC,gBAAqBd,EAAA,YAAAtjI,IAGtB+jI,EAAAjkI,IAAA,CAEQ+sC,IAAM,MACbs3F,aAAeb,EAAoB,YAAAtjI,EACpCokI,gBAAA,SAEAL,EAAAzmI,KAAA,CAEO8Y,MAAOA,IAIdA,EAAAiuH,WAEK5D,GAAcsD,EAAA3tH,EAAAiuH,UAAAX,EAAAtB,OAMdqB,IACNM,EAAcjkI,IAAK,CAAGmxF,OAAK,SAE3B8yC,EAAEO,MAbD,WAAMC,GAAAR,EAAAnoH,IAAA9mB,MAAAwI,KAAA,SAAAomI,EAAAtB,QAOe,WAChBsB,EAAStB,MAAKpyG,2BAQJ,IAAA6wG,GAAAj2D,EAAA,SAAAlwE,KACZwG,iBACKxG,KACLs6C,mBACAt6C,EAAQkyC,KACR9sC,IAAA,CACA+sC,IAAAD,EAAAC,IACAjd,KAAAgd,EAAAhd,UAECid,EAAA+9B,EAAAj3E,QAAAi3E,EAAAxqE,aAOC7K,UAASivI,aAAI,SAAApuH,OAMjBy2B,EAAAjd,EAAAntB,EAAoBgiI,EAAKjB,EAAAxjI,EAAAyjI,EALzB7uI,EAAQE,KACR4uI,EAAO5uI,KACPo5C,EAAQp5C,KAAQstI,MAAA/lI,iBAChBmzB,EAAA16B,KAAAstI,MAAA1yG,gBACAT,EAAOn6B,KAAKstI,MAAA9xG,WAAAx7B,KAAAstI,MAAA9lI,aAAAxK,OAAAm9B,MAAA,GAGd20G,EAAgBxtH,EAAAutH,UAOd3jI,EALU,OAAZlL,KAAOqtI,QAAKrtI,KAAAqtI,OAAAyB,IAAA9uI,KAAAqtI,OAAAyB,GAAA5jI,MAKVlL,KAAAqtI,OAAAyB,GAA+B5jI,MAJxB,OAYPyjI,EALiB,OAAf3uI,KAAKqtI,SAAYrtI,KAAAqtI,OAAAyB,SAAA7oI,IAAAjG,KAAAqtI,OAAAyB,GAAAH,eAKR3uI,KAAAqtI,OAAiByB,GAAAH,cAQxBhhI,EALa,MAAf3N,KAAAqtI,QAAertI,KAAAqtI,OAAAyB,SAAA7oI,IAAAjG,KAAAqtI,OAAAyB,GAAAnhI,UAKb3N,KAAgBqtI,OAAIyB,GACxBnhI,UALW,IASiB,MAA5B3N,KAAAqtI,QAA4BrtI,KAAAqtI,OAAAyB,IAAA9uI,KAAAqtI,OAAAyB,GAAAJ,UAKnB1uI,KAAQqtI,OAAIyB,GAAAJ,UAAA96H,cAJP,SAOdmkC,EACArd,EAAIqd,IAEJ/3C,KAAAstI,MAAOhiI,SAJF,EAQP,IAAA3N,EAAOuB,KAAayJ,IAAC2Y,EAAA3Y,IAAA2Y,EAAAsuH,SACtBC,EAAA3wI,KAAA+I,IAAAqZ,EAAA3Y,IAAA2Y,EAAAsuH,SAED90G,EAAAX,EAAA2B,IAAAn+B,GAAA+8B,EAAAI,2BAEG60G,EAAAp0F,EAAAzgB,EACHnU,EAAA5lB,EAAA44B,KAAA,CAAAmB,EAAAygB,GAAA,SAAkBzD,GACFhxB,IAA2B,kDAAqC9b,IAAA,CACtE8sC,SAAY,WACb1sC,QAAU,GAClB0vB,KAAAgd,EAAA,KACHC,IAAA,EAACl5C,MAAA8O,EAAA,6BAnBU,EAqBXmiI,oBAAAniI,EAAA,2BAEGqhI,oBAAA9jI,EAEaA,UAEdy1C,SAAAvH,KAEM,IAAA22F,EAAYjpH,IAAO,kEAAmB9b,IAAA,CAEvC8sC,SAAY,WACf1sC,QAAO,GACP0vB,OAAA,KAEGid,MACHl5C,MAAAK,KAAA6mD,MAAA4pF,EAAOhiI,GAAa,KAClBrC,OAAK,6BACMJ,QACRA,qBACOA,IAEZ6kI,EAAApvF,SAAAvH,GAEE22F,EAACvnI,KAAU,CACT8Y,MAACA,IAMLA,EAAAiuH,WAEF5D,GAAAoE,EAAAzuH,EAAoCiuH,UAAAX,EAAAtB,cAKlCqB,IAEGoB,EAAM/kI,IAAA,CAAAmxF,OAAe,SACxB4zC,EAAAP,MAde,WACZC,GAAAM,EAAAjpH,IAAA9mB,MAAAwI,KAAA,SAAAomI,EAAAtB,QAOc,WACfsB,EAAAtB,MAAApyG,oBAOa,IAAA6wG,GAAqBgE,EAAA,SAAAnqI,GACnCA,EAAAwG,QACA,SAAAxG,GAEEA,EAAMs6C,UACT,SAAat6C,EAAOkyC,GAEhBlyC,EAAAoF,IAAA,CACF+sC,IAAAD,EAAAC,IACIjd,KAAAgd,EAAahd,UAEfid,EAAAg4F,EAAalxI,QAAAkxI,EAAYzkI,aAM7B7K,UAAa2tI,YAAa,SAAA5jI,GACzB,IAAA2vB,EAAAn6B,KAAAstI,MAAA9xG,WAAAx7B,KAAAstI,MAAA9lI,aAAAxK,OAAAm9B,MAAA,GACJ61G,EAAA71G,EAAA2B,IAAAtxB,GAEK,OAAAwlI,EAAc,GAAQA,EAAA71G,EAAA2B,IAAA3B,EAAAlyB,MAExBmlI,EA5XG,YAoYDv9H,GAAMxI,GAEV,IAAIunI,EAAE5uI,KACNiwI,EAAgB,IAAAC,GAAA7oI,GACfA,EAAAmmI,UAAA,6BCjrBoBnmI,EAAA8oI,WAAA,WACmBrpH,EAAA/lB,EAAA44B,KAAAs2G,EAAAxC,QAAA,SAAA/wI,EAAA4kB,GAElBA,EACT0rH,SACAN,YACC3hE,YAKZqlE,WAAS,WACT/oI,EAAA8oI,aAEErpH,EAAC/lB,EAAA44B,KAA+Bs2G,EAAaxC,QAAa,SAAc/wI,EAAA4kB,GACpEA,EAAKypD,SAEX6jE,EAAMqB,aAAa9B,0BAGjB,SAAAnxI,GACAizI,EACW1C,iBACTI,YAAa3wI,YAId+S,eAAAH,KAAA,SAAAvI,EAAAH,GAEe,MAAlBA,EAAWlK,OAAOwL,OAClBynI,EAAA1C,eAAA,OAIAz9H,MAAIK,KAAQP,KAAA,SAAYvI,GACxB,IAAIH,EAAOG,EAAAG,aACXyoI,EAAa1C,gBAET0C,EAAYzC,YAAaroI,OAAC,GAC3B8qI,EAAAvC,SAAAxmI,EAAAlK,OAAA6yB,OACDogH,EAActC,YAAezmI,EAAMlK,OAAMwL,OAGxCynI,EAAA3B,kBAEAH,2BA0BInkE,EAAW3uE,EAAWqe,EAAO22H,kBAEhC7/D,KACAl1E,QACDwrB,IAAA,4CAEI,aACHo5B,4CAES,SAAAowF,EAAAlpI,EAAAgpB,WACVhpB,EAAA0N,WAAAuD,UAEDk4H,EAAUngH,EAAChY,IACThR,EAAS0N,WAASwD,OAAQnT,WAE3B4J,EAAAwhI,EAAAxhI,EAAA1I,EAAA0I,GAAAqJ,EAGD,IAAAhR,EAAauR,MAAMM,OAAgC,MAA3B7R,EAAW0N,WAAWwD,OAAKi4H,IAAA,MAAAnpI,EAAA0N,WAAAwD,OAAAvJ,IAGnD3H,EAAA0N,WAAAwD,OAAAvJ,GAAAuhI,EAEE,OAACpxI,KAAW+I,IAAA8G,EAAAqJ,EAAA,GAAAA,WAIZA,EAAA,+BAED,SAAAk4H,EAAAlpI,aAEDopI,EAAI,IACEppI,EAAMoB,KAAArD,OAAQ,IAEjB,MAAMsrI,SACLvxI,KAAQ+I,IAAAwoI,EAAW,QACdvxI,KAAA+N,OAAAujI,EAAAC,GAAA,KACLjoI,KAAAkoI,GAAa,KAAOJ,SACpBI,EAEHtpI,EAAAoB,KAAAkoI,GAAA,GAAAJ,IAAMI,EAAA,EAIPD,EAAAC,EAAA,uBAIE,SAAAC,EAAAC,EAAA/pI,EAAAgqI,GACA,eACD,mCAAAF,EAAA,SAAAC,KAGI3wF,KAAK2wF,GAAA56D,SAAAnvE,EAAAg0B,MAAA,GAAAh0B,EAAAmgD,yCAEe,SAAA4Z,EAAA/5D,SACxBT,EAAAgB,EAAA0pI,EAAAC,EAAAC,EAAA70H,IAMQ80H,IAHF,CAAE,MAAK,MAEL,QAEP,EAAI7qI,EAAEw6D,EAASz7D,OAAAiB,QACfw6D,EAAUx6D,IACFoC,KAAArD,QAAA7J,EAAA0U,OAAAqQ,WAAAjZ,EAAAiY,UAEXwS,EAAA,GAAAjiB,KAAA,CAAAshI,QAAA,EAAA3vI,MAAA,KAKD6F,EAAAoB,KAAArD,QAAA7J,EAAsC0U,OAAAsQ,UAAAlZ,EAAAkY,UAG/BuS,EAAQ,GAAAjiB,KAAA,CAAAshI,QAAA,EAAA3vI,MAAA,IAIX6F,EAAMoX,YACFqT,EAAO,GAAIjiB,KAAK,CAAEshI,QAAM,EAAA3vI,MAAA,OAGvBvB,KAAAmxI,uBAActqI,EAAA2D,EAAApD,KACpBP,EAAA2D,EAAApD,EAAAoB,KAAAsoI,GAAA,GACFE,EAAA5pI,EAAAoB,KAAAsoI,GAAA,KAEAM,GAEOL,GAAa,IAACA,EAAgEK,KAAA,IAC7EL,EAAY,GAAAA,EAAAK,KAErBA,EAAAL,EACIE,EAAaD,GAKjBzvI,EAHC6F,EAAAoQ,MAE2C,eAApClc,EAAW6xD,QAAEkkF,WACrBjqI,EAAUoB,KAAKsoI,GAAa,GAGjB1pI,EAA8DoQ,MAIzE85H,GAAAlqI,EAAAoB,KAAAsoI,GAAA,GAHkB1pI,EAAAoB,KAAAsoI,GAAA,GASJ1pI,EAASoB,KAAOsoI,GAAM,IAGhC1pI,EAAOuR,MAAOM,OAAY7R,EAAEoQ,SAKxBs5H,EAAW9wI,KAAOuxI,6BAA2B1qI,EAAA2D,EAAApD,EAAA0pI,MAGjD,EACD1pI,EAAA+U,QACGA,EAAQ/U,EAAK+U,MAAQof,GAEzB1J,EAAM1V,GAASvM,KACT,CACFrO,MAACA,EACHuvI,WAAWA,EACX5lI,MAAO9D,EAAA8D,MACR1J,MAAA4F,EAAA8V,aACG1J,KAACw9H,EACLQ,SAAaT,EAETr0I,MAAA0J,cAILyrB,EAAA,GAAA4V,OAAA5V,EAAA,GAAAA,EAAA,KAGCre,KAAOy9H,EACRp/G,gBAGC,cACDv2B,EAAA6xD,QAAAskF,OAAA,KAAMpqI,EAAA2iE,EAAAxhE,OAAAnB,KACLA,IACD4uE,EAAAttB,SAEGthD,EAAA89C,iBAKc,EAAAxpD,KAAA,8BAIhB,qBAAA2lB,EAAAza,EAAA+H,KACAxC,KAAAvF,EAAA+H,gBAEE/H,EAAAmgD,MAAqBgjB,EAAApoD,SAA2Cm2B,KAAAiyB,EAAA1+D,WACrD,EAAK3P,KAAK,cAAM,CAAAkL,MAAAvL,mBAE5B,qBAAAgmB,EAAAza,EAAA+H,KAAgB,EAAOjT,KAAK,cAAQ,CAAAkL,MAAAvL,QAAAsT,+BAE1BvH,KACRshD,WACF+oF,mBAEDvsF,yBAGE,SAAIt+C,EAAU+H,SASdrN,EAASovI,EAAWgB,EAAevrI,EAAEgB,EAAAwqI,EAAAC,MARnCrpI,OAASnB,OACVA,EAAAK,YAEGL,EAAAm0B,WACI,GAAIt0B,QAAS6zB,OACnBs1G,MACD/0I,EAAA6xD,QAAAskF,sBAOC,KACFrsF,EAAU/9C,EAAA+9C,YAAA,CAAA56C,EAAA3D,EAAA2D,cACRwjC,MAAAoX,EAAAtqB,OAAAsqB,EAAyCtqB,KAAA,GAAUsqB,EAAQtqB,KAAakvC,EAAAnrE,QAE1E,YADAmuF,EAAAvmC,MAAUp/C,GAMZ,GAFAR,EAAIg0B,MAACmvC,EAAApoD,SAAckZ,KAAcsqB,EAAYtqB,KAC9Cj0B,EAAAmgD,MAAAgjB,EAAApoD,SAAAm2B,IAAAiyB,EAAA1+D,SAAAzE,EAAAirI,YAAgBjrI,EAAAmgD,OAAAlgC,IAAAnkB,QAAAovI,aAAAlrI,EAAAmgD,OAAAlgC,IAAAnkB,QAAAqvI,cAAAlrH,IAAAnkB,QAAAovI,aAGf,YADA/kD,EAASvmC,MAAAp/C,QAGPstD,aAAA9tD,GAEForI,GAAe,EACb52I,EAAQ62I,oCAKK,IAAftxE,EAAQz7D,OAWV,GAJC0sI,EADCjxE,EAAK,GAAApjD,gBACN,0BAEgB,sBAEjBy0H,EAAA,CACH5qI,EAAA89C,uDC/QG,SAtB6BwrF,EAAAt1I,EAAA2tC,WAAAmpG,EAAA3+H,KAAAq+H,GAGsB,IAAAv2I,EAAA6xD,QAAAl9C,KAGvDkiI,EAAAliI,KAAA,SAAAlP,EAAAmP,GAQE,OAAAA,EAAA3O,MAAoBR,EAAoBQ,QAE3B,IAAbjG,EAAA6xD,QAAAl9C,MACMkiI,EAAmBliI,KAAA,SAAUlP,EAAAmP,GACvB,OAASnP,EAAAQ,MAAK2O,EAAA3O,QAIjB6E,EAAA,EAAAA,EAAA+rI,EAAAhtI,OAAAiB,IAWT,KAFCurI,EAAAQ,EAAA/rI,IAED8qI,OAAA,CAIM,IAAuBkB,EAAK,GACbxjI,GAAA+iI,EAAAj1I,QAAAkS,EAAAk5C,cACNsqF,EAAU,sCAIvB7wI,GAFM6F,EAAaw5D,EAAW+wE,EAAAj1I,QAEJujB,YAAA0xH,EAAApwI,OACpBqwI,GACF,uCAAoBQ,EAAA,4CACrBR,GAAM,uCAAAD,EAAAzmI,MAAA,WAAAymI,EAAAnwI,MAAA,UACLowI,GAAgB,oCAAiBrwI,EAAA,eACjC8F,EAAA69C,UAAeysF,EAAQj1I,MAAAi1I,EAAAb,cAEvBuB,cAAe1B,EAAaiB,EAAW/qI,EAAAgqI,QAE1CjiI,GAGCxH,EAAAw5D,EAAAhyD,EAAwBk5C,aACxBl2C,EAAI,+EACJA,GACA,uCAAyBhD,EAAAxH,OAAA8D,MAAA,WAAA9D,EAAA8V,aAAA,UAGzB3b,EADAjG,EAAUkc,OAA4B,eAAvBlc,EAAA6xD,QAAakkF,WACjBziI,EAAIg5C,UAAW,GAAAh5C,EAAUg5C,UAAA,GAI1Bh5C,EAAOg5C,UAAO,KAEtBxgD,EAAU6Y,YAAY1e,KACpBlG,EAAgB2tC,WAAAp6B,EAAAg5C,UAAA,GAAAiqF,MAChB,oCAAwBtwI,EAAA,WACzB8wI,cAAE1B,EAAA/+H,EAAA/K,EAAAgqI,IAKP56D,EAASttB,YDnBT5nD,EAAAsG,KAAAsI,QAAAC,KAAA,CAEFC,KAAKA,WAXA,QACF,CACDrH,KAAA,KAEEqnB,MAAC,KACHsK,MAAI,WACF,gBAOF,iBACI,iBC2BuC,oBACrCm4G,EAAc1G,GACpB5rI,KAAI4rI,UAAWA,WAGfnrI,UAAkB8xI,cAAA,SAAAC,EAAAn2I,EAAAo2I,GAClB,IAAIvzG,EAAC7iC,EAAEq2I,gBACS,WAAdr2I,EAAAq2I,YACAxzG,EAAY,YACP,iEAAAszG,EAAA,8DAAAtzG,EAAA,wEAAAszG,EAAA,yCAAAtzG,EAAA,gBAAAA,EAAA,oDAAAuzG,EAAA,wEAELhyI,UAAmBkyI,aAAe,SAAU54H,OAM9C64H,EALCC,EAAA/rH,IAAA/M,EAAA+iF,eAAAg2C,QAAA,yBAEKN,EAAa1rH,IAAE/M,EAAK+iF,eAAct0F,KAAA,eACpCuqI,EAAC,KAGL1rI,EAAWrH,KAAIqH,KAChBukI,EAAA5rI,KAAA4rI,UAEDvvI,EAAA2D,KAAAgzI,WAAAR,GACE,SAAAS,EAAal5H,GACb,GAAa,OAALg5H,EACTA,EAAAh5H,EAAAm5H,YAGM,CACA,IAAKh0H,EAAOnF,EAAGm5H,QAAaH,EAC3BH,GAAiB1zH,EACnB6zH,EAAKh5H,EAAAm5H,QACLL,EAAM7nI,IAAA,CAAA+sC,IAAA66F,EAAA1zH,KAIV,SAASi0H,IAEP,IAAIC,EAAK/rI,EAAA0yB,IAAgB,CAAAe,KAAA,EAAAid,IAAiB66F,IAAAnoI,EAC3C2oI,EAAA/nI,SAAA+nI,EAAAxxF,QAAA,SAAUrgD,MAAK6xI,EACdP,EAASh5H,IAAA,YAAmBo5H,GAC7BJ,EAAAh5H,IAAA,UAAAo5H,GACFJ,EAAAh5H,IAAA,aAAAo5H,GAGKrH,EAAC1mH,OAAa4C,OAAK,WAClB8jH,EAAY/pI,SACZ+pI,EAAW5uI,OAAQrB,KAAA,oBAAiB,CAEhC0M,UAAchM,EAChBm2I,YAAUA,QAKhB,KAEDI,EAAKC,EAAc/6F,WAASC,IAE5B86F,EAASr5H,GAAA,YAAiBy5H,KACnBz5H,GAAA,UAAgB25H,KACtB35H,GAAA,aAAA25H,MAEM1yI,UAAcozE,QAAO,gBAC3BtxE,YAAAqI,KAAA,yBAAAs1C,SAEDlgD,KAAKqzI,cAAe,KAEf5yI,UAAe6yI,aAAK,SAAAd,EAAAe,GAC1B,IAAAl3I,EAAA2D,KAAAgzI,WAAAR,GAEDjxI,EAAAlF,EAAAkF,MACMkxI,EAAOlxI,EACTiyI,EAAO,EAGT,GAAI7sH,EAAU5lB,EAAQqb,SAAC7a,GAKrB,CACA,IAAIkyI,EAAEzzI,KAACqH,KAASy0B,IAAA,CAAAtxB,EAAS,EAACC,EAAKlJ,MACpBrC,KAAA6mD,MAAA7mD,KAAAyJ,IAAAzJ,KAAA+I,IAAAwrI,EAAA17F,IAAA,GAAA/3C,KAAAsL,QAAA,QANTmnI,EAAW,GACXe,EAAcD,MAQhBV,EAAS/rH,IAAC9mB,KAAAuyI,cAAAC,EAAAn2I,EAAAo2I,SACVlwI,YAAQwI,OAAY8nI,KAClBrnE,YAAW,sCAAAinE,SACT,CAAK16F,IAAGy7F,OAER/yI,UAAUizI,kBAAqB,uCAEd1zI,KAAG4rI,UAAU+H,mBAAO3zI,KAAA4rI,UAAAtwI,MAAA03I,WAAA7tI,OAAA,eAEjCyuI,QAAU,SAAM5pE,EAAAxhE,wBACjB,YACF,EAAApC,EAAAoC,EAAArD,OAAAiB,SACDA,GAAA+V,MAAM,QACP03H,gBAAA,EACD,kCAGY,OACA7zI,KAAM4rI,UAAWtwI,MAAM03I,WAAC7tI,OAAA,uCACtB2uI,gDAGT,QAGJrzI,UAAA0P,KAAA,SAAA9I,QACF2rI,WAAAhzI,KAAA4rI,UAAAtwI,MAAA03I,gBAED3rI,KAAIA,OAEJ9E,YAAQ8E,EAAUE,sBAChB8rI,oEAMEhsI,EAAAiE,yBACAnG,OAAY,qBACN,WAER6tI,WAAW7tI,OAAA,qBACA,EAAGnF,KAAAsL,OAAA,qBAEZuO,IAAM,8CACPL,GAAA,4BAAAxZ,KAAA2yI,aAAAvyI,KAAAJ,0BACI,MAEHS,UAASszI,eAAa,SAAU7sI,EAAA5L,oBAC1B,IAAAA,EAAA03I,WAAA7tI,gBAMJsO,EAFNugI,EAAOv2F,IACPw2F,GAAIx2F,YAEAr3C,EAAA9K,EAAQ03I,WAAa7tI,OAAMiB,SACzB9K,EAAM03I,WAAU5sI,KACTrF,EAAAqb,SAAA/T,EAAA9G,mBAEJ,SACL8G,EAAQw9E,eAENmuD,EAEH14I,EAAA03I,WAAA7tI,OAAAiB,EAAA,IACFqN,EAAAnY,EAAA03I,WAAA5sI,EAAA,IACmB7E,MAAA8G,EAAA9G,QAER0yI,EADNp5D,EAAepnE,EAAKlS,iBAKjB,KACLs5E,EAAQo5D,EAEN34I,EAAK03I,WAAE7tI,OAAAiB,EAAA,IACNqN,EAAAnY,EAAA03I,WAAA5sI,EAAA,IACJ7E,MAAA8G,EAAA9G,QAEJyyI,EADEn5D,EAAApnE,EAAAlS,iDC5P0B,eACV6b,EAAA,4BACkD82H,EAAA,0BACH,MAQ9D,cACJ92H,EAAoB,2BACb82H,EAAM,2BACF,MAEZ,SACI92H,EAAA,2BACS82H,EAAA,uBACH,MAEJ,aACE92H,EAAO/U,EAAA+U,UACL82H,EAAM7rI,EAAA6rI,UAKhB7rI,EAAAmH,OACO,UAAAnH,EAAA8T,OAAAnc,KAAA6zI,eACC3sI,EAAQuG,KAAAktC,SAAA/qC,KAAA,CACAw2C,OAAA,CAAAhoD,KAAAiK,EAA0B9G,MAAQ/C,GAAAq8E,GAClD3vE,MAAAhN,OAAAX,EAAA,yBAAAW,CAAAkf,KAKMlW,EAAEuG,KAAIktC,SAAO/qC,KAAK,CAChBuM,MAAA,CAAA/d,KAAAiK,EAAA9G,MAAA/C,GAAAq8E,GACF3vE,MAAAhN,OAAAX,EAAA,yBAAAW,CAAAkf,MAIR/U,EAAAytE,OAEyD,UAAxCztE,EAAiB8T,OAAuBnc,KAAA6zI,eACxC3sI,EAAAuG,KAAYktC,SAAQ/qC,KAAA,CACvBw2C,OAAY,CAAAhoD,KAAMiK,EAAA9G,MAAA/C,GAAA6J,EAAA9G,OAC9B2J,MAAAhN,OAAAX,EAAA,yBAAAW,CAAAg2I,KAKShtI,EAAUuG,KAAKktC,SAAI/qC,KAAU,CACnCuM,MAAA,CAAA/d,KAAAiK,EAAA9G,MAAA/C,GAAA6J,EAAA9G,OACH2J,MAAAhN,OAAAX,EAAA,yBAAAW,CAAAg2I,SASC5B,EDwB2C,GCb7C6B,GAAA,MACE,CACAC,gBAAgB,EACjBx4I,MAAA,OAEDy4I,UAAA,CAAA7kI,KAAA,4BAAAsmE,KAAe,4BACbw+D,WAAW,CAAA9kI,KAAA,sBAAgCsmE,KAAC,2BAE3C,CAEDl6E,MAAM,YACJ,CAAI4T,KAAE,4BAAAsmE,KAAS,kCAEf,CAEFl6E,MACE,QAOFsP,MAAM,CAAAsE,KAAA,2BAAuCsmE,KAAC,qCAK5C,cACEtmE,KAAA,2BAASsmE,KAAA,oCAGX,sBAEC,CAAAtmE,KAAA,2BAAAsmE,KAAA,2CAGC,uBAaAy+D,EAAW/0I,OACZ,WAAA0F,KAAAivI,IAAArtI,QAAAytI,EAAA7B,eAEGA,UAAW,OAEd,aAAAA,gBAED,MACE6B,EAAU/kI,MAAS+kI,EAAUn3H,UAAWlf,OAAWX,EAAE,yBAAbW,CAAaq2I,EAAAn3H,UAAA5d,GAAA,UACtD+0I,EAAAz+D,MAAAy+D,EAAAL,UAAAh2I,OAAAX,EAAA,yBAAAW,CAAAq2I,EAAAL,UAAA10I,GAAA,YAIC20I,GAAaI,EAAK7B,kBACA,MAAlB0B,eACD50I,IAAAjC,EAAA,iBAAAi3I,MAAA9B,EAAA4B,WAAA5B,EAAA2B,kBAIU7kI,KAAOtR,OAACX,EAAA,yBAADW,CAACw0I,EAAAxnI,MAAAsE,KAAAhQ,GAAA,YACRgQ,KAAOtR,OAACX,EAAA,yBAADW,CAACw0I,EAAAxnI,MAAA4qE,KAAAt2E,GAAA,aAIR,oBACVi1I,EAAA7I,EAAApsI,QAES,IAAVA,IAAaA,EAAAjC,EAAA,iBAAA2tD,WAEb0gF,UAAYA,OACZpsI,MAASA,EChGd,SDkGeiB,UAAI0P,KAAa,SAAA9I,QAC3BqtI,YAAc10I,KAAM4rI,UAAStwI,MAAOo5I,iBACpCrtI,UAGO5G,UAAUszI,eAAoB,SAAQ7sI,EAAA5L,QAC3Co5I,aAA4C,IAA1Bp5I,EAACo5I,YAAavvI,gBAU5BovI,EAAa1G,EAAW8G,EAAMC,EAAAC,IAN9B,aACFzpB,EAAM,UAAAprH,KAAA4rI,UAAAzsH,MAAA/gB,MAAAq5B,gBACP2zF,EAAA,UAAAprH,KAAA4rI,UAAAzsH,MAAA3gB,IAAAi5B,SAKSn8B,EAAIo5I,YAActzI,IAAM,SAASL,GAAA,OAAS0lB,EAAA,KAAA1lB,WACnD,EAAAqF,EAAA0uI,EAAA3vI,OAAAiB,WAAU0uI,EAAgB1uI,IAClB2uI,eAAmBR,EAAWn2I,MAAEm2I,EAAAS,aAAAT,EAAA/1I,QAGxCJ,OAAAm2I,EAAA/1I,OAAMA,GAAA+1I,EAAAn2I,SAGEA,MAAQm2I,EAAW/1I,OACxBJ,KAAQm2I,EAAO/1I,MAElB,CAEDJ,KAAA4B,KAAWi1I,eAAWV,EAAan2I,MACnCI,GAAAwB,KAAQi1I,eAAcV,EAAa/1I,QAGzBu2I,eAAiBR,EAAAS,gBAC1BD,cAAAR,EAAAS,gBAIEA,aAAmBT,EAAcQ,gBAEpCR,EAAKS,YAAcT,EAAAQ,iBAElBA,gBAEDG,EAAA92I,KAAU+2I,UAAQx2H,OAAS41H,EAAAQ,gBAG7BR,EAAeS,cAEfE,EAAU12I,GAAI22I,UAAMx2H,OAAQ41H,EAAaS,cAEvCE,EAAI92I,KAAA+2I,WAAiB,OAAAD,EAAA92I,KAAAm+B,GAAA,OAAA24G,EAAA92I,KAAA+Z,MACnB/Z,KAAQm+B,EAAI,SACVpkB,EAAO,SACP1S,EAAO,KAEVjH,GAAA22I,WAAA,OAAAD,EAAA12I,GAAA+9B,GAAA,OAAA24G,EAAA12I,GAAA2Z,IAED+8H,EAAI12I,GAAA+9B,EAAU,KACZ/9B,GAAA2Z,EAAQ,QACN1S,EAAK,MAEJrH,MAAA82I,EAAA12I,KAYH,YARGN,OAAAktH,EAAA,SAAAltH,CAAAk3I,EAAAh3I,OACJnC,IAAA,YACFA,IAAA,YACF04I,EAAA14I,IAAA,YACF04I,EAAA7uI,IAAAovI,EAAA92I,KAAAm+B,EAAA,SAEDo4G,EAAA7uI,IAAAovI,EAAA92I,KAAA+Z,EAAA,WACQw8H,EAAS7uI,IAAGovI,EAAA92I,KAAAqH,EAAA,WACNkvI,EAAaU,QAAaD,EAAG52I,GAAA62I,QAAA,CACnC,KAAQH,EAAU92I,KAAK+2I,WAAKD,EAAA92I,KAAA+2I,YAAAR,EAAAW,cAEtBX,EAAA7uI,IAAA,YAEX,GAAA6uI,EAAAU,OAAAD,EAAA52I,GAAA62I,OAES,MAIJ,GAFJT,EAAa12I,OAAAktH,EAAA,SAAAltH,CAAAy2I,GAETO,EAAM92I,KAAUm+B,GAAI24G,EAAQ12I,GAAA+9B,EAC9Bq4G,EAAW9uI,IAAAovI,EAAY12I,GAAG+9B,EAAE24G,EAAA92I,KAAAm+B,EAAA,cAG1B,GAAQ24G,EAAO92I,KAAAm+B,EAAA24G,EAAA12I,GAAA+9B,EACjB,KAAWq4G,EAAG1tG,SAAAguG,EAAA12I,GAAA+9B,GACfq4G,EAAA9uI,IAAA,gBAOI,IAFN8uI,EAAA9uI,IAAA,GAAAovI,EAAA92I,KAAAm+B,EAAA,SAEaq4G,EAAA1tG,SAAAguG,EAAA12I,GAAA+9B,GACfq4G,EAAA9uI,IAAA,gLCjQoB6uI,EAAAU,OAAAD,EAAA52I,GAAA62I,QAAAT,EAAAS,OAAAD,EAAA52I,GAAA62I,kDAMpBV,EAAA7uI,IAAA,YAEK+uI,EAAgBtmI,GAAAgmI,EAAAv0I,KAAAR,OAChB,IAAS,IAAGuP,EAAA,EAAAA,EAAA8+H,EAAA1oI,OAAA4J,IAAA,CAElB,IAAAhG,EAAA8kI,EAAuB9+H,GACPwlI,EAAI/kI,MACNtI,EAAGuG,KAAYktC,SAAA/qC,KAAA,CACXuqB,MAAS,CAAC/7B,KAAA2K,EAAA3K,KAAWI,GAAAuK,EAAAvK,IACrB0M,MAAI2pI,EAAmBrlI,OAGpC+kI,EAAAz+D,OACF5uE,EAAAuG,KAAAktC,SAAA/qC,KAAA,CACFuqB,MAAA,CAAA/7B,KAAA2K,EAAA3K,KAAAI,GAAAuK,EAAA3K,MAEa8M,MAAA2pI,EAAA/+D,OAGhB5uE,EAAAuG,KAAAktC,SAAA/qC,KAAA,+CASE6kI,EAAiBh0I,UAAAw0I,eAA8B,SAAExjG,GAC3C,IACFtwC,EAAQ,CAAAo7B,EAAS,KAAApkB,EAAA,MACb4D,EAFS,qBAEP6tB,KAAA6H,GACV,OAAO11B,GAGDA,EAAA5W,OAAA,IACLhE,EAAAo7B,EAAA5d,OAAA5C,EAAA,IAEI5a,EAASgX,EAAG,EACf4D,EAAA5W,OAAA,QAAAc,IAAA8V,EAAA,KACI5a,EAASgX,EAAMwG,OAAI5C,EAAS,KAE/B5a,EAAAo7B,EAAA,KACKp7B,EAAQo7B,EAAA,IAEfp7B,EAAAgX,EAAA,KAEKhX,EAAcgX,EAAG,KAIvBhX,GAlBYA,GAoBbszI,ED0FgB,GCpFdc,GAAAr7I,EAAA,oBCvBmBsO,EAAM6lH,EAAWmnB,EAAA7sI,EAAAV,gBAC7B,SAAUb,kBDoCf8vF,aACC,GAEF9wF,EAAO,EAAAA,EAAO8wF,EAAA/xF,OAAAiB,IAIlB,IAHK,IACJ0O,EADIoiF,EAAA9wF,GACJ0O,WAEQ/F,EAAA,EAAeA,EAAA+F,EAAe3P,OAAkB4J,IACf,OAA5B+F,EAAW/F,GARd,IASVT,EAAAsB,KAAAkF,EAAA/F,GATU,IC/EY,OAAAT,EA4CdmnI,CAAA,CAAAruI,oBAAM,IACCA,EAAMmP,SAId/N,KAAI,OAJmB,gBApCpB8F,EAAA+/G,EAAA1lH,EAAAV,GAST,QARCytI,EAAA,GAEKC,EAAAC,GAAAjtI,EAAA0lH,GACNwnB,EAAeD,GAAc3tI,EAAEomH,GAE/BynB,EAAAH,EAEAp6G,EAAA,EACMu6G,GAAYD,GAEZH,EAAUI,GAAA,EAEZA,EAAQH,EAAStnB,EAAA9yF,EACnBA,QAEA,IAAAn1B,EAAO,EAAGA,EAAGkI,EAAUnJ,OAAQiB,IAEhC,KAAAkI,EAAAlI,GAAAuC,GAAA2F,EAAAlI,GAAA6B,GAAA,KAEG8tI,EAAUH,GAAUtnI,EAAAlI,GAAAioH,KAClB0nB,GAAaL,EAAUK,GAAA,QAExBpvH,EAAA5lB,EAAAK,IAAAs0I,EAAA,SAAA31H,EAAA+1H,iBAAMA,GAAA/1H,cAGNhf,EAAAq6E,OAAA46D,EAAA,SAAA9gI,GAAA,OAAAA,EAAA,KAWU+gI,CAAwB3nI,EAAA+/G,EAAA1lH,EAAAV,KAChCO,KAAAktI,yBAOAn0I,EAAA8sH,qBAAM9sH,EAAA8sH,KAaf,SAAS6nB,GAAAC,EAAkBrmG,GACzB,IAAA9B,MAAA8B,KCnEkC,KADS7zB,EDoE3Ck6H,GCnEkChxI,QAAAixI,GAAAn6H,EAAA,KAAAm6H,GAAAn6H,EAAA,KDmElC,CCpE2C,IAAAA,EDuEzCna,EAAK2kB,EAAmB,EAAA0vH,EAAA,GAAAE,EAAAv0I,EAAA,GAAAw0I,EAAAx0I,EAAA,aAiFfu0I,EAAAC,EAAAxmG,GACL,eACAA,IACD7nC,KAAA6nC,IACFnnC,KAAAmnC,EACFwmG,EAAAruI,KAAA6nC,IArFUumG,EAAIC,EAAWxmG,YAqEPumG,EAAAC,KAGfruI,MAAMouI,EAAY1tI,QAElBA,KAHM,MAINV,KAJM,OAKDA,MAAAquI,EAAA3tI,QACLA,KANM,iBAtET0tI,EAAAC,OAECl8F,EAAc,IAAPi8F,EAAG1tI,KAAe,IAAA2tI,EAAA3tI,KAAA,IAAA0tI,EAAApuI,KAAA,IAAAquI,EAAAruI,IACzBsuI,EAAUC,GAAIH,EAAWC,MAC1Bl8F,GAAAm8F,EACFF,EAAA1tI,IAAA0tI,EAAApuI,IAAA,IAAAouI,EAAA1tI,IAED0tI,EAASpuI,IAAAouI,EAAgBpuI,IAAqC,EAAAouI,EAAsCpuI,IAAa,EAC3GquI,EAAK3tI,IAAQ2tI,EAAAruI,IAAA,IAAAquI,EAAA3tI,IACf2tI,EAAMruI,IAAOquI,EAAMruI,IAAA,EAAAquI,EAAAruI,IAAA,OAGnB,YC/BAouI,EAAAC,UAGAD,EAAK1tI,KAAM,GAAA2tI,EAAaruI,KAAM,GAAMouI,EAAMpuI,KAAQ,GAACquI,EAAA3tI,KAAA,ED4BnD8tI,CAAoBJ,EAAAC,GACrBD,EAAA1tI,KAAA,GACF0tI,EAAA1tI,KAAA0tI,EAAApuI,IAEQquI,EAAAruI,KACPquI,EACA3tI,MAKQ0tI,EAAOpuI,KAAMouI,EAAA1tI,IACZ2tI,EAAO3tI,KAAM2tI,EAAAruI,SAGvB,CAOQ,IAAAyuI,WChDLL,EAAAC,SACAK,QACKN,EAAWC,GAClBM,EAAEN,EAAA3tI,IAAA0tI,EAAA1tI,IAAA2tI,EAAA3tI,IAAA,EApBAguI,EAAUL,EAAGruI,IAAAouI,EAAApuI,IAAAquI,EAAAruI,IAAA,mBAGd,IAAA4uI,EAAA33I,KAAA08B,IAAAy6G,EAAA1tI,KAmBDmuI,EAAA53I,KAAA08B,IAAAy6G,EAAkBpuI,uBACV8uI,EAAE73I,KAAA08B,IAAA06G,EAAAruI,KACF+uI,EAAArwH,EAAsB5lB,EAAAkH,IAAA,CAAA4uI,EAAAC,qBAC5BG,EAAwBtwH,EAAA5lB,EAAAkH,IAAA,CAAAivI,EAAAH,IAAnBI,EAAMxwH,EAAS5lB,EAAA4H,IAAA,CAAAuuI,EAAAH,MAClBK,EAAaJ,EAAAI,EAAAJ,IACLG,EAAOF,EAAYE,EAAAF,SAK1BtuI,IAAA,GAAA2tI,EAAA3tI,IAAA,GACFiuI,EAAAP,EAAApuI,IAAAquI,EAAAruI,6BAEH,OADE2uI,EAAOD,EAAiBC,EAAAD,ED+BnBU,CAA4BhB,EAAAC,GACvBC,EAGLF,EAAiB1tI,IAAS,GACjB0tI,EAAI1tI,IAAI0tI,EAASpuI,IAAKyuI,EACvCJ,EAAA3tI,IAAA2tI,EAAAruI,IAAAyuI,IAIeL,EAAQpuI,IAAIouI,EAAO1tI,IAAO+tI,EACzCJ,EAAAruI,IAAAquI,EAAA3tI,IAAA+tI,GAKAY,GAAAjB,EAAAC,IAEQD,EAAA1tI,IAAmB2tI,EAAiB3tI,IAAgB2tI,EAAA3tI,IAAA+tI,EAAAL,EAAA1tI,IAC3D2tI,EAAA3tI,IAAA0tI,EAAA1tI,IAAA0tI,EAA6C1tI,IAAA+tI,EAAAJ,EAAA3tI,IAC/B0tI,EAAQpuI,IAAIquI,EAAOruI,IAAQquI,EAAMruI,IAAMyuI,EAAQL,EAAIpuI,IAClEquI,EAAAruI,IAAAouI,EAAApuI,IAAAouI,EAAApuI,IAAAyuI,EAAAJ,EAAAruI,MAIKouI,EAAc1tI,IAAO0tI,EAAS1tI,IAAA,EAAA2tI,EAAA3tI,IAAA+tI,EAAAL,EAAA1tI,IACrB2tI,EAAO3tI,IAAM2tI,EAAM3tI,IAAM,EAAM0tI,EAAM1tI,IAAG+tI,EAAAJ,EAAA3tI,IACvC0tI,EAAMpuI,IAAMouI,EAAMpuI,IAAI,EAAGquI,EAAUruI,IAAKyuI,EAAAL,EAAApuI,IACrDquI,EAAAruI,IAAAquI,EAAAruI,IAAA,EAAAouI,EAAApuI,IAAAyuI,EAAAJ,EAAAruI,MA2BH,SAACouI,EAAAC,EAAAxmG,iDAvBWumG,EAAcC,EAASxmG,ICtI5B,SAAMsmG,GAAqB38G,GA0BlC,cAAAA,GAAA,QAAAA,WASE+8G,GAAAH,EAAkCC,UAOlCD,EAAA1tI,KAAA,GAAe2tI,EAAA3tI,KAAY,GAAA0tI,EAAKpuI,KAAM,GAAAquI,EAAaruI,KAAK,cAG3CouI,EAAQC,YAEf3tI,KAAC,GAAW0tI,EAAKpuI,KAAO,GAAIquI,EAAA3tI,KAAA,GAAA2tI,EAAAruI,KAAA,SA8B9B/N,EAAA,WACAA,EAA4CqhC,EAAAg8G,OAkBvC,OACE,MACL,4BACH,SAAA33I,YACC43I,EACE33I,SACGD,EAAWG,KAAAC,KAAAH,IAAAG,KAqCrB,sBAlCO,SAAA04B,GAAA,OAAA54B,EAAAD,MAAA43I,aAAA33I,EAAAD,MAAAuH,OAAAsxB,MACHg/G,aAAA,WACF,IAAAv7H,EAAA,IAAArc,EAAAG,MAAAkc,MAAA,IAhFM3L,EAAA,CAAA+F,MAAezW,EAAAD,MAAAuH,OAAAmP,MAAA4F,SACpBrc,EAASe,SAAK,CAAAsb,UACdrc,EAAQD,MAAK63I,aAAAlnI,IAEb1Q,EAAAq5E,cAAe,SAAQjuE,GACvBpL,EAAAD,MAAcs5E,cAAQr5E,EAAAD,MAAAuH,OAAA8D,GANHpL,EAAAqjH,eA2FSrjH,EAAAG,MAAA,CAAhCkc,MAAArc,EAAAD,MAAAuH,OAAA+U,OAsBCrc,EChJsB,SDwGZ,EAAA03I,EAAA53I,KAwBTa,UAeCk3I,mBAAA,WAdO,IAAAtxH,EAAAvkB,EACA+S,EAAA7U,KAAAH,MAAEuH,EAAAyN,EAAAzN,OAAAynH,EAAAh6G,EAAag6G,QACrB+oB,EAAO,OAQL,QAAAC,EAAApxH,EAAa,EAAAqxH,IAAAC,EAAyCF,EAAa7iI,QAAQ+iI,EAAO9iI,KAAA8iI,EAAWF,EAC1F7iI,OACC,CACJ,IAAAgjI,EAAAD,EAAAx2I,MAnBG,GAAAvB,KAAAH,MAAAm4I,GAAgD,CAC9C,IAASC,EAAA7wI,EAAA6Y,YAAA7Y,EAAA2V,MAAAi7H,IACJJ,EAAUhoI,KAAAc,EAAA3P,EAAAmB,cAAAg2I,GAAA,CAAA5xI,IAAA0xI,cAAAz2I,MAAA02I,EAAAppB,eAgC1B,MAASrzC,GAAuCn1D,EAAA,CAAAgP,MAAAmmD,GAA1B,QACb,IACRu8D,MAAA9iI,OAAAnT,EAAA+1I,EAAAp8D,SAAA35E,EAAA/B,KAAA83I,GAE8B,WAAAxxH,EAAA,MAAAA,EAAAgP,iBAO7BmiH,EAAA/2I,UAAAoB,OAAA,eAAAC,EAAA9B,KAAAH,MAgBCuH,EAAAtF,EAAAsF,OAAAkH,EAAAxM,EAAAwM,OAAAugH,EAAA/sH,EAAA+sH,QAAAqiB,EAAApvI,EAAAovI,OAfCiH,EACE36E,KAAC,8BAOU0zE,EAAuCkH,+BACxC,IAANhxI,EAAA+U,QAKJk8H,EAAA/pI,EAAAtO,KAAA23I,qBAAA,GACHW,EAAA5nI,EAAA3P,EAAAmB,cAAAq2I,GAAA,CAAA/2I,MAAA4F,EAAAmP,MAAArL,MAAA9D,EAAA8D,MAAAiR,MAAAnc,KAAAC,MAAAkc,MAAAs7H,aAAAz3I,KAAAy3I,aAAAt+D,cAAAn5E,KAAAm5E,cAAAu+D,aAAA13I,KAAA03I,eAtBM,OAAA7oB,EACEn+G,EAAS3P,EAAAmB,cAAA,MAAAH,UAAA,uBAAAo2I,GAChBznI,EAAe3P,EAAAmB,cAAQ,UAAAo2I,GACvBD,GAJ2B3nI,EAwB9B3P,EAAAmB,cAAA,OAAAH,UAAA,uBAAAo2I,GAQQG,EACOD,MAGL36E,aAAA,CACRmxD,SAAA,EACDqiB,QAAO,EACRuG,aAAA,mECxMsBD,EDwGlB,CCvGwClhH,EAAA,eAGiBiiH,GAAA,SAAA34I,GA4D7B,SAAA44I,IAmB/B,OAAY,OAAZ54I,GAAmCA,EAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,YAnBrCymB,EAAA,EAAA+xH,EAAA54I,KA2CEa,UAAiBoB,OAAC,eAChB/B,EAAIE,KACJ8B,EAAI9B,KAAMH,MAAO2B,EAAIM,EAAMN,MAAO0J,EAASpJ,EAACoJ,MAAQiR,EAAEra,EAAAqa,QACpDnc,KAAIH,MAAAs5E,EAAyBtkE,EAAGskE,cAAAu+D,EAAA7iI,EAAA6iI,sBAE/B32I,EAAAmB,cAAAu2I,GAAA,CAAAnyI,IAAA,OAAA4E,QAAAiR,QAAAg9D,gBAAAu+D,mBAAM32I,EAAAmB,cAAA,KAAAH,UAAA,6BAAAnG,MAAA4F,EAAA8E,IAAA,QAAA+vB,QAAA,SAAAqC,GAAA,OAAA54B,EAAAD,MAAA43I,aAAA/+G,KAAAl3B,OAGRk8D,aAAA,2BACC,gBAhHwD,GAmHhD,wBACXg7E,GAAC52I,OAnCAoJ,EAAKpJ,EAAKoJ,eACInK,EAAEmB,cAAW,KAAAH,UAAY,sBAAA+6B,MAAA,CAAA5xB,8BAIzC,SAAAytI,IAAA,OAeC,OAfD/4I,GAeCA,EAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KAAD,OAjBAymB,EAAC,EAAAkyH,EAAA/4I,KAIUa,UAAcoB,OAAK,eAC1B/B,EAAAE,YACE0Q,EAAW3P,EAAAmB,cAAkB3E,EAAY,mBAAA4e,MAAAnc,KAAAH,MAAAsc,MAAAjR,MAAAlL,KAAAH,MAAAqL,MAAA5I,SAAAtC,KAAAH,MAAAs5E,cAAAu+D,aAAA13I,KAAAH,MAAA63I,aAAAkB,mBAAA,YAAA92I,OACzCqoB,EAAIroB,EAAIqoB,IAAK0uH,EAAM/2I,EAAA+2I,gBAAAC,EAAAh3I,EAAAg3I,uBACjBpoI,EAAQ3P,EAAQmB,cAAC,QAAAioB,MAAAkM,QAAAwiH,EAAAjtG,aAAAktG,EAAA/2I,UAAA,uBAClBhB,EAAAmB,cAAAw2I,GAAA,CAAAxtI,MAAApL,EAAAD,MAAAqL,cAGMwyD,aAAc,4BAEtB,0BACF,cAEFi7E,KAiBD,wBACET,GAAMr4I,OAEN0B,EAAI1B,EAAA0B,QACK1B,EAAAm4I,mBACRnpB,QAEDn+G,EAAA3P,EAAAmB,cAAA,KAAwC,CAAAH,UAAA,sBAAAi2I,GAAAz2I,KAE5BR,EAAKmB,cAAY,MAAO,CAAAH,UAAA,sBAAAi2I,GAAAz2I,UAW/B,SAAA3B,YACEm5I,EAAAl5I,OACLC,EAAAF,EAAAG,KAAAC,KAA0BH,IAAAG,KAsC5B,SArCEg5I,eAAW,SAAkB5xI,EAACka,OAC5Bk0H,EAAe/uH,EAAmB,KAAA3mB,EAAAG,MAAAu1I,gBAChCt7G,SAAO5Y,EAAA0xD,SAAA1xD,EAAAG,SACR+zH,EAAApuI,EAAAmP,cAEDi/H,EAAwBpuI,EAAImP,OAIzBi/H,EAAapuI,EAAAmP,QAAA,EAmBdi/H,EAAiB11I,EAAKm5I,0BAAgB7xI,GAEtCtH,EAAAe,SAAe,CAAA20I,aAAcA,IAC7B11I,EAAAD,MAAYm5I,eAAQxD,IAE1B11I,EAAMG,MAAA,CAENu1I,aAAA11I,EAAAD,MAAA21I,cAEM11I,WAvCL,EAAAi5I,EAAAn5I,KAyCKa,UAAmCy4I,WAAA,eACvCp5I,EAAQE,KACR4gE,EAAOn6C,EAAO,EAAAzmB,KAAAH,MAAA+gE,aAAA,GAjHhB,OAkHE5gE,KAAAH,MAAAoQ,MAAAjQ,KAAAH,MAAAG,KAAAH,MAAAoQ,OAAAjQ,KAAAH,MAAAs5I,eAEIv4E,EAAWj6C,EAAA5lB,EAAAq6E,OAAAxa,EACf,SAAYx5D,GAWZ,IAAA6I,EAAA7I,EAAA2V,MAAAjd,EAAAD,MAAAoQ,MAtIG,OA0IN,OAAAA,IA5IMA,GAAYwtC,KAEPxtC,IAELjQ,KAAKH,MAAA21G,WACH50C,EAAOA,EAAAluD,YAGdkuD,KAEQngE,UAAOw4I,0BAAA,SAAA7xI,GACf,IAAAouI,EAAiB/uH,EAAA,KAAAzmB,KAAAC,MAAAu1I,cAsJrB,OArJIA,EAAgBpuI,EAAAmP,eAChBi/H,EAAcpuI,EAAQmP,OAGtBvW,KAAAH,MAAA+gE,WAAAwwB,MAAA,SAAA7vF,GA6HJ,OAAAA,EAACgV,QAAAnP,EAAAmP,OAEDi/H,EAAAj0I,EAAAgV,SAkBCvW,KAAAH,MAAA+gE,WAAArN,QAAA,SAAAhyD,UAjBCi0I,EAAAj0I,EAAAgV,SAKMvW,KAAAH,MAAA+gE,WAAArN,QAAA,SAAAhyD,GACAA,EAAAgV,QAAAnP,EAAAmP,QAAAi/H,EAAAj0I,EAAAgV,QAAA,KAWRi/H,GAEAuD,EAAAt4I,UAAAoB,OAAA,WAA0B,IAAAC,EAAA9B,KAAAH,MAAAu5I,EAAAt3I,EAAAs3I,cAA4CC,EAAAv3I,EAAAu3I,UAAAC,EAAAx3I,EAAAw3I,UAAArpI,EAAAnO,EAAAmO,KAAAulG,EAAA1zG,EAAA0zG,SAAAn1F,EAAAve,EAAAue,UAAAC,EAAAxe,EAAAwe,SAAtEi5H,EAAA,CAAAjrI,OAAsExM,EAAAwM,OAAtE3F,IAAsE7G,EAAA6G,IAAtEV,IAAsEnG,EAAAmG,IAAtE6W,IAAsEhd,EAAAgd,IAAtEC,QAAsEjd,EAAAid,QAAtEL,MAAsE5c,EAAA4c,OAAtE82H,EAAAx1I,KAAAC,MAAAu1I,aACEgE,EAAe,CAAAn5H,UAAWA,EAAAC,YACxBm5H,EAAY,CAAAxpI,KAAOA,EAAMulG,SAAUA,GACnC50C,EAAa5gE,KAAIk5I,aAAY1nI,OAAA,SAAApK,GAAA,OAAAA,EAAAgZ,eAAAo5H,KAC7BE,GAAa15I,KAAMH,MAAEs5I,aAAA,6BAAAC,IAMV,UAFXC,GAAAC,SAA6CrzI,QACzCozI,GAAkBC,EAAEA,EAAA,OAAArzI,KAIdwgB,EAAa,GAAAm6C,aAAA40E,eAAAwD,eAAAh5I,KAAAg5I,eAAAtB,aAAA13I,KAAAH,MAAA63I,aAAAjiC,aAAAz1G,KAAAH,MAAA41G,aAAAt8B,cAAAn5E,KAAAH,MAAAs5E,eAAAogE,EAAAE,UACrB/oI,EAAc3P,EAAAmB,cAAA,OAAAH,UAAA,wBAAA23I,EAAA58G,MAAA68G,GAAA35I,KAAAH,MAAAs5I,aAAAzoI,EAAA3P,EAAAmB,cAAA03I,GAAAnzH,EAAA,KAAAozH,IAAAnpI,EAAA3P,EAAAmB,cAAA43I,GAAArzH,EAAA,KAAAozH,QAEhBn8E,aAAW,CACbpvD,QAAE,SA6CHrG,KAAA,EA3CC6W,KAAA,EAAAC,SAAA,EACEL,OAAM,EACAy6H,cAAA,EACNE,WAAM,EACNppI,UAAAhK,YAEI,gBACE,kBAEF,0BACE,0BACE,2BACC,gBArHJ,GAmID,eAiBR6zI,GAAC,SAAAl6I,GAOD,SAAAm6I,IAAoC,cAAAn6I,KAAA4pB,MAAAxpB,KAAAypB,YAAuDzpB,KAc3F,OAnF0BymB,EA8DzB,EAAAszH,EAAAn6I,KAODa,UAAAoB,OAAA,WACE,IAAA/B,EAAAE,kDAWDu5I,EAAA,CAAAjrI,gBAAA3F,UAAAV,UAAA6W,UAAAC,kBAAAL,eATC,OAAAkiD,EAAAx/D,IAAA,SAAAgG,EAAAhB,GAAA,OAAAsK,EAAA3P,EAAAmB,cAAA83I,KAIe,GAKjB1zI,IAAAc,EAAAvK,GAAA,IAACuJ,EAAAgB,SAAA8pI,OAAAsE,EAAApuI,EAAAmP,QAAAgjI,EAAA,CAAA9B,aAAA33I,EAAAD,MAAAm5I,eAAA7/D,cAAAr5E,EAAAD,MAAAs5E,cAAAu+D,aAAA53I,EAAAD,MAAA63I,mBAEDqC,EArBC,GAqB2B,eAA5BH,GAAA,SAAAh6I,GAQA,SAACy1G,IAPC,IAAAv1G,EAAA,OAAAF,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KCvTyC,ODwTvCF,EAAA21G,aACE,SAAAlhE,GACE,IAAAihE,EAAA11G,EAAAD,MAAA21G,SAGLp6B,EAAAt7E,EAAAD,MAAAoQ,KACHskC,IAAC6mC,IAR2Bo6B,EAQ3B,mEC9T0C11G,EAmBN,gBAjBEu1G,EAAA50G,UAAAoB,OAAA,WACO,IAAA/B,EAAAE,KACH4gE,EAAA5gE,KAAAH,MAAA+gE,WACA9+D,EAAA9B,KAAAH,MAAAyO,EAAAxM,EAAAwM,OAAA3F,EAAA7G,EAAA6G,IAAAV,EAAAnG,EAAAmG,IAAA6W,EAAAhd,EAAAgd,IAAAC,EAAAjd,EAAAid,QAAAL,EAAA5c,EAAA4c,MAAAzO,EAAAnO,EAAAmO,KAAAulG,EAAA1zG,EAAA0zG,SAAAggC,EAAA1zI,EAAA0zI,aACH+D,EAAA,CAAAjrI,SAAA3F,MAAAV,MAAA6W,MAAAC,UAAAL,SACV,OAAAhO,EAAA3P,EAAAmB,cAAA,aAEPwO,EAAA3P,EAAAmB,cAAA,gBACAwO,EAAA3P,EAAAmB,cAAA,OAAA46B,MAAA,CAAAj+B,MAAA,WACyB6R,EAAA3P,EAAAmB,cAAA,aAC0BwO,EAAA3P,EAAAmB,cAAA,UAC/BwO,EAAA3P,EAAAmB,cAAA,MAAA46B,MAAA,CAAAg/D,UAAA,UACYg8C,GAAA12I,IAAA,SAAA64I,GACG,OAAAV,EAAAU,IAAAvpI,EAAA3P,EAAAmB,cAAAg4I,GAAA,CAAA5zI,IAAA2zI,aAAAhqI,OAAAulG,WAAAn/E,QAAAv2B,EAAA21G,mBAEL/kG,EAAA3P,EAAAmB,cAAA,aAAA0+D,EAAAx/D,IAAA,SAAAgG,EAAAhB,GAAA,OAAAsK,EAAA3P,EAAAmB,cAAA83I,GAAAvzH,EAAA,GAAAngB,IAAAc,EAAAvK,GAAA,IAAAuJ,EAAAyoH,SAAA,EAAAznH,SAAA8pI,OAAAsE,EAAApuI,EAAAmP,OAAAkhI,aAAA33I,EAAAD,MAAAm5I,eAAA7/D,cAAAr5E,EAAAD,MAAAs5E,cAAAu+D,aAAA53I,EAAAD,MAAA63I,cAAA6B,SAEhBlkC,EDmSrC,CClS0B/+E,EAAA,eACO4jH,GAAA,SAAAt6I,GAWZ,SAAAu6I,IACyD,IAAAr6I,EAAA,OAAAF,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KAKM,OAJZF,EAAAu2B,QAAA,kBAAAv2B,EAAAD,MAAAw2B,QAAAv2B,EAAAD,MAAAo6I,WAIYn6I,SAhBzB2mB,EAAA,EAAA0zH,EAAAv6I,GAoB3Du6I,EAAA15I,UAAAoB,OAAA,WAgBE,IAAAC,EAAA9B,KAAAH,MAAoBo6I,EAA0Cn4I,EAAAm4I,SAAgBhqI,EAAAnO,EAAAmO,KAAAulG,EAAA1zG,EAAA0zG,SAA9E,OAAA9kG,EA8BC3P,EAAAmB,cAAA,MAAAH,UAAA,UAAAs0B,QAAAr2B,KAAAq2B,SA9BmB4jH,EAAoBhqI,IAAAgqI,GAAYvpI,EAAA3P,EAAAmB,cAAA,QAAAH,UAAAyzG,EAAA,wCA6HpD2kC,EAlK+B,GAsKtB,kBACL,SAA2Bv6I,uBAGvB,UAAOA,EAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,cAFuB,EAAAo6I,EAAAx6I,4CAK1BsC,cAAM3E,EAAwB,iBAAA88I,qBAAA,qBACrBC,GAAM7zH,EAAkB,EAAW,GAAEzmB,KAAMH,YAP5D,GAUG,kBAOG3F,EAAY,aAGL,WA/HAgE,OAAcq8I,GAAkC,EAAhDr8I,CAAgDs8I,OAC/B,oBAEhCC,EAAA/gI,EAAAswD,EAA2B/D,GAC3B,IAAInmE,EAAKE,UACP0Z,MAAKA,OACNswD,OACFhqE,KAAAimE,UAEDjmE,KAAA06I,4BAAA,SAASC,EAAiBC,GAA1B,kBAEO,IAAKrpI,EAAM,CACP,CACRA,MAAA,CAEkB,CACK/P,MAAO,iBACN1F,KAAK,yBAC9Bu6B,QAAA,WAAuB,OAAOv2B,EAAKwrI,aAAOuP,WAAa,CAAAz8I,KAAAu8I,EAAAnwI,EAAAhM,GAAA,YAMjD,IAACo8I,EACE,OAAArpI,EAGH,IAAAupI,EAAA,CACA,CACAvpI,MAAkBqpI,EAAYtoF,SAAAxyD,EAAExE,MAAAwC,YAASsD,IAAE,SAASqxD,GACrC,MAAQ,CACZjxD,MAAAixD,EAAA72D,MAWO+K,IAAA8rD,EAAA70B,KACfppB,OAAOi+C,EAAAj+C,OACjB1Y,KAAA,iBAAA22D,EAAAj+C,OAAA,mCAME,OAAAiS,EAAA,EAAAlV,EAAAupI,UAICtqE,KAAO92D,EAAA82D,UACRuqE,YAAArhI,EAAA82D,KAAAwqE,gBAEDh7I,KAAK3E,UAAY2E,KAAKwwE,KAAKn1E,UAC5B2E,KAAA1E,MAAA0E,KAAAwwE,KAAAl1E,MAED0E,KAAA+oH,YAAA,GACE/oH,KAAIi7I,WAAW,OACb3P,aAAU,IAAUiK,GAAA,EAAAv1I,KAAAwwE,WACpB0qE,iBAAiB,IAAAC,GAAAn7I,KAAAwwE,WAClB4qE,kBAAA,IAAAC,GAAAr7I,KAAAwwE,KAAA/7D,EAAA,EAAAjV,MAAAuU,MAGD/T,KAAKmtD,QAAU,IAACmuF,GAAAt7I,KAAAgqE,KAAAhqE,KAAAwwE,KAAAn1E,UAAA2E,KAAA0Z,MAAA,WACZ,OAAM5Z,EAAMy7I,eAKlBv7I,KAAAwwE,KAAAxzE,OAAAwc,GAAA,iBAAiBxZ,KAAjBw7I,gBAA8Bp7I,KAASJ,OACrCA,KAAIwwE,KAAKxzE,OAAMwc,GAAA,SAAAxZ,KAAAqoI,SAAAjoI,KAAAJ,SAEd,EAAAwZ,GAAA,cAAAxZ,KAAAy7I,aAAAr7I,KAAAJ,MAAA0Z,GACFiM,EAAA,EAAAnM,GAAA,oBAAAxZ,KAAA07I,kBAAAt7I,KAAAJ,MAAA0Z,GAED1Z,KAAAgqE,KAAA5pE,KAAA,eAAAJ,KAAA27I,eAAuCv7I,KAAEJ,OAAzCA,KAAAgqE,KAAA5pE,KAAA,YAoBCJ,KAAA47I,YAAAx7I,KAAAJ,OAlBGA,KAAAgqE,MAAAhqE,KAAAgqE,KAAAyK,SACAz0E,KAAK67I,WAAK77I,KAAAgqE,KAAiByK,SAAA7pE,KAAA,8BAIxBnK,UAAc4nI,SAAW,SAAQyT,OACpCh8I,EAAAE,aACAwI,KAAAszI,GAAW97I,KAAAwI,UACTA,WAEGugH,YAAA/oH,KAAAwwE,KAAAu4C,aAAA,QACLgzB,eAAW/7I,KAAOwI,YACXxI,KAAQgqE,KAAA1+D,qBACL,GAAAtL,KAAAwI,KAAMxI,KAAO1E,MAAM0gJ,eACrBhsI,OAAA5D,KA6CZ,YA5CSyvI,WAAAI,iBACFjgE,EAAAj7E,EAAAu9E,uBAAAt+E,KAAA67I,iBAEN77I,KAAAk8I,cA0CC,IAAMp6I,EAAA9B,KAAA1E,MAAA0U,OAAuB1B,EAAUxM,EAAAwM,OAAQ3F,EAAS7G,EAAE6G,IAAKV,EAAKnG,EAAAmG,IAAQ6W,EAAQhd,EAACgd,IAAOC,EAASjd,EAAAid,QAAAL,EAAA5c,EAAA4c,MAC/F7J,EAAA7U,KAAA1E,MAAA0U,OAEF4jC,EAAgB,CAACulG,aAFctkI,EAAAskI,aAEGE,UAFHxkI,EAAAwkI,UAEGC,UAFHzkI,EAAAykI,UAEGrpI,KAFH4E,EAAA5E,KAEGulG,SAFH3gG,EAAA2gG,SAEGn1F,UAFHxL,EAAAwL,UAEGC,SAFHzL,EAAAyL,UAGjC67H,EAAA,CAAA7tI,SAAA3F,MAAAV,IAA4CA,EAAA6W,MAAAC,UAAAL,SAC5Cm7H,EAAOpzH,EAAA,GAAAm6C,WAAA5gE,KAAAwI,KAAAgtI,aAAAx1I,KAAAwwE,KAAAglE,cAAA5hG,EAAAuoG,EAAA,CAAAnD,eAAAh5I,KAAAwwE,KAAAwoE,eAAAvjC,aAAAz1G,KAAAwwE,KAAAilC,aAAAt8B,cAAAn5E,KAAAwwE,KAAA2I,cAAAu+D,aAAA13I,KAAAwwE,KAAAknE,eACR0E,EAAA1rI,EAAA3P,EAAAmB,cAAAm6I,GAAAxC,GAED79D,EAAgBj7E,EAAIc,OAAIu6I,EAAkBp8I,KAAA67I,WAAe,WAAgB,OAAS/7I,EAAMo8I,oBAElFz7I,UAAUg7I,aAAQ,SAAA1hI,GAErB/Z,KAAA3E,UAAAihJ,4BAIDt8I,KAAAqH,MAAO0S,EAAAze,MAAAuB,KAAAmD,KAAA1E,MAAAuB,KAAAmD,KAAAwwE,KAAA/e,mCAEPtE,QAAK/gD,KAAQ2N,EAAKlT,QAGdpG,UAAM+6I,gBAAA,gBACRn0I,YACAA,KAAM6iB,eACN7iB,KAAM,mBAEJ6iB,oBACArQ,gBACFqmC,WACWn/C,EAAGu9E,uBAAsBt+E,KAAM67I,yBAGlCH,kBAAa,SAAAp6H,EAAA9Q,mBAEpB28C,QAAQ1G,MAAMzmD,KAAKqH,mBAIds0I,eAAS,SAAYr6H,EAAA+Z,cAEX,0BAANN,QAKRb,SAAWmB,EAAC23C,WAAAhzE,KAAA3E,UAAA+B,KAAAC,SAAA2C,KAAA3E,UAAA+B,KAAAopB,iBAGhB4S,WAAW,WACTt5B,EAAAwrI,aAAAuP,WAAAx/G,EAAAlB,kBAIAzgB,MAAKoO,OAAA,WACJhoB,EAAAmmE,QAAAn/B,QAAA,CACJ1oC,KAAAF,OAAAktH,EAAA,MAAAltH,CAAAm9B,EAAAlB,MAAA/7B,MACFI,GAAAN,OAAAktH,EAAA,MAAAltH,CAAAm9B,EAAAlB,MAAA37B,sCAOUiC,UAAUm7I,YAAQ,SAAAt6H,EAAAza,EAAA+H,OACzB9O,EAAOE,KACRu8I,EAAAv8I,KAAAgqE,KAAAwyE,QAAA,SAAAx8I,KAAAgqE,KAAAwyE,QAAA,SAAAv7I,MAAA,QAEDw7I,EAAa7tI,EACd,YAAA5O,KAAA1E,MAAA6+B,MAAAY,SAKGl0B,EAAAqzB,UAAArzB,EAAAmsE,UAAEhzE,KAAA3E,UAAA+B,KAAAC,UAAA2C,KAAA3E,UAAA+B,KAAAopB,iBAcH,IAAAk2H,EAEG,GAHF18I,KAAAmtD,QAAA1G,MAAAzmD,KAAAqH,MAGGuH,EAAA,CAEN,IAED+tI,EAAA,CACetgI,SAHdrc,KAAA1E,MAAA4gB,MAAA,IAAAtN,EAAAxH,OAAA+U,MAAAof,EAAA,KAGkClf,SACnBy1C,MAAK9xD,KAAM1E,MAAO4L,QAAE4zI,WAAA,IAEhC1sH,EAAoBpuB,KAACwwE,KAAA0mB,SAAAtoF,EAAAxH,OAAAkW,gBACtB3J,EAAAya,EAAAta,OAAAlF,EAAAxH,OAAAmW,YACSq/H,EAAc1+I,OAAOX,EAAA,oBAAPW,CAAO,CAC7BuW,OAAgBkoI,EACjBn9I,MAAAtB,OAAAq8I,GAAA,EAAAr8I,IAFuBA,CAIxByV,EAAArF,OAAArN,IAAA2N,EAA+Bi5C,YACzB60F,EAAqB18I,KAAG1E,MAAA4L,QAAA4zI,UAChB58I,OAAM2+I,GAAmB,EAAzB3+I,CAAyB,CACnBK,QAASq+I,EACrB53I,KAAY2O,EAAQ3O,KACdm3G,KAAI,IAAGiP,EAAiC,cAAAh9F,GACxCiuF,SAAOztG,EAAKi5C,UACzBu0D,SAAAxtG,EAAAxH,OAAAmW,WACF5J,MAAAgpI,SAGe12I,EAGVjG,KAAK0Z,MAACoO,OAAU,WAElBhoB,EAAAi7I,YAAmB+B,wBAAmBP,GACvCz8I,EAAAi7I,YAAAgC,UAAAN,GACF38I,EAAAi7I,YAAAiC,qBAAAl9I,EAAA46I,4BAAA7zI,EAAA61I,IAED58I,EAAAi7I,YAAAkC,WAAyCp2I,eAhDlC2D,IAAS3D,EAAIuzB,GACjB,OAGGhB,WAAW,WACbt5B,EAAAwrI,aAAAuP,WAAE,CAAAz8I,KAAAyI,EAAA2D,EAAAhM,GAAA,iBA+CGiC,UAAUy8I,kBAAU,WAE3B,OAAKl9I,KAAKwI,MAGP,SAAAyyI,cAKAx6I,UAAA08I,SAAA,SAAA91I,QACC/L,MAAI4gB,MAAO,GAAK1a,OAAOxB,KAAK1E,MAAA4gB,MAAW,GAAI9P,UAChC,iEACVvQ,KAAAmE,KAAA1E,MAAA4gB,MAAA,GAAA1a,OACFm/C,SAAA3gD,KAAAgqE,WAIA1uE,MAAA4gB,MAAA,GAAA1a,OAAAxB,KAAA1E,MAAA4gB,MAAA,GAAA9P,MACF0a,IAAA,kEAEMjrB,KAAImE,KAAA1E,MAAA4gB,MAAA,GAAA1a,OACZm/C,SAAA3gD,KAAAgqE,MAGDhqE,KAAAwwE,KAAA4sE,aACMt2H,IAAwB,kDAAQ9mB,KAAAwwE,KAAA4sE,YAAAxhJ,MAAA,UAAA+kD,SAAA3gD,KAAAgqE,WAElCkxE,iBAAO/qI,KAAA9I,QACR+zI,kBAAAjrI,KAAA9I,MAGI5G,UAAA48I,kBAAkC,SAAOh2I,EAAMi2I,GAEpD,IAAAxiH,EAAA96B,KAAA1E,MAAA4gB,MAAA,GACIq/B,EAAOv7C,KAAM1E,MAAG4gB,MAAK,GAEzB4e,EAAA1uB,MAAA0uB,EAAmBt5B,QACb87I,EAAexiH,KAAK,IAEtBygB,EAACnvC,MAAAmvC,EAAA/5C,QACD87I,EAAC/hG,MAAiB,IAItB,IADA,IAAIp/B,EAAC9U,EAAYo0B,WACZr1B,EAAQ,EAACA,EAAA+V,EAAShX,OAAMiB,IAAA,CAC9B,IAAA6V,EAAAE,EAAA/V,GAEDm3I,EAAAv9I,KAAA1E,MAAc4gB,MAAd9V,GACE6V,EAAS/U,QAAQe,IAAqB,OAAlBgU,EAAK/U,QAAWe,IAAEgU,EAAA/U,QAAAe,IAAAs1I,EAAAt1I,IACpCgU,EAAM/U,QAASyB,IAAQ,OAAFsT,EAAE/U,QAAAyB,IAAAsT,EAAA/U,QAAAyB,IAAA40I,EAAA50I,QAIrBlI,UAAW+8I,iBAAG,SAAAn2I,SACfA,EAAAo0B,WAED0e,EAAAn6C,KAAA1E,MAAA6gB,MAAAg+B,QAAA,KACAg8F,EAAIhxI,OAAU,IAAa,IAAbg1C,EAAoB,KAChCrK,EAAO9vC,KAAI1E,MAAM6gB,MAAAshI,YAAA,KACVtH,EAAQvrB,WAAM96E,QAOlBrvC,UAAUi9I,uBAAA,SAAAl1I,aACbmW,OAAQC,UACRxY,EAAA,EAAQA,EAAAoC,EAAOrD,OAAUiB,OAEzBoC,EAAKpC,GAAI2W,MAAKqC,kBAGb9jB,MAAAud,MAED,GAAIrQ,EAACpC,GAAAyS,OAAwB,IAATrQ,EAAApC,GAAQyS,KAACzM,KAC7B,cAKA,QAAsB,IAAb5D,EAAKpC,GAAAyS,WAAQ,IAAArQ,EAAApC,GAAAyS,KAAAzM,OAAA5D,EAAApC,GAAAyS,KAAAzM,KACpB,WAGAhG,GAAI2W,MAAMqC,SAASzW,QACjBvC,GAAM2W,MAAAqC,gCAMP88H,YAAA,8BACDl8I,KAAUgqE,KAAGnrE,yDAIH+0I,QAAK5zI,KAAAgqE,KAAAhqE,KAAAwI,iBAGjBoV,SAAK5d,KAAA1E,MAAkBqd,OAAO3Y,KAAE1E,MAAUsiB,aAE3C5d,KAAA29I,iBAAA39I,KAAA1E,YACDsiJ,aAAc12I,EAAAlH,KAAA1E,kCACO0E,KAACwI,KAAQtB,yBACd6sI,eAAc7sI,EAASlH,KAAA1E,8BAChCy4I,eAAuB7sI,EAAAlH,KAAA1E,yBACtBuiJ,cAAA79I,KAAA+oH,YAAA7hH,QACPq0I,aAAAv7I,KAAA89I,WAAA99I,KAAAwI,KAAAxI,KAAA1E,YACDyiJ,SAAS72I,GAAA,OAEPzG,UAAKs7I,eAAqB,SAAAvzI,WAC1BpC,EAAA,EAAMA,EAAAoC,EAAArD,OAAAiB,IAAA,KACPgB,EAAAoB,EAAApC,GACFgB,EAAAoB,KAAApB,EAAAqX,aAAArX,EAAA2W,eAAA/d,KAAA1E,MAAAyiB,eACF,aAAA3W,EAAAmX,YAEDnX,EAAAoB,KAAAtK,OAAQX,EAAe,qBAAvBW,CAAuBkJ,EAAAoB,KAA+BxI,KAAAwwE,KAAArxD,QAG9Cnf,KAAKwwE,KAAKglE,aAAapuI,EAAAmP,SACzBnP,EAAOoB,KAAK,GACZpB,EAAOoQ,OAAK,OAGd/W,UAAYm9I,aAAkB,SAAK12I,EAAA5L,UAC/BA,EAAM6+B,MAAKY,MACf,IAAK,SACD7zB,EAAME,OAASyR,KAAKqhC,SAAW,GACpChzC,EAAAE,OAAAyR,KAAAshC,MAAA,SAEG,QAAA/zC,EAAA,EAAAA,EAAwBpG,KAAAwI,KAAArD,OAAAiB,IAAA,CACrB,IAAKgB,EAAApH,KAAAwI,KAAqBpC,GAChCgB,EAAAoB,KAAA,EAAApC,EAAA,EAAAgB,EAAA2V,MAAAzhB,EAAA6+B,MAAA7rB,OAAA,MAGHtO,KAAAg+I,eAAA92I,GACM,MAEF,gBACD,IAAAmnH,OAAA,EACK,GAAQruH,KAAKwI,KAACrD,OAAY,CACnB,IAAQ84I,EAAAt3H,EAAA5lB,EAAA4H,IAAAge,EAAA5lB,EAAAK,IAAApB,KAAAwI,KAAA,SAAA/C,GAAA,OAAAA,EAAAsX,MAAApU,OACZu1I,EAAAv3H,EAAA5lB,EAAAkH,IAAA0e,EAAA5lB,EAAAK,IAAApB,KAAAwI,KAAA,SAAA/C,GAAA,OAAAA,EAAAsX,MAAA9U,OACE0/B,EAAKrsC,EAAS6+B,MAAKgkH,SAAMn+I,KAAAi7I,WAAA,GAChC,GAAqB,MAArB3/I,EAAa6+B,MAAOxxB,IAErBs1I,EADqB//I,OAAiB6pI,EAAW,SAA5B7pI,CAA4B5C,EAAA6+B,MAAAxxB,IAAAu1I,EAAAv2G,IAAA,EACjDs2G,EAAA3iJ,EAAA6+B,MAAAxxB,IAEO,SAAArN,EAAA6+B,MAAAlyB,IAECi2I,EADqBhgJ,OAAM6pI,EAAkB,SAAxB7pI,CAAwB+/I,EAAA3iJ,EAAA6+B,MAAAlyB,IAAA0/B,IAAA,EACdu2G,EAAA5iJ,EAAA6+B,MAAAlyB,IAEpComH,EAAYnwH,OAAK6pI,EAAA,SAAL7pI,CAAK+/I,EAAAC,EAAAv2G,GACjBzgC,EAAME,OAAKyR,KAAAqhC,SAAA,GAAAm0E,EACXruH,KAAIwI,KAAO41I,GAAoBp+I,KAAMwI,KAAK6lH,EAAAruH,KAAAwwE,KAAAglE,aAAAyI,EAAAC,QAG1C7vB,EAAa,EAEfruH,KAAAq+I,kBAAQn3I,EAAAmnH,uBAIPjnH,OAAAyR,KAAAqhC,SAAA,GACDhzC,EAAME,OAAAyR,KAAAshC,MAAA,cACJmkG,cAAYp3I,mBAIZE,OAAWyR,KAACqhC,SAAAl6C,KAAA09I,uBAAA19I,KAAAwI,MAAA,SACb+1I,YAAAr3I,iBAKO62I,SAAQ,SAAc72I,EAACs3I,YAE/Bn3I,KAAAyf,EAAa/lB,EAAAsG,KAAArH,KAAAgqE,KAAAhqE,KAAAu7I,aAAAr0I,GACdlH,KAAAwwE,KAAAiuE,qBACQz+I,KAAAwwE,KAAAn7C,aACAr1B,KAAAwwE,KAAAqqC,4BAIPnrG,IAAA,mBAAqBgpB,QACrB83C,KAAAn7C,MAAcqD,EAAAyG,SAAA,oBACdqxC,KAAAiuE,aAAe,OACfjuE,KAAAqqC,UAAe,CAAAxlF,MAAAqD,WAGf83C,KAAAzgB,wBAGFtvD,UAAWk9I,iBAAA,SAAAriJ,SACH,WACO,QAAA49F,SAAA73F,KAAAwqH,eACd,mBAEKvwH,EAAKkc,OAAA,WACV,CACD1H,MAAA,CACKK,KAAO,CAACnQ,KAAAm9I,SAAA/8I,KAAAJ,OAChB27C,cAAA,CAAA37C,KAAAq9I,kBAAAj9I,KAAAJ,OAED47C,aAAA,CAAA57C,KAAAw9I,iBAAWp9I,KAAaJ,QAEhBgQ,OAAA,CAAS5D,MAAG,GACZhF,OAAA,CACAs3I,eAAgBpjJ,EAAAkc,OAAclc,EAAQqjJ,WACtCnnI,MAAAlc,EAAeqjJ,WAAe,KAAAnnI,EAC9BmB,MAAW,CAEbvM,KAAc9Q,EAAAqd,MACTyhC,MAAA,EACR5qC,KAAAxP,KAAA4+I,oBAAAtjJ,EAAAkU,MAAM4N,UAAApd,KAAA6+I,gBAAAvjJ,EAAAwjJ,cACEnxI,UAAArS,EAAEsiB,OAAO,EAAMtiB,EAAE2iB,UACzBhF,MAAA3d,EAAA8iB,aAGHR,OAAA,CACaxR,KAAE9Q,EAAAsiB,OACJjQ,UAAKrS,EAAA2iB,UACbJ,WAAA,CAAAviB,EAAAuiB,WAAAviB,EAAA4iB,cAGCrF,KAAS,CACTzM,KAAA9Q,EAAAud,KACHrJ,KAAA,EAED0qC,SAAA,EACWE,MAAM,EACNzsC,UAAY,GACd2K,OAAA,CACElM,KAAO9Q,EAAGgd,OAClB9I,KAAA,EACF4N,WAAA,EAEDjT,OAAA7O,EAAAgd,OAAAhd,EAAA6iB,YAAwB,GAEbk8B,WAAG,GAGZn+B,MAAQ,GACNie,MAAA,GACA1sB,KAAM,CACFitC,gBAAQ,EACTC,SAAK,GACL7sC,gBAAK,KACRF,YAAiB,EACjBmtC,WAAY,EACZD,WAAY,EACZ5vC,MAAA6zI,EACH72I,OAAA,CAAA4yB,KAAA,EAAAygB,MAAA,GAEDyjG,aAAA,EACQ/jG,kBAAQ,IAEX15B,UAAA,CAEKwZ,KAAK,IACX7vB,MAAU,QAEVupD,UAAU,CACP15B,KAAG,OAKV0/G,EAACh6I,UAAAq9I,WAAA,SAAA12I,EAAA9L,GAED,IAAA8/E,EAAA9/E,EAAA0U,OAAAC,yBACMgvI,EAAyB7jE,SAAA9/E,EAAA0U,OAAAorE,GACzB8jE,EAAwBC,QACxBC,EAAwB9jJ,EAAAkc,OAAAynI,GAAAC,GAAA5jJ,EAAA0U,OAAAmpI,aAEtB3jC,GAAoC,IAApCl6G,EAAe0U,OAAKwlG,UAAgB,IAE1C,OAAI4pC,EACIz4H,EAAgB5lB,EAAAq6E,OAAAh0E,EAAA,SAAA3B,GAAA,OAAAA,EAAAsX,MAAAq+D,GAAAo6B,MAEVz0G,EAAAq6E,OAAAh0E,EAAA,SAAA3B,GAAA,OAAAA,EAAAqY,sCACM,SAAA2pF,yXAKlBttE,MAAQ,CACRwM,SAAM3mC,KAAA3E,UAAEgkJ,cACRjzI,KAAMpM,KAAA1E,MAAA6+B,MAAE/tB,KAER2uB,KAAA,OACApyB,IAAIA,EACJV,IAAIA,EACJzG,MAAO,iBACLmmC,aACQ3nC,KAAGs/I,YAAc33G,EAAOh/B,EAAGV,OAIlCxH,UAAQu9I,eAAY,SAAY92I,OACnCygC,EAAAhhB,EAAA5lB,EAAAK,IAAApB,KAAAwI,KAAA,SAAApB,EAA0D1K,GAC1D,MAAM,CAAAA,EAAU,EAAC0K,EAAMmP,WAGvB4jB,MAAU,UACFn6B,KAAK3E,UAAGgkJ,mBACfr/I,KAAA1E,MAAA6+B,MAAA/tB,KACF2uB,KAAA,SAAM,EACL9yB,IAAA0/B,EAAAxiC,OAAA,EACA3D,MAAK,WACLmmC,MAAOA,MAIDlnC,UAAQ49I,kBAAA,SAAAn3I,EAAAmnH,OACdhoG,EAAAvkB,EAAQspB,EAAMvW,EACd8yB,EACAh/B,EACAV,EACAs3I,EAAQv/I,KAAAi7I,WAAA,MACRj7I,KAAKwI,KAAErD,QAAWkpH,EAAA,CAClB,IAAAmxB,EAAY,GACZ,IAEF,QAAAzqI,EAAA0R,EAA0C,EAAAzmB,KAAAwI,MAAAoN,EAAAb,EAAAC,QAAAY,EAAAX,KAAAW,EAAAb,EAAAC,OAAA,CACrC,IAAA7a,EAAAyb,EAAkBrU,MACxB,IAED,QAAA0iC,GAAA7Y,OAAA,EAAc3E,EAAY,EAAAtsB,EAAAqO,OAAAk5F,EAAAz9D,EAAAjvB,QAAA0sF,EAAAzsF,KAAAysF,EAAAz9D,EAAAjvB,OAAA,CAEfwqI,EADQ99C,EAACngG,MACH,KAAO,GAGjB,MAAAq6E,GAAAxwD,EAAA,CAAAiK,MAAAumD,GACF,QACH,IACS8lB,IAACA,EAAQzsF,OAAOJ,EAAMovB,EAAAw3C,SAAA5mE,EAAA9U,KAAAkkC,GAGnB,QAAK,GAAU7Y,EAAA,MAAWA,EAAEiK,SAItC,MAAKmmD,GAAMn1D,EAAU,CAAAgP,MAAAmmD,GACrB,QACA,IACA5lE,MAAAX,OAAAnT,EAAAiT,EAAA0mE,SAAA35E,EAAA/B,KAAAgV,GAGJ,WAAAsR,EAAA,MAAAA,EAAAgP,OAEIsS,EAAQzpC,OAAEgH,KAAMs6I,GAAAp+I,IAAA,SAAA4E,GAAA,OAAA2Y,OAAA3Y,KAChB2C,EAAMge,EAAW5lB,EAAM4H,IAAGg/B,GAC1B1/B,EAAK0e,EAAG5lB,EAAAkH,IAAA0/B,GAIR,IAFA,IAAG83G,EAAOpxB,EACPqxB,EAAOxgJ,KAAA+N,OAAiBhF,EAAMU,GAAO82I,GACxCC,EAAkBH,GAClBE,GAAA,EAEMC,EAAWxgJ,KAAAC,MAAU8I,EAAAU,GAAA82I,GAI3B92I,EAAAzJ,KAAQ+N,MAAStE,EAAC82I,KAElBx3I,EAAA/I,KAAQC,KAAe,KAAR8I,EAAcw3I,GAAgBA,EAC7C93G,EAAQ,GACR,QAAQvhC,EAAGuC,EAAOvC,GAAC6B,EAAA7B,GAAYq5I,EAC/B93G,EAAQ/3B,KAAMxJ,QASfuhC,EAAA43G,EAAA,EACG52I,EAAC,EACDV,EAAC,EAMPf,EAAAizB,MAAA,CACMwM,SAAU3mC,KAAI3E,UAAWgkJ,cAC3BjzI,KAAApM,KAAW1E,MAAC6+B,MAAA/tB,KACb2uB,KAAA,KAEDpyB,IAAOA,EACRV,MAEDzG,MAAA,YACMmmC,MAAKA,GAIT3nC,KAAM2/I,kBAAmBz4I,EAAIizB,MAAO,YAG7B15B,UAAU69I,cAAC,SAAAp3I,OACjBygC,EAAAhhB,EAAA5lB,EAAAK,IAAApB,KAAAwI,KAAA,SAAApB,EAAA0gD,GACG,OAAKnhC,EAAa5lB,EAAAK,IAASgG,EAAE0N,WAAA,SAAAI,EAAAksD,GAEhC,OADiBtZ,EAAA1gD,EAAA0N,WAAA3P,OAAAi8D,EACjB,EAAAlsD,EAAA,UAOCyR,EAAiB5lB,EAAAqkE,QAAAz9B,GAAA,KACbxN,MAAO,UACJn6B,KAAG3E,UAAUgkJ,wBACb/jJ,MAAG6+B,MAAO/tB,UACd,SACD,QACKjH,OAAS,QACb,iBACFwiC,MAIDlnC,UAAWm/I,sBAA0B,SAAWp3I,EAAOtB,GACzD,IAAEuI,EAAA,CACEqoC,SAAC,OACH1rC,KAAApM,KAAW1E,MAAK4gB,MAAK,GAAA9P,KACrB1P,MAAA,EAEEmjJ,QAAS7/I,KAAK1E,MAAA4gB,MAAA,GAAA2jI,SAAA,EAChBl3I,IAAG3I,KAAO8/I,YAAC9/I,KAAgB1E,MAAK4gB,MAAA,GAAAvT,KAChCV,IAAGjI,KAAO8/I,YAAC9/I,KAAgB1E,MAAK4gB,MAAA,GAAAjU,KACjCyU,aAAA1c,KAAA1E,MAAA4gB,MAAA,GAAAG,eACIH,MAAMtM,KAAGH,GACbkX,EAAA5lB,EAAA6J,KAAApC,EAAA,CAAA2T,MAAA,SAAM4jI,EAAUp5H,EAAA5lB,EAAAipD,MAAAv6C,GACfswI,EAAMrjJ,MAAU,EACjBqjJ,EAAA3zI,KAAApM,KAAA1E,MAAA4gB,MAAA,GAAA9P,KAEG2zI,EAAQF,QAAE7/I,KAAA1E,MAAA4gB,MAAA,GAAA2jI,SAAA,EACZE,EAAMjoG,SAAK,QACZioG,EAAAp3I,IAAA3I,KAAA8/I,YAAA9/I,KAAA1E,MAAA4gB,MAAA,GAAAvT,OAAMV,IAAAjI,KAAA8/I,YAAA9/I,KAAA1E,MAAA4gB,MAAA,GAAAjU,KACL83I,EAAMrjI,aAAgB1c,KAAA1E,MAAA4gB,MAAiB,GAAIG,SAC5CnV,EAAAgV,MAAAtM,KAAAmwI,GACG//I,KAAKggJ,cAAK94I,EAAAgV,MAAA,GAAA1T,GACZxI,KAAG2/I,kBAAQz4I,EAAiBgV,MAAK,GAAMlc,KAAK1E,MAAAqjJ,YAAsB3+I,KAAA1E,MAAAkc,MAAA,UAAAxX,KAAA1E,MAAA4gB,MAAA,GAAAnD,aAC7DinI,cAAA94I,EAAAgV,MAAA,GAAA1T,QACLm3I,kBAAiBz4I,EAAKgV,MAAA,GAAAlc,KAAiB1E,MAASqjJ,YAAM3+I,KAAa1E,MAAIkc,MAAA,UAAAxX,KAAA1E,MAAA4gB,MAAA,GAAAnD,WAGjEtY,UAAUq/I,YAAO,SAAiBv+I,UACxCA,QACD,KAGColB,EAAkB5lB,EAAAk/I,SAAA1+I,MAEhBd,UAAQu/I,cAAA,SAAA/jI,EAAAzT,MACT,MAAAq3I,aAUDz4I,EAAKhB,IANqB,IAAb6V,EAAAtT,MACZA,IAAAgW,OAAAuhI,YACDjkI,EAAItT,IAAK,QAERV,IAAA0W,OAAAuhI,YACFjkI,EAAAhU,IAAA,UAECA,EAAAgU,EAAWhU,IAAKU,EAAAsT,EAAAtT,QAChBvC,EAAA,EAAOA,EAAKoC,EAAIrD,OAAAiB,KACjBgB,EAAAoB,EAAApC,IACF+V,QAAAF,EAAAvf,UAEDuL,KAAAb,EAAA2V,MAAA9U,OACcA,EAAGb,EAAA2V,MAAA9U,OAGFU,GAAMA,EAAEvB,EAAY2V,MAAK8B,UAC9BlW,EAAKvB,EAAU2V,MAAA8B,SAKvB5C,EAAIsC,UAAW,SAAWvY,GACxB,OAAMA,EAAM2Y,OAAQuhI,UAAK,KAAWhhJ,KAAAwQ,IAAY1J,GAAG9G,KAAOwQ,IAACuM,EAAA4jI,YAG3DrmG,iBAAmB,SAAUxzC,UAC3B9G,KAAM8oC,IAAK/rB,EAAA4jI,QAAU75I,IAExBiC,GAAAU,EAMIV,EAIDU,MACDV,EAAAgU,EAAAu9B,kBAAA,IAJDvxC,EAAMU,EAAAsT,EAAYu9B,iBAAA,IALpBvxC,EAAOgU,EAAMu9B,iBAAA,GACd7wC,EAAAsT,EAAAu9B,kBAAA,IAWA7wC,EADGsT,EAAAtT,IACHsT,EAAAu9B,iBAAAt6C,KAAAC,KAAA8c,EAAAsC,UAAAtC,EAAAtT,OAISsT,EAAKtT,IAAMsT,EAAOu9B,iBAAAt6C,KAAA+N,MAAAgP,EAAAsC,UAAA5V,KAGxBV,EADAgU,EAAAhU,IACAgU,EAAAu9B,iBAAAt6C,KAAA+N,MAAAgP,EAAAsC,UAAAtC,EAAAhU,OAIIgU,EAAAhU,IAAUgU,EAAQu9B,iBAAAt6C,KAAAC,KAAA8c,EAAAsC,UAAAtW,MAErBU,KAAAgW,OAAAuhI,YAAAj4I,KAAA0W,OAAAuhI,mBAGAhgI,SAAAvX,IAAAgW,OAAAuB,SAAAjY,IACGk4I,IACFlkI,EAAAtT,IAAO,GACRA,EAAA,KAECg/B,MAAO3nC,KAAOogJ,8BAACz3I,EAAAV,EAAAgU,EAAA4jI,SAChBM,GACDlkI,EAAO0rB,MAAQvgB,QAAA,IAGVnL,EAAA0rB,MAAQ1rB,EAAA0rB,MAAAxiC,OAAA,GAAA8W,EAAAhU,MAChBgU,EAAAhU,IAAAgU,EAAA0rB,MAAA1rB,EAAA0rB,MAAAxiC,OAAA,MAIM8W,EAAA0rB,MAAe,aACf1rB,EAAAtT,WACKsT,EAAGhU,UAGXxH,UAAW2/I,8BAA0B,SAASz3I,EAAAV,EAAA43I,GAChD,IACAQ,EADC14G,EAAA,GAEJ,IAAA04G,EAAA13I,EAAA03I,GAAAp4I,EAAAo4I,GAAAR,EAEDl4G,EAAA/3B,KAAAywI,kFCp4BuB,SAAAA,EAAA13I,EAAA03I,GAAAp4I,EAAAm5C,EAAAi/F,GAAAj/F,EACuBzZ,EAAA/3B,KAAAywI,GAI5C,OAAO14G,GAEP8yG,EAAOh6I,UAAWk/I,kBAAsB,SAAA1jI,EAAAlD,GACxCkD,EAAOy9B,cAAgB,SAAMp0C,EAAA2W,GAEtB,IAAA1R,EAAiBrM,OAAGX,EAAe,eAAlBW,CAAkB6a,GAClC,IAAAxO,EACA,MAAM,IAAA6L,MAAA,SAAA2C,EAAA,sBAEV,OAAOxO,EAAOjF,EAAA2W,EAAaS,aAAMT,EAAAU,oBAG/Blc,UAAS6+I,YAAa,SAAa33G,EAAOh/B,EAAGV,MAC/CU,GAAEV,GAAA0/B,EAAA,CACF,IAAAxoB,EAAAlX,EAAAU,EAEK23I,EAAanhI,EAAKwoB,EAAQ,IAM/B,OAAA24G,GAAO,GACA,WAGFA,GAAc,MAAAnhI,GANrB,SAQA,QAEQmhI,GAAa,IACZ,cAERA,GAAA,SAAAnhI,GAZQ,QAcF,QAEP,QAGA,MAAO,SAEPs7H,EDoC4B,YChC5B8F,GAAAt6E,EAAA6nB,EAAA5F,GAEF,MAAO,CACLj/D,SAAO,aACL,QACA,SAAAvP,EAAeswD,GACf,OAAM,IAAIw2E,GAAO9mI,EAAAswD,EAAA/D,OAKP,EAAAoI,UAAY,eAAAkyE,WAIjBrmJ,EAAS,iBAOlBumJ,GAAwBv7H,EAAAqoD,EAA0CugB,KAChE4yD,aAAc,KACdC,iBAAO,KACP3iI,SAAYkH,EAASlH,UAAC,GACxBkH,EAAE07H,iBAAA,GAEF17H,EAAO27H,kBAAiB,SAAA77I,EAAA87I,EAAAxyI,GACtB,IAAA2U,EAAO,CACLpnB,KAAAmJ,EACC87I,eACHpkJ,MAAAwoB,EAAAw7H,aAAAv7I,OAEKmJ,SACLijD,QAAO5qC,EAAqB5lB,EAACK,IAAAkN,EAAA,SAAA/M,GAC7B,OAAE1F,KAAK2K,OAAOjF,SAAcA,qBAGjBqO,KAAAqT,kBAEF,SAAgBrU,EAAM27D,GAEb,YAAdu2E,cAIJ57H,EAAAlH,SAAApP,EAAAkyI,cAAAv2E,EAAAhpE,MAIuB,gBAAlBqN,EAAAkyI,eACA57H,EAAAlH,SAAkB,SAClBkH,EAAAsrD,KAAAuwE,kBAAkB,CAAAxqI,MAAmBg0D,EAAAhpE,MAAkBoX,OAAA,KAE9DuM,EAAO87H,yBACP97H,EAAOsrD,KAAA3uE,YAZDo/I,kBAAoB/7H,EAAAlH,SAAA,UAcvBkjI,cAAA,SAAAh2I,GACDga,EAAClH,SAAA,MAAA9S,EACDga,EAAC87H,yBACD97H,EAACsrD,KAAA3uE,SAEDqjB,EAAC07H,iBAAAx5I,OAAA8D,WAEA+1I,kBAAA,SAAA/1I,GACDga,EAAC07H,iBAAA,CACCO,WAAA,EACAD,cAAAh8H,EAAAg8H,cACA95I,OAAA,CAAA8D,UAEF4iF,EAAE1hF,KAAA,CACA4d,QAAAujD,EAAA3iE,KAAA,gBACAktC,SAAA,aACA60C,OAAA,QACAniE,SAAA,qFACAkiE,WAAA,yCACArwF,MAAA6oB,EAAA07H,iBACD9zD,QAAA,WACI5nE,EAAAsrD,KAAiB3uE,eAIrBu/I,eAAA,SAAAn+H,UACAiC,EAAAlH,SAAAiF,EAAA69H,cACD57H,EAAC87H,yBACD97H,EAACsrD,KAAA9sC,aAEA29G,eAAA,WACD,OAAE16H,EAAA5lB,EAAAK,IAAA8jB,EAAAsrD,KAAA5P,WAAA,SAAAx5D,GACA,OAAAA,EAAAmP,WAGAyqI,uBAAA,WACF97H,EAAEy7H,iBAAA,GACFh6H,EAAE5lB,EAAA44B,KAAAzU,EAAAw7H,aAAA,SAAAz9H,GACA,IAAA1hB,EAAA2jB,EAAAlH,SAAAiF,EAAA69H,cACAn6H,EAAA5lB,EAAA+tF,YAAAvtF,IAGD2jB,EAAAy7H,iBAAA/wI,KAAA,CACI5K,KAAAie,EAAkBpnB,KAClBilJ,aAAkB79H,EAAA69H,aAClBv/I,MAAAiF,OAAkBjF,QAIzB2jB,EAAO27H,kBAAkB,cAAa,SACtC37H,EAAO27H,kBAAkB,QAAQ,QAAU,KAAO,IAClD37H,EAAO27H,kBAAkB,mBAAmB,SAAe,EAAC,EAAI,EAAE,EAAK,EAAG,OAC1E37H,EAAO27H,kBAAA,aAAyB,sCACjC37H,EAAA27H,kBAAA,uEAED37H,EAAA27H,kBAAA,gBAAsB,cAAA37H,EAAuBm8H,mLCpKC,EACT,EACF,EACnC,EAKE,EACA,KACE,GAEA,SAIA,YAIA,GAEA,KAGFn8H,EAAA27H,kBAAA,4BACE,gBAQA,EACD,GAED,GACE,GACA,GACD,GAED,GACE,GACD,GAED,MACE,yBAEgB,6BACdA,kBAAA,2CACJ37H,EAAC27H,kBAAA,yCAED37H,EAAA27H,kBAAA,8BAAAA,kBAKC,0BAJCA,kBAAQ,UAAgB,iDACX,YAAkB,YAAY,YAAS,mCACpC,6BACdA,kBAAA,yCACJ37H,EAAC87H,4BAGC,EAAA73H,WAAA,sBAAAs3H,aAGkB,WACCvmJ,EAAAqhC,EAAA8gE,IAMrBilD,GAAC,yBAGH,IAAAxhJ,EAAAE,KACEA,KAAO1E,MAAA0E,KAAA4rI,UAAAtwI,MACL0E,KAAQ1E,MAAKG,QACbuE,KAAAo2B,UAAa,GAEb,IAAAmrH,EAAkBr8H,EAAItL,IAAA,sBACtB9Z,EAAA8rI,UAAoB+H,mBAAA,EACpB7zI,EAAO8rI,UAAA/pI,SACL0/I,MAEFvhJ,KAAA4rI,UAAA+H,mBAAA,SAZH6N,EAAAp7H,QAAA,2ECxE6C7kB,WAAA0E,EACQysI,UAAA,WAEtD7sD,GAAA,KAMEr2E,MAAA,EACAsmE,MAAA,EAAA35D,MAAA,SAGEnc,KAAM4rI,UAAA/pI,YAECpB,UAAUghJ,gBAAS,SAAA/kJ,QACxBpB,MAAA03I,WAAgBj2I,OAAAL,EAAA,GAClBsD,KAAG4rI,UAAA/pI,YAGWpB,UAACoB,OAAkB,WAClC7B,KAAA4rI,UAAA/pI,YAGepB,UAAUihJ,kBAAA,SAAAhlJ,GACzB,IAAAoD,EAAAE,KAED,gBAAA2hJ,GACM7hJ,EAAMxE,MAAC03I,WAAgBt2I,GAAC0gB,UAAAukI,EAC1B7hJ,EAAI+B,aAGJpB,UAAamhJ,kBAAS,SAAAllJ,OACtBoD,EAAIE,YACJ,SAAW2hJ,GACX7hJ,EAAMxE,MAAI03I,WAAAt2I,GAAAw3I,UAAAyN,EACV7hJ,EAAM+B,aAGGpB,UAAEohJ,sBAAyB,SAAAnlJ,GAEd,WAApBsD,KAAC1E,MAAU03I,WAASt2I,GAAAg2I,YACzB1yI,KAAA1E,MAAA03I,WAAAt2I,GAAA0gB,UAAAw/E,KAAAnoF,EAAA,EAAAjV,MAAAw5C,OAAAmxD,UAED23C,SAAA,IACOC,cACD/hJ,KAAC1E,MAAU03I,WAASt2I,GAAAw3I,UAAAt3C,KAAAnoF,EAAA,EAAAjV,MAAAw5C,OAAAoxD,WACzB03C,SAAA,IAEDC,eACE/hJ,KAAA4rI,UAAO/pI,YDqBR,MCfD,EAAAwsE,UAAA,qBAAkB,iBAAlB,CACEplD,SAAO,gBACA,iEACAq4H,GACPl4H,kBAAE,EACHC,aAAA,OACH3P,MAAA,CAACkyH,UAAA,eAQuB,oBAGnBoW,EAAA98H,GACD,IAAAplB,EAAAE,KACDA,KAAA1E,MAAA0E,KAAA4rI,UAAAtwI,0EC3EWwE,EAAG8rI,UAAA/pI,SAqBF0/I,wBT+FGxgJ,EAACK,IAAAlD,OAAAgH,KAAeivI,IAAe,SAAC7tI,cAE1CA,EAEF/E,MAAK4yI,GAAW7tI,GAAA1K,SUxHCoE,KAAA4rI,UAAAqW,oBAAA,WFwEN77H,QAAG,WEtEiE47H,EAAAvhJ,UAAAoB,OAAA,WACtC7B,KAAA4rI,UAAA/pI,UAQ/CmgJ,EAAAvhJ,UAAAyhJ,cAAA,WACEliJ,KAAA1E,MAAAo5I,YAAoB9kI,KAAU,CAAVi2E,GAAA,OAAckvD,mBAAA9uI,EAElC7H,UAAA6H,EACQ+uI,iBAAwB/uI,EACtBzH,QAAAyH,EAEJysI,UAAS,cACXljI,MAAA,EACDsmE,MAAA,EAGC14D,UAAY,4BACJ82H,UAAA,2CAENryI,YAGIpB,UAAa0hJ,iBAAqB,SAAOzlJ,QAC/CpB,MAAKo5I,YAAY33I,OAASL,EAAO,kBACzBmF,YAEJpB,UAASihJ,kBAAA,SAAAhlJ,SACVsD,qBAEO2hJ,KAERrmJ,MAAIo5I,YAAch4I,GAAS0gB,UAAUukI,iBAKhClhJ,UAAYmhJ,kBAAmB,SAAIllJ,SACtCsD,qBACD2hJ,KACDrmJ,MAAKo5I,YAAUh4I,GAAYw3I,UAAYyN,IACxC9/I,WAIHmgJ,EFmBoB,MEhBD,EAAA3zE,UAAQ,sBAAa,2BAErC,gBACO,mEACT+zE,GAEDh5H,kBAAY,EACbC,aAAA,OAEO3P,MAAA,CASAkyH,UAAU,eAkBb,oBACFyW,EAAA/mJ,GACD0E,KAAA1E,MAAaA,ECnBf,ODsBA+mJ,EAAA5hJ,UAAA6hJ,cAAA,SAAAp7I,GACE,IAAAic,EAAQ,GACN+zE,EAAWhwF,EAAEgwF,SAAA/3E,EAAAjY,EAAAiY,cACD+3E,EAAQ/xF,cAClBge,UAEA/c,EAAK,EAAAA,EAAM8wF,EAAO/xF,OAAWiB,IAAC,KAC9BgB,EAAK8vF,EAAa9wF,GAClB+Q,EAAWjZ,OAAMktH,EAAY,aAAlBltH,CAAkBkJ,GAAA+P,aAC7BA,UAGAmuD,EAAWl+D,EAAOpC,KAAKoC,EAAApC,KAAAoC,EAAAiO,MAClBtG,EAAA,EAAMA,EAAK3H,EAAG0M,OAAM3O,OAAA4J,IAAA,CACzB,IAAI4E,EAAOvM,EAAM0M,OAAS/E,GAC1B,GAAI4E,EAAMI,OAASq3G,EAAM,UAAAn4G,OAAzB,CAGA,IAAIjO,EAAO2O,EAAMc,QAAUd,EAAAc,OAAS7Y,MAAA+X,EAAAc,OAAA7Y,MAAA+X,EAAA3O,KACpCsgE,GAAM4xB,EAAA/xF,OAAA,GAAAH,IAAAsgE,IACPtgE,EAAAsgE,EAAA,IAAAtgE,GAGC,IADA,IAAI8P,EAAW,GACV/L,EAAM,EAAKA,EAAG3B,EAAMjC,OAAA4D,IACrB+L,EAAOlF,KAAS,CAAA+D,EAAMrF,OAAArN,IAAA8H,GAAAoO,EAAA7I,OAAArN,IAAA8H,KAE1Boa,EAAKvT,KAAK5P,KAACuiJ,aAAc5uI,EAAM3O,EAAAoB,EAAA2I,EAAA+F,EAAAqO,EAAAhe,OAAAga,SAIlC,cAAAnf,KAAA1E,MAAA6+B,MAAAY,OAAA/6B,KAAA1E,MAAAkc,OAAA2L,EAAAhe,OAAA,GACF,IAAA6Z,EAAAmE,EAAA,GAEDnE,EAAAzI,MAAAyI,EAAA9B,aAAA,QACE,IAAa9W,EAAA,EAAMA,EAAK+c,EAAKhe,OAAEiB,IAC7B4Y,EAAKlK,WAAUkK,EAAAlK,WAAA2yB,OAAAtkB,EAAA/c,GAAA0O,mBAEXkK,eAKFve,UAAmB8hJ,aAAA,SAAO5uI,EAAA4C,EAAgB+G,EAAiBC,EAAOzI,EAAapY,EAAAyiB,SAC1EziB,EAAOa,EAAA,OAAA4H,SACVnF,KAAK1E,MAAMknJ,YAAYjsI,IAAIhZ,EAAS,OAAAklJ,KACrC,IAAA9+C,EAAA,cACM7uF,GAAA,SACRyB,EACFrL,MAAAhN,OAAAX,EAAA,yBAAAW,CAAAgN,EAAAuJ,EAAA,EAAAjV,MAAAuU,MACFW,KAAAf,EAAAc,OAAAd,EAAAc,OAAAC,UAAAzO,EAEDqX,iBACEC,WAAaA,OAEFzI,EAAA3P,OAAA,GAAAga,IACHrK,EAAWA,EAAS3P,OAAO,MAC3Bga,EAAM/gB,KACA6yC,WAAY,QAClByxG,gBAAe,WAGpBt7I,KAGO3G,UAAAkiJ,gCAAA,WACX,OAAA3iJ,KAAA1E,MAAA6+B,MAAAY,MAED,WACQ/6B,KAAA1E,MAAaud,MAAG,EAClB7Y,KAAQ1E,MAAIqd,OAAA,EACX3Y,KAAQ1E,MAAIgd,QAAG,EACdtY,KAAK1E,MAAC0U,OAAA5D,MAAmB,EAC3BpM,KAAK1E,MAAG6xD,QAAMskF,QAAc,EAC7BzxI,KAAA1E,MAAA6+B,MAAA7rB,OAAA,aAEA,SACFtO,KAAA1E,MAAAud,MAAA,EACM7Y,KAAM1E,MAAAqd,OAAA,EACd3Y,KAAA1E,MAAAgd,QAAA,EACHtY,KAAA1E,MAACkc,OAAA,EAAAxX,KAAA1E,MAAA0U,OAAA5D,MAAA,uEC3KD,gBASEpM,KAAgB1E,MAAAud,MAAA,EAChB7Y,KAAA1E,MAAAqd,OAA+B,EAAX3Y,KAAM1E,MAANgd,QAAW,EACxBtY,KAAA1E,MAAYkc,OAAO,EACnBxX,KAAQ1E,MAAK0U,OAAA5D,MAAe,EAC5BpM,KAAO1E,MAAO6xD,QAAKskF,QAAA,MAOtBhxI,UAAemiJ,yBAAI,kBACnB5iJ,KAAA1E,MAAe6+B,MAAIY,MACnB,aACA,OAAA/6B,KAAA1E,MAAA6+B,MAAA7rB,OAAAnJ,OAGM,YADHnF,KAAU1E,MAAG6+B,MAAA7rB,OAAA,WAGhB,IAAAu0I,EAAsB7iJ,KAAA8iJ,qBAAA,IAOpB,YALFn8H,EAAA5lB,EAAA6J,KAAAi4I,EAAA,CAAAthJ,MAAAvB,KAAA1E,MAAA6+B,MAAA7rB,OAAA,OAGQtO,KAAK1E,MAAE6+B,MAAO7rB,OAAO,gBAM7B7N,UAAAqiJ,qBAAA,SAAA57I,GAEF,OAAQlH,KAAC1E,MAAM6+B,MAAUY,MACvB,IAAK,SACH,MAAK,CACN,CAAAl/B,KAAA,MAAA0F,MAAA,OACF,CAAA1F,KAAA,MAAA0F,MAAA,OACF,CAAA1F,KAAA,MAAA0F,MAAA,OAED,CAAA1F,KAAA,QAAA0F,MAAa,SACA,CAAG1F,KAAA,QAAc0F,MAAA,UAK5B,MAAK,IAGP8gJ,EAAA5hJ,UAAAsiJ,UAAA,SAAAn9I,EAAAktC,GAGC,IAFC,IAAIkwG,EAAWlwG,EAAUitB,MAAA,KACrBx+D,EAACqE,EACNQ,EAAA,EAAAA,EAAA48I,EAAA79I,SAAAiB,EAAA,CAED,IAAA7E,EAAAyhJ,EAAA58I,IAGD,OAFQ7E,EAAUA,EAAAyhJ,EAAqB58I,IAKjC,OAAS7E,GAEP8gJ,EDiBF,GCXNY,GAAA,6DCpEDjjJ,KAAA1E,MAAA0E,KAAA4rI,UAAAtwI,MAYE0E,KAAAklB,OAAAsrD,KAAAxwE,UAAAkjJ,YAGChlJ,OAAAX,EAAA,gBAAAW,GAED8B,KAAAmjJ,UAAU,CACRC,OAAI,iBACG,kBACN,GAEDC,gBAAW,qBACK,MAElBrjJ,KAAEsjJ,WAAA,CAEFC,KAAA,OACEh+E,OAAK,SACLi+E,UAAS,kBAERC,iBAAA,CAED,CAAA5nJ,KAAI,MAAK0F,MAAQ,aACf,MAAKA,MAAW,aACd,MAAGA,MAAK,aACR,QAAQA,MAAO,eACf,QAAAA,MAAA,UACH1F,KAAA,UAAA0F,MAAA,YACiB,gBAAhBjG,MAAK6+B,MAAAY,YACFz/B,MAAO6+B,MAAGn1B,YACV1J,MAAE6+B,MAAQn1B,KAAM,gDAKvBvE,UAAAijJ,cAAA,SAAAznI,EAAAsuD,GACAtuD,EAAAlD,OAAAwxD,EAAAhpE,MACAvB,KAAA4rI,UAAA/pI,YAEEpB,UAAAoB,OAAA,WAEF7B,KAAA4rI,UAAS/pI,YAEPpB,UAAAkjJ,iBAAA,WAEF3jJ,KAAA4rI,UAASgY,UAAGjB,uCACV/W,UAAOiY,qBAAY7jJ,KAAA4rI,UAAA10C,aAGrBz2F,UAAAqjJ,kBAAwB,gBACtBlY,UAAKiY,qBAAoB7jJ,KAAA4rI,UAAkB10C,WAhD3C6sD,EDuDH,GCLD,SAACC,+GCvE4B,OAAA/0C,GAAA/0G,EAAA,QAKsB+pJ,GAAA,kBACF,SAAA/+H,GACG,IAAAplB,EAAAE,KACfA,KAAA8sF,QAAA,WAGsChtF,EAAAy8I,sBACMz8I,EAAAy8I,qBAAArwE,oBAAA,SAAApsE,EAAAgtF,SAEQhtF,EAAA4Z,MAAAoO,OAAA,WAKzFhoB,EAAA60C,WAAA,KAiHE30C,KAAAi9I,WAAY,SAAa37H,GAAzBxhB,EAAA60C,WACE70C,EAAA60C,UADiE70C,EAAA60C,WAAA70C,EAAAy8I,sBA7GnEz8I,EAAAy8I,qBAAuB37H,iBAAA,SAAA9gB,EAAAgtF,SAEvBhtF,EAAQmrE,OACRnrE,EAAAg4C,SAAsB,CAKhBttC,EAAQ1K,EAAGmrE,OAAApwC,MAIjBpwB,EAAA3K,EAAAmrE,OAAAjkB,OAKElnD,EAAAg4C,SAAA,CACQttC,EAAE8W,EAAMA,EAAAuZ,MAAA,EACTpwB,EAAA6W,IAAA0lC,MAAA,iCAMM,SAAAk9F,0BACMA,kBAEjB,SAAAj5E,YACSA,kBAEP,oBACKA,kCAEU,SAAAk5E,KAChBA,0BAEHxvG,WAAO,aACDzvB,GAxDyC,QA+DjC,WAkBD,SAAAtlB,YAIbwkJ,EAAWl/H,EAAAmqC,EAAAg1F,OACXvkJ,EAAAF,EAAAG,KAAAC,KAA0BklB,EAAAmqC,IAAArvD,cAC1BqkJ,eAAYA,IACZ7O,aAAA,KACA50E,WAAY,KACZs2B,SAAA,KACA6xB,YAAQ,YACA,6BACO,mBACH,YAEH,cAEF,aACN,CACD,CACAvnH,MAAe,KACf4K,MAAA,EACAyzI,QAAa,EACbl3I,IAAA,KACOV,IAAE,KACP8Q,OAAY,SAEZ,CACDvX,MAAA,KACD4K,MAAA,EACQyzI,QAAM,EACdl3I,IAAW,KACXV,IAAA,KACO8Q,OAAM,UAGbohB,MAAA,CACA/tB,MAAA,EACA2uB,KAAU,OACV/1B,KAAA,KACAsJ,OAAS,GACP6vI,QAAS,MAEXhiI,MAAA,CA0IFg+B,OAAA,EACEsjG,WAAgB,MAGhB9kI,OAAA,EAGAnJ,KAAK,EAELsvI,aAAA,EAGA7gI,UAAU,EAEVL,QAAK,EAGPC,WAAA,GAEEK,YAAa,WAEX,EAEFC,YAAS,EAETtF,MAAA,EAwCArB,OAAK,EAGPmnI,YAAU,EAER3uI,OAAA,CAEF5D,MAAA,EACEkC,QAAW,EACX3F,KAAA,EA9MAV,KAAA,EACA8W,SAAE,EACFL,OAAA,EACAI,KAAA,GAIAf,cAAiB,OAGjBK,aAAe,EAEf+uC,QAAY,CACPkkF,WAAU,aACVI,QAAU,EACVxhI,KAAO,GAGbtS,SAAA,KAEDc,UAAA,KAEMylB,QAAC,KAEDs+H,YAAa,GAEb8B,gBAAiB,GACtBtR,WAAA,GAED0B,YAAA,GACExtI,QAAa,CACL4zI,UAAW,KAGrBh7I,EAAAq5E,cAgBC,SAAA/xE,EAAA8D,GAfK9D,EAACkX,SAAApgB,OAAqBX,EAAoB,yBAAzCW,CAAuDgN,EAACuJ,EAAA,EAAAjV,MAAAuU,OAC3DjU,EAAAxE,MAAWknJ,YAAKp7I,EAASmP,OAAArL,EACzBpL,EAAK+B,YAEJm3I,eAAA,SAAAxD,GAEH11I,EAAA01I,8EAKG11I,EAAAxE,MAAA0U,OAAAwlG,WACH11G,EAAO+B,UAEP/B,EAAG43I,aAAA,SAAAlnI,GACJ,IAAAwN,EAAA2I,EAAA5lB,EAAA6J,KAAA9K,EAAAxE,MAAAgpJ,gBAAA,CAAA/tI,MAAA/F,EAAA+F,QAEDyH,IACOA,EAAA,CAAgBzH,MAAA/F,EAAY+F,OAClCzW,EAAAxE,MAAAgpJ,gBAAA10I,KAAAoO,IAGKA,EAAC7B,MAAA3L,EAAqB2L,MACxBrc,EAAA+B,YAEA0iJ,mBAAiB,WAChBzkJ,EAAAk7I,gBAAAiC,cAGHn9I,EAAKkpC,WAAA,SAAqB/U,EAAQlb,GACnC,OAAAjZ,EAAAzE,UAAA2tC,WAAAxf,MAAA1pB,EAAAzE,UAAA,CAAA44B,EAAAlb,KAGCjZ,EAAK0kJ,oBAAgB,SAAAnvI,GACjB,OAACvV,EAAWo3F,SAAM1lF,OAAA,SAAA4c,GAAA,OAAAA,EAAA/Y,YAAA,IAEvBsR,EAAA5lB,EAAA0O,SAAA3P,EAAAxE,MAAAwE,EAAAooI,eAEDvhH,EAAA5lB,EAAA0O,SAAA3P,EAAAxE,MAAoB6xD,QAApBrtD,EAAsCooI,cAAA/6E,6DAAtCxmC,EAAA5lB,EA2CC0O,SAAA3P,EAAAxE,MAAA6+B,MAAAr6B,EAAAooI,cAAA/tG,OA1CCxT,EAAa5lB,EAAG0O,SAAK3P,EAAAxE,MAAA4L,QAAApH,EAAAooI,cAAAhhI,SACrBpH,EAAKi6G,eAAiB,IACpB6pC,UAAc,IAACa,GAAQ3kJ,EAAAxE,SACvB0/I,gBAAiB,IAAAiJ,GAAA/+H,KAChBloB,OAAAwc,GAAA,SAAA1Z,EAAAuoI,SAAAjoI,KAAAN,IAEHA,EAAK9C,OAAAwc,GAAA,uBAA0B1Z,EAAA+jJ,qBAAAzjJ,KAAAN,IAE/BA,EAAK9C,OAAAwc,GAAW,aAAQ1Z,EAAAk3F,YAAA52F,KAAAN,IACxBA,EAAM9C,OAAAwc,GAAA,qBAAkC1Z,EAAM4kJ,mBAAQtkJ,KAAMN,MAC1D9C,OAAOwc,GAAI,iBAAU1Z,EAAWsoI,eAAOhoI,KAAAN,IACzCA,EAAM9C,OAAAwc,GAAA,qBAAA1Z,EAAA6kJ,mBAAAvkJ,KAAAN,IAENA,EAAI8kJ,kBAAqB9kJ,EAAE8kJ,kBAAAxkJ,KAAAN,GACzBA,ECxJJ,SDgBEsmB,QAAA,sBAAyB,oBACX,EAAAg+H,EAAAxkJ,eAyILwoI,eAAA,gBACNt3E,aAAC,0EACHA,aAAA,OAAAkzF,SAAMlzF,aAAA,8LACgB,yFAAV,eAEP6zF,mBAAmB,SAAAn2D,gBACjB,aAAOr9B,MAAA,kCACP,gBAAKA,MAAA,sBAAAC,SAAA,qBAEPupD,aAAM,SAAAh2F,6CAET3kB,KAAAqkJ,eAAAQ,eAAA,8DAKC7kJ,KAAKqkJ,eAAgBS,mBAAA5jJ,KAAA,SAAA6H,GACrB,OAAKnJ,EAAAa,UAAak6G,aAAkB56G,KAAAD,EAAA6kB,QAItClkB,UAAAu8G,QAAA,SAAAjjG,QACEk2C,gBAAe,WAAM,MAGvBxvD,UAAAikJ,mBAAA,SAAAhqC,GACH16G,KAAA+kJ,mBAAA/kJ,KAAAqkJ,eAAAQ,eAAA,CAEDxpJ,UAAA2E,KAAA3E,2BACM8jB,MAAMnf,KAAAmf,YAET6lI,EAAA9mJ,OAAA+wG,GAAA,EAAA/wG,CAAAw8G,6CAEU1jB,YAAM,SAAAI,mBACR,oBAEI,eACT,OAEH32F,UAAAojJ,qBAAA,SAAAr7I,kBAqCH,wJApCCxI,KAAAo9I,YAAA,KAoCD,IAPAp9I,KAAA4gE,WAAA5wC,OAAA,SAAuC2Y,EAAAvhC,GACjC,OAAOuhC,EAAAvhC,EAAc0N,WAAA3P,QAI1B,GAGKnF,KAACo9I,YAAM,CACZxhJ,MAAA,UAEDyzE,IAAA,oCAKA,IACO,IAAM,IAAMx6D,EAAK4R,EAA2B,EAAAzmB,KAAA4gE,YAAA7rD,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CAElD,GADeD,EAAAxT,MACfmhJ,eAAA,CAED1iJ,KAAAo9I,YAAA,CACsBxhJ,MAAM,0BACVyzE,IAAO,sEAExB,QAKK,MAACmM,GAAen1D,EAAC,CAAAgP,MAAcmmD,GACjC,QACA,IACYzmE,MAAAE,OAAenT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAE9B,WAAAwR,EAAA,MAAAA,EAAAgP,OAtTqBr1B,KAAA+kJ,mBAmUvB7jJ,KAAA,SAAAC,GAE4CrB,EAAAi0F,SAAA,gFC3VtB,WACqBj0F,EAAAi0F,SAAA,EACiBj0F,EAAA+B,OAAA/B,EAAA8gE,eAuB3DwjF,EAAA3jJ,UAAgB4nI,SAAA,WAChB,IAAAj9G,EAAAtpB,EAAA,GAAA9B,KAAA4gE,WAZA,IACE,IAAK,IAAI/rD,EAAA4R,EAAA,EAAAzmB,KAAA4gE,YAAA7rD,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CACT,IAAO5N,EAAE2N,EAAAxT,MACL6F,EAAIsW,qBAAA1d,KAAA1E,MAAAgpJ,iBACAl9I,EAAKsN,OACL1U,KAAK1E,MAAA4gB,MAAA9U,EAAA+U,MAAA,GAAApD,OAAA3R,EAAAsN,aAIbknE,GAAAxwD,EAAA,CAAAiK,MAAAumD,GAUA,QAEI,IACG7mE,IAAMA,EAAIE,OAASnT,EAAM+S,EAAG4mE,SAAE35E,EAAA/B,KAAA8U,GAEpC,WAAAuW,EAAA,MAAAA,EAAAiK,WAKI50B,UAASmkJ,kBAAA,SAAA9J,QACZx/I,MAAM+0G,cAAY5pF,EAAe,KAAsBzmB,KAAA1E,MAAA4L,QAAA,CAAA4zI,kBAErDr6I,UAAUsgJ,kBAAmB,SAAU/iI,QACzC1iB,MAAAgpJ,gBAAA10I,KAAAoO,GAAA,OAGEvd,UAAWwkJ,qBAAM,SAAAjnI,QACnB1iB,MAAIgpJ,gBAAoB39H,EAAW5lB,EAAAogF,QAAAnhF,KAAA1E,MAAAgpJ,gBAAAtmI,oBAGlCvd,UAAAykJ,aAAA,gBACD5pJ,MAAI0U,OAAK5D,MAAUpM,KAAK1E,MAAA0U,OAAA5D,gCAGjB+4I,0BAAuB,iBAC7BnlJ,KAAA1E,MAAA0U,SACD1B,OAAS0B,EAAMrH,KAASqH,EAAQ/H,KAAE+H,EAAA8O,KAAA9O,EAAA+O,SAAA/O,EAAA0O,iCAG3B0mI,UAAc,iBACpBplJ,KAAAklB,OAAAixD,MAAA,KACDvV,WAAY5gE,KAAM4gE,gBACnB3Q,gBAAA,uFACFv2C,QAEDixE,WAAA,mBAGAy5D,EAAC55H,SJOG,2rBILJ45H,EDee,GCdI,qBAUgB,SAAOxkJ,YAKlCylJ,EAASngI,EAAAmqC,EAAA1uD,EAAA2kB,OACbxlB,EAAOF,EAAKG,KAAMC,KAAKklB,EAAAmqC,IAAArvD,cACvBW,WAAYA,IACZ2kB,aAAgBA,IAChB4iH,cAAgB,CAChBxnI,MAAM,GACNm6E,MAAA,GAEFzlE,KAAO,GACLkwI,QAAK,EACJnlJ,QAAA,EACJy6E,SAAA,EAED2qE,UAAA,EAAA18H,SAAA,MAEElC,EAAe5lB,EAAC0O,SAAS3P,EAAAxE,MAAAwE,EAAAooI,eACvBpoI,EAAAxE,MAAOs2E,MACR9xE,EAAAxE,MAAA8Z,KAAA,CAAAtV,EAAAxE,MAAAs2E,YAEW9xE,EAAKxE,MAAOs2E,OAEtB50E,OAAKwc,GAAM,UAAW1Z,EAAMotD,UAAC9sD,KAAAN,IAC/BA,EAAG9C,OAAAwc,GAAA,iBAAA1Z,EAAAsoI,eAAAhoI,KAAAN,IACJA,EAAAwR,OAAA,CAED,CAAA6R,KAAA,GAAA/W,MAAA,EAAAo5I,OAAA,sBACM,CAACriI,KAAA,GAAA/W,MAAa,EAAAo5I,OAAmB,8BACnC,CAAAriI,KAAK,GAAA/W,MAAY,EAAQo5I,OAAC,WAI1B1lJ,EAAIxE,MAAAy/B,OACiB,YAAjBj7B,EAAAxE,MAAAy/B,OACLj7B,EAAAxE,MAAAs/E,SAAA,EACF96E,EAAAxE,MAAAiqJ,UAAA,GAoBA,oBAlBDzlJ,EAAAxE,MAkBCy/B,OAjBMj7B,EAASxE,MAAKgqJ,QAAQ,EACtBxlJ,EAAKxE,MAAMs/E,SAAQ,EACtB96E,EAAOxE,MAAQiqJ,UAAU,GAGX,WAAVzlJ,EAAUxE,MAAAy/B,OACTj7B,EAAKxE,MAAA6E,QAAiB,EAC3BL,EAAKxE,MAAUs/E,SAAO,IACft/E,MAAAiqJ,UAAO,YAERjqJ,MAAOy/B,MAETj7B,WArDGsmB,QAAO,UAAQ,2CACP,EAAOi/H,EAAGzlJ,KAsDrBa,UAAS2nI,eAAe,gBACzBS,MAAE,uCACP7oI,KAAG8wD,aAAA,4DAGLu0F,EAAA5kJ,UAAAysD,UAAA,WACE,IAAI4tB,EAAO,GA1IN,OA2ILA,EAAKlrE,KAAS5P,KAACw5E,uBAChBsB,EAAAlrE,KAAA5P,KAAAy6E,cA7IMK,EAAAlrE,KAAA5P,KAAAylJ,aACAphI,QAAA82D,IAAUL,GAAQ55E,KAAAlB,KAAA+vD,mBAAA3vD,KAAAJ,QAFAqlJ,EAAA5kJ,UA+I1BglJ,UAAA,WAEkD,IAAA3lJ,EAAAE,wHCxJ5BU,MAAAV,KAAA1E,MAAAoF,MACwCkxE,IAAA5xE,KAAA1E,MAAA8Z,KAK/D4lE,UAAAh7E,KAAA1E,MAAAutB,SAA6B9U,KAAA,WAY3B,OAAA/T,KAAAW,WAAYR,OAAa0jB,GAAgC3iB,KAAU,SAAwBC,GAA3FrB,EAAAwR,OACE,GAAA6R,KAAAhiB,OAJFV,UAAag6E,WAAM,WAMjB,IAAA36E,EAAAE,KAGA,GADAA,KAAIsR,OAAC,GAAOlF,KAAGpM,KAAW1E,MAAAs/E,SACtB56E,KAAC1E,MAAUs/E,QACf,OAAKv2D,QAAa61D,cAEhBr2D,EAAQ,CAAEg3D,MAAA76E,KAAA1E,MAAkBu/E,MAAQD,QAAQ,eAC1C56E,KAAMW,WAAER,OAAA0jB,GAAwB3iB,KAAI,SAAQC,GAC9CrB,EAAEwR,OAAQ,GAAA6R,KAAAhiB,6CAIbnB,KAAAslB,aAAAogI,cAAAjhE,EAAA5nF,GAAA4nF,EAAAnK,WAAAp5E,KAAA,SAAAykJ,GAEDlhE,EAAAnK,UAAAqrE,IAEC5rI,IAEDA,EAAAsa,kBACMta,EAAG2H,qBAGFjhB,UAAc+4E,oBAAoB,WACxC,IAAA15E,EAAAE,KAGC,GADFA,KAAAsR,OAAA,GAAAlF,KAAApM,KAAA1E,MAAAgqJ,QACEtlJ,KAAO1E,MAAAgqJ,OACP,OAAOjhI,QAAA61D,UAGP,IAAAJ,EAAWnzD,EAAgB5lB,EAAAg5E,KAAAC,EAAA,EAAAC,qBAAAj6E,KAAA1E,MAAAu/E,OAE3B,OAAK76E,KAAAW,WAAgBR,OAAA,CAAAg6E,aAAcL,EAAAe,MAAA76E,KAAA1E,MAAAu/E,QAAA35E,KAAA,SAAAC,GACjCrB,EAAKwR,OAAA,GAAA6R,KAAA22D,EACA14E,IAAE,SAAUg5E,GAChB,OAAAzzD,EAAA5lB,EAAA6J,KAAAzJ,EAAA,SAAA9F,GACJ,OAAAA,EAAAwB,KAAAu9E,MAGM5oE,OAAW,SAAI0yI,4BAIdzjJ,UAAUkoB,eAAW,SAACC,0DAGb,4BACH,IDiBoB,6BC9E3B,SAAAg9H,EAAA1gI,EAAcmqC,EAAc1uD,EAAAunF,GAC5B,IAAApoF,EAAAF,EAAAG,KAAaC,KAAKklB,EAAAmqC,IAAArvD,KCHc,ODsEzCF,EAAAa,WAACA,EAEsDb,EAAAooI,cAAA,uMC7EhC,CAAAsd,OAAA,mBAAAriI,KAAA,GAAApP,KAAA,SAC0C,CAAAyxI,OAAA,wBAAAriI,KAAA,GAAApP,KAAA,eAGxBjU,EAAA+lJ,SACA/lJ,EAkEvC,oEDEK,EAAA8lJ,EAAAhmJ,GChEsBgmJ,EAAAnlJ,UAAA2nI,eAAA,WA8B3BpoI,KAAA8wD,aAAgB,gEAChBrwD,UACEqlJ,WAAM,SAAQ9gH,EAAUjrB,GADyCA,GA3BnEA,EAAAsa,uBAGEjP,UAAQze,IAAA,WAAoBq+B,EAAOnoC,GAAK,YAElC4D,UAAEslJ,gBAAwB,SAAA/gH,EAAAmgD,KAChC9wD,kBAEF8wD,EAAAzjE,iBACA,IAAA8oE,EAAAxqF,KAAqBklB,OAAGixD,MAAA,GACxBqU,EAAAxlD,OAAYA,EAIZhlC,KAAAiwD,gBAAA,aAA4B,CAC5B1yD,IAAA,gEACEmc,MAAM8wE,OAGN/pF,UAAAolJ,OAAuB,eACvB/lJ,EAAAE,UACAW,WAAAM,IAAe,cAAI,CAAA+kJ,SAAA,EAAArgI,KAAA,IAAAzkB,KAAA,SAAAyO,GACnB,IAAA0W,EAAAvkB,EACAhC,EAAAmmJ,WAAct2I,EACd7P,EAAAomJ,UAAA,GAAA/iI,KAAAwD,EAAA5lB,EAAAyQ,OAAA7B,EAAA,CAAAoE,KAAA,QAKAjU,EAAAomJ,UAAE,GAAA/iI,KAASwD,EAAiB5lB,EAAAyQ,OAAA7B,EAAe,CAAAoE,KAAA,UAE3CjU,EAAKomJ,UAAU,GAAA/iI,KAAAwD,EAAuB5lB,EAAAyQ,OAAc7B,EAAM,CAAIoE,KAAG,eACjE,IACK,QAAWc,EAAG4R,EAAmB,EAAA3mB,EAAemmJ,YAAAlxI,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CAEvC,IAAIgwB,EAAKjwB,EAAMxT,MACtByjC,EAAYmhH,UAClBnhH,EAAA/kC,MAAA,aACF+kC,EAAA0hG,UAED1hG,EAAA/kC,MAAU,sBAIJu7E,GAAOn1D,EAAA,CAAAgP,MAAAmmD,GACT,QACD,IAEczmE,MAAAE,OAAEnT,EAAO+S,EAAM4mE,SAAE35E,EAAA/B,KAAC8U,GAE9B,WAAAwR,EAAA,MAAAA,EAAAgP,aAKInM,YAAO,cAChB08H,EAACld,YAAA,EAEDkd,aACoB,MAKf1rJ,EAAA,WAWuB,SAAA0F,YAKzBwmJ,EAAAlhI,EAAAmqC,EAAA1uD,GAED,IAAAb,EAAAF,EAAiBG,KAAKC,KAAAklB,EAAAmqC,IAAArvD,SA8BnB,IAAEsG,OA7BH3F,WAAKA,EACPb,EAAGumJ,YAAA,EAAAxqJ,KAAA,gBAAA0F,MAAA,YAAA1F,KAAA,uBAAA0F,MAAA,YACJzB,EAAAwmJ,iBAAA,CAED,CAAAzqJ,KAAA,qBAAA0F,MAAA,GACM,CAAC1F,KAAM,sBAAqB0F,MAAA,GAC5B,CAAC1F,KAAO,aAAG0F,MAAA,IAGjBzB,EAAAirC,YAAA,GAAAjrC,EAAAymJ,cA0BC,GAzBCzmJ,EAAM0mJ,aAAc,KAElBte,cAAa,CACb97H,KAAA,UACAyuE,MAAA,GAEE9vC,YAAW,GACb07G,uBAAqB,EACtBtH,UAAA,EAEDuH,gBAAc,GACdC,WAAY,GAEZ99H,SAAY,QAED9nB,EAAA0O,SAAQ3P,EAAAxE,MAAUwE,EAAWooI,wBACjC1uH,GAAA,iBAAa1Z,EAAAsoI,eAAShoI,KAAAN,aACtB0Z,GAAI,UAAG1Z,EAAAotD,UAAA9sD,KAASN,kBACTA,EAAAuvD,UAAApuD,IAAA,eACTnB,EAAAxE,MAAAyvC,YAEHjrC,EAAKirC,YAAAjrC,EAAkBxE,MAAKyvC,YAAYzkC,KAAO,EAGjD,OAAGxG,WAzCFsmB,QAAA,sCAEuB,EAAAggI,EAAWxmJ,GA0CrCwmJ,EAAA3lJ,UAAAmmJ,WAAA,SAAAr+H,GAAA,GA0CC,IA1CDvoB,KAAA1E,MAAA6jJ,UACQ,OAAMx4H,EAAQ5lB,EAAAq6E,OAAA7yD,EAAA,SAAAxnB,GAElB,OAAA8lJ,GAAA,EAAA9mH,oBAAAh/B,EAAAd,aAIDkB,EAAAwlB,EAAA5lB,EAAAq6E,OAAA7yD,EAAA,SAAAxnB,GAEG,OAAKA,EAAAiE,KAAM4O,uBAEd,IAAA5T,KAAA1E,MAAA6jJ,WAEGh+I,EAAKuR,UAERvR,KAGQV,UAAAqmJ,kBAA6B,eACrC3lJ,EAAA,GAED,IAAI,IAAKmF,KAAMtG,KAAA+qC,YACb/qC,KAAO+qC,YAAYzkC,IACpBnF,EAAAyO,KAAAtJ,cAKQykC,YAAa5pC,gCAGL+rD,UAAM,eAEnB65F,IADE/mJ,KAGK,YAATA,KAAI1E,MAAK8Q,SACFpM,KAAagnJ,wBAEf,YAALhnJ,KAAI1E,MAAC8Q,OAEL26I,EAAY/mJ,KAAAinJ,mBAEfF,EAAA7lJ,KAAA,WAEDpB,EAAAiwD,wBAvKOq2F,EAAA3lJ,UAAAkoB,eAA2B,SAACC,GAC5B5oB,KAAA1E,MAAAutB,SAAUD,EAAQ/rB,GAyK3BmD,KAAA0jC,WAEuD0iH,EAAA3lJ,UAAAwmJ,gBAAA,isBCtL3CpjI,EAAA,CACiC5jB,MAAAD,KAAA1E,MAAAyvC,oBAKK/qC,KAAA1E,MAAAqrJ,aACY9iI,EAAAnjB,MAAAV,KAAAgmE,YAAAnoE,QAAAmC,KAAA1E,MAAAqrJ,WAAA3mJ,KAAA1E,MAAAwC,aAEIkC,KAAA1E,MAAAutB,UAAA,IACahF,EAAAgF,SAAA7oB,KAAA1E,MAAAutB,UAG7B7oB,KAAA1E,MAAAorJ,kBACV7iI,EAAAqjI,eAAAlnJ,KAAA1E,MAAAorJ,iBAkBxC1mJ,KAAA1E,MAAAmrJ,wBAAmC5iI,EAAA0Z,YAAAv9B,KAAA3E,UAAAwB,IACjCmD,KAAA1E,MACE6rJ,gBA0EFtjI,EAAAujI,aAAcpnJ,KAAwB1E,MAAuB6rJ,eAEnDnnJ,KAAAW,WAAAM,IAAA,cAAuB4iB,GAAA3iB,KAAA,SAAAwW,UAC/B5X,EAAMymJ,cAAezmJ,EAAA8mJ,WAAAjgI,EAAA5lB,EAAAK,IAAAsW,EAAA,SAAkB2vI,GAMrC,OALIA,EAAAC,WAAUT,GAA0B,EAAA5nH,qBAAAooH,EAAApnJ,OAEpConJ,EAAAE,gBAAcrpJ,OAAAktH,EAAA,SAAAltH,CAAAmpJ,EAAAG,cACd3iB,OAAO,MACPh8D,SAAK,GACTw+E,KAGAvnJ,EAAMymJ,cAAWphJ,OAAYrF,EAACxE,MAAAu/E,QAC9B/6E,EAAMymJ,cAAczmJ,EAAKymJ,cAAAt8G,MAAA,EAAAnqC,EAAAxE,MAAAu/E,QAG3B/6E,EAAI2nJ,gBAAiC,IAAb3nJ,EAAAymJ,cAAaphJ,OAAA,eACnCrF,EAAAymJ,mBAKC9lJ,UAAC2nI,eAAA,6BACK,+DAGTl/G,YAAA,gBACGw/G,YAAI,ID/CmB,GCiDtB,gBAKoB,aAInB,WAGLxuI,EAAA,WAoBMA,EAAqB,WAK7BA,EAAc,aAGC,aAGG,WAyBd,SAAA0F,YAGJ8nJ,EAAa7nJ,OACHC,EAAAF,EAAAG,KAAAC,KAAAH,IAAuBG,KAxD/B,SAyDQ2nJ,YAAA,SAAAjvH,EAAAkvH,GACRlvH,EAAArE,kBAEA,IAAAntB,EACEpH,EAAAD,MAAAqH,UACEhJ,OAAAikC,GACY,EADZjkC,GAGSkkC,eACN,MAEDtiC,EAAA+nJ,YAAAD,EAAAp0I,KAAAtM,EAAA4gJ,gBACa,oBACTF,EAAAp0I,KAAgBtM,EAAA6gJ,eAAA,0BASpBxlH,QAAAqlH,EAAArlH,sBACa,iCAqBb,KAINthC,IAAA,eAAAk5E,aAAAytE,EAAArqH,cA9NKr8B,KAAQ,SAAAwW,GACX,GAAAA,GAAeA,EAAAvS,QAAAuS,EAAA,GAAA7a,KAAA+qJ,EAAArqH,YAAf,CACQ,IAAIknD,EAAA/sE,EAAA,GACJw3C,GAAK,EAAArkB,SAAA3sC,OAAAswF,GAAA,EAAAtwF,CAAA,CACFwC,MAAEmjB,EACbnhB,KAAA+hF,EAAA99E,YAIGspE,GAAW,EAAAt0E,KAAA,uCAAAisJ,EAAArqH,mBAkME,EAAAsN,SAAA3sC,OAAAswF,GAAM,EAANtwF,CAAM,wBA9LlB4B,EAAAkoJ,WAAmC,SAAjCtvH,EAAAk5C,EAAA1xB,GACFxnB,EAAArE,kBAEJ,IAAI4zH,EAAO/nG,EAAcpgD,EAAAG,MAAUgoJ,UAASz2I,OAAA,SAAA5C,GAAA,OAAAA,IAAAgjE,IAAAnrD,EAAA,EAAA3mB,EAAAG,MAAAgoJ,UAAA,CAAAr2E,IAC5C9xE,EAAKe,SAAM,CAAAonJ,UAAcA,KAG3BnoJ,EAAIooJ,YAAY,SAAAxvH,EAAAkvH,GACdlvH,EAAArE,kBACDv0B,EAAAe,SAAA,CACFsnJ,UAAA,CAEKtrJ,GAAA+qJ,EAAAtmJ,qDAKI,sBACF,gBAEA2E,2BAGEmP,EAAA8qC,aACN9qC,EAAAjQ,SAIDpE,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KAAAiE,EAAAhU,IAAA,SAAAwwE,UAEGlhE,EAAc3P,EAAAmB,cAAA,QAAAoE,IAAAsrE,EAAAv7C,QAAA,SAAAqC,GAAA,OAAA54B,EAAAkoJ,WAAAtvH,EAAAk5C,EAAA1xB,IAAAn+C,UAAA,aACdhB,EAAQmB,cAAAg2F,GAAiB,GAAA12F,MAAAowE,EAAAumB,WAAAj4C,EAAAngC,MAAA,oCAGlB6nI,EAAGlrJ,SACboD,EAAAD,MAAAqH,YAAMkhJ,SAAAC,EAAAnhJ,EAAAmhJ,SAAAC,EAAAphJ,EAAAohJ,WACLpqJ,OAAAikC,GAAsB,EAAtBjkC,GAAsBkkC,sBACvBrhC,EAAAmB,cAAA,OAAAH,UAAA,mBAEGhB,EAAAmB,cAAW,QAAAH,UAAA,wBAAAs0B,QAAA,SAAAqC,KACbivH,YAAajvH,EAAGkvH,OAGd7mJ,EAAQmB,cAAQ,OAAa,CAAAH,UAAQ7D,OAAA2mC,GAAA,GAAA3mC,CAAA,CACvC,iBACDA,OAAA2mC,GAAA,IAAA3mC,CAAAqc,QAAAkM,EAAA,0HAEGmhI,EAAA/rJ,QACIkF,EAACmB,cAAc,OAAO,CAAAH,UAAA,wBAC7BN,OAAA2mJ,GAAA13I,EAAA3P,EAAAmB,cAAA,QAAAH,UAAA,oBAEmB2O,EAAA3P,EAAAmB,cAAM3E,EAAA,SAAAoU,QAAAjB,EAAoB3P,EAAAmB,cAAkB,OAAS,mBAAxDwO,EAAwD3P,EAAAmB,cAAA,WACpE,IACH0lJ,EAAW72I,OAAAvR,MAAA,OAAAkS,UAAA,OACXhB,EAAQ3P,EAAAmB,cAAA,QAAAm0B,QAAA,SAAAqC,GAAA,OAAA54B,EAAAooJ,YAAAxvH,EAAAkvH,IAAA7lJ,UAAA,0BACA2O,EAAI3P,EAAAmB,cAAA,OAAA3E,IAAAqqJ,EAAAjmJ,kBACX7B,EAAAyoJ,WAAAX,EAAAxyI,MAAA,iJACJ1X,SAAA,GA6CD8qJ,QAAA,EAA0CP,UAAA,IAEpCnoJ,WAqDJ,EAAA4nJ,EAAA9nJ,KAnDSa,UAAUkpB,kBAAc,gBAC/B8+H,cAEDhoJ,UAAAy7D,mBAAA,SAAAn4B,EAAAi4B,GAED,IAAMl6D,EAAI9B,KAAAH,MAAAqH,EAAApF,EAAAoF,QAAA1J,EAAesE,EAAAtE,WACX0J,IAAA68B,EAAA78B,SACZlH,KAAIC,MAAOgoJ,YAAAjsF,EAAAisF,WACZjoJ,KAAAC,MAAAkoJ,YAAAnsF,EAAAmsF,WACD3qJ,IAAiBumC,EAAwBvmC,YAgG3CwC,KAAAyoJ,cAGOhoJ,UAAQgoJ,SAAA,kBACXhiI,EAAO,EAAAzmB,UAAA,oBACR,IAAAkH,EAAApF,EAAAqmJ,EAAAF,EAAApkI,EAAAnmB,EAAAF,EAAAurH,EAED,OAAAtiG,EAAA,EAAAzmB,KAAA,SAA4D6U,GAC5D,OAAAA,EAAkBrT,OAClB,OCpPc,ODqPd0F,EAAAlH,KAAAH,MAAAqH,QACYpF,EAAA9B,KAAAC,MAAAkoJ,EAAArmJ,EAAAqmJ,UAAAF,EAAAnmJ,EAAAmmJ,UACPpkI,EAAA,CAEazO,KAASlO,EAAIkO,KAG7BylE,MAAA3zE,EAAA2zE,MAEI9mE,KAAA,cAEY7M,EACRwhJ,wBAIS7kI,EAAS0Z,YAAUr/B,OAAWikC,GAE5C,EAFiCjkC,GAEjCkkC,aAAAvlC,IAIDa,EAAA,GAIWwJ,EAAOyhJ,iBAEPnrJ,EAAWwC,KAGzBH,MAACrC,UACHqmB,EAAAzlB,KAAAZ,EAAAY,KAAA6yC,UACFptB,EAAArlB,GAAAhB,EAAAgB,GAAAyyC,4BChSoBptB,EAAgBviB,OAAA6mJ,EAAAtrJ,IAE3BqK,EAAAkO,MAAAlO,EAAAkO,KAAAjQ,SACe0e,EAAKzO,KAAAlO,EAAAkO,MAGd6yI,EAAA9iJ,SACA0e,EAAAzO,KAAAyO,EAAAzO,KAAAqR,EAAA,EAAA5C,EAAAzO,KAAA6yI,MAGO,GAAA/pJ,OAAA0qJ,EAAA,EAAA1qJ,GAAA+C,IAAA,mBAAA4iB,IACN,KAAK,ECzBoC,OD0BvCklG,EAAIl0G,EAAAgQ,OACrB7kB,KAAAa,SAAA,sCC3BwD,UAe1D6mJ,EAAAjnJ,UAAAonJ,YAAA,SAAAr0I,EAAAoO,EAAAglF,QAAoC,IAAAA,OAAA,GAClC,IAAAiiD,EAAA,EAAAn0I,EAAA,IAQA8yF,EAAU,aAAA59D,KAAAhoB,UACV4lF,GAAa,IAAAA,EAAAriG,SAEb0jJ,EAAAx9I,SAAAm8F,EAAmB,OACjB9yF,EAAA8yF,EAAK,IAGLZ,IAA8FiiD,IAAA,GADhG3qJ,OAAAktH,EAAmB,SAAnBltH,CAAmBsV,GAIjB1N,IAAA+iJ,EAAKn0I,GAAMu8B,aAEbxwC,UAAWoB,OAAA,WACX,IAAAyJ,EAAatL,KAAAH,MAAAyL,OAEbxJ,EAAA9B,KAAAC,MAAAuoJ,EAAsB1mJ,EAAG0mJ,OAACz/B,EAAoCjnH,EAAAinH,YAAAo/B,EAAArmJ,EAAAqmJ,UAAAF,EAAAnmJ,EAAAmmJ,cAC5DO,EACA,OAAA93I,EAAA3P,EAAAmB,cAAA,yBAUF,IAAA4mJ,EAAaX,GAAAF,EAAA9iJ,OAAA,EACb,OAAAuL,EAAgB3P,EAAAmB,cAAqC,OAAA46B,MAAA,CAAAxxB,SAAA8pD,SAAA,WACnD0zF,GAAUp4I,EAAA3P,EAAAmB,cAAA,WACVwO,EAAW3P,EAAAmB,cAAgB,uBAC3BimJ,GAAAz3I,EAAA3P,EAAAmB,cAAA,QAAAm0B,QAAAr2B,KAAA+oJ,YAAAhnJ,UAAA,WAAAomJ,EAAAp3I,OAEFk3I,EAAA9iJ,OAAA,GAAAnF,KAA6BuoJ,WAAGN,GAAA,IAC9Bl/B,EAAI5jH,OAAO,GAAAuL,EAAgB3P,EAAAmB,cAAA,OAAAH,UACjB,+BACR,wBACC2O,EAAA3P,EAAAmB,cAAA8mJ,GAAA,GAAAz3I,MAAAw3G,EAAA3tG,WAAApb,KAAAob,WAAAC,WAAA,SAAAzM,GAEL,OAAAA,EAAA/R,GAAuB,IACrBkF,UAAU,eAEZ2lJ,EF0II,GEzIS,kBAmCU,SAAA9nJ,YAIjBqpJ,EAAAppJ,SACED,EAAAG,KAAAC,KAAAH,IAACG,KCpGH,SDuHAkpJ,iBAAA,kBACEppJ,EAAAD,MAAAkpI,gBAACtiH,EACO,KAAQ3mB,EACdD,MAAUqH,QAAE,CAAAkhJ,UACJtoJ,EAAMD,MAACqH,QAAAkhJ,gCASjB,WAOF,OAAAtoJ,EAAAD,MAAAkpI,gBAACtiH,EAAuB,EAAC,GAAA3mB,EAAQD,MAAAqH,QAAA,CAAAohJ,UAAAxoJ,EAAAD,MAAAqH,QAAAohJ,gCAO/B,kBAMAxoJ,EAAAD,MAAAkpI,gBAAAtiH,EAAe,KAAY3mB,EAAAD,MAAAqH,QAAA,CAAAmhJ,UAAAvoJ,EAAAD,MAAAqH,QAAAmhJ,sCASZ,SAAS/mI,2BACNmF,EAAG,KAAI3mB,EAAOD,MAAKqH,QAAO,CAAA4gJ,eAAWxmI,EAAA9M,OAAAjT,kCAK1C,SAAS+f,2BACXmF,EAAiB,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAA6gJ,cAAAzmI,EAAA9M,OAAAjT,oCAItB,kBAENzB,EAAAD,MAAAkpI,gBAACtiH,EACO,KAAO3mB,EACbD,MAAUqH,QACV,CAAAiiJ,iBAAerpJ,EACfD,MAAOqH,QAAAiiJ,iKEzL6BrpJ,EAAAspJ,8BAAA,WACE,OAAAtpJ,EAAAD,MAAAkpI,gBAAAtiH,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAAwhJ,uBAAA5oJ,EAAAD,MAAAqH,QAAAwhJ,0BAGrC5oJ,EAAAupJ,wBAAa,WACvB,OAAYvpJ,EAAAD,MAAAkpI,gBAAStiH,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAAyhJ,iBAAA7oJ,EAAAD,MAAAqH,QAAAyhJ,oBAKhB7oJ,EAAAwpJ,gBAAiB,SAAAhoI,GACnBxhB,EAAOe,SAA2B,CAAA+wE,IAAAtwD,EAAA9M,OAAAjT,SAEpCzB,EAAOkoJ,WAAQ,SAAAtvH,EAAAk5C,GACdl5C,EAAArE,4ODfoB,OAAA3jB,EAAA3P,EAAAmB,cAAA,QAAAoE,IAAAsrE,EAAAv7C,QAAA,SAAAqC,GAAA,OAAA54B,EAAAkoJ,WAAAtvH,EAAAk5C,IAAA7vE,UAAA,WAC8B2O,EAAA3P,EAAAmB,cAAAg2F,GAAA,GAAA12F,MAAAowE,EAAAumB,YAAA,EAAAp4E,MAAA,cAGrDjgB,EAAAG,MAAY,CACN2xE,IAAA,IAGK9xE,EEEP,SHgGA,EAAAmpJ,EAACrpJ,GC/FLqpJ,EAAOxoJ,UAAAoB,OAAmB,WAC3B,IAAA/B,EAAAE,KAEekH,EAAAlH,KACdH,MAA+DqH,QAI3D,OAAAwJ,EAAmB3P,EAAAmB,cAAA3E,EAAA,sBACnBmT,EAAkB3P,EAAAmB,cAAe3E,EAAA,mBAAA3B,MAAA,WACnC8U,EAAqB3P,EAAAmB,cACP3E,EAAE,QAAAiE,MAAA,YAAA6iF,WAAA,UAAAH,QAAAh9E,EAAAkhJ,SAAA9lJ,SAAAtC,KAAAkpJ,mBACbx4I,EAAgB3P,EAAEmB,cAAU3E,EAAA,QAAAiE,MAAA,YAAA6iF,WAAA,UAAAH,QAAAh9E,EAAAohJ,SAAAhmJ,SAAAtC,KAAAupJ,mBAC5B74I,EAAc3P,EAAAmB,cAAA3E,EAAA,QAAAiE,MAAA,YAAA6iF,WAAA,UAAAH,QAAAh9E,EAAAmhJ,SAAA/lJ,SAAAtC,KAAAwpJ,oBAClB94I,EAAA3P,EAAAmB,cAAA3E,EAAA,mBAAA3B,MAAA,YAAU8U,EAAQ3P,EAAUmB,cAAa3E,EAAA,WAAAiE,MAAA,SAAAm4C,WAR1C,EAQ0Cr3C,SAAAtC,KAAAypJ,uBAAAloJ,MAAA2F,EAAA4gJ,iBACxCp3I,EAAqB3P,EAAAmB,cACR3E,EAAA,WAAAiE,MAAA,QAAAm4C,WAVf,EAUer3C,SAAAtC,KAAA0pJ,sBAAAnoJ,MAAA2F,EAAA6gJ,gBACVr3I,EAAiB3P,EAAAmB,cAAS3E,EAAA,QAAAiE,MAAA,WAAA6iF,WAAA,UAAAH,QAAAh9E,EAAAiiJ,gBAAA7mJ,SAAAtC,KAAA2pJ,6BAClB5oJ,EAAAmB,cAAoB3E,EAAA,mBAAA3B,MAAA,UAC5B8U,EAAc3P,EAAAmB,cAAA3E,EAAA,QAAAiE,MAAA,sBAAA6iF,WAAA,WAAAH,QAAAh9E,EAAAwhJ,sBAAApmJ,SAAAtC,KAAAopJ,gCAClB14I,EAAA3P,EAAAmB,cAAA3E,EAAA,QAAAiE,MAAA,oBAAA6iF,WAAA,WAAAH,QAAAh9E,EAAAyhJ,gBAAArmJ,SAAAtC,KAAAqpJ,0BACM34I,EAAmB3P,EAAAmB,cAAA,OAAAH,UAAA,cAC3B2O,EAAA3P,EAAAmB,cAAA3E,EAAA,WAAAsB,MAAA,sLEjCsB,GAAAiB,EAAAG,MAAA2xE,KAAA,UAAA/yC,EAAAv4B,IAAA,CACA,IAAA8O,EAAAqR,EAAA,EAAAvf,EAAAkO,KAAA,CAAAtV,EAAAG,MAAA2xE,MACE9xE,EAAAD,MAAAkpI,gBAAAtiH,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAAkO,UACkBtV,EAAAe,SAAA,CAAA+wE,IAAA,KACK/yC,EAAAnd,sBAGyBhR,EAAA3P,EAAAmB,cAAA3E,EAAA,WAAAiE,MAAA,QAAAm4C,WAAA,EAAAr3C,SAAAtC,KAAA4pJ,cAAAroJ,MAAArD,OAAAktH,EAAA,eAAAltH,CAAAgJ,EAAA2zE,OAAA9mE,KAAA,cAGnEk1I,EH6FmB,CG5FzB3yH,EAAyB,eASvBuzH,GAAO,IAAAtsJ,EAAA,YAAAusJ,gBHuDY,yCAOjB,mBAEF,YACE,wBAEC,iBAEC,oBAEI,uBAEI,cGvEVC,0BAEe,SAAW7iJ,EAAAwiI,EAAAC,SACV,6BAEdA,WAQQ,WAIGzvI,EAAc,oBAIhB8vJ,EAAen+B,EAAUo+B,EAAWC,QACzC,QAAMA,EAAe,SAEtBC,GAAAH,EAAAzoJ,SACF,WAAAyoJ,EAAAI,QAAAJ,EAAAI,UAAAv+B,EAAA,gBACHhjF,EAACwhH,EAAAJ,EAAAC,EACDphH,EAAAuhH,EAAAH,EAAAD,EACD,OAAAK,GAAA,gBAAAC,GAAAC,OAAA,CAAA3hH,EAAAC,uBAKH,IAAA2hH,cADG,IAAAP,MAAA,GAEM,WAAPhjJ,EAAOwjJ,WACLD,EAAaH,GAAA,cACbE,OAAU,CAAAN,EAAAD,IACN9qI,MAAE,OAEqB,SAAzBjY,EAAWwjJ,eAEFJ,GAAA,WACTK,SAAKzjJ,EAAUyjJ,iBACb,CAAAT,EAASD,IACV9qI,MAAE,sBAkBG,KACD,MACF,eA6KQ6qD,EAAM4gF,EAAAC,EAAAZ,EAAAC,EAAAY,EAAAC,SAClBjkI,IAAAkjD,GAAAp/D,KAAA,OAEDoF,EAAMs6I,GAAe,OAAAzO,EAAA56I,IAAA,SACrB6pJ,GAAiB,GAAuC,IAApCjP,EAAU56I,IAAE,GAAA+pJ,WAAa7lJ,eAInCmlJ,GAAA,qBACP,CAAAM,EAAcC,UACd,GAAKC,eC9OQF,EAAAC,EAAAZ,EAAAC,aACdW,EAAcD,IACN1sJ,OAAQ6pI,EAAA,SAAR7pI,CAAQ0sJ,EAAAC,EAAA,KAChB3rJ,KAAAC,KAAAggB,EAAA8rI,GACHC,ECpBI,SAAShB,EAAoB15H,GAClC,GAAA05H,EAAa,EACb,OAAOhrJ,KAAA+N,MAAAi9I,EAAA15H,YAEL,EDgBD26H,CAAAP,EAAAK,GAEDtjH,EAAA,GACOvhC,EAAA,EAAMA,EAAKs5I,EAAUt5I,IAAA,CAC1B,IAAI2Y,EAAUmsI,EAAUD,EAAA7kJ,EAE5BglJ,GAAClB,EAAAnrI,EAAAksI,GAAAtjH,EAAA/3B,KAAAs6I,IAGeA,EAAUnrI,GACxB4oB,EAAa/3B,KAAAs6I,GAEXkB,GAAanB,EAAAlrI,EAAAksI,GACbtjH,EAAO/3B,KAAIq6I,IAGXA,EAAAlrI,GACH4oB,EAAA/3B,KAAAq6I,eChDCmB,GAAgBnB,EAAAY,EAAAI,IAChBtjH,EAAA/3B,KAAAq6I,YAEEr6I,KAAKi7I,KACDlkI,EAAc5lB,EAAAq6E,OAAUz0D,EAAM5lB,EAAAskE,KAAA19B,IFsQ/B0jH,CAAYT,EAAAC,EAAAZ,EAAAC,KACZI,GAAc,WAAAgB,cACT3jH,YACA4jH,MAEJ1P,EACAjxI,KAAA,2BChQFo/D,SACAA,EAAA/oE,IAAA,aACAuqJ,EAAAlgJ,QAAAkgJ,EAAAlgJ,OAAAmgJ,QAEGD,EAAAlgJ,OAAcmgJ,QAAAlqJ,MAGjB,ED8PCmqJ,CAAiB7P,GAAK8P,GAC1Brb,WChRDtmE,OACEwhF,EAAOxhF,EAAM/oE,IAAG,UAChBuqJ,GAAKA,EAAYhhJ,GAAOghJ,EAAKhhJ,EAAAihJ,QACxBD,EAAQhhJ,EAAIihJ,QAAClqJ,MAIhB,EDyQHqqJ,CAAAC,GAAAC,GACFxB,GAAA,OAAAzO,EAAA56I,IAAA,IAEQ8J,OAAA,KACDD,KAAA,QAAa,QACnBA,KAAU,YAAS,aAAAwlI,EAAA,IAAAyb,EAAA,KACpBhsJ,KAAAisJ,GAEDh8I,EACQ4S,OAAO,SACTA,OAAO,WACTs9B,yBCrSiCp5B,IAAAkjD,GAAAp/D,KAAA,OACrCs7E,iBCWAklE,GAAA9lJ,EAAA2mJ,EAACz7H,UAAAtxB,KAAA08B,IAAAt2B,EAAA2mJ,QF8EDx9E,GAAG,EAAAJ,UAAA,yBAEH,MAAS,CAQDplD,SAAU,IACVuB,SAAS,oFACfioC,KAAA,SAAkB/4C,EAAAswD,EAAAC,GAEZ,IAAAuG,EAAc92D,EAAK82D,KACnBl1E,EAAeoe,EAAA82D,KAAWl1E,MAO1B,SAAAuG,IACI,IAAIg6I,EAAA/0H,IAAAkjD,GAAAp/D,KAAA,OACNkgJ,EAAS5rJ,KAAA+N,MAAmB4uI,EAAAhyF,cAC5B,GAAyB,aAAzBvuD,EAAW4P,MAAE6vB,KAAe,CACvB,IAGI2vH,EAAAwB,GAHJvlI,EAA6B5lB,EAAA6J,KAAA4lE,EAAA27E,aAAA,CAClC5qJ,MAAYjG,EAAA4P,MAAA8+I,cAEHrkI,EAAA,EAAAtkB,KAAAwqH,WAAAi/B,aA+KV9gF,EAAA0gF,OACL7O,EAAS/0H,IAAAkjD,GAAAp/D,KAAA,UACVo/D,GACF,IAAA8gF,EAAA5rJ,KAAA+N,MAAA4uI,EAAAhyF,cAEDuiG,EAASvQ,EAA6B/wI,KAAA,UACpC,GAAMggJ,EAAe,CACjB,IAAAuB,EAAmBntJ,KAAA+N,MAAU69I,EAAe,GAC9CwB,EAAeptJ,KAAM+N,MAAC69I,EAAcuB,GACrCtB,EAAAT,GAAA,QAAAQ,EAAAwB,GAAMt8I,EAAAs6I,GAAA,OAAAzO,EAAA56I,IAAA,IACLsrJ,EAASv8I,EAAAw8I,UAAA,8BAAAhkJ,KAAAuiJ,GACVwB,EACF/3E,QAEQzpE,OAAA,QACID,KAAG,IAAO,SAAG3Q,GAAU,OAAAA,IAC5B2Q,KAAA,IAAe,GACfA,KAAQ,QAAQwhJ,EAAa,GAC7BxhJ,KAAS,SAAGshJ,GACTthJ,KAAK,eAAC,GAENA,KAAK,OAAM,SAAW3Q,GAAI,OAAAuwJ,EAAAvwJ,MAnMtBsyJ,CAAKziF,EAAK0gF,QAER,GAAyB,YAAvBpvJ,EAAK4P,MAAM6vB,KAAuB,CAC3C,IAAU2xH,EAAapxJ,EAAA4P,gBAmMV8+D,EAAU9iE,SACrB4f,IAAekjD,GAAAp/D,KAAA,UACrBo/D,SACDsgF,GAAA,OAAAzO,EAAA56I,IAAA,MAAU/B,KAAQ+N,MAAG4uI,EAAShyF,gBAClBgyF,EAAU/wI,KAAA,eACtB,CACD,IAAI6hJ,EACmB,WAArBzlJ,EAAMwjJ,WACNiC,EAASrC,GAAA,cACVE,OAAA,GAAAM,IAAU3rI,MAAA,GAAQ,IAElB,SAAAjY,EAAAwjJ,aACDiC,EAAoBrC,GAAA,WACrBK,SAAAzjJ,EAAAyjJ,UACIH,OAAe,GAAAM,IACZ3rI,MAAK,GAAQ,KAErB,IACQ4rI,EAAAT,GAAS,QAAAQ,EADG,IAEbyB,EAAMv8I,EAAAw8I,UAAA,gCAAAhkJ,KAAAuiJ,GACdwB,EAEQ/3E,QACGzpE,OAAQ,QACXD,KAAO,IAAI,SAAO3Q,GAAA,OAAAA,IAC1B2Q,KAAA,OAEQA,KAAA,QAVa,IAWhBA,KAAQ,SAAMshJ,GAChBthJ,KAAO,eAAmB,GAC3BA,KAAA,OAAA5M,OAAAX,EAAA,yBAAAW,CAAAgJ,EAAA0lJ,UAAAjnI,EAAA,EAAAtkB,KAAAwqH,WAAAtuH,EAAA,iBAAAi3I,MAAAj3I,EAAA,iBAAA2tD,OACQpuB,MAAA,mBAAA3iC,GAAA,OAAAwyJ,EAAAxyJ,MAjOD0yJ,CAAkB7iF,EAAA0iF,IAjBpB7qJ,IACA2uE,EAAAxzE,OAAcwc,GAAA,SAAe,WAC7B3X,aAkCe,EAAAwsE,UAAgB,gBAAU,WAE/C,MAAM,CACAplD,SAAA,IACAuB,SAAA,iFAEAioC,KAAA,SAAe/4C,EAAAswD,EAAAC,GACf,IAAAuG,EAAA92D,EAAA82D,KACIl1E,EAAIoe,EAAA82D,KAAAl1E,MAKX,SAAOuG,IAEF,GADEirJ,GAAO9iF,IACJrjD,EAAK5lB,EAAAgsJ,QAAKv8E,EAAKhoE,QAAMme,EAAa5lB,EAAAgsJ,QAAav8E,EAAAhoE,KAAAwkJ,OAAA,CAC9C,IAACC,EAAAz8E,EAAAhoE,KAAAykJ,UACErC,EAAWjkI,EAAY5lB,EAAAC,MAAa1F,EAAA4P,MAAAvC,KAAAzJ,KAAAyJ,IAAAskJ,EAAAtkJ,IAAA,GAAArN,EAAA4P,MAAAvC,IACnCkiJ,EAAAlkI,EAAa5lB,EAAAC,MAAA1F,EAAA4P,MAAAjD,KAAAglJ,EAAAhlJ,IAAA3M,EAAA4P,MAAAjD,IACvBgiJ,EAAkBgD,EAAAhlJ,IACViiJ,EAAQ+C,EAAUtkJ,IACzB,GAAgB,aAAPrN,EAAE4P,MAAA6vB,KAAK,CAER,IAAMivH,EAAWrjI,EAAmB5lB,EAAA6J,KAAA4lE,EAAU27E,aAAa,CAC7E5qJ,MAAAjG,EAAA4P,MAAA8+I,wBA2BahgF,EAAAggF,EAAkBY,EAAAC,EAAAZ,EAAAC,GAE9B,IAAMrO,EAAY/0H,IAAgBkjD,GAAgBp/D,KAAA,OAC5CoF,EAAOs6I,GAAA,OAAAzO,EAAiB56I,IAAW,IACzC6rJ,GAAa9iF,GAEb,IAAA8gF,EAAU5rJ,KAAU+N,MAAM4uI,EAAEhyF,cAAA,KACdgyF,EAAA/wI,KAAA,aACC+/I,EAASD,GAAAE,EAAAoC,KAChBpC,GAAaD,EAAmBD,KACzBN,GAAA,MAAAM,EAAAC,EAAAyB,GAEf5B,EAAMwB,GAAAlC,EAAArkI,EAAA,EAAAtkB,KAAAwqH,WAAAo+B,EAAAC,KAEHn/I,OAAO,KACPD,KAAA,QAAS,oBACbA,KAAA,yBAAAghJ,GAAA,OAEQU,UAAA,8BACDhkJ,KAAAuiJ,GACNv2E,QAEMzpE,OAAA,QACAD,KAAA,aAAe3Q,GAAW,OAAK+E,KAAA6mD,OAAU5rD,EAAAywJ,GAAAuC,KAE3CriJ,KAAA,IAAW,GACbA,KAAM,QAAA5L,KAAe6mD,MAAKumG,EAAMa,EAAiB,IACjDriJ,KAAM,SAAYshJ,GAClBthJ,KAAM,eAAc,GAEpBA,KAAM,OAAS,SAAA3Q,GAAU,OAAUuwJ,EAASvwJ,QACtC6vE,EAAc4gF,EAAOC,EAAUZ,EAAAC,EAAAY,EAAmCC,GA/CvDqC,CAAApjF,EAAAggF,EAAYY,EAAQC,EAAAZ,EAAAC,QAGnB,GAAsB,YAAlB5uJ,EAAA4P,MAAW6vB,KAAkB,CAC5C,IAAA2xH,EAAApxJ,EAAA4P,gBA8CG8+D,EAAA9iE,EAAA0jJ,EAAAC,EAAAZ,EAAAC,SACApjI,IAAOkjD,GAAAp/D,KAAA,SACV0/I,GAAM,OAAAzO,EAAK56I,IAAA,OACf+oE,SACK9qE,KAAS+N,MAAA4uI,EAAehyF,cAAA,KACxBgyF,EAAU/wI,KAAA,aACV+/I,EAAcD,GAAIE,EAAAoC,KAClBpC,GAASD,EAAID,GACtBG,EAAAT,GAAA,MAAAM,EAAAC,EAAAyB,GACFe,EAAAC,GAAApmJ,EAAA+iJ,EAAAC,GAEDl6I,EACQjF,OAAA,KACND,KAAA,QAAkB,oBAEZA,KAAM,YAAG,aAAqBghJ,GAAQ,OACtCU,UAAW,gCACXhkJ,KAAAuiJ,GAEFv2E,QACFzpE,OAAI,QACJD,KAAI,IAAO,SAAC3Q,GAAU,OAAK+E,KAAU6mD,OAAA5rD,EAAAywJ,GAAAuC,UACnC,oBAESjuJ,KAAK6mD,MAAAumG,EAAaa,kBACjBf,GACXthJ,KAAA,uBAAM,OAAI5D,EAAQ0lJ,iBACjB,mBAAqBzyJ,GAAA,OAAAkzJ,EACRlzJ,QACV6vE,EAAS4gF,EAAQC,EAASZ,EAAAC,EAAAY,EAAAC,GA1EhCwC,CAAAvjF,EAAA0iF,EAAA9B,EAAAC,EAAAZ,EAAAC,KA/BEroJ,IACA2uE,EAAKxzE,OAAAwc,GAAa,oBAClB3X,4BG1JkB,SAAAkiJ,EAAA7+H,EAAA2oD,GAIjB3oD,EAAW3hB,OAAKvD,KAChBA,KAAA4rI,UAAe1mH,EAAAsrD,KAErBxwE,KAAA1E,MAAA0E,KAAA4rI,UAAAtwI,4DAGG8nJ,OAAA,EACMoK,eAAmB,qBACpBnK,gBAAkB,GAEnBoK,kBAAe,MAElBztJ,KAAM0tJ,YAAU,CACZC,cAAc,aAChBC,sBAAe,qCAGjBC,KAAoB,aAAf,cACH,eACM,uDAILptJ,UAAAijJ,cAAA,SAAAn5E,cAEDhvD,MAAIxC,OAASwxD,EAAahpE,qBACrBM,sEAYH,wEACAisJ,kDAEL9tJ,KAAA4rI,UAAA1mH,EAAAsrD,KAEDxwE,KAAO1E,MAAQ0E,KAAA4rI,UAAAtwI,MAChB0E,KAAA4rI,UAAA/pI,mDAQKksJ,WAEF,CACA9kI,SAAS,IACVvP,OAAA,EAACwP,YAAY,gEACZC,WAAY6kI,WASF,KACX,uGAqEH,OAAAC,EAASC,EACP,EAGED,EAAMC,GACJ,aAIDC,GAAC3sJ,MAEI,SAANA,GAA8B,QAAXA,EACnB,OAAMi8C,UAGA9+B,OAAAnd,YACJD,SACA,IAAM6U,MAAI,kCAAA5U,EAAA,sCAWX4sJ,GAAAjQ,EAAA79H,QAEM,IAAPA,IAAgBA,GAAU,OAC1B3X,EAAA,EAASV,EAAK,EACb+kJ,EAAA,UAEHrmI,EAAe5lB,EAAAwyD,QAAA4qF,EAAA,SAAAkQ,GAChB1nI,EAAA5lB,EAAAwyD,QAAA86F,EAAAlQ,QAAA,SAAAmQ,GAED,IAAAC,EAAA,sNA6FMC,GAAU5tF,EAAA6tF,EAAAC,EAAA7O,GACd,IAAAz0H,EAAAtpB,OACgB,IAAZ+9I,IAAkBA,EAAA,OACpB8O,EAAQ,GACT16G,EAAA,SAAA7sC,GACG,IAAA0N,EAAiB1N,EAAG0N,WACtBwwD,EAAiBl+D,EAAE5F,QAMTT,EAAAwyD,QAAMz+C,EAAA,SAAAI,GACd,IAAA05I,EAAeC,GAAA35I,EAAA45I,IAAAJ,aAsCCvQ,EAAOjpI,EAAO65I,EAAAzpF,OAChC/jE,EAAA2T,EAAc85I,IAChB,GAAGztJ,SAAAysC,MAAAzsC,GAEH,6BAKC48I,EAAA4Q,IAAA5Q,EAAA4Q,GAAAzgJ,QACH6vI,EAAS4Q,GAAAzgJ,OAAwBsB,KAAarO,GACxC48I,EAAK4Q,GAAOz2I,OAAA1I,KAAAq/I,IAGf9Q,EAAA4Q,GAAA,CAEKvkJ,EAAAukJ,EACCzgJ,OAAS,CAAA/M,GACZ+W,OAAA,CAAA22I,IAvDAC,CAAeP,EAAAz5I,EAAA05I,EAAAtpF,UAIpB,QAAAgpD,EAAA7nG,EAAA,EAAAm6C,GAAA2tD,EAAAD,EAAAt5G,QAAAu5G,EAAAt5G,KAAAs5G,EAAAD,EAAAt5G,OAAA,CAGKi/B,EADGs6E,EAAgChtH,cAGhCq6E,GAAAxwD,EAAA,CAAAiK,MAAAumD,WAEN,IACF2yC,MAAAt5G,OAAAnT,EAAAwsH,EAAA7yC,SAAA35E,EAAA/B,KAAAuuH,+BAuBC,OAVF3nG,EAAS5lB,EAAAwyD,QAAAo7F,EAAA,SAAeN,GAEfA,EAAOlQ,QADC,IAAT0B,WA6HUwO,EAACc,EAAmBtP,OAClCvxI,EAAS+/I,EAAI//I,SACP+/I,EAAS/1I,SACX,YACAvX,EAAAwyD,QAAajlD,EAAA,SAAAhJ,EAAA5I,SACd0yJ,GAAA9pJ,EAAA6pJ,EAAAtP,GAEDkP,EAAAM,EAAEp3I,UACIkmI,EAAQ4Q,EAAezpJ,EAAIgT,EAAQ5b,GAAI2yJ,OApI5BC,CAAAjB,EAAAI,EAAA5O,YAoFIwO,EAAAhgC,OACvB//G,EAAS+/I,EAAA//I,OACVgK,EAAA+1I,EAAA/1I,SAAU,YACFvX,EAAMwyD,QAAIjlD,EAAA,SAAAhJ,EAAA5I,GAClB,IAAA2yJ,EAAAE,GAAAjqJ,EAAA+oH,GAAM0gC,EAAAM,EAAAp3I,OACLu3I,GAASrR,EAAA4Q,EAASzpJ,EAAOgT,EAAC5b,GAAA2yJ,OArFLI,CAAOpB,EAAAI,KAI9BE,WAuBOa,GAAArR,EAAA4Q,EAAAxtJ,EAAA2T,EAAAm6I,OACLtvI,EAAM,EAEN7K,EAAA/P,OAAa,IACb4a,EAAM1U,SAAW6J,EAAA,GAAS,KAE3BipI,EAAA4Q,IACD5Q,EAAS4Q,GAASzgJ,OAAYsB,KAAErO,GAC7B48I,EAAQ4Q,GAAWz2I,OAAQ1I,KAAEsF,GAEhCipI,EAAS4Q,GAAMhvI,OAAKA,GAIdo+H,EAAM4Q,GAAG,CACRtkJ,EAAAskJ,EACRM,SAEQ/gJ,OAAA,CAAA/M,GAKD+W,OAAS,CAAApD,GACT6K,MAASA,YAKb2vI,GAAkBnuJ,EAAOktJ,EAAO5O,UAChC,IAAAA,EACCgP,GAAAttJ,EAAAktJ,mBA2DL,OADGW,GAAA7tJ,EAAA4tJ,EAAAtP,GACM5nI,OAtDT03I,CAAApuJ,EAAAktJ,EAAA5O,YAME0P,GAAqBhuJ,EAAI8sH,iBAG3BnvH,KAAA+N,MAAA1L,EAAA8sH,yCAIGwgC,GAAAttJ,EAAA8sH,GAC4C,OAAtCkhC,GAAoBhuJ,EAAkB8sH,GAAAp2G,OAgB/C,SAACm3I,GAAA7tJ,EAAA4tJ,EAAAtP,uCAOE73G,EAAA4nH,YACH,GAA2C,IAA3CT,GAAsDA,EAGlD,CACD,IAAAU,EAAA,EAAAV,EAAMW,EAAAC,EAAA7wJ,KAAA+N,MAAA8iJ,GACLD,EAAA5wJ,KAAA+N,MAAuB6iJ,EAAAD,KAEvBD,GADA5nH,EAAM9oC,KAAK+N,MAAQ8iJ,GAAYD,GACnBD,OANVD,GADqC5nH,EAAA9oC,KAAA+N,MAAA8iJ,IACtB,gBAQpB7wJ,KAAA8oC,IAAA63G,EAAA73G,OAED9oC,KAAA8oC,IAAA63G,EAAA+P,kBAwBWxqH,sBAAMlmC,KAAAwQ,IAAA01B,GClcM,SAAA4qH,GAAAjvJ,EAAAmP,EAAA2vI,GAEwC,YADxC,IAAAA,MAAA,GACwC,IAAAA,EAGzD3gJ,KAAA08B,IAAoB1rB,EAAGnP,GAe3BkvJ,GAVF/wJ,KAAA+I,IAAAlH,EAAAmP,GAAAhR,KAAAyJ,IAAA5H,EAAAmP,GAUE2vI,UAgF0C,oBACvCqQ,EAAAlmF,EAAAtwD,GAED1Z,KAAI0Z,QAGJ1Z,KAAI3E,UAAOqe,EAAA82D,KAAAn1E,eACTuwI,UAAUlyH,EAAQ82D,gBACZ92D,EAAK82D,KAAAl1E,wBACP0uE,wBACM,yBACG,uBACPhqE,KAAA4rC,aAAAxrC,KAAAJ,0BAGO4rC,aAAM,6BAGhBnrC,UAAAg4B,YAAA,SAAAC,cAAMy0B,QAAA/gD,sBAKN3L,UAAAqF,IAAA,wBACDwkJ,GAAe,sBACT,YACN,QAAW,oDAIN7pJ,UAAAypB,QAAA,gBACLijC,cACAA,QAAAjN,cAEHiN,QAAA,QACM1sD,UAAW2L,KAAQ,SAAAvF,EAAe2B,WACrClN,MAAK6xD,QAAU/gD,MAAA5D,IAIjB3B,EAAAirI,WAIF,IAAIhwI,EAAC9B,KAAQmwJ,iBAAkBtpJ,EAAA2B,GAAA4nJ,EAAAtuJ,EAAAsuJ,aAAAC,EAAAvuJ,EAAAuuJ,aAE/B,GAAI7nJ,EAAK21I,QAAMiS,GAAf,CASA,IAAME,EAAYC,EAJnBvwJ,KAAAmtD,SAEDntD,KAAA8F,MAGE,IASA0qJ,EAAyBC,EATzBC,EAASloJ,EAAA21I,QAAYiS,GAGvBO,EAAAhqI,EAAA5lB,EAAA6J,KAAA8lJ,EAAAvS,QAAgB,SAAsDyS,EAAAC,GACpE,OAAAD,EAAAvB,OAAAp3I,SAAAo4I,GAAAQ,IAAyDR,EAAAxqJ,aAGvD2N,EAAOxT,KAAI3E,UAAQ2tC,WAAc0nH,EAAMlmJ,EADpB,uBAItB,GAAAmc,EAAA5lB,EAAAqb,SAAApc,KAAA1E,MAAAw1J,iBAEDN,EAAAxwJ,KAAAwwJ,oBAAyBxwJ,KAA+C1E,MAAAw1J,gBAAA,MAClEL,EAAgBzwJ,KAAA4rI,UAAAmlB,mBAAA/wJ,KAAA4rI,UAAAvvH,SAAA,UAEnB,CAKH,IAAAA,GAAArc,KAAA4rI,UAAAvvH,WAAA,GAAoB,EAClBm0I,EAAAxwJ,KAAAwwJ,oBAAAn0I,EAAArc,KAAA4rI,UAAAjvH,eAAuF,GACnF8zI,EAAazwJ,KAAa4rI,UAASmlB,mBAAkB10I,EAAcrc,KAAA4rI,UAAAjvH,eAAA,GAEvE,IAAAq0I,EAAW,mCAAAx9I,EAAA,sDACZ,GAAAm9I,EAED,GAAAA,EAAAtB,OAAA,CACQ,GAAO7mJ,EAAGyoJ,UAAW,CAEC,IAAEv3G,EAAc,SAAAw3G,GAC7B,OAAK1oJ,EAAK2oJ,mBAAW3oJ,EAAA2oJ,mBAAAD,GAAA1oJ,EAAAyoJ,UAAAC,IAE5BZ,EAAgB52G,EAAc22G,GACG,WAA3BrwJ,KAAC1E,MAAU81J,eACxBb,EAAAF,EAAA7nJ,EAAAyoJ,UAAA9rJ,OAAA,EAAAu0C,EAAA22G,EAAA,WAEO,CAGJC,EAAgBG,EADnBE,EAAAlmJ,EAAAkmJ,EAAAtB,OAAAp3I,OAAA,GAEOs4I,EAAeE,EAAqBE,EAACtB,OAAYt3G,KAIvDi5G,GAAkB,gCADJT,GAAED,EAAOA,EAAe,MAACC,EAAAD,GAAAC,GACL,kCAFjCC,EAAAG,EAAA5wI,OAEiC,iCAMhCixI,GAAiB,kBAAAL,EAAA5wI,MAAA,qBAGpB,KAAM/f,KAAA1E,MAAA6xD,QAAAkkG,cAEL,YADMrxJ,KAAAkqB,UAGRomI,EAAgBD,EAEhBE,EAAA,GACqB,OAGlBpjG,QAAQlN,KAAG+wG,QACX11J,MAAU6xD,QAAAkkG,eAEPrxJ,KAAAsxJ,aAAiBZ,QAEpBa,KAAA1qJ,QA9ED7G,KAAKkqB,cAgFCzpB,UAAU0vJ,iBAAkB,SAAAtpJ,EAAA2B,SAIjC,CAAI4nJ,aAFEpwJ,KAAAwxJ,gBAAA3qJ,EAAA2D,EAAAhC,GAEa6nJ,aADTrwJ,KAAOyxJ,gBAAA5qJ,EAAA4D,EAAAjC,OAGX/H,UAAQ+wJ,gBAAA,SAAAhnJ,EAAAhC,GAGf,IAAE6lJ,EAAA1nI,EAAA5lB,EAAA6J,KAAApC,EAAA21I,QAAA,SAAAyS,UACIpmJ,EAAAomJ,EAASpmJ,GAAQA,EAAComJ,EAAApmJ,GAAAhC,EAAAkmJ,qBAEtBL,EAAOA,EAAA7jJ,EAAgBklJ,GAAoBllJ,EAAAhC,EAAAkmJ,YAAA,MAEvCjuJ,UAAUgxJ,gBAAS,SAAAhnJ,EAAAjC,UACvBA,EAAAyoJ,UACC/xJ,KAAA+N,MAAAxC,GAGPilJ,GAAKjlJ,EAAkDjC,EAAAimJ,YAAAzuJ,KAAA1E,MAAAigB,MAAAskI,YAGpDp/I,UAAAixJ,oBAAA,SAAA7qJ,GAMD,OAHAA,EAAMg0B,MAAA76B,KAAY2xJ,aAAQ/vI,SAAYkZ,KAAA96B,KAAA0Z,MAAAk4I,OAAA/qJ,EAAA2D,GACtC3D,EAAMmgD,MAAAhnD,KAAa2xJ,aAAQ/vI,SAAam2B,IAAA/3C,KAAA0Z,MAAAm4I,YAAAhrJ,EAAAirI,UAEpCjrI,KAGIpG,UAAQ6wJ,aAAoB,SAAO9oJ,OAIvCG,EAAIV,EAAK0/B,EAHX0mH,EAAUruJ,KAAC0Z,MAAQ82D,KAAAhoE,KAAY21I,QAAG31I,EAAAgC,GACnCikJ,EAAAzuJ,KAAA0Z,MAAA82D,KAAAhoE,KAAAimJ,YAGCzuJ,KAAG0Z,MAAO82D,KAAKhoE,KAAGyoJ,WACnBtoJ,EAAA,EAEDV,EAAOjI,KAAK0Z,MAAQ82D,KAAMhoE,KAAAyoJ,UAAe9rJ,OAAM,EAChDwiC,EAAA3nC,KAAA0Z,MAAA82D,KAAAhoE,KAAAyoJ,UAAA9rJ,SAGOwD,EAAM3I,KAAG0Z,MAAQ82D,KAAAhoE,KAAA+S,MAAA5S,IACvBV,EAAOjI,KAAA0Z,MAAC82D,KAAahoE,KAAA+S,MAAAtT,IACnB0/B,EAAO3nC,KAAA0Z,MAAA82D,KAAAhoE,KAAA+S,MAAAosB,OAEV,IAAAmqH,EAAAnrI,EAAA5lB,EAAAK,IAAAitJ,EAAAlQ,QAAA,SAAAyS,GACH,IAAA7wI,OAAC9Z,IAAD2qJ,EAAC7wI,MAAA6wI,EAAA7wI,MAAA6wI,EAAAtiJ,OAAAnJ,OAAA,OAAAyrJ,EAAAvB,OAAAp3I,OAAA8H,0DCnRsB,IAE+Bm6B,EAD7B63G,EADF/xJ,KAAA0Z,MAAAs4I,OAAA/6I,OACEuzI,OAAA,CAAA7hJ,EAAAV,IAAAkX,MAAA,GDiGb,MC/FuC,OAAAnf,KAAA1E,MAAAigB,MAAAskI,QACA3lG,EAAAh7C,KAAA+N,MD8FvC,KC9FuChF,EAAAU,GAAA8lJ,EAAA,QAEY,CAC0B,IAAAwD,EAAAxD,GAAA,EACnDv0G,EAAAh7C,KAAA+N,MD0F1B,IC1F0B06B,EAAAsqH,EAAA,IAYvB/3G,EAAmBh7C,KAAU+I,IAAEiyC,EAAqB,GAElE,IAAAg4G,EAAAvrI,EAAA5lB,EAAAivB,OAAArJ,EAAA5lB,EAAAK,IAAA0wJ,EAAA,SAAA33J,GAAA,OAAAA,EAAA,cAAA+1B,EAAA5qB,GAAA,OAAA4qB,EAAA5qB,GAAA,GACD6sJ,EAAA7H,GAAA,cA6BEE,OAAA,GAAA0H,IAAoB/yI,MAAK,GD+CrB,KC/CwCnf,KAAKmtD,QAAsBvqC,OAAA,sBACrE7X,OAAA,OACKD,KAAA,QD4CG,KC3CHA,KAAA,SD4CH,ICzCA0hJ,UAAQ,QACRhkJ,KAAMspJ,GACNt9E,QACAzpE,OAAA,QAEGD,KAAA,IAAU,SAAS3Q,GACpB,OAAO43J,EAAW53J,EAAE,MAGnB2Q,KAAK,QAASovC,GAEdpvC,KAAK,aAAA3Q,GAEV,OD4BE,GC5B2Bg4J,EAAAh4J,EAAA,MAE7B2Q,KAAA,kBAA6B3Q,GAE7B,OAAAg4J,EAAAh4J,EAAA,SAKAsG,UAAA8wJ,KAAA,SAA+B1qJ,GAC/B,GAAK7G,KAAAmtD,QAAL,CAGD,IAAA6c,EAAAljD,IAAA9mB,KAAAmtD,QAAA+G,QAAA,GAEDk+F,EAAApoF,EAAAqoF,YACMC,EAAetoF,EAAGuoF,aACvBz3H,EAAAj0B,EAAAg0B,MDQG,GCNJkd,EAAAlxC,EAAAmgD,MDOI,ECEJ,OARMngD,EAACg0B,MAAAu3H,EAA0B,GAAKzvJ,OAAA6vJ,aACrC13H,EAAAj0B,EAAAg0B,MAAAu3H,EDIG,ICDEvrJ,EAACmgD,MAASrkD,OAAA8vJ,YAAAH,EAAA,GAAA3vJ,OAAAqvI,cACVj6F,EAAMlxC,EAAAmgD,MAAAsrG,EDCR,GCEJtyJ,KAAAmtD,QAAArwB,MAAA,OAAAhC,EAAA,MAAAgC,MAAA,MAAAib,EAAA,UAEQt3C,UAAa+vJ,oBAAqB,SAAMn0I,EAAeM,QACvD,IAAJA,IAAcA,EAAU,aAEvB,SAAApb,GAED,OAAMrD,OAAQX,EAAoB,eAA5BW,CAHJ,QAGIA,CAAsCqD,EAAA8a,EAAAM,KAK7CuzI,EDXuC,GC8BKwC,GAAA,WAItB,oBACtBC,EAAAj5I,EAAAswD,EAAAC,EAAAuG,QAAM92D,aACLswD,YACAwG,KAAOA,EAEVxwE,KAAA4yJ,SAAA5yJ,KAAAgqE,KAAAp/D,KAAA,kBAED5K,KAAAmtD,QAAA,IAAA0lG,GAAA7yJ,KAAA4yJ,SAAA5yJ,KAAA0Z,OACE1Z,KAAKuhB,UAAY,SAEP,MACP,EAEG+Y,IAAK,GAEXt6B,KAAIilC,QAAW,CAAAnK,KAAA,EAAAygB,MAAA,EAAAxD,IAAA,EAAA9/B,OAAA,GACfjY,KAAMkI,OAAA,CAAA4yB,KAAiB,GAAGygB,MAAS,GAACxD,IAAA,GAAU9/B,OAAA,IAC9CjY,KAAI8yJ,sBAAsBJ,QACxBliF,KAAAxzE,OAAawc,GAAA,SAAAxZ,KAAaqoI,SAAAjoI,KAAAJ,YAC3BwwE,KAAAugF,mBAAA/wJ,KAAA+wJ,mBAAA3wJ,KAAAJ,QAMc,EAAAwZ,GAAA,cAAAxZ,KAAAy7I,aAAAr7I,KAAAJ,WAAA0Z,SACD,EAAUF,GAAC,oBAAAxZ,KAAA07I,kBAAAt7I,KAAAJ,WAAA0Z,YAEtBk5I,SAASp5I,GAAA,YAAgBxZ,KAAE64B,YAAAz4B,KAAAJ,OAE9BA,KAAM4yJ,SAAOp5I,GAAK,YAAWxZ,KAAAy4B,YAAAr4B,KAAAJ,OAC7BA,KAAM4yJ,SAAOp5I,GAAK,aAAWxZ,KAAA4rC,aAAAxrC,KAAAJ,OC1F/B,SD4FYS,UAAIi7I,kBAAA,gBACXhK,oBAEKjxI,UAAOg7I,aAAA,SAAAn6H,GAEfthB,KAAA+yJ,oBAAAzxI,EAAAza,QAEUpG,UAAU4nI,SAAA,gBACjBxmI,cACA2uE,KAAAzgB,sBAGL4iG,EAAAlyJ,UAAAuyJ,iBAAA,WACE,IACI,IAAA1nJ,EAAYtL,KAAGwwE,KAAAllE,QAAAtL,KAAmB1E,MAAMgQ,QAAKtL,KAAAwwE,KAAatjE,IAAK5B,OAQnE,OAPIqb,EAAA5lB,EAAAipC,SAAA1+B,KAEJA,EAAAD,SAAAC,EAAAzN,QAAA,cAEIyN,GAAQtL,KAAM1E,MAAM0U,OAAQ5D,KAAO,GAAK,GAE5CpM,KAAA4yJ,SAAA5nJ,IAAA,SAAAM,EAAsC,OACtC,EAGA,MAAMotB,GAEN,aAGUj4B,UAAWwyJ,cAAS,SAAAjpF,GAC9B,IAAIkpF,EAAMlpF,EAAAwiF,UAAiB,gBAAez4E,eAE1CptD,EAAA5lB,EAAAkH,IAAuC0e,EAAA5lB,EAAAK,IAAA8xJ,EAAA,SAAAr3J,GAErC,OAAOA,EAAEs3J,UAAAt0J,YAIV4B,UAAA2yJ,eAAA,SAAAppF,MAEcA,EAAGpnD,OAAA,gBACPsjE,QAUL,OAAK,GATT,IAAGmtE,EAAMzoC,WAAA5gD,EAAApnD,OAAA,gBAAA9X,KAAA,OAET,OADY8/G,WAAA5gD,EAAAl/D,KAAA,WACZuoJ,KAWC5yJ,UAAe6yJ,SAAa,gBAC5B55I,MAAAk4I,OAAe5xJ,KAAC4xJ,OAAAtH,GAAA,YAChBE,OAAA,CAAAxqJ,KAAYxC,UAAAY,KAAA4B,KAAqBxC,UAAAgB,KAE/B2gB,MAAA,CAAO,EAAAnf,KAAAuzJ,qBACFvzJ,KAAIuzJ,WAlG+B,MAmG5BxrB,EAAc,kBAAApgG,EAAA3nC,KAAAxC,UAAAY,KAAA4B,KAAAxC,UAAAgB,IAKzB8+F,EADsB,QAD5Bt9F,KAAAwwE,KAAAn1E,UAAAgkJ,cAEkBiL,GAAc,UAAAkJ,GAIpBlJ,GAAA,WAAAkJ,SAEFlJ,GAAU,WAAAtqJ,KAAA4xJ,QACjBjqH,MAAMA,GACV8rH,WAAAn2D,GAEDo2D,YAlH+C,IAmH/C7rH,SAAA7nC,KAAA6xJ,aACQ9F,EAAO/rJ,KAAIkI,OAAO6vC,IACpBu4F,EAAMtwI,KAAK2zJ,WAEf3zJ,KAAI2uJ,QACF5jJ,OAAO,KACPD,KAAI,QAAS,eACdA,KAAA,yBAAAwlI,EAAA,IAAAyb,EAAA,KAAMhsJ,KAAAisJ,QAEL2C,QACD/rI,OAAA,WAEDA,OAAA,WACIs9B,YAEHz/C,UAAAmzJ,SAAA,WAED,IAAAjsH,EAASzoC,KAAIC,KAAEa,KAAI6xJ,YApI0B,IAqI9CgC,EAAA9rB,EAAA,SAAA/nI,KAAAwI,KAAAsrJ,aAAAnrJ,IAAA3I,KAAAwI,KAAAsrJ,aAAA7rJ,IAAA0/B,GAED7lC,EAAA9B,KAAA+zJ,eAAA/zJ,KAAWwI,KAAXsrJ,aAAAnrJ,IAAA3I,KAAAwI,KAAAsrJ,aAAA7rJ,IAAA4rJ,GAAAG,EAAAlyJ,EAAAkyJ,KAAAC,EAAAnyJ,EAAAmyJ,KAEMD,EAAA,OAAAh0J,KAAA1E,MAAAigB,MAAA5S,IAAA3I,KAAA1E,MAAAigB,MAAA5S,IAAAqrJ,EAEJC,EAAI,OAAAj0J,KAAA1E,MAAAigB,MAAAtT,IAAAjI,KAAA1E,MAAAigB,MAAAtT,IAAAgsJ,EAEJJ,EAAY9rB,EAAyB,SAAEisB,EAAKC,EAAAtsH,GAE5CA,EAAAzoC,KAAAC,MAAA80J,EAAAD,GAAAH,GACA,IAAIK,EAAAnsB,EAAoB,aAAQ8rB,GAC9Bx3I,EAA4B,OAAjBrc,KAAK1E,MAAAigB,MAAYc,SAAA63I,EAAAl0J,KAAA1E,MAAAigB,MAAAc,SAE7B83I,EAAApsB,EAAA,gBAAAisB,EAAAC,EAAAtsH,EAAAusH,GAEGv3I,EAAgBorH,EACP,kBAAA1rH,EAAA83I,QACV3jF,KAAKn0D,SAAWA,OAChBm0D,KAAA7zD,eAAoBA,EAGjBgK,EAAc5lB,EAAAgsJ,QAAO/sJ,KAASwI,KAAA21I,WAC9B8V,EAAA,EAEAD,GAAA,EACArsH,EAAQ,EAEdtrB,EAAA,GAEArc,KAAMwI,KAAA+S,MAAc,CAChB5S,IAAKqrJ,EACL/rJ,IAAKgsJ,EAELtsH,MAAMA,QAERjuB,MAAKs4I,OAAIhyJ,KAAAgyJ,OAAA1H,GAAA,cACTE,OAAO,CAAAwJ,EAAAC,IACP90I,MAAA,CAAAnf,KAAA6xJ,YAAA,IAEF,IAAMt2I,EAAQ+uI,GAAA,SACFtqJ,KAAKgyJ,QACdrqH,SACA8rH,WAAWzzJ,KAAK+wJ,mBAAmB10I,EAAUM,IAC7Cy3I,cAAc,EAAIp0J,KAAKnB,OACvBw1J,cAAc,GACdX,YAnL0C,GAqL7C1zJ,KAAK2uJ,QACF5jJ,OAAO,KACPD,KAAK,QAAS,eACd/K,KAAKwb,GAGR,IAAMwwI,EAAO/rJ,KAAKkI,OAAO6vC,IACnBu4F,EAAOtwI,KAAKizJ,cAAcjzJ,KAAK2uJ,SA5LQ,EA6L7C3uJ,KAAK2uJ,QAAQ/rI,OAAO,WAAW9X,KAAK,YAAa,aAAewlI,EAAO,IAAMyb,EAAO,KAGpF/rJ,KAAI2uJ,QACF/rI,OAAK,kBACF,uBAKLniB,UAAAszJ,eAAA,SAAAprJ,EAAAV,EAAA4rJ,GACA,MACGI,EADCK,GAAQrsJ,GAAAjI,KAAA8yJ,sBAAA,GAAAnqJ,GAAA3I,KAAA8yJ,sBAAA,MAmBZ,OAjBmB,SACV7qJ,EAAGjI,KAAA8yJ,sBACbkB,EAAArrJ,KAAA3I,KAAA8yJ,sBAAA,KAKKmB,EAAO/0J,KAAAC,MAAS8I,EAAKqsJ,GAAST,GAClBA,IACP30J,KAAK+N,OAAAtE,EAAU2rJ,GAAYT,MAI9BlrJ,GAAA,GAAYqrJ,EAAG,IACfA,EAAA,GAGA,CAAAA,OAAAC,KAAqBA,MAErBxzJ,UAAc8zJ,YAAa,eAC/B1U,EAAK7/I,KAAA1E,MAACigB,MAAMskI,UACV7/I,KAAAw0J,eAAAx0J,KAAAwI,KAAAsrJ,aAAoCW,OAAAz0J,KAAAwI,KAAAsrJ,aAAA7rJ,IAAA43I,GAAAmU,EAAAlyJ,EAAAkyJ,KAAAC,EAAAnyJ,EAAAmyJ,YAErC34J,MAAAigB,MAAA5S,KAAA,MAAA3I,KAAA1E,MAAAigB,MAAA5S,IAAA3I,KAAA00J,aAAA10J,KAAA1E,MAAAigB,MAAA5S,IAAAk3I,GAAAmU,IACqB,OAAtBh0J,KAAO1E,MAAAigB,MAAAtT,IAAejI,KAAA20J,aAAA30J,KAAA1E,MAAAigB,MAAAtT,IAAA43I,GAAAoU,EAGlBttI,EAAA5lB,EAAAgsJ,QAAqB/sJ,KAAAwI,KAAA21I,WACvB8V,EAAM/0J,KAAA8oC,IAAA63G,EAAkB,GAEtBmU,EAAK,QAGRt6I,MAAAs4I,OAAWhyJ,KAAAgyJ,OAAc1H,GAAA,WACzBllH,KAAAplC,KAAA1E,MAAeigB,MAAOskI,SACtB2K,OAAA,CAAAwJ,EAAcC,IACd90I,MAAA,CAAAnf,KAAY6xJ,YAAA,IAEf,IAAIrH,EAAQxqJ,KAAAgyJ,OAAAxH,WACExqJ,KAAA40J,mBAAApK,EAAA3K,KACG9X,EAAc,aAAAisB,KAClBh0J,KAAE1E,MAAAigB,MAAAc,UAAA63I,EAGTC,EAAYpsB,EAAW,gBAAAisB,EAAAC,EAAAzU,EAAAr6I,OAAA+uJ,GACvBv3I,EAAYorH,EAA8B,kBAAA1rH,EAAA83I,GAChDn0J,KAAKwwE,KAAAn0D,SAAeA,EAEpBrc,KAAIwwE,KAAK7zD,eAAkBA,OACzBnU,KAAA+S,MAAA,CACA5S,IAAMqrJ,EACN/rJ,IAAKgsJ,EACNtsH,MAAA63G,EAAAr6I,QAGD,IAAIoW,EAAQ+uI,GAAA,SAAAtqJ,KAAAgyJ,QACTxS,WAAOA,GACPiU,WAAOzzJ,KAAS+wJ,mBAAC10I,EAAAM,IACjBy3I,cAAS,EAAAp0J,KAAAnB,OACbw1J,cAAA,GAEDX,YAvQ+C,GAwQ/C1zJ,KAAA2uJ,QACM5jJ,OAAO,KACPD,KAAK,QAAK,eACZ/K,KAAIwb,SACCvb,KAAAkI,OAAA6vC,IACLu4F,EAAOtwI,KAAKizJ,cAAajzJ,KAAK2uJ,SA7Qa,OA8Q5CA,QAAA/rI,OAAA,WAAA9X,KAAA,yBAAAwlI,EAAA,IAAAyb,EAAA,KAGKiI,EAAO,GAEbh0J,KAAS2uJ,QACV/rI,OAAA,WAEDA,OAAA,cACS/mB,KAAK,KAIZmE,KAAA2uJ,QACD/rI,OAAA,WAEDA,OAAA,WACQs9B,YAEAz/C,UAAgBo0J,oBAAA,WAEtB,IAAI5D,EAAYjxJ,KAAGwI,KAAAyoJ,eACjBv3I,MAAMs4I,OAAAhyJ,KAAgBgyJ,OAAU1H,GAAC,cACjCE,OAAK,CAAI,EAACyG,EAAG9rJ,OAAgB,UAC3B,CAAMnF,KAAA6xJ,YAAiB,UACvBlrI,EAAgB5lB,EAAUK,IAAC6vJ,EAAA,SAAA/gJ,EAAA9J,GAAA,OAAAA,MAC5BugB,EAAA5lB,EAAAkH,IAAA0e,EAAA5lB,EAAAK,IAAA6vJ,EAAAlpB,EAAA,qBACF1rH,EAAA,OAAArc,KAAA1E,MAAAigB,MAAAc,SAAA63I,EAAAl0J,KAAA1E,MAAAigB,MAAAc,SAEDrc,KAAMwwE,KAAKn0D,SAAYA,EACvB,IAAA00I,EAAqB/wJ,KAAQ+wJ,mBAAI3wJ,KAAAJ,eACzB05C,EAAYw3G,GAClB,IAAAjZ,EAAgBgZ,EAAWC,GAMM,OALlCvqI,EAAA5lB,EAAAitC,MAAArnB,EAAA5lB,EAAAk/I,SAAAhI,KAAA,KAAAA,IAGFA,EAAA8Y,EAAA10I,EAAA00I,CAAApqI,EAAA5lB,EAAAk/I,SAAAhI,KAEoCA,EAEnC,IAAAkZ,EAAkBxqI,EAAA5lB,EAAAK,IAAA6vJ,EAAA,SAAAjrJ,EAAAI,GAAA,OAAAszC,EAAAtzC,UAChBoC,KAAI2oJ,2BACF7G,GAAa,SAAKtqJ,KAAMgyJ,QACzBxS,cAACiU,WAAY/5G,iBACJ,EAAM15C,KAAInB,qBACX,GACR60J,YA5T0C,GA6T7C1zJ,KAAE2uJ,QACH5jJ,OAAA,KAEDD,KAAA,uBACO/K,KAAAwb,SAEFvb,KAAUkI,OAAA6vC,MACL/3C,KAAMizJ,cAAKjzJ,KAAY2uJ,SApUc,EAuU/C,GAFC3uJ,KAAA2uJ,QAAA/rI,OAAA,WAAA9X,KAAA,yBAAAwlI,EAAA,IAAAyb,EAAA,KAED,WAAA/rJ,KAAA1E,MAAA81J,cAAA5R,KAAAr6I,OAAA,CAEM,IAAC2vJ,EAAe,EAAC90J,KAAO6xJ,aAAIrS,EAAAr6I,OAAA,KAC5BnF,KAAC2uJ,QAAWnC,UAAQ,gBAAgB1hJ,KAAA,YAAY,eAAAgqJ,EAAA,UAGnDnG,QAAM/rI,OAAA,WACLA,OAAQ,uBAGFniB,UAAC+zJ,eAAc,SAAA7rJ,EAAAV,EAAA43I,GACpB7/I,KAAAwI,KAAAsrJ,aAAAW,cAYET,KAXJh0J,KAAAwI,KAAAsrJ,aAAAW,OAAA,IAAAz0J,KAAAwI,KAAAsrJ,aAAAW,OAEI,EAIAz0J,KAAW00J,aAAA10J,KAAAwI,KAAAsrJ,aAAAW,OAAA5U,GAKJoU,KADLj0J,KAAO20J,aAAA30J,KAAAwI,KAAAsrJ,aAAA7rJ,IAAA43I,OAGTp/I,UAAMk0J,aAAc,SAAA1sJ,EAAAm9B,UACxBlmC,KAAA8oC,IAAA5C,EAAAlmC,KAAAC,KAAA4oI,EAAA,KAAA9/H,EAAAm9B,QAGM3kC,UAAOi0J,aAAA,SAAA/rJ,EAAAy8B,eACT4C,IAAO5C,EAAAlmC,KAAU+N,MAAA86H,EAAA,KAAAp/H,EAAAy8B,QAEjB3kC,UAAMm0J,mBAAc,SAAApK,EAAAplH,OACxB2vH,EAAAvK,EAAA,GACFwK,EAAAxK,EAAA,GAEDhL,EAAA,GACE,GAAMuV,EAAW,EAGb,IADA,IACO3uJ,EADalH,KAAK+N,MAAA86H,EAAwB,KAACgtB,EAAQ3vH,IAChCh/B,EAAA,EAASA,IAAA,CAElC,IAAA6uJ,EAAmB/1J,KAAK8oC,IAAC5C,EAAMh/B,GAC/Bo5I,EAAY5vI,KAAKqlJ,OAIrBttH,EAAAzoC,KAAAC,KAAA4oI,EAAA,KAAAitB,EAAA5vH,IAED,IAAKh/B,EAAO,EAAGA,GAAAuhC,EACLvhC,IAAA,CACP6uJ,EAAa/1J,KAAA8oC,IAAA5C,EAAAh/B,KACRwJ,KAASqlJ,GAElB,OAAAzV,KAED/+I,UAmDCswJ,mBAAA,SAAA10I,EAAAM,QAlDwB,IAAnBA,IAAoBA,EAAA,MACxB,IAAI5D,EAAQ/Y,KAAG1E,MAAAigB,MAAAxC,OAEf,OAAI,SAAWxX,GACb,IACM,MAAc,SAARwX,EAAqB7a,OAAGX,EAAA,eAAHW,CAAG6a,EAAH7a,CAAGqD,EAAA8a,EAAAM,GAAApb,EAEpC,MAAK61F,GAGD,OAFLlhF,QAAAmf,MAAA+hE,EAAAj4D,SAAAi4D,GAEc71F,OAIDd,UAAGy0J,iBAAQ,WACzBl1J,KAAM2uJ,QACA/rI,OAAA,WACJ4pI,UAAW,cACV1hJ,KAAA,KAAA9K,KAAAuzJ,eAEE9yJ,UAAe00J,QAAA,WACpBn1J,KAAK6xJ,YAAc7xJ,KAAAsL,OAAAtL,KAAAkI,OAAA6vC,IAAA/3C,KAAAkI,OAAA+P,OAEnBjY,KAAIo1J,SAAYp1J,KAACkI,OAAQ6vC,IACzB/3C,KAAKq1J,YAAQr1J,KAASo1J,SAAAp1J,KAAA6xJ,YACT,cAAb7xJ,KAAQ1E,MAAKg6J,gBACVT,sBAGgC,IAAhC70J,KAAK1E,MAASigB,MAAKskI,QACnB7/I,KAAQ4zJ,WAGR5zJ,KAAKu0J,mBAGLZ,WAAM3zJ,KAAUizJ,cAAKjzJ,KAAa2uJ,SApaQ,OAqa1C4E,WAAMvzJ,KAAAnB,MAAkBmB,KAAA2zJ,WAAA3zJ,KAAAkI,OAAAqzC,WACxB25G,mBAEHl1J,KAAMszJ,WACNtzJ,KAAAu1J,YAAMv1J,KAAAozJ,eAAApzJ,KAAA2uJ,SACH3uJ,KAAG1E,MAAAigB,MAAcnP,MAChBpM,KAAI2uJ,QACA/rI,OAAC,WACL4pI,UAAA,QACE1vH,MAAA,UAAc,GAEhB98B,KAAK1E,MAAA0wJ,MAAA5/I,MACJpM,KAAA2uJ,QACN/rI,OAAA,WAED4pI,UAAA,QACa1vH,MAAG,UAAU,MAGlBr8B,UAAc+0J,iBAAgB,WACpC,IAAIC,EAASz1J,KAAA4yJ,SAAiB,GAC9B5yJ,KAAAnB,MAAWK,KAAA+N,MAAAjN,KAAA4yJ,SAAA/zJ,SAAAmB,KAAAilC,QAAAsW,WACRjwC,OAAMpM,KAAQ+N,MAAAjN,KAAA4yJ,SAAetnJ,UAAWtL,KAAAilC,QAAAhtB,YACxCy9I,YAAuC,OAAzB11J,KAAE1E,MAAA0xJ,MAAY0I,YAAW11J,KAAA1E,MAAA0xJ,MAAA0I,YA5bb,OA6b1BC,UAAyB,OAAnB31J,KAAA1E,MAAiB0xJ,MAAE2I,UAAA31J,KAAA1E,MAAA0xJ,MAAA2I,UA7biB,EA8b9C31J,KAAA2uJ,SAED3uJ,KAAA2uJ,QAAAzuG,cAEKyuG,QAAMrE,GAAa,OAAAmL,GACnB1qJ,OAAM,OACND,KAAK,QAAC9K,KAAAnB,OACViM,KAAA,SAAA9K,KAAAsL,WAGO7K,UAAiBm1J,WAAW,WAClC,IAAI91J,EAAAE,QAEJA,KAAIw1J,wBACFL,UAC8B,IAA9Bn1J,KAAM1E,MAAAigB,MAAWskI,SAA8B,cAAjB7/I,KAAW1E,MAAMg6J,WAAA,CAC/C,IAAAzV,EAAY7/I,KAAK1E,MAAOigB,MAAKskI,QAC9B2K,EAAAxqJ,KAAAgyJ,OAAAxH,SAEKhL,EAAYx/I,KAAS40J,mBAAmBpK,EAAK3K,GAC/C7/I,KAACwI,KAAS21I,iBF9XdA,EAAA+L,GAeF,SAdEnpJ,EAAAwyD,QAAA4qF,EAA6B,SAAAkQ,GAC7B,IAAAwH,EAAAxH,EAAAlQ,QACE2X,EAAA,CACFzG,OAAA,CAAAp3I,OAAE,EAAQ8/B,IAAA,GACRzpC,OAAM,GACNgK,OAAA,GACCyH,MAAA,aAbLg2I,EAAqBF,EAAA3L,IAAA4L,EAAhBE,EAAY,KAchB3G,OAAA,CAAAp3I,OAAAiyI,EAAAnyG,IAAAg+G,EAAA1G,OAAAt3G,KAAAmyG,mJAID2L,EAAkB3L,GAClB2L,EAAA,GAAkBG,KAEhB7X,EE+WsB8X,CAAej2J,KAAAwI,KAAc21I,QAACx3H,EAAA5lB,EAAA4H,IAAA62I,IAErD,IAAA0W,EAAAl2J,KAAAwI,KAAAwkJ,MAEDC,EAAAjtJ,KAAAwI,KAAAykJ,UACMkJ,EAAElJ,EAAAhlJ,IACFmuJ,EAAel3J,KAAKyJ,IAAEskJ,EAAAtkJ,IAAA,GACxBshJ,EAAAtjI,EAAA5lB,EAAAC,MAAAhB,KAAmC1E,MAAA4P,MAAAjD,KAAAkuJ,EAAAn2J,KAAA1E,MAAA4P,MAAAjD,IACnCiiJ,EAASvjI,EAAiB5lB,EAACC,MAAAhB,KAAY1E,MAAA4P,MAAAvC,KAAAytJ,EAAAp2J,KAAA1E,MAAA4P,MAAAvC,IACxCqhJ,EAAArjI,EAAA5lB,EAAA6J,KAAA5K,KAAAwwE,KAAA27E,aAAA,OAAMnsJ,KAAA1E,MAAA4P,MAAA8+I,mBAENU,WAAAwB,GAAAlC,EAAArkI,EAAA,EAAAtkB,KAAAwqH,WAAAo+B,EAAAC,GAEDlqJ,KAAAqtJ,aAASC,GAAAttJ,KAAA1E,MAAA4P,MAAA++I,EAAAC,GACVlqJ,KAAAq2J,cAED,IAAArJ,EAAAhtJ,KAAA2uJ,QAAAnC,UAAY,iBAAchkJ,KAAA0tJ,GACxBlJ,EAAKjiJ,OAAQ,SACbiiJ,EAAQA,EACNx4E,QACCzpE,OAAO,QACTD,KAAA,IAAA9K,KAAAs2J,SAAAl2J,KAAAJ,OAAM8K,KAAI,QAAK9K,KAAUu2J,aAASn2J,KAASJ,OAC1C8K,KAAA,IAAA9K,KAAAw2J,SAAAp2J,KAAAJ,OACC8K,KAAG,SAAK9K,KAAUy2J,cAAgBr2J,KAAGJ,OACvC8K,KAAA,KAAA9K,KAAA21J,WAED7qJ,KAAA,KAAA9K,KAAA21J,WACK7qJ,KAAK,QAAO,yBACjBgyB,MAAS,OAAA98B,KAAA02J,aAAAt2J,KAAAJ,OACV88B,MAAA,SAAA98B,KAAA02J,aAAAt2J,KAAAJ,OAED88B,MAAA,kBACOA,MAAG,UAAc98B,KAAK22J,eAAav2J,KAAOJ,OACtCA,KAAM4yJ,SAAMhoJ,KAAO,iBAE3B4O,GAAA,sBAAA8H,KAAM6rC,QAAAypG,iBAAA,EACL92J,EAAK+2J,cAAQv1I,KAEZ9H,GAAA,sBAAA8H,GACFxhB,EAAAqtD,QAAAypG,iBAAA,EAED92J,EAASg3J,mBAAAx1I,QAIK7gB,UAAUo2J,cAAU,SAAgBv1I,GAClD,IAAIpW,EAAQo/I,GAAW,OAAChpI,EAAA9M,QAAAsoB,MAAA,QAEpBwd,EAAiBgwG,GAAO,MAAKp/I,GAAO6rJ,OAAO,GAC7CC,EAAY1M,GAAW,MAAAp/I,GAAA+rJ,SAAA,GACxBC,EAAA5M,GAAA,OAAAhpI,EAAA9M,QAEDxU,KAAAmtD,QAAAgqG,kBAAAjsJ,EACAgsJ,EACGp6H,MAAG,OAAWwd,EAAaz0C,YAC7Bi3B,MAAA,SAAAk6H,EAAAnxJ,YAAMi3B,MAAI,eAAgB,MAE1Br8B,UAAAq2J,mBAAA,SAAAx1I,MAAW,OAAGA,EAAK9M,QACjBsoB,MAAG,OAAK98B,KAAWmtD,QAAKgqG,mBAC1Br6H,MAAA,SAAA98B,KAAAmtD,QAAAgqG,mBAEDr6H,MAAA,qBAEAr8B,UAAA41J,YAAA,WACA,IAAIe,EAAYl4J,KAAA+N,MAAAjN,KAAe4xJ,OAAA5xJ,KAAAwI,KAAAkmJ,aAAA1uJ,KAAA4xJ,OAAA,IAE/ByF,EAASn4J,KAAA+N,MAAAjN,KAAAgyJ,OAAAhyJ,KAAAgyJ,OAAA5H,OAAA,GAAApqJ,KAAAwI,KAAAimJ,cACV,OAAAzuJ,KAAA1E,MAAAigB,MAAAskI,QAAA,CAED,IAAAz6G,EAAAplC,KAAA1E,MAAAigB,MAAAskI,QACUyX,EAAat3J,KAAIwI,KAAKimJ,aAAW,EACvC4I,EAAOn4J,KAAA+N,OAAAjN,KAAAgyJ,OAAA,GAAAhyJ,KAAwBgyJ,OACxB5sH,IAAMkyH,SAGRF,EAAA,EAAAp3J,KAAA01J,iBACL6B,UAAYr4J,KAAA+I,IAAUsvJ,EA9hBV,QA+hBbC,WAAAH,IAAA,EAAAr3J,KAAA01J,YAAA,GAGH/C,EAAAlyJ,UAAA61J,SAAA,SAAAn8J,GASE,OAPE6F,KAAA4xJ,OAAYz3J,EAAAqQ,GAAA,EACPxK,KAAA2zJ,WAAA3zJ,KAAA01J,YAGR11J,KAAA4xJ,OAAAz3J,EAAAqQ,GAAAxK,KAAA2zJ,WAAA3zJ,KAAA01J,eAKej1J,UAAO81J,aAAgB,SAAWp8J,GAChD,IAAAkF,EAAOW,KAAGu3J,UAaX,OAZAv3J,KAAA4xJ,OAAAz3J,EAAAqQ,GAAA,EAEDnL,EAAAW,KAAA4xJ,OAUCz3J,EAAAqQ,GAAAxK,KAAAu3J,UARMv3J,KAAS4xJ,OAAOz3J,EAAAqQ,GAAOxK,KAACu3J,UAAAv3J,KAAAuzJ,aAGzBl0J,EAACW,KAAAuzJ,WAAiBvzJ,KAAA4xJ,OAAAz3J,EAAAqQ,GAAAxK,KAAA01J,aAItBr2J,IAAA,EAAAH,KAAA+I,IAAA5I,EA1jBc,GA0jBC,KAIfoB,UAAA+1J,SAAE,SAAUr8J,GACZ,IAAIsQ,EAACzK,KAAAgyJ,OAAc73J,EAAGsQ,GAAKzK,KAAAo1J,SAAAp1J,KAAAw3J,WAAAx3J,KAAA01J,mBACG,IAA1B11J,KAAC1E,MAAUigB,MAAMskI,SAAS,IAAA1lJ,EAAAsQ,EAExBA,EAAAzK,KAAAq1J,YAAsBr1J,KAAIw3J,WAAex3J,KAAK01J,YAG5CjrJ,EAAAzK,KAASo1J,WAEX3qJ,EAACzK,KAAKo1J,UAGP3qJ,KAGAhK,UAAiBg2J,cAAA,SAAAt8J,GACvB,IAAAsQ,EAAAzK,KAAAgyJ,OAAA73J,EAAAsQ,GAAAzK,KAAAo1J,SAAAp1J,KAAAw3J,WAAAx3J,KAAA01J,YAEDn5H,EAAAv8B,KAAAw3J,WACE,OAAe,IAAfx3J,KAAA1E,MAAAigB,MAAAskI,SAAe,IAAA1lJ,EAAAsQ,EACVzK,KAAAw3J,YAID/sJ,EAACzK,KAAKo1J,SACR74H,EAAAv8B,KAAOgyJ,OAAA73J,EAAAsQ,GAAAzK,KAAA01J,YAGH11J,KAASgyJ,OAAK73J,EAAAsQ,GAAAzK,KAAeq1J,YAC/B94H,EAAIv8B,KAACq1J,YAAkB5qJ,EAEpBA,EAAAzK,KAAAw3J,WAAiBx3J,KAAAq1J,cACtB94H,EAAIv8B,KAACq1J,YAAkB5qJ,KAIxBvL,KAAAyJ,IAAA4zB,EAAAv8B,KAAA6xJ,eACC3yJ,KAAM+I,IAAGs0B,EAnmBG,OAsmBP97B,UAAAi2J,aAAyB,SAAAv8J,SAC/B,YAAA6F,KAAA1E,MAAA4P,MAAA6vB,KACF78B,OAAAX,EAAA,yBAAAW,CAAA8B,KAAA1E,MAAA4P,MAAA0hJ,UAAAjnI,EAAA,EAAAtkB,KAAAwqH,WAAAtuH,EAAA,iBAAAi3I,MAAAj3I,EAAA,iBAAA2tD,MAIWlrD,KAAK0qJ,WAAcvwJ,EAAA4lB,UAGpBtf,UAAWk2J,eAAA,SAAAx8J,SACd,YAAJ6F,KAAI1E,MAAA4P,MAAA6vB,KACC/6B,KAAAqtJ,aAAAlzJ,EAAA4lB,OAGL,KAIStf,UAAAg3J,eAAA,SAAAn2I,GACZ,IAAAo2I,EAAA13J,KAAA4yJ,SAAAhxI,SAIC,MAAI,CAAApX,EAFNtL,KAAA+N,MAAAqU,EAAAq2I,QAAAD,EAAA58H,MAEerwB,EADbvL,KAAA+N,MAAAqU,EAAA4xH,QAAAwkB,EAAA3/G,SAGAt3C,UAAAo4B,YAAe,SAAevX,GAC/B,IAAAxhB,EAAAE,KAED4hB,EAAA5hB,KAAAy3J,eAAAn2I,GACEthB,KAAKuhB,UAASiX,QAAS,EACvBx4B,KAAKuhB,UAAS6Y,GAAIxY,EAAKpX,EACvBxK,KAAAu5B,eAAU,WACXz5B,EAAA83J,aAGC9wI,IAAkBhoB,UAAAw6B,IAAA,UAAAt5B,KAAAu5B,eAAAn5B,KAAAJ,UAEVS,UAAam3J,UAAS,eACL94J,UAAS29B,OAAQ,UAAOz8B,KAAAu5B,eAAAn5B,KAAAJ,YAE/Cu5B,eAAkB,oBACXf,QAAO,QACFt5B,KAAM08B,IAAC57B,KAAAuhB,UAAA+Y,GAAAt6B,KAAAuhB,UAAA6Y,sBACTE,IAAO,GAAEu9H,EAjpBwB,EAipBJ,OAC7B73J,KAAK4xJ,OAAAxH,OAAWlrJ,KAAAyJ,IAAA3I,KAAAuhB,UAAA6Y,GAAAp6B,KAAAuhB,UAAA+Y,IAAAt6B,KAAA2zJ,cACjB3zJ,KAAC4xJ,OAASxH,OAAAlrJ,KAAc+I,IAACjI,KAAAuhB,UAAA6Y,GAAAp6B,KAAAuhB,UAAA+Y,IAAAt6B,KAAA2zJ,sBAC7B1tF,QAAQn/B,QAAO,MACf5oC,OAAKktH,EAA2B,MAAhCltH,CAAiCP,GACrCa,GAAAN,OAAAktH,EAAA,MAAAltH,CAAA2xI,KAIL7vI,KAAAk7B,oBAEOz6B,UAAiBmrC,aAAC,WAEvBjmB,EAAkB,EAAAhqB,KAAA,0BAChB+1I,kBAEJihB,EAAClyJ,UAAAg4B,YAAA,SAAAnX,GAED,GAAAthB,KAAA2uJ,QAAA,KAII/sI,EAAQ5hB,KAAGy3J,eAASn2I,MACpBthB,KAAIuhB,UAAWiX,OAGfx4B,KAAK0xI,sBACFvkF,QAAOjjC,eACP3I,UAAK+Y,GAASt6B,KAAA83J,eAAoBl2I,EAAApX,QAClCutJ,cAAK/3J,KAAauhB,UAAA6Y,GAAep6B,KAAIuhB,UAAS+Y,eAGzCt6B,KAAIg4J,YAAO12I,EAASM,QACzBq2I,cAAar2I,EAAApX,QACb2iD,QAAK/gD,KAAMvF,EAAK7G,KAAAwI,WAChB0vJ,oBAAmBrxJ,MAI1B8rJ,EAAAlyJ,UAAAu3J,YAAA,SAAA12I,EAAAM,GACE,IAAIpX,EAAIxK,KAAC4xJ,OAAWxH,OAAKxoI,EAAKpX,EAAAxK,KAAU2zJ,YAAY1iH,UAClDxmC,EAAMzK,KAAIgyJ,OAAQ5H,OAAOxoI,EAAMnX,EAAGzK,KAAKo1J,UAazC,MAZO,CACNv6H,MAAAvZ,EAAAuZ,MACFmsB,MAAA1lC,EAAA0lC,MAEDx8C,IACM4vB,GAAI5vB,EACNC,IACD4vB,GAAA5vB,EACFqnI,UAAA,KAEDlwH,aAKYnhB,UAAAy3J,oBAAkC,SAAArxJ,KAE3CirI,UAAA5yI,KAAA+I,IAAApB,EAAA+a,OAAAnX,EAAAzK,KAAAsL,OAAA,MAGDqa,EAAM,EAAAhqB,KAAQ,cAAiB,CAACkL,IAAEA,EAAAvL,MAAA0E,KAAA1E,WAE3BmF,UAAUq3J,eAAA,SAAAx9H,GAIjB,SAHEp7B,KAAA+I,IAAOqyB,EAAAt6B,KAAA2zJ,cACRz0J,KAAAyJ,IAAA2xB,EAAAt6B,KAAAuzJ,WAAAvzJ,KAAA2zJ,eAIUlzJ,UAAWs3J,cAAQ,SAAYI,EAAAC,GAC1C,GAAIp4J,KAAC2uJ,QAAM,CACP3uJ,KAAC2uJ,QAAMnC,UAAa,sBAAgBtsG,SACpC,IAACm4G,EAAcn5J,KAAOyJ,IAACwvJ,EAASC,GACrCE,EAAAp5J,KAAA08B,IAAAu8H,EAAAC,GACHE,EA5tBiD,GA4tBhDt4J,KAAA2uJ,qFC/1BkD7jJ,KAAA,IAAA9K,KAAAo1J,UAC5BtqJ,KAAA,SAAA9K,KAAA6xJ,eAKac,EAAAlyJ,UAAAy6B,eAAA,WAOFl7B,KAAAuhB,UAAA6Y,IAAA,EAG+Cp6B,KAAAuhB,UAAA+Y,IAAA,EAEzBt6B,KAAA2uJ,SAElD3uJ,KAAA2uJ,QAAAnC,UAA6B,sBAAAtsG,UAIjCyyG,EAAWlyJ,UAAAw3J,cAAA,SAAAngH,GACX,GAAO93C,KAAA2uJ,QAAA,CACL3uJ,KAAA2uJ,QAAiBnC,UAAA,sBAAAtsG,SACjB,IAAAowF,EAAex4F,EAChBw4F,EAAApxI,KAAA+I,IAAAqoI,EAAAtwI,KAAA2zJ,YACMrjB,EAAApxI,KAAAyJ,IAAA2nI,EAAAtwI,KAAAuzJ,WAAAvzJ,KAAA2zJ,YACD3zJ,KAAE2uJ,QACG5jJ,OAAE,KACXD,KAAY,QAAM,qBACVA,KAAK,yBAAAwlI,EAAA,OACbvlI,OAAa,QACdD,KAAA,QACOA,KAAA,KAAA9K,KAAAo1J,UACAtqJ,KAAK,QACZA,KAAA,KAAA9K,KAAAq1J,aACWvqJ,KAAA,eAAY,KAGxB6nJ,EAAOlyJ,UAAAsyJ,oBAAA,SAAAlsJ,GACL,GAAI7G,KAAE2uJ,SAAI,IAAA3uJ,KAAAwwE,KAAAn1E,UAAAk9J,aAAA,CACX,IAAAjoB,EAAAtwI,KAAA4xJ,OAAA/qJ,EAAA2D,GAAAxK,KAAA2zJ,WACM3zJ,KAAAi4J,cAAA3nB,OAGK7vI,UAAIixI,eAAA,WACd1xI,KAAS2uJ,SACT3uJ,KAAA2uJ,QAAiBnC,UAAA,sBAAAtsG,YAGlBz/C,UAAAoB,OAAA,WAID,GAHA7B,KAAAwI,KAAaxI,KAAIwwE,KAAAhoE,KACjBxI,KAAA1E,MAAe0E,KAAIwwE,KAAAl1E,MACnB0E,KAAAxC,UAAiBwC,KAAAwwE,KAAArxD,MACjBnf,KAAagzJ,oBAAMhzJ,KAAAwI,KAAnB,CAIC,GAAAme,EAAA5lB,EAAAgsJ,QAAA/sJ,KAAAwI,KAAA21I,SAGD,OAFAn+I,KAAAw1J,wBACAx1J,KAAAm1J,UAIIn1J,KAAA41J,aAEN51J,KAAA0Z,MAAAi6I,WAAA3zJ,KAAkC2zJ,WAClC3zJ,KAAA0Z,MAAA67I,YAAAv1J,KAAAu1J,YACMv1J,KAAA0Z,MAAem4I,YAAA7xJ,KAAA6xJ,YACnB7xJ,KAAA0Z,MAAY65I,WAAAvzJ,KAAAuzJ,WACVvzJ,KAAM0Z,MAAA07I,SAAiBp1J,KAAEo1J,WAG3BzC,ED2DyB,GCzCzBzqB,GAAgB,CAChBymB,QAAQ,GACR3B,MAAM,CACJ0I,YAAc,KACdC,UAAM,MAERzqJ,MAAM,CACJ6vB,KAAM,WACN6xH,UAAM,UACNlC,WAAc,OACdC,SAAM,GACNX,YAAc,sBAGZh6I,OAAA,CAEN5D,MAAA,GAgBEkpJ,WAAA,aACAlE,aAAA,wBACE,QAfF,CACAhlJ,MAAA,SAeE,CAEAA,MAAA,EACA2M,OAAK,QACLsD,SAAK,KACLwjI,QAAK,EAELyX,YAAA,KACA3uJ,IAAI,KACJV,IAAI,kBAEF,mBACC,iBAEH,mBACK,aACD,CACJmE,MAAK,EACLilJ,eAAc,mBAGT,sBAGPmH,GAAA,WAAc,eACP,UAAa,QAGpBrM,GAAC,OAGK,WAAC5qJ,MAAgB,sBAAe6oJ,OAAA,UACtC,CAACplJ,KAAA,SAAAzD,MAAA,oBAAA6oJ,OAAA,gBAGK,QAAM7oJ,MAAU,mBAAa6oJ,OAAA,cAC/B,SAAO7oJ,MAAA,oBAAA6oJ,OAAA,cACR,QAAA7oJ,MAAA,mBAAA6oJ,OAAA,cAEG,UAAW7oJ,MAAA,qBAA4B6oJ,OAAA,cACzC,UAAK7oJ,MAAA,qBAAgC6oJ,OAAA,cACtC,OAAA7oJ,MAAA,kBAAA6oJ,OAAA,cACC,QAAK7oJ,MAAA,mBAA8B6oJ,OAAG,eACvC,UAAA7oJ,MAAA,qBAAA6oJ,OAAA,SACH,CAACplJ,KAAA,UAAAzD,MAAA,qBAAA6oJ,OAAA,SAED,CAAAplJ,KAAA,QAAAzD,MAAA,mBAAA6oJ,OAA8B,eACxB,UAAW7oJ,MAAE,qBAA0B6oJ,OAAA,eACrC,SAAU7oJ,MAAK,oBAAoB6oJ,OAAA,eAEnC,OAAA7oJ,MAAa,kBAAc6oJ,OAAa,eACxC,OAAA7oJ,MAAA,kBAAkC6oJ,OAAK,eAE7C,YAAA7oJ,MAAA,8BAA2C6oJ,OAAA,eACrC,OAAA7oJ,MAAA,kBAAmB6oJ,OAAI,cACzB,OAAA7oJ,MAAA,kBAAkB6oJ,OAAA,cACpB,OAAA7oJ,MAAc,kBAAA6oJ,OAAI,cACnB,OAAA7oJ,MAAA,kBAAA6oJ,OAAA,uBACM7oJ,MAAO,oBAAY6oJ,OAAa,cACrC,OAAK7oJ,MAAM,kBAAkB6oJ,OAAA,cAC7B,OAAK7oJ,MAAM,kBACX6oJ,OAAA,cACA,OAAA7oJ,MAAc,kBAAoB6oJ,OAAA,cACnC,SAAA7oJ,MAAA,oBAAA6oJ,OAAA,qBAAM7oJ,MAAA,kBAAA6oJ,OAAA,cACL,SAAA7oJ,MAAc,oBAAkB6oJ,OAAa,cAC9C,SAAA7oJ,MAAA,oBAAA6oJ,OAAA,YAGmB,qBACa,SAAiBxqJ,YAG3C64J,EAAAvzI,EAAAmqC,OACLvvD,EAAIF,EAAAG,KAAgBC,KAAKklB,EAAAmqC,IAAkBrvD,4BACrC,gBACF,kBACD,yBAAM,IACLe,EAAAovG,aAAgBrwG,EAAAxE,MAAA4sI,oBACjBwwB,KACFvkB,WAAAqkB,kBAAMrM,KAENpyC,eAAA,IACD6pC,UAAc,IAAIa,GAAsB,CACzCtqH,MAAA,CAAAY,KAAA,UAEDynH,YAAc,OAIZxlJ,OAAAwc,GAAY,SAAU1Z,EAAIuoI,SAAQjoI,KAAQN,MAC1C9C,OAAAwc,GAAW,uBAAK1Z,EAAA+jJ,qBAAAzjJ,KAAAN,MACjB9C,OAAAwc,GAAA,aAAA1Z,EAAAk3F,YAAA52F,KAAAN,IAEKA,EAAA9C,OAAAwc,GAAA,qBAAA1Z,EAAA64J,eAAAv4J,KAA8EN,IAEpFA,EAAK9C,OAAOwc,GAAA,iBAAA1Z,EAAAsoI,eAAAhoI,KAAAN,MACV84J,kBAAoB94J,EAAA84J,kBAAAx4J,KAAAN,GACpBA,EC5JJ,SDiIMsmB,QAAa,CAAE,wBACE,EAAAqyI,EAAY74J,KA4B/Ba,UAAa2nI,eAAW,gBACxBt3E,aAAY,OAAA+nG,GAAA,QACZ/nG,aAAW,UAASi9F,GAAA,QACpB7K,YAAAp0E,EAAA,EAAAgqF,kBAGJL,EAAAh4J,UAAAu8G,QAAA,SAAAjjG,GACE/Z,KAAMiwD,gBAAe,WAAQ,MAG7BxvD,UAAA4nI,SAAA,WACKroI,KAAAmf,OAAAnf,KAAEoH,SAIuB,cAA1BpH,KAAK1E,MAAMg6J,WACbt1J,KAAK+4J,gCAIP/4J,KAAAg5J,qCAIMv4J,UAAYu4J,+BAA2B,WAC7C,IACEtK,EAACD,EAAoBwK,EAAgBnF,EACrCjU,EAAA7/I,KAAY1E,MAAKigB,MACjBskI,QACAqZ,EAAAl5J,KAAA1E,MAAA49J,eArKmB,GAsKnBC,EAAiBj6J,KAAO+N,OAAUjN,KAACmf,MAAA3gB,GAAAyyC,UAAAjxC,KAAAmf,MAAA/gB,KAAA6yC,WAAAioH,GAGnCxK,EAFK5/E,EAAA,EAAAm7C,eAAA1jH,KAAAvG,KAAA1E,MAAAozJ,aAEL5/E,EAAA,EAAAivC,eAAsC/9G,KAAA1E,MAAAozJ,aAEvC1gH,MAAArvB,OAAA3e,KAAA1E,MAAAozJ,eAED,KAAA1uJ,KAAA1E,MAAAozJ,aACwB,OAAlB1uJ,KAAA1E,MAAAozJ,YACQyK,EAIRx6I,OAAA3e,KAAA1E,MAAAozJ,eAIO1uJ,KAAEo5J,YAAWp5J,KAAAoH,YACxBiyJ,EAAar5J,KAAA1E,MAAW+9J,eAvLF,GAwLX,IAAXxZ,EACA4O,EAAYzuJ,KAAA1E,MAAAigB,MAAA+7I,aAML7I,EAHVqF,EAAA7rJ,MAAA6rJ,EAAAnrJ,IAEDmrJ,EAAA7rJ,IACyB6rJ,EAAgB7rJ,IA/Lf,GAiMjB,GAKT6rJ,EAAA7rJ,IAAA6rJ,EAAwDnrJ,KAAA0wJ,EAElD5K,EAACzuJ,KAAA1E,MAAqBmzJ,gBAG5BwK,EAAAzK,GAA6BxuJ,KAAAoH,OAAAqnJ,EAAAC,EAAA7O,kBAC7BiU,EAkCC,CAAAnrJ,KAAA,EAAAV,IAAA,EAAAwsJ,OAAA,GAjCKhG,EAAc,OAEhB3sJ,EAAGssJ,GAAe6K,EAAaj5J,KAAK1E,MAAMg+J,iBAAetM,EAAAlrJ,EAAAkrJ,MAAAC,EAAAnrJ,EAAAmrJ,eACzDzkJ,KAAO,CACN21I,QAAA8a,EAECnF,aAAYA,EACVpF,cAGFD,YAAaA,EAEdzB,MACDA,EAEEC,gBAGAxsJ,UAAKs4J,8BAAA,eAERrK,EAAAuK,EAAAhI,IADGjxJ,KAAAu5J,kDAEFnyJ,OAAqB6I,KAAAupJ,eACnBC,6BACE/mJ,qBHnPWkuD,GAGnB,QAFCv6C,EAAAvkB,EACK6sJ,EAAQ,GACLvoJ,EAAC,EAAMA,EAAEw6D,EAAAz7D,OAAAiB,IAAA,CAChB,IAAAgB,EAAUw5D,EAAMx6D,GACjB0vI,EAAA1vI,EACD,GAAO4nC,MAAM8nG,GACd,OAAA6Y,0FAME5uI,EAAA7K,EAAA85I,IACMx7I,EAAe0B,EAAc45I,IAAA,GAAAnoI,EAAA5lB,EAAAqb,SAAgB2D,GAAhB,CAIpC,IAAC6wI,EAASjC,EAAOn7I,GACfo9I,IACYA,EAAgBjC,EAAAn7I,GAAA,CAAAhJ,EAAAgJ,EAAA2qI,QAAA,KAExByS,EAAGzS,QAASrI,GAAA,CACZrrI,EAAOqrI,EACP/1H,MAAQA,EACRsvI,OAAO,CACPt3G,IAAA,KACG9/B,OAAY69H,GAEhBxnI,OAAA,GAEGgK,OAAY,YAKbkjE,GAAGn1D,EAAQ,CAAKgP,MAAQmmD,WAE1B,IACFzmE,MAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAGI,QAAO,GAAAwR,EAAE,MAASA,EAAAgP,kBG6MXr1B,KAAAoH,YACPrG,EAAAK,IAAApB,KAAAoH,OAAA,eACFpH,KAAA1E,MAAA81J,uFACFH,EAAArhJ,KAAA,IAMD8+I,WH2HaW,EAAMxP,QACd,QAAAA,EAAA,SACApiG,OAES,MAAZt4C,mBAEO,MAAAA,gBACL,KAEGwhB,EAAA5lB,EAAAq6E,OAAAi0E,OACL,IAAKjpJ,EAAG,EAAAA,EAAMipJ,EAAAlqJ,OAAAiB,IAAA,CACd,IAAAorI,EAAawe,GAAAX,EAAAjpJ,GAAAipJ,EAAAjpJ,EAAA,GAAAy5I,GACdxxB,EAAAmjB,EAAAnjB,EAAAmjB,EAAAnjB,EAIJ,OAAAA,EG3IiBqrC,CADhB/yI,EAAA5lB,EAAAK,IAAAulB,EAAA5lB,EAAAmE,KAAA+zJ,GAAA,SAAA3yJ,GAAA,OAAAqY,OAAArY,MAKA,IAAAxE,EAAAssJ,GAAA6K,EAAiBj5J,KAAjB1E,MAAkBg+J,iBAAatM,EAAAlrJ,EAAAkrJ,MAAAC,EAAAnrJ,EAAAmrJ,UAC7BjtJ,KAAKwI,KAAM,CACP21I,QAAS8a,EACdvK,cAEDD,YAPC,EAQOwC,UAAMA,EACNjE,MAAMA,EACNC,UAAMA,MAIPxsJ,UAAA84J,uBAAA,kBACHv5J,KAAA2kB,YAAM3kB,KAAA2kB,WAAAvnB,MAAA4C,KAAA2kB,WAAAvnB,KAAAP,GACNmD,KAAA2kB,WAAAvnB,KAAAP,GAIU,aAKL4D,UAAAk4J,eAAA,SAAAzhE,QACL2sD,qBAAQ3lJ,OAAA+wG,GAAA,EAAA/wG,CAAAg5F,OAGRz2F,UAAAojJ,qBAAA,SAAAr7I,GACH,IAAA6d,EAAAvkB,EAEDhC,EAAAE,KE/W2C,GFgXzCA,KAAAoH,OAAUpH,KAAO4jJ,UAAWtB,cAAQ,CAAAprD,SAAA1uF,EAAA2W,MAAAnf,KAAAmf,QAAA/d,IAAA,SAAAslC,GAExC,OADGA,EAAAx7B,MAAA,KAnQMw7B,EAAAizH,UAAWjzH,EAAGjoB,aAAa3e,EAACxE,MAAAyiB,eAoQrC2oB,IArQwB1mC,KAAAo9I,YAAA,KE7GqB,uEADrB,GAGYp9I,KAAAo9I,YAAA,2EDDW,IACyB,QAAAvoI,EAAA4R,EAAA,EAAAzmB,KAAAoH,QAAA2N,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CAM3D,GAF8CD,EAAAxT,MAE9CmhJ,eAAwB,CACtB1iJ,KAAAo9I,YAAqB,CACtBxhJ,MAAA,iCACAyzE,IAAA,sEAED,QAKP,MAAKmM,GAAWn1D,EAAI,CAAAgP,MAAOmmD,WAEzB,IACDzmE,MAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAEJ,WAAAwR,EAAA,MAAAA,EAAAgP,OAIDr1B,KAAA6B,YAESpB,UAAGu2F,YAAA,WACXh3F,KAAAoH,OAAA,GACDpH,KAAS6B,YAGPpB,UAAgBm4J,kBAAA,SAAAjX,GAChB3hJ,KAAM1E,MAAM4P,MAAW0hJ,UAAAjL,EAEvB3hJ,KAAK6B,YAEHpB,UAAc24J,YAAa,SAAOhyJ,OAElCuB,EAAKge,EAAe5lB,EAAA4H,IAAOge,EAAW5lB,EAAMK,IAAGgG,EAAI,SAAA3B,GAAA,OAAAA,EAAAsX,MAAApU,SAC3Cge,EAAY5lB,EAAA4H,IAAUge,EAAI5lB,EAAAK,IAAAgG,EAAA,SAAA3B,GAAA,OAAAA,EAAAsX,MAAA8B,qBAChC8H,EAAmB5lB,EAAEkH,IAAC0e,EAAW5lB,EAAAK,IAAAgG,EAAA,SAAA3B,GAAA,OAAAA,EAAAsX,MAAA9U,oBAKhCwsJ,gBAEAmF,qBAAA,SAAAxyJ,SACFuf,EAAA5lB,EAAAK,IAAAgG,EAAA,SAAA3B,GAAA,OAAAkZ,OAAAlZ,EAAA8Q,SACF5N,EAAAge,EAAA5lB,EAAA4H,IAAA0mJ,GAEDoF,EAAe9tI,EAAY5lB,EAAA4H,IAAA0mJ,SAEzB,CAEApnJ,IAHM0e,EAAe5lB,EAAIkH,IAAEonJ,OAIzB1mJ,SACA8rJ,MAIHh0J,UAAAgyD,KAAA,SAAA/4C,EAAAswD,EAAAC,EAAAuG,aFmEI92D,EAASswD,EAASC,EAAAuG,OACrBqpF,GAAyBngJ,EAAWswD,EAAKC,EAAOuG,GEnEnDspF,CAAApgJ,EAAAswD,EAAAC,EAAAuG,IAGHioF,EAAavvI,YAAA,cACXuvI,EDgImC,GC/HvB,qBAeF,MACP,gCAEQ,iCACD,+BAGH,SAAAjwJ,EAAAlN,EAAAe,KAEHqP,QAAO,EAAA7P,KAAa,OAAAkY,KAAa,SAAAlY,KAAA,WAAAA,KAAA,cACjC,IAAMuK,EAAK,EAAGA,EAACoC,EAAOrD,OAAOiB,QAE7B,IAAAgB,EAAaoB,EAAGpC,GACTqE,EAAC,EAAKA,EAAArD,EAAY0N,WAAO3P,OAAWsF,IAAM,CAChD,IAAAizB,EAAAt2B,EAAA0N,WAAArK,GAEDpO,EAAUsP,KAAKiE,KAAC,CAAK8tB,EAAE,GAAAt2B,EAAAoN,OAAAkpB,EAAA,WAMD,uBAC1Bxa,YAAY,oCACH,WACR,oBAEO,SAAQ1a,EAAOlN,EAAMe,GAC3BA,EAAMqP,QAAQkE,KAAK,CAAE/T,KAAM,OAAOkY,KAAI,SAItC,IAFA,IAAAuE,EAAa,GAEJlS,EAAI,EAACA,EAAKoC,EAAArD,OAAWiB,IAAQ,CACpC,IAAAgB,EAAOoB,EAAApC,GACR/J,EAAAqP,QAAAkE,KAAA,CAAA/T,KAAAuL,EAAAoN,SAED,IAAS,IAAI/J,EAAI,EAAGA,EAAIrD,EAAC0N,WAAY3P,OAAasF,IAAA,CAC1C,IAAGizB,EAAGt2B,EAAK0N,WAAerK,GAC1BsvJ,EAAWr8H,EAAI,GAAA73B,WACtByS,EAAAyhJ,GAMSzhJ,EAAAyhJ,GAAI3zJ,GAAAs3B,EAAA,IALfplB,EAAAyhJ,GAAA,CAAAvmJ,KAAAkqB,EAAA,IACDplB,EAAAyhJ,GAAA3zJ,GAAAs3B,EAAA,KASE,QAAAlqB,KAAA8E,EAAA,CACI,IAAIpD,EAAOoD,EAAQ9E,GACrBlF,EAAO,CAAA4G,EAAA1B,MACR,IAAApN,EAAA,EAAAA,EAAAoC,EAAArD,OAAAiB,IAAA,CAED,IAAA7E,EAAA2T,EAAA9O,GACMkI,EAAWsB,KAAUrO,GAGrBlF,EAAAsP,KAAUiE,KAAKtB,SAIE,wBAAG,oEAGrB,CACH,CAAAzS,KAAO,MAAI0F,MAAA,OACV,CAAG1F,KAAC,MAAA0F,MAAA,OAEP,CAAA1F,KAAO,MAAQ0F,MAAA,OAChB,CAAA1F,KAAA,QAAA0F,MAAA,SACD,CAAS1F,KAAE,UAAc0F,MAAO,WAC1B,CAAC1F,KAAI,QAAS0F,MAAM,qBAGlB,SAAYiH,EAAGlN,EAAAe,GACrB,IAAI+J,EAAAqE,QACFiB,QAAMkE,KAAA,CAAA/T,KAAA,aACJ,EAAAuK,EAAO9K,EAAEoQ,QAAAvG,OAAAiB,MAGTsF,QAAAkE,KAAA,CAAA/T,KAAAP,EAAAoQ,QAAAtF,GAAAvK,OAGJ,IAAAuK,EAAA,EAAAA,EAAAoC,EAAArD,OAAAiB,IAAA,CACD,IAAAgB,EAAA,IAAAu8F,EAAA,GACD7uF,WAAAtM,EAAApC,GAAA0O,WAEWyB,MAAU/N,EAAApC,GAAAoO,SAErBpN,EAAYqX,aAAI,aACV,IAACu7I,EAAQ,CAAI5yJ,EAAOmP,OACtB,IAAA9L,EAAS,EAACA,EAAAnP,EAAAoQ,QAAAvG,OAAAsF,IACXuvJ,EAAApqJ,KAAAxI,EAAA2V,MAAAzhB,EAAAoQ,QAAAjB,GAAAlJ,QAGDlF,EAAUsP,KAAIiE,KAAMoqJ,SAIjB,yBAED,yBACM,iBACN,uBAEQxxJ,EAASlN,EAAGe,gBACbuT,KAAM,CAAA/T,KAAQ,OAAIkY,KAAW,mBAChCnE,KAAM,CAAA/T,KAAS,oBAChB+T,KAAA,CAAA/T,KAAA,WACF6P,QAAAkE,KAAA,CAAA/T,KAAA,SACF2M,KAAAugH,aAAA,IAAAvgH,EAAAugH,YAAA5jH,OAID,IAAG,IAAAiB,EAAA,EAAAA,EAAAoC,EAAAugH,YAAA5jH,OAAAiB,IAAA,CACJ,IAAA2T,EAAAvR,EAAAugH,YAAA3iH,GACD/J,EAAWsP,KAAAiE,KAAC,CAAImK,EAAEvG,KAAOuG,EAAKne,MAAAme,EAAAle,KAAAke,EAAA3E,aAGP,mBAAhB,mBACH,SAAM5M,UAEN,IAAAA,EAAArD,aACA,MAIM,MAANA,cACDshB,EAAA,EAAAje,EAAA,GAAAkD,gDAOC,kEALQuuJ,EAAcp+J,GAAQk1C,EAAA5rC,OACxB4rC,EAAAnhC,KAAQ5C,MAIR+jC,2BAMAvoC,EAAAlN,EAAEe,SACc,IAAlBmM,EAAMrD,cAGLwhB,EAAA5lB,EAAAnE,UAAA4L,EAAA,SAAArO,GAAA,kBAAAA,GAAA,SAAAA,SACF,gBACC,oBAA2BqM,OAAK0zJ,aAAA,GAAAC,GAAA,2DAInC,EAAA3wI,WAAA,EAAA/C,EAAA,GAAApqB,GAAAmM,UAGL,MAEF0a,YAAS,YACPk3I,WAAc,SAAI5xJ,GAEd,IAAKA,GAAuB,IAAfA,EAACrD,OAChB,MAAO,GAIL,IADE,IAAA6vG,EAAW,GACZ5uG,EAAW,EAAEA,EAAAoC,EAAArD,OAAAiB,IAAA,CAChB,IAAQgB,EAASoB,EAAApC,GAClB,YAAAgB,EAAA2M,SAM2C,IAAAsmJ,EAAAn7J,KAAAyJ,IAAAvB,EAAA0N,WAAA3P,OAAA,wCEpQvBm1J,EAAAp8J,OAAAknE,EAAA,QAAAlnE,CAAAq8J,EAAA,IACuB,QAAAz8E,KAAAw8E,EAI9CtlD,EAAAl3B,IAAA,GAW0D,OAAAn3D,EAAA5lB,EAAAK,IAAA4zG,EAAiB,SAAAzzG,EAAA+E,GACvE,MAAO,CAAMzK,KAAGyK,EAAK/E,MAAA+E,gBAGhB,SAAYkC,EAAGlN,EAAAe,GACpB,IAAIgqB,EAACvkB,EACDsE,EAACqE,EAAA+vJ,EACL,IACD,QAAA3lJ,EAAA4R,EAAA,EAAAnrB,EAAAoQ,SAAAqJ,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CAED,IACOylJ,EAAgB,CAAA5+J,KADvBkZ,EAAAxT,MAC6B1F,MAGf2M,EAACrD,OAAM,GAAWqD,EAAA,GAAAmM,aACvB8lJ,EAAA9lJ,YAAyB,GAE5BtY,EAAMqP,QAAAkE,KAAA6qJ,aAGDp0I,EAAA,CAAAgP,MAAgBmmD,eAGlBzmE,IAASA,EAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,WAEb,GAAAwR,EAAA,MAAAA,EAAAgP,OAKH,IAHD,IAAAh5B,EAAAqP,QAAAvG,QAED9I,EAAAqP,QAAAkE,KAAA,CAAA/T,KAAA,SACOuK,EAAI,EAACA,EAAAoC,EAAUrD,OAASiB,IAAA,CAC3B,IAAAgB,EAAYoB,EAAGpC,GAChB,IAAAqE,EAAA,EAAAA,EAAArD,EAAA0N,WAAA3P,OAAAsF,IAAA,CACK,IAAOizB,EAAGt2B,EAAK0N,WAAarK,GACpB6D,EAAG,GACV,GAAKqY,EAAQ5lB,EAASi9E,SAACtgD,IAAApiC,EAAAoQ,QAAAvG,OAAA,GAC/B,IAAAm1J,EAAAp8J,OAAAknE,EAAA,QAAAlnE,CAAAw/B,GAED,IAAA88H,EAAA,EAAAA,EAAAl/J,EAAAoQ,QAAAvG,OAAAq1J,IACkBlsJ,EAAAsB,KAAa0qJ,EAAWh/J,EAAAoQ,QAAW8uJ,GAAAj5J,aAK5C+M,EAASsB,KAAA1T,KAAAC,UAAAuhC,IAGVrhC,EAAUsP,KAAGiE,KAAKtB,OAyB5B,IAAAosJ,GAAgB,WAGd,SAAOC,EAAAz1I,EAAA4oD,EAAAD,GACL7tE,KAAA8tE,GAAUA,EACV9tE,KAAK6tE,aAAMA,EACX3oD,EAAA3hB,OAAavD,KACbA,KAAA4rI,UAAY1mH,EAAAsrD,KACZxwE,KAAA1E,MAAA0E,KAAA4rI,UAAAtwI,MACH0E,KAAA46J,2JCjGsB56J,KAAA66J,8BD0FrBF,EAAav0I,QAAA,+BCvFfu0I,EAAAl6J,UAAAo6J,qBAAA,WAeE,OADA76J,KAAA86J,eAAgB,EAChB96J,KAAA+6J,mBAAY,GAAZ/6J,KAAA1E,MAuCCijB,WAtCC,IAAO,0BAKH,IAAC,OACAve,KAAA86J,eAAa,EACd,MAEF,IAAE,QACA96J,KAAM+6J,mBAAqB,+DAIrBt6J,UAAeu6J,iBAAY,eACnCl7J,EAAQE,SACRA,KAAM4rI,UAAUqvB,QAChB,OAAAj7J,KAAA8tE,GAAAG,KAAA,IAEF,IAAIviE,EAAC1L,KAAc46J,aAAA56J,KAAA1E,MAAAijB,WAAA67I,WAAAp6J,KAAA4rI,UAAAqvB,SACjBrtE,EAAQjnE,EAAA5lB,EAAAK,IAAuBsK,EAAO,SAAA3I,GAAA,OAAuBjD,EAAA+tE,aAAAG,WAAA,CAAAzsE,MAAAwB,EAAAlH,gBAC3DmE,KAAM8tE,GAAAG,KAAA2f,MAEAntF,UAAAy6J,UAA0B,eAClCxvJ,EAAQkvJ,GAAc56J,KAAK1E,MAAEijB,WAAc67I,WAAAp6J,KAAA4rI,UAAAqvB,SAC3CzkJ,EAAAmQ,EAAA5lB,EAAA6J,KAAAc,EAAA,CAAA7P,KAAAmE,KAAAm7J,iBAAA55J,QACEiV,IAEAxW,KAAC1E,MAAAoQ,QAAiBkE,KAAA4G,GACpBxW,KAAK6B,gBAEJ7B,KAAA6tE,aAAAggB,qBACDstE,iBAAOl7G,KAAEm7G,EAASn7G,2BACL1+C,MAAK65J,EAAA75J,SAElBd,UAAA46J,iBAAA,WAEFr7J,KAAK1E,MAAAoQ,QAAgB,GACtB,4BAAA1L,KAAA1E,MAAAijB,WAEDve,KAAA1E,MAAAoQ,QAAAkE,KAAA,CAAM/T,KAAN,MAAA0F,MAAA,QAECvB,KAAA66J,uBAED76J,KAAA6B,YAEiBpB,UAASoB,OAAA,WACzB7B,KAAA4rI,UAAA/pI,YAGmBpB,UAAW66J,aAAA,SAAA9kJ,QAC3Blb,MAAMoQ,QAAOib,EAAA5lB,EAAAogF,QAAAnhF,KAAA1E,MAAAoQ,QAAA8K,QACbo1H,UAAM/pI,YDiBI,eCXEisE,EAAAD,mBAGZ,IAEFn0D,OAAM,EACNwP,YAAM,6CACNC,WAAIuxI,WAQH,WAIH,SAACa,EAAAr2I,GAED,IAAAplB,EAAAE,KACEklB,EAAK3hB,OAAMvD,KACZA,KAAAw7J,iBAAA,EAEDx7J,KAAA4rI,UAAA1mH,EAAAsrD,KACExwE,KAAM1E,MAAM0E,KAAK4rI,UAAatwI,MAC9B0E,KAAMkjJ,YAAchlJ,OAAAX,EAAA,gBAAAW,GACpB8B,KAAKm0I,WAAW,CACZ,CAAEt4I,KAAG,WAAK0F,MAAA,MACV,CAAC1F,KAAA,OAAU0F,MAAS,QACzB,CAAA1F,KAAA,QAAA0F,MAAA,SAED,CAAA1F,KAAA,MAAA0F,MAAA,QACEvB,KAAAy7J,YAAQ,CACN,CAAA5/J,KAAM,SAAO0F,MAAW,UACxB,CAAA1F,KAAK,SAAS0F,MAAA,UACd,CAAA1F,KAAA,OAAA0F,MAAA,QACH,CAAA1F,KAAA,SAAA0F,MAAA,WAGCvB,KAAK07J,UAAM,OAAW,kFACpBC,YAAe,CAChB,CAAA9/J,KAAA,sBAAA0F,MAAA,uBACD,CAAM1F,KAAA,0BAAgC0F,MAAQ,2BAC1C,CAAC1F,KAAA,qBAAmB0F,MAAA,sBACzB,CAAA1F,KAAA,kBAAA0F,MAAA,mBAED,CAAA1F,KAAA,aAAA0F,MAAA,eAEEvB,KAAK47J,aAAU,CAAM,CAAE//J,KAAC,gBAAA0F,MAAA,IAAA1F,KAAA,gBAAA0F,MAAA,IACzBvB,KAAA67J,eAAA,WAED,OAAA/7J,EAAA8rI,UAAAj2H,MAGGgR,EAAA5lB,EAAAK,IAAAtB,EAAA8rI,UAAAj2H,MAAAjK,QAAA,SAAAsB,GACK,OAASA,EAACnR,OAHL,IAObmE,KAAAm5E,cAAAn5E,KAAAm5E,cAAc/4E,KAAdJ,eA3COomB,QAAmB,aA6CV3lB,UAAUoB,OAAA,WACzB7B,KAAA4rI,UAAA/pI,UACF05J,EAAA96J,UAAAijJ,cAAA,SAAAltI,EAAA+zD,kBAEDvqE,KAAA4rI,UAAgB/pI,UAEd05J,EAAa96J,UAAAq7J,eAAA,WACb,IC/IuC3gJ,EAAAnb,KAAA1E,MAAA6f,OAIzC4gJ,EAAA5gJ,EAAAhW,OAIE62J,EACUD,EACAA,EAAK,IAEoB,SADzB5gJ,EAAc4gJ,EAAA,GACN/tI,UACRguI,EAAAD,EAAwB,IAIjC5gJ,EAAApe,OAAAi/J,EAAA,ED8HM,CACLtnJ,KAAU,QACVX,KAAO,SACPwC,MAAW,GACX8F,SAAY,EACZ28B,OAAA,gFACH05F,UAAA,iDCzJsBM,WAAA,GACkEipB,YAAA,IAsBvFj8J,KAAAw7J,iBAAAQ,KAGOv7J,UAAcy7J,kBAAA,SAAAp/H,GACpB98B,KAAA1E,MAAA6f,OAAAwL,EAAA5lB,EAAAogF,QAAAnhF,KAAA1E,MAAA6f,OAAA2hB,MAGMr8B,UAAgB07J,iBAAA,SAAAz/J,GACrB,IAAIytB,EAACnqB,KAAU1E,MAAM6f,OAAAze,GAAAs8C,OAErB/hC,EAASkT,EAAA,KACP,GAAMA,EAAA,KACN,GAAAlT,OAEA20H,UAAU/pI,YAGFpB,UAAQ04E,cAAA,SAAAr8C,EAAA2lH,SACVziJ,qBACF2hJ,YAEIc,GAAad,iBAKlBlhJ,UAAA27J,YAAA,SAAAt/H,GACFA,EAAAu/H,YAEDv/H,EAAKu/H,UAAW,IAEnBv/H,EAAAu/H,UAAAzsJ,KAAA,CAAArO,MAAA,GAAA1F,KAAA,KAEDmE,KAAA4rI,UAAA/pI,YAEWpB,UAAK67J,eAAA,SAAAx/H,EAAApgC,KACb2/J,UAAAt/J,OAAAL,EAAA,GACDsD,KAAK4rI,UAAQ/pI,YAETpB,UAAO87J,YAAA,SAAAz/H,GACRA,EAAA0/H,YACF1/H,EAAA0/H,UAAA,IAEF1/H,EAAA0/H,UAAA5sJ,KAAA,CAAAxR,KAAA,GAAAI,GAAA,GAAA3C,KAAA,KAEDmE,KAAA4rI,UAAA/pI,YAEcpB,UAAAg8J,eAAA,SAAA3/H,EAAApgC,KACX8/J,UAAAz/J,OAAAL,EAAA,GAEDsD,KAAI4rI,UAAA/pI,UAEH05J,EDiBA,eCbMztF,EAAAD,SAEN,CACF5kD,SAAA,IAEDvP,OAAA,EAAAwP,YAAA,qDACEC,WAAYuzI,WAWK,sBACZphK,EAAAqa,EAAAkuH,EAAA/sE,EAAAkP,EAAAxmE,cAEGlE,aACDqa,aACFkuH,gBAED/sE,mBACIkP,aACDxmE,8BAKHiB,UAASk8J,SAAO,SAAAhnJ,cACdA,wBAIFlV,UAAAm8J,YAAA,gBACHC,WAAA,GAED78J,KAAI88J,WAAa,OACf,IAAA1gD,EAAO,EAAOA,EAAAp8G,KAAA2V,MAAAjK,QAAAvG,OAAAi3G,IAAA,KACZ5lG,EAAIxW,KAAA2V,MAACjK,QAAQ0wG,WACL5lG,EAAK3a,SACZ,IAAAuK,EAAA,EAAAA,EAAApG,KAAA1E,MAAA6f,OAAAhW,OAAAiB,IAAA,CAED,IAAM02B,EAAA98B,KAAW1E,MAAG6f,OAAY/U,GAE5ByV,EAAA3d,OAAWktH,EAAkC,gBAA7CltH,CAA6C4+B,EAAA9O,YAC/CxX,EAAK3a,KAAKkgB,MAAOF,GAAS,GACxBihB,MAAYA,EAEZA,EAAKvmB,UACH3a,MAAQ4a,EAAU3a,KAAAgC,QAAQge,EAAAihB,EAAAvmB,+BAM5B6lG,GAAAp8G,KAAA+8J,sBAAAvmJ,iBAGEwmJ,iBAAY,SAAAz7J,EAAqBu7B,sBAClCA,EAAAkc,2BAIL5yC,EAAI02B,EAAAk2G,WAAiB7tI,OAAIiB,EAAO,EAAKA,UAC9B02B,EAAKk2G,WAAU5sI,EAAM,iBAClB7I,EAAgC,0BAAAu/B,EAAAkc,OAAA5yC,GAAApG,KAAAR,uBAIlB,0BAAAmnB,EAAA5lB,EAAAie,MAAA8d,EAAAkc,QAAAh5C,KAAAR,oBAElBy9J,qBAAS,SAAAj3J,EAAA82B,wBACV72B,IAAAD,UAICL,QAAOK,wBAGZ82B,EAAAg6B,SAED92D,KAAK82D,SAAS9wD,GAId2gB,EAAK5lB,EAAcoc,OAAGnX,OAGzBvF,UAAAs8J,sBAAA,SAAAvmJ,GAED,IAAI1W,EAAOE,SACTwW,EAAMsmB,MAEN,OAAO98B,KAAAi9J,wBAEQ,mBAAXlpJ,YACD,SAAA/N,QAGa,iBAAZ+N,YACD,SAAA/N,GAED,GAAAA,QACA,MAAO,IAEV2gB,EAAA5lB,EAAA4E,QAAAK,KAEMA,IAAC,IAGT2gB,EAAA5lB,EAAAipC,SAAAhkC,KAAAgoC,MAAAhoC,MAAAb,OAAA,KAEDa,EAAAqF,SAAArF,EAAA,KAEI,IAAOiuB,EAAA/1B,OAAAktH,EAAA,SAAAltH,CAAA8H,GAKR,OAJAlG,EAAA+jI,QAEQ5vG,EAASA,EAAIwD,OAErBxD,EAAAlb,OAAAvC,EAAAsmB,MAAAogI,gBAIQ,WAAP1mJ,EAAOsmB,MAAA/oB,KACR,gBAAA/N,GAEI2gB,EAAiB5lB,EAAA4E,QAAaK,KACpCA,IAAAS,KAAA,OAGO,IAAAw1J,EAA4BzlJ,EAAAsmB,MAAAm/H,aAAA,EAC9B,GAAa,IAAbA,GAAazlJ,EAAAsmB,MAAAu/H,UACL,IAAK,IAAMj2J,EAAI,EAACA,EAAAoQ,EAAUsmB,MAAAu/H,UAAAl3J,OAAAiB,IAAA,CACtB,IAAIhF,EAAIoV,EAASsmB,MAAIu/H,UAAAj2J,GACvB,GAAG,OAAAJ,GAQlB,IAAA2gB,EAAA5lB,EAAAipC,SAAAhkC,IAAA2Y,OAAAvd,EAAAG,SAAAod,OAAA3Y,IAAA5E,EAAAG,QAAAyE,EAE6D,OAA9DlG,EAAAq9J,cAAAn3J,EAAWwQ,EAAAsmB,OAAmDh9B,EAAAm9J,qBAAoB77J,EAAAvF,KAAA2a,EAAAsmB,YATnE,GAAuB,SAAvB17B,EAAaG,MACzB,OAAAH,EAAAvF,KAaG,GAAe,IAAfogK,GAAezlJ,EAAAsmB,MAAA0/H,UACb,IAAiBp2J,EAAA,EAAAA,EAAAoQ,EAAAsmB,MAAA0/H,UAAAr3J,OAAAiB,IAAA,CACJhF,EAAAoV,EAAAsmB,MAAA0/H,UAAAp2J,GAEV,GAAiB,OAANJ,GAKN,GAAA2Y,OAAAvd,EAAAhD,OAAwBugB,OAAA3Y,IAAW2Y,OAAQvd,EAAI5C,KAAAmgB,OAAA3Y,GAE5D,OADiBlG,EAAKq9J,cAAQn3J,EAAAwQ,EAAAsmB,OAC9Bh9B,EAAAm9J,qBAAA77J,EAAAvF,KAAA2a,EAAAsmB,YANa,YAAA17B,EAAAhD,MAAmC,SAALgD,EAAK5C,GAC9B,OAAA4C,EAAAvF,KASf,OAAAmK,QACc,KAEjBlG,EAAAq9J,cAAAn3J,EAAAwQ,EAAAsmB,OAEah9B,EAAAm9J,qBAAWj3J,EAAAwQ,EAAAsmB,YAGxB,WAAAtmB,EAAAsmB,MAAA/oB,KAAA,KAAMqpJ,EAAAl/J,OAAAX,EAAA,eAAAW,CAAAsY,EAAA9B,MAAA8B,EAAAsmB,MAAApoB,MACL,OAAO,SAAS1O,GACjB,OAAAA,QAEgB,IAEhBgoC,MAAAhoC,IAAA2gB,EAAA5lB,EAAA4E,QAAAK,GAEelG,EAAIm9J,qBAAaj3J,EAAgBwQ,EAAAsmB,QAEhDh9B,EAAAq9J,cAAAn3J,EAAAwQ,EAAAsmB,OAEUsgI,EAAqBp3J,EAACwQ,EAAMsmB,MAAAzgB,SAAA,eAGrC,SAAW9a,GAEX,OAAMzB,EAAQm9J,qBAAoB17J,EAAQiV,EAAOsmB,WAIjDr8B,UAAgB08J,cAAC,SAAyB57J,EAAAu7B,MAE1CA,EAAA41G,WAMAnxI,UAAoBolB,EAAA5lB,EAAA4E,QAAApE,QAIpB87J,EAAY1+I,OAAKpd,GACjBysC,MAAAqvH,UAYAP,WAAYhgI,EAAA41G,WAAa1yI,KAAWg9J,iBAAiBK,EAAAvgI,QAG7Cr8B,UAAQ68J,mBAAe,SAAYjhD,GAK7C,IAJA,IAAAv+G,EAAiB,GAGnBoP,EAAAlN,KAAA2V,MAAAhK,KAAM0wG,GACEj2G,EAAQ,EAAGA,EAAK8G,EAAA/H,OAAMiB,IAEtBtI,EADe,UAAYsI,GACD,CAAG7E,MAAA2L,EAAU9G,GAAKvK,KAAMqR,EAAI9G,GAAC8G,EAAQ9G,GAAAP,WAAA,IAGrE,OAAK/H,KAEC2C,UAAW88J,kBAAG,SAAAnhD,EAAA76G,UAClBvB,KAAI68J,WAAczgD,GAAAp8G,KAAA68J,WAAAzgD,GAAA76G,QAEdd,UAAW+8J,WAAG,SAAAC,EAAAphD,EAAA96G,EAAAm8J,QACD,IAAjBA,IAAyBA,GAAc,KACrC19J,KAAAu9J,kBAAiBE,EAAiBl8J,SACnCvB,KAAA2V,MAAAjK,QAAA+xJ,GAEDE,EAAS,KACC,KACE,KACL,QACNb,WAAA9wJ,MAED2xJ,EAAI,4BAAmB39J,KAAA88J,WAAA9wJ,KAAA,MACb4D,KAAG,+BACZktJ,WAAA9wJ,KAAA,MAGFhM,KAAA88J,WAAAv7J,QAEDooD,EAAY,iBAAA3pD,KAAA88J,WAAAv7J,MAAA,IACbvB,KAAA88J,WAAAv7J,MAAA,UAOGq8J,EAAe,GAWrB,GAVMF,MACS,uCAAwC19J,KAAA2V,MAAAjK,QAAA+xJ,GAAA7hK,MAAA,eAEvCqK,IAAV1E,GACDo8J,EAAA,yBACDnnJ,EAAO06H,QAAA,GAGL16H,EAAA06H,QAAA,GAEL,IAAD16H,EAAA06H,OAAC,SCnWsB,mEAAA16H,EAAAsmB,OAAAtmB,EAAAsmB,MAAA21B,KAAA,CAE4B,IAAA30D,EAAAkC,KAAAs9J,mBAAAjhD,GACdv+G,EAAA,QAAAyD,QAAA1F,KAAA0F,IAAAsE,WAAA,IACiB,IAAAg4J,EAAA79J,KAAAgmE,YAAAnoE,QAAA2Y,EAAAsmB,MAAAghI,QAAAhgK,EAAA0H,oBACVu4J,EAAA/9J,KAAAgmE,YAAAnoE,QAAA2Y,EAAAsmB,MAAAkhI,YAAAlgK,GACQmgK,EAAAznJ,EAAAsmB,MAAAohI,gBAAA,YACTC,EAAAvuJ,KAAA,yBACCguJ,GAAA,sBAAAC,EAAA,aAAAI,EAAA,4CAAAF,EAAA,2BAAAp0G,EAAA,gBAAApoD,EAAA,8BAwC1Cq8J,GAAgBr8J,SAChBiV,EAAA7B,aAIUwpJ,EAAAvuJ,KAAc,+BACdguJ,GAAA,uJAAcvhD,EAAA,kBAAAohD,EAAA,wOAAAphD,EAAA,kBAAAohD,EAAA,mFAnCxBU,EAAAh5J,SACEi5J,EAAY,WAACD,EAAA13J,KAAA,YAEL,MAAM23J,EAAAT,EAAAh0G,EAAA,IAAAi0G,EAAA,WAGZn9J,UAAAoB,OAAA,SAAAuqF,aACEpsF,KAAM1E,MAAM+iK,UAAA,MACZjyE,EAASiyE,IACTn/J,KAAKyJ,IAAE21J,EAAMD,EAAAr+J,KAAA2V,MAAAhK,KAAAxG,aAEdsF,EAAA6zJ,EAAA7zJ,EAAA8zJ,EAAA9zJ,IAAA,SACDyC,EAAAlN,KAAA2V,MAAAhK,KAAAlB,KACQ,KACA,KACG,KACT,GACArE,EAAA,EAAQA,EAACpG,KAAA2V,MAAAjK,QAAAvG,OAA0BiB,OACnCpG,KAAWw9J,WAAIp3J,EAAAqE,EAAAyC,EAAA9G,GAAAqE,IAAA6zJ,QAEfxB,WAAY5vJ,QACb,4BAAAlN,KAAA88J,WAAA5vJ,IAAA,IACF82G,EAAAp0G,KAAA,yBACD5P,KAAS88J,WAAE5vJ,IAAA,MAGP82G,EAAU7+G,SACdq5J,EAAA,WAAAx6C,EAAAv9G,KAAA,UAeIw5C,GAAK,OAAMu+G,EAAgBC,EAAG,IAAAC,EAAA,eAEhCz+G,KAEAx/C,UAAYk+J,cAAa,WAG3B,QAFChzJ,EAAA,GAEDlB,EAAA,EAACA,EAACzK,KAAQ2V,MAAKhK,KAACxG,OAAWsF,IAAC,CAI5B,IAFA,IAAKyC,EAAOlN,KAAG2V,MAAAhK,KAAAlB,GACVm0J,EAAU,GACHx4J,EAAG,EAAAA,EAAApG,KAAA2V,MAAAjK,QAA0BvG,OAACiB,IACrCw4J,EAAShvJ,KAAC5P,KAAAu9J,kBAAuBn3J,EAAA8G,EAAA9G,eAIxC,OACMsF,QAAC1L,KAAa2V,MAAAjK,QACdC,KAACA,IAILkzJ,EDaiB,MCGQ,SAAAj/J,YAIxBk/J,EAAA55I,EAAAmqC,EAAA2W,EAAAq+E,EAAA0a,EAAAj2C,GAED,IAAAhpH,EAAOF,EAAAG,KAAMC,KAAAklB,EAAYmqC,IAACrvD,YAC3BF,EAAAukJ,iBAEDvkJ,EAAAi/J,YACEj/J,EAAKgpH,YAAaA,EAClBhpH,EAAKooI,cAAS,CACfhkH,QAAA,KAED3F,UAAA,wBACM8/I,SAAQ,KACRW,YAAU,EAEd7jJ,OAAA,CACQ,CACFpH,KAAA,OACEia,QAAO,OACZzX,MAAA,OAAM2mJ,WAAA,wBAGJxoJ,KAAA,aAAM,SACL6B,MAAI,YACG,SACN,gFACFm8H,UAAA,KACF1kH,QAAA,OACFglH,WAAA,KAKHtnI,QAAA,GACMk6C,SAAS,OACT31C,KAAM,CAACjD,IAAK,EAAIiyJ,MAAM,IAW1Bn/J,EAAAo/J,UAAO,OACR,IAAAp/J,EAAAxE,MAAA6f,SAEDrb,EAAAxE,MAAA6f,OAAArb,EAAAxE,MAAgBoQ,QACd5L,EAAAxE,MAAAoQ,QAAA5L,EAAAxE,MAAAwY,cACShU,EAAMxE,MAAQoQ,eAChB5L,EAAMxE,MAAQwY,QAGrB6S,EAAe5lB,EAAA0O,SAAQ3P,EAAKxE,MAAUwE,EAAAooI,iBACpClrI,OAASwc,GAAA,gBAAiB1Z,EAAAm3F,eAAA72F,KAAAN,aACnB0Z,GAAA,aAAe1Z,EAAQk3F,YAAC52F,KAAAN,MAC9B9C,OAAAwc,GAAA,qBAAA1Z,EAAAm3F,eAAA72F,KAAAN,aAAM0Z,GAAA,iBAAA1Z,EAAAsoI,eAAAhoI,KAAAN,aACA0Z,GAAA,qBAAsB1Z,EAAA6kJ,mBAAAvkJ,KAAAN,IAC5BA,WA9DGsmB,QAAW,CAAE,SAAC,wEACC,EAAA04I,EAAgBl/J,KA8D9Ba,UAAA2nI,eAAA,gBACLt3E,aAAW,UAAWquG,GAAS,QAC/BruG,aAAW,gBAAiBsuG,GAAA,MAEnB3+J,UAAGkkJ,mBAAA,SAAAn2D,GACfA,EAAA5+E,KAAA,CAAA/T,KAAA,aAAAs1D,MAAA,wBAGY1wD,UAAQk6G,aAAkB,SAAAh2F,GACrC,IAAA7kB,EAAME,KAEN,OADAA,KAAKk/J,UAAS,EACO,gBAAjBl/J,KAAC1E,MAAAijB,UACHve,KAAYqkJ,eACPQ,eAAA,CACLxpJ,UAAY2E,KAAA3E,UACXC,MAAA0E,KAAA1E,MACJ6jB,MAAAnf,KAAAmf,QAGeje,KAAA,SAAA0mJ,GAOR,OANA9nJ,EAAQi0F,SAAW,EACrBj0F,EAASm7J,QAAKrT,EAElB9nJ,EAASo/J,UAAc,EACjBp/J,EAAA+B,SAEA,CAAS2G,KAAM1I,EAAAm7J,WAInBr7J,EAAOa,UAAWk6G,aAAa56G,KAAAC,KAAA2kB,MAGxBlkB,UAAAu2F,YAAiC,SAAAI,QACxC6jE,QAAK,QACLp5J,YAEDpB,UAAAw2F,eAAA,SAAAC,GAEDl3F,KAAAi7J,QAAS/jE,OACPgoE,UAAW,EAEXl/J,KAAAi7J,SAAcj7J,KAAAi7J,QAAA91J,SACfjH,OAAAktH,EAAA,YAAAltH,CAAA8B,KAAAi7J,QAAA,IAEDj7J,KAAS1E,MAAAijB,UAAA,QAIyB,SAAhCve,KAAYi7J,QAAS,GAAClnJ,KAClB/T,KAAS1E,MAAMijB,UAAE,OAIW,UAA1Bve,KAAY1E,MAAKijB,WAA2B,SAAAve,KAAA1E,MAAAijB,YACrCve,KAAG1E,MAASijB,UAAW,wCAYpC9d,UAAiBoB,OAAC,kBACpB7B,KAAC2V,eHlKoBnN,EAAGlN,OACxBe,EAAQ,IAACgjK,EAAoB,SACR,IAAd72J,EAAKrD,cACX9I,MAGDm2B,EAAcooI,GAAAt/J,EAAAijB,WAChB,IAACiU,EAED,MAAA2M,QAAA,eAAM7jC,EAANijB,UAAA,cAIA,OAFAiU,EAACjU,UAAA/V,EAAAlN,EAAAe,GAEDA,EGqJGijK,CAAAt/J,KAAAi7J,QAAAj7J,KAAA1E,OAED0E,KAAA2V,MAAS1F,KAAAjQ,KAAW1E,MAAA2U,WAClBumD,SAAM,IAAY+oG,GAAav/J,KAAA1E,MAAkB0E,KAAA2V,MAAA3V,KAAA3E,UAAAmkK,gBAAAx/J,KAAA++J,UAAA/+J,KAAAgmE,YAAAvxD,EAAA,EAAAjV,MAAAuU,MACjDnU,EAAMa,UAAgBoB,OAAK9B,KAAAC,UAAA2V,UAErBlV,UAAag/J,iBAAU,SAAAzyJ,EAAuBovG,GAGpDp8G,KAAA2V,MAAUjK,QAAS1L,KAAA1E,MAAA2U,KAAAjD,OAEnBhN,KAAA2V,MAAAjK,QAAgB1L,KAAA1E,MAAW2U,KAAAjD,KAAAiD,MAAA,GAG3BjQ,KAAA1E,MAAS2U,KAAMjD,MAAAovG,EAChBp8G,KAAA1E,MAAA2U,KAAAgvJ,KAEDj/J,KAAA1E,MAAA2U,KAAwBgvJ,MAAA,EAGrBj/J,KAAA1E,MAAA2U,KAAAjD,IAAA,WAKC1R,MAAA2U,KAAYjD,IAAMovG,OAClB9gH,MAAK2U,KAAKgvJ,MAAQ,oBAKfx+J,UAAY2kJ,UAAA,WACnB,IAAC1rI,EAAA1Z,KAAAklB,OAAAixD,MAAA,GAEDz8D,EAAKgmJ,UAAY1/J,KAAAw2D,SAAAmoG,gBACjBjlJ,EAAKpe,MAAG,QAER0E,KAAMiwD,gBAAgB,aAAU,CAC9BwpC,aAAS,yEACT//E,MAAKA,EACLixE,WAAA,qBAIOlqF,UAAUgyD,KAAI,SAAK/4C,EAAAswD,EAAAC,EAAAuG,OAC1BhoE,IACEgoE,EAAAl1E,QACD,EC1PH,SACE4gJ,IACE,ID0PDyjB,EC1PCC,EAAA51F,EAAA8oE,QAAA,kBACE+sB,EAAA71F,EAAAp/D,KAAA,uBACAk1J,EAAA91F,EAAAp/D,KAAA,SACAm1J,EAAA/1F,EAAAp/D,KAAA,uBAGFo/D,EAAAh/D,IAAA,CAAAw+C,YAAAluD,EAAAsqD,aACE8D,SAAA,oEAnCmCo2G,EAAA7/G,KAAAuwB,EAAAha,SAAA30D,OAAA2uE,EAAA0uF,aAoCnCY,GA7BR,SAAqBC,GACnBA,EAAU75E,QACV,IAAAm4E,EAAA/iK,EAAA+iK,UAAA,IAGA,GAAW,KADb2B,EAAA9gK,KAAAC,KAAmBqJ,EAAGmD,KAAAxG,OAAAk5J,IACpB,KAIA,IAAA4B,EAAW/gK,KAAA+I,IAAAuoE,EAAgB0uF,UAAA,KAC3BgB,EAAAhhK,KAAAyJ,IAAAq3J,EAAAC,EAAA,GAEFE,EAAAr5I,IAAuC,aAAb1gB,EAAA65J,EAAM75J,EAAA85J,EAAA95J,IAAA,CAC9B,IAAKg6J,EAAMh6J,IAAgBoqE,EAAA0uF,UAAA,YAC3BmB,EAAAv5I,IAAA,+CAAAs5I,EAAA,MAAAh6J,EAAA,4BAEF25J,EAAAh1J,OAAAo1J,KAcQJ,GAcPF,EAAA70J,IAAA,CAAAs1J,cDmOIX,EAAAnvF,EAAAllE,OACJ00J,EAAA,IA7QML,GAAW,IADSA,EA+Q5B,uDEhR+B31F,EAAAxwD,GAAA,iCDLkC,SAAAkf,GAGlE,IAAAwrH,EAAAp9H,IAAA4R,EAAAokE,eAAsCtsB,EAAA0uF,UAAA7zJ,SAAA64I,EAAAroJ,OAAA,MAAtCqgJ,MCGElyE,EAAAxwD,GAAA,QAAY,oGAXFlT,IAAAkC,EAAAkD,QAAA60J,EAAA/pJ,QAAA3a,KAC6B0F,MAAAiH,EAAAmD,KAAA40J,EAAArzJ,KAAAqzJ,EAAA/pJ,QAEjCwN,SAAAu8I,EAAAv8I,UAGmDwsD,EAAAs4C,YAAA03C,eAAAt5J,WAMvDwS,EAAME,IAAK,WAAC,WACbowD,EAAAnwD,IAAA,kCAEDmwD,EAAAnwD,IAAA,oCAAA0nI,MAGE/wE,EAAIxzE,OAAKwc,GAAM,SAAU,SAAGsiI,IAC1BtzI,EAAOszI,GAAAtzI,IAIP0zI,IAKN1rE,EAAAzgB,sDFuE6B,CGxFtB0wG,EAAM,qBAQQ,SAAA7gK,YAEf8gK,QACD5gK,EAAA,OAAAF,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KCtBqC,ODuBtCF,EAAA6gK,mBAAA,WACE7gK,EAAMD,MAAAkpI,gBAAOtiH,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAA83J,YAAAl/J,EAAAD,MAAAqH,QAAA83J,iBAEb4B,oBAAS,WACT9gK,EAAAD,MAAWkpI,gBAAAtiH,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAA25J,aAAA/gK,EAAAD,MAAAqH,QAAA25J,kBAEXC,eAAe,WACfhhK,EAAAD,MAAYkpI,gBAAEtiH,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAA65J,QAAAjhK,EAAAD,MAAAqH,QAAA65J,WAEjBjhK,EAAAkhK,qBAAA,SAAAl/J,GACD,IAAA0S,EAAA1S,EAAA0S,gFCjCwC1U,ECGH,SFiBpB,EAAA4gK,EAAA9gK,GCjBuB8gK,EAAAjgK,UAAAoB,OAAA,WACE,IAAAC,EAAA9B,KAAAH,MAAAqH,QAAA83J,EAAAl9J,EAAAk9J,WAAA6B,EAAA/+J,EAAA++J,YAAAE,EAAAj/J,EAAAi/J,OAAAE,EAAAn/J,EAAAm/J,aAE/B,OAAAvwJ,EAAS3P,EAAImB,cAAA,MAAqB,qdCNxBwO,EAAA3P,EAAAmB,cAAA3E,EAAA,QAAAiE,MAAA,SAAA6iF,WAAA,UAAAH,QAAA68E,EAAAz+J,SAAAtC,KAAA8gK,iBACApwJ,EAAA3P,EAAAmB,cAAA3E,EAAA,WAAAiE,MAAA,gBAAAm4C,WAAA,EAAAunH,WAAA,EAAAntJ,KAAA,SAAAyc,KAAA,IAAA7nB,IAAA,IAAAV,IAAA,MAAA3F,SAAAtC,KAAAghK,qBAAAz/J,MAAA0/J,OAEgBP,EFgBlB,CEf2BpqI,EAAA,eAWG6qI,GAAAjnK,EAAA,WAqGkC,SAAA0F,YAnEnFwhK,EAA6BvhK,GAI7B,OAAAD,EAAAG,KAAuBC,KAAGH,IAAAG,cA+DmE,EAASohK,EAAKxhK,KAzDvGa,UAAOoB,OAAa,eACtB/B,EAAOE,KACP8B,EAAE9B,KAAOH,MAAO2I,EAAM1G,EAAA0G,KAAWtB,EAAApF,EAAAoF,eACjCsB,EAAEpB,OAAOjC,OAAW,EACbuL,EAAW3P,EAAImB,cAAW,+BAE/BwO,EAAgB3P,EAAAmB,cAAe3E,EAAA,aAAA8kE,SAAA,cAAA7iE,GAAA,OAAAkR,EAAA3P,EAAAmB,cAAAi/J,GAAA,EAAA16I,EAAA,KAAA3mB,EAAAD,MAAAqH,EAAA,CAAA1H,QAAAgJ,OAAApB,OAAA,WAmDgD,GAhD1E,cAkCM,IAAA7J,EAAmB,YAAA8jK,IAAAp2B,YA7BrB,aACX,eACA,eACA,UACA,SACA,EAEAl3H,KAAM,OACNia,QAAQ,OACRzX,MAAO,OACP2mJ,WAAU,wBAGVxoJ,KAAA,QACAX,KAAA,SACAwC,MAAA,GACA8F,SAAS,EACT28B,OAAA,0BAAqB,sDACrBhrB,QAAA,OACAglH,WAAA,OAUgC9H,UAAAo2B,QAGzBpnK,EAAA,QAsBF,OAC4B,SAAC0F,YAI7B2hK,EAAar8I,EAAOmqC,EAAcmyG,EAAOzC,GAC9C,IAAIj/J,EAACF,EAAaG,KAAAC,KAAWklB,EAAAmqC,IAAArvD,YAC7BF,EAAK0hK,UACL1hK,EAAKi/J,UAAWA,EACjBj/J,EAAA0I,KAAA,GAED1I,EAAA2hK,WAAA,GACE3hK,EAAI4hK,iBAAS,CACX,CAAAngK,MAAK,MAAA1F,KAAA,OACN,CAAA0F,MAAA,MAAA1F,KAAA,QAAM0F,MAAA,MAAA1F,KAAA,WACL,CAAA0F,MAAK,UAAY1F,KAAO,WACxB,CAAA0F,MAAK,QAAS1F,KAAA,SACf,CAAA0F,MAAA,OAAA1F,KAAA,QACF,CAAA0F,MAAA,QAAA1F,KAAA,SAED,CAAA0F,MAAA,QAAA1F,KAAA,SACM,CAAC0F,MAAM,OAAS1F,KAAO,cACvB,CAAC0F,MAAO,QAAG1F,KAAA,SAChB,CAAA0F,MAAA,YAAA1F,KAAA,uBAIAiE,EAAAooI,cAAA,CAEDp2E,MAAA,GACMntC,WAAC,KACN1lB,cAAA,IAED6tD,SAAA,KACU5oC,QAAA,KAEJ8pF,aAAU,KACZj1F,OAAK,cACH,WACA,YACE,eACA,EAAAxX,MAAY,OAAAskF,GAAA,IAAAhqF,KAAA,qBACb,EAAAmJ,KAAA,gBAAAzD,MAAA,IAAAyD,KAAA,gBAAAzD,MAAA,cACD,EAAAnD,KAAA,OAAAI,GAAA,OAAA3C,KAAA,QACFogK,YAAa,EACbl+I,cAAO,YACRi6H,UAAA,MAEK2pB,eAAW,MACbr1J,cAAY,MACZs1J,gBAAc,MAEd5uB,WAAY,GACd6uB,iBAAY,EACbC,YAAA,EAEG9oH,OAAC,WAAW,sCACd+oH,UAAM,CACJ31J,MAAM,QACJ,OACA,UACD,KACD8nI,UAAO,oBACN92H,UAAA,4BAEHpV,MAAK,CACHoE,MAAK,EACL89I,SAAS,EACTD,SAAA,IACH+X,kBAAA,EAAMC,iBAAA,GAENC,YAAA,IAGFv7I,EAAA5lB,EAAA0O,SAAA3P,EAAAxE,MAAAwE,EAAAooI,eAEDpoI,EAAA9C,OAAAwc,GAAA,uBAAA1Z,EAAaqiK,iBAAoB/hK,KAAAN,IACzBA,EAAA9C,OAA2Bwc,GAAzB,aAAA1Z,EAAOk3F,YAAA52F,KAAAN,IAEfA,EAAM9C,OAAOwc,GAAA,qBAAuB1Z,EAAS64J,eAAgBv4J,KAAKN,IAClEA,EAAI9C,OAAOwc,GAAK,iBAAW1Z,EAAAsoI,eAAAhoI,KAAAN,IAC3BA,EAAIi6G,eAAY,EAChBj6G,EAAIsiK,uBAAqBtiK,EAAAsiK,uBAAAhiK,KAAAN,GAEzBA,EAAIuiK,sBAAiBviK,EAAAuiK,sBAAAjiK,KAAAN,GAChBA,EC9LI,8DD2GX2mB,EAAC,EAAA86I,EAAA3hK,KAoFQa,UAAA2nI,eAAA,gBACLszB,UAAI,OAAgB,MAAM,+EACpB,UAAgB,kDAAgB,qBAClC,iBAAsB,oDAAqB,oBACpC5sF,EAAA,EAAAgqF,oBAEVr4J,UAAA6hK,oBAAA,SAAAC,GAEDA,EACAviK,KAAOsvD,mBAAG76C,EAAc,EAAA9X,OAAkB,aAGxCrB,MAAA0M,MAAAoE,MAAA,OACAvK,uBAGQ6hJ,cAAS,SAAYn5E,qBAC1BA,EAAAhpE,wBAEEd,UAAAu2F,YAAA,SAAAI,yBACE,OAGT32F,UAAAk4J,eAAsB,SAAAzhE,QACtBirE,iBAAMjkK,OAAA+wG,GAAY,EAAZ/wG,CAAYg5F,OAEhBz2F,UAAW0hK,iBAAK,SAAAnd,SACVhlJ,KAAC1E,SACV0pJ,KAAA7/I,OAAA,EAgBC,OAdInF,KAAAwI,KAAY,CAChBjH,MAAQ,EAMRhD,QAAO,CACA1C,KAAA,4DACNyyB,QAAAoa,WAID1oC,KAAK6B,aAGL0vB,WChOJ/oB,GAEW,IAAA6d,EAAAvkB,EAAAspB,EAAAvW,EACX0c,EAAW,CACTxD,OAAM,GACNinF,MAAM,QAGP,QAAAn4F,EAAA4J,EAAA,EAAAje,GAAAsU,EAAAD,EAAA7H,QAAA8H,EAAA7H,KAAA6H,EAAAD,EAAA7H,OAAA,CACD,IAAYzH,EAAEuP,EAAAvb,MACHiP,EAAE,CAAAjD,SACb,IACY,IAAK,IAAAwH,GAAAqW,OAAA,EAAA3E,EAAA,EAAAlZ,EAAAuG,SAAA8B,EAAAb,EAAAC,QAAAY,EAAAX,KAAAW,EAAAb,EAAAC,OAAA,CACJ,IAAKrB,EAAAiC,EAAArU,MACJ,GAAKoS,EAAAI,OAAAq3G,EAAA,UAAA53G,KACnBhD,EAAAgyJ,yCClDU,CACiC,IAAAzsJ,EAAA,CAAApC,QAAApG,MAAAiD,GAE1B+gB,EAAAvS,QACsBuS,EAAAvS,MAAAjJ,GAa2C,IAAAC,EAAArC,EAAAc,OAAA7Y,MAEpFoa,IAAAub,EAAAxD,OAAA/X,KAAqCub,EAAAxD,OAAA/X,GAAAD,EAArCwb,EAAAyjF,MAAAplG,KAAAoG,KACEA,EAAcrC,EAAA3O,QACqBusB,EAAAxD,OAAA/X,KACvBub,EAAWxD,OAAA/X,GAAAD,EACbwb,EAAmCyjF,MAAjCplG,KAAAoG,YAaJ4lE,GACExwD,EAAA,CAAAiK,MAAAumD,GAUJ,QAGJ,IAEOhmE,IAAGA,EAAAX,OAAAJ,EAAAE,EAAA0mE,SAAA5mE,EAAA9U,KAAAgV,GAEV,QAAO,GAAAqW,EAAA,MAAAA,EAAAiK,SAST,MAAAmmD,GAAAn1D,EAAA,CAAAgP,MAAAmmD,WAEE,IAWD1+D,MAAA7H,OAAAnT,EAAA+a,EAAA4+D,SAAA35E,EAAA/B,KAAA8c,GAzDkC,WAAAwJ,EA0DpC,MAAAA,EAAAgP,gBFsLeotI,CAAGzd,GACb0d,EAASnxI,EAAAxD,OAAAzyB,EAAA4mK,aAOX,QANET,WAAAlwI,EAAAyjF,MAEG0tD,IACLA,EAAMnxI,EAAmBvS,OAGrB0jJ,EAkBF1iK,KAAKwI,KAAMxI,KAAM2iK,aAAID,OAlBb,CACR,IAAI9e,EAAU1lJ,OAAGX,EAAa,oBAAhBW,CAAgB,CAC5BuW,OAAQ,CACRmuJ,SAAQ1kK,OAAUX,EAAK,8BAAfW,CAAe8B,KAAA1E,OACvBunK,QAAa,WAEhBrjK,MAAAiV,EAAA,EAAAjV,QAKHQ,KAAAwI,KAAA,CACUjH,MAAK,KACdhD,QAAAqlJ,EAAA,YAMQ/hJ,YAEApB,UAAYkiK,aAAI,SAAAD,OACtBpnK,EAAA0E,KAAA1E,MAAAD,EAAA2E,KAAA3E,UACG2J,EAAO09J,EAAG/uJ,MAAAc,OAAA7Y,OAAA8mK,EAAA/uJ,MAAA3O,KACfs3G,EAAAhhH,EAAA08I,UAED8qB,EAAAJ,EAAA/uJ,MACQrO,OAAMW,EACZ,GAAI,SAAOq2G,EACPh3G,EAAMN,MAEX,CAED,cAAAs3G,GAAAomD,EAKCn1J,MAAAi1J,iBAJQM,EAAcJ,EAAAn1J,MAAAi1J,eACdlmD,EAAM8O,EAA+B,UAACh7F,MAK/C,IAAArnB,EAAAqiH,EAAsB,cAAtB5oG,YAAuB85F,GACjB,GAACvzG,GAIP,GAHOuzG,EAASvzG,EAAAlM,GAGhBimK,EAAA/uJ,OAAAq3G,EAAsB,UAAAh4G,OACC,CAAAg4G,EAAqB,UAAAj7F,KAAAi7F,EAAA,UAAAl7F,KAC5B+zE,SAAAqY,KACfA,EAAAhhH,EAAA08I,UAAA5sB,EAAA,UAAApsG,YAMAs9F,EAAA8O,EAAA,UAAA/6F,YAIA/qB,EAAApH,OAAAktH,EAAA,YAAAltH,CAAA,CAEDyV,MAAAmvJ,EACQ5zI,SAAQ,CAAAotF,KACTA,GAEN,IAAAsnC,EAAA1lJ,OAAAX,EAAA,oBAAAW,CAAA,CAEDuW,OAAAgS,EAAA,KAAAi8I,EAAA/uJ,MAAAc,OAAA,CAAAC,KAAApZ,EAAAyd,OAAAsD,SAAA/gB,EAAA+gB,SAAAumJ,SAAA1kK,OAAAX,EAAA,8BAAAW,CAAA5C,KACMkE,MAAOiV,EAAuB,EAAEjV,MACrCqkI,MAAAxoI,EAAAmkK,eAAAnkK,EAAAmkK,kBAIOh3J,EAAO,CACPmL,MAAA+uJ,EAAgB/uJ,MAChBpS,MAAA+D,EACA/G,QAAQqlJ,EAAWt+I,GACnBxH,WAAW6oB,EAAQ5lB,EAAAqP,OAAY,GAAA9U,EAAAwC,YACjCikK,UANc,WAQlBv5J,EAAI1K,WAAa,QAAAyD,MAAoByD,GAErC1J,EAAA4mK,YAASliK,KAAAyhK,WAAwBt8J,OAAmB,EAAAH,EAAA,GAElD1J,EAAMymK,WAAQzmK,EAAAymK,UAAuB31J,MAAKs2J,EAAOn1J,MAAAi1J,iBACjDh6J,EAAIu5J,UAAO7jK,OAAAX,EAAA,aAAAW,CAAA,CACTg2C,OAAOwuH,EAAAn1J,MAAAi1J,eACRruH,OAAAuuH,EAAA/uJ,MAEDic,cAAmBt0B,EAAAyiB,iBAInBvV,KAEM/H,UAAasiK,cAAS,kBAC5B/iK,KAAO1E,MAAA0M,MAAAoE,QAGA3L,UAAAuiK,YAAe,SAAA97J,GACtBA,EAAUiE,YACVnL,KAAI1E,MAAOwmK,YAAA,EAEX9hK,KAAI1E,MAAM09C,OAAQ,kFAIlBh5C,KAAI1E,MAAIumK,iBAAQ,EAEhB7hK,KAAI1E,MAAM09C,OAAS,sFAElBn3C,YAIMpB,UAAK07J,iBAAA,WACd,IAACzgI,EAAA17B,KAAA1E,MAAA09C,OAAA,GAEDh5C,KAAA1E,MAAS09C,OAAA,GAAYh5C,KAAA1E,MAAA09C,OAAA,QACnB19C,MAAM09C,OAAiB,GAAKtd,OAC5B75B,YAEMpB,UAAU04E,cAAU,SAAY8pF,OAEtCnjK,EAAOE,KACT,OAAC,SAAAkL,GAEDpL,EAASxE,MAAA09C,OAAQiqH,GAAA/3J,EACfpL,EAAM+B,aAGNpB,UAAA2hK,uBAAA,SAAgDzgB,QAChDrmJ,MAAMymK,UAAY7tB,UAASyN,OAE3B9/I,YAEEpB,UAAK4hK,sBAAyB,SAAA1gB,cAC9BogB,UAAO3kJ,UAAAukI,OACR9/I,YAGKpB,UAAU67J,eAAA,SAAAl7J,SACXulB,EAAO5lB,EAAA+F,QAAA9G,KAAA1E,MAAA+gK,UAAAj7J,cACVi7J,UAAQt/J,OAAML,EAAA,oBAGd+D,UAAO27J,YAAgB,gBACxB9gK,MAAC+gK,UAAAzsJ,KAAA,CAAArO,MAAA,GAAAskF,GAAA,IAAAhqF,KAAA,QAII4E,UAAag8J,eAAG,SAAAyG,OAEtBxmK,EAAKiqB,EAAe5lB,EAAK+F,QAAA9G,KAAW1E,MAAQkhK,UAAK0G,cAC/C1G,UAAWz/J,OAAKL,EAAA,oBAGb+D,UAAA87J,YAAA,gBACJjhK,MAAAkhK,UAAA5sJ,KAAA,CAAAxR,KAAA,GAAAI,GAAA,GAAA3C,KAAA,QAEC4E,UAAagyD,KAAM,SAAQ/4C,EAAAswD,EAAAC,EAAAuG,WACpBxwE,KAAKolB,YACXplB,KAAAwhK,QAEHjyG,EAAavvD,KAAGuvD,SAEhBwvG,EAAM/+J,KAAY++J,UAClBzjK,EAAMk1E,EAAQl1E,MACd0qE,EAAAhmE,KAAAgmE,YACAm9F,EAAM,KACNC,EAAmBp5F,EAAKp/D,KAAI,iCAWZy4J,EAAeC,EAAA/hK,OATA6zB,EAEzB5sB,EACJ0C,aAOM86D,EAAcnoE,QAAO0D,EAAEivE,EAAAhoE,KAAA1K,kBAVAs3B,EAWN7zB,EATnBiH,EAAOgoE,EAAQhoE,MACnB0C,EAAQ8xJ,GAAAx0J,IAAAjH,8BAEG2J,EAAA,KAAAkqB,EAAA,aAMY7zB,kBAENQ,EAAS,sBADrBsJ,SAAAg4J,EAAA,QAAAE,GACqB,OAAAhiK,EAAA,+BAGlBiH,+EAGF,0BAAOlN,EAAAqmK,eAAArmK,EAAAkoK,YAAAloK,EAAA6K,uCAEG7K,EAAAgR,cAAyBhR,EAAAwmK,WAAAt5J,EAAAjK,QAAA1C,uBAElC,2BAAAP,EAAAsmK,gBAAAtmK,EAAAmoK,aAAAnoK,EAAAooK,2CAaFl7J,OACDwhE,EAAInrE,UACLmrE,EAAA1+D,SAEHq4J,EAAAzkK,KAAAyJ,IAAA9J,EAAA,IAAAyM,GAIF,GAFAklE,EAAKozF,mBAAmB,EAElBtoK,EAAA0M,MAAUkiJ,SAAG5uJ,EAAA0M,MAAAiiJ,SACjBz5E,EAAIozF,mBAAmB,MADzB,CAKD,IAAAC,EAAA/8I,IAAA,eAEDg9I,EAAS,CACD/rH,IAAI,MACJ7vC,OAAQ,OACV4vC,SAAU,WACZxsC,OAAA,GAAAA,EAAA,KACAzM,MAAA8kK,EAAA,QAEO34J,IAAA84J,GAET,QADC9wB,EAAA,GACQ5sI,EAAC,EAAAA,EAASoC,EAAKwqI,WAAK7tI,OAAUiB,IACrC4sI,EAAApjI,KAAA,CACArO,MAAOiH,EAAAwqI,WAAA5sI,GACR8E,MAAA1C,EAAAu7J,SAAA39J,KAID4sI,EAAapjI,KAAU,CACvBrO,MAAQjG,EAAQ0M,MAAGiiJ,SACnB/+I,MAAQ1C,EAAMu7J,SAASv7J,EAAAu7J,SAAA5+J,OAAA,SAGrBuvG,EAAQjgG,EAAa,EAAAykF,SAAA73F,KAAAwqH,WAAA,mCACrBm4C,EAAQ34J,SAAa/P,EAAGgR,cAAK,QAC7Bs5C,EAAM1mD,KAAAyJ,IAAAg7J,EAA4B,OAAUK,EAE7CC,EAAA3oK,EAAA0M,MAAAi6J,gBAAA,QAAM/iK,KAAAyJ,IAAAg7J,EAAA,MAAAM,EACLC,EAAqBC,EAAA,EACrBj6J,EAAwB07C,EAAK,IAC7B1+C,EAAQ,CACTE,OAAA,CAEDK,OAAe,CAEFO,MAAG,CACJW,IAAMrN,EAAO0M,MAAAkiJ,SACfjiJ,IAAA3M,EAAA0M,MAAAiiJ,SACC9+I,WAAA,CAAAD,MAAAwpG,GACDxmG,OAAM,CAAAhD,MAAA,MACNkD,OAAG,CAAAhC,MAAA,GACPvN,MAAWslK,GAEX52J,MAAM,CAAAnB,MAAK,GACZ5K,MAAA,CAAA4K,MAAA,GACF7D,OAAA,CAAAL,OAAA,EAAAqE,eAAA,GACMP,KAAA,CAAAkC,OAAA,CAAArP,MAAA,IACDwJ,UAAO,CACNiG,OAAM0kI,EACNxxI,MAAM,CACZ4K,KAAA9Q,EAAA0M,MAAAi6J,gBACM/5J,OAAAg8J,EAAA,EACM/7J,KAAA,CAAAC,KAAA8B,IAENkC,KAAK9Q,EAAU0M,MAACg6J,iBAChBnjK,MAAUqlK,GAET3iK,MAAA,CACR2J,MAAA5P,EAAAwmK,WAAA9E,GAAAx0J,IAAAjK,QAAA+vB,SAAA,KAEU/jB,UAAY,WAEL,WAlFX/B,gBACSw9D,EAAYnoE,QAAGvC,EAAA6K,OAAAqC,EAAA1K,YAAA,gBACvBjC,UACD6nK,QAAM19F,EAAAnoE,QAAAvC,EAAAooK,QAAAl7J,EAAA1K,YAAA,YAiFLqK,KAAA,CACPC,KAAAw9C,EAEF36C,OAAEwJ,EAAkB,EAAAjV,MAAagb,WAASstF,WAAAC,YAIhC37F,MAAM,KAKhB49D,EAAAj/D,OAAA84J,GACA,IAAIO,EAAW,CACb57J,KAAE,CAAK,CAAC,EAAAA,EAAAjH,WAEJR,EAAAsG,KAAAw8J,EAAA,CAAAO,GAAAl9J,aAGNm9J,IACA,IAAI77J,EAAMgoE,EAAMhoE,KACd3J,EAAKmrE,EAAQnrE,WACdA,EAAA,GAKCu6B,WAAWirI,EAAG,cAGZtC,WAAUv5J,EAAUu5J,UAAE58J,cAGpBqrE,EAAKllE,SACNwb,IAAA,iBACF,UAAM,kBACL,YACAi7I,UAASuC,KAAA,GACVxpI,KAAA,MACFgpI,EAAAjlK,QAAA,SAAM0lK,EAAAj5J,GAAA,SAAApM,KAAA6mD,MAAAz6C,EAAA,OACLw4J,EAAAx4J,OAAgBA,EAAIi5J,EAAwB,UAI1CT,EAAMhpI,KAAM,MAEZgpI,EAAMjlK,MAAUA,EAAM,KACxBilK,EAAAx4J,OAAepM,KAAA+N,MAAA,IAAA3B,GAAA,KAGjBu4J,EAAU74J,IAAK84J,OACb58J,EAAU,CACX8I,OAAA,CAAA5D,MAAA,GAEGhF,OAAC,CAEDuR,MAAW,CACLvM,MAAG,EACZoD,KAAA,EAAM7B,UAAA,EACGyP,UAAQlf,OAAAX,EAAA,yBAAAW,CAAA5C,EAAAymK,UAAA3kJ,UAAA3I,EAAA,EAAAjV,MAAAuU,MACjBqmC,MAAA,IAIDj+B,MAAA,CACM/P,MAAA,EAEDzD,IAAArN,EAAWymK,UAAApkH,KACV11C,IAAK3M,EAAMymK,UAAOlkH,YAErB,CACDzxC,MAAS,EACP2uB,KAAA,OACCpyB,IAAA6nE,EAAArxD,MAAA/gB,KAAA6yC,UACFhpC,IAAAuoE,EAAArxD,MAAA3gB,GAAAyyC,WAGDxjC,KAAK,CAAAstC,WAAU,EAAA3uC,MAAA,MAEdrB,OAAA84J,OACDO,EAAA,CACA57J,KAAIA,EAAAu5J,gBACF7jK,OAAOX,EAAA,yBAAPW,CAAO5C,EAAAymK,UAAA7tB,UAAAz/H,EAAA,EAAAjV,MAAAuU,SAGUhT,EAAKsG,KAAAw8J,EAAU,CAAAO,GAAAl9J,MAvMpC8iE,EAAMp/D,KAAA,uBAsRQkc,IAAK,wDACb,WACG,YAAD3hB,UAED,aACOwjD,8BAGX5uC,WAKAA,GAAA+4H,QAAA,iBAAA3tI,OAAA,IAGU,aAATqP,QAIL,IAAA2uJ,EAAAvlI,KAAA92B,QAAA,yFAHKq8J,EAASvlI,KAAU,+GAM5B59B,KAAAhD,OAAAwc,GAAA,mCAnGQg3D,EAAAhoE,YAIAgoE,EAAAhoE,KAAAlN,EAAAk1E,EAAAl1E,mBACUA,EAAA03I,aACPA,WAAUjzE,MAAI,KAAQ3+D,IAAC,SAAMojK,GAC/B,OAAG7lJ,OAAA6lJ,EAAA/0C,UAGL,GAGEn0H,EAAC09C,SACHxwC,EAAKu7J,SAAUzoK,EAAA09C,OAAA53C,IAAA,SAAA8J,GAAA,OAAAhN,OAAAX,EAAA,yBAAAW,CAAAgN,EAAAuJ,EAAA,EAAAjV,MAAAuU,eAEdzY,EAAA0M,MAAAoE,KAAA,GAAAq4J,OAEDnpK,EAAAumK,gBAAsB,CACtB,IAAA32J,EAAA8xJ,GAA4Bx0J,EAAOA,EAAEjK,QAAW+vB,SAC/CpjB,GACJk4J,EAAAp4J,IAAA,mBAAAE,GAEDwO,EAAAupB,WAEe+mC,EAAAh/D,IAAU,mBAAAE,GAGtB8+D,EAAAh/D,IAAA,yBA7mBsBo4J,EA+mB5Bp4J,IAAA,uBAEQg/D,EAAgBh/D,IAAC,mBAAwB,UAKtCo4J,EAAkBp4J,IAAC,mBAAoB,IAC3Cg/D,EAASh/D,IAAI,mBAAoB,IAEpCg/D,EAAA/pB,KAAA0T,GACFr4D,EAAAymK,UAAA31J,MAEMi4J,IAyBA/oK,EAAA0M,MAAiBoE,UAEtB49D,EAAQwB,YAAE,UAAAlwE,EAAAw2D,MAAA3sD,OAAA,GAEVg+J,EADO7nK,EAAEw2D,MAAA3sD,OAAA,EACTq8J,EAAAt7F,mBAAA5qE,EAAAw2D,MAAA,GAAAtpD,EAAA1K,WAAA,IACc,MA4BuD+D,6BCnuB/B0/J,EAAAr4I,YAAA,cAqB7Bq4I,ED0GoB,GCzGlB,2BACRvE,GAAGx0J,EAAAjH,GACR,IAAAolB,EAAU5lB,EAAAmf,SAAA3e,GACR,OAAM,SAEN,IAAA6E,EAAAoC,EAAYwqI,WAAA7tI,OAAAiB,EAAA,EAAAA,OACV7E,GAASiH,EAACwqI,WAAe5sI,EAAE,GAC3B,OAAOoC,EAAIu7J,SAAS39J,UAGvBugB,EAAA5lB,EAAAie,MAAAxW,EAAAu7J,UExBH,ICoEAW,GAAeC,GDpETC,GAAe,CAOrBt2J,QAAA,EAAoC6gB,MAAA,CAAAi8F,EAAA,UAAAj7F,MAApC1gB,SAAA,CAAA9G,IAAA,EACEV,IAAA,eACE,CAAqG,CAAA1G,OAAAk8C,IAAAvyC,MAAA,SAEvG,CAAA3J,MAAA,GAAA2J,MAAkB,iBAGhB,aAEF,OACiG,YAoClGkB,MAAA,EAlCCk4J,MAAA,EACQpwB,UAAA,oBAEN92H,UACE,yCAQEwnJ,eAOArnK,EAAA,eAAAswJ,sBAMA,EAQNiU,YAAC,EACH0B,aAAA,EA9CoCC,cAAA,GEE9BoB,GAAgC,SAAAjlK,GAEnC,SAAAklK,IAEH,IAAAhlK,EAAA,OAAAF,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KAWU,OAX0BF,EAAAilK,YAAA,SAAAxjK,EAAA1C,EAAAyM,GAApC,IAAAy2J,EAAA,GAAAxgK,EAAAwgK,UAAA,CACE,IAAAjgK,EAAAhC,EAAiBD,MAAGrC,EAA2BsE,EAAAtE,UAAA0J,EAAApF,EAAAoF,QAC7C66J,EAAKt7I,EAAe,KAAAvf,EAAA66J,UAAU,CAAAv5J,KAAMjH,EAAOwgK,UAAEiD,KAAcxnK,EAASY,KAAG6yC,UAAAg0H,KAAAznK,EAAAgB,GAAAyyC,YAEzE,OAAAvgC,EAAmB3P,EAAAmB,cAA2B3E,EAAA,sBAAAu0D,MAAA5zD,OAAA2+I,GAAA,EAAA3+I,CAAAqD,IAAA,SAAAO,GAC5C,IAAAojK,EAAWpjK,EAAAojK,SAASC,EAAArjK,EAAAqjK,gBAAmD,OAAAz0J,EAAA3P,EAAAmB,cAAA3E,EAAA,UAAAgE,QAAAhD,QAAAwjK,YAAAljK,QAAAyM,SAAA9L,MAAAiV,EAAA,EAAAjV,MAAA62B,QAAA6uI,EAAAnjK,UAAAojK,OAGvErlK,EAAyEslK,UAAA,mEAuC5E,OAAAlnK,OAAAX,EAAA,sBAAAW,CAAAuoB,EAAA,KAAAvf,EAAA,CAAAmiI,mBAAA7pI,MAAAiV,EAAA,EAAAjV,MAAAgJ,OAAApB,OAAA26J,UAAA76J,EAAA66J,UAAA31J,SApCStM,SAdR2mB,EAA6B,EAACq+I,EAAAllK,KAkBxBa,UAAAoB,OAAA,iBACE7B,KAAAH,MAAAyL,EAAAxJ,EAAAwJ,OAACzM,EAAAiD,EAAAjD,MAAUqI,EAAOpF,EAAAoF,QAAAsB,EAAA1G,EAAU0G,KAAA68J,EAAoBvjK,EAAAujK,qBAChD30J,EAAA3P,EAAAmB,cAAC3E,EACC,aAAK6nK,UACLplK,KAASolK,UAAAL,YACD/kK,KAAE+kK,YAAKlmK,MAAiBA,EAC3ByM,OAAEA,EAAe2/D,OAAMziE,EAAA68J,cAAUA,EAAOC,YAAUp+J,EAAco+J,iBAzB3C,GA+B5B,8BChDmC,SAAAC,IAE7C,IAAAzlK,EAAa,OAAAF,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KAkBX,OAjBsDF,EAAA0lK,wBAAA,WAKlD,OAAA1lK,EAAAD,MAAUyC,SAAKmkB,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAA26J,iBAAA/hK,EAAAD,MAAAqH,QAAA26J,oBAOgB/hK,EAAA2lK,mBAAA,kBAAA3lK,EAAoBD,MAAAyC,SAAAmkB,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAA46J,YAAAhiK,EAAAD,MAAAqH,QAAA46J,eAAzDhiK,EAAA4lK,oBAAA,kBAAA5lK,EAAAD,MAAAyC,SAAAmkB,EAAA,KAAA3mB,EAgBCD,MAAAqH,QAAA,CAAAs8J,aAAA1jK,EAAAD,MAAAqH,QAAAs8J,gBAbC1jK,EAAA6lK,qBAAe,0GAEf7lK,SArBF2mB,EAAY,EAAA8+I,EAAA3lK,KAyBNa,UAAAoB,OAAA,eACEC,EAAA9B,KAAAH,MAAAqH,QAAA26J,EAAO//J,EAAA+/J,gBAAcC,EAAYhgK,EAAAggK,WAAS0B,EAAA1hK,EAAA0hK,YAAqBC,EAAgB3hK,EAAE2hK,oBAEjF/yJ,EAAA3P,EAAAmB,cAAC3E,EAAa,mBAAA3B,MAAc,YAGjC8U,EAAA3P,EAAAmB,cAAA3E,EAAA,QAAAiE,MAAA,aAAA6iF,WAAA,UAAAH,QAAA29E,EAAAv/J,SAAAtC,KAAAwlK,0BACH90J,EAAC3P,EAAAmB,cAAA3E,EAAA,QAAAiE,MAAA,QAAA6iF,WAAA,UAAAH,QAAA49E,EAAAx/J,SAAAtC,KAAAylK,qBAhBoC/0J,EAAa3P,EAgBjDmB,cAAA3E,EAAA,QAAAiE,MAAA,SAAA6iF,WAAA,UAAAH,QAAAs/E,EAAAlhK,SAAAtC,KAAA0lK,+JCRD,0EAAAtkK,IAAA,SAAA4E,SACE,CAAAzE,MAAAyE,EAAAxE,MAAAwE,QAEwB,SAAApG,YAMxBgmK,QACE9lK,EAAoB,OAAdF,GAAqBA,EAAQ4pB,MAAAxpB,KAAYypB,YAAUzpB,cACzD6lK,kBAAqB,SAAC7/J,GAItB,OAAAlG,EAAAD,MAAAyC,SAAAmkB,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAAy6J,eAAA37J,EAAAzE,YAGAukK,iBAAW,SAAA9/J,GAGR,OAAAlG,EAAAD,MAAAyC,SAAAmkB,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAAoF,cAAAtG,EAAAzE,YAGHwkK,mBAAW,SAAA//J,GAGR,OAAAlG,EAAAD,MAAAyC,SAAAmkB,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAA06J,gBAAA57J,EAAAzE,UAGHzB,WAvBA,EAAA8lK,EAAAhmK,KA6BFa,UAAAoB,OAAqB,eACnBC,EAAI9B,KAACH,MAAAqH,QAAiBy6J,EAAA7/J,EAAA6/J,eACjBr1J,EAAmBxK,EAAAwK,cAAas1J,EAC9B9/J,EAAA8/J,gBAET,OAAElxJ,EAAA3P,EAAAmB,cAAA3E,EAAA,mBAAA3B,MAAA,2DAyCH8U,EAAA3P,EAAAmB,cAAA3E,EAAA,WAAAsB,MAlFqC,GAkFrC,UAvCC6R,EAAA3P,EAAAmB,cAAA3E,EAAA,QAAAsB,MAAA,GAAAqI,QAAA8+J,GAAA1jK,SAAAtC,KAAA6lK,kBAAAtkK,MAAAykK,GAAAp7J,KAAA,SAAAqY,GAAA,OAAAA,EAAA1hB,QAAAogK,OACUjxJ,EAAA3P,EAAAmB,cAAuB,OAAAH,UAAA,WACvB2O,EAAA3P,EAAAmB,cAAA3E,EAAyB,WAAAsB,MA7CC,GA6CD,SACzB6R,EAAA3P,EAAAmB,cAA0B3E,EAAA,QAAAsB,MAAA,GAAAqI,QAAA8+J,GAAA1jK,SAAAtC,KAAA8lK,iBAAAvkK,MAAAykK,GAAAp7J,KAAA,SAAAqY,GAAA,OAAAA,EAAA1hB,QAAA+K,OAC5BoE,EAAc3P,EAAAmB,cAAa,MAAM,CAAAH,UAAA,WACnC2O,EAAA3P,EAAAmB,cAAA3E,EAAA,WAAAsB,MAhD8B,GAgDyB,WACvD6R,EAAA3P,EAAAmB,cAAA3E,EAAA,QAAAsB,MAAA,GAAAqI,QAAA8+J,GAA0D1jK,SAAMtC,KAAQ+lK,mBAAAxkK,MAAAykK,GAAAp7J,KAAA,SAAAqY,GAAA,OAAAA,EAAA1hB,QAAAqgK,WA9CtD,GAmDhB,kBAkBC,SAAAhiK,GAUX,SAAAqmK,IAlFsC,IAAAnmK,EAkFrC,OAlFqCF,GAkFrCA,EAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,uOADCymB,EAAC,EAAAw/I,EAAArmK,GCxGmDqmK,EAAAxlK,UAAAoB,OAAA,WACF,IAAAC,EAAA9B,KAAAH,MAAAqH,QAAAkF,EAAAtK,EAAAsK,KAAAk4J,EAAAxiK,EAAAwiK,KACE,OAAA5zJ,EAAA3P,EAAAmB,cAAA3E,EAAA,mBAAA3B,MAAA,aAEzC8U,EAAA3P,EAAAmB,cAAa3E,EAAW,OAAoB,CAAAiE,MAAA,OAAA6iF,WAAe,UAACH,QAAA93E,EAAA9J,SAAAtC,KAAAkmK,eACtEx1J,EAAY3P,EAAAmB,cAAA3E,EAAS,QAAAiE,MAAA,cAAA6iF,WAAA,UAAAH,QAAAogF,EAAAhiK,SAAAtC,KAAAmmK,iBAErBF,EDwFQ,GCvFR,eCF4EG,GAAA,SAAAxmK,GAiB3C,SAAAymK,IAIlC,IAAAvmK,EAAY,OAAZF,GAA6BA,EAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KAO3B,OAPFF,EAAAwmK,oBACE,SAAYtzB,GAJd,IAAAj0H,EAAYjf,EAAED,MAAAqH,QAAAq/J,aAAA92J,SAqGd3P,EAAA0mK,iBAAU//I,EAAA,KAAA1H,EAAA,CAAAi0H,mBAERyzB,uBAAkB,SAAA7D,GAClB,IAAM7jJ,EAAQjf,EAAAD,MAAUqH,QAAYq/J,aAAK92J,SACzC3P,EAAA0mK,iBAAsB//I,EAAO,KAAA1H,EAAA,CAAA6jJ,yCAElB,SAAA2D,UACPzmK,EAAQD,MAAKkpI,gBAAAtiH,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAAq/J,wCAEK,SAAKxE,UACvBjiK,EAAAD,MAAAkpI,gBAAAtiH,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAA66J,mCAEA,SAAWpuJ,GACb7T,EAAG4mK,wBAAAjgJ,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAAq/J,aAAA,CAAA92J,SAAAkE,MA5GL7T,EAAK6mK,mBAAQ,SAAA70G,GACXhyD,EAAA0mK,iBAAiB//I,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAAq/J,aAAA92J,SAAA,CAAAqiD,YAGdhyD,SAXT2mB,EAAA,EAAA4/I,EAAAzmK,KAaaa,UAAEoB,OAAiB,iBAClB7B,KAAAH,MAAAqH,UACAA,EAAAq/J,eACAA,EAAU92J,WACV82J,EAAAj4J,cACDs4J,GAA6B,GAAA5mK,KAAAH,MAAA2I,KAAApB,QACnClJ,OAAA0oK,GAAA,EAAA1oK,CAAA8B,KAAAH,MAAA2I,KAAApB,eACDsJ,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,OACSpQ,EAAAmB,cAAA3E,EAA+B,sBACtCmT,EAAK3P,EAAAmB,cAAiB3E,EAAA,mBAAA3B,MAAA,WAClB8U,EAAE3P,EAAAmB,cAAyB3E,EAAA,oBAAA+E,SAAAtC,KAAA0mK,wBAAAnlK,MAAAglK,KAC/B71J,EAAM3P,EAAAmB,cAAA3E,EAAgC,mBAAA3B,MAAA,mBACtC8U,EAAO3P,EAAAmB,cAAA3E,EAAA,uBAAAspK,YAAA,EAAAvkK,SAAAtC,KAAAwmK,iBAAAjlK,MAAAkO,OACE1O,EAAImB,cAAQ4kK,GAAO,CAAA5/J,UAAA5E,SAAAtC,KAAAH,MAAAkpI,oBACxBhoI,EACEmB,cAAA6kK,GAAA,CAAA7/J,QAAkBA,EAAA5E,SAAAtC,KAAAH,MAAAkpI,oBACfhoI,EAAAmB,cAAgB8kK,GAAE,CAAA9/J,UAAA66J,UAAAz/J,SAAAtC,KAAAinK,uBAClBlmK,EAAAmB,cAAO3E,EAAI,kBAAA+E,SAAAtC,KAAAsmK,oBAAAtzB,WAAAvjI,EAAAujI,kBACV9wI,cAAY3E,EAAsB,qBAAA+E,SAAAtC,KAAAymK,uBAAAS,cAAAz3J,EAAAmzJ,aAClC7hK,EAACmB,cACL3E,EAAA,mBAAA3B,MAAA,gBACDmF,EAAAmB,cAAA3E,EAAA,iBAAAgE,MAAAkO,EAAAqiD,MAAAxvD,SAAAtC,KAAA2mK,mBAAAtvD,cAAA8vD,SAAA,UAnDkE,GAsDzE,kBAQY,IAAA5pK,EAAM,YAAAsnK,wDAGftnK,EAAA,yDACFA,EAAA,qCAGMrD,EAAW,WAUjB,SAAA0F,cAEQC,SACJD,EAAEG,KAAAC,KAAAH,IAA2BG,KC/CtC,mBDgDY,YACA,eACNnD,EAAKiD,EAAED,MAAAhD,KACEqB,OAAAikC,GAAe,EAAfjkC,GAAekkC,iBACfO,aAAkB9lC,iBACjBvB,YACsB,aACzB,CACPw0E,OAAC,MACFnpE,IAAA,wBACD+4G,kBAAA,IACHx+G,KAAA,SAAAwW,GAEDiO,EAAA,EAAAtkB,KAAiB+lK,WAAjB1vJ,EAAA0vJ,cAEEtnK,EAAAG,MAAY,CACVonK,YAAK,GAERvnK,EAAAmZ,MAAA,CAED,CAAArd,MAAA,kBACUE,KAAC,wBACP8hC,KAAO,2BACRppB,OAAA,SAEI8yJ,KAAS,+BACRp6I,MAAW,WAAc,OAAK7I,QAAU61D,SAAC,KAE7C,CACEt+E,MAAA,gCACA2rK,IAAA,kBACDzrK,KAAA,0BACD8hC,KAAO,iCACN1Q,MAAA,WACJ,WAAA7I,QAAA,SAAA61D,GAkBDA,EAAAh8E,OAAAoxG,GAAA,EAAApxG,GACUspK,mBACSh2J,OAAA,SAAA5C,GACR,WAAAA,EAAAxR,KAAAqqK,UACRtiK,OAAA,OAOG,CAEIvJ,MAAO,kCAEH,kGAMA,OAAAsC,OAAA0qJ,EAAa,EAAb1qJ,GAQViC,OAAA,CAAA06E,MAAA,IACH35E,KAAA,SAAAC,GACH,OAACA,EAAAgE,OAAA,OE7KyCvJ,MAAA,mBACQ2rK,IAAA,YAElDzrK,KAAA,mBACa8hC,KAAA,8FDJD18B,KAAA,SAAAwW,GACiC,OAAAA,EAAAvS,OAAA,MAqBP,CAAtCvJ,MAAA,yBAAA2rK,IAAA,4BACEzrK,KAAA,sBAEA8hC,KAAA,iEACE1Q,MAAA,WAAoH,OAAAhvB,OAAA0qJ,EAAA,EAAA1qJ,GAEtH+C,IAAA,eAA2B,CAAA+kJ,SAAA,EAAArgI,KAAA,IACpBzkB,KAAK,SAACyO,GAGR,OAAAA,EAAAxK,OAAA,OAULrF,EE1CF,SHuFM,EAAA4nK,EAAA9nK,KC3CGa,UAAAkpB,kBAAiB,WAIxB,IAAE7pB,EAAAE,YAEFA,KAAA2nK,WAAA,EAKE3nK,KAAA4nK,WAAW1mK,KAAA,SAAewW,GAMxB5X,EAAAe,SAAA,CAAAwmK,YAAA,SAWF5mK,UAAAmnK,SAAA,WAEF,IAAA9nK,EAAAE,QACEA,KAAI2nK,YAAC3nK,KAAiBiZ,MAAA9T,OAAA,EAQtB,OAAAkf,QAAA61D,UAsDHl6E,KAAA2nK,WAAA,EApDC,IAAAE,EAAA7nK,KAAAiZ,MAAMjZ,KAAN2nK,WACU,OAAAE,EAAA36I,QAAAhsB,KAAO,SAAgB4mK,GACvB,OAAAA,GACAD,EAAA5yJ,MAAA,EAESnV,EAAG8nK,YAEhBvjJ,QAAA61D,eAKEz5E,UAAAoB,OAAA,kBACE7B,KAAAC,MAAAonK,aAoBAtmK,EAAAmB,cAAA,MAAC,CAAAH,UAAA,gCAGHhB,EAAAmB,cAAA,SAAC,CAAAH,UAAA,6BAAgCs0B,QAAAr2B,KAAqByqF,SAGxD/5E,EAAA3P,EAAAmB,cAAC,KAAAH,UAAA,kBAED2O,EAAA3P,EAAAmB,cAAC,OAAAH,UAAA,oBAAwB/B,KAAYiZ,MAAA7X,IAAA,SAAAovB,EAAA9zB,GACnC,OAAAgU,EAAA3P,EAAAmB,cAAC,OAAAoE,IAAe5J,EACdqF,UAAOyuB,EAASvb,KAChB,0BAAe,wBAOxBvE,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA,gBAAA67B,KAAApN,EAAAoN,KAAAppB,OAAAgc,EAAAhc,OAAA5Y,MAAA40B,EAAA82I,MACH52J,EAAC3P,EAAAmB,cAAA,QAAAH,UAAA,mBAAA2O,EAAA3P,EAAAmB,cAAA,KAAAH,UAAAyuB,EAAA10B,iLA5BWiF,EAAAmB,cAAA,MAAC,qBE7GbwlK,EHsFO,CGrFsCpxI,EAAA,eAa7CyxI,GAAA,IAAAxqK,EAAA,YAAAyqK,OAOsB,SAAApoK,YAgBbqoK,IAGP,IAAEnoK,EAAA,OAAAF,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KC3BS,OD6BXF,EAAA65C,WAAY,IACJuuH,wBAAE,WACR,OAAOpoK,EAAAD,MAAAkpI,gBAAAtiH,EAAsB,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAAihK,qBAAAroK,EAAAD,MAAAqH,QAAAihK,mDAEX,kBAChBroK,EAAOD,MAAAkpI,gBAAMtiH,EAAM,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAAkhK,sBAAAtoK,EAAAD,MAAAqH,QAAAkhK,2BAEnB9B,oBAAC,SAAAtzB,GACH,IAAAj0H,EAAAjf,EAAAD,MAAAqH,QAAAq/J,aAAA92J,uDAEF3P,EAAA2mK,uBAAA,SAAA7D,GACQ,IAAA7jJ,EAAAjf,EAAED,MAAAqH,QAAAq/J,aAAQ92J,SAChB3P,EACE0mK,iBAAA//I,EAAC,EAAW,GACV1H,EAAS,CAAE6jJ,SAAKA,MAUxB9iK,EAAA4mK,wBAAC,SAAAH,EAAAjlJ,EAAAR,GApD+B,OAAAhhB,EAAaD,MAoD5CkpI,gBAAAtiH,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAAq/J,iBAAAzlJ,yHClEiEhhB,EAAA6mK,mBAAA,SAAA70G,EAAAhxC,GAEChhB,EAAA0mK,iBAAA//I,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAAq/J,aAAA92J,SAAA,CAAAqiD,eAAA7rD,EAAA6a,IAWtDhhB,WDUD,EAAAmoK,EAAAroK,GCRVqoK,EAAAxnK,UAA0BoB,OAAA,WAC1B,IAAAqF,EAAclH,KAAAH,MAAAqH,QACdq/J,EAAar/J,EAAAq/J,aAAmB4B,EAAAjhK,EAAAihK,oBAAAC,EAAAlhK,EAAAkhK,qBAChC34J,EAAA82J,EAAA92J,yDClB8GvR,OAAA0oK,GAAA,EAAA1oK,CAAA8B,KAAAH,MAAA2I,KAAApB,QAGhH,OAAAsJ,EAAA3P,EAAAmB,cAA4CwO,EAAA3P,EAAAoQ,SAAA,KAC/BT,EAAA3P,EAAAmB,cAA6B3E,EAAgC,sBACjEmT,EAAA3P,EAAAmB,cAAA3E,EAAwC,mBAAA3B,MAAA,WAC/C8U,EAAA3P,EAAAmB,cAAA3E,EAAA,oBAAA+E,SAAAtC,KAAA0mK,wBAAAnlK,MAAAglK,EAAA5sH,WAAA35C,KAAA25C,aAEFjpC,EAAA3P,EAAAmB,cAAA3E,EAA2D,QAAAiE,MAAA,SAAA6iF,WAAA,SAAArkF,KAAA25C,WAAAuqC,QAAAikF,EAAA7lK,SAAAtC,KAAAkoK,0BAC9Cx3J,EAA2B3P,EAAAmB,cAEtC3E,EAAoB,OACpB,CAAAiE,MAAA,UAAgB6iF,WAAA,SAAArkF,KAAA25C,WAAAuqC,QAAAkkF,EAAA9lK,SAAAtC,KAAAqoK,4BAEhB33J,EAAA3P,EAAAmB,cAAmC3E,EAAA,mBAAA3B,MAAA,SACtB8U,EAAA3P,EAAAmB,cAAA3E,EAA6C,uBAAAspK,YAAc,EAAWvkK,SAAkBtC,KAAAwmK,iBAAAjlK,MAAAkO,KAErGiB,EAAA3P,EAAAmB,cAAmC3E,EAAA,kBAAA+E,SAAAtC,KAAAsmK,oBAAAtzB,WAAAvjI,EAAAujI,cAC/BtiI,EAAiB3P,EAAAmB,cAAgB3E,EAAqB,qBAAA+E,SAAAtC,KAAAymK,uBAAAS,cAAAz3J,EAAAmzJ,WAClDlyJ,EAAQ3P,EAAAmB,cAAoB3E,EAAM,mBAAA3B,MAAA,cACpC8U,EAAO3P,EAAAmB,cAAA3E,EAAA,iBAAAgE,MAAAkO,EAAAqiD,MAAAxvD,SAAAtC,KAAA2mK,mBAAAtvD,cAAA8vD,SAAA,UFCO,GEEjB,kBCfQ,SAAiBvnK,YAE3B0oK,6GCVS30J,EAAApS,EAAAoS,MAAApV,EAAAgD,EAAAhD,QACiC,OAAAmS,EAAA3P,EAAAmB,cAAA3E,EAAA,sBAAAu0D,MAAA5zD,OAAA2+I,GAAA,EAAA3+I,CAAAqD,IAAA,SAAAO,GAEhC,IAAAojK,EAAApjK,EAAAojK,SAAAC,EAAArjK,EAAAqjK,gBACsD,OAAAz0J,EAAA3P,EAAAmB,cAAA3E,EAAA,OAAAgE,MAAAhD,EAAAM,QAAAyM,SAAA0nI,WAAAr/H,EAAAq/H,WAAAm1B,oBAAAjhK,EAAAihK,oBAAAC,qBAAAlhK,EAAAkhK,qBAAAle,SAAAv2I,EAAAhL,IAAAshJ,SAAAt2I,EAAA1L,IAAAzI,MAAAiV,EAAA,EAAAjV,MAAA62B,QAAA6uI,EAAAnjK,UAAAojK,OAIxBrlK,EAAAslK,UAAA,WAGrC,IAAAtjK,EAAAhC,EAAAD,MAAU2I,EAAK1G,EAAA0G,KAAAtB,EAAApF,EAAAoF,QAAAmiI,EAAAvnI,EAAAunI,iBAEf,OAAenrI,OAAMX,EAAoB,sBAA1BW,CAA6B,CAElDqoK,aAAAr/J,EAAAq/J,aAAwCl9B,mBAAxC7pI,MAAAiV,EAAA,EAAAjV,MAAAgJ,OAAApB,qBDNyB,EAAAkhK,EAAA1oK,KCS4Da,UAAAoB,OAAA,4EA4BpF,OAAA6O,EAAA3P,EAAAmB,cAAA3E,EAAA,aAAA6nK,UAAAplK,KAAAolK,UAAAL,YAAA/kK,KAAA+kK,YAAAlmK,QAAAyM,SAAA2/D,OAAAziE,EAAA68J,gBAAAC,YAAA/nK,EAAA,eAAAswJ,QAzBWya,EDbC,GCcD,eAuBVC,GAAC9hJ,EAAA,KAAAm+I,IACH4D,GAAA,CA/BwCJ,sBAAa,+ECmCzC,IAAA7qK,EAAA,YAAAkrK,gBAGFD,cAGFE,IAGLj/B,sBA1CqB,SAAOviI,EAAQwiI,EAAaC,OAKlD1sH,EAAE/e,OAAAX,EAAA,oCAAAW,CAAAgJ,EAAAwiI,EAAAC,MAGK,kBAAMA,EAAgB/mI,QAAA,CAA3B,IAGGoF,EAAA2hI,EAAA/mI,QAAAoF,MAELA,IACEiV,EAAImrJ,qBAACpgK,EAAwBg6J,iBAI7B/kJ,EAAAkrJ,oBAAAngK,EAAAi6J,iBAEF,OAAAhlJ,IAuBF0rJ,oBA7CyC,SAAArtK,GAAzC,OAAA4C,OAAAX,EAAA,iCAAAW,CAAA5C,KCAAstK,GAAA,EAAArnK,MAAAhE,EAAA,aAAAsrK,IAAArnK,MAAA,QAAAD,MAAAhE,EAAA,aAAAurK,MAAAtnK,MAAA,UAAmCunK,GAAoB,SAAAnpK,gBAsBtD,IAAAE,EAAA,OAAAF,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,YArBCF,EAAAkpK,gBAAA,SAAAC,GAAA,OAAAnpK,EAAAD,MAAAkpI,gBAAAtiH,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAA+hK,UAAA1nK,UACQzB,EAAAopK,oBAAE,SAAKpnK,GAEP,IAAA0S,EAAS1S,EAAA0S,OACb,OAAA1U,EAAYD,MAAEkpI,gBAAoBtiH,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAAiiK,YAAA30J,EAAAjT,UAElCzB,ECrB6D,ODcnE2mB,EAAA,EAAA2iJ,EAAAxpK,KASWa,UAAKoB,OAAE,WAEd,IAAAqF,EACElH,KAAAH,MAAAqH,QASH+hK,EAAA/hK,EAAA+hK,QAAAE,EAAAjiK,EAAAiiK,YACH,OAAAz4J,EAAC3P,EAAAmB,cAAA3E,EAAA,mBAAA3B,MAAA,YAtBkC8U,EAAa3P,EAsB/CmB,cAAA,OAAAH,UAAA,gDA9B6D,0SCNKqnK,EDcZ,CCbb9yI,EAAA,eAkBxC+yI,GAAA,SAAAzpK,gBCpBwC,IAAAE,EAAA,OAAAF,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KCCG,ODAeF,EAAA2mK,uBAAA,SAAA7D,GACZ,IAAA7jJ,EAAAjf,EAAAD,MAAAqH,QAAAq/J,aAAA92J,SACI3P,EAAA0mK,iBAAA//I,EAAA,KAAA1H,EAAA,CAAA6jJ,eAGjD9iK,EAAA4mK,wBAAoB,SAACH,GACrB,OAAUzmK,EAAAD,MAAAkpI,gBAAAtiH,EAAqB,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAAq/J,gICNWzmK,kBAGJwpK,EAAA7oK,UAAAoB,OAAA,WAEzC,IAAAC,EAAa9B,KAAAH,MAAAkpI,EAAAjnI,EAAAinI,gBAAA7hI,EAAApF,EAAAoF,QAAAsB,EAAA1G,EAAA0G,KACkG+9J,EAAAr/J,EAAAq/J,aAK3B92J,EAAA82J,EAAA92J,SAEpF,OAAAiB,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KAAmCT,EAAA3P,EAAAmB,cAAA3E,EAA0C,sBAA7EmT,EAAA3P,EAAAmB,cAAA3E,EAAA,mBAAA3B,MAAA,WAAA8U,EAAA3P,EAAAmB,cAAA3E,EAAA,mBA+DC,CAAA+E,SAAAtC,KAAA0mK,wBAAAnlK,MAAAglK,KA9DC71J,EAAc3P,EAAAmB,cAAsB3E,EAA6B,mBAAA3B,MAAA,mBACvD8U,EAAA3P,EAAAmB,cAAuB3E,EAAA,uBAAAspK,YAAA,EAAAvkK,SAAAtC,KAAAwmK,iBAAAjlK,MAAAkO,KACvBiB,EAAA3P,EAAAmB,cAAO6mK,GAAkB,CAAAvgK,OAAAugI,kBAAA7hI,aAEjCwJ,EACE3P,EAAAmB,cAAA3E,EAAC,qBAAA+E,SAAqBtC,KAAKymK,uBAAES,cAAAz3J,EAAAmzJ,eFAjC,GEoBI,kBAgBD,SAAAhjK,GAGH,SAAC2pK,IAED,cAAA3pK,GAAMA,EAAN4pB,MAAAxpB,KAAAypB,YAAAzpB,KCpDA,SDiDY,EAAAupK,EAAA3pK,KAORa,UAAAoB,OAAA,WAWH,IAAAC,EAAA9B,KAAAH,MAAAhB,EAAAiD,EAAAjD,MAAAyM,EAAAxJ,EAAAwJ,OAAApE,EAAApF,EAAAoF,QAAAsB,EAAA1G,EAAA0G,KAAA6gI,EAAAvnI,EAAAunI,iBACH/6H,EAAApQ,OAACX,EAAA,sBAADW,CAAC,CA/DkCqoK,aAAar/J,EA+D/Cq/J,gEC7EmEnlK,IAAA,SAAA4E,GAAA,OAAAA,EAAAzH,UACT,OAAAmS,EAAA3P,EAAAmB,cAAA3E,EAAA,UAAAsB,QAAAyM,SAAAgD,SAAA26J,QAAA/hK,EAAA+hK,QAAAE,YAAAjiK,EAAAiiK,YAAA3pK,MAAAiV,EAAA,EAAAjV,SAQlD+pK,ED+CJ,GC9Ca,eAUhBC,GAAkB,CAClBP,QAAA1rK,EAAa,aAAAsrK,IACbM,YAAY,EACZ7D,YAAA/nK,EAAA,eAAAswJ,iFCEF4b,GAAA,IAAAlsK,EAAA,YAAAmsK,gBAAAF,cACEH,OAsBsC,SAAAzpK,YAKpC+pK,IAEF,IAAA7pK,EAAA,OAAAF,GAAsBA,EAAC4pB,MAAcxpB,KAAAypB,YAAAzpB,KASrC,qBATyB,SAAKuB,EAAA1C,EAAAyM,GAAY,IAAApE,EAAKpH,EAAMD,MAAAqH,QAA+DyM,EAAApS,EAAAoS,MAAApV,EAAAgD,EAAAhD,QACpH,OAAAmS,EAAmB3P,EAAGmB,cAAe3E,EAAA,sBAAAu0D,MAAA5zD,OAAA2+I,GAAA,EAAA3+I,CAAAqD,IAAA,SAAAO,GAAZ,IAAAojK,EAAApjK,EAAKojK,SAAAC,EAAArjK,EAAAqjK,gBAAY,OAAIz0J,EAAO3P,EAAAmB,cAAgB3E,EAAA,UAAAgE,MAAAhD,EAAUM,MAAMA,EAAOyM,OAAEA,EAAag6J,YAAQp+J,EAAAo+J,YAAAtyB,WAAAr/H,EAAAq/H,WAAAxzI,MAAAiV,EAAA,EAAAjV,MAAAoqK,YAAA9pK,EAAA+pK,iBAAAC,YAAA5iK,EAAA4iK,YAAA5f,SAAAv2I,EAAAhL,IAAAshJ,SAAAt2I,EAAA1L,IAAAouB,QAAA6uI,EAAAnjK,UAAAojK,SAGjHC,UAAK,WAIL,IAAAtjK,EAAAhC,EAAAD,MAAA2I,EAAA1G,EAAA0G,KAAAtB,EAAApF,EAAAoF,QAAAmiI,EAAAvnI,EAAAunI,uHACFvpI,WAfO,EAAA6pK,EAAwB/pK,KAiBrBa,UAAAopK,eAAA,WACA,MAA0B,QAA1B7pK,KAAAH,MAAAqH,QAAA4iK,YAEF,EAEF,MAIFrpK,UAAAoB,OAAA,eACEC,EAAA9B,KAAAH,MAAAyL,EAAAxJ,EAAAwJ,OAACzM,EAAAiD,EAAAjD,MAAgBqI,EAAApF,EAAAoF,QAAAsB,EAAA1G,EAAA0G,KAAA68J,EAAAvjK,EAAAujK,qBACf30J,EAAA3P,EAAAmB,cAAC3E,EAAA,aAAA0tE,OAAkBziE,EAAM48J,UAASplK,KAAAolK,UAAAL,YAAA/kK,KAAA+kK,YAAAM,gBAAAxmK,QAAAyM,SAAAs+J,YAAA5pK,KAAA6pK,iBAAAvE,YAAAp+J,EAAAo+J,iBA7BJ,wCAwD9B9jK,MAAA,mBAGF,MAAAA,MAAA,oBAEA,QAAAA,MAAA,UAUNuoK,GAAC,CACH,CAAAxoK,MAAAhE,EAAC,eAAAysK,WAAAxoK,MAAA,cA/FwC,CAAAD,MAAAhE,EA+FxC,eAAA0sK,SAAAzoK,MAAA,mCCxH0E8jK,YAAA/nK,EAAA,eAAAysK,WAG9DzD,aAAAgC,ICGA2B,GAA0C,SAAAtqK,YAEpDuqK,IACA,IAAArqK,EAAsB,OAAtBF,GAAsBA,EAAA4pB,MAAAxpB,KAAAypB,YAAoCzpB,YAC1DF,EAAAwmK,oBAAoB,SAAAtzB,8KCV4BlzI,EAAA0mK,iBAAA//I,EAAA,KAAA1H,EAAA,CAAA6jJ,eAQjD9iK,EAAU4mK,wBAAI,SAAAH,GACd,OAAWzmK,EAAAD,MAAAkpI,gBAAUtiH,EAAU,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAAq/J,gLCTP,OAAAzmK,EAAAD,MAAAkpI,gBAAAtiH,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAAo+J,YAAA/jK,MAGwBzB,EAAAsqK,oBAAA,SAAAtoK,GACS,IAAAP,EAAAO,EAAAP,MACH,OAAAzB,EAAAD,MAAAkpI,gBAAAtiH,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAA4iK,YAAAvoK,MAKtDzB,EAAA6mK,mBACA,SAAA70G,GAIKhyD,EAAM0mK,iBAAA//I,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAAq/J,aAAA92J,SAAA,CAAAqiD,YAGLhyD,WFXO,EAAAqqK,EAASvqK,GEgBtBuqK,EAAmB1pK,UAAOoB,OAAA,WACpB,IAAAqF,EAAAlH,KAAmBH,MAAAqH,QAGvBq/J,EAAAr/J,EAAAq/J,aACE92J,EAAA82J,EAAA92J,SAUJ4nG,EAAAkvD,EAAAj4J,iFCtCF,OAAYoC,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KACiCT,EAAA3P,EAAAmB,cAAA3E,EAAA,sBACkEmT,EAAA3P,EAAAmB,cAAA3E,EAAA,mBAAA3B,MAAA,WAI5D8U,EAAA3P,EAAAmB,cAAA3E,EAAA,oBAAA+E,SAAAtC,KAAA0mK,wBAAAnlK,MAAAglK,EAAA5sH,eAG7BjpC,EAAG3P,EAAAmB,cAAA,OAAAH,UAAA,cACd2O,EAAA3P,EAAAmB,cAAsB3E,EAAO,WAAYsB,SAAE,eAC3C6R,EAAA3P,EAAAmB,cAAqB3E,EAAO,QAAWsB,MAAE,GAAAqI,QAAA6iK,GAAAzsH,aAAAysH,GAAA,GAAAznK,SAAAtC,KAAAqqK,oBAAA9oK,MAAAwoK,GAAAn/J,KAAA,SAAAgE,GAAA,OAAAA,EAAArN,QAAA2F,EAAAo+J,iBAClD50J,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,cAEF2O,EAAA3P,EAAAmB,cAAA3E,EAAA,WAAAsB,SAAA,QAAqC6R,EAAA3P,EAAAmB,cAAA3E,EAAwC,QAAAsB,MAAA,GAAAqI,QAAAojK,GAAAhtH,aAAAgtH,GAAA,GAAAhoK,SAAAtC,KAAAoqK,oBAAA7oK,MAAA+oK,GAAA1/J,KAAA,SAAAgE,GAAA,OAAAA,EAAArN,QAAA2F,EAAA4iK,kBAA7Ep5J,EAAA3P,EAAAmB,cAAA3E,EAAA,mBAAA3B,MAAA,SAAA8U,EAAA3P,EAAAmB,cAAA3E,EA+BC,uBAAAspK,YAAA,EAAAvkK,SAAAtC,KAAAwmK,iBAAAjlK,MAAAkO,KA9BCiB,EAAe3P,EAAAmB,cAAA3E,EAAA,kBAAA+E,SAAAtC,KAAAsmK,oBAAAtzB,WAAAvjI,EAAAujI,cACPtiI,EAAA3P,EAAAmB,cAAE3E,EAAS,qBAAA+E,SAAAtC,KAAAymK,uBAA+BS,cAAAz3J,EAAAmzJ,WACxClyJ,EAAA3P,EAAAmB,cAAA3E,EAAqB,mBAAA3B,MAAA,cAE7B8U,EAAgB3P,EAAAmB,cAAA3E,EAAK,gBAAO,CAAAgE,MAAEkO,EAAWqiD,MAAQxvD,SAAItC,KAAA2mK,mBAAAtvD,cAAA8vD,SAAA,QAGvDgD,EHhBqD,GGiB7C,eAqBRI,GAAC,IAAAhtK,EAAA,YAAAitK,IACHv/B,YAAAw/B,IA/BqCv/B,UAAAg/B,qFAa7B,SAAN5uK,UACQ4C,OAAAX,EAAE,iCAAFW,CAAU5C,KC3BwB4/G,GAAAhhH,EAAA,wBCD5CilJ,UAAAjkC,GAiGA,EAAAwvD,eAhGExwK,EAAM,mBAQ0FghH,GAAA,EAAAwvD,WAAAlpK,MAAA,cAC5F,CAAAD,MAAA25G,GAAgB,EAAAyvD,UAAAnpK,MAAA,iBACd,SAAA5B,oBAAwFE,EAAA,OAAAF,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,YAC1FF,EAAA8qK,aAAiB,yDACrBtiB,EAAAphJ,EAAAohJ,WAAA7hI,EAA+F,KAAAvf,EAAA,CAAAohJ,kBAACuiB,mBAAA,SAAAj8J,GAC5F,IAAU9M,EAAGhC,EAAAD,MAAAqH,EAAApF,EAAAoF,WAAApF,EAAAinI,4DAHjB,EAAA+hC,EAA6FlrK,KAGwBa,UAAAoB,OAAA,WACjH,IAAAC,EAAW9B,KAAGH,MAAAqH,QAAAohJ,EAAAxmJ,EAAAwmJ,SAAAnJ,EAAAr9I,EAAAq9I,iEAClBzuI,EAAA3P,EAAAmB,cAAMwO,EAAA3P,EAAAoQ,SAAA,OAANpQ,EAAAmB,cAAA3E,EAAyF,8EAACmT,EAAA3P,EAAAmB,cAAA3E,EAAA,QAAAiE,MAAA,OAAA6iF,WAAA,WAAAH,QAAAokE,EAAAhmJ,SAAAtC,KAAA4qK,eACxEl6J,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,uDAClB2O,EAAM3P,EAAAmB,cAAA3E,EAAA,QAAA2J,QAAAo/I,GAAA/kJ,QAAAe,SAAAtC,KAAA6qK,4BAPA,GAOoF,sDAfU/oK,EAAA0G,KAAAkrB,EAAA5xB,EAAA4xB,SAAA7e,EAAA/S,EAAAoF,QAAAohJ,EAAAzzI,EAAAyzI,SAAAnJ,EAAAtqI,EAAAsqI,UAAAr9I,EAAAjD,MAChG,IAAA2J,6DACJzH,EAAAmB,cAAM,kGAA6FhE,OAAAg9G,GAAA,EAAAh9G,CAAA6sK,EAAA5rB,GAC/F,OAAAzuI,EAAsB3P,EAAAmB,cAAA3E,EAAA,iBAAAg/D,UAAA,+KCoDfyuG,GApCK,0CDCE,kBAAAvkJ,EAAA,yCAAAA,EAAA,EAAAzmB,KAAA,SAAA8B,0BAClB,SAAM5H,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAAkG,KAAA,sBAAN,SAAA0B,EAAA+iB,yDACuB,kBAAA4B,EAAA,yCAAAA,EAAA,EAAAzmB,KAAA,SAAA8B,0BACvB,SAAM5H,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAAkG,KAAA,sBAAN,SAAA0B,EAAA+iB,wDACI,WAAwB,OAAA4B,EAAA,yCAAAA,EAAA,EAAAzmB,KAAA,SAAA8B,0BAC5B,SAAM5H,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAAkG,KAAA,sBAAN,SAAA0B,EAAA+iB,4DACwB,kBAAA4B,EAAA,yCAAAA,EAAA,EAAAzmB,KAAA,SAAA8B,0BACxB,SAAM5H,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAAkG,KAAA,sBAAN,SAAA0B,EAAA+iB,uDACI,WAAqB,OAAA4B,EAAA,yCAAAA,EAAA,EAAAzmB,KAAA,SAAA8B,0BACzB,SAAM5H,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAAkG,KAAA,sBAAN,SAAA0B,EAAA+iB,sDAEyD,kBAAA4B,EAAA,yCAAAA,EAAA,EAAAzmB,KAAA,SAAA8B,GACE,OAAAA,EAAAN,OACE,gBAAAtH,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAAkG,KAAA,eACF,gBAAA0B,EAAA+iB,uDAGQ,kBAAA4B,EAAA,yCAAAA,EAAA,EAAAzmB,KAAA,SAAA8B,GACF,OAAAA,EAAAN,OACF,gBAAAtH,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAAkG,KAAA,eACJ,gBAAA0B,EAAA+iB,cCT3DomJ,qCDYuE,kBAAAxkJ,EAAA,yCAAAA,EAAA,EAAAzmB,KAAA,SAAA8B,GACM,OAAAA,EAAAN,OAClB,gBAAAtH,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAAkG,KAAA,eACM,gBAAA0B,EAAA+iB,cCdnEqmJ,sCDkBmB,kBAAAzkJ,EAAA,yCAAAA,EAAA,EAAAzmB,KAAA,SAAA8B,0BAAY,SAAM5H,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAAkG,KAAA,sBAAN,SAAA0B,EAAA+iB,cCrCAsmJ,sCDuCX,WAAQ,OAAA1kJ,EAAA,yCAAAA,EAAA,EAAAzmB,KAAA,SAAA8B,GAC1B,OAAAA,EAAAN,OACA,gBAAAtH,EAA4Cw+B,EAAgB,IAAAx3B,KAAAhH,EAAAkG,KAAA,eAC5D,gBAAA0B,EAAA+iB,cCrBKumJ,yCDwBL,kBAAA3kJ,EAAsD,yCAAAA,EAAA,EAAAzmB,KAAA,SAAA8B,GACtD,OAAAA,EAAAN,OACA,gBAAAtH,EAAgDw+B,EAAA,IAAAx3B,KAAAhH,EAAAkG,KAAA,eAChD,gBAAA0B,EAAqC+iB,cC1BrCwmJ,sCDoCA,kBAAiC5kJ,EAAS,yCAAAA,EAAA,EAAAzmB,KAAA,SAAA8B,GAC1C,OAAAA,EAAAN,OACA,gBAAiCtH,EAAEw+B,EAAW,IAAAx3B,KAAAhH,EAAAkG,KAAA,eAC9C,gBAAkC0B,EAAA+iB,yDAVlC,kBAAuC4B,EAAW,yCAAAA,EAAA,EAAAzmB,KAAA,SAAA8B,GAClD,OAAAA,EAAAN,OACA,gBAAAtH,EAA0Cw+B,EAAgB,IAAAx3B,KAAAhH,EAAAkG,KAAA,eAC1D,gBAAA0B,EAAqC+iB,uDAUrC,kBAAsC4B,EAAA,cAAc,2BAAAA,EAAA,EAAAzmB,KAAA,SAAA8B,GACpD,OAAAA,EAAAN,OACA,gBAAAtH,EAAoCw+B,EAAY,IAAAx3B,KAAAhH,EAAAkG,KAAA,eAChD,gBAAkC0B,EAAA+iB,oDAGlC,WAAsC,OAAE4B,EAAgB,yCAAAA,EAAA,EAAAzmB,KAAA,SAAA8B,GACxD,OAAAA,EAAAN,OACA,gBAAgCtH,EAAEw+B,EAAU,IAAAx3B,KAAAhH,EAAAkG,KAAA,eAC5C,gBAAA0B,EAAqC+iB,0DAIrC,kBAAsC4B,EAAU,yCAAAA,EAAA,EAAAzmB,KAAA,SAAA8B,GAChD,OAAAA,EAAAN,OAEa,gBAAAtH,EAAAw+B,EAAe,IAAAx3B,KAAAhH,EAAAkG,KAAA,qUCvDtBkrK,uEACsDC,yEAIjDC,wCACRC,uCACFC,EAADC,oCAAEC,EACFC,mCAA+BC,EAC/BC,iCAAmBC,EACnBC,kCAAwBC,EACxBC,sCAAcC,EACfC,uCAAAC,EAEMC,0CAA0CC,EAC/CC,iCAAcC,sCAA0BC,sCAAvBC,yEAxCnB,kBAAAnmJ,EAAA,yCAAAA,EAAA,EAAAzmB,KAAA,SAAA8B,GAA+B,OAAAA,EAAAN,OAC7B,gBAAwBtH,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAAkG,KAAA,sBACtB,SAAW0B,EAAC+iB,eA0Cd45E,GAJwCvkG,EAItC,WAIIA,EAAE,WAGAA,EAAW,YAGXA,EAAA,QAGHA,EAAA,YAGDA,EAAO,QAUZ2yK,GAAA,SAAAjtK,6C3BhF2B,8CAH5B,OAAA8Q,EAAA3P,EAAAmB,cAAkC,OAAA46B,0CAHXgwI,eAAA,SACgBxhK,OAAA,SAGXoF,EAAA3P,EAAAmB,cAAAw4F,GAAA,EAAAj0E,EAAA,GAAAitC,SAAA7jC,GAAA,wBAAAzZ,OAAApW,KAAAH,UAEAktK,E2BgF3B,C3B9EDz2I,EAAA,eAgEqBp8B,EAAUC,EAAAC,EAAA,sBAAA4yK,KAC1B9yK,EAAAC,EAAAC,EAAA,sBAAA6yK,KACJ/yK,EAAAC,EAAAC,EAAA,sBAAA8yK,KAE6BhzK,EAAeC,EAAAC,EAAA,sBAAA+yK,KA+C7C,IAAAC,GAAA,WAAe95J,KAAA+rF,eA2BbguE,GAAmBroK,EAAA04E,GACnB+gB,GAAuB,SAAA6uE,gBAAAtoK,EAAA,eAAAm9E,EAAAl/E,EAAAJ,GACvBA,EAAAI,QAAAy6E,OAzBY,SAAA6vF,SAAAtxK,IAAU,gBAAAwiG,GAAA,SAAA+uE,UAAA,CAAAC,OAHxB,SAAe1jJ,GACf,OAAAA,EAAe2jJ,QAAAN,UAGF,SAAA34J,OAAA,CACXk5J,QAAA,SACAC,iBAAgB,KACfC,SAAA,CAE8Bl+J,QAAA,CACUi+J,iBAAA,OAGNxsK,IAAA,CACSvF,KAAA,6BACHmP,IAAA,4BAEH5N,KAAA,CACD0wK,KAAA,CAEzBC,UAAG,EACfC,eAAa,EACbpkJ,OAAA,uBASA,gBAAAwhG,0BAEoB,mBAAA3sB,OAAX,SAAO93E,EAAA5lB,MAChB,SAAektK,EAAWltK,MAC3B,SAAA+lB,EAAA/lB,wIAEMssK,GAAe,yBAA+Ba,EAAA,uJACd,eACjC,sDASLtvD,WAAAgqC,EAAA,EAEM/pC,cAAS+pC,EAAiD,OAEzD,kBAAsB6X,MACxB,0BAA+Br1C,EAAgC,aAC/D,6BAAqB+iD,MACrB,yBAAgB/oG,MACjB,qBAAA0J,EAAA,MAEG,uBAA0Bi5D,MAC5B,kBAAqBtzH,EAAiB,MACtC,uBAASkvF,EAA8C,MACvD,wBAAqBA,EAAA,MACrB,uBAAgB07D,EAAA,MACjB,sBAAA15I,EAAA,MAEK,uBAAUA,EAAA,MACf,iBACJyoJ,WAAAzoJ,EAAA,EAEM0oJ,UAAS1oJ,EAAgC,EAC9CuiE,WAAOviE,EAA8B,cAC7B,gBA+BF2oJ,GAAO7nJ,EAAiC,EAbrC,eAET,kBACA,mEAIA,kHAMwD8nJ,GAAAD,GAAAt5J,QAAAu5J,GAAAt5J,KAAAs5J,GAAAD,GAAAt5J,OAAA,IAC3Cu5J,GAAOhtK,MACf,CAAAitK,QAAA,cAGG9J,GAAM,CAAArvI,MAAAmmD,eAGV+yF,QAAAt5J,OAAA0vJ,GAAA2J,GAAA7yF,SAAAkpF,GAAA5kK,KAAAuuK,YAEA,GAAA5J,GAAA,MAAAA,GAAuCrvI,gBAEvC23I,GAAOtqK,GACT,OAAG+jB,EAAA,EAAAzmB,UAAA,EAAAqkB,QAAA,WACN,IAAAojJ,8G4BhPD,gBAAA3lK,EAAA+iB,QACA,gBAAAR,QAAA61D,QAAAutF,IACA,gBAAAhpE,GAAgE,SAAAgwE,OAAoB/rK,6DCFpF,kBAEA,OAFAgsK,EAAA7pK,EAAAmgC,QACA5nC,OACAsxK,sZCFuB,OAAArqJ,QAAA61D,QAAAsuE,GAGqB,IAAAprJ,EAAAqX,EAAA,EAAA9X,OAAAE,GACW,OAAAO,EAIrB4vK,GAAA5vK,EAAAyF,QACH3B,KAAA,SAAA2D,GAI/B,GAAAA,EAAAmgC,OAKE,OAAAngC,EAAgBmgC,OAChB,GAAAngC,EAmBCuqD,UAAA,CAlBS,IAAApqB,EAAU,IAAVznC,EAAe,kBAEf,OADAynC,EAAAusE,iBAA2B1sG,EAAAuqD,UAC3BpqB,EAEA,UAAA5uB,MAAA,yCATVlV,KAAA,SAAS8jC,GAYP,OAXFA,EAAA5nC,OAWEuxK,GAAAvxK,EAAAP,IAAAmoC,UAEE,SAAAoyD,GAGF,eADEjhF,KAAK,+BAActZ,EAAAu6F,G9BtBK,SAAAh6F,EAAAg6F,GACJ,IAAAw3E,EAAA,SAAAhvK,GAEoB,SAAAgvK,IAC9C,OAAa,OAAAhvK,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KAUqD,OAZlEymB,EAAa,EAAAmoJ,EAAAhvK,GAIagvK,EAAAnuK,UAAAoB,OAAA,WACO,IAAAhG,EAAA6U,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KACI,uDACXT,EAAA3P,EAAAmB,cAAA,WAEW,kEACU,OAAAwO,EAAA3P,EAAAmB,cAAA2qK,GAAA,CAAAjxK,MAAA,kBAAAwB,EAAAP,GAAAhB,UAEmB+yK,EAbxC,CAc+Et4I,EAAA,eAChE0O,EAAA,IAAAznC,EAAA,YAAAqxK,GAGK,OAFW5pI,EAAA5nC,OACP4nC,EAAA6pI,WAAA,EACJ7pI,E8BIvC8pI,CAAA1xK,KA3BiDinB,QAAA61D,Q9ByBK,SAAAr9E,GACb,IAAAkyK,EAAA,SAAAnvK,GAEb,SAAAmvK,IACU,cAAAnvK,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KAMG,OARvBymB,EAAA,EAAAsoJ,EAAAnvK,GAI0BmvK,EAAAtuK,UAAAoB,OAAA,WAE5C,OAAA6O,EAAA3P,EAAAmB,cAAA2qK,GAAA,CAAAjxK,MAAA,2BAAAiB,KAEyCkyK,EATA,CAWhDz4I,EAAoB,eACV0O,EAAG,IAAAznC,EAAwB,YAAAwxK,UACrC/pI,EAAS5nC,KAAO,CACdP,GAAOA,EACRmI,KAAAnI,EACDoT,KAAA,IAEA8D,KAAAxW,EAAA,WAAwBjC,MACtBuH,OAAS,GACTmsK,QAAA,GACAx+J,KAAU,CACRi0F,OAAS,CACPz/F,KAAA,IAEHke,YAAA,GACI4uC,MAAA,GACCrtB,MAAE,CACDs/D,MAAA,GACNr/D,MAAA,IAEKuqI,YAAE,GACJl/H,QAAQ,GACR1/B,QAAA,KAGH20B,E8B9DqDkqI,CAAAryK,oBAqC9CgG,EAAOI,uFAIXJ,OAAU,MAAKC,IAAE,CAAI,iBAAa,SAAAC,KAAAC,IAAAN,wuGAC7BA,GAIRysK,KAED,SAAAtsK,EAAAI,SAEE,6EAGMJ,OAAU,MAAGC,IAAA,CAAQ,iBAAkB,SAAAC,KAAAC,IAAAN,EAD7C,uyFAEIA,iBAOAG,EAAAzI,EAA2BF,gBAKpBA,EAAAC,EAAAC,EAAA,sBAAAg1K,IACRl1K,EAAAC,EAAAC,EAAA,sBAAAi1K,IACF,MAAA7uK,EAAAtG,EAAA,QAEDumE,EAAAvmE,EAAmE,QACvD+2D,EAAA/2D,EAAAqhC,EAAAklC,GACbm8C,EAAA1iH,EAAA,QAEDwmC,EAAAxmC,EAAA,QACEo1K,EAAUp1K,EAAuB,QAClCq1K,EAAAr1K,EAAA,QAEDs1K,EAAAt1K,EAAA,QACiBu1K,EAAiBv1K,EAAA,QACjCw1K,EAAAx1K,EAAAqhC,EAAAk0I,MAEDv1K,EAAA,QAesB,oBAGnBy1K,EAAAtqJ,EAAAD,EAAAmqC,EAAAprC,EAAA8hD,EAAAiiB,GAED,IAAIpoF,EAAKE,UACPqlB,WAAKA,OACLD,UAAKA,OACLmqC,SAAOA,OACRprC,gBAEDnkB,KAAAimE,UACAjmE,KAAMkoF,WAAcA,EACpBloF,KAAI4vK,WAAO,OACTC,gBAAc,IAEPj2J,IAAA,iCACR81J,EAAA3uK,EAAA+zG,QAGCh1G,EAAAgwK,qBAEDA,cAEDpvI,EAAkB,EAAAlnB,GAAA,+BAAA1Z,EAAA8vK,WAAA,MAC8C,EAAAp2J,GAAA,mCAAA1Z,EAAA+vK,gBAAA,MAC/D,EAAAr2J,GAAA,qCAAA1Z,EAAA+vK,gBAAA,aAxBCzpJ,QAAO,6EA2BXupJ,EAAAlvK,UAAAqvK,YAAA,WAWC,WAXD9vK,KAAAolB,UAWC1iB,SAVC1C,KAAAI,KAAA,UAAAJ,KAAA+vK,eAGI/vK,KAAII,KAAA,MAAAJ,KAAiBgwK,UACrBhwK,KAAII,KAAA,MAAAJ,KAAkBiwK,cACtBjwK,KAAII,KAAA,MAAWJ,KAAGkwK,aAClBlwK,KAAAI,KAAO,MAAKJ,KAAAq/E,YAEdr/E,KAAAI,KACA,IAAAJ,KAAAq/E,YACHr/E,KAAAI,KAAA,MAAAJ,KAAAmwK,MAEDnwK,KAAAowK,WAAA,MAAApwK,KAAUqwK,eAIA5vK,UAAA4vK,UAAiB,eACrBC,EAAIxxK,SACJyxK,EAAeD,EAAQC,cAIzBzxK,SAAA0xK,iBAAA,0BACHrrK,OAAA,IAMDorK,KAAAlnK,OACiB,UAATknK,EAASE,UACe,aAAzBF,EAAiBE,UACvBF,EAAAG,aAAA,sBAEDJ,EAAAC,cAAAlnK,YAII8mK,WAGQ1vK,UAAS4+E,WAAA,aACgB,EAAA1jF,KAAA,uBAGzB8E,UAAOwvK,aAAA,gBACf7qJ,UAAMze,IAAS,gBAGPlG,UAAUuvK,SAAA,gBAClB5qJ,UAAMze,IAAS,QAGPlG,UAAUyvK,YAAA,gBAClB9qJ,UAAMze,IAAS,eAGPlG,UAASsvK,cAAE,aACa,EAAAp0K,KAAA,cAAA89F,aAAA,iCAGlCh5F,UAAa0vK,KAAA,cACbzvI,EAAe,EAAA/kC,KAAA,cACbqE,KAAI4vK,eACFA,WAAA,qDAIUpqJ,SAAI,6BACbqqJ,gBAAE,GAKP,IAAI1vK,EAASH,KAAEolB,UAAAjlB,YACbA,EAAIymB,uBACFzmB,EAAAymB,6BACEzmB,OAAYA,KAGX8iC,aACJ,EAAAtnC,KAAA,qBAAAsnC,YAAA,EAAAotB,MAAA,IAIClwD,EAAKwwK,OACP3wK,KAAKqlB,WAAUG,SAAA,qBAAA2qJ,MAAA,oIAGQ,gGAEIpvK,EAAAqvK,WAAAQ,EAAA,SAAA72J,gEAItB,iFAEFhZ,EAAA07B,OAAAm0I,EAAAC,MAGLpwK,UAAeqwK,iBAAA,WACf,IAAI3wK,EAAM8wD,EAAOlwD,EAAAqP,OAAApQ,KAAAolB,UAAAjlB,SAAA,CAAAymB,SAAA,kBACfxB,UAAIjlB,OAAcA,MAEhBM,UAAUswK,uBAAsB,SAAAr3J,EAAAre,SACjC2E,KACHA,KAAGI,KAAA,mBAEH/E,EAAAk9J,cAAkBl9J,EAAAk9J,aAAA,KACd73H,EAAa,EAAA/kC,KAAA,qBACfN,EAAIoqB,2BAEF,QAAU,aACXD,SAAA,oBAGHxlB,KAAAI,KAAA,MAAc,WACVsZ,EAAM8L,SAAO,0BAEb,SAAM,aACNA,SAAM,WAAY,eAElB,SAAW,aAEXA,SAAA,uCAES,aACPA,SAAC,kBAIPxlB,KAAAI,KAAA,eACK/E,EAAY+B,KAAA4zK,cAAA31K,EAAA+B,KAAAC,SACXqjC,EAA6B,EAAA/kC,KAAA,qBACzBsnC,YAAY,EACdotB,MAAA,EACF9tB,QAAMlnC,EAAW+B,KAAS4zK,aAC1Bp3F,QAAQ,MAMd55E,KAAAI,KAAA,eACK/E,EAAY+B,KAAA4zK,cACftwI,EAAgC,EAAA/kC,KAAA,qBAC/BsnC,YAAA,EAEHV,QAAoBlnC,EAAA+B,KAAA4zK,aACVp3F,QAAA,MAMR55E,KAAAkoF,WAAU+oF,sBACTjxK,KAAAI,KAAA,sBAAAI,EAAA,EAAAV,OAAA,oBAEE,IAAKxE,EAAOqpB,EAAAhe,EAAAuqK,EACVpxK,EAAUE,KACd,OAAAQ,EAAA,EAAAR,KAAA,SAAA8B,GAEO,OAAOA,EAAAN,OACL,OACT,OAAAnG,EAAA+B,KAAA4zK,cAEc11K,EAAAD,EAAAsnC,aAAAtnC,EAAA+B,KAAA4zK,cACM,CAAE,EAAChxK,KAAAmkB,cAAAljB,IAAA3F,EAAAqpB,cAHvB,MAIA,OAGD,OADeA,EAAA7iB,EAAA+iB,OACf,GAAA3mB,OAAAoxK,EAAoC,EAApCpxK,CAAoC5C,IAAA4oB,QAAAS,EAAA3kB,KAAAmkB,cAAAnkB,KAAAimE,UACnC,OAEct/D,EAAA7E,EAAA+iB,QACfqsJ,EAAA3B,EAAmC,EAAA3gF,iBAAAjoF,KAGrB3G,KAAAuvD,SAAA,kBAAAzvD,EAAAslB,UAAAze,IAAAuqK,KAEdpvK,EAAAN,MAAA,EACM,KAAW,EAAG,iBAKzBxB,KAAAI,KAAA,uDAEDsgC,EAAmB,EAAA/kC,KAAA,eAAiBN,EAAe+B,KAAA4zK,cAEnD31K,EAAA+B,KAAA4zK,aAAA,KAMOhxK,KAASI,KAAA,MAAgB,WAC9B,GAAA/E,EAAoB+B,KAAA4zK,cAAS31K,EAAA+B,KAAAC,QAAA,CAC9B,IAAA8zK,EAAA91K,EAAA+1K,iBAAA/1K,EAAA+B,KAAA4zK,cAAAt0K,MAEerB,EAAgBf,eAAAe,EAAAsB,OAAAw0K,wKC5UhC5zK,IAAA,oEAAAmc,MAAA23J,OAAArxK,KAAAI,KAAA,oBAAA/E,EAAA+B,KAAA4zK,cAAY31K,EAAA+1K,iBAAA/1K,EAAA+B,KAAA4zK,cACW11K,MAAA0U,OAAA,CACuB,IAAAshK,EAAAj2K,EAAAsnC,aAAAtnC,EAAA+B,KAAA4zK,cAE3BM,EAAAthK,OAAA5D,MAAAklK,EAAAthK,OAAA5D,KACkBklK,EAAAzvK,YAcnC7B,KAAAI,KAAA,iBACU/E,EAAOk2K,wBAGPvxK,KAAAI,KAAA,uBAEJ/E,EAAQm2K,iBAIZxxK,KAAKI,KAAA,YAAiB,WACvB/E,EAAAo2K,eAGCzxK,KAAKI,KAAI,MAAE,WACTN,EAAAslB,UAAgBze,IAAA,oBAGlB3G,KAAAI,KAAA,iBACI/E,EAAQoqB,2BAER,MAAO,aACRqrJ,qBAEH9wK,KAAGI,KAAA,iBAECsgC,EAAoB,EAAA/kC,KAAA,4BAEvByE,KAAA,iBAEGsgC,EAAwB,EAAA/kC,KAAA,sBAI5BqE,KAAAI,KAAO,MAAK,WAGd,IAAAsxK,EAAAlC,EAA2B,EAAAxkI,WAAAC,SAAAvqC,MAoC1BixK,cAAA,oBAnCOhvK,OAAAsoC,SAAWrN,KAAAj7B,OAAAsoC,SAAArN,KAAA8zI,KAGhB/B,ED0CmB,eChCfz5G,KAEDA,0BAPY,EAAA4lB,QAAA,gBAAA6zF,kBAmBZ9sK,EAAKzI,EAAoBF,gBAITA,EAAsBC,EAAEC,EAAiB,eAAsB,OAAAw3K,IAC9E,IAAAxzI,EAAAlkC,EAAA,QAEWmkC,EAAQnkC,EAAAqhC,EAAA6C,GACzByzI,EAAA33K,EAAA,QAED2pG,EAAA3pG,EAAA,QACU43K,EAAA53K,EAAA,QACM63K,EAA8B73K,EAAmB,UAWpC,sBAIf4zE,EAAKze,EAAOhqC,EAAA2gD,QACrB8H,KACH9tE,KAAGqvD,YAEHrvD,KAAAqlB,WAAeA,EAChBrlB,KAAAgmE,cAEDhmE,KAAA6P,gBARQuW,QAAU,MAAS,YAAM,aAAa,iBAW5C3lB,UAAAoP,KAAA,gBACE4+B,YAAc,MAGZhuC,UAAAQ,IAAA,SAAA+D,EAAAlH,YAWI,oBAPFkoE,YAAYnoE,QAAQmH,EAAMlH,EAAC,SAAkByD,EAAA6vC,gBAC9CzrC,QAAApE,GAAMA,EAAI,GAEVA,UAKCN,IAAA4iG,EAAqE,EAAEjgE,wBAExE6K,YAAAzpC,GACFhF,KAAA8tE,GAAAG,KAAAjuE,KAAAyuC,YAAAzpC,IAGEhF,KAAOojH,eAAap+G,QAhBnB/D,IAAA4iG,EAA6C,EAAAjgE,sBAkBlDnjC,UAAA2iH,eAAA,SAAAp+G,GAED,IAAAlF,EAAAE,KACEgyK,EAAWnuE,EAAsC,EAAAp1D,YAAAzpC,gBAEhDhF,KAAA8tE,GAAAgV,OAAA,CAAA3jD,QAAA,oBAAAn6B,EAAA,yBAEQhF,KAAG8tE,GAAAsyC,sBACX0xD,EAAA,GAAAE,EAAA50K,MACD8D,KAAA,SAASwtK,GAGX,GAAO5uK,EAAA2uC,YAAczpC,GACtB68G,EAAA3nC,QAAAp6E,EAAA2uC,YAAAzpC,QADC,CAME,IACIkxD,EAD2C,IAA9Bw4G,EAAKtrK,gBAAsB+B,OAE1CrF,EAAAuvD,UAAS4iH,YAAAvD,EAAAtrK,gBAAA,CACV2B,iBAAAitK,IAGG,IAAKtD,EAAKtrK,gBAAW4uK,KAClB3uK,WAAGqrK,EAAArrK,aACTjG,KAAA40K,EAAA50K,KAID0C,EAAM2uC,YAAEzpC,GAAAkxD,IACAgkB,QAAMhkB,qBAEDkhC,gBACF5xE,SAAG,eAAAwsJ,EAAAhtK,KAAA,iBAAAoyF,EAAAvxF,iBAEN2lF,WAEP/qF,UAAAyxK,OAAA,eACFzjI,EAAAo1D,EAAA,EAAAp1D,YACF,OAAAvwC,OAAAgH,KAAAupC,GAAArtC,IAAA,SAAA4D,GAAA,OAAAypC,EAAAzpC,MACFmtK,EAAA1xK,UAAA2xK,YAAA,0EAEM,OAAS/zI,EAAgBt9B,EAAAq6E,OAAA3sC,EAAA,WAE/B0jI,EAAA1xK,UAAA4xK,qBAAA,WAED,IAAAC,EAAA,UACetyK,KAAAuyK,uBAAAD,4HCjMf,IAAAE,EAAA,UAAAn0I,EAAAt9B,EAAA44B,KAAAkqE,EAAA,EAAAp1D,YAAA,SAAAltC,EAAA+E,GAAA,GAAA/E,EAAAnE,MAAAmE,EAAAnE,KAAAo0F,QAAA,CAAkC,IAAAihF,EAAA,CAAAlxK,MAAA+E,EAAAtB,KAAAsB,EAAAlJ,KAAAmE,EAAAnE,KAAA6S,KAAA3J,GAIX,YAAX/E,EAAWnE,KAAAP,GACrB41K,EAAaxiK,KAAAzJ,OAAA0zJ,aAAA,KAEd,cAHW34J,EAAWnE,KAAAP,GAUH41K,EAAcxiK,KAAKzJ,OAAA0zJ,aAAA,KAGnC,UAAA34J,EAAAnE,KAAAP,KACE41K,EAAAxiK,KAAAzJ,OAAA0zJ,aAAA,MAIEsY,EAAe5iK,KAAK6iK,GAEpBnsK,IAAAu9F,EAAa,EAAAjgE,oBAEf6uI,EAAA,CAAAlxK,MAAA,KAAAyD,KAAA,UAAA5H,KAAAmE,EACEnE,KAAA6S,KAAS3J,GACPksK,EAAA5iK,KAAoB6iK,OAUfvrK,KAAAwrK,iKCtCf,EAEA,0UFyGS,oDG1Gcb,EAAA,EAAA/1F,QAAA,gBAAAq2F,IAsBbQ,KACA,SAAA9vK,EAAAzI,EAAgBF,GAO1B,aAqC8BA,EAAAC,EAAAC,EAAA,sBAAAw4K,IAC9B,IAGAA,EAHAjgH,EAA6Bz4D,EAAA,QAC7B04D,EAA8B14D,EAAAqhC,EAAAo3B,IAG9B,SAAAigH,GAEOA,EAAS,KAAe,OAC7BA,EAAY,YAHd,KAIWA,EAAkB,KAiBjBx4K,EAAc,EAhBvB,SAAAyF,GAED,IAAIk7B,EAAMl7B,EAAIk7B,KAAK83I,EAAUhzK,EAAAgzK,2BAC3BjgH,EAAyC7xD,EAAAmB,cAAA,OAAAH,UAAA,mBACzC6wD,EAAA7xD,EAAAmB,cAAgD,UAAAm0B,QAAA,WAChDw8I,EAAAD,EAAAE,OACM/wK,UAAUg5B,IAAA63I,EAAuBE,KAAE,aAC1ClgH,EAAA7xD,EAAAmB,cAAA,KAAAH,UAAA,gBAEG6wD,EAAuB7xD,EAAAmB,cAAA,UAAAm0B,QAAA,WAClBw8I,EAAID,EAAAG,OAEPhxK,UAAUg5B,IAAa63I,EAAYG,KAAA,eACtBhyK,EAAAmB,cAAA,KAAAH,UAAA,+BAaVc,EACCI,OAMVP,EAAI,+EAGEG,OAAI,MAAAC,IAAC,CAAC,iBAAY,SAAAC,KAAAC,IAAAN,EAFtB,mhCAGOA,QAUR,SAAAG,EAAAzI,EAAAF,sBAOOA,EAAW,UAIfA,EAEA,UAIHA,EAAAqhC,EAAAjF,GAOHwxG,EAAA5tI,EAAA,UAEEA,EAOI,UAJMA,EAAmB,UACAA,EAAAqhC,EAAAsuC,KAK7B3vE,EAAmB,UAWV,SAAA8R,OACTnM,EAAEmM,EAAAnM,MAAA0B,EAAAyK,EAAAzK,MAAAQ,EAAAiK,EAAAjK,UAEF+6B,EAAAj9B,EAAQi9B,aACApsB,EAAA3P,EAAAmB,cAAe,OAAA46B,QAAA/6B,UAAA,iBAAAA,GAAAR,eAUfyxK,EAAWl2I,EAAAj9B,mFAsBd,uBACF,IAAAozK,EAAA,SAAAjtK,GAED,OAAMA,QACG,KAER2gB,EAAA5lB,EAAA4E,QAAAK,KAEGA,IAAK,IAEC9H,OAAAX,EAAa,SAAbW,CAAa8H,GAGd+S,OAAE+jB,EAAAogI,kBACP19J,MAAUwzK,EAAOnzK,EAAOwpI,kBAAa6pC,SAEpC,6BACFD,EAAA,SAAAjtK,UACD2gB,EAAW5lB,EAAA4E,QAAcK,KAEzBA,EAAMA,EAAAS,KAAA,OAENT,KAEAnG,EAAAL,MAAYwzK,EAAKnzK,EAAAwpI,kBAAyB6pC,SAc5C,aAAAn/J,KAAA,KACAo/J,EAAgBj1K,OAAAk1K,EAAY,EAAZl1K,CAAY4+B,EAAApoB,MAAAs+J,EAAAt+J,MAAA,mBAC1Bu+J,EAAiB,SAA+BjtK,UAChDA,QAEK,iBAWGgtK,EAAAnzK,EAAAwpI,iBAAA8pC,GAAaD,qBAmBC,2BACV98G,EAAYt5B,EAASt9B,EAACwzK,EAAA3pC,EAAAjlG,SACnCpkC,UAEDo2D,OAAOA,EACTp2D,KAAE88B,QA/HE98B,KAAAR,QAgINQ,KAAAgzK,SAAChzK,KAAAqpI,kHC5RsD,YAY4D,QAAAjjI,EAAA4sI,EAAA7tI,OAAAiB,EAAA,EAAAA,IAQvF,GAAA7E,GAAAyxI,EAAA5sI,EAAA,GAoC5B,OAAAlI,OAAAk1K,EAAA,EAAAl1K,CAAA86C,EAAA5yC,GAAAtG,EAAAN,MAAAuU,MAcE,OAAA7V,OACEk1K,EAWD,EAZDl1K,CAYCyoB,EAAA5lB,EAAAie,MAAAg6B,GAAAl5C,EAAAN,MAAAuU,OAtBD/T,KAAAkzK,MAAA,SAAiBlnK,GA2FjB,IAAAnM,EAAAmM,EAAAnM,MACA0B,EAAAzB,EAAAs2D,OAAApqD,EAAAzK,OAEA,GAAAolB,EAAS5lB,EAACqb,SAAA7a,GAAmB,CACnBzB,EAAQskC,MACT7iC,EAAQzB,EAAMskC,IAAA7iC,EAAAzB,EAAcg9B,MAAAzgB,WAGjC,IAAIq2H,EAAG5yI,EAAYg9B,MAAA41G,UACpB,GAAAA,EAAA,CAAM,IAAOxnI,EAAKpL,EAAQk9J,iBAAAr+I,OAAApd,IACnB2J,IACP,SAAAwnI,EAAM7yI,EAAA4mB,EAAA,KAAA5mB,EAAA,CAAAi9B,MAAArW,EAAA,KAAA5mB,EAAAi9B,MAAA,CAAAhvB,gBAAA5C,QAAA,YAEN,UAAAwnI,IACa7yI,EAAQ4mB,EAA6B,EAAC,GAAA5mB,EAAA,CAAAi9B,MAAArW,EAAA,KAAA5mB,EAAAi9B,MAAA,CAAA5xB,eAMpD,MAAMizJ,EAAY,MAEdr+J,EAAMg9B,MAAEu2I,gBACVlV,EAASvuJ,KAAQ,0BACZktB,MAAA21B,KAAA,CAEN,IAAAvlD,EAAAlB,EAAAkB,IACDpP,EAAA,GAEF,GAAAoP,EACQ,QAAA9G,EAAA,EAAAA,EAAA8G,EAAA/H,OAAAiB,IACKtI,EAAE,UAAAsI,GAAA,CAAA7E,MAAA2L,EAAA9G,MAEN,QAAA7E,SACL,IAAMs8J,EAAQ/9J,EAAKupI,iBAAkBvpI,EAAAg9B,MAAaghI,QAAAhgK,EAAA0H,oBAC5Cu4J,EAAcj+J,EAAUupI,iBAAWvpI,EAAAg9B,MAAAkhI,YAAAlgK,GACzCmgK,EAAYn+J,EAASg9B,MAAOohI,gBAAY,YACzCC,EAAAvuJ,KAAA,yBACDrO,EAAAmP,EAAA3P,EAAAmB,cAAA,KAAA07B,KAAAigI,EAAArpJ,OAAAypJ,EAAAqV,qBAAA,EAAAC,sBAAAxV,EAAA9xH,iBAAA,SAAA1qC,UAIMzB,EAAAkzK,OAAAr+J,aACEwpJ,EAAAvuJ,KAAA,+BAEJrO,EAAMmP,EAAY3P,EAAOmB,cAACwO,EAAA3P,EAAAoQ,SAAA,KACxB5P,EACEmP,EAAE3P,EAAAmB,cAAA,YACFwO,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA,0BAAAuxK,qBAAA,EAAAC,sBAAA,mBAAAtnI,iBAAA,SAAAunI,WAAA3zK,EAAAw8G,SAAAo3D,cAAA5zK,EAAA49J,YAAAiW,gBAAA,MACEhjK,EAAO3P,EAAWmB,cAAQ,KAAAH,UAAA,wBAChC2O,EAAU3P,EAAAmB,cAAA,KAAAH,UAAA,0BAAAuxK,qBAAA,EAAAC,sBAAA,mBAAAtnI,iBAAA,SAAAunI,WAAA3zK,EAAAw8G,SAAAo3D,cAAA5zK,EAAA49J,YAAAiW,gBAAA,KACFhjK,EAAI3P,EAAAmB,cAAa,KAAAH,UAAA,0BAG5Bo8J,EAAAh5J,SAEDpD,EACEo8J,EAAA13J,KAAA,MAEGktK,EAAW,CAAApyK,QAAA1B,MAACA,EAAAkC,gBDoEO,GC1DjB7H,EAAmBC,EAAcC,EAAA,sBAAAw5K,UAQjB,SAAEh0K,YAEzBuhK,EAAMthK,OACNC,EAAMF,EAAUG,KAAAC,KAAWH,IAAKG,cAEhC6zK,aACE,gBAES,aAGE,SAAIpW,OACXxtJ,EAAKnQ,EAAAG,MAAAm7E,OAGV04F,EAACh0K,EAAAG,MAAA8zK,cACF9jK,IAAAwtJ,GAEFqW,EAAA,OACM7jK,EAAKwtJ,GAER,SAAAqW,EACDA,EAAO,MAhLD7jK,EAAO,KAGbnQ,EAAKe,SAAW,CAAAu6E,OAAKnrE,EAAY8jK,cAAOD,OAGtCE,WAAY,SAAI33D,EAAAohD,GACf,IAAA37J,EAAAhC,EAAAD,QAAAiC,EAAAk9J,gBACJ,OADIl9J,EAAAi/J,OAGL,CAAAvqJ,OAAA6lG,EAAAnvG,IAAAuwJ,EAAqCwW,GAGlB,CAAAz9J,OAAOinJ,EAAevwJ,IAAKmvG,EAAA43D,MAI1CC,YAAW,SAAY73D,EAAKohD,GAC5B,IAAI37J,EAAChC,EAAMk0K,WAAW33D,EAAcohD,GAAavwJ,EAAApL,EAAAoL,IAAAsJ,EAAA1U,EAAA0U,OAEnD,GAAAtJ,EAAA,EACIpN,EAAAq0K,OAAe39J,OAElB,CAED,IAAA7C,EAAA7T,EAAAG,MAAAuI,KAAAsL,OAAwC2pJ,GACxCl8J,EAAAoS,EAAArF,OAAArN,IAAAo7G,GACInmG,QAAWxG,IAAI,QAAMnO,EAAKoS,EAAU3O,QAIxClF,EAAIs0K,cAAe,SAAWpoK,GACtB,IAAAlK,EAAAhC,EAAAG,MAAEuI,EAAA1G,EAAA0G,KAAK4yE,EAAEt5E,EAAAs5E,OAAA24F,EAA8BjyK,EAAAiyK,cACzCl/J,EAAC7I,EAAAnM,MAAc49J,EAAc5oJ,EAAG4oJ,YAAaphD,EAAAxnG,EAAgBwnG,SAAAv/E,EAAAjoB,EAAAioB,MAClEtmB,EAAA1W,EAAAk0K,WAAA33D,EAAAohD,GAAAjnJ,OAEDxJ,EAAAxE,EAAAsL,OAAA0C,GACI69J,EAAWj5F,IAAU5kE,EASrB,OARGxJ,IACDA,EAAC,CACNhI,KAAA,KAAAy4J,EAAA,MACFhpJ,OAAA,GAEDnG,OAAA,IAAA/Q,EAAA,YACAwW,KAAAxW,EAAA,UAAAkW,QAEW/C,EAAgB3P,EAAAmB,cAAiB,MAAM,CAAAH,UAAa,kBAAA+6B,QAAAzG,QAAA,kBAAAv2B,EAAAo0K,YAAA73D,EAAAohD,KAC3DzwJ,EAAOhI,KACRqvK,GAAA3jK,EAAA3P,EAAAmB,cAAA4lI,EAAA,GAAAisC,oBAIDj0K,EAAAw0K,oBAAuB,SAAM99J,GAC3B,IAAI3U,EAAQ/B,EAAI02D,SAAKhgD,GACrB,OAAI3U,GAA4BA,EAAM0yK,QAEtC1yK,EAAA0yK,QAEEZ,kBAEU,SAAY9zK,SACfA,EAAKw8G,SAAAohD,EAAA59J,EAAA49J,YAAAn3J,EAAAzG,EAAAyG,IAAAmuE,EAAA50E,EAAA40E,SACV30E,EAAMk0K,WAAO33D,EAAAohD,GAAAvwJ,EAAApL,EAAAoL,IAAAsJ,EAAA1U,EAAA0U,WACNvW,MAAGuI,OACT0E,EAAA,IACKsnK,EAAAhsK,EAAAsL,OAAA5V,OAAAX,EAAA,gBAAAW,CAAAsK,EAAA0E,KACPunK,IAAAj+J,GAAA,GACF+9J,EAAAC,EAAA10K,EAAAs0K,cAAAt0K,EAAAw0K,oBAAA99J,GAED,OAAO9F,EAAA3P,EAAAmB,cAAA4lI,EAAA,GAAA7+E,MAAAnpD,EAAA40K,SAAAjX,cAAAn3J,MAAAmuE,SAAA4nC,YAAAk4D,EAAA,CACLhzK,MAAMA,EACN2L,IAAKunK,EACLj+J,OAAOhO,EAAEsL,OAAA0C,GACTb,MAAA7V,EACDD,YA0GGC,EAAA60K,eAAE,SAAA3nK,GACA,OAAAlN,EAAAD,MAAAkhK,OACMjhK,EAAK80K,YAElB90K,EAAA02D,SAAAxpD,EAAAtQ,OAAAmC,OAGDiB,EAAIG,MAAQ,CAERuI,KAAA3I,EAAA2I,MAGJ1I,EAAI02D,SAAQ12D,EAAA88J,YAAA/8J,KACV60K,SAAa,IAAA5sC,EAAY,GACzB+sC,cAAc,GACdC,YAAW,IAGXh1K,WA3Cc,EAASqhK,EAAOvhK,KA8ChCa,UAAAy7D,mBAAA,SAAwCn4B,EAAAi4B,GACxC,IAAMl6D,EAAA9B,KAASH,MAAK2I,EAAA1G,EAAa0G,KAAM2S,EAAErZ,EAAAqZ,OAAA6jJ,EAAAl9J,EAAAk9J,WAAA+B,EAAAj/J,EAAAi/J,OACnClsJ,EAAA7U,KAAAC,MAAcm7E,EAAYvmE,EAAEumE,OAAO24F,EAAAl/J,EAAAk/J,cACnCgB,EAAcvsK,IAASu7B,EAAUv7B,KACnCwsK,EAAgBhW,IAAEj7H,EAAAi7H,YACpBh/J,KAAKH,MAAAkhK,SAAch9H,EAAMg9H,QAC1B/gK,KAAAH,MAAAohK,eAAAl9H,EAAAk9H,cAEDjhK,KAAAH,MAAAghK,cAAA98H,EAAA88H,YAxNA,IA0NMkU,GAAcC,IAKpBh1K,KACE00K,SAAAn8G,YAnOFw8G,GAAiB55J,IAAA4oB,EAAA5oB,UACjBnb,KAAAw2D,SAAex2D,KAAA48J,YAAA58J,KAAAH,QAEfk1K,GAAmBhU,IAAAh9H,EAAAg9H,OAAA,CACnB,IAAAhsJ,EAAA/U,KAAAH,MAAAhB,EAAAkW,EAAAlW,MAAAo2K,EAAAlgK,EAAAkgK,eAoPJj1K,KAAC40K,YAAA11K,KAAA+I,IAAApJ,EAAA2J,EAAArD,OAAA8vK,IAEcF,GAAA35F,IAAApf,EAAAof,QAAA24F,IAAA/3G,EAAA+3G,qMC1Tf,KAAAvrK,KAAAsL,QAAAtL,EAAAsL,OAAA3O,QAAAgW,GAAA,aAAA+5J,EAAAh2K,KAAA+I,IAAApJ,EAAA2J,EAAAsL,OAAA3O,OAAA8vK,GAAA,OAAAzsK,EAAAsL,OAAA1S,IAAA,SAAA4L,EAAAtQ,GA2BI,IA3BE,IAAAd,EAA8BoR,EAAGhI,KAyB1B83B,EAAoB,KAEhB12B,EAAC,EAAMA,EAAC+U,EAAChW,OAAgBiB,IAAwB,CAC9D,IAAAX,EAAA0V,EAAA/U,GAEEyV,EAAkB3d,OAAKX,EAAO,gBAAZW,CAAgBuH,EAAAuoB,SAC9B,GAAIpyB,EAAMmgB,MAAAF,GAAA,CACjBihB,EAAAr3B,EAEiBA,EAAI8Q,QAEP3a,EAAGA,EAAAiC,QAAAge,EAAApW,EAAA8Q,QAGP,OAGT,OAEEivI,OAAA5pJ,EACIiD,MAASq2K,EAChBX,QAAAY,EAAAnoK,EAAAyH,QAAA,GAAAqoB,EAAAh9B,EAAAD,WAWUshK,EAAA1gK,UAAAoB,OAAA,WACL,IAAIC,EAA+B9B,KAAOH,MAC9Cm/J,EAAAl9J,EAAAk9J,WAAA6B,EAAA/+J,EAAA++J,YAAAI,EAAAn/J,EAAAm/J,aAAAF,EAAAj/J,EAAAi/J,OAAAliK,EAAAiD,EAAAjD,MAAAyM,EAAAxJ,EAAAwJ,OACM9C,EAAMxI,KAAGC,MAAAuI,KACb,IAAAA,IAAaA,EAAEsL,SAActL,EAAAsL,OAAS3O,OAEtC,OAAMuL,EAAc3P,EAAKmB,cAC3B,8BAEF,IAAAkzK,EAAA5sK,EAAAsL,OAAA3O,OAEWmR,EAAiB9N,EAAGrD,QAAC65J,EAA2B,KACpDqW,EAAmBn2K,KAAMyJ,IAAAs4J,EAASmU,GACzCE,EAAAtW,GAAA6B,EAAA,IAEF,GAAAE,EAAA,CACa,IAAAwU,EAAAH,8EC3EbI,EAAAzU,EAAA0U,GAAA,EAAAz1K,KAAA6zK,cAA0C7zK,KAAA6zK,aAAA,whBCA1C5S,aAAA,EACAF,QAAA,EACAkU,eAAA,OHoOwB,qBIpOxBS,KACA,SAAA7yK,8qBCQUA,EAAAzI,EAA2BF,gBAItBA,EAA2BC,EAAAC,EAAA,sBAAAi0K,IAE5B,UAAkDn0K,EAAA,QAEjB,GACtCE,EAAA,mBAIDyI,EAAOI,sEAKXL,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,EADC,2sEAELG,EAACI,QAAAP,sBC9B4E,IAAAA,EAAA,sEAI7EC,OAAMC,QAAAC,OAAkB,MAAGC,IAAA,kBAAW,SAASC,GAACA,EAAAC,IAAAN,EAFR,yvCAGxCG,EAAMI,QAAAP,GAMEizK,KASN,SAAc9yK,EAAAzI,EAA0BF,sBAOjCA,EAAA,QAGP2vE,EAAA3vE,EAAA,QAEIysB,EAAgBzsB,EAAqDqhC,EAAAsuC,GAEzEvzC,EAAMp8B,EAAwB,QAE9BwW,EAAwBxW,EAAQqhC,EAAAjF,KACnBp8B,EAAK,UAKRA,EAA6B,YAGvB,UACAA,EAAAqhC,EAAAg8G,OAGH,YAGN,YAIJ,+CAaFr9I,EAAA,UAOOgE,OAAA03K,EAA6B,YAA7B13K,CAA6B,WACzBA,OAAA03K,EAAiB,YAAjB13K,CAAiB,eACvBA,OAAa03K,EAAgB,YAA7B13K,CAA6B,WACxB,SAAIojB,EAAA/d,EAAoByR,WAC7BzT,MAAMwgB,EAAiBjgB,EAAAigB,WAAA8zJ,EAAA/zK,EAAA+zK,SAAAhhK,EAAA/S,EAAAyf,UAAAxM,EAAAF,EAAAg0B,MAAAitI,EAAA/gK,EAAA6M,OAAAm0J,EAAAhhK,EAAAzO,IAAAsP,EAAAf,EAAAi0B,IAAAktI,EAAApgK,EAAAgM,OAAAq0J,EAAArgK,EAAAtP,MACvByb,EAAAm0J,eACD,IAAAJ,GAAAC,IAAA/2J,EAAA1Y,KAAA0vK,IAAAh3J,EAAAnjB,KAAAsJ,QAAA8wK,IAAAj3J,EAAA1Y,MAAmByb,EAAYo0J,OAAAN,KACzBtyK,EAAC,sBAJP,SAUM,SAAKA,EAAA6yK,OACd/vJ,EAACvkB,EAAAspB,EAAAvW,EACDwhK,EAAA9yK,EAAAhC,MAAAggB,UACH+0J,EAAA/yK,EAAAhC,MAAAzC,SAAAy3K,qBAAAF,GAAA1jK,4ECzFK,IACY6jK,GADIp9G,EAAAq9G,EAAuBl1K,OACnB1F,KAAAsJ,OAAAi0D,EAAAv9D,KAAAgmB,WAAA1c,OACfuxK,EAAUt9G,EAAA88G,eAAA5vK,IAClBqwK,EAAA,CAEK5xE,OAAA,CACYz+F,IAAKowK,EACvB90J,OAAA40J,EAEqC9zK,KAAA,IAEnCwf,MAAO,CACC5b,IAAAowK,EAEA90J,OAAA40J,EAEK9zK,KAAA,OAKRk0K,sBAASr8G,EAAA,EAAAluB,OAAAsqI,GAAAz3K,KAAAyJ,IDuDX,KCvDWxD,OAAAqxK,WAIZh7F,GAAIn1D,EAAY,CAAAgP,MAAAmmD,eAITi7F,IAAKA,EAAAxhK,OAAAnT,EAAA+0K,EAAAp7F,SAAA35E,EAAA/B,KAAA82K,GAGd,WAAAxwJ,EAAQ,MAAuBA,EAAkBgP,gBAK/CyhJ,EAFcvzK,EAAAhC,MAAYw1K,UAERl7K,KAAAouC,MAAA,EAAAosI,EAAAxtI,MAAAjnB,UACT,QAAWrb,KAAMuwK,eACxBE,EAAmBvwJ,EAAA,EAAM6vJ,GAAQW,EAAAD,EAAEhiK,QAAAiiK,EAAAhiK,KAAAgiK,EAAAD,EAAAhiK,OAAA,OAAxBiiK,EAAI11K,wBACN63D,EAAa88G,eAAgB5vK,IAAC,EDoCxC,2GChCD/C,EAAO2zK,kBDgCN,KChCW/xK,qICXdwV,EAAAE,EAAAE,ECDFo8J,IChBQj9K,EAA8B,YAU/B,UASAA,EACoDqhC,EAAA+wC,eAvB3D8qG,EAACl9K,EAAAqhC,EAAA6/C,KAiCOlhF,EAAyB,UAGzBA,EAAwB,UAG5BA,EAAKqhC,EAAAwgD,KAGH7hF,EAAA,QA7C2BqD,EAAArD,EAiDlC,qDF5CCm9K,EAAO,SAAAx3K,GACP,IAEWsb,EAVF,SAAW3b,GAAS,MAAE,CAC/B83K,cAAOp5K,OAAAq5K,EAAA,IAAAr5K,CAAAqc,MAAAkM,EAAA,w/BAAAjnB,EAAAgb,WAAAstF,WAAAE,UAAAxoG,EAAAi9F,QAAAhiF,GAAAjb,EAAAi9F,QAAAhiF,GAAAjb,EAAAi9F,QAAAhiF,GAAAjb,EAAAi9F,QAAAxqC,GAAAzyD,EAAAgb,WAAApS,KAAAqS,IACP+8J,sBAAAt5K,OAAAq5K,EAAA,IAAAr5K,CAAAyc,MAAA8L,EAAA,0JAAAvoB,OAAAX,EAAA,mBAAAW,CAAA,CAAAosD,MAAA9qD,EAAAw5C,OAAAgxD,MAAAz/C,KAAA/qD,EAAAw5C,OAAAywD,OAAAjqG,EAAAuU,OAEW0jK,mBAAAv5K,OAAwBq5K,EAA2B,IAAnDr5K,CAAmD2c,MAAA4L,EAAA,sSAAAjnB,EAAAw5C,OAAA6xD,OAAArrG,EAAAw5C,OAAA6xD,QAC9D6sE,wBAAuBx5K,OAAAq5K,EAAiB,IAAjBr5K,CAAiB6c,MAAA0L,EAAA,wQAAAjnB,EAAAw5C,OAAAgzD,SAAAxsG,EAAAgb,WAAApS,KAAAqS,GAAAjb,EAAAgb,WAAA0rC,WAAA22C,GAAAr9F,EAAAi9F,QAAAhiF,KAK7BL,CAFXlc,OAAAo4B,EAAA,WAAAp4B,CAAAX,EAAA,eAGMi+D,EAAO37D,EAAA27D,WAAA5sD,EAAc/O,EAAA+O,KAAczI,EAAAtG,EAAAsG,OAAA22B,EAAAj9B,EAAAi9B,MAAA6O,EAAA9rC,EAAA8rC,aAAAC,EAAA/rC,EAAA+rC,aAAA+rI,EAAA93K,EAAA83K,YACvC51K,EAAYy5D,EAAWt9D,OAAAq5K,EAAoB,GAApBr5K,CAAoB,CAAAid,EAAAm8J,cAAAn8J,EAAAq8J,wBAAAt5K,OAAAq5K,EAAA,GAAAr5K,CAAA,CAAAid,EAAAm8J,gBAC3CM,EAAgB15K,OAAWq5K,EAAO,GAAlBr5K,CAAkB,CAAAid,EAAAs8J,qBAClCI,EAAoB35K,OAAAq5K,EAAA,GAAAr5K,CAAA,CAAAid,EAAAu8J,0BACnBl2K,EAAAoN,EAAApN,OAAA,GAEH,OAAMoN,EAAAk/G,OAAY5S,EAAsC,EAAA48D,WAClDpnK,EAAa3P,EAAAmB,cAAyB,KAAM,CAAEH,UAAO81K,EAAA/6I,SACrDpsB,EAAa3P,EAAAmB,cAAoB,YAAYV,IAGjDkP,EAAS3P,EAAAmB,cAAA,MAAAH,YAAA+6B,QAAAjE,YAAA8+I,EAAAhsI,eAAAC,gBACTl7B,EAAU3P,EAAAmB,cAAA61K,EAAAh3K,EAAA,CAAAy2D,gBAAAh2D,EAAA+1D,YAAA,CAAApxD,GAAAyxK,yBAYDI,EAAsB,SAA8Cp4K,GAE/E,SAAMq4K,EAAep4K,GACf,IAAAC,EAAYF,EAAKG,KAAIC,KAASH,IAAAG,KAYpC,OAVAF,EAAOsa,UAAU,SAAA89J,GACjB,IAAAp2K,EAAAhC,EAAAD,MAAAyL,EAAAxJ,EAAAwJ,OAAA9L,EAAAsC,EAAAtC,MAEW,OACL83K,cAAsBp5K,OAAQq5K,EAAoB,IAA5Br5K,CAA8Bi5K,MAAA1wJ,EAAA,8fACxC,4GAAI,+CACL,0BAAyB,6CAAW,8CAAAjnB,EAAAi9F,QAAAhiF,GAAAjb,EAAAi9F,QAAAhiF,GAAAjb,EAAAi9F,QAAAhiF,GAAAjb,EAAAi9F,QAAAxqC,GAAAzyD,EAAA0O,OAAA/D,OAAA8nD,GAAA/zD,OAAAX,EAAA,mBAAAW,CAAA,CAAAosD,MAAA,aAAA9qD,EAAAw5C,OAAA+wD,MAAAx/C,KAAA,aAAA/qD,EAAAw5C,OAAA0jD,OAAAl9F,EAAAuU,MAAA7V,OAAAX,EAAA,mBAAAW,CAAA,CAAAosD,MAAA9qD,EAAAw5C,OAAAujD,MAAAhyC,KAAA/qD,EAAAw5C,OAAAwjD,OAAAh9F,EAAAuU,MAAAvU,EAAAw5C,OAAAn9C,KAAAqC,OAAAX,EAAA,mBAAAW,CAAA,CAAAosD,MAAA,gBAAA9qD,EAAAw5C,OAAA+wD,MAAAx/C,KAAA,gBAAA/qD,EAAAw5C,OAAA2jD,OAAAn9F,EAAAuU,OAAA,IAAAmkK,EAAA,mBAAA5sK,EAAAD,SAAA7L,EAAAi9F,QAAAmM,IAAA,OAIrD9oG,ECjDI,ODmCJ2mB,EAAwB,EAASwxJ,EAAcr4K,uDC/CRs4K,EAAAtpK,OAAAo1D,cACRxiE,EAAAoN,IAAApN,MAAA,GACVwiE,EAAAp1D,KAAAo1D,cAAAp1D,EAAAo1D,cAAA,GACsB7oD,EAAAnb,KAAAoa,UAAA89J,GAEM,OAAAxnK,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA7D,OAAAq5K,EAAA,GAAAr5K,CAAA,CAAAid,EAAAm8J,iBAEyC5mK,EAAA3P,EAAAmB,cAAA,SAAAV,GAC5CkP,EAAA3P,EAAAmB,cAAA,WACAwO,EAAA3P,EAAAmB,cAAA,YAAA8hE,KAGpCi0G,EDkCuB,CCdnC3hJ,EAAA,iBAYEp8B,EAAoB,UACOA,EAAAqhC,EAAA48I,KAK3Bj+K,EAAA,UAME,SAAAk+K,UAEFA,EAAApoJ,OAAA,SAAqBmrD,EAACp8D,OACpBs5J,EAAI,OACFt5J,EAASvd,aACc,mBAAAs2K,qBAEtBrwI,OAAA4wI,EAAAt5J,EAAAxN,eAIC,SAAE+mK,YACEtoJ,OAAA,SAAWuoJ,EAAAx5J,YACX5Z,OAAY4Z,EAAGvd,MAAA2D,OAAA4Z,EAAsBvd,MAAU+2K,UAGtD,SAAA/4K,EAAA84K,EAAAE,OACHpwK,EAAEqwK,IAAAD,EAAA,CAEFrwK,KAAA3I,EAAAgb,WAAestF,WAACE,mBACTxoG,EAAAgb,WAASpS,KAAAqS,cACZ,WAEJi+J,EAAEC,EAAAvwK,EAAAvJ,MAAAW,GAEFo5K,EAAAC,EAAezwK,EAAAkD,OAAA9L,oBAGVk5K,EACLI,WAHOC,EAASH,EAAAN,GAKhBM,iBAGI,SAAAI,EAAyBx5K,UAErBw5K,EADmB,EAAjB3tK,SAAc7L,EAAGi9F,QAAAhiF,GAAA,OAKtB,SAAAw+J,EAAAz5K,SAEI6L,SAAS7L,EAAAi9F,QAAAhiF,GAAA,IAAApP,SAAA7L,EAAAi9F,QAAAxqC,GAAA,WAEX/yD,KAAAyJ,IAAAzJ,KAAA+I,IAAAgxK,EAAAC,EAAA,aAIL,SAAAN,EAAAN,OAIFa,EAFgBj6K,KAAGyJ,IAAA2vK,EAAAnzK,OAAA,IAEjByzK,SAtEc15K,KAAG+I,IAAAkxK,EAqEZ,QAaL,SAAUp4K,EAAAw6B,GAAA,OAAAx6B,EAAAw6B,EAAAr8B,KAAA+N,MAAAlM,EAAAw6B,OACQ,SAAA37B,cAEVC,SACAD,EAAOG,KAAGC,KAAOH,IAAQG,eAExB9B,OAAAo4B,EAAA,UAAAp4B,uBACE,mBACNk7K,QAAKt5K,YACT8gB,iBAAA,kBAAA9gB,EAAAu5K,wBAGHv5K,EAACmqB,qBAAA,oFAAAnqB,EAAAu5K,sBAAA,WAEDv5K,EAAAqjH,eACQrjH,EAAAo8D,mBAAE,SAAAn4B,EAAQi4B,GACV,GAAAA,EAAAs9G,iBAAEx5K,EAAQG,MAAEq5K,gBAAAx5K,EAAWy5K,SAAAz5K,EAAAy5K,QAAUx6J,QAAE,CAEnC,GAAmC,IAAnCjf,EAAAG,MAAoBq5K,eAItB,YADFx5K,EAAAy5K,QAAAx6J,QAAAy6J,aAAC,aAOaz6J,QAAOy6J,aAAY15K,EAASG,MAAOq5K,oBAE9B,MAAJv4K,EAAAkwF,QAAIltD,EAAAq0I,aAAAt4K,EAAAD,MAAAu4K,cAAA,KACbE,EACOmB,EACC35K,EAAAD,MAAUu4K,gBAEdsB,EAAOpB,GACTx2K,EAAM63K,EAAmB75K,EAAAD,MAASL,MAAO84K,EAAAE,GAAAE,EAAA52K,EAAA42K,UAAAI,EAAAh3K,EAAAg3K,WAAAF,EAAA92K,EAAA82K,aACzC/3K,SAAW,CAAA63K,YAAAI,aAAAF,aAAAN,8BAKT,SAAA57K,KAWUmE,SACb,CAEJ+4K,YAAiBl9K,KAhJKoD,EAAA8rC,aAAM,uBA6JxBguI,YAAqB,QAYhC95K,EAAA+5K,cAA8B,SAAAC,GAA9B,IAAAC,EACEj6K,EAAAG,MAAMq4K,SAAMnzK,OACJ,GAAA40K,EAAA,CAEHz4J,MAAKI,iBACL,IAAKs4J,EAAcC,EAAAn6K,EAAmBG,MAAAq5K,eAAmBQ,EAAUC,GAQ1E,OAPWj6K,EAAKG,MAAAq4K,SAAiB0B,GAAMlsD,OAAA5S,EAAA,EAAA48D,8BAGvCh4K,EAAAe,SAAA,CACWy4K,eAAiBU,QAMxBE,iBAAoB,WACpBp6K,EAAAD,MAAOs6K,mBAASr6K,EAAAG,MAAaq4K,SAAWx4K,EAAAG,MAAUq5K,wBAC7CG,EAAA55K,EAAAu4K,cACLI,EAAUkB,EAAiBpB,GAC5Bx2K,EAAA63K,EAAA95K,EAAAL,MAAA84K,EAAAE,GAAAE,EAAA52K,EAAA42K,UAAAI,EAAAh3K,EAAAg3K,WAAAF,EAAA92K,EAAA82K,WAGF,OADC94K,EAAAG,MAAY,CAAAy4K,YAAAI,aAAAF,aAAAgB,YAAA,KAAAN,eAAA,EAAAhB,YACbx4K,WAtGqB,EAAAs6K,EAAcx6K,GA4EjB1B,OAAAuU,eAAM2nK,EA2B1B35K,UAAA,+BEjOD,IAAAkC,OAAAi2B,sBACuC,IACJs7B,EADIvxD,OAAAi2B,eACJyhJ,WAQ0B,GAAAnmH,EAAA,CAIhD,IAAAomH,EAAqBpmH,EAAIqmH,cAAAv7K,wBASRw7K,EAAA73K,OAAA63K,QACZC,EAAA93K,OAAA83K,QAChB,MAAmB,4CAAAH,EAAAviI,IAAA0iI,EAAAH,EAAAhvK,OAAA,iBAAAgvK,EAAAx/I,KACH0/I,EACD,GAAE,KAGK,UAetB5jI,YAAO,EACLC,cAAQ,MAMNp2C,UAAWoB,OAAG,WAChB,IAAC/B,EAAAE,KAED8B,EAAS9B,KAAAH,MAACsG,EAAOrE,EAAMqE,OAAM3G,EAAAsC,EAAAtC,MAAA09D,EAAAp7D,EAAAo7D,OAAA+G,EAAAniE,EAAAmiE,OAC3BpvD,EAAK7U,KAAGC,MAAAq4K,EAAAzjK,EAAAyjK,SAAAI,EAEN7jK,EAAA6jK,UAAgBI,EAChBjkK,EAAAikK,WAAAF,EAAA/jK,EAAA+jK,WAAAgB,EAAA/kK,EAAA+kK,YAAAN,EAAAzkK,EAAAykK,eAEFoB,EAAcd,GAAAN,EAChB,OAAC5oK,EAAA3P,EAAAmB,cAAAy4K,GAAA,CAAA12G,SAAA/G,SAAApgC,MAAA98B,KAAA46K,cAEDlqK,EAAW3P,EAAAmB,cAA6B,KAAM,CAAAH,UAAA,aACtC2O,EAAA3P,EAAAmB,cAA2B2iC,EAAa,GAAA1a,IAAAnqB,KAAAu5K,QAAAQ,UAAAzB,EAAAnzK,OAAA01K,SAAAjC,EAAAkC,QAAA,SAAAp+K,GAExC,IAAAkS,EAAiB0pK,KAAmB57K,GAGnC,OADYkS,EAAAlS,EAAA,IAAAkS,EAAApN,MAAA,GAAA9E,GAEfmC,MAAI65K,EAAgBptK,OAAAwtK,GAAA,SAAAh3K,OAClBpF,EAAMoF,EAAApF,MAAAogC,EAAiBh7B,EAAAg7B,MAEvBluB,EAAK0pK,GAAGA,EAAA57K,UAKRkS,EAII8B,EAAA3P,EAAAmB,cAAAm1K,EAAA,CAAAM,YAAA,kBAAA73K,EAAAD,MAAAs6K,mBAAAvrK,IAAA4sD,WAAA88G,EAAAgB,KAAA1qK,SAAAzI,SAAA22B,QAAA6O,aAAA,kBAAA7rC,EAAA6rC,aAAAjvC,IAAAkvC,aAAA9rC,EAAA8rC,eAHG,WAMMl7B,EAAA3P,EAAAmB,cAAA81K,EAAA,CAAAn5K,MAAA65K,EAAAptK,OAAAwtK,EAAAt5K,QAAAoP,KAAA0pK,EAAAsB,GAAAN,SFmCH,uBE9BVp7K,OAAOX,EAAA,UAAPW,CAAO68K,OACR,SAAAn7K,cAIHC,SACAD,EAAWG,KAACC,KAAAH,IAAAG,SACVtD,MAAIA,OAAgB,IAAFoF,EAAE,EAAAA,EAAA+S,EAAAhV,EAAAokE,cAAA,IAAApvD,EAAA,QAAAA,EAAAioB,EAAAj9B,EAAAi9B,6BACZ56B,cAAc,2BAEpB,QAAU46B,oBACVh3B,IAAO,kBAAqB,mBAAqBm+D,EAAE,IAAWvnE,iBAC/DykB,YAAArhB,EAAAo0D,iBATK,EAAAD,EAAAr0D,eAcRqqB,qBAAS,yBACP4+B,YAAA7oD,KAAgBk0D,mBAEjBryD,OAAA,uBACFhC,MAAAq9D,QAEDl9D,KAAAk0D,KAAO8mH,aAAO,QAAAh7K,KAAAH,MAAAi9B,OACf98B,KAAAk0D,KAAAE,UAAAtuD,IAAA,yBAESk2E,EAAAj7E,EAAAwzD,aAAAv0D,KAAAH,MAAAkrB,SAAA/qB,KAAAk0D,aAGNA,KAAKE,UAAWlU,OAAK,kCA5BlB,GAkCJn/C,EAAAq7F,gCAiBE,mBAED,oBACM,iBACN,gBAEYt6F,SACNA,EAAAs2G,YAAUZ,EAAoB11G,EAAC01G,UAAYa,EAAwBv2G,EAAAu2G,sBAAkCE,GAAAz2G,EAAAm5K,OAAAn5K,EAAAy2G,cAAA76B,EAAA57E,EAAA47E,wBAG3G,SAAAp8D,EAAA/d,EAAAyR,aACIyR,EAA4B,KAAAxmB,GAAA,CAAAm4K,aAAA,2BAG3B92J,EAAA/d,EAAeyR,eACO,KAAA/U,GAAA,CAAAm4K,aAAA,oBAG1B,SAAA92J,EAAA/d,EAAAyR,OAODkmK,EALQj7K,GAAAm4K,aAKKjzK,gBACVmB,SACA,YACA40K,EAIN,OAHM55J,EAAAI,iBACAzhB,GAAQwmB,EAAA,KAAAxmB,GAAA,CAAAm4K,aAAA,KAEd70K,EAAA0e,WAAA,IAGK,MAEH,gBAEK,cAGJ,GAAAi5J,EAQI,OAPO55J,EAAAI,sBACTg8D,EAAAy9F,aAACtB,cACQ,cADRv4J,EAAkBhb,IACM,GAAK,GAUnC,MACD,YACH,UAEoB,GAAG40K,0EAOhB,cAIIE,GAAK95J,EAAY/d,EAAA60G,EAAAZ,UAMnBxiG,gCAKA,SAAWzR,EAAMmzG,GAAjB,IACHW,EAAAp3G,GAAAm4K,oBACA/gE,GAAUA,EAAAlyG,SAOPk2K,eAAoB3kE,GAJTnzG,kBAOb,SAAAA,EAAAmzG,SACMA,EAAAz0F,YAAAy0F,EAAAl1G,MAEJ85K,EAAyC,aAA9B5kE,EAAqBoX,KAEhCyjC,EAAA76C,EAAiB66C,MAAA,IAChBtxJ,GAAAs7K,gBAAc3kE,EAAoB32G,GAAA22G,cAAaD,EAAA12G,GAAA02G,uBAEzC0B,EAAAmjE,EAAA,CACVpD,aAAOn4K,GAAAm4K,aAECzhE,iBAAgBA,EACjB4kE,gBAAiBA,EAEvB3kE,cAAmBA,KAOjB,IAAA6kE,EAAe/kE,EAAUglE,iBAAMH,EAAqBp2K,OAExDw2K,GADEnkE,EAAiBA,EAAAZ,MACVzxG,OAAmBo2K,EAAAp2K,OAC7Byc,EAAAg1F,EAAA9vG,QAAAy0K,GACCv2E,EADSu2E,IAAWI,EAAA,GAAA/5J,GAAA,GAAA45J,IAAA5kE,KACD0kE,EAAQK,EAAA/5J,EAAA,EAGI,GAAA45J,EAAAz/J,MAAM,MAAW,KAChD6/J,EAAM19K,OAAAX,EAAA,aAAAW,CAAAs9K,UACNj4K,EACAs4K,eAAKJ,GACLx2E,cAAcD,GACd82E,eAAQF,GACR15J,QAEI,OARAjiB,GAA2BwmB,EAAd,KAAAxmB,GAAE,CAAAm4K,aAAO,KAQtB70K,EACHs4K,eAAIJ,GACHx2E,cAAWD,cACFw2E,GACRO,YAAAxqB,GAEDrvI,gCAGIriB,EAAW0D,EAAQyR,cACnBuM,UAAUC,yCAGRzgB,EAAAmB,cAAcwO,EAAkB3P,EAACoQ,SAAC,SAErCpQ,EAAAmB,cAAA85K,GAAA,CAAA5C,QAAA,SAAAl1B,GAAA,OAAAxmE,EAAAy9F,aAAAj3B,GAAAjgF,OAAAs0C,EAAApyG,OAAAlG,GAAAs7K,gBAAAr+G,SAAAj9D,GAAAm4K,aAAAjzK,OAAAizK,aAAAn4K,GAAAm4K,gCAGa70K,EAAM04K,6BAKrBC,IAAA,SAAA56J,EAAA/d,EAAA60G,EAAAZ,GAAA,OAAA/wF,EAAA,OApKKxgB,OAoKL,4BAEDk2K,EAAaC,EAAAriH,EAAAsiH,EAAAC,EAAAllE,EAAAD,EAAAt7G,EAAAsK,EAAAo2K,EAAAz6K,EAAAu1G,EAAApwG,EAAAu1K,WACb,EAAAx8K,KAAA,SAAA6U,wBAGJ,EAQA,OAAAujG,aAGF72F,EACAhgB,EAAAggB,gHCzTqB/P,OAAA,SAAAwnD,GACgB,OAAAA,EAAAnwB,MAAAjnB,QAAAw6J,GAAApjH,EAAAlwB,IAAAlnB,OAAAw6J,GAAApjH,EAAAjlD,OAAAklD,EAAA,IAIItmD,UACP2pK,EAAAviH,EAIYvoD,OAAA,SAAAwnD,GACI,OAAAA,EAAAlwB,IAAAlnB,QAAAw6J,GACuBpjH,EAAAjlD,OAAAklD,EAAA,GACfD,EAAAxwD,KAAAvH,IAAA,aAAAgjG,SAAA,eAEV7zE,OACgCgnF,EAAAklE,GAAA/6K,EAAAk7K,UAAA5gL,KAAAouC,MAAAqyI,EAAAzzI,MAAAjnB,OAAA06J,EAAAxzI,IAAAlnB,QAGlCu1F,EAAAklE,EAqChDj7K,IAAA,SAAA43D,GAAA,OAAAA,EAAAxwD,KAAAvH,IAAA,4FAKGkF,EAAAtK,EAAAouC,MAAA,EAAA1oB,EAAAW,MAAAN,QACHy6J,EAAAl3K,SAAgCtJ,EAAA0F,EAAAk7K,UAAA5gL,KAAAouC,MAAAoyI,EAAqD,GAAAxzI,MAAAjnB,OAAAy6J,EAAA,GAAAvzI,IAAAlnB,QAUnFzb,EAAkC5E,EAAEk7K,UAAqB5gL,KAAAouC,MAAAoyI,EAAA,GAAAxzI,MAAAjnB,OAAAL,EAAAW,MAAAN,UAFzD26J,EAAkCp2K,EAAK4V,MAAA,6BAgE5By7F,IACHrxG,EAAAqxG,EAAuBrxG,IAG7B,GAAAiyG,EAAA,CACKjyG,OAAWA,EACdtK,OACA0F,QACI41G,eAAiBA,EACbC,eDuKV,GAAO,sBCpKFviG,EAAAgQ,OAAAwyF,EAAAv1G,EAAAu1G,YAAApwG,EAAAnF,EAAAmF,UACcowG,MACb,SAAAzlG,UACAA,EAAKL,OAGRpL,IAGSyL,EAAA8qK,aACJ9qK,EAAAL,MAAAK,EAAwBL,MAAAC,OAAA,SAAAzO,GAAA,OAAAA,EAAA45K,YAAA55K,EAAAvB,OAAA2D,QAAAgB,EAAAhB,SAElByM,EAAAgrK,YACHhrK,EAAAL,MAAAK,EAAAL,MAAAC,OAAA,SAAMzO,GAAU,OAAKA,EAAA45K,YAAc55K,EAAAvB,OAAAg3D,WAAAryD,KAIhCyL,EAAAL,MAAAK,EAAAL,MAAAC,OAAA,SAAAzO,GAAA,OAAAA,EAAA45K,YAAA55K,EAAAvB,OAAAyiG,SAAA99F,MAKPyL,EAAAL,MAAAK,EAAoBL,MAAKC,OAAM,SAAMzO,GAAA,OAAAA,EAAAkf,aAAAlf,EAAA45K,YAAA55K,EAAAvB,SAAA2E,KAE5CyL,EAAAirK,WAEFjrK,EAAAL,MAAsB6lK,IAAGxlK,EAAAL,MAAA,SAAA3C,GAAA,OAAAA,EAAAkuK,UAAAluK,EAAApN,SAEVoQ,GAxBRA,IA0BAJ,OAAA,SAAgBI,GAAA,OAAAA,EAAAL,OAAAK,EAAAL,MAAApM,SACrBlF,GAAAwmB,EAAA,KAAAxmB,GAAA,CAAAm4K,aAAAoE,EAAAjB,gBAAAp1K,EAAAwwG,iBAAA1vG,EAAA2vG,cAAA/6G,+BDpCQ,QC7CU,SAAO+D,mBAE1B,IAAAE,EAAAF,EAAAG,KAAAC,KAAAH,EAAAoH,IAAAjH,KAEDF,EAAAi9K,kBAAA,KAKEj9K,EAAKwC,SAAU,SAAMf,EAAAy7K,GACrB,IAAAC,EAAkB17K,EAAYzC,WAAAgB,EAAAG,MAAAsB,MAAAzC,SAC/Bo+K,EAAAp9K,EAAAG,MAAAsB,MAGOzB,EAAAe,SAA8B,CAA5BU,SAAK,WAIb,GAAA07K,EAAA,CACS,IAAKE,EAAejP,EAAE,EAAAkP,UAAAF,KAAAhP,EAAA,EAAAkP,UAAA77K,GAC7B47K,GAAAH,GACSl9K,EAAKu9K,yBAEbF,IAAAH,GAEJl9K,EAAAw9K,6BAMGC,YAAc,WACf,IAAAj7K,EAAAxC,EAAAD,MAAAyC,SACFA,GA+DDA,EAAA4rK,EAAA,EAAAkP,UAAAt9K,EAAAG,MAAAsB,SAEEzB,EAAM09K,cAAgB,WACpB,IAAA39E,EAAA//F,EAAAD,MAAAggG,WACCA,IAGDA,IACE//F,EAAAi9K,kBAAAj9K,EAAAG,MAAKsB,iCAQS,WAWnBzB,EAAAy9K,cACHz9K,EAAA09K,8CC5NA,yHAAAxoK,KAEAlV,EAAAw9K,qBAAA32J,EAAA5lB,EAAAurE,SAAAxsE,EAAgEy9K,YAAA,KAChE,MAAAnlE,yECIoE,gNRkDjE,IAAAqlE,EAAAn8J,cAAMA,EAAAI,iBACG,IAAA5f,EAAAyB,EAAAhC,MAAAm8K,EAA2B57K,EAAA47K,WAAA5+K,EAAAgD,EAAAhD,gBAC7ByE,EAAAo6K,2BACe7+K,EAAa8+K,aAAAF,EAAiBp3K,KAE/B/C,EAAAs6K,8BAEnBt6K,EAAAu6K,6BCNDz8J,UACA,SAAAC,EAAA/d,EAAAyR,GACH,GAAA+oK,EAAAz8J,IAAA08J,EAAA18J,kTQ5D4DlgB,IAAA,SAAAg4D,GAAA,OAAAA,EAAAv9D,OAEhDoiL,EAAAC,EAAA5H,EAAAR,EAAAE,GAK0D,OAJvBiI,GACd38J,EAAA68J,cAAAniI,QAAA,OAAAiiI,IAGqC,GAcrEG,QAAa,SAAE98J,EAAA/d,GAgBf,IAAA8iB,EAAAvkB,EAKAwf,EAAAI,iBAQA,IAOC/I,EAPwB2I,EAAA68J,cAAAz2K,QAAG,QAO3Bq4D,MAAA,MAEU,GAAApnD,EAA0CxT,OAAC,CACxC5B,EAAA0e,WAAAtJ,EAAA,IACF,IAEJ,QAAA9D,EAAA4R,EAAkB,EAAA9N,EAAAsxB,MAAA,IAAQl1B,EAAAF,EAAAG,QAAAD,EAAKE,KAAEF,EAAAF,EAAAG,OAAA,CACvB,IAAA8gE,EAAa/gE,EAAAxT,MACzBgC,EAAqBye,aAAAC,WAAA6zD,IAIlB,MAAS0F,GAAAn1D,EAAA,CAAAgP,MAAAmmD,GAEd,QACE,IAGLzmE,MAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAUG,WAAAwR,EAAC,MAAAA,EAAAgP,mBLrFsC5O,EAAA,KAAA43J,EAAA,CAAAC,MAAA,SAAAh9J,EAAA/d,GAa7C,OAZkC86K,EAAAE,OAAAj9J,EAAA/d,GAE0BA,EAAAi7K,cAAAj7K,EAAAhC,MAAAggB,YAU5D,OIZgD1hB,EAAAs4G,mBAAA,IAAA3mG,OAAA,SAAAg1B,GAAA,OAAAA,IAEhD1mC,EAAAG,MAAA,gBAEG02G,iBAAA,KACH4kE,gBAAA,GACE3kE,cAAoB,GAAAr1G,MAAMrD,OAANX,EAAiB,UAAXW,CAAW2B,EAAAa,OAAA,GAAAb,EAAAo7K,SAA6Bn7K,EEPpE,SJiGM,EAAA2+K,EAAA7+K,KExFJa,UAAAkpB,kBAAA,gBACE+0J,SAAW,+DACZtxG,aAAAptE,KAAA2+K,eAGQl+K,UAAKy7D,mBAAsB,SAAQn4B,EAAAi4B,GAC3C,IAAAl6D,EAAA9B,KAAAH,MAAAa,EAAAoB,EAAApB,MAAAu6K,EAAAn5K,EAAAm5K,OAED15K,EAAAvB,KAAAC,MAAAsB,MAIAb,IAAAqjC,EAAArjC,OAECA,IAAAwtK,EAAA,EAAAkP,UAAA77K,IACHvB,KAAAa,SAAC,CAAAU,MAAArD,OAAAX,EAAA,UAAAW,CAAAwC,GAAA,GAAAu6K,4LGxBDwD,EAAAh+K,UAAAoB,OAAA,eAAA/B,EAAAE,KAAAo2B,EAAAp2B,KAAAH,MAAAu2B,SAA6D0V,EAAA0xB,IAAA,8BAE7DohH,uCAAuBxoJ,IAER,OAAA1lB,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA+pC,uVDJf2yI,EJgGa,CI/Fb/tK,EAAA3P,EAAAq7F,ivFEAsCl+F,OAAAuU,eAAAosK,EAAAp+K,UAAA,UAUzBQ,IAAoB,WAC5B,OAAAjB,KAAAirE,OAAS9lE,QAGNyxC,YAAA,gBACE,gBAEI31C,IAAA,SAAAvE,sBACEuE,IAAAjB,KAAA8+K,MAAApiL,OAGJ+D,UAAAkS,QAAA,yBACE0/G,EAAQ,GAAAryH,mDAIVqyH,EAAA,GAAAryH,+CAaC,IAAA++K,EACC7kL,EAAA,QACEA,EAACC,EAAAC,EAAQ,IAAS,WAAQ,OAAS2kL,EAAiB,uBClClEC,KACA,SACEn8K,EAAAI,GAIJ,IAAEP,EAAA,wHAEa,4yJCbfu8K,KACkD,SAAAp8K,EAAAzI,EAAAF,oBAalDusB,EAACvsB,EAAA,UAFGA,EAAO,QACTwW,EAACxW,EAAAqhC,EAAAjF,GAGY7hB,EAAAva,EAAA,gCCjBsBqD,EAAArD,EAAA,UAMKwW,EAAA3P,EAAA2pE,KAAA,SAAA5oE,GACI,IAAAo9K,EAAAp9K,EAAAo9K,QAAAC,EAAAr9K,EAAAq9K,aAAAC,EAAAt9K,EAAAs9K,YAAAC,EAAAv9K,EAAAu9K,wBAAAC,EAAAx9K,EAAAw9K,kBAEb,OAAA5uK,EAAA3P,EAAAmB,cAAA,UAAAH,UAAA,UAOjC2O,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,eAAmB2O,EAAA3P,EAAAmB,cAAA,UAAnBwO,EAAA3P,EAAAmB,cAAA,UAAAwO,EAAA3P,EAAAmB,cAAA,KAAA07B,KAAA,0BAgDCppB,OAAA,SAAA+qK,IAAA,YAlCC7uK,EAAc3P,EAAAmB,cAAA,KAAAH,UAAA,sBACE,UACd2O,EAAiB3P,EAAAmB,cAAgB,UACjCwO,EAAA3P,EAAAmB,cAAA,KAAA07B,KAAA,uCAAAppB,OAAA,SAAA+qK,IAAA,+DA+BH,mBA5CC7uK,EAAA3P,EAAAmB,cAAA,UACOwO,EAAc3P,EAAAmB,cAAA,KAAA07B,KAAA,iCAAAppB,OAAA,SAAA+qK,IAAA,YACpB7uK,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA,qBAED,eACO2O,EAAA3P,EAAAmB,cAAQ,KAAU,KAChBwO,EAAc3P,EAAAmB,cAAA,KAAA07B,KAAA,sBAAAppB,OAAA,SAAA+qK,IAAA,YAAAL,GACpB,IACFxuK,EAAA3P,EAAAmB,cAAA,YAOD,IAAAi9K,EACU,aACIC,EACH,MACRC,GAAA3uK,EAAA3P,EAAAmB,cAAA,UACMwO,EAAU3P,EAAAmB,cAAA3E,EAAA,SAAAmU,UAAA,OAAAC,QAAA2tK,GAClB5uK,EAAA3P,EAAAmB,cAAA,KAAA07B,KAAA,0BAAAppB,OAAA,SAAA+qK,IAAA,6CAsBAC,EAhBG,SAAA19K,SACEA,EAAAuiG,WACE,iBADD,IAADxvF,EAAC,GAAAA,GACC,eACE9T,EAAAmB,cAAA,OAACH,UAAA,yBACAhB,EAAImB,cAAO3E,EAAQ,oBAAA1B,KAAA4jL,6SCpCjBC,EAAA,SAAA9/K,8DCjBf,gGAAAE,kBAEA6/K,EAAAl/K,UAAAkpB,kBAAA,WACA3pB,KAAA4/K,gSCH6DD,EAAAl/K,UAAAoB,OAAA,WAW7D,IAAAonF,EAAAjpF,KAAAH,MAAAopF,SAAkCib,EAAAzvF,EAAA,EAAAyvF,UAAlC,OAAAxzF,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,0BAAA2O,EAAA3P,EAAAmB,cAAA3E,EAAA,iBAAAsiL,cAoDC,OAAA99K,UAAA,0BAnDC2O,EAAe3P,EAAAmB,cAAA,OAAAH,UAAA,0BACb2O,EAAkB3P,EAAAmB,cAAAg/B,EAAA,GAAA7kC,MAAA4sF,IAClBjpF,KAAAH,MAAAkrB,SAEFra,EAAgB3P,EAAAmB,cAAsB49K,EAAA,CAAAZ,QAAA,UAAAE,YAAAl7E,EAAA67E,OAAAZ,aAAAj7E,EAAA7zF,QAAAivK,kBAAAp7E,EAAA87E,cAAAX,wBAAAn7E,EAAAiiD,yBAElCjlH,EAAuB,aACxB++I,IFFU,GEKT,WACC7lL,EAAA,mBAOHyI,EAAKI,KAKPi9K,cACQr9K,EAAAzI,EAAEF,gBAGcA,EAAWC,EAAAC,EAA4B,sBAAA+jE,IAChD,IAAG39D,EAA2BtG,EAAc,QAGvDuI,EAAMvI,EAAU,QACd+H,EAC8B/H,EAAqBqhC,EAAA94B,GAGjD28D,EAA2BllE,EACzB,QAcZikE,EAAC,SAAAt+D,GApDiC,IAAAq9D,EAAAr9D,EAAAo8D,YAoDjC+B,m8CC9BKrjD,EAACE,EAAiBE,EAAYolK,mCChCDC,EAAA,SAAAxgL,GAGkC,SAAAygL,IACV,IAAAvgL,EAAA,OAAAF,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,YA0BrDF,EAAAG,MAAA,CAIJqgL,aAAA,GAEGxgL,EAAAygL,cAAA,SAAGj/J,GAaNA,GAQIA,EAAkBI,iBAChB5hB,EAAAe,SAAe,CACVy/K,aAET,OAOEE,cAAmB,SAAUl/J,GAC7BA,GACAA,EAAAI,iBAEA5hB,EAAMe,SAAA,CACHy/K,aAAI,KAGPxgL,EAiBJ,OA5FgC2mB,EAAA,EAAA45J,EAAAzgL,KA6E5Ba,UAAMoB,OAAA,WACR,IAAAC,EAAS9B,KAAAH,MAAA7D,EAAA8F,EAAA9F,UAAAo6B,EAAAt0B,EAAAs0B,SACPqqJ,EAAmBzgL,KAAQC,MAAEqgL,YAAU,OAAa,OACpDI,EAAiB1gL,KAAWC,MAAOqgL,YAAC,cACpCK,EAAavqJ,EAAM,uBAA0B,GAC7CC,EAAAD,EAAqB,aAAWp2B,KAAAugL,qBAChC7vK,EAAe3P,EAAAmB,cAAU,QAAAH,UAAA,2BACzB2O,EAAM3P,EAAAmB,cAAA,KAAAH,UAAA,iBAAA2+K,EAAA,6BAAAC,EAAAtqJ,WACR3lB,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA,kBACE2O,EAAa3P,EAAMmB,cAAU,OAAI,CAAKH,UAAa,4BACnD2O,EAAe3P,EAAKmB,cAAY,QAAAH,UAAA,kBAAA0+K,GACxB/vK,EAAS3P,EAAAmB,cAAqB,KAAAH,UAAA,gBAAAs0B,QAAAr2B,KAAAwgL,eAAA,UAChC9vK,EAAgB3P,EAAEmB,cAAC,KAAAH,UAAA,2BAAAs0B,QAAAr6B,GAAA,sBAG7BqkL,EA7FiC,GA8FjB,iBAIZnmL,EAAa,UAGHA,EAAsB,UAGhCA,EAAa,YAIG,UAGTA,EAAU,UAMjBA,EAAa,UACPA,EAAAqhC,EAAA8gE,KAMNniG,EAAM,UAIAA,EAAG,UAkCXA,EAAA,UAkBA,SAAAkE,EAAAI,EAAAoiL,EAAAC,EAAAz2B,eAEqB,IAAjBy2B,IAAiBA,EAAG,2BACpB,IAAAz2B,IAAqBA,GACzB,GACElsJ,OAAA2mC,EAAA,IAAA3mC,CAAAqc,IAAcA,EAAAkM,EAAiC,8bAAAroB,EAAAI,EAAAoiL,EAAAx2B,EAAA,aAAAy2B,EAAAziL,EAAAwiL,EAAAxiL,IAOnD0iL,EACE5iL,OAAO6iL,EAAqB,EAA5B7iL,CAA4B,SAAA4D,OAc9BmjC,EAAA95B,EAAAy6C,EAAAo7H,EAAA11K,EAbI9L,EAAEsC,EAAAtC,MAAA4I,EAAAtG,EAAAsG,KAAA49C,EACKlkD,EAAUkkD,QACbi7H,EAAWn/K,EAAAm/K,SAUnBC,EAAO1hL,EAAM0O,OAAA/D,OAAcsQ,GAC3Bg5C,EAAAj0D,EAAAgb,WAAAyrC,OAAAuiD,SAEF,OAAApgG,+GClN0C68B,EAAAzlC,EAAAi9F,QAAAhiF,GAAA,IAAAjb,EAAAi9F,QAAAxqC,GACsCrM,EAAApmD,EAAAgb,WAAApS,KAAA6pD,GACpC+uH,EAAAxhL,EAAAi9F,QAAAhiF,GAEzBnP,EAAyC9L,EAAA8L,OAAK2mD,GACzD,MACN,IAAO,KACPhtB,EAAAzlC,EAAAi9F,QAAAxqC,GAAA,IAAAzyD,EAAAi9F,QAAAI,GACKj3C,EAAcpmD,EAAQgb,WAACpS,KAAAy0F,GAEjBppC,EAAuDj0D,EAAAgb,WAAKyrC,OAAAsiD,QACjEy4E,EAAQxhL,EAAAi9F,QAAAhiF,GACPnP,EAAA9L,EAAA8L,OAAAuxF,GACP,MACF,geCd4DskF,QAAA,GACxBt7K,YACyBrG,EAAAuU,MAYhD5I,EAAsCi2K,EASlDhjL,EAAAI,EAAAgB,EAAAw5C,OAAAyZ,KAAA,yBARC,MASM,kBACJtnD,EAAAjN,OAAA2mC,EAAsC,IAAtC3mC,CAAsCyc,MAAA8L,EAAA,8HAAA26J,EAAA,MAAA5hL,EAAAw5C,OAAAyZ,KAAA,0BAIxC,MAAO,CAEF4uH,OAAQnjL,OAAA2mC,EAAA,IAAA3mC,CAAA2c,MAAA4L,EAAA,4+BAAAgtC,EAAA7N,EAAApmD,EAAAgb,WAAAstF,WAAAC,UAAAvoG,EAAAgb,WAAA0rC,WAAAq3C,GAAAt4D,EAAAg8I,EAAA,gBAAA31K,EAAA41K,EAAA/1K,GACRm2K,SAAOpjL,OACN2mC,EAAA,IADM3mC,CACN6c,IAACA,EAAQ0L,EAAyC,+FAAM,qGACtDvoB,OAAA2mC,EAAA,IAAA3mC,CAAAiiL,IAAcA,EAAC15J,EAAmD,oMAAAu6J,+QHlCNO,EAAA,CACnB/hL,QAEtB4I,OAUvB49C,QAAYA,GAEhBw7H,EAActjL,OAAA2mC,EAAA,GAAA3mC,CAAAujL,EAAAJ,OAAAt/K,GACd2/K,EAAA5lL,EAAA4U,EAAA3P,EAAAmB,cAAA,QAAAH,UAAA0/K,EAAAH,UAEF5wK,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAApC,EAAA2lL,EAAA3lL,kEAGG2qB,EAAA,KAAA22E,EAAA,CAAAr7F,UAAAy/K,EAAAz2J,SAAA22J,IAAAj7J,EAAA,KAAA22E,EAAAmkF,EAAA,CAAAx/K,UAAAy/K,EAAAz2J,SAAA22J,IACU,OAAAhxK,EAAsC3P,EAACmB,cAQnDy/K,EAAAC,MAEGnmK,YAAA,iBAWJ,IAAAomK,EAAU3nL,EAAc,sDI3CO,OAAAwW,EAAA3P,EAAAmB,cAAA4/K,EAAAr7J,EAAA,KAAA5mB,EAAA,CAAA8hL,SAAA,SAAAniL,YAEAuiL,EAAAtmK,YAAA,SAe/B,IAAMumK,EAAA,SAAAniL,GACJ,IAAAL,EAAYtB,OAAEo4B,EAAA,WAAFp4B,CAAE2jL,EAAA,GACd,OAAAnxK,EAAa3P,EAAUmB,cAAA4/K,EAAAr7J,EAAA,KAAA5mB,EAAA,CAAA8hL,SAAA,IAAAniL,cAEvBic,YAAA,6BAOC0iD,EAAAjkE,EAAA,QAUDukE,EACEvkE,EAAC,QA4BHsgE,EAAAtgE,EAAA,oBC7DWq9I,EAAAr9I,EAA4D,UAAFA,EAAAqhC,EAAAg8G,qkBCyBrE0qC,EAAM,SAAangL,GAEnB,IAAMN,EAAAM,EAAAN,MAAA2rD,EAAuBrrD,EAAAqrD,QAAAxT,EAAA73C,EAAA63C,WAAAunH,EAC3Bp/J,EAAAo/J,WAAA5tF,EAAAxxE,EAAAwxE,QAAAvxE,EAAAD,EAAAC,UAAAi7F,EAAAv2E,EAAA,EAAA3kB,EAAA,4EACE4O,EAAa3P,EAAOmB,cAAK,OAAAH,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,aAAA6D,IACzB2O,EAAY3P,EAAAmB,cAAYggL,EAAA,CAAArjL,MAAA86C,EAAAwT,WAAA3rD,GAE1B8xE,GACA5iE,EAAA3P,EAAAmB,cAAA,QAAAukB,EAAA,GAAA1S,KAAA,OAAAhS,UAAA,kBAAAm/J,EAAA,SAAAA,EAAA,KAAAlkE,QAGAvhF,YAAO,cACPiiD,aAjCQ,CAAZ/jB,WAAY,EACVunH,WAAA,UAmCEhnK,EAAuB,UACCA,EAAAqhC,EAAmB4mJ,KAqDtC,SACCrgL,SACEA,EAAAN,MAAOm4C,EAAa73C,EAClB63C,WAAAunH,EAAAp/J,EAAAo/J,WAAQkhB,EAAQtgL,EAAIsgL,QAASC,EAAevgL,EAAAugL,aAAO9/K,EAAAT,EAAAS,YAAAy6F,EAAAv2E,EAAA,EAAA3kB,EAAA,qFACjDf,EAAAmB,cAAA+/K,EAAC,CAAAzgL,MACCA,EAAKm4C,WACLA,EAAY25B,QAAU+uG,EAAkB3xK,EACjC3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KAQfT,EACN3P,EAAAmB,cAAA,QAAAukB,EAAA,GAAA1S,KAAA,OAAAhS,UAAA,wBAAAm/J,EAAA,GAAA9qI,UAAA,EAAA70B,MAAA,cAAA+gL,IAAAtlF,EAAA,WACFtsF,EAAA3P,EAAAmB,cAAA,UAAAH,UAAA,gCAAAs0B,QAAA+rJ,GAAA,UAAA1xK,EAAA3P,EAAAmB,cAAA,QAAAukB,EAAA,GAAA1S,KAAA,WAAAhS,UAAA,uBAAAm/J,EAAA3+J,eAAAy6F,sBA1DI,YACQ,GAGZz6F,YAAA,WASIf,MAAA,4CC9DC,MAAM+gL,EAAqB,SAACzgL,OAAEjG,EAAAiG,EAAAjG,KACnC,OAAM6U,EAA6B3P,EAAAmB,cAAA,OAAAH,UAAA,iBACnClG,EACE,MAOMkF,EAAQmB,cAAa,KAAAH,UAAA,8BASd7H,EAAM,UAGfA,EAAqB,UAKzBA,EAAAqhC,EAAAinJ,iFCrCsB,MAAAC,EAAA,SAAA3gL,GACS,IAAAoJ,EAAApJ,EAAAoJ,MAAA1J,EAAAM,EAAAN,MAAAqT,EAAA/S,EAAAkkD,eAAA,IAAAnxC,EAAA6tK,EAAAC,MAAA9tK,EAAA2mD,EAAA15D,EAAA05D,WAAAh8D,EAAAsC,EAAAtC,MAAA49F,EAAA32E,EAAA,EAAA3kB,EAAA,kDACI8gL,EAAA58H,IAAA08H,EAAAC,MAGAE,EAAAD,EAAA,cAWvCE,EAAA5kL,OAAA6kL,EAAA,EAAA7kL,CAAA,CAAyBosD,MAAA9qD,EAAAw5C,OAAAujD,MACvBhyC,KAAA/qD,EAAAw5C,OAAY2jD,SAAZ5oF,MAsBAivK,EAAA,OACEH,EACFv3K,OAAEu3K,EAEF3B,aAAQ,iBACA,GAAQh2K,cAET03K,EAAS,sBACZpnH,EAAa,mBAAmBtwD,EAAA,qBAAA43K,EAAA,eAGlCpyK,EAAa3P,EAAAmB,cAAW,MAAAukB,EAAA,GAAAqW,MAAA,SAClB,kBACL,SACDq/D,OAAA,YAEFiB,KACQr8F,EAAQmB,cAAG,OAAU46B,MAAKkmJ,QAE3BN,EAAoBO,OAAAvyK,EAAA3P,EAAAmB,cAAA,YAAAV,KA7BH0hL,EA+BlB,SAAYphL,SACbA,EAAEk3C,OAAAmqI,EAAArhL,EAAAqhL,cAAAC,EAAAthL,EAAAshL,cAAA5jL,EAAAsC,EAAAtC,MAAA49F,EAAA32E,EAAA,EAAA3kB,EAAA,sDACJuhL,IAAArqI,EAAA,SAAA9tC,GAAA,QAAAA,EAAAm/C,mBACD35C,EAAA3P,EAAAmB,cAAA,MAAAukB,EAAA,KAAA22E,EAAA,CAAAtgE,MAAA,CAAAv+B,QAAA,OAAA+kL,cAAA,YA5CAC,GAAa7yK,EAAA3P,EAAAmB,cAAAugL,EAAA,CAAAn8K,IAAAi9K,EAAAv+K,KAAAw2D,WAAA+nH,EAAAv+K,OAAAm+K,EAAAn9H,QAAA08H,EAAAO,MAAA/3K,MAAAhN,OAAAslL,EAAA,EAAAtlL,CAAAqlL,EAAA/jL,EAAAuU,MAAAvS,MAAAiiL,IAAAF,EAAAn5H,KAAA/zB,QAAA,kBAAA+sJ,EAAAG,IAAA/jL,YACXuB,EAAAmB,cAA0B,OAAA46B,MAAA,CAC1Bv+B,QAAa,OACbmlL,UAAA,QAEG1qI,EAAA53C,IAAc,SAAA8J,sFACpBwF,EAAA3P,EAAAmB,cAAAugL,EAAA,CAAAn8K,IAAA4E,EAAAlG,KAAAw2D,WAAAtwD,EAAAlG,OAAAm+K,EAAAj4K,MAAAhN,OAAAslL,EAAA,EAAAtlL,CAAAgN,EAAA1L,EAAAuU,MAAAsiB,QAAA,kBAAA+sJ,EAAAl4K,IAAA1L,kBAyCS,SAAAsC,OACRoJ,EACEpJ,EAAAoJ,MAAA5I,EAAAR,EAAAQ,SAAA9C,EACEsC,EAAKtC,QAKL,mBAEgC,KAAA+zD,QAAA,SAAAva,EAAAoR,UAC5B15C,EAAa3P,EAAAmB,cAAAghL,EAAA,CAAA58K,IAAA8jD,EAAA5qD,QAAA2jL,cAAAj4K,EAAA8tC,SAAAoqI,cAAA,SAAAl4K,KACbA,EAAQlG,cAIVjE,EAAAmB,cAAA,OAAA46B,MAAA,CACFv+B,QAAA,2BAEe,4BACZ,qBAED,SAIPolL,gBC5FuBC,EAAA1pL,EAAA,UAQ8DA,EAAO,QAC7FgiL,GAAehiL,EAAAqhC,EAAA+wC,MAGXpyE,EAAc,QCcG2pL,GDDoB,SAAAjkL,YAEnCkkL,EAAOjkL,GACX,IAAAC,EAAUF,EAAAG,KAAAC,KAAAH,IAAAG,YACVF,EAAMikL,YAAK,SAAA74K,GACXpL,EAAAD,MAAayC,SAAO4I,IAEpBpL,EAAAwC,SAAA,SAAAgf,GAEE,IAAAqgI,EAAsC/kD,IAAAt7E,EAAAw7E,cAAAv7F,OACrCzB,EAAEe,SAAM,CACXU,MAAa+f,EAAAw7E,cAAiBv7F,QAE9BogJ,EAAA9tH,WAEE/zB,EAAAikL,YAAyCpiC,EAAA97I,aAG3C/F,EAAAy1B,OAAa,WACbqnE,IAAA98F,EAAAG,MAAAsB,OAEgBsyB,WAChB/zB,EAAae,SAAG,CAIhBU,MAAiBzB,EAAAD,MAAAqL,WAIfjL,MAAU,CACV+jL,cAAAnkL,EAAAqL,MACF3J,MAAA1B,EAAiBqL,SAEf64K,YAAa7H,KAAep8K,EAAAikL,YAAY,KACxCjkL,WAlCkB,EAAAgkL,EAAAlkL,KAoClBqkL,yBAAA,SAAApkL,EAAAI,GACH,IAAA0hJ,EAAA/kD,IAAA/8F,EAAAqL,OAED,OACEy2I,EAAA9tH,WAAAh0B,EAAAqL,QAAAjL,EAAU+jL,cACRv9J,EACE,KAAKxmB,EAAA,CAAA+jL,cAAAnkL,EAAAqL,MACA3J,MAAAogJ,EACA97I,aAWX5F,sICjFwByQ,EAAA3P,EAAAmB,cAAA,OAAA46B,MAAA,CAC8B3xB,WAAAnL,KAAAH,MAAAqL,MAEmBrM,MAAA,OACDyM,OAAA,OACvC44K,SAAA,EACGhD,aAAA,iBAShCxwK,EAAgB3P,EAAAmB,cAAyB,OAAA46B,MAAC,CAInConJ,SAAA,IACqCxzK,EAAK3P,EAAAmB,cAAKozB,GAAU,GAAAvzB,UAAK,gBAAAR,QAAAe,SAAAtC,KAAAsC,SAAAizB,OAAAv1B,KAAAu1B,cDKhC,GCAnCx0B,EAAKq7F,kBAWQ,SAAMt6F,iBACfk4B,EAAWl4B,EAAAk4B,2BAIb,+BAGY,eAAO,8CAMjB97B,OAAA6kL,EAAY,EAAZ7kL,CAAY,SAEd86C,OAAAowD,oBAEIQ,iBAEA,iEAWN,mBAEI,UAEA,wBAED,8BAIDu6E,EAAA,wCAOJC,EAAiE,CAAGnsK,OAAA,OACxErK,YACE,kBACEF,YAAA,4BAACy2K,EACQ,gBCnFb,MDuFa,iBAETE,EAAA59J,EAAC,KAAA49J,EAAkB,CAAAvpJ,KAAO,SAG9BwpJ,EAAA,CAEa12K,YAAA,oMCnGoCmqC,IAAA,QAK7CrnC,EAAe3P,EAAAmB,cAAA,OAAA46B,MAAA3hB,EAAAopK,QACjB7zK,EAAA3P,EAAAmB,cAAA,MAAmB,CAAA46B,MAAArW,EAAgC,EAAU,GAAE49J,EAAAC,KAChE5zK,EAAA3P,EAAAmB,cAAA,OAAA46B,MAAArW,EAAA,KAAA49J,EAAAD,OCgCDI,GAAA,SAAAhlL,GAA2B,gBAAAK,GAAA,OAAA6Q,EAAA3P,EAAAmB,cAAAuiL,GAAAh+J,EAAA,KAAA5mB,EAAA,CAAAL,gBAQ3BtB,OAAA03K,EAAmB,aAAnB13K,CAAgD,SAAA4D,SACtCA,EAAA6wG,IAAA+xE,EAAA5iL,EAAA4iL,IAAApiL,EAAAR,EAAAQ,SAA4B9C,EAAAsC,EAAAtC,aACpCkR,EAAO3P,EAAAmB,cAAA,MAA2B,CAAA46B,MAAA,CAClCv+B,QAAA,OAEFM,MAAA,OACQykL,cAAA,aAGFviL,EAAAmB,cAAmB,OAAA46B,MAAA,CACrBv+B,QAAO,SAETmS,EAAc3P,EAAAmB,cAAA,OAAA46B,MAAA,CACdv+B,QAAA,OAEF2lL,SAAc,EACLZ,cAAM,WAGf5yK,EAAe3P,EAAAmB,cAAA,OAAA46B,MAAA,CACLgb,SAAA,WACFxsC,OAA6B,QAE3BzM,MAAA,SAEJ6R,EAAO3P,EAAAmB,cAAA0hL,EAAC,YAAAthL,SAAeA,EAAMoiL,IAAEA,EAAOC,IAAA/nF,IAAe8nF,GAAcE,WACrEl0K,EAAc3P,EAAAmB,cAAA,OAAA46B,MAAA,CACZj+B,MACE,OAEJyM,OAAA,OACEo4K,UAAY,OACf5rI,SAAA,WACD3sC,WAAA,UAGMuF,EAAE3P,EAAAmB,cAAA0hL,EAAA,MAAa,CAAEjxE,MAAA+xE,IAAKA,EAAE3jL,EAAA4xG,EAAA5xG,EAAAuB,SAAqBA,EAAAuiL,QAAAL,GAAAhlL,OACnDkR,EAAK3P,EAAAmB,cAAe,OAAA46B,MAAA,CAClBgb,SAAY,WACbj5C,MAAA,OAEMyM,OAAA,QACLw5K,WAAK,SAELp0K,EAAU3P,EAAKmB,cAAY0hL,EAAA,KAAAthL,WAAAoiL,MAAA1qJ,UAAA,WAAA6qJ,QAAAL,GAAAhlL,UAqB3BulL,GAnBF,SAAAjjL,OAEFoJ,EAAApJ,EAAAoJ,MAAA5I,EAAsBR,EAAGQ,SAAA9C,EAAAsC,EAAAtC,aACfkR,EAAA3P,EAAAmB,cAAA,aAEHnB,EAAAmB,cAAe8iL,GAAA,CAAA95K,MAAA0xF,IAAA1+F,OAAAslL,EAAA,EAAAtlL,CAAAgN,IAAA+5K,QAAA3iL,SAAA,SAAAvB,GAClBuB,EAAOs6F,IAAK77F,EAAA4xG,KAAA9sG,aACbrG,YAGCuB,EAAAmB,cAAA2hL,GAAA,CAAArkL,QAAA0L,MACGA,EAAO5I,SAAKA,EAAkBw6B,MAAC,CAAA4mJ,UAAG,eA9DrCxpL,EAAuB,wBA2EU,SAAIgrL,EAAArlL,GAErCA,EAAAs5E,yBAEI,oBAAA+rG,EAAK,gBAAgB,0CCzHc,IAAAplL,EAAAF,EAAAG,KAAAC,KAAAH,IAAAG,YACNF,EAAAqlL,gBAAA,SAAAC,GAoBvC,kCAnB6CtlL,EAAAG,MAAAolL,eAmB7CD,GAAA,oCAAAtlL,EAAAwlL,aAAA,SAAAp6K,GAAA,IAAApJ,EAAAhC,EAAAD,MAAAs5E,EAAAr3E,EAAAq3E,cAAA72E,EAiDCR,EAAAQ,SAAAs2I,EAAA92I,EAAA82I,kBAAAp5I,EAAAsC,EAAAtC,MAhDC+lL,EAAQpsG,GAAA72E,EACN,GAAIs2I,EACJ,OAAA2sC,EAAAr6K,GAGAq6K,EAAMrnL,OAAeslL,EAAG,EAAlBtlL,CAAkBgN,EAAA1L,EAAAuU,QAE1BjU,EAAE0lL,YAAA,SAAA5kJ,2DAEF9gC,EAAA2lL,aAAM,WACE,IAAAJ,EACJvlL,EAAAG,MAAAolL,aAUIvjL,EAAOhC,EAAQD,MAAMqL,EAAGpJ,EAAAoJ,MAAA1L,EAAAsC,EAAAtC,MACxB,OAAA6lL,GACA,eAGJ,OAAA30K,EAAA3P,EAAAmB,cAAK6iL,GAAU,CAAA75K,QAAgC5I,SAAAxC,EAAAwlL,aAAA9lL,UAC7C,cACG,OACCkR,EAAA3P,EAAAmB,cAAAwjL,EAAgB,CAAAx6K,MAAAhN,OAAcslL,EAAA,EAAdtlL,CAAcgN,EAAA1L,EAAAuU,MAAAzR,SAAAxC,EAAAwlL,aAAA9lL,kBAE3B,OAAOM,EACN6lL,mBAAAN,0BAQN,SAAAO,SACE9lL,EAAAD,MAAAgmL,EAAA/jL,EAAA+jL,cAAW36K,EAASpJ,EAAIoJ,MAAC1L,EAAWsC,EAAAtC,eA1CpBkR,EAiD3B3P,EAAAmB,cAAA2jL,EAAAD,GAAAE,aAAA,2CADE,sECrE8C,OAAAD,EAKKn1K,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KAAAjT,OAAAgH,KAAA2gL,GAAAzkL,IAAA,SAAAkF,GAOzC,OAAAoK,EAA6E3P,EAAAmB,cAAK,OAAAH,UAAAjC,EAAAqlL,gBAAA7+K,GAAA+vB,QAAAv2B,EAAA0lL,YAAAl/K,UAAAu/K,EAAAv/K,GAAAtB,SAVnB,QAiBpE/E,MAAO,cACC,cASkB,qBAAAJ,uBAGnBY,UAEJoB,OAAA,eAEJkkL,EADE/lL,KAAAH,MAAAL,MAGLuU,MAAAg3F,GAAA,EAAA7/C,KACF,OAAAx6C,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,0CAAAgkL,GAWFr1K,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,4BAAkC2O,EAAA3P,EAAAmB,cAAA,OAAAH,UAAyD/B,KAAAmlL,gBAAA,WAAA9uJ,QAAAr2B,KAAAwlL,YAAA,sBACzF90K,EAAY3P,EAAwBmB,cAAA,OAAAH,UAAA/B,KAAAmlL,gBAAA,YAAA9uJ,QAAAr2B,KAAAwlL,YAAA,uBAApCxlL,KACEgmL,0BACAt1K,EAAa3P,EAAAmB,cAAA,OAAAH,UAAA,+BAAA/B,KAAAylL,kBAEXQ,KACGllL,EAAAohE,cAIAjoE,EAAS,WACWA,EAAcqhC,EAAA2qJ,OASV,SAAMtmL,YAGnCumL,QAEIrmL,EAAA,OAAAF,KAAA4pB,MAAAxpB,KAAOypB,YAAUzpB,KAaZ,SAZLC,MAAA,CAGApD,GAAAupL,QAMRtmL,EAAAmkF,iBAAC,SAAA3iE,GAnCiCA,EAAM+S,uCAsC3Bv0B,WAjBgB,EAAIqmL,EAAOvmL,iCCvEE,IAAAkC,EAAA9B,KAAAH,MAAAgV,EAAA/S,EAAAuiF,kBAAA,IAAAxvE,EAAA,GAAAA,EAAAE,EAAAjT,EAAAqiF,mBAAA,IAAApvE,EAAA,GAAAA,EAAAvT,EAAAM,EAAAN,MAAA0iF,EAAApiF,EAAAoiF,QAAA+rB,EAAAnuG,EAAAmuG,YAAAluG,EAAAD,EAAAC,UAAAorD,EAAArrD,EAAAqrD,QAAAk5H,EAAAvkL,EAAAukL,iBAQ7BC,EAAAtmL,KAAAC,MAAApD,GAKTqiE,EAAA,iBAAAmlB,EAEE,KAAO4rB,EAAQ,6BACK,IACpB,WACEs2E,EAAkB,kBAAApiG,EAAA,KAAA8rB,EAAA,yCAClBv/F,EAAY3P,EAAAmB,cAAS,OAAAH,UAAA,kCACrB2O,EAAc3P,EAAAmB,cAAA,SAAAs+B,QAAA8lJ,EAAAvkL,UAAA,qCAAAA,GAAA,KACdP,GAAOkP,EAAS3P,EAAAmB,cAAA,OAAAH,UAAAm9D,GACT19D,EACP2rD,GAAgBz8C,EAAA3P,EAAAmB,cAAAm2B,EAAA,GAAA3mB,UAAA20K,GAAA,OAAA10K,QAAAw7C,EAAA3tD,MAAA,QACRkR,EAAS3P,EAAAmB,cAAA,OAAAH,UAAA,qDAClB2O,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA,yBAED2O,EAAA3P,EAAAmB,cAAA,MACO,CAAEH,UAAAwkL,GACL71K,EAAU3P,EAAUmB,cAAA,SAAArF,GAAAypL,EAAAvyK,KAAA,WAAAmwE,UAAA5hF,SAAAtC,KAAAikF,mBACpBvzE,EAAS3P,EAAAmB,cAAA,QAAAH,UAAA,iCDwCa,GCrChB,kBAIJ7H,EAAA,WAUO,SAAA2F,WACPsc,MAASu7H,EAAA73I,EAAA63I,aAAAxsI,EAAArL,EAAAqL,MAAAs7K,EAAA//J,EAAA,EAAA5mB,EAAA,2CACJkB,EAAGmB,cAAAukL,GAAAhgK,EAAA,KAAA+/J,EAAA,CAAAt7K,SAAA,UAAA26K,cAAA,OACT,CAKR7gL,KAAA,8OClDuE,SAAApF,GAGpB,SAAA8mL,EAAA7mL,GACI,IAAAC,EAAAF,EAAAG,KAAAC,KAAAH,IAAAG,YAgB7CF,EAAAG,MAAkB,CAE7Bkc,MAAArc,EAAAD,MAAAsc,OAEArc,EAAA43I,aAAA53I,EAAA43I,aAAAt3I,KAAAN,GAAiCA,EAvBmC2mB,EAAA,EAAAigK,EAAA9mL,KAuB7Da,UAAAi3I,aAAA,yBAEL,OAEgB,IAAhB13I,KAAAC,MAAAkc,MAAgB,EAAC,eAEfu7H,yBAEAA,kBAgDHj3I,UAAAoB,OAAA,eA7CC8kL,EAAA,IAAA3mL,KAAAC,MAAMkc,MAAN,8BA4CC,IA5CDnc,KA4CCC,MAAAkc,MAAA,mCA3COzL,EAAA3P,EAAAmB,cAAE,MAAK,CAAEH,UAAA,WACThB,EAAAmB,cAAiB,SAAMH,UAAA,eAAuB,aAMlDhB,EAAAmB,cAAA,UAACm0B,QAAAr2B,KAAA03I,aAAA31I,UAAA,iBAAyB4kL,GAAkB,UAExC5lL,EACEmB,cAAA,UAAAm0B,QAAAr2B,KAAA03I,aAAA31I,UAAA,iBAAA6kL,GAAA,WA9C4D,oBA6Df1oL,OAAA4jE,GAAA,EAAA5jE,CAAA2oL,QAMzC3oL,OAAAo4B,EAAC,WAADp4B,CAAC,SAAkB2B,EACZsqB,YAUjBppB,EAAAmB,cAAA,OAAAioB,MAAAkM,QAAAx2B,EAAAw2B,QAAAuV,aAAA/rC,EAAA+rC,aAAA9O,MAAA,CACJs4B,SAAC,SACHjqD,WAAA,UAxDiC+C,OAAA,OACxBhD,MAAA,UAuDP+5B,QAAA,EACFi8I,aAAA,GAEW/kF,OAAA,gECxFDt9F,MAAA,GACqCyM,OAAA,GASpC4C,OAA8C,OAEvDhG,OAAA,EACS4+K,MACL,OACE/9E,OAAA,EACEg+E,gBAGA,gJAOCr2K,EAAa3P,EAAAmB,cACZ,OAAA46B,MAAA,CACEhvB,gBAAAjO,EAAAqL,MAMH3M,QAAY,QAGvBu5C,SAAA,wBCrCiC7/B,OAAA,EAONsjC,MAAe,SCoBJyrI,GAAA,SAAAC,EAAAxrK,OACtC3Z,cAAY,IAAZ2Z,IAAwBA,EAAA,gBAMxB3Z,EAAA,SAAuBlC,GAErB,SAAAsnL,IAEF,IAAApnL,EAAsB,OAAtBF,GAAuBA,EAAoC4pB,MAAAxpB,KAAAypB,YAAAzpB,KASzD,OARAF,EAAK62B,iBAAuBz4B,OAAOo4B,EAAS,UAAhBp4B,GAC5B4B,EAAAq5E,cAAA,SAAAjuE,GAEF,IAAApJ,EAAAhC,EAAoBD,MAAAs5E,EAAqCr3E,EAAAq3E,cAAA72E,EAAAR,EAAAQ,SAEvD,OAD0B62E,GAAgB72E,GAC1C4I,IAGKpL,EA4CJ,OAxDD2mB,EAA4B,EAACygK,EAActnL,GAe7CsnL,EAAAzmL,UAAmBoB,OAAG,WACpB,IAAK/B,EAASE,KACd8B,EAAA9B,KAAAH,MAAAL,EAAAsC,EAAAtC,MAAAurB,EAAAjpB,EAAAipB,SAEFo8J,EAAgBz2K,EAAA3P,EAAAmB,cAAA+kL,EAAAxgK,EAAA,KAAA67J,IAAAtiL,KAAAH,MAAA,aAAAyC,SAAAtC,KAAAm5E,iBACd,OAAWzoE,EAAA3P,EAAAmB,cAAmBklL,EAAmC,GAAAz1K,QAAAw1K,EAAAlrF,UAAA,cAAA3wD,EAAAC,EAAAC,GACjE,OAAA96B,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KAzBarR,EAAA62B,iBAAA5X,SAAKrO,EAAM3P,EAAcmB,cAACmlL,EAAA,EAAA5gK,EAAA,KAAA+kB,EAAA,CAAAK,iBAAA/rC,EAAA62B,iBAAA5X,QAAA+sB,iBAAA,cAAAF,aAAAL,EAAAI,aAAAL,OA8B1BvgB,EAAA,CAETZ,IAAArqB,EAAA62B,iBACEkiH,gBAAAvtG,EAQAwtG,gBAAAvtG,IAQA76B,EAAA3P,EAAAmB,cAAKolL,GAAiC,CAAAn9J,IAAArqB,EAAA62B,iBAAAN,QAAAiV,EAAAM,aAAAL,EAAArgC,MAAAhN,OAAAslL,EAAA,EAAAtlL,CAAA4B,EAAAD,MAAAqL,OAAA,UAAA1L,EAAAuU,YAW3CmzK,EAzDH,CA2DE5wJ,EACE,wBACE7a,QAUEvd,OAAA4jE,GAAM,EAAN5jE,CACE8oL,GAAUP,GAEV,gBAMVc,GAACrpL,OAAA4jE,GAAA,EAAA5jE,CAAA8oL,GAAAH,GAAA,yBAOK,SAAAhnL,YACEkB,EAAAmB,cAAA,MAAC,CAAAH,UAAU,+BACX2O,EAAA3P,EAAAmB,cAAC,OAAAH,UAAM,iCAKLhB,EAAAmB,cAAa,UAAAH,UAAA,+BAAAs0B,QAAAx2B,EAAA2nL,SACHzmL,EAAAmB,cAAI,MAAI,CAAAH,UAAK,mCAIrB2O,EAAW3P,EAAAmB,cAAA,KAAAH,UAAA,gBACjB2O,EAAA3P,EAAAmB,cAAA,OAAK,CAAAH,UAAU,8BAASlC,EAAAjE,SAAAiE,EAAAjE,OAAA8U,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,iCACtBhB,EAAAmB,cAAA,QAAAH,UAAQ,8BAAoBlC,EAAoBjE,kBAC9C8U,EAAA3P,EAAAmB,cAAG,SAAU,CAAAH,UAAa,eAIhCs0B,QAAAx2B,EAAAitF,SACHp8E,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA,mBACHlC,EAAAkrB,UAACra,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,6BAAAlC,EAAAkrB,2BC9I4C,IAAAA,EAAAjpB,EAAAipB,SAEP,OAAAra,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,sBAAAgpB,OA+BpC,QACExtB,GAAK,YAAAkqL,YAASjmL,MAAA,mBACC,YAAEkmL,YAAAlmL,MAAA,UCnCammL,GDsCV,SAAW/nL,cAEzBC,WACAE,KAAQC,KAAAH,IAAAG,mCACF,SAAAshB,cACN,CAAI/f,MAAI+f,EAAA9M,OAAAjT,+BAET,SAAA+f,KACFzgB,SAAA,CAAAzC,KAAAkjB,EAAA9M,OAAAjT,WAEDqmL,kBAAC,SAAAtmK,GAACxhB,EAAAe,SAAA,CAAArC,GAAA8iB,EAAA9M,OAAAjT,WAGJsmL,oBACE,SAASvmK,KACPzgB,SAAA,CAAahF,KAAEylB,EAAU9M,OAAAjT,+BAEvB,SAAA06J,KACFp7J,SACF,CAAAkT,KAAAkoJ,OAGD6rB,cAAC,WACFhoL,EAAAD,MAAAkoL,mBAAAthK,EAAA,KAAA3mB,EAAAG,WAGAA,MAAKwmB,EACU,KAAA5mB,EAACmoL,yBA1BF,EAAEC,EAAEroL,eA6BVsoL,UAAO,sBACRjoL,MAAA7B,EAAA0D,EAAA1D,KAAAvC,EAAAiG,EAAAjG,KAAA2C,EAAAsD,EAAAtD,GAAAuV,EAAAjS,EAAAiS,KAAAxS,EAAAO,EAAAP,iBAEDhE,GAAS,YAAAmqL,YACTh3K,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KAPST,EASb3P,EAAAmB,cAAA+/K,EAAA,CAAAzgL,MAAA,OAAAm4C,WAAA,EAAAunH,WAAA,EAAA3rI,OAAAv1B,KAAA8nL,cAAAxlL,SAAAtC,KAAAmoL,oBAAA5mL,MAAAnD,IACEsS,EAAW3P,EAAAmB,cAAc+/K,EAAM,CAAAzgL,MAAe,KAAAm4C,WAAA,EAAAunH,WAAA,EAAA3rI,OAAAv1B,KAAA8nL,cAAAxlL,SAAAtC,KAAA4nL,kBAAArmL,MAAA/C,IAEhDkS,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,yBACF2O,EAAA3P,EAAAmB,cAAAggL,EAAA,CAAArjL,MAAA,WAzDc6R,EAAS3P,EAAAmB,cAAoBozB,GAAA,GAAAvzB,UAAA,gBAAAwzB,OAAAv1B,KAAA8nL,cAAAvmL,MAAA1F,EAAAyG,SAAAtC,KAAA6nL,wBAGzCn3K,EAAe3P,EAAAmB,cAAQwO,EAAA3P,EAAAoQ,SAAA,KACvBT,EAAa3P,EAAAmB,cAAe+/K,EAAY,CAAAzgL,MAAA,QAAAm4C,WAA0B,EAAApkB,OAAav1B,KAAA8nL,cAAAxlL,SAAAtC,KAAAooL,qBAAA7mL,QAAA2/J,WAAA,IAC/ExwJ,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,+DACH2O,EAAA3P,EAAAmB,cAAAozB,GAAA,GAAAvzB,UAAA,gBAAAwzB,OAAAv1B,KAAA8nL,cAAAvmL,MAAA1F,EAAAyG,SAAAtC,KAAA6nL,2BAGQpnL,UAASoB,OAAU,WAC3B,IAAA/B,EAAAE,KAiDD+T,EAAA/T,KAAAC,MAAA8T,KAAA,OAAArD,EAqBC3P,EAAAmB,cAAA,OAAAH,UAAA,kBApBS2O,EAAA3P,EAAAmB,cAAA,OAAAH,UAA6B,WAGnC2O,EAAA3P,EAAAmB,cAACggL,EAAA,CAAArjL,MAAiB,GAAC,QACjB6R,EAAA3P,EAAAmB,cAAAw6D,EAAA,GAAAn6D,YAAA,cAAAs7B,cAAA,EAAA32B,QAAAmhL,GAAA9mL,MAAA8mL,GAAAz9K,KAAA,SAAA8vB,GAAA,OAAAA,EAAAn5B,QAAAwS,IAEIzR,SAAA,SAAkByR,GAAC,OAAAjU,EAAYwoL,oBAC7Bv0K,EAAAxS,QAAA1C,MAAA,UAOJqpL,YAMPx3K,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,WACH2O,EAAC3P,EAAAmB,cAAA,UAAAm0B,QAAAr2B,KAAAH,MAAA0oL,mBAAAxmL,UAAA,oCArFwC2O,EAqFxC3P,EAAAmB,cAAA,KAAAH,UAAA,sBAhEuB,2PEtCqB3D,KAAA,GACAI,GAAA,MAMgBgqL,YAAAxsH,EAAAwsH,YAAA,MAG3D1oL,EAAA2oL,gBAAW,SAAA5rL,GACXiD,EAAAe,SAAA,SAAem7D,GAAA,OAFOkrG,cAAZlrG,EAGXkrG,cAAA11J,OAAA,SAAA2G,GAWD,OAAAA,EAAAtb,WAAA,sDAeIiD,EAAK4oL,YAAO,SAAAC,GACb7oL,EAAAe,SAAA,SAAAm7D,GAAA,OAEDkrG,cAAAlrG,EAAkBkrG,cAAlB9lK,IAAA,SAAA+W,GACc,OAAAA,EAAAtb,KAAA8rL,EAAA9rL,GACb4pB,EAAA,KAAAkiK,GAgEAxwK,MA3DY,WACTrY,EAAOD,MAAAyC,SAAAxC,EAAAG,MAAAinK,kBAIT,IAAMtE,EAAQ/iK,EAAOqnK,eAAI,UACzBpnK,EAAMG,MAAS,CACbinK,cAAatE,cACFA,EAAMz9J,OAAA,EAAArF,EAAA8oL,0BAAAhmB,GAAA,GAEjB9iK,oBAGYW,UAAImoL,0BAAW,SAAAhmB,GAC7B,OAAM1jK,KAAQ+I,IAAGuhB,MAAK,KAAIo5I,EAACxhK,IAAY,SAAMunL,GAAY,OAAOA,EAAE9rL,KAAAuE,IAAA,SAAA+W,GAAA,OAAAA,KAAA,KAGnD1X,UAAKoB,OAAiB,WACrC,IAAM/B,EAAME,KAENknK,EAAclnK,KAAMC,MAAGinK,cAC7B,OAAMx2J,EAAc3P,EAAAmB,cAAY2mL,GAAuB,CAAMjtL,MAAG,kBAE1D8U,EAAM3P,EAAAmB,cAAO,MAAK,KACrBglK,EAAQ/hK,OAAA,GACH+hK,EAAe9lK,IAAA,SAAA4mL,EAAAtrL,GAAA,OAAAgU,EAAA3P,EAAAmB,cAAAylL,GAAA,CAAArhL,IAAA0hL,EAAAnsL,KAAA,IAAAa,EAAAsrL,eAAAD,mBAAAjoL,EAAA4oL,YAAAH,mBAAA,kBAAAzoL,EAAA2oL,gBAAAT,EAAAnrL,SACpB6T,EAAe3P,EAAAmB,cAAO6/K,EAAA,CAAA/7H,QAAA,UAAAlqD,KAAA,aAAAu6B,QAAAr2B,KAAA8oL,cAAA,uBAIR,kBAOd,SAAAhnL,SACAA,EAASipB,kBACJhqB,EAASmB,cAAM,OAAAH,UAAA,uBAAAgpB,SAKd,aAGU,WACf7wB,EAAYqhC,EAAcrL,SAGX,aAGK,uBAalB,YAII,qBACc,YACf,SAAAtwB,uBAKD,UAAAA,EAAA4pB,MAAAxpB,KAAAypB,YAAKzpB,cAHL,EAAA+oL,EAAAnpL,KAaPa,UAAAkpB,kBAAA,gBAAMxZ,oBAGD+rD,mBAAA,wBAMR6sH,EAACtoL,UAAA0P,KAAA,WApHM,IAAArQ,EAAAE,KACL8B,EAAS9B,KAAKH,MAAAyO,EAAAxM,EAAAwM,OAAA26J,EAAAnnK,EAAAmnK,QAAAE,EAAArnK,EAAAqnK,YACd,GAAe,IAAf76J,EAAQnJ,OAAR,CAGA,IAAAqD,EAAO8F,EAAAlN,IAAA,SAAgBwmD,GAAK,OAAAA,EAAAt5B,UAC5B0mF,EAAA1mG,EAAAlN,IAAA,SAAAwmD,GAAA,OAAAA,EAAA/rD,OA+GJm9C,EAAC1qC,EAAAlN,IAAA,SAAAolC,EAAAlV,GA3H6B,OAAAkV,EAAAt7B,MAATs7B,EAAAt7B,4BCvBwBwT,EAAAsqK,KAAAxgL,IAAA,EAEjBygL,EAAAzgL,EAAApH,IAAA,SAAAwN,GAAA,OAAAA,EAAA8P,EAAA,MAEkB7f,EAAAmB,KAAAkpL,iBAAAC,YAQ9C79K,EAAAtL,KAAAkpL,iBAAAE,aAAgCj/K,EAAAjL,KAAAyJ,IAAA9J,EAAAyM,GAAA,EAAhCuB,EAAA1C,IAAA,uBAwCCk/K,EAAAnrL,OAAAosJ,GAAA,OAAApsJ,CAAA8B,KAAAspL,YAnCCrpI,KAAA,IACQn1C,KAAA,QAA8CjM,GAE9CiM,KAAA,SAAaQ,GAEnBP,OAAA,KACMD,KAAA,YAAe,aAAejM,EAAA,EAAK,IAAAyM,EAAA,OACvCi+K,EAAarrL,OAAGosJ,GAAM,IAATpsJ,KACJA,OAAAosJ,GAAA,IAAApsJ,eACA2O,eACA28K,YACL,KAGJh9B,UAAO,aACL+8B,EAAO/gL,YAERuC,OAAC,QACDD,KAAA,IAAA2+K,GAEG3+K,KAAK,OAAG,SAAgB3Q,EAACm3B,GAAA,OAAK0nB,EAAA1nB,KAClCwL,MAAO,eAAc,KACpBA,MAAA,kBAAA3iC,EAAAm3B,GAAA,OAAA0nB,EAAA1nB,KAEHwL,MACE,eAAAqsI,EAAC,MASJ3vJ,GAAA,qBAAArf,EAAAm3B,GAtCMpzB,OAAAosJ,GAAe,OAAfpsJ,CAAe4B,EAAA4pL,gBAAA5sJ,MAAA,aACpB5+B,OAASosJ,GAAA,OAATpsJ,CAAS4B,EAAA6pL,qBAAA9tL,KAAAm5G,EAAA1jF,GAAA,KAAA23J,EAAA33J,GAAAswB,QAAA,WAsCbpoC,GAAA,YAAC,WAxC+Btb,OAAAosJ,GAwC/B,OAxC+BpsJ,CAwC/B4B,EAAA4pL,gBAxCsB5sJ,MAAA,MAAAwtH,GAAA,MAAAtjG,MAAA17C,EAAA,yRCZsBoF,EAAA3P,EAAAmB,cAAA,OAAAioB,IAAA,SAAAH,GAAA,OAAAlqB,EAAAopL,iBAAAl/J,GAAAjoB,UAAA,qBAAA+6B,MAAA,CAERxxB,OAAA,GAAAA,EAAA,KACMzM,MAAAK,KAAAyJ,IAAA9J,EAAA,IAAAyM,GAAA,OAIoBoF,EAAA3P,EAAAmB,cAAA,OAAAioB,IAAA,SAAAH,GAAA,OAAAlqB,EAAAwpL,WAAAt/J,MAW/DtZ,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,mBAAAooB,IAAA,SAAAH,GAAA,OAAAlqB,EAAA4pL,eAAA1/J,IAAiCtZ,EAAA3P,EAAAmB,cAAA,MAAoB,CAAAH,UAAA,yBAArD2O,EAAA3P,EAAAmB,cAAA,OAAArF,GAAA,gBAAAkF,UAAA,yBAAAooB,IAAA,SAAAH,GAAA,OAAAlqB,EAAA6pL,oBAAA3/J,QAeUtZ,EAAE3P,EAAAmB,cAAK,MAAE,CAAAH,UAAA,kBAET2O,EAAU3P,EAAAmB,cAAa,MAAM,CAAAH,UAAO,sBACtC2O,EAAc3P,EAAKmB,cAAc,QAAAH,UAAA,6CAGvB,SACZ,aACD,aAED,sBACK,WACU,iBAAAmpD,QF4EN,GExET,kBASoB,SAAKtrD,uBAEd,UAAKA,EAAS4pB,MAAKxpB,KAASypB,YAAIzpB,cAD1C,EAAA4pL,EAAAhqL,KAGDa,UAAAoB,OAAA,oEArCIgoL,EAwDP3rL,OAAAk1K,GAAA,EAAAl1K,GAxDqBkD,IAAA,SAAAwQ,GACnB,IAAA1K,EAAA0K,EAAA2/C,QAAAnwD,IAAA,SAAAsT,GAED,OACOlT,MAAakT,EAAA7Y,KACnB0F,MAAAmT,EAAAnT,SAqCO,MAAM,CAEVC,MAAAoQ,EAAA/V,KAWHqL,aA3DC3F,EAAAsoL,EAAoBzoL,IAAA,SAAAwQ,GACpB,OAAAA,EAAA1K,QAAA0D,KAAA,SAAAqY,GAAA,OAAAA,EAAA1hB,QAAA+7C,MAJ6B,OAAA5sC,EA+DhC3P,EAAAmB,cAAAw6D,EAAA,GAAA79D,QAAAy+C,aAAA/7C,EAAAs8B,cAAA,EAAA32B,QAAA2iL,EAAAtnL,YAAA,SAAAD,0CAvBuB,0CCzDkBwnL,GAAA5vL,EAAA,QAC2B6vL,GAAA7vL,EAAAqhC,EAAAuuJ,8ECOnE,gaAToCE,KAAAp7K,GAC4BtM,EAAAsM,EAAAxN,IAAA,SAAA4E,GAAA,OAAAA,EAAAzE,SAINe,EAAAsM,EAAArN,MAAA,CAAAqN,EAAArN,OAAA,KAInDzB,oBAEEW,UAAAkpB,kBAAW,WAClB3pB,KAAAiqL,cASJC,EAAAzpL,UAAAy7D,mBAAA,SAAAn4B,GAAiC/jC,KAAAiqL,gBAI/BxpL,UACEoB,OAAA,WACA,IAAAC,EAAK9B,KAAAH,MAAehB,EAAIiD,EAAAjD,MAAAke,EAAAjb,EAAAib,MAAiBotK,EAAAroL,EAAAqoL,cAAAC,EAAAtoL,EAAAsoL,YAAA7nL,EAAAT,EAAAS,YACzCqgB,EAAKrlB,GAAoB,cAAAolB,cAAA5F,qKAG3BmtK,EAAAxsH,aAAA,CAAA7+D,MAAA,GACEsrL,eAAA,GAEAD,KACO,kBAIDhwL,EAAA,WAGEA,EAAO,aAIT,WAMF,SAAA4H,OACA+S,EAAA/S,EAAAuoL,kBAAA,IAAAx1K,EAAA,EAAAA,EAAAE,EAAAjT,EAAAwoL,SAAmEA,OAAA,IAAAv1K,KAAAzS,EAAAR,EAAAQ,SAAAf,EAAAO,EAAAP,aACnEmP,EAAA3P,EAAAmB,cAAI,MAAM,OAEFnB,EAAEmB,cAAC4lI,GAAA,GAAAxqF,aAAAp/C,OAAAX,GAAA,iBAAAW,GAAAoE,SAAA,SAAAf,GAAA,OAAAe,EAAApE,OAAAX,GAAA,SAAAW,CAAAqD,KAAAgpL,YAAA,EAAAC,YAAA,EAAAjpL,MAAArD,OAAAX,GAAA,iBAAAW,CAAAqD,GAAA+oL,WAAAD,iBAMjBvX,GAAA54K,EAAA,WAGGA,EAAA,QAGHuwL,GAACvwL,EAAA,WAIGA,EAAkB,QAItB4yD,GAAC5yD,EAAA,QAIDwwL,GAACxwL,EAAA,oDCYcywL,GAAQC,MCzDC,SAAAhrL,YAoBxBirL,EAAAhrL,OACEC,EAAKF,EAASG,KAAEC,KAAMH,IAAaG,KA/BnC,OAgCFF,EAAEgrL,aAAA,IAAAC,GAAA,EAjCQjrL,EAAAijC,aAAI,KACPjjC,ECxB8D,SDmC7D,EAAA+qL,EAAAjrL,KATAa,UAAEkpB,kBAAY,eAClB7pB,EAAAE,KAUJA,KAAA+iC,aAAA/iC,KAAA8qL,aACUh9E,YAIP48E,GAAA,YAAA7qL,GAIC,OAAI3B,OAAC8sL,GAAoC,EAArC9sL,CAAqC2B,EAAAitD,UAC1C5uD,OAAAusL,GAAA,EAAAvsL,CAAA,IAYK2B,EAAAk0F,QAAEk3F,GAAO,EAAA/sL,OAAsB4uD,GAAA,EAAtB5uD,CAAsBA,OAAAX,GAAA,WAAAW,CAAA2B,EAAAitD,uBAezB,qBAAAhtD,EAAAD,MAASs7F,4GAEP6vF,GAAA,GAAAjnJ,EAAG+oB,WAAU5uD,OAAA8sL,GAEf,EAFe9sL,CAEf8B,KAAAH,MAAAitD,WAAAnmC,GAAA5lB,EAAAkwF,QAAAltD,EAAA/jC,KAAAH,QA3DmBG,KAAA8qL,aAAM91K,KAAahV,KAkErDH,QAEcgrL,EAAApqL,UAAAwpB,qBAAA,0ICvFwD4gK,EDkC7C,CCjCHv0J,EAAA,eASoC6qI,GAAAjnK,EAAA,QAoDxDgxL,GAAA,SAAAtrL,GAC2B,SAAAurL,EAAAtrL,GAA9B,IAAAC,EAAAF,EAAAG,KAAAC,KAAAH,IAAAG,KAAAF,EAAAsrL,QAAAlP,KAAA,WAkDE,IAAAznK,EAAU3U,EAAGD,MAAC4U,OACR5Y,EAAMiE,EAAKG,MAAMpE,OACnBgF,SAAW,CAAC2H,KAAAtK,OAAAX,GAAA,QAAAW,CAAArC,EAAA,CAAA4Y,qBAEd42K,aAA8B,SAAA/pK,GAC9BxhB,EAAIe,SAAS,CAAAhF,KAAAylB,EAAA9M,OAAAjT,eAEZ1B,EAAAhE,KAAA4Y,EAAA5U,EAAA4U,gBACDxU,MAAU,MACRpE,OACDqC,OAAAX,GAAA,QAAAW,CAAArC,EAAA,CAAA4Y,qBA5DLgS,EAAA,EAAA0kK,EAAAvrL,KAiEIa,UAAOy7D,mBAAA,SAAMn4B,EAAUi4B,GACzB,IAAEngE,EAAAmE,KAAAC,MAAApE,+CAqCHmE,KAAAorL,UAlGEprL,KAAAH,MAAAhE,OAAAkoC,EAAAloC,MAAAmE,KAAAH,MAAAhE,UAEDmE,KAAAa,SAAA,CAAAhF,KAAAmE,KAAAH,MAAAhE,OAECmE,KAAAC,MAAAuI,OAAAwzD,EAAAxzD,MAEDxI,KAAAH,MAAAyrL,eAAAtrL,KAAAC,MAAAuI,KAAAxI,KAAAC,MAAApE,SAIY4E,UAAAoB,OAAI,eAEZC,EAAM9B,KAAAH,MAAUhB,EAAAiD,EAAAjD,MAAAyM,EAAAxJ,EAAAwJ,SACdtL,KAAQC,MAAMuI,YACdkI,EAAQ3P,EAAAmB,cAAA,OAAAH,UAAA,wBACDhB,EAAEmB,cAAA,YAAA46B,MAAA,CAAAj+B,QAAAyM,UAAA/I,YAAA,oBAAAhB,MAAAvB,KAAAC,MAAApE,KAAAyG,SAAAtC,KAAAqrL,aAAAtpL,UAAA,uBACKhB,EAAAmB,cAAA,cAAAsG,EAAApH,IAAA,SAAAmM,EAAA7Q,UACVgU,EAAO3P,EAAAmB,cAAA,QAAAoE,IAAA5J,aAEPyI,sBAED2O,OAAA3O,OACF,KACDuL,EAAe3P,EAAKmB,cAAE,KAAAH,UAAA,+BA7B3B,uBAuCS7H,EAAA,WACGA,EAAAqhC,EAAAuuC,OA6Bb5rE,OAAA6iL,EAgBC,EAhBD7iL,CAgBC,iBAfO,CAENwc,QAAMxc,OAA2B2mC,EAAC,IAA5B3mC,CAA4BqtL,QAAA9kK,EAAA,uIAClC7qB,MAAOsC,OAAC2mC,EAAqB,IAAtB3mC,CAAuBysL,QAAAlkK,EAAA,iUAC9BllB,MAAOrD,OAAO2mC,EAAS,IAAhB3mC,CAAgB0sL,QAAAnkK,EAAA,2cAOtB,SAAA7mB,YACC4rL,QACD1rL,EAAA,OAAAF,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,YACDF,EAAA0oI,WAAO,SAAAjnI,EAAA0jC,GACR,IAAA1jC,MAAA1F,KAED,YAEQ,IAAAmP,EAAS,GAxFW,OA0FxBi6B,IACGj6B,EAAMi6B,QAASA,GAGb1jC,EAAK2J,QACLF,EAAIE,MAAC3J,EAAW2J,OAIlB3J,EAASqkD,WAGf56C,EAAA46C,SAAArkD,EAAAqkD,UAtG2Bl1C,EAuG7B3P,EAAAmB,cAAA,QAAA46B,MAAA9xB,GAAAzJ,EAAA1F,kBAvBU,EAAA2vL,EAAA5rL,yDF/IY4rL,EAAA/qL,UAAAy7D,mBAAA,WAGgCl8D,KAAAmQ,QAiBjDq7K,EAAA/qL,UAAe0P,KAAA,WAErB,IAAArO,EAAA9B,KAAAH,MAAAkiK,EAAAjgK,EAAAigK,UAAAviK,EAAAsC,EAAAtC,MAA2B,GAAAuiK,GAAA/hK,KAAAyrL,cAAA,CAA3B,IAAAjjL,EAAAu5J,EAAAv5J,KAAAw8J,EAAAjD,EAAAiD,KAAAC,EAAAlD,EAAAkD,KAAA7nJ,EAAA2kJ,EAAA3kJ,UAAA82H,EAAA6tB,EAAA7tB,UAAAhtI,EAAA,CAkHE8I,OAAA,CAAA5D,MAAA,GACQhF,OAAA,CACAuR,MAAS,CAGbvM,MAAA,EACEoD,KAAA,EAKC4qC,MAAU,EAGLzsC,UAAW,EACXyP,UAAUlf,OAAAk1K,GAAuB,EAAvBl1K,CAAuBkf,EAAA5d,EAAAuU,eAGjC3H,MAAA,gBAEA,MACA44J,MACAC,GAQVx3J,KAAA,CAAAstC,WAAA,EAAA3uC,MAAA,IAmBHg4J,EAAA,CAxJC57J,OACO0C,MAAOhN,OAAAk1K,GAAA,EAAAl1K,CAAAg2I,EAAA10I,EAAAuU,OAGd,IACO+S,GAAO/lB,EAAAsG,KAAArH,KAAAyrL,cAAA,CAAArnB,GAAAl9J,GAGd,MAAAkwF,GACQlhF,QAAAxG,IAAsD,4BAA1C0nF,EAAAlwF,kBAOLwkL,gBAAiB,SAAS3pB,SAClC/hK,KAED8B,EAAM9B,KAAAH,MAAAyL,EAAoBxJ,EAAAwJ,OAAWzM,EAAUiD,EAACjD,MAChDilK,EAAS,CACXhsH,SAAE,kBACO,WACT,OAGJ,GAFCgsH,EAAAjlK,QAAA,KAEDkjK,EAAAuC,KAAA,CACM,IAAAC,EAAaj5J,GAAA,SAAApM,KAAA6mD,MAAAz6C,EAAA,OACfw4J,EAAOx4J,OAAUA,EAAIi5J,EAAkB,UAG1CT,EAAAx4J,OAAApM,KAAA+N,MAAA,IAAA3B,GAAA,KAGO,OAAAoF,EAAE3P,EAAAmB,cAAA,MAAQ,CAAE46B,MAAAgnI,EAAA35I,IAAQ,SAAEH,GAAA,OAAAlqB,EAAA2rL,cAAqBzhK,QAG3CvpB,UAASoB,OAAW,WAE1B,IAAMC,EAAA9B,KAAAH,MAAeyL,EAAGxJ,EAAAwJ,OAAAzM,EAAAiD,EAAAjD,MAAA0C,EACtBO,EAAAP,MAAA4E,EAAArE,EAAAqE,OAAA+iC,EAAApnC,EAAAonC,OAAA64H,EAAAjgK,EAAAigK,UAAAj0J,EAAAhM,EAAAgM,gBAAAuoB,EAAAv0B,EAAAu0B,QAAAt0B,EAAAD,EAAAC,UACEoZ,EAAMf,YACN1J,EAAa3P,EAAOmB,cAAK,OAAAH,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAAid,EAAAT,QAAA3Y,GAAA+6B,MAAA,CAAAj+B,QAAAyM,SAAAwC,mBAAAuoB,WAE3B90B,EAAM3F,OACN8U,EAAA3P,EAAAmB,cAAA,OAAAH,UAAAoZ,EAAAvf,OAAA2F,EAAA3F,OAEI8U,EAAA3P,EAAAmB,cAAwB,QAAAH,UAA2BoZ,EAAG5Z,OACtDvB,KAAAwoI,WAAkBriI,EAAI,mBACtBnG,KAAAwoI,WAAAjnI,GACAvB,KAAQwoI,WAAYt/F,IAEpB64H,GAAA/hK,KAAA0rL,gBAAiC3pB,OE0DtC,GFtDS,kBAWM,SAAWniK,sBAGb,UAAOA,EAAA4pB,MAAAxpB,KAAAypB,YAAwBzpB,kCAC9B,yBACCnB,EAAAiD,EAAAjD,MAAA0C,EAAmBO,EAAAP,MAAA+J,EAAAxJ,EAAAwJ,OAAA+qB,EAAAv0B,EAAAu0B,UACzBs1J,GAAQ9sL,EAAqByM,EAAI/J,EAAA3F,gBAC3BmF,EAAEmB,cAAMwO,EAAsB3P,EAAEoQ,SAAA,OACvCpQ,EAAAmB,cAAA,OAAA46B,MAAA,CAAAxxB,OAAAsgL,EAAAC,YAAA,KAAAhtL,MAAA,QAAAsrB,IAAA,SAAAH,GAAA,OAAAlqB,EAAA2rL,cAAAzhK,GAAAqM,cACDy1J,WAAMp7K,EAAoB3P,EAAAmB,cAAA,OAAA46B,MAAA,CAC1Bg/D,UAAO,SACRl2C,SAAAgmI,EAAAG,cACD32H,SAAO,SACL42H,aAAa,WACbC,WAAW,kBACT,WACFptL,MAAC,OACDk5C,IAAI,OACLokD,OAAA,YACG56F,EAAM3F,SAEbkE,WApBW,EAAMkH,EAAIpH,KAuBxBa,UAAMkpB,kBAAa,gBACjBxZ,UAEA1P,UAAAy7D,mBAAA,WAEFl8D,KAAImQ,UAEH1P,UAAAyrL,uBAAA,WAAC,IAAApqL,EAAO9B,KAAKH,MAAAoqJ,EAAAnoJ,EAAAmoJ,SAAAC,EAAApoJ,EAAAooJ,SAAAlX,EAAAlxI,EAAAkxI,WAAAxzI,EAAAsC,EAAAtC,MACZ2sL,EAAYn5C,IAAyB7tI,OAAK,UAC3CshB,EAAA,EAAAusH,EAAA5xI,IAAA,SAAAiH,EAAA3L,GACF,OAAAA,EAkCD,OAAA6E,MAAA2oJ,EAAAh/I,MAAAhN,OAAAk1K,GAAA,EAAAl1K,CAAAmK,EAAA6C,MAAA1L,EAAAuU,WAIQq4K,EAAap5C,EAAAt2I,EAAA,SACb,CAAA6E,MAAQ8G,EAAM9G,MAAA2J,MAAAhN,OAAAk1K,GAAA,EAAAl1K,CAAAkuL,EAAAlhL,MAAA1L,EAAAuU,iBAEdk2I,EAAe/+I,MAAAhN,OAAQk1K,GAAA,EAARl1K,CAAQiuL,EAAAjhL,MAAA1L,EAAAuU,sBAIzBs4K,aAAgB,SAAMlnL,GAK3B,OAAAA,EAAA,KA/JqC,EAAAA,EAAA,MAEzB,EAAAA,EAAA,OAEX1E,UAAA0P,KAAmB,WACnB,IAAArO,EAAA9B,KAAcH,MAAAoqJ,EAAAnoJ,EAAAmoJ,SAAAC,EAAApoJ,EAAAooJ,SAAAie,EAAArmK,EAAAqmK,oBAAAC,EAAAtmK,EAAAsmK,qBAAAvpK,EAAAiD,EAAAjD,MAAAyM,EAAAxJ,EAAAwJ,OAAA9L,EAAAsC,EAAAtC,MAAA+B,EAAAO,EAAAP,MACdqqL,EAAAD,GAAA9sL,EAAAyM,EAAA/J,EAAA3F,OA0JJ+nK,EAACzkK,KAAAyJ,IAAA9J,EAAA+sL,EAAAC,aAnK0B/9K,EAmK1B5P,OAAA2jL,EAAA,EAAA3jL,CAAA,CAnKiBqsD,KAAA/qD,EAAAw5C,OAAAwwD,MA2KTl/C,MAAA9qD,EAAAw5C,OAAuBgxD,OACxBxqG,EAASuU,MACTkwJ,EAA0BkE,EAAwB,IAAE,EACpDhE,EAAcjlK,KAAAyJ,IAAAg7J,EAAoB,QAAAM,EAClCC,EAA4BC,EAAW,EACvCv+G,EAAc1mD,KAAKyJ,IAAIg7J,EAAA,EAAe,MAAS,OAAApiK,EAAA1F,KAAAmE,KAAAqsL,aAAA9qL,EAAA1F,KAAAsJ,QAAA,GAE9C+E,EAAA07C,EAAA,IACL1+C,EAAS,CACTE,OAAW,CACXK,OAAa,CACbO,MAAA,CACHW,IAAAuhJ,2FG9MW1oJ,MAAA,CAAA4K,MAAA,GACW7D,OAAA,CAAAL,OAAA,EAAAqE,eAAA,EAAAV,QAAA,GACsBG,KAAA,CAAAkC,OAAA,CAAArP,MAAA,IACVwJ,UAAA,CAC3BiG,OAAAtO,KAAAksL,yBAC4E1qL,MAAA,CAgBpF4K,KAAA+7J,EAA2BjgK,OAAAg8J,EAAyB,EAApD/7J,KAAA,CAAAC,KAAA8B,IASgCkC,KAAKg8J,EAmBnCvpK,MAAiBqlK,GAEX3iK,MAAA,CACF2J,MAAA3J,EAAA2J,MACDX,UAAA,WACD,OAAAhJ,EAAA1F,MA0HHsM,KAAA,CAAAC,KAAAw9C,EAAA36C,OAAAzL,EAAAgb,WAAAstF,WAAAC,YA9Ie37F,MAAA,KAKRg4J,EAAY,CACd57J,KAAK,IAAAjH,EAAW+sB,UAChB9sB,MAAKD,EAAQ3F,OAEhB,IAEDkrB,GAAA/lB,EAAoBsG,KAApBrH,KAAAyrL,cAAA,CAAArnB,GAAAl9J,GAEC,MAAAkwF,GASDlhF,QAAAxG,IAAA,wBAAgC0nF,EAAAlwF,EAAA3F,OAG7Bd,UAAAoB,OAAA,WACD,OAAO6O,EAAA3P,EACLmB,cAAW,OAAC46B,MAAA,CACJj+B,MAAK,OACLyM,OAAQ,OACR/M,QAAA,OACN+kL,cAAO,SACLxW,eAAU,SACV13G,SAAK,oBACKp1D,KAAKH,MAAMkC,WAAY/B,KAAAssL,uCAEjC,UACA,IACJpiC,SACA,EAEHke,sBAAA,EAEDD,qBAAA,EACEn1B,WAAS,IAERhsI,EHqBe,GGnBV,2BAcGnI,EAAAyM,EAAA1P,SACRA,QAEDmwL,EAAc7sL,KAAQyJ,IAAI,IAAA9J,EAAA,QAE1B0tL,EAAYT,EAAoBxgL,EADL,IAAfygL,EACuBzgL,QAGnC,WACQwgL,cAHM5sL,KAAKyJ,IAAA4jL,EAAiB1tL,iBAKjCktL,YAKc,WACA7xL,EAAAqhC,EAAAixJ,OAUJ,SAAA5sL,sBAGI,OAAXA,GAAWA,EAAS4pB,MAAAxpB,KAAAypB,YAAAzpB,sBACrB,sBACY,SAAAshB,EAAA+Z,OACdmvG,EAAA1qI,EAAAD,MAAA2qI,2BACDA,GACEA,EAAUnvG,EAAAlB,MAAA/7B,KAAAi9B,EAAAlB,MAAA37B,OCjIY,SD0HT,EAAAiuL,EAAA7sL,eAYbs8D,mBAAY,oCAGbvyC,kBAAA,gBACDxZ,OACAnQ,KAAIgqB,eACFujD,SAAAzmD,KAAkB9mB,KAAAgqB,cAClBujD,SAAUntE,KAAE,eAAAJ,KAAA27I,8BAGZ1xH,qBAAmB,yBACnBwS,OAAW,eAAIz8B,KAAA27I,6BAEflgH,SAAc,SAAUr0B,UACV,MAAdjC,OACD,EAAAiH,MAAA,EAAAzD,KAAA,EAAAV,IAAA,SAEOb,EAAAhG,IAAA,SAA6BqE,OACnC/I,EAAO+I,EAAA8V,MAAM9V,EAAA8V,MAAA7e,MAAA,EAIb,OACF0P,MAAA,EACD1P,QAAQo7C,SAAK,IAAAp7C,EAAA,eACZiM,IANClD,EAAA8V,QAAAyyB,MAAAvoC,EAAA8V,MAAA5S,KAAAlD,EAAA8V,MAAA5S,IAAA,KAOD+T,aANAjX,EAAA8V,QAAAyyB,MAAAvoC,EAAA8V,MAAAmB,cAAAjX,EAAA8V,MAAAmB,aAAA,QAQH,SAAAgwK,GAAA,OAAAA,EAAAhwL,WAED+D,UAAA0P,KASC,WARO,GAAE,OAAFnQ,KAAAgqB,QAAA,KAIFloB,EAAA9B,KAAAH,MAAAhB,EAAAiD,EAAAjD,MAAAuI,EAAKtF,EAAAsF,OAAU5J,EAAAsE,EAAoBtE,UAAMmxH,EAAK7sH,EAAA6sH,UAAMD,EAAY5sH,EAAA4sH,SAASE,EAAQ9sH,EAAA8sH,WAAM+9D,EAAA7qL,EAAA6qL,UAAAh/K,EAAA7L,EAAA6L,UAAA+lB,EAAA5xB,EAAA4xB,SAAA82G,EAAA1oI,EAAA0oI,8BACtF3rI,GArJL,IAAA8oC,EAAW9oC,EAAI,IACf8J,EAAUnL,EAAOY,KAAA6yC,UACjBhpC,EAAUzK,EAAKgB,GAAAyyC,UACf/0B,EAAWlc,KAAKy7B,SAAAr0B,GAChBwlL,EAAY,CACZ58K,OAAA,CAoJH5D,MAAA,GA3JiBhF,OAAA,CA6JlBoQ,MAAuBm1K,EACdh0K,MAAW,CACJvM,KAAIuiH,EACF1wG,UAAUtQ,EAClBysC,MAAa,GAEb9hC,OAAU,CAEZlM,KAAcwiH,EACTp/G,KAAA,EACR4N,WAAA,EACGjT,OAAc,GAEjB0O,KAAA,CACGzM,KAAcsiH,EACTl/G,KAAA,EACR0qC,SAAA,EACGE,MAAc,EACTzsC,UAAQA,GAEV0sC,WAAQ,GAGVlgB,MAAQ,CAChB/tB,MAAA,EAEc2uB,KAAA,iEE5MW4L,SAAAjT,GAAAn2B,GAAA,iBAOb2e,MAAuDA,EAAGzO,KAAA,CAC9DitC,gBAAA,EACPC,SAAA,sCCTwBG,WAAA,EACQ5vC,MAAA,UAC6BhD,OAAA,CAAA4yB,KAAA,EAAAygB,MAAA,GACJyjG,aAAA,GAWzDz9H,UAAA,CAMIwZ,KAA6ByvG,EAAA,SAC1Bt/H,MAAA,SAIL,IAID4b,GAAA/lB,EAAAsG,KAAArH,KAAAgqB,QAAA5iB,EAAAwlL,GAYG,MAAAx1F,GAUgD,MAA5ClhF,QAAAxG,IAAG,wBAAE0nF,EAAAw1F,EAAiBxlL,GACxB,IAAAgP,MAAA,6BAMNq2K,EAAAhsL,UAAAoB,OAAA,WAEF,IAAA/B,EAAiBE,wWF5DS2N,UAAA,GAEI8+K,EDyHb,CCvH0Bn2J,EAAA,wBAGzCgnE,GACE31D,EAAAh/B,EAAAV,MAKGU,GAAKV,GAAY0/B,EAAA,WAAgC24G,EAEpDnhI,EAAAwoB,EAAA,IAKS,OAAA24G,GAAsE,GAAG,WAElFA,GAAY,MAAAnhI,GANd,MAOC,QAEDmhI,GAAA,IAEc,6BATD,gBGlB2B,QAEoB,cAIL,UAcvDpmJ,EACA,oBAaU4H,WACDoJ,MAAAnJ,EAAAD,EAAAC,mBAEHhB,EAAYmB,cAAc,IAC1B,CAAKH,UAAO7D,OACZ2mC,EAAA,GADY3mC,CACZ,gBAAA6D,GAAA+6B,MAAA,CAAA5xB,YAsBNytI,GAAO,SAAA72I,OACLs0B,EAAKt0B,EAAAs0B,SAAA7a,EAAGzZ,EAAAyZ,MAAArQ,EAAApJ,EAAAoJ,MAAAiuE,EAAAr3E,EAAAq3E,cAAAu+D,EAAA51I,EAAA41I,aAORm1C,EAAO,CAIP3hL,SAaS,OANTkrB,IAGAy2J,EAAApmK,EAAA,KAAAomK,EAAA,CAAA9qL,UAAA,aAGSq0B,EAAmB1lB,EAAmD3P,EAMlFmB,cAAA,QAAAH,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,oBAAAk4B,GAAAl4B,OAAA2mC,EAAA,IAAA3mC,CAAA4uL,QAAArmK,EAAA,qGALC/V,EAAI3P,EACJmB,cAAAw2I,GAAAjyH,EACA,KAAAomK,KAAYn8K,EACZ3P,EAAAmB,cAAAqlL,GACA,CAAAprK,MAASZ,EAAArQ,QAAA5I,SAAA62E,EAAAu+D,eAAAkB,mBAAA,YAAA92I,GAEH,IAAAqoB,EAAQroB,EAAAqoB,IAAA0uH,EAAW/2I,EAAA+2I,gBAAAC,EAAch3I,EAAAg3I,gBACjC,OAAMpoI,EAAG3P,EAAAmB,cAAU,OAAO,CAAAioB,MAAAkM,QAAAwiH,EAAAjtG,aAAAktG,EAAA/2I,UAAA,qBAE9B2O,EAAA3P,EAAAmB,cAAAw2I,GAAIjyH,EAAW,EAAE,GAAComK,WAGZpxK,YAAA,4BAQgB,aAMV,WACDvhB,EAAAqhC,EAAAwxJ,OAiBX,SAAAjrL,GACF,IAAAyyC,EAAAzyC,EAAAyyC,oaC7HiC,ICJLy4I,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,SDIKC,GAAA,SAAAxrL,GACsB,IAAA8M,EAAA9M,EAAA8M,KAAA07H,EAAAxoI,EAAAwoI,oBAAAoN,EAAA51I,EAAA41I,aAAAD,EAAA31I,EAAA21I,aAC3Bj4I,EAAAtB,OAAAo4B,EAAA,WAAAp4B,CAAA4jE,GAAA,GAC0B,OAAApxD,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KAY3CT,EAAyD3P,EAAAmB,cAUrEy2I,GAAA,CAAAviH,UAAAk0G,EAAAp/H,MAAA0D,EAAA1D,MAAAiuE,cAAA,SAAAjuE,GATCo/H,GAUcA,EAAA17H,EAAWpN,MAAA0J,IAGjBwsI,aAAeA,EAAAn8H,MAAA3M,EAAA2M,UACdxa,EAAAmB,cAAI,OAAAm0B,QAAA,SAAA/U,GACCm2H,GACNA,EAAY7oI,EAAA0S,IAEdvf,UAAU7D,OAAA2mC,EAAA,IAAA3mC,CAAA8uL,QAAAvmK,EAAA,6MAAA7X,EAAA+lC,WAAAn1C,EAAAw5C,OAAAmzD,eAAAv9F,EAAApN,OACZoN,EAAE2+K,eAAA78K,EAAA3P,EAAAmB,cAAAsrL,GAAA,CAAAzwK,MAAAnO,EAAA2+K,qBAGSrvL,OAAS2jL,EAAqB,EAA9B3jL,CAA8B,SAAMsB,SAE7C,CAGJ0N,IAAMhP,OAAA2mC,EAAqB,IAArB3mC,CAAqB+uL,QAAAxmK,EAAA,oOAAAjnB,EAAAgb,WAAApS,KAAAqS,GAAAjb,EAAAi9F,QAAAmM,IAAAppG,EAAAi9F,QAAAhiF,UACvBvc,OAAA2mC,EAAY,IAAZ3mC,CAAcgvL,KAAIA,GAAAzmK,EAAA,+IACZvoB,OAAK2mC,EAAe,IAApB3mC,CAAoBivL,QAAA1mK,EAAA,4IACtBoe,EAAkB,KAAAuoJ,KAA6BA,GAA2B3mK,EAAA,0FAC1EvoB,OAAO2mC,EAAa,IAApB3mC,CAAoBmvL,KAAQA,GAAA5mK,EAAA,gEAAAjnB,EAAAw5C,OAAA4wD,aAG9B,SAAA9nG,SACFA,EAAA8M,KAAM07H,EAAAxoI,EAAAwoI,oBAAAoN,EAAA51I,EAAA41I,aAAAD,EAAA31I,EAAA21I,aAAA11I,EAAAD,EAAAC,UAEVvC,EAAMtB,OAAAo4B,EAAA,WAAAp4B,CAA4B4jE,GAAG,KAE7B2rH,GAAoBjuL,UACxBkR,EAAa3P,EAAAmB,cAAY,MAAAH,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAAid,EAAAjO,IAAAnL,MAG5BhB,EAACmB,cAAA,UAEFwO,EACE3P,EAAAmB,cAAA,OAAC,CAAAH,UAAAoZ,EAAAuyK,eAiBW3sL,EAAAmB,cAAoBy2I,GAAA,CAAAviH,WAAAk0G,EAAAp/H,MAAA0D,EAAA1D,MAAAiuE,cAAA,SAAAjuE,GACtBo/H,GACDA,EAAA17H,EAAApN,MAAA0J,IAWZwsI,eAAAn8H,MAAA3M,EAAA2M,QAEC7K,EAAA3P,EAAAmB,cAAC,OAAAm0B,QAAA,SAAU/U,GAOCm2H,GACFA,EAAmB7oI,EAAK0S,IAGxBvf,UAAAoZ,EAEP3Z,OAGLoN,EAAApN,MAEU,2ICvHA,OAAAkP,EAAA3P,EAAAmB,cAAA,MAAAH,UAAAoZ,EAAA5Z,MAAA+E,IAAAiuC,EAAA34C,MAAA,IAAAc,GAAA63C,EAAA14C,UASyDw5G,GAAAn7G,EAAA,WAkBnBA,EAAS,WAMzDA,EAAgB,WAICA,EAAGqhC,EAAAoyJ,IAMhBvyG,GAAAlhF,EAAuB,QAA6Bk9K,GAAAl9K,EAAiBqhC,EAAA6/C,gBAuCvDt5E,iBACHgoK,EAAShoK,EAAAgoK,YAAA8jB,EAAA9rL,EAAAs5E,OAAAo6B,EAAA1zG,EAAA0zG,SAAAC,EAAA3zG,EAAA2zG,aAAA80B,EAAAzoI,EAAAyoI,mBAAA74H,EAAA5P,EAAA4P,UAAAm8K,GAAA/rL,EAAAC,UAAA0kB,EAAA,EAAA3kB,EAAA,mHACdw0B,EAAa,YAASwrC,GAAA,UACtBs4E,GAAoB,EAAA+mB,MAAA,OACpB5vJ,MACD,SAAA3C,UACAA,EAAA2+K,cACF3+K,EAAA2+K,cAAAnsL,IAAA,SAAAgF,GAAA,OAAAA,EAAAxK,QAIH,KAiBCo0B,OAAA,SACC+gB,EAAAhyB,GACE,OAAA+uK,KAAA/8I,EAAAhyB,EAACvN,OAAA,SAAA5C,GAAA,QAAAA,cAQKg/K,OACEr8K,EAAA,SAAoB3C,QACrB2+K,cAAA,CACH,IACAh5I,EAAA3lC,EAAA2+K,cAAqB/7K,OAAA,SACrB+iC,GAAA,OAAAA,EAAoB34C,QAAAgyL,IACpB,GAOZ,OAAAr5I,KAAAjmB,aCrIQy/J,EAAA7vL,OAAA2jL,EAAA,EAAA3jL,CAAA,CAC6DqsD,KAAA/qD,EAAAw5C,OAAAswD,MACpCh/C,MAAA9qD,EAAAw5C,OAAA+wD,OAC0DvqG,EAAAuU,MAErF,OAAArD,EAAA3P,EAAAmB,cAAAmzG,GAAA,GAAAtzG,UAAA7D,OAAA2mC,EAAA,IAAA3mC,CAAA8vL,QAAAvnK,EAAA,gNAAAjnB,EAAAgb,WAAApS,KAAAqS,GAAAjb,EAAAi9F,QAAAmM,IAAAppG,EAAAi9F,QAAAhiF,IAAAlJ,MAAAikG,EAAAy4E,EAAAv7K,UAAAu7K,EAAAviL,UAAAgG,YAAA0pE,OAAAwyG,EAAAp4E,WAAAv6F,aAAA,SAAArM,EAAAlS,GAAA,OAAAgU,EAAA3P,EAAAmB,cAAAgsL,GAAAznK,EAAA,GAAAngB,IAAAsI,EAAApN,MAAA,IAAA9E,EAAAkS,OAAA8oI,aAAA,WAC+CnN,GAE/CA,EAAA37H,EAAApN,MAAA,IAAAoN,EAAA2M,MAAA,MAGFxZ,UAAsB7D,OAAA2mC,EAAA,IAAA3mC,CAAAiwL,QAAA1nK,EAAA,0GAAA/pB,EAAA,KAAAqxL,EAAA,SAAAF,KAAAp4E,iBAEtB,OAAA/kG,EAAqB3P,EAAAmB,cAAA8Y,GAAA,GAAAzJ,QAAAG,YAAAuJ,aAAA,SAAArM,GAAA,OAAA8B,EAAA3P,EAAAmB,cAAAorL,GAAA7mK,EAAA,GAAA7X,OAAA8oI,aAAA,WACNnN,GACfA,EAAwB37H,EAAApN,MAAA,IAAAoN,EAAA2M,MAAA,OAiB9BsyK,WAAApyK,YAAA,qBAqFsB2yK,GAAgBC,MAvDxBnwL,OAET2jL,EAAC,EAFQ3jL,CAER,SAAA4D,GACJ,IAAC4P,EAAA5P,EAAA4P,UAED,OACEgJ,QAAQxc,OAAK2mC,EAAiB,IAAtB3mC,CAAwBowL,QAAA7nK,EAAA,kKAAA/U,EAAA,+BACpBxT,OAAA2mC,EAAA,IAAA3mC,CAAAkwL,QAAA3nK,EAAA,yHACDvoB,OAAK2mC,EAAkB,IAAvB3mC,CAAuBmwL,QAAA5nK,EAAA,wHAAA/U,EAAA,oBAchC,SAAA7R,SACEA,EAAAuH,OAAA5J,EAAAqC,EAAArC,UAAcqB,EAACgB,EAAAhB,MAAkByM,EAAQzL,EAAOyL,OAAKojH,EACxC7uH,EACP6uH,SAAAC,EAAA9uH,EAAA8uH,UAAAC,EAAA/uH,EAAA+uH,WAAA2/D,EAAA1uL,EAAA0uL,aAAAC,EAAA3uL,EAAA2uL,eAAAC,EAAA5uL,EAAA4uL,gBAAA3kB,EAAAjqK,EAAAiqK,YAAAp4J,EAAA7R,EAAA6R,UAAA64H,EAAA1qI,EAAA0qI,mBAAAD,EAAAzqI,EAAAyqI,oBAAAS,EAAAlrI,EAAAkrI,eAAAt1B,EAAA51G,EAAA41G,aAAAp1F,EAAAxgB,EAAAwgB,UAAAC,EAAAzgB,EAAAygB,SAAAqsK,EAAA9sL,EAAA8sL,UAAAh/K,EAAA9N,EAAA8N,UAAA68H,EAAA3qI,EAAA2qI,2BAAA92G,EAAA7zB,EAAA6zB,WACNg7J,GAAA7uL,GAAA8uL,EAAY7sL,EAAO6sL,eAErBj0K,EAAA5Y,EAAA4Y,QAAAk0K,EAAA9sL,EAAA8sL,gBACHC,EAAAznL,EAAA4oB,OAAA,SAAA+gB,EAAAtrC,GAED,OApBI,SAAA+C,EAAA6X,EAAAC,QACE,QAAYD,GAAA,QACf,QAAAC,GAAA,GACH,IAACwuK,EAAA,IAAAtmL,EAAAwnB,OAAA,SAAA+gB,EAAAhyB,GAAA,OAAAgyB,GAAAhyB,EAAA,WAEDgwK,GAAAvmL,EAAAwnB,OAAA,SAA0B+gB,EAA1BhyB,GAAA,OAAAgyB,GAAA,OAAAhyB,EAAA,eACUsB,GAAA0uK,GAAqBzuK,GAAAwuK,EAc/BE,CAAYvpL,EAAZ+C,KAAA6X,EAAaC,GACLywB,EACFA,EAAAtJ,OAAa,CACf,CACEjmC,MAAUiE,EAAEjE,MACZ0J,MAAQzF,EAAAyF,MACRypC,UAAAlvC,EAAAkvC,UACHp5B,MAAA9V,EAAA8V,MAAA7e,MAEK6wL,cAAkB9nL,EAAA+K,MAAA,kBAKtBE,EAAc3P,EAAAmB,cAAS,MAAa,CAAAH,UAAa2Y,KAC/C3Z,EAAOmB,cAAA,OAAAH,UAAA4sL,KACL5tL,EAAAmB,cAAY+sL,GAAU,CAAK7nL,OAACA,EAAAoK,OAAA,SAAA/L,GAAA,QAAAA,EAAAkvC,YAAAn3C,YAAAk2B,WAAAi7F,YAAAC,aAAAF,WAAA7vH,QAAAyM,SAAAhF,IAAAmoL,EAAA,oCAAA9B,YAAAh/K,YAAA68H,mCACzB95H,EAAc3P,EAAAmB,cAAA,OAAAH,UAAA6sL,KACd7tL,EAAAmB,cAAao6D,EAAA,GAAA+9E,qBAAA,KACRt5I,EAAAmB,cAAa62I,GAAA,CAAAxnI,MAAAs9K,EAAA/kB,cAAAp4J,YAAA0pE,OAAAmzG,EAAA/4E,SAAAg5E,EAAA/2C,aAAA,SAAA7oI,EAAA0S,GACdypH,GACPA,EAAAn8H,EAAApN,MAAA8f,IACGgpH,sBAAAC,qBAAA90B,wBAcR,MAEM,MACK,MACF,OACR,IACJy5E,GAAC,EAEDC,GAAe,SAAfvvL,YAEQwvL,IASN,OAAe,OAATxvL,GAAoBA,EAAK4pB,MAAOxpB,KAAAypB,YAAAzpB,cAV9B,EAAAovL,EAAAxvL,KAYFa,UAAUoB,OAAS,WACzB,IAAMC,EAAA9B,KAAAH,MAAcw2B,EAAav0B,EAAAu0B,QAAAt0B,EAAAD,EAAAC,UAC3BnG,EAAAoE,KAAYH,MAAG0B,MAAA3F,MACfuf,EAwNV,SAACtb,GAEM,IAAAwvL,EAAwB,CAC7B9wL,QAAY,OACb62D,SAAA,kBAIEk6H,EAAA,CACI1pI,SAAS2pI,EAAA3pI,SAA0B,KAChCqmI,WAAA,SACF72H,SAAA,SAEA42H,aAAY,WACZntL,MAAA,OACA2wL,WAAW,SACXC,UAAU,UAGdC,GAAS7vL,IACTwvL,EAAA/L,cAAA,iBAEIgM,EAA2BxzF,UAAA,UAIV,UAAnByzF,EAAW79K,UACP29K,EAAY/L,cAAS,UAI3B+L,EAAc/L,cAAiB,MAE/BgM,EAAUzwL,MAAa0wL,EAAA1wL,MAAY,KACnCywL,EAAgBxzF,UAAe,QAC/BwzF,EAAeK,aAAiB,cAKhC,SACEN,QACAC,GAlQaM,CAAc5vL,KAAAH,OAC7B,OAAMjE,EAIA8U,EAAiC3P,EAAAmB,cAAA,OAAA46B,MAAA3hB,EAAAT,QAAA2b,UAAAt0B,aACrC2O,EAAU3P,EAAAmB,cAAgB,OAAA46B,MAAA3hB,EAAAvf,UAC1BoE,KAAA6vL,qBALIn/K,EAAa3P,EAAAmB,cAAyB,MAAC,CAAA46B,MAAA3hB,EAAAT,QAAA2b,UAAAt0B,aAAA/B,KAAA6vL,wBAO3CpvL,UAAAovL,kBAAA,WAEF,OAAI7vL,KAAQH,MAAAiqK,aACV,UACA,OAAA9pK,KAAgB8vL,kBAChB,YACD,uBACC,OAAA9vL,KAAgB+vL,iCAGjBtvL,UAAAsvL,2BAAA,WAED,IAAMxuL,EAAuBvB,KAAGH,MAAA0B,MAEhC4Z,WAiSqBtb,OACrBiqK,EAAYjqK,EAAAiqK,YAAuB7f,EAAApqJ,EAAAoqJ,SAAAC,EAAArqJ,EAAAqqJ,SAAA3oJ,EAAA1B,EAAA0B,MACnCO,EAAMkuL,GAA8BnwL,GAAUowL,EAAOnuL,EAAAmuL,WAAAC,EAAApuL,EAAAouL,YAAAC,EAAAruL,EAAAquL,aAAAC,EAAAtuL,EAAAsuL,YAErDC,EAAYC,GAAS/uL,EAAA+sB,QAAA47H,EAAAD,KACXsmC,GAAG1wL,KACZ2wL,GAAAjvL,EAAA1F,KAAA40L,EAAAR,EAAAC,KAA0B,UAAhBpmB,IACH,SACP,UACQ,cACC,UAEX4lB,GAAA7vL,GAAA,CAED,IAAO6wL,EAAWxxL,KAAI+I,IAAAooL,EAAAF,EAAA,GAGxBd,EAAA/L,cAAA,qCAEGqN,EAAAx7H,WAAA,YACIw7H,EAASrlL,OAAcolL,EAAY,KAChCC,EAAA9xL,MAAAuxL,EAAY,KAIhBQ,EAAA9jB,eAA0B,SAC5B+jB,GAGKF,EAAAxlL,WAAA,GAAAyxF,IAAwB6zF,GAChC3uC,SAAA,KAEDC,0CAKQ4uC,EAAaxlL,WAAU2lL,GAAcjxL,EAAAswL,OAIzC,CACA,IAAAj2I,EAAiBh7C,KAAA+I,IAAIooL,EAAAD,EAAA,GAErBf,EAAS/L,cAAM,cACf+L,EAAYviB,eAAQ,WACpBuiB,EAAYG,WAAA,SACZmB,EAAUx7H,WAAS,WACnBw7H,EAAArlL,OAAA6kL,EAAA,KACHQ,EAAA9xL,MAAAq7C,EAAA,KAED02I,EAAAG,YAAA,OACAF,GAEAF,EAAAxlL,WAAA,GAAAyxF,IAAA6zF,GACA3uC,SAAA,KACAC,cACI4uC,EAAAK,YAAA,aAAAP,GC1gByCE,EAAAxlL,WAAA2lL,GAAAjxL,EAAAuwL,GAwBT,OAKlC11K,QAAA20K,EAAAv/F,IAAA6gG,EAGEpvL,MAAKqvL,GDgJQK,CAAuBjxL,KAAAH,cAC5B6Q,EAAY3P,EAAGmB,cAAY,MAAU,CAAA46B,MAAG3hB,EAAaT,SAC3DhK,EAAe3P,EAAGmB,cAAK,MAAa,CAAAH,UAAc,mBAAA+6B,MAAA3hB,EAAA5Z,SAAA1F,MAClD6U,EAAgB3P,EAAAmB,cAAkB,OAAA46B,MAAA3hB,EAAA20E,UAEjCrvF,UAACywL,aAAA,SAAAC,OAEFrvL,EAAI9B,KAAAH,MAAUmzI,EAAOlxI,EAAAkxI,WAAAxzI,EAAAsC,EAAAtC,MAAA+B,EAAAO,EAAAP,SACR,eACZ,YAAM,OACL2M,OAAA,cAIWhQ,OAAYX,GAAa,mBAAzBW,CAAyBizL,EAAAn+C,MACpB,SAAM,KACtB9nI,EAAAhN,OAAWk1K,GAA+B,EAA1Cl1K,CAA0CkzL,EAAAlmL,MAAA1L,EAAAuU,aACrC,iBAAAo9K,KAAA5vL,EAAA+sB,QACL,CACAnjB,WAAWyxF,IAAwB1xF,GACnC42I,SAAW,KACZC,cAEK7zI,OAAK,cACZmjL,OAAA,GAUF,CAjLMlmL,WAA+ByxF,IAAA1xF,GACvB42I,SAAA,KACFC,cACJuvC,gBAAA10F,IAAA1xF,GACM42I,SAAA,KACCC,cACb7zI,OAAA0uF,IAAA1xF,GACY42I,SAAK,IACLC,cACDsvC,OAAE,GAVY,OAATlmL,WAAA,OAmMZ+C,OAAW,SAIpBkhL,EAAS3uL,UAAAqvL,gBAAqC,WACpC,IAAAhuL,EAAA9B,KAAAH,MAAAoqJ,EAAsBnoJ,EAAAmoJ,SAAAC,EAAApoJ,EAAAooJ,SAAA3oJ,EAAAO,EAAAP,MAAAqoK,EAAA9nK,EAAA8nK,YACtB/0J,EAAAm7K,GAAQhwL,KAAgBH,OAAAqwL,EAAAr7K,EAAAq7K,YAAAD,EAAAp7K,EAAAo7K,WAAAE,EAAAt7K,EAAAs7K,aAAAC,EAAAv7K,EAAAu7K,YAAAmB,EAAA18K,EAAA08K,aAAAC,EAAA38K,EAAA28K,cAE3BC,EAAO/B,GAAA1vL,KAAAH,OACV6xL,EAAiBznC,EAAUC,EAC5BynC,EAAAF,EAAAtB,EAAAC,EAEGwB,EAAiBhoB,EAEjBioB,EAAY3yL,KAAA+N,MAAA0kL,EADP,IAELG,EAAO5yL,KAAK+N,OAAA0kL,EAAAC,EAAAC,MACZpB,EAAaF,GAAAvwL,KAAiBH,OAC9B+wL,EAAWJ,GAAOjvL,EAAA1F,KAAA40L,EAAAR,EAAAC,GAClB6B,EAAA,CACHlzL,MAAA0yL,EAAA,KAEDjmL,OAAAkmL,EAAA,KACIjzL,QAAa,QAETkzL,GAENM,EAAOzO,cAAA,iBACLyO,EAAUvC,WAAc,SACxBoB,EAAQ9jB,eAAA,WAGRilB,EAAAzO,cAAA,MACHyO,EAAAvC,WAAA,SAEDoB,EAAA9jB,eAAgC,YAG1B,IADA,IAAA9S,EAAA,GACA5zJ,EAAW,EAAGA,EAAKyrL,EAAUzrL,IAAG,CAE/B,IAAAoZ,EAAA0qI,EAAAwnC,EAAAG,EAAAzrL,EACG4rL,EAAEhyL,KAAckxL,aAAA1xK,GAChByyK,EAAC,CACF/Q,aAAc,OAErB8Q,EAAAX,MACHY,EAAAlL,gBAAA,mBAAAiL,EAAA7mL,WAAA,SAAA6mL,EAAAV,gBAAA,IAIUW,EAAQnkL,gBAAAkkL,EAAA7mL,WAEfsmL,GAEYQ,EAAG3mL,OAAAwmL,EAAyB,KAEpCG,EAA6BpzL,MAAAuxL,EAAA,KACzB6B,EAAcvO,UAAQkO,EAAI,OAGlCK,EAAcpzL,MAAUizL,EAAA,KACjBG,EAAM3mL,OAAA6kL,EAAA,KACb8B,EAAYntJ,YAAQ8sJ,EAAA,MAEpB53B,EAAApqJ,KAAAc,EAAA3P,EAAAmB,cAAA,OAAAoE,IAAAF,EAAAP,WAAAi3B,MAAAm1J,KAGA,OAAAvhL,EAAc3P,EAAAmB,cAAgB,OAAiB46B,MAAAi1J,GAC/C/3B,EACDtpJ,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,mBAAA+6B,MAAA8zJ,GAAArvL,EAAA1F,UACK6hE,aAAS,UACX,aACD,QAAM,CACL7hE,KAAA,MAEAyyB,QAAA,iBAEA,kBACDuB,GAAA,eAAAm6I,WACFh3B,WAAA,GAED42B,YAAO,IAELwlB,EA5Ka,GA6Kb,eAkBJ,SAASM,GAAA7vL,GACC,OAAAA,EAAAylK,cAAQz1I,GAAgB,eAAAo6I,kBAG5BioB,GAAiBryL,GACrB,IAAIjE,EAAAiE,EAAc0B,MAAE3F,MAChB0P,EAAAzL,EAAeyL,OAACzM,EAAAgB,EAAAhB,MACpB,IAAIjD,EACA,OAAAgqD,SAAiB,EAAA/mD,MAAA,EAAAyM,OAAA,EAAAoG,UAAA,SAGrB,GAAIg+K,GAAW7vL,GACb,OACA+lD,SAAa,GACb/mD,QACAyM,OAAW,GAAG6mL,GACdzgL,UAAe,YAGfpG,EAAA,GAAW,CACX,IACA8mL,EAAelzL,KAAS+I,IAAA/I,KAASyJ,IADN,IACM2C,EAAO+mL,IAAA,IACxC,OAEIzsI,SAASwsI,EAAcD,GACzBtzL,MAAA,EACAyM,OAAA8mL,EACD1gL,UAAA,eAOD,CACAk0C,SAFK1mD,KAAA+I,IAHJ,GAGIqD,EAAAgnL,IAEMH,GACX7mL,OAAA,EACAzM,MAAAK,KAAYyJ,IAAAzJ,KAAA+I,IANb,GAMapJ,EAAA,SACZ6S,UAAA,oBAgDwB7R,SACvBA,EAAAyL,OAAAzM,EAAAgB,EAAAhB,QAAMqzL,GAAAryL,KACL,IACU,IACX,EACFowL,EAAA,IAAM,EACLuB,EAAiB,SAEjB9B,GAAA7vL,IACAqwL,EAAchxL,KAAAyJ,IAAAzJ,KAAa+I,IAAG,GAAAqD,EAAcgnL,IAAAD,IAC5CpC,EAAapxL,EACbsxL,EAAc7kL,GAAUikL,EAAGjkL,OAAS4kL,GAEpCE,EAAUvxL,EACV0yL,EAAU1yL,EACV2yL,EAAelmL,EAAMikL,EAAajkL,WAKhCA,EAAeikL,EAAAjkL,SACNpM,KAAC+I,IAAA/I,KAAayJ,IAAG,GAAH9J,EAAG0zL,IAAoBC,MAC3ClnL,EAAcikL,EAAAjkL,SACdzM,EAAeoxL,EAACV,EAAA1wL,MACE,UAArB0wL,EAAS79K,WACV6/K,EAAA1yL,IAAMyM,EAAAikL,EAAAjkL,SAGNimL,EAAA1yL,EAAA0wL,EAAA1wL,MACF2yL,EAAAlmL,IAII,CACH2kL,WAAOA,EACPC,cACHE,cAEDD,+BAEGoB,yBAGKjB,GAAe/uL,EAAA2oJ,EAAmBD,GAExC,OAAI/qJ,KAAQyJ,KAAKpH,EAAC2oJ,IAAAD,EAAAC,GAAA,YCraV4mC,GAAAjxL,EAAE8xL,GAMV,QALEznC,EAAIrqJ,EAAaqqJ,SAAKD,EAAUpqJ,EAAAoqJ,SAAiBjX,EAAWnzI,EAAUmzI,WAAQzxI,EAAA1B,EAAA0B,QACvEmuL,GAAiB7vL,GAAO,OAAM,UACpC,GACF4yL,EAAA,EAEDrsL,EAAA,EAAAA,EAAA4sI,EAAA7tI,OAAAiB,IAAA,CACQ,IAAAiC,EAAA2qI,EAAE5sI,GAEJ8E,EAAAhN,OAAWk1K,GAA0B,EAArCl1K,CAAqCmK,EAAA6C,SAC3BolL,GAAQjoL,EAAA9G,MAAA2oJ,EAAAD,GACX0nC,IACRzyL,KAAA6mD,MAAAl/C,KAAA4rL,GAAA,MAAM,SACE,mBAAAC,EAA0B,KAAAxnL,EAAA,KAAAA,MAEpC,IAAA3J,EAAA+sB,QAAAjmB,EAAA9G,MAED,MAIMkxL,EAAA5rL,EACE2hD,GAAA,IAAA5mC,EAAsB,OAAA1W,YAInB,aAOXqlL,GAAa1wL,OACbmzI,EAAYnzI,EAAGmzI,WAAMxzI,EAAAK,EAAAL,MAAA+B,EAAA1B,EAAA0B,MAErB6vL,EAAelzL,OAAKX,GAAe,mBAApBW,CAAoBqD,EAAY+sB,QAAA0kH,UAC/B,SACd90I,OAAUk1K,GAAmC,EAA7Cl1K,CAA6CkzL,EAAAlmL,MAAA1L,EAAAuU,aAE7Cq/J,GAAqC,GAAY,OAAA5zK,EAAAuU,kBAIrCxS,EAAO2J,EAAArM,EAAAyM,SACXA,EAAQ4jL,KACjBrwL,GAAA,IAAA0C,EAAA4D,QAEDygD,EAAW1mD,KAAKyJ,IAAMzJ,KAAA+I,IAAQ0qL,EAAK,IAAAC,SACnC,CAEA1nL,MAAOA,SAGDI,EACE,KAIJzM,MAEFA,EAAA,KACHN,QAAA,OA3EMixL,WAAA,SACLtpI,WAAWgpI,GACXtpI,WAAAhE,QAAA,gBCmDcixI,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,MCzDK,SAAAxzL,cAIXC,GAQV,IAAAC,EAAAF,EAAAG,KAAAC,KAAAH,IAAAG,6CCkDA,SD3DQ,EAAAqzL,EAAAzzL,4FCxBgBylK,IAAAthI,EAAAshI,eAAAp6F,IAAAlnC,EAAAknC,QAEiBjrE,KAAAa,SAAA,CAAAyN,OAAAtO,KAAAH,MAAAulK,eAmBHiuB,EAAA5yL,UAAA6yL,eAAA,WACtC,IAAAxxL,EAAA9B,KAAAH,MAAAylK,EAA0CxjK,EAAAwjK,YAAAzmK,EAAAiD,EAAAjD,MAAAyM,EAAAxJ,EAAAwJ,OAA1C,OAAAg6J,IACEz1I,GAAY,eAAAg+H,KAEPhvJ,EAAAyM,EAEQukB,GAAA,eAAAo6I,SAGXp6I,GAAA,eAAAm6I,WAGJ1E,KAEO7kK,UAAAoB,OAAQ,eACXC,EAAK9B,KAAAH,MAAWklK,EAAcjjK,EAAIijK,YAAaz5J,EAAQxJ,EAAIwJ,OAAAzM,EAAAiD,EAAAjD,MAAA+qK,EAAA9nK,EAAA8nK,YAC5Dt7J,EAAAtO,KAAAC,MAAAqO,OACFg3J,EAAAtlK,KAAAszL,iBAEDC,EAAA,CACQh1L,QAAA,QAGFi1L,EAAa,CACfj1L,QAAA,UAGM+M,IACAzM,EA0BV,OAxBIymK,IAAMz1I,GAA2B,eAAAm6I,YAIjCwpB,EAAclQ,cAAgB,WAC5BmQ,aAAA7pB,EAAwB,KAAxB8pB,EACA70L,EACF80L,EAAOroL,EAAAgD,EAAAnJ,OAAAykK,IAIH4pB,EAAAlQ,cAA6B,MAC7BiQ,EAAAzuJ,YACJ8kI,EAAmB,KACf+pB,EAAAroL,EAKFooL,EAAU70L,EAAEyP,EAAcnJ,OAAAykK,GAC5B2pB,EACA10L,MAAA60L,EAAA,KACHH,EAAAjoL,OAAAqoL,EAAA,KAEDjjL,EAAA3P,EAAAmB,cAAA,OAAA46B,MAAA02J,GAAAllL,EAAAlN,IAAA,SAAAG,EAAA7E,GACU,OAAAgU,EAAA3P,EAAAmB,cAAwB,OAAAoE,IAAA5J,EAAAogC,MAAAy2J,GAAAxuB,EAAAxjK,EAAAmyL,EAAAC,UAI9Bj2H,aAAgB,aAChB,IAEH21H,ED9DoB,GC+DvB,8BCpF6D,IAAAz3L,EAAAiE,EAAAjE,MAAAylL,EAAAxhL,EAAAwhL,OAAAt2J,EAAAlrB,EAAAkrB,SAC3B,OAAAra,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,mBAGmC2O,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,qBACZ2O,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,cACE2O,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA,gCAErD2O,EAAY3P,EAAAmB,cAAA,OAAAH,UAAA,cACN2O,EAAA3P,EAAAmB,cAAG,OAAAH,UAAA,eAAAnG,GAIDmvB,GAAEra,EAAG3P,EAAAmB,cAAA,OAAAH,UAAA,cAAAgpB,IAITs2J,GAAA3wK,EAAG3P,EAAAmB,cAAA,OAAAH,UAAA,gBAQC2O,EAAE3P,EAAAmB,cAAG,UAAAH,UAAA,yBAAAs0B,QAAAgrJ,EAAAhrJ,SAAAgrJ,EAAAxlL,UA8CjBo1F,GAAA/2F,EAAwB,QAIxB05L,GAAa15L,EAAGqhC,EAAA01D,OAqBA,SAAArxF,YAEbi0L,EAAAh0L,GACD,IAAAC,EAAAF,EAAAG,KAAAC,KAAAH,IAAAG,KAQF,OANMF,EAAAirI,eAAajrI,EAAAirI,eAAU3qI,KAAAN,GACvBA,EAAAG,MAAY,CACZu1I,aAAc,GACdxK,cAAcnrI,EAAWuH,QAI7BtH,WAXoB,EAAA+zL,EAAAj0L,KAahBa,UAAAy7D,mBAAK,SAAWn4B,SACd/jC,KAAAH,MAAAuH,OAEFwsL,KAAA7vJ,EAAA38B,WAEDpH,KAAMa,SACL,CAAA20I,aAAA,GAAAxK,cAAK5jI,KAOXysL,EAAApzL,UAAAsqI,eAAA,SAAAvpI,EAAA8f,GAEM,IAACxf,EAAA9B,KAAWH,MAAGuH,EAAWtF,EAAAsF,OAAA0sL,EAAAhyL,EAAAgyL,2GC7H2Bt+C,EAAAhkI,OAAA,SAAApK,GAAA,OAAAA,IAAA5F,IAC3Bg0I,EAAA/tG,OAAA,CAAAjmC,IAEuBuyL,EAAA3sL,EAAAhG,IAAA,SAAAgG,GAAA,OAAAqf,EAAA,KAAArf,EAAA,CAAAutC,WAAA,IAAAq/I,EAAAltL,QAAAM,EAAA5F,WAGnDxB,KAAAa,SAAA,CAAA20I,aAAYw+C,EAA0BhpD,cAAA+oD,GAAA,WAC9B,OAAED,EAAGA,EAAAE,QAAA/tL,SAiCjB,IAAAguL,EAAqB7sL,EAAAhG,IAAA,SAAGgG,GAAA,OAAAA,EAAA5F,QAMxB0yL,EAAiB1+C,EAAArwI,OAAG,IAAA8uL,EAAA9uL,OAAA,GAAA4kL,KAAAkK,EAAA,CAAAzyL,IAMpBwpI,EAAsB5jI,EAAAhG,IAAA,SAAAgG,GAAG,OAAAqf,EAAA,KAAArf,EAAA,CAAAutC,WAAA,IAAAu/I,EAAAptL,QAAAM,EAAA5F,WAOxBxB,KAAAa,SAAA,CAAA20I,aAAA0+C,EAAAlpD,iBAAA,WASU,OAAA8oD,EAAkFA,EAAAI,QAAAjuL,MAE7F4tL,EAAcpzL,UAAAoB,OAAS,WACjB,IAAAkpB,EAAkB/qB,KAAKH,MAACkrB,SACxBigH,EAAoBhrI,KAAAC,MAAU+qI,cAC9B,OAAAjgH,EAAY,CAGhBggH,eAAA/qI,KAAA+qI,eACEC,qBDmBY,GCZZjqI,EAAAohE,WJhFgDgyH,GAAAj2L,OAAA6iL,EAAA,EAAA7iL,CAAA,SAAAsB,GAAA,OAEe40L,SAAAl2L,OAAA2mC,EAAA,IAAA3mC,CAAAm2L,QAAA5tK,EAAA,8GAAAjnB,EAAAi9F,QAAAhiF,IACtB65K,aAAAp2L,OAAA2mC,EAAA,IAAA3mC,CAAA20L,QAAApsK,EAAA,wHAAAjnB,EAAAE,cAEzCkqB,OAAA1rB,OAAe2mC,EAAK,IAApB3mC,CAAoB40L,QAAArsK,EAAA,wSAAAjnB,EAAAi9F,QAAAc,IAEpBg3F,aAAAr2L,OAAA2mC,EAAa,IAAb3mC,CAAa60L,KAAyBA,GAAAtsK,EAAA,oiCAAAjnB,EAAAw5C,OAAA2xD,MAC1C66C,OAAAtnJ,OAAW2mC,EAAA,IAAX3mC,CAAW80L,KAAGA,GAAAvsK,EAAA,6NAEgG,mHAAxFjnB,EAAAi9F,QAAAhiF,GAAAjb,EAAAi9F,QAAAxqC,GAAAzyD,EAAAi9F,QAAqBxqC,IAM3CuiI,gBAAiBt2L,OAAA2mC,EAAA,IAAA3mC,CAAG+0L,QAAAxsK,EAAA,yLAEmF,qBAAAjnB,EAAAi9F,QAGtGhiF,GAHejb,EAAAi9F,QAAAxqC,GAAAzyD,EAAAi9F,QAAAxqC,IAIhBwiI,cAAcv2L,OAAE2mC,EAAA,IAAF3mC,CAAKg1L,QAAAzsK,EAAA,wRAAAjnB,EAAAi9F,QAEFhiF,GAAgCjb,EAAAgb,WAAApS,KAC9By0F,GAAer9F,EAAAgb,WAAAk6K,QAAApsF,IAOlCqsF,uBAAgBz2L,OAAA2mC,EAAG,IAAH3mC,CAAGi1L,QAAA1sK,EAAA,iKAInBmuK,YAAa12L,OAAE2mC,EAAA,IAAF3mC,CAAEk1L,KAAGA,GAAA3sK,EAAA,oMAGjB,8EAAAjnB,EAAAgb,WAAAyrC,OAAAuiD,SAAAhpG,EAAAi9F,QAAAhiF,GAAAjb,EAAAgb,WAAAk6K,QAAApsF,GAAApqG,OAAA6kL,EAAA,EAAA7kL,CAAA,CAAAosD,MAAA,OAAAC,KAAA,+BAAA/qD,EAAAuU,UAWH8gL,GAAA,SAAA/yL,GAAoC,IAAAo7D,EAAAp7D,EAAAo7D,OAAA17D,EAAAM,EAAAN,MAAAuyF,EAAAjyF,EAAAiyF,QAAoB+gG,EAAAhzL,EAAAgzL,YAAAC,EAAAjzL,EAAAizL,SAAAhqK,EAAAjpB,EAAAipB,SAAxDvrB,EAAAtB,OAAAo4B,EAAA,WAAAp4B,CAAA4jE,GAAA,WAKIkzH,EAAa92L,OAAG2mC,EAAa,GAAhB3mC,CAAgB,CAAA4+B,EAAGs3J,SAAI,oBACpCl8J,EAAIglC,EAAiB,iBAAO,mBAC5B+3H,EAAMlhG,EAAmB71F,OAAA2mC,EAAU,GAAV3mC,CAAU,CAAA4+B,EAAAlT,OAAAkT,EAAAy3J,eAAAr2L,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAA4+B,EAAAlT,SAEnCsrK,EAAAJ,EAAA52L,OAAA2mC,EAA6C,GAA7C3mC,CAA6C,CAAA4+B,EAAA0oH,SAAAtnJ,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAA4+B,EAAA03J,kBAC7CW,EAAqBL,EAAA52L,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAA4+B,EAAA23J,gBAAAv2L,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAA4+B,EAAA63J,gCACnBjkL,EAAY3P,EAAAmB,cAAe,OAAAH,UAAOizL,KACzBj0L,EAAGmB,cAAU,MAAO,CAAAH,UAAOmzL,EAAI7+J,QA4B7C,WAvCC0+J,GACQA,GAAA73H,KAWLxsD,EAAA3P,EAAAmB,cAAA,OAAAH,UAAAozL,GAEKzkL,EAAa3P,EAAAmB,cAAiB,OAAC,CAAGH,UAAUm2B,KAC5CxnB,EAAW3P,EAAAmB,cAAe,MAAC,CAAGH,UAAU7D,OAAA2mC,EAAe,GAAf3mC,CAAe,CAAE4+B,EAAG83J,eAAApzL,IAClE07D,GAAWxsD,EAAc3P,EAAAmB,cAAW,OAAAH,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAA4+B,EAAAw3J,gBAC9B5jL,EAAA3P,EAAemB,cAAa,MAAS,CAAAH,UAAAkzL,IAE3ClqK,oBAGM,eKhCRqqK,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,oEA7C2C74J,ELkFrC,SAAAt9B,GAAK,oBACFtB,OAAQ2mC,EAAI,IAAZ3mC,CAAgBk3L,KACfA,GAAiB3uK,EAA0B,gDAC3C,0EAAApb,SAAA7L,EAAAi9F,QAAAtiG,EAAA,6BACD+D,OAAe2mC,EAAa,IAA5B3mC,CAAgCm3L,KAACA,GAAgB5uK,EAAoC,EAAE,qDAAS,+XAAAjnB,EAAAw5C,OAAA2xD,wBAChGzsG,OAAc2mC,EACb,IADD3mC,CACCo3L,KAAkBA,GAAkC7uK,EAA4B,2FAItF,4FACJmvK,kBAAC13L,OAAA2mC,EAAA,IAAA3mC,CAAAq3L,QAAA9uK,EAAA,mOACHovK,kBAAA33L,OAAA2mC,EAAC,IAAD3mC,CAACs3L,QAAA/uK,EAAA,+LAxCmCqvK,oBAAa53L,OAwChD2mC,EAAA,IAxCgD3mC,CAwChDu3L,QAAAhvK,EAAA,qOAEYsvK,gBAAgB73L,OAAA2mC,EAAA,IAAA3mC,CAAAw3L,KAAUA,GAAuBjvK,EAAA,sNAAAjnB,EAAAw5C,OAAAkzD,WAC9D8pF,qBAAyB93L,OAAG2mC,EAAgB,IAAnB3mC,CAAmBy3L,QAAAlvK,EAAA,4QAAAjnB,EAAAw5C,OAAAkzD,UAAA1sG,EAAAw5C,OAAA2xD,OKjGCsrF,6BACX5/I,EAAAn3C,KAAA6mD,MAAA,IAAAmwI,GAAA,IACuDC,EAAA,CAAAt3L,MAAAw3C,GAEzCt0C,EAAAy2B,EAAAt6B,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAA4+B,EAAAs5J,aAAAt5J,EAAAu5J,qBAAAn4L,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAA4+B,EAAAs5J,eAEqB,OAAA1lL,EAAA3P,EAAAmB,cAAA,OAAAH,aACf2O,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAA4+B,EAAAw5J,qBAEhD5lL,EAAY3P,EAAAmB,cAAoB,OAAAH,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAA4+B,EAAA84J,oBAAAh6L,MAAA2F,MAC7BmP,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAA4+B,EAAA+4J,qBAAA91K,GACLrP,EAAW3P,EAAAmB,cAAA,MAAG,CAAAH,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAA4+B,EAAAg5J,uBAAAz/I,IAWd3lC,EAAc3P,EAAEmB,cAAA,OAAAH,UAAG7D,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAA4+B,EAAAi5J,mBAOnBrlL,EAAe3P,EAAAmB,cAAA,MAAG,CAAAH,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAA4+B,EAAAk5J,uBAAAl5J,MAAAq5J,UAelB16K,YAAA,uBCtBS86K,GAA+EC,GAAAC,GAAAC,GAAAC,MDqDxF,SAAA/2L,YAGAg3L,WACY,UAAAh3L,EAAW4pB,MAAAxpB,KAAAypB,YAAAzpB,KCzE8B,SDuExC,EAAA42L,EAAAh3L,KAIVa,UAAAoB,OAAA,iBACD7B,KAAMH,MAAO2B,EAAQM,EAAAN,MAAM8U,EAAUxU,EAAAwU,SAAAyG,EAAAjb,EAAAib,MAAAxb,EAAAO,EAAAP,MAAAs1L,EAAA/0L,EAAA+0L,eAfvB,SAAWr3L,GAAS,iBACpCtB,OAAA2mC,EAAA,IAAA3mC,CAAAq4L,QAAA9vK,EAAA,wTAAAvoB,OAAA6kL,EAAA,EAAA7kL,CAAA,CAAAosD,MAAA9qD,EAAAw5C,OAAA8yD,OAAAvhD,KAAA/qD,EAAAw5C,OAAAmwD,OAAA3pG,EAAAuU,MAAAvU,EAAAw5C,OAAAn9C,KAAAqC,OAAA6kL,EAAA,EAAA7kL,CAAA,CAAAosD,MAAA9qD,EAAAw5C,OAAA+wD,MAAAx/C,KAAA/qD,EAAAw5C,OAAAywD,OAAAjqG,EAAAuU,MAAAvU,EAAA0O,OAAA/D,OAAA8nD,oBAEF/zD,OAAY2mC,EAAG,IAAf3mC,CAAes4L,QAAA/vK,EAAA,0NAAAvoB,OAAA6kL,EAAA,EAAA7kL,CAAA,CAAAosD,MAAA9qD,EAAAw5C,OAAA+wD,MAAAx/C,KAAA/qD,EAAAw5C,OAAAywD,OAAAjqG,EAAAuU,sBACP7V,OAAA2mC,EAAE,IAAF3mC,CAAEu4L,KAAcA,GAA4BhwK,EAAA,gbAAAjnB,EAAAgb,WAAAyrC,OAAAuiD,SAAAhpG,EAAAi9F,QAAAtiG,kBAC9C+D,OAAA2mC,EAAc,IAAd3mC,CAAcw4L,QAAAjwK,EAAA,+IAChBvoB,OAAA2mC,EAAyB,IAAzB3mC,CAA2By4L,QAAAlwK,EAAA,0JAUrBqwK,CAD+Bh1L,EAAAtC,SAErCud,EAASktB,MAAS,EAlBtB,GAmBE8sJ,EAAGC,EAAApsL,KAAA,SAAAsC,GAAA,OAAAA,EAAA3L,YACH01L,EAAAl6K,EAAAktB,MApBF,QAsBAitJ,IACQH,EAAAE,EAAErsL,KAAA,SAAOsC,GAAE,OAAAA,EAAK3L,QAAEA,IAClB01L,EAASA,EAAAzlL,OAAU,SAAOtE,GAAA,OAAAA,EAAA3L,aAEhC,IAAM41L,EAAaF,EAAKjnK,OAAY,SAACE,EAAAhjB,GAAA,OAAAgjB,EAAAhjB,EAAA6S,OAAA,GAGjCrB,EADFs4K,EAAAhnK,OAAA,SAAAE,EAAAhjB,GAAM,OAAWgjB,EAAAhjB,EAAA6S,OAAA,GACfo3K,EAGCC,EACCD,EAAAz4K,SAMAhO,EAAgB3P,EAAAmB,cAChB,OAAAH,UAAA7D,OAAA2mC,EAAmB,GAAnB3mC,CAAoB,CAAA4+B,EAAAu6J,aAErB3mL,EACC3P,EAAAmB,cAAA,OAAAH,UAAA7D,OAAM2mC,EAAW,GAAjB3mC,CAAiB,CAAA4+B,EAAAw6J,mBACf5mL,EAAA3P,EAAAmB,cAAC,QAAAH,UACC7D,OAAO2mC,EACG,GADV3mC,CACU,CAAA4+B,EAAUy6J,kBAS/B/1L,EACH,KA9D+Bkd,EAgEP,OACJpI,2RC7HyC4gL,GAAAH,GAAArmL,EAAA3P,EAAAmB,cAAAs1L,GAAA/wK,EAAA,GAAAngB,IAAAywL,EAAAx1L,OAAAw1L,EAAA,CAAAv+J,QAAA,KAC3B2+J,EAAA,GAAAzmL,EAAA3P,EAAAmB,cAAAs1L,GAAA,CAAAlxL,IAAA,aAAAyZ,MAAAo3K,EAAA51L,MAAA,QAAA20L,WAAAkB,OAKuBR,EDqErD,CCnEJtgK,EAAe,eACbmhK,GAAYv5L,OAAA2jL,EAAG,EAAH3jL,CAAGw5L,OAIdj8K,YAAA,0BC2D6Bk8K,GAAWC,8IAxEqB93L,EAAAe,SAAA,CAAAg3L,WAAA,KAE3B/3L,EAAAg4L,aAAA,WACS,IAAAh2L,EAAAhC,EAAAD,MAAAi4L,EAAAh2L,EAAAg2L,aAAAt2L,EAAAM,EAAAN,MAAAD,EAAAO,EAAAP,MAkCjCu2L,uCAKLj3L,SAAW,SAAAZ,MACfA,EAAA43L,gBACE,CAAKA,WAAA,EAAA96K,MAAA,QAEPg7K,EAAAj4L,EAAcD,MAAKm4L,iBAEjBH,WAAW,EAAA96K,MADX7e,OAAOX,GAAS,wBAAhBW,CAAgB65L,EAAAj4L,EAAAD,MAAA2B,+BAKdf,UAAqDoB,OAAqD,iBAEhH7B,KAAAH,MAAAm4L,EAAOl2L,EAAAk2L,QAAAx2L,EAAAM,EAAAN,MAAAy2L,EAAAn2L,EAAAm2L,MAAA12L,EAAAO,EAAAP,o0DAAAO,EAAAtC,oBAEHq4L,EAAMhjL,EAAUgjL,UAAkD96K,EAAAlI,EAAAkI,UAClE,KAAKxb,aACHW,cAAU,QAAAH,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAAid,EAAA+8K,+BACX,QAAAn2L,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAAid,EAAAg9K,iBAAAv8L,MAAAuxD,GAAA5rD,SAESR,EAAUmB,cAAG,QAAAtG,MAAA,mBAAAy6B,QAAAr2B,KAAA83L,aAAA/1L,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAAid,EAAAi9K,cAAA,+BAClB1nL,EAAe3P,EAAAmB,cAAQ,OAAgB,CAAAm0B,QAAQr2B,KAAOq4L,aAAEt2L,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAAid,EAAAi9K,cAAA,wBACrDr3L,EAAAmB,cAAY,QAAAH,UAAY7D,OAAA2mC,EAAuB,GAAvB3mC,CAAwB,CAAAid,EAAAm9K,sBACtDp2L,cAAMu1L,GAAgC,CAAU16K,MAAOA,EAAOzG,SAAA0hL,IAAS7yL,OAAA3D,MAAMA,EAASD,MAAKA,EAAIs1L,aAAA72L,KAAA62L,mDAM7F,GAAA0B,oEAeHpjL,EAAArT,EAAAqT,OAAA2iL,EAAAh2L,EAAAg2L,aAAAG,EAAAn2L,EAAAm2L,kBAEW,YAAAn2H,GAAA,GAND,0BACL02H,KAAmBA,GAAA/xK,EAAA,sHAO3B1lB,EAAAmB,cAAgB,OAAI,CAAAH,UAAM7D,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAAid,EAAAs9K,cAAAv6L,OAAAgH,KAAAiQ,GAAA/T,IAAA,SAAAkF,GAAA,OAAAoK,EAAA3P,EAAAmB,cAAAw2L,GAAA,CAAApyL,MAAA0xL,UAAAx2L,MAAA8E,EAAA/E,MAAA4T,EAAA7O,GAAA2xL,QAAAH,uDCvERa,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,QD8EhB,WACF/+L,EAAAqhC,EAAA6E,OACFlmC,EAAA,QAOAkrE,GAAAlrE,EAAA,QACAg/L,GAAAh/L,EAAmCqhC,EAAA6pC,IAInC+zH,GAAAj/L,EAAA,QACAk/L,GAAAl/L,EAAsCqhC,EAAA49J,OAO/B,SAAAE,EAAoBnsL,EAAA2tE,GAAA,OAAAp0D,EAGxB,OANHxgB,OAMG,oBAEH,IAAA60E,EAAAjpD,EACA,OAAApL,EAAA,EAAAzmB,KAAA,SAAA8B,GACA,OAAAA,EAAAN,OACQ,OAMR,kDAJY,aAIZ,GAAA6iB,QAAA82D,IAAAL,EAAA15E,IAAA,SAAAolC,GAAA,OAAAA,EAAA4yE,MAAA,SAAA1gF,GAAA,OAAAA,QACA,OAEI,MAAU,GAAC,CACLlwB,MAFJqpB,EAAO/vB,EAAA+iB,QAEczjB,IAAG,SACtBD,GAEE,IAAAm4L,EAAiBn4L,EACnB,IAAAm4L,EAAoB9wL,KACrB,SAIA,IADC,IAAAA,EAAmB,GACpB9L,EAAA,EAAAA,EAAA48L,EAAA9wL,KAAArD,OAAAzI,IAIQ,IAFT,IAAA0xB,EAAsBlwB,OAAAX,GAAA,YAAAW,CAAAo7L,EAAA9wL,KAAA9L,IACZ68L,EAAiBnrK,EAAAta,OAAAtC,OAAA,SAAAmC,GAAA,aAAAA,EAAA3O,OAAA,GAClBuY,EAAgB,EAAAA,EAAAg8K,EAAAjrL,OAAAnJ,OAAAoY,IAAA,CAMnB,GALHg8K,EAAAjrL,OAAArN,IAAAsc,KAKGrQ,EAAAiT,UAAA,CAIS,IACD21D,EADS1nD,EAAeta,OAAKtC,OAAA,SAAAmC,GAAA,eAAAA,EAAA3O,OAAA,GACVsJ,OAAOrN,IAAEsc,GAC7C,IAAA/U,EAAArD,OACOqD,EAAA,IAAAstE,GAGPttE,EAAA,GAAAoH,KAAAkmE,IAIH,OAAAttE,sDEzK2EgxL,EAAAr6J,qBAWzCs6J,GAAA,SAAA33L,GAC6C,IAAAu3L,EAAAv3L,EAAAu3L,cAAAnsL,EAAApL,EAAAoL,IAAA6d,EAAAjpB,EAAAipB,SAe3ElW,EAAI4R,EAAoB,EAAAvoB,OAAAo4B,EAAA,SAAAp4B,CAAA,OAAA28E,EAAAhmE,EAAA,GAAA6kL,EAAA7kL,EAAA,GAOxBE,EAAI0R,EAAoB,EAAAvoB,OAAAo4B,EAAA,SAAAp4B,CAAA,SAAAiD,EAAA4T,EAAA,GAAA4kL,EAAA5kL,EAAA,GAQxBa,EAAI6Q,EAAoB,EAAAvoB,OAAAo4B,EAAA,SAAAp4B,CAAA,CAE1B07L,QAAM,EAEF3mK,OAAA,IAEF,GAAA4mK,EAAyBjkL,EAAA,GAAAkkL,EAAAlkL,EAAA,GAO3BrU,EAAA63L,KAAc,WAAG,OAAA3yK,EAAA,OF4DnBxgB,OE5DmB,oBAajB,OAAMwgB,EAAK,EAAAzmB,KAAA,SAAA8B,GAOP,OAAEA,EAAAN,OAIN,gBAAAu4L,GAAAV,EAAAnsL,EAAA2tE,IACF,gBAAA/4E,EAAA+iB,cAqBM,CAAAg2D,IAAQt5E,4CAUDA,KACF,SAAAy4L,GACA,IAAMC,GAAgB,EAASC,GAAoB,EAmC3D,OAnBHF,KAAAxxL,KAAA,GAAArD,SAAA5D,EAAAiH,KAAA,GAAArD,SAEI80L,GAQL,GACeD,KAAWxxL,KAAA,GAAArD,SAAA5D,EAAAiH,KAAa,GAACrD,SACjC+0L,GAAA,GAEAJ,EAAmB,CAEzBF,OAAAK,EACMhnK,MAAAinK,IAEH34L,MAIDA,IACAwpB,EAAI,CACJ5pB,OAAA,CACAy4L,OAAAz4L,EAAe+3L,KAAA/3L,EAAAqH,KAAA,OACfyqB,MAAA9xB,EAAA+3L,KAAA/3L,EAAAqH,KAAA,QAKG2xL,OAAA,CACDP,OAAAz4L,IAAAg5L,OAAA,QAAKl0L,EACHgtB,MAAA9xB,IAAAg5L,OAAC,QAAAl0L,sBAEU4zL,yBAIM,OACLH,EAAA7+G,EAAA,QAqBPviD,GAA6Dp+B,EAOzE,0CCtM4CowD,MAAA9qD,EAAAw5C,OAAAujD,MACChyC,KAAA/qD,EAAAw5C,OAAA0jD,OAW9Cl9F,EAASuU,MACPqmL,EAAiBl8L,OAAQ6kL,EAAyB,EAAjC7kL,CAAiC,CAChDosD,MAAM9qD,EAAQw5C,OAAKixD,MAEnB1/C,KAAI/qD,EAAKw5C,OAAUmwD,SACjBp1F,QACa7V,OAAA6kL,EAAA,EAAA7kL,CAAA,OACbsB,EAAAw5C,OAAgB+wD,WACjBvqG,EAAAw5C,OAAA2jD,SAED5oF,MACCrG,EAAIxP,OAAA6kL,EAAA,EAAA7kL,CAAA,CACRosD,MAAA9qD,EAAAw5C,OAAA+wD,MAWDx/C,KAAA/qD,EAAAw5C,OAAAywD,OAAoCjqG,EAAAuU,MAApC,OAAAsmL,aAAAn8L,OAAA2mC,EAAA,IAAA3mC,CAAAo8L,KAuCCA,GAAA7zK,EAAA,4sBAAAjnB,EAAAw5C,OAAA8yD,OAAAyuF,EAAAH,EAAAI,IAAA9sL,EAAAlO,EAAA0O,OAAA/D,OAAA8nD,IAtCCuzF,OAAAtnJ,OAAe2mC,EAAA,IAAf3mC,CAAey6L,QAAAlyK,EAAA,wQAAA/Y,QACbxP,OAAQ2mC,EAAE,IAAV3mC,CAAU06L,QAAAnyK,EAAA,oIAqCb3kB,EAAAoL,IAAD,IAACvB,EAAA7J,EAAA6J,KAAA8uL,EAAA34L,EAAA24L,kBAAAC,EAAA54L,EAAA44L,gBAjCQl7L,EAAAtB,OAAAo4B,EAAA,WAAAp4B,CAAwB4jE,GAA2B,GACxD0jF,EAASm1C,GAAiBn7L,GAAWgmJ,cACnC90I,EAAY3P,EAAAmB,cAAA,OAAAH,UAAAyjJ,KACbzkJ,EAAAmB,cAAA,QAAAH,UAAA7D,OAAA2mC,EAAA,IAAA3mC,CAAA26L,QAAApyK,EAAA,sFAEK,SAEN9a,EAAOxG,OACL,qBACS,IAAQwG,EAAAxG,OAAA,IAAAwG,EAAAxG,OAAA,QAAAu1L,GAAAhqL,EAAA3P,EAAAmB,cAAA,QAAAH,UAAA7D,OAAA2mC,EAAA,IAAA3mC,CAAA46L,QAAAryK,EAAA,yUAAA4P,QAAA,kBAAAokK,MAAA,qBAET,SAAO34L,iBACHA,EAAE6J,KAAK0pB,EAAIvzB,EAAAuzB,MAAAtzB,EAAAD,EAAAC,UAAA64L,EAAA94L,EAAA84L,qBAAAF,EAAA54L,EAAA44L,gBAAAD,EAAA34L,EAAA24L,2BAChBnkK,EAAA,YAAAwrC,GAAA,QACYtiE,GAAO66L,EAAAxlL,EAAAwlL,aAAAtuE,EAAAl3G,EAAAk3G,OACzBtlG,EAAC,EAAAvoB,OAAAo4B,EAAA,SAAAp4B,CAAA,MAAA6zI,EAAAh9H,EAAA,GAAA8lL,EAAA9lL,EAAA,KACS7W,OAAWo4B,EAAA,OAAXp4B,UACXo4B,EAAA,4BACHskK,GAAAE,EAAA/7K,SAED87K,EAAAC,EAAA/7K,QAAAqqK,sBAII,CAAAl8K,IAOAA,EACHvB,OACH8uL,kBAACA,EAvCmCC,gBAAaA,6IFnCnBhqL,EAAA3P,EAAAmB,cAAAo6D,EAAA,GAAAC,UAAA,EAAAw1E,aACWrhI,EAAA3P,EAAAmB,cAAA,OAAAioB,IAAA2wK,IAG4BzlK,GAAA3kB,EAAA3P,EAAAmB,cAAA4wK,GAAA,GAAAvhK,MAAA5F,EAAAyP,WAAA,SAAAxM,GAEtC,OAAC8B,EAAwC3P,EAAAmB,cAAA,OAAAH,UAAA7D,OAAA2mC,EAAA,IAAA3mC,CAAA66L,QAAAtyK,EAAA,kJAAA7X,MAEtDymB,GAAE3kB,EAAA3P,EAAAmB,cAAA64L,GAAA,CAAAn/L,MAAAy5B,QAChBulK,IAAmBvlK,GAAA3kB,EAAA3P,EAAAmB,cAAA84L,GAAAv0K,EAAA,KAAAw0K,SAET,SAAGn5L,SACXA,EAAAoL,IAAMjG,EAAAnF,EAAAmF,QAAAkzL,EAAAr4L,EAAAq4L,OAAAe,EAAAp5L,EAAAo5L,eAAAT,EAAA34L,EAAA24L,kBAAAZ,EAAA/3L,EAAA+3L,0BACRnpL,EAAK3P,EAAQmB,cAAOo2B,GAAA,GAAAjC,QAAA6kK,GACpBxqL,EAAK3P,EAAAmB,cAAY,WACf+E,EAAQgsB,OAAGviB,EAAU3P,EAAAmB,cAAAi5L,GAAA,CAAAxvL,KAAA1E,EAAAgsB,MAAAoC,MAAA8kK,KAAAlnK,MAAA/lB,MAAAnL,UAAA7D,OAAA2mC,EAAA,IAAA3mC,CAAA86L,QAAAvyK,EAAA,mGAAAm0K,sBAAA,EAAAF,kBAAAb,KAAA5mK,MAAAwnK,sBACrBxzL,EAAM2yL,QAAAlpL,EAAA3P,EAAAmB,cAAAi5L,GAAA,CAAAV,oBAAAC,kBAAAb,KAAAD,OAAA1sL,MAAAvB,KAAA1E,EAAA2yL,OAAAvkK,MAAA8kK,KAAAP,OAAA73L,UAAA7D,OAAA2mC,EAAA,IAAA3mC,CAAA+6L,QAAAxyK,EAAA,uGAKHvsB,EAAa,eGkHQkhM,GAA6BC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,MChB3CC,GAAAC,GAAAC,MJtBK,SAAAp8L,YAoBjBq8L,IAMA,IAAAn8L,EAAgB,OAAhBF,GAAgBA,EAAA4pB,MAAGxpB,KAAAypB,YAAAzpB,YAInBF,EAAAG,MAAc,CAIdi8L,OAAA,GACFhf,UAAA,MGtEA,SHkDoB,EAAA+e,EAAGr8L,4CGhHmD,OAAAC,EAAA0B,QAAAtB,EAAAi9K,UACrD,KAWA,CACYgf,OAVaC,GAAA,EAAA79L,MAAAuB,EAAA0B,OAUbwlG,MAAA3lG,IAAA,SAAAuJ,GACD,OAAAA,EAAAK,IAC8D,CAM/D8xB,OHMxB9xB,EGNwBL,EAAAK,MHO3B+0D,MAAQ,QAAG/vC,OAAU,SAAAosK,EAAAtmH,OACrB/5D,EAAM+5D,EAAA/5D,MAAA,wBAuCR,OAtCDA,KAAA,IAAAA,EAAA,KAwBCqgL,EAtBKrgL,EAAA,GAAAle,QAAA,mBAAAs/C,EAAAk/I,GAAA,OAAAA,EAAA1qJ,iBAsBkB51B,EAAA,IAcvBqgL,QG9C4CvgM,KAAA8O,EAAA9O,MAEE,CAAAA,KAAA8O,EAAA9O,UHGzCmP,IGAsCkyK,UAAAr9K,EAAA0B,sCA+B5C,yBAAAH,IAAA,SAAAk7L,EAAA5/L,GACG,OAAc4/L,EAAGx/J,MAACpsB,EAAyC3P,EAAAmB,cAAW,QAAAoE,IAAA5J,EAAAogC,MAAAw/J,EAAAx/J,OAAAw/J,EAAAzgM,MAAAygM,EAAA,QAGnEL,EHmCY,GGjCA,kBAsBjB,SAAAz8L,EAAAitH,GAEF,IAAA8vE,EAAOr+L,OAAA6kL,EAAA,EAAA7kL,CAAA,CAAAosD,MAAA9qD,EAAAw5C,OAAA+wD,MAAAx/C,KAAA/qD,EAAAw5C,OAAA4wD,OAAApqG,EAAAuU,aACF04G,QAKiBlvH,GAFd,SAAAi/L,UACCj/L,GAAa,SAAAquG,WACb,UAEP,MACF,KAAAruG,GAAA,SAAA83B,MAEF,KAAA93B,GAAA,SAAA65F,uFAMG,MACH,KAAA75F,GAAA,SAAAiT,KAA6B+rL,EAAA,UAA7B,WAAAh/L,GAAA,SAAAqK,MACE20L,EAAA,UAEA,WACEh/L,GAAa,SAAAouH,MACb4wE,EAAU,uCAIOr+L,OAAA2mC,EAAA,IAAA3mC,CAAAu+L,QAAAh2K,EAAA,g4BAAAjnB,EAAAw5C,OAAA6xD,OAAArrG,EAAAw5C,OAAA6xD,8BACjB3sG,OAAyB2mC,EAAA,IAAzB3mC,CAAyBk9L,QAAA30K,EAAA,4ZAAAjnB,EAAAw5C,OAAA6xD,OAAArrG,EAAAw5C,OAAA6xD,OAAArrG,EAAAw5C,OAAA6xD,qCACJ3sG,OAAA2mC,EAAA,IAAA3mC,CAAAm9L,QAAA50K,EAAA,wRAAAjnB,EAAAw5C,OAAA6xD,iBACrB3sG,OAAa2mC,EAAK,IAAlB3mC,CAAkBo9L,QAAA70K,EAAA,0TAAAjnB,EAAAgb,WAAAstF,WAAAE,UAAAxoG,EAAAgb,WAAApS,KAAAqS,YAClBvc,OAAA2mC,EAAA,IAAA3mC,CAAAq9L,QAAA90K,EAAA,4nBAAAjnB,EAAAw5C,OAAA8yD,QAMF4wF,kBAAYx+L,OAAG2mC,EAAA,IAAH3mC,CAAGs9L,QAAA/0K,EAAA,0MACRvoB,OAAW2mC,EAAc,IAAzB3mC,CAA2Bu9L,KAASA,GAAAh1K,EAAA,okBAAA81K,GAC3CI,iBAAEz+L,OAAA2mC,EAAA,IAAA3mC,CAAAw9L,QAAAj1K,EAAA,qMAEFm2K,cAAA1+L,OAAgB2mC,EAAI,IAApB3mC,CAAoBy9L,KAAiBA,GAAAl1K,EAAA,wPAC3BvoB,OAAA2mC,EAAuB,IAAvB3mC,CAAuB09L,QAAAn1K,EAAA,sKACvBvoB,OAAA2mC,EAAsB,IAAtB3mC,CAAsB29L,QAAAp1K,EAAA,0IAuChCvoB,OAAY2mC,EAAG,IAAf3mC,CAAe2+L,QAAAp2K,EAAA,8JAoCQ,SAAA7mB,gBAiLxB,IAAAE,EAAA,OAAAF,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,YAtQCF,EAAAg9L,kBAAA,KACEh9L,EAAKG,MAAA,CACN88L,WAAA,EA2DDC,WAAA,KACMC,WAAQ,KACVC,WAAY,KACbC,QAAA,EAEKC,YAAAn3L,EAEFo3L,sBAAY,GACdC,gBAAa,EACdC,aAAA,GAGFz9L,EAAA+2L,aAAA,WAeD/2L,EAAAe,SAAA,CAAAy8L,gBAAA,KAMQx9L,EAAA09L,iBACJ,SAAAC,GAUI,IAAAzF,EAAAl4L,EACJD,MAAAm4L,QASIoF,EAAQt9L,EAAAG,MAAgBm9L,OACtBrF,EAAAC,IAEFgF,EAAaI,EAAAM,kBAAoBD,GACjCP,EAAgBE,EAAGO,kBAAcF,GACjCjyK,EAAA4xK,EAAqBQ,aAAAZ,GACvBC,EAAA/+L,OAAAX,GAAU,oBAAVW,CAAU65L,EAA4BvsK,GACtCuxK,EAAAE,EAAIjtK,OAAM,SAAAE,EAAAqkB,GAAwB,OAAArkB,EAAAqkB,EAAAx0B,OAAA,GAEhCjgB,EAAAe,SAAU,CAAAk8L,WAAmBA,EAAAC,aAAAC,aAAAC,aAAAI,gBAAA,OAK7BO,mBAAoB,WAClB/9L,EAAEG,MAAAs9L,aAAGz9L,EAAAg+L,qBAoBFhB,kBACCn6L,OAAAy2B,WAAAt5B,EAAAi+L,aAAK,2BAQP,aAKE99L,MAAAs9L,qDAgBOJ,QAEJ,+BAGG,6CAkBDr9L,EAAOg9L,0DAcLK,OAAA,SAgBAt9L,MAAAqN,gBAMX,WAAAA,EAAAuzC,OAGN,GAAA28I,EAAA,CAGJ,IAAAC,EAAAD,EAAA/lJ,UAAAv3C,EAAAD,MAAAqN,IAAAuzC,OAAA3gD,EAgBCe,SAAA,CAAAw8L,wBAAAF,QAAA,EAAAC,8BAVO,sBACM,SAAAn9L,SACF,CAIPs9L,aAACt9L,EAAAs9L,gBAKRz9L,EAAAk+L,gBAAC,SAAAtlK,GArR4BA,EAAArE,kBAuRVv0B,EAAGm+L,4BAlLlB,EAAAC,EAAAt+L,8EC9MyBs+L,EAAAz9L,UAAAq9L,eAAA,WACuD,IAAAn7L,OAAAi2B,aAElD,SAGkB,IAAArX,EAAA5e,OAAAi2B,eAE9C,QAAArX,IAqBwB,OAAAA,EAAA84J,aAA2B,IAA3B94J,EAAAuhG,gBAA9BriH,UAAA09L,aAAA,SAAAl3L,EAAAkzL,EAAAN,EA6GCuE,GA5GC,IAAAt+L,EAAAE,KACA8B,EAAA9B,KAAAH,MAAcm4L,EAAuBl2L,EAAAk2L,QAAAqG,EAAAv8L,EAAAu8L,uBAAAvG,EAAAh2L,EAAAg2L,aAAA5qL,EAAApL,EAAAoL,IAAAoxL,EAAAx8L,EAAAw8L,eAAAC,EAAAz8L,EAAAy8L,WAAA7qK,EAAA5xB,EAAA4xB,SAAA40H,EAAAxmJ,EAAAwmJ,SAAA9oJ,EAAAsC,EAAAtC,MAErCqV,EAAA7U,KAAeC,MAAA88L,EAAAloL,EAAAkoL,WAAAC,EAAAnoL,EAAAmoL,WAAAC,EAAApoL,EAAAooL,WAAAC,EAAAroL,EAAAqoL,WAAAC,EAAAtoL,EAAAsoL,OAAAE,EAAAxoL,EAAAwoL,sBAAAC,EAAAzoL,EAAAyoL,eAAAC,EAAA1oL,EAAA0oL,YACbzgK,EAAA0hK,GAAeh/L,EAAA0N,EAAAu/G,UACfhsE,EAAAvzC,EAAWuzC,MAAKmtE,EAAA1gH,EAAA0gH,QAAAzvH,EAAA+O,EAAA/O,IAChBsgM,EAAAJ,IAAA13K,GAAA5lB,EAAAkwF,QAAAotG,EAAAnxL,EAAAqqD,iCAsGHmnI,EAAAr5I,KAAAlgD,OAAA,GAAAkgD,EAAA,IAAAA,EAAA,GAAAlgD,OAAA,EApGCyyK,EAAA6mB,EAAAvgM,OAAA2mC,EASC,GATD3mC,CASC,CAAA4+B,EAAA6hK,sBAAA7hK,EAAA8hK,+BARC1gM,OAAA2mC,EAAmB,GAAnB3mC,CAAmB,CAAA4+B,EAAA6hK,wBACfE,EAAsB,QAAZnrK,SACJhjB,EAAA3P,EAAAmB,cAAoBgjC,GAAA,aAAAm9B,SAAA,cAAA7iE,GAC5B,IDsHc62B,ECtHRlb,EAAQrb,EAAOG,MAAIs9L,YACzBr/L,OAAA2mC,EAAA,GAAA3mC,CAAA4gM,GD+Hc,SAAQt/L,EAAAS,SACd/B,OAAAgnC,GAAmB,mBAAnBhnC,CAAmB,SACrB86C,OAAMujD,aACRvjD,OAAM2jD,iCAGR93D,EAAc,KAAEi3J,KAAqBA,GAAUr1K,EAAgB,sJAChEm2E,IAAAmiG,GACFj9C,SAAA,IACDC,gBCxIEi9C,CAAsDx/L,EAAAM,EAAAG,OAAAiN,KAChD4xL,GACN,OAAKpuL,EAAiB3P,EAAAmB,cAAO,MAAW,CAAAH,UAAM7D,OAAA2mC,EAAgB,GAAhB3mC,CAAgB,CAAA4+B,EAAWmiK,WAC1EX,GAAA5tL,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAA4+B,EAAA4/J,qBAAAxvL,EAAAo/G,YAAAp/G,EAAAo/G,WAAA,EAAAp/G,EAAAo/G,WAAA,YACF57G,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAA4+B,EAAAoiK,iBAED52C,GAAAu2C,GAAAnuL,EAAA3P,EAAAmB,cAAmC,MAAE,CAAAH,UAAgB7D,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAA4+B,EAAA6/J,mBAAA/gM,MAAA,UAAAsR,EAAAwgH,UAAA,KAAAxgH,EAAAugH,YAAA,KAAAvgH,EAAAygH,SAArD26B,IAKCu2C,GAAAnuL,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAA4+B,EAAA6/J,mBAAA/gM,MAAAsR,EAAAygH,QAAA,KAAAzgH,EAAAugH,YAAA,KAAAvgH,EAAAwgH,WAJC6wE,GAAmB7tL,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAA4+B,EAAA8/J,iBACflsL,EAAmB3P,EAAKmB,cAAWi9L,GAAc,CAAAnH,QAAWA,EAAS7iL,OAAEjI,EAAA+/G,aAAA//G,EAAA+/G,aAAA,GAAA6qE,kBACrEpnL,EAAC3P,EAAcmB,cAAU,MAAW,CAAAH,UAAM7D,OAAA2mC,EAAa,GAAb3mC,CAAgB,CAAA4+B,EAAAsiK,iBAAoBzzJ,aAAM7rC,EAAA+9L,mBAAAjyJ,aAAA9rC,EAAAu/L,mBACzF3uL,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA7D,OAAA2mC,EAAA,IAAA3mC,CAAA69L,QAAAt1K,EAAA,0IACF82K,GAAAt2L,GAAAyJ,EAAA3P,EAAAmB,cAAAo9L,GAAA,CAAApyL,MAAAjG,UAAAkzL,SAAAN,qBAAAqB,eAAAp7L,EAAAm+L,cAAAxD,kBAAA,WAED2D,GAC2BA,OAIhB1tL,EAAgB3P,EAAAmB,cAAA,QAAAH,UAAAoZ,GACVgiL,GAAKzsL,EAAgB3P,EAAAmB,cAAA61K,GAAAh3K,EAAA,CAAA+7B,MAAA,CAAAmvJ,WAAA,YAAAsT,YAAA,EAAAC,cDkGpBnpK,EClGoBv2B,EAAA09L,iBDkGH,SAAA39L,OACnCL,EAAEtB,OAAAo4B,EAAA,WAAAp4B,CAAAgnC,GAAA,cAEFpI,EAAA0hK,GAAAh/L,UACEkR,EAAS3P,EAAAmB,cAAmB,QAAAH,UAAAlC,EAAAkC,UAAA+6B,MAAAj9B,EAAAi9B,oBAE3B/7B,EAAAmB,cAAA,QAAAH,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAA4+B,EAAA,mDAAAzG,QAAA,kBAAAA,EAAAx2B,EAAAkrB,gBCxGmCysC,gBAAA/W,EAAA8W,YAAA8lI,EAAAzlB,mBAAA15K,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAA4+B,EAAA2iK,2BACnCtC,GAAAuB,GAAAhuL,EAAA3P,EAAAmB,cAAA61K,GAAAh3K,EAAA,CAAA+7B,MAAA,CAAAmvJ,WAAA,YAAAz0H,gBAAA/W,EAAA8W,YAAAlS,EAAAq6I,WAAAniM,GAAA,0BAAAq6K,uBACFhqD,IAAAuvE,IAAAuB,GAAAhuL,EAAA3P,EAAAmB,cAAAy9L,GAAA,CAAAp+L,MAAApD,KAEDyvH,IAAAuvE,IAAAuB,GAAAj+I,EAYgB68I,GAVZ5sL,EAAa3P,EACbmB,cAAA,OAAQH,UACR7D,OACA2mC,EAAA,GADA3mC,CACA,CAAA4+B,EAAA8iK,gBAQMlvL,EAAA3P,EAAAmB,cAAWu1L,GAAA,CAAwB16K,MAACkgL,EAAAz7L,MAAAw7L,EAAAz7L,MAAA27L,EAAArG,aAAA/2L,EAAA+2L,aAAAvgL,SAAAymL,MAC3B7vL,EAAGqqD,aAAiBrqD,EAAEqqD,YAAApyD,OAAuB,GAACuL,EAAA3P,EAAAmB,cAAA,QAAAm0B,QAAAv2B,EAAAk+L,gBAAAj8L,UAAA7D,OAAA2mC,EAAA,IAAA3mC,CAAA89L,QAAAv1K,EAAA,g6BAAA82K,EAAA,IAAAzgK,EAAAmiK,UAC3C1B,EAAa,OAAS,OACzB,oBAGX98L,UAAAoB,OAAA,WACN,IAAM/B,EAAAE,KAGN,OADAA,KAAmBC,MAAAs9L,YAEb7sL,EAAY3P,EAAAmB,cAAuBwO,EAAe3P,EAAAoQ,SAAA,KAClDT,EAAc3P,EAAAmB,cAAYu3L,GAAa,CAAAvsL,IAAAlN,KAAAH,MAAAqN,IAAAmsL,cAAAr5L,KAAAH,MAAAw5L,eAAA,SAAAv3L,GAC/B,IAAGX,EAASW,EAAAX,OAAAg5L,EAAoBr4L,EAAEq4L,OAAAN,EAAa/3L,EAAA+3L,mBAAAuE,EAAAt8L,EAAAs8L,YAC/C,OAAG1tL,EAAc3P,EAAMmB,cAAawO,EAAY3P,EAAAoQ,SAAA,KAAArR,EAAAq+L,aAAAh9L,EAAAg5L,EAAAN,EAAAuE,OAIxDp+L,KAAAm+L,gBAGND,EDyGqB,GCvGT,yBACPrc,EAAa,GAAAge,mBACZ,SAkCV,IAGAC,GAAiC,SAAAlgM,8DC1HhC,OApB2DE,EAAAigM,eAAA,KACfjgM,EAAAkgM,eAAA,KAQ7ClgM,EAAAG,MAAA,CAAuCggM,WAAA,EAAvCC,WAAA,GAWCpgM,oBATSW,UAAEkpB,kBAAA,WAER,IAAA7pB,EACEE,QAEEA,KAAAC,MAAAggM,UAAA,CAGL,IAAAz3L,EAAAxI,KAAAH,MAAA2I,KACH8N,EAAA9N,GAACA,EAAAmD,KAAAnD,EAAAmD,KAAAxG,OAAA,WAWYnF,KAAY+/L,eAOxBp9L,OAAAy2B,WAAA,kBAAAt5B,EAAAe,SAAA,CAAAo/L,WAAA,EAAAC,UAAAC,KAAA7pL,OAES7V,UAAey7D,mBAAG,SAAAn4B,EAAAi4B,GACxB,IAAIl8D,EAACE,MAEJg8D,EAAAikI,WAAAjgM,KAAAC,MAAAggM,WAAAjgM,KAAAC,MAAAigM,YACDlgM,KAAAggM,eAAAr9L,OAAAy2B,WAAA,kBAAAt5B,EAAAe,SAAA,CAAAq/L,WAAA,cAKEz/L,UAAAwpB,qBAAO,WAIPjqB,KAAS+/L,gBACX3yH,aACEptE,KAAA+/L,gBAIG//L,KAAAggM,gBACL5yH,aAAcptE,KAAAggM,qQC5DwCI,EAAAC,GAAA73L,EACA83L,EAAA93L,KAAAmD,MAAAnD,EAAAmD,KAAAxG,OAAA,EACrBo7L,KAAAD,GAAAF,KAAAjzE,iBACOqzE,EAAAJ,EACWA,EAAAz0L,KAAAqkB,OAAA,SAAAE,EAAAhjB,GAAA,OAAAA,EAAAo/G,WAAAp8F,EAAAhjB,EAAAo/G,WAAAp8F,GAAA,GAChB,EACkBouK,EAAAmC,IAAAljM,GAAA,kBAAA0uH,MAAAu0E,EAAA,EAgB9CE,EAAON,IAAAz0L,KAAA,GAETg1L,EAAAD,EAAoBz2J,MAAwB,EFMvB,KELvB22J,EAAcC,GFoHE,IEnHnBvqL,EAAcpX,KAAEyJ,IAAQ+3L,EAAUv7L,OAAOy7L,GAC1CE,EAAAJ,EAAAz2J,MFG2B,IEH3B3zB,GAGC0hL,EAAO,kBAAA0I,GACLrH,EAAcr5L,KAAAH,MAAAw5L,cAAAr5L,KAAAH,MAAAw5L,cAAA,kBAAAh1K,QAAA61D,QAAA,KACd6mH,EAASvC,GAAkBh/L,GAAAuhM,gBACxBrwL,EAAW3P,EAAAmB,cAAA,OAAAH,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAA6iM,KACdT,IACDL,GACJU,EAAAv/L,IAAA,SAAA8L,EAAAxQ,GAAA,OAAAgU,EAAA3P,EAAAmB,cAAA8+L,GAAA,CAAA16L,IAAA5J,EAAAs7L,UAAAqB,gBAAAgF,yBAAAnxL,MAAAoxL,iBAAAC,cAAAgC,EAAAj4C,WAAA50H,WAAAokK,mBAEDwI,IAAsCL,GACpCC,GAAAY,EACE1/L,IAAA,SAAM8L,EAAMxQ,GAMb,OAAAgU,EAAA3P,EAAAmB,cAAA8+L,GAAA,CAAA16L,IFhB2B,IEgB3B5J,EAAAs7L,UAAAqB,gBAAAnsL,MAAAoxL,iBAAAC,cAAAgC,EAAAj4C,WAAA50H,WAAAokK,mBAEDwI,GAAAL,GAAsBvvL,EAAC3P,EAAAmB,cAA2B,yBACxCoU,EAEF,gBF2FuB,GEvFY,iDACzB,kBAKL,SAAA1W,wEACV,EAAAqhM,EAAArhM,iXADU,GAMA,kBAET,SAAOkC,SACPA,EAAKipB,SAAOga,EAAAjjC,EAAAijC,SAAAlwB,EAAA/S,EAAAC,iBAAA,IAAA8S,EAAA,GAAAA,EAAAE,EAAAjT,EAAAP,aAAA,IAAAwT,EAAA,KAAAA,EAAAo4C,EAAArrD,EAAAqrD,QAAA7qD,EAAAR,EAAAQ,WAUZ,OAAMP,GAAKgjC,EACZ,UAAC,IACJs8I,EAAE3wK,EAAA3P,EAAAmB,cAAA,UAAAH,UAAAm/L,EAAA7qK,QAXE,SAAY/U,KACZ+S,mBACF0Q,GAAMziC,GACNA,EAAAf,KAUFmP,EAAA3P,EAAAmB,cAAoB,OAAC,KAAA6oB,aAEfra,EAAY3P,EAAAmB,cAAQm2B,EAAA,GAAA1mB,QAAAw7C,EAAAz7C,UAAA,UAAA2vK,GAGxBA,iBAkCQ,SAAQzhL,cAGLC,OACXC,EAAGF,EAAAG,KAAAC,KAAAH,IAAAG,OAEHmhM,oBACE,SAAA94L,OACEge,EAAAvkB,EAEFkxI,EAAMlzI,EAAAG,MAAI+yI,WAKNrqG,OAAA1iC,EACN+O,OAAA/O,EACA,IAEI,QAAAm7L,EAAU36K,EAAA,EAAAusH,GAAAquD,EAAAD,EAAApsL,QAAAqsL,EAAApsL,KAAAosL,EAAAD,EAAApsL,OAAA,CAEZ,IAAAgB,EAAAqrL,EAAW9/L,MAEb,GAAAonC,KAAAriC,MAAA+B,EAAA/B,IAAA,CAEM0O,EAAGgB,EACD,MAER2yB,EAAA3yB,SAKIwlE,GAAAn1D,EAAA,CAAAgP,MAAAmmD,eAYE6lH,IAA0BA,EAC1BpsL,OAAAnT,EAAAs/L,EAAK3lH,SAAS35E,EAAC/B,KAAAqhM,WAKb,GAAA/6K,EAAA,MAAAA,EAAAgP,aASAsT,GAAAzoB,SAAAyoB,EAAApnC,OAAKonC,EAAApnC,MA9CN,EA/FDuE,EAAU,CAChBvE,MAAc27K,IA6IJloK,GAAAkL,SAAAlL,EAAAzT,OAAAyT,EAAGzT,MAjDb,KA5FgC27K,GAAA,EAE3BhyK,MAiJLkoK,GAAA,EAAA5hK,OAAA,SAAAzO,GAAA,OAAAiwI,EAAA3/E,KAAA,SAAAr9C,GAAA,OAAAA,EAAA9K,QAAAnI,MAAA,aAEFu+L,EAAA76K,EAAA,EAAAusH,EAAA,CAAAltI,IAAA5H,OAAAX,GA+BC,eA/BDW,CA+BCojM,GA9BSxhM,EAAAe,SAAA,CAENmyI,WAAAsuD,GAEI,WACE,OAAAxhM,EAAAwC,kCAGe,SAAA+F,SACDvI,EAAEG,MAAA+yI,aACL7tI,UAMCmB,MAAA0sI,EAAA,GAAA1sI,KAalBxG,EAAAe,SAAA,CACHmyI,aAAAxhI,OAAA,SAAAwE,GAAA,OAAAA,EAAA1P,MAAA+B,EAAA/B,OACH,WAAC,OAAAxG,EAAAwC,qDAEe,IAAAi/L,EAAoBjgL,EAAC9M,OAA8BjT,MAAA1D,QAAA,UAC1D2jM,EAAe52E,WAAC22E,GACbhgM,EAAGysC,MAAEwzJ,GAAA,GAAAA,EACNxuD,EAAMlzI,EAAAG,MAAA+yI,WAAwB5xI,IAAA,SAAA4U,UACpCA,EAAA1P,MAAA+B,EAAA/B,MACJ0P,EAAAyQ,EAAA,KAAAzQ,EAAA,CAAAzU,2CCvOWzB,EAAAe,SAAA,CAAAmyI,gBAGZlzI,EAAa2hM,uBAAA,SAAAp5L,EAAA6C,GACsC,IACAo2L,EADAxhM,EAAAG,MAAA+yI,WACA5xI,IAAA,SAAA4U,GAKb,OAJmBA,EAAA1P,MAAA+B,EAAA/B,MAEjD0P,EAAAyQ,EAAA,KAAAzQ,EAAA,CAAA9K,WAE8B8K,IAGhClW,EAA+Ce,SAAA,CACnDmyI,WAAAsuD,GACS,WAAI,OAAAxhM,EAAAwC,cAEXxC,EAAAy1B,OAAa,WACd,IAAAy9G,EAAAvsH,EAAA,EAAA3mB,EAAAG,MAAA+yI,YACD90I,OAAAX,GAAA,eAAAW,CAAA80I,GACElzI,EAAOe,SAAK,CACLmyI,WAAaA,GACpB,WAAa,OAAAlzI,EAAAwC,cAEfxC,EAAAwC,SAAA,WAQF,IAAA0wI,EAAAlzI,EAAAG,MAAA+yI,WAAwClzI,EAAAD,MAAAyC,SC5BW,SAAA0wI,GACA,OAAAA,EAAA5xI,IAAA,SAAA4U,GACGA,EAAA1P,IAAA,IAAA8xD,EAAA3xC,EAAA,EAAAzQ,EAAA,SAE9C,OAAAoiD,IDwBgCspI,CAAA1uD,KAAxClzI,EAAA6hM,YAAA,SAAAt5L,GACE,OAAAqI,EAAkB3P,EAAGmB,cAA+B,OAAAH,UAAA,8BAC5C2O,EAAW3P,EAAKmB,cAAU,QAAAH,UAAA,qCAChC2O,EAAW3P,EAAQmB,cAAC,OAAAH,UAAA,oCAAsCsG,EAAA6C,OAAAwF,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,gDAC1D2O,EAAA3P,EAAAmB,cAAA0/L,GAAA,CAAA12L,MAAA7C,EAAA6C,MAAA5I,SAAA,SAAA4I,GAAA,OAAApL,EAAA2hM,uBAAAp5L,EAAA6C,IAAA0tI,mBAAA,MAEF14H,SAAA7X,EAAgB9G,OACsCmP,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KACpDT,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,oCAEF2O,EAAmB3P,EAAAmB,cAAmBozB,GAAA,GAAAvhB,KAAA,SAAAyc,KAAA,SAAAluB,SAAA,SAAAgf,GAAA,OAAAxhB,EAAA+hM,uBAAAvgL,EAAAjZ,IAAA9G,MAAA8G,EAAA9G,MAAAg0B,OAAAz1B,EAAAy1B,UAC/B7kB,EAAe3P,EAAAmB,cAAA,OAAAH,UAAK,oCAAoCs0B,QAAC,kBAAAv2B,EAAAgiM,kBAAAz5L,KAC9DqI,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA,kBAN8B2O,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,oCACzB2O,EAAe3P,EAAAmB,cAAAozB,GAAK,EAAK,CAAAvhB,KAAM,OAAOxS,MAAK,OAAIwgM,UAAA,WAQpD/uD,WD8DGA,aACQ,IAAFA,EAAE7tI,WACR,EAAA5D,OAAA,IAAA2J,MAAA,aAED9J,IAAU,SAAS4U,SACpB,CACD9K,MAAK8K,EAAA9K,MACL3J,MAAA,OAAAyU,EAAAzU,OAAA,IAAAyU,EAAAzU,MAEF+E,IAAA07L,QCvEaC,CAASpiM,EAAAmzI,YA+CvB,OA3CCA,EAAE,GAAAzxI,OAAAk8C,2BA2CH39C,EC9FD,SF4HO,EAAAoiM,EAAAtiM,KCtEKa,UAAAoB,OAAqB,WACrB,IAAA/B,EAAAE,KAEFgzI,EAAahzI,KAAKC,MAAM+yI,WAE9B,OACEtiI,EAAA3P,EAAAmB,cAAA2/K,EAAA,EAAAx/G,SAAA,cAAA7iE,GACE,OAAAkR,EAAA3P,EAAAmB,cAAA2mL,GAAe,CAASjtL,MAAA,cACtB8U,EAAA3P,EAAAmB,cAAC,OAASH,UAAQ,cAAUixI,EAC5B/oG,MAAA,GAMQv3B,UAWNtR,IAAA,SAAAiH,GACA,OAAAqI,EAAA3P,EAAAmB,cAAC,OAAAH,UACM,iBACMuE,IAAC,GAAA+B,EACZ/B,KASXoK,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,4BAAAs0B,QAAA,kBAAAv2B,EAAAqhM,oBAAA94L,KACHqI,EAAC3P,EAAAmB,cAAA,KAAAH,UAAA,gBA9DoD2O,EA8DpD3P,EAAAmB,cAAA,OAAAH,UAAA,iCAAA+6B,MAAA,CAAAhvB,gBAAA5P,OAAAk1K,GAAA,EAAAl1K,CAAAmK,EAAA6C,MAAA1L,EAAAuU,8FC9FDmuL,EF2HY,CE1HsD5rK,EAAA,sBAoBTp8B,EAAO,QA2B9DmsJ,GAAM,EAIH9kJ,OAAM,EAGHC,MAAA,aACJ0hB,YAAS,iCAGX,CACE3hB,OAAA,EAMEC,MAAK,cAEH0hB,YAAY,+CAIY,SAAGtjB,YAExBuiM,IACL,IAAAriM,EAAA,OAAAF,KAAA4pB,MAAMxpB,KAAAypB,YAAAzpB,YACLF,EAAM+qK,mBAAA,SAAAj8J,sBAA+B9O,EAAGD,MAAAyC,SAAAmkB,EAE3C,KAAA3mB,EAAAD,MAAA0B,MAAA,CAAA+M,OAAAhJ,MAIExF,EAAAsiM,cAAA,SAACjzK,GASDrvB,EAAAD,MAAAyC,SAAAmkB,EAAe,KAAS3mB,EAAAD,MAAA0B,MAAA,CAAA4tB,cAEtBq3I,iBAAA,SAACjlK,GAEFzB,EAAUD,MACTyC,SAAAmkB,EAAA,KAAA3mB,EAAAD,MAAA0B,MAAA,CAAAkO,SAAAlO,QASEqoJ,cAAA,SAAAtoI,GAUJxhB,EAAAD,MAAAyC,SAAAmkB,EACQ,KAAA3mB,EACND,MAAA0B,MAAY,CAAAs5E,MAAA38E,OAAAX,GACD,qBADCW,CACAojB,EACZ9M,OAAAjT,aCnGF,SDqDA,EAAA4gM,EAAMviM,2UCzE6B0O,EAAAoC,EAAA3P,EAAAmB,cAAA+/K,EAAA,CAAAzgL,MAAA,QAAAm4C,aAAAp3C,YAAA,GAAAq6I,GAAA,EAAAt6I,SAAAtC,KAAA4pJ,cAAAroJ,MAAArD,OAAAX,GAAA,eAAAW,CAAA28E,GAAA9mE,KAAA,WAAArD,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,WACV2O,EAAA3P,EAAAmB,cAAAggL,EAAA,CAAArjL,MAAA86C,GAAA,QAEgCjpC,EAAA3P,EAAAmB,cAAAmgM,GAAA,CAAAxjM,MAAA,GAAA0D,YAAA,cAAA6nL,YAAA7sL,GAAA,UAAA4yB,KAAAg6J,eAAA,EAAAptK,MAAAoS,EAAA7sB,SAAAtC,KAAAoiM,mBAiBzDD,EDoD0B,CClDzB7rK,EAAS,kBAmBM,SAAAx0B,SAChBA,EAAAP,MAAae,EAASR,EAAMQ,SAACukK,EAAA/kK,EAAA+kK,aAC9BtlK,EAAAmT,KAAA9Y,EAAA2F,EAAA3F,MACDiZ,EAAI4R,EAAqB,EAAAvoB,OAAAo4B,EAAA,SAAAp4B,MAAA+H,IAAA1E,EAAA8a,UAAA,OAAA9a,EAAA8a,SAAA9a,EAAA8a,SAAAxW,WAAA,OAAAwW,EAAAxH,EAAA,GAAAytL,EAAAztL,EAAA,KACvB4R,EAAyB,EAAAvoB,OAAMo4B,EAAc,SAApBp4B,CAAoBA,OAAAX,GAAA,eAAAW,CAAAqD,EAAAoH,MAAA,GAAAA,EAAAoM,EAAA,GAAAwtL,EAAAxtL,EAAA,KAC9C0R,EAAA,EAAAvoB,OAAAo4B,EAAA,SAAAp4B,QAAAX,GAAA,eAAAW,CAAAqD,EAAA0G,MAAA,GAAAA,EAAA2N,EAAA,GAAA4sL,EAAA5sL,EAAA,GAID6sL,EAAkBvkM,OAAIo4B,EAAsB,YAA1Bp4B,CAA0B,SAAAojB,KAClCA,EAAC9M,OAAWjT,WACrB8a,SAAA/Z,IAEDogM,EAAAxkM,OAAAo4B,EAAsC,YAAtCp4B,CAAsC,SAAAojB,GACtCihL,EAAIjhL,EAAM9M,OAAUjT,WAClBoH,IAAMrG,MACJpE,OAAao4B,EAAiB,YAA9Bp4B,CAA8B,SAAAojB,KAC7BA,EAAA9M,OAAAjT,WAEH0G,IAAA3F,MAEWpE,OAAKo4B,EAAA,YAALp4B,CAAK,eACS,EAAM,GAAIqD,EAAC,CAAA8a,SAAAne,OAAAX,GAAA,qBAAAW,CAAAme,GAAA1T,IAAAzK,OAAAX,GAAA,mBAAAW,CAAAyK,GAAAV,IAAA/J,OAAAX,GAAA,mBAAAW,CAAA+J,kBAEhCyI,EAAW3P,EAAKmB,cAAS,MAAW,6CAC/B,mBACqB,QAC3BnB,EAAAmB,cAAA,mBACF,2JA7BsB,WAOf,SAAUof,KAClBmF,EAAiC,EAAC,GAAAllB,EAAA,CAAA3F,MAAA0lB,EAAA9M,OAAAjT,0HARX,WA8BvBmP,EAAS3P,EAAAmB,cAAaygM,GAAW,CAAArlJ,aAAA5oC,EAAApS,SAT3B,SAA6BoS,sCAUpChE,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KAEDT,EAAA3P,EAAAmB,cAAyB+/K,EAAA,CAAAzgL,MAAA,MAAAm4C,WAjCA,EAiCAr3C,SAAAogM,EAAAntK,OAAAm9C,EAAAnxE,MAAAoH,EAAAoL,KAAA,WACnBrD,EAAW3P,EAAAmB,cAAA+/K,EAA8B,CAAAzgL,MAAO,MAAAm4C,WAlC7B,EAkC6Br3C,SAAAsgM,EAAArtK,OAAAm9C,EAAAnxE,MAAA0G,EAAA8L,KAAA,YACtDrD,EAAY3P,EAAImB,cAAS+/K,EAAQ,CAAAzgL,MAAA,WAAAm4C,WAnCR,EAmCQp3C,YAAA,OAAAD,SAAAmgM,EAAAltK,OAAAm9C,EAAAnxE,MAAA8a,EAAAtI,KAAA,gBAK/B7Z,EAAqB,WACAA,EAAeqhC,EAAA09D,OAGvC/+F,EAAA,wKAOMqsK,aAAQ,CAChB92J,SAAA,GAEeuO,SAAA,GACHmR,MAAO,CAAErL,IAAAjnB,GAAAU,GAAA,UAAA4yB,OAElBm1I,YAAiBu9B,GAAA,EAAA74B,YAGbv6J,EAAe4b,EAAGk7I,aAAiB92J,SAmBxC,GAlBGnU,EAAUyd,SAEVtJ,EAAAiF,KAAkBpZ,EAAKyd,QAE1Bzd,EAAAyiB,gBAEGtO,EAAAmgB,cAAuBt0B,EAAAyiB,eAE1BziB,EAAAwnM,WAEMrzL,EAAiCozJ,QAAAvnK,EAAAwnM,WAG1BxnM,EAAA+gB,UAAyC,IAAzC/gB,EAAA+gB,YACN5M,EAAA4M,SAAA/gB,EAAA+gB,UAIP/gB,EAAA03I,YAAA13I,EAAA09C,OAAA,CAEK,IAAA+pJ,EAAAznM,EAAE03I,WAAAjzE,MAAA,KAAQ3+D,IAAE,SAAAojK,GAEX,OAAA7lJ,OAAA6lJ,EAAA/0C,mBAgBN,QAAA16G,EAAA0R,EAAA,EAAAnrB,EAAA09C,QAAApjC,EAAAb,EAAAC,QAAAY,EAAAX,KAAAW,EAAAb,EAAAC,OAAA,CACa,IAAA9J,EAAuB0K,EAACrU,MAC9B+vB,EAAA0hH,EAAqB7tI,OAAA,EACVmsB,GAAA,EACN0hH,EAAApjI,KAAA,CAAArO,MAAAwhM,EAAAzxK,GAAApmB,UAIc8nI,EAAGpjI,KAAA,CAAArO,OAAAk8C,IAAAvyC,WAM9B,MAAcswE,GAAOn1D,EAAA,CAAAgP,MAAkBmmD,GACvC,QAEA,IACiB5lE,IAAMA,EAAAX,OAAAnT,EAAAiT,EAAA0mE,SAAA35E,EAAA/B,KAAAgV,GAEjB,QAAS,GAAAsR,EAAA,MAAAA,EAAAgP,OAEZ5lB,EAAAujI,aAIH,IAAA4vB,EAAiBogC,GAAgB1nM,GAc3B,OAZAsnK,GAAaA,EAAAz9J,SAKZsK,EAAAmzJ,SAAKA,GAGEtnK,EAAA0M,QACTyH,EAAU9G,IAAKrN,EAAA0M,MAAWkiJ,SAC7Bz6I,EAAOxH,IAAU3M,EAAA0M,MAAAiiJ,UAEN5+H,UAGT,IAAK43K,EAAkBx8K,EAAsB,EAAAy8K,IAAAC,EAAAF,EAAAjuL,QAAAmuL,EAAAluL,KAAAkuL,EAAAF,EAAAjuL,OAAA,CAC7C,IAAAjP,EAAQo9L,EAAM5hM,MACdooI,EAAA11H,eAAAlO,KACDmB,EAAAnB,GAAAq9L,KAAAz5D,EAAA5jI,MAIJ,MAAA61E,GAAAxwD,EAAA,CAAAiK,MAAAumD,GAED,YAEGunH,MAAAluL,OAAAJ,EAAAouL,EAAAxnH,SAAA5mE,EAAA9U,KAAAkjM,GAEK,QAAQ,GAAsB73K,EAAA,MAAAA,EAAAiK,OAGpC,OAAInuB,WAEFm8L,GAA6B/nM,SAC3B4L,cACK,SAEN0jH,WAAAtvH,EAAA00G,eAAA,OACF9oG,EAAA5L,EAAA4L,eAEDo8L,EAAA,MACIp8L,yCChNoB,OAAAwqG,EAGQ,IAAA60D,EAAA,GACWg9B,EAAA,MASvCh9B,EAAA3D,SAAAlxD,EAA4Bw1D,cAChCX,EAASvzB,WAAAthC,EAAAshC,WAUTuzB,EAAS92J,SAAA8zL,EAITA,EAAQ7uL,KAAAynI,EAAGznI,KAf4D6uL,EAkBrElnL,SAAA8/H,EAAA9/H,SAGF8/H,EAAA5nG,KAAA,CAMM,IAAGzwB,EAAGvmB,GAA0B,cAAA0D,IAAOk7I,EAAA5nG,MAG3CzwB,IACGyiJ,EAAWp3I,MAAA,CAAArL,EAAAjnB,KAKhB0mM,EAAA56L,IAAA+oG,EAAAw4C,2ID+JIs5C,CAAmBt8L,MAEP,iBAQYwqG,SACZA,EAAK60D,0BAMlB70D,EAGH,IAAA5vG,EAAO4vG,EAAA60D,aAAS3D,EAAA9gK,EAAA8gK,SAAA5vB,EAAAlxI,EAAAkxI,WAAA56E,EAAA3xC,EAAA,EAAA3kB,EAAA,2BACjB,OAAA2kB,EAAA,KAAAirF,EAAA,CAAA60D,aAAA9/I,EAAA,KAAA2xC,EAAA,CAAA3oD,SAAAgX,EAAA,KAAA8/I,EAAA92J,SAAA,CAAAmzJ,WAAA5vB,WAAAywD,GAAAzwD,SAlBK0wD,CAAcx8L,IAMjBA,iCEzN0E,IAAA+P,EAAA+7H,EAAA5xI,IAAA,SAAA4U,GAC3C,OAE2CzU,MAAA,OAAAyU,EAAAzU,OAAAk8C,IAAAznC,EAAAzU,MAClB2J,MAAA8K,EAAA9K,gBA0BzDhN,OAAMX,GAAY,eAAlBW,CAAkB+Y,KAEd,GAAA1V,OAAak8C,IACbxmC,YASF+rL,GACA1nM,GACF,IAAMsnK,EAAS,GAGX3G,EAAY3gK,EAAO2gK,YAmBvB,GAjBE3gK,EAAM2gK,cAEF3gK,EAAA+gK,WAAgB/gK,EAAA+gK,UAAAl3J,OAElB82J,EAAa,EAGL3gK,EACVkhK,WAAAlhK,EAAAkhK,UAAAr3J,SACI82J,EAAY,IAQG,IAAfA,EAEF,IAAK,IAAE71J,EAAM,EAAAA,EAAO9K,EAAK+gK,UAAAl3J,OAAAiB,IAAA,CACrB,IAAEhF,EAAM9F,EAAO+gK,UAAQj2J,GAExBw8J,EACLhzJ,KAAA6W,EAAA,KAAArlB,EAAA,CAAAvE,GAAAuJ,EAAA2N,KAAAxW,GAAA,YAAAkqL,oBAKE,GAAmB,IAAfxrB,EAEN,IAAU71J,EACV,EAAAA,EAAA9K,EAAAkhK,UAAAr3J,OAAAiB,IAAA,CACYhF,EAAG9F,EAAAkhK,UAAAp2J,GAEbw8J,EAAahzJ,KAAA6W,EAAY,KAAArlB,EAAA,CAAAvE,GAAAuJ,EAAA2N,KAAAxW,GAAA,YAAAmqL,eAK7B,OAAM9kB,SA+EgB+gC,GAAAC,GCtBtBC,GAAkBC,GAAAC,GAAAC,GAAAC,GAAAC,GA0BdC,MDnBqEjmM,OAAA2jL,EAAgB,EAAhB3jL,CAAgB,SAAAsB,GAAA,MAAY,CACrGkb,QAAWxc,OAAG2mC,EAAA,IAAH3mC,CAAGkmM,KAAyBA,GAAA39K,EAAA,8aAAAjnB,EAAAi9F,QAAAI,GAAA3+F,OAAA6kL,EAAA,EAAA7kL,CAAA,CAAAosD,MAAA9qD,EAAAw5C,OAAAgxD,MAAAz/C,KAAA/qD,EAAAw5C,OAAAkxD,UAAA1qG,EAAAuU,MAAAvU,EAAA0O,OAAA/D,OAAA8nD,IACvC9yB,QAAMjhC,OAAU2mC,EAAA,IAAV3mC,CAAUylM,KAA6BA,GAAAl9K,EAAA,0HAAAjnB,EAAAi9F,QAAAI,IACvC4zB,OAAAvyH,OAAA2mC,EAAA,IAAA3mC,CAAA0lM,KAAkDA,GAAjCn9K,EAAkC,kEAAAjnB,EAAAi9F,QAAAI,UAGtC,SAAU/6F,OAC3Bq9B,EAAIr9B,EAAAq9B,QAAayxF,EAAA9uH,EAAA8uH,oBAAAH,EAAA3uH,EAAA2uH,OAAAjxH,EAAAsC,EAAAtC,MAAAuC,EAAAD,EAAAC,YACfsiM,GAAyB7kM,UACzBkR,EAAgB3P,EAACmB,cAAA,OAAAH,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,CAAA8M,EAAA0P,QAAA3Y,QACX2O,EAAa3P,EAAAmB,cAAA,OAAAH,UAAAiJ,EAAAm0B,iBAEjBzuB,EAAe3P,EAAAmB,cAAc,MAAK,CAAMH,UAAQiJ,EAAMylH,QAASA,QAM5Dv2H,EAAoB,WACtBA,EAAAqhC,EAAA+oK,OAaHpmM,OAAA6iL,EAA0B,EAA1B7iL,CAA0B,SAAgBsB,SACvCtB,OAAYgnC,GAAI,mBAAhBhnC,CAAgB,OACjBsB,EAAAw5C,OAAAmwD,aAGInwD,OAAOn9C,gBASfqC,OAAAgnC,GAAA,mBAAAhnC,CAAA,CACDosD,MAAA9qD,EAAAw5C,OAAAyZ,KAWGlI,KAAA/qD,EAAew5C,OAAmCujD,SACnDxoF,MACKwwL,EAAQrmM,OAAAgnC,GAAW,mBAAXhnC,CAAW,CACnBosD,MAAM9qD,EAAGw5C,OAAAixD,MACf1/C,KACE/qD,EAAAw5C,OAAAmwD,SACEp1F,QAKQ7V,OAASgnC,GAAA,mBAAThnC,CAAS,SACX86C,OAAQ6wD,aACT7wD,OAAA2jD,SACF5oF,QAEQ7V,OAAAgnC,GAAG,mBAAHhnC,CAAG,2BAA4CsB,EAG7Dw5C,OAACujD,OAEJ/8F,EAAAuU,MAOIywL,EAAoDtmM,OAACgnC,GAAsB,mBAAvBhnC,CAAuB,CAApBosD,MAAA9qD,EAAAw5C,OAAO2wD,MAC5Dp/C,KAAK/qD,EAAGw5C,OAAAgzD,UACdxsG,EAAMuU,MAEF0wL,EAAYvmM,OAAMgnC,GAAQ,mBAAdhnC,CAAc,CAC5BosD,MAAO9qD,EAAKw5C,OAAA+wD,MACbx/C,KAAA/qD,EAAAw5C,OAAAuwD,OAED/pG,EACEuU,MACG2wL,EAAWxmM,OAAIgnC,GAAA,mBAAJhnC,CAAS,CACrBosD,MAAA9qD,EAAAw5C,OAAAujD,aAGIvjD,OACE0jD,wBAOWx3D,GAAW,oCACjBq3D,oBAEDgN,oCAGD1kE,EAEH,KAAAg/J,QAAAp9K,EAAA,0TAAAk+K,EAAAD,EAAAllM,EAAAi9F,QAAAc,GAAA/9F,EAAA0O,OAAA/D,OAAAsQ,GAAAjb,EAAA0O,OAAA/D,OAAAsQ,YAGFvc,OACN2mC,EAAA,IADM3mC,CACN4lM,QAAAr9K,EAAA,4VAAA89K,EAAAK,EAAAplM,EAAA0O,OAAA/D,OAAAsQ,IACFg4C,KAAAv0D,OAAA2mC,EAAA,IAAA3mC,CAAA6lM,QAAAt9K,EAAA,0TAAAo+K,EAAAC,GACFl2L,KAAY1Q,OAAA2mC,EAAc,IAAd3mC,CAA2B8lM,KAACA,GAAAv9K,EAAA,slBAAAs+K,EAAAN,kwBClRqCO,GAAAt0L,EAAA3P,EAAA2pE,KAAA,SAAA5oE,GAC3C,IAAA0I,EAAA1I,EAAA0I,EAAAC,EAAA3I,EAAA2I,EAAAqiF,EAAAhrF,EAAAgrF,QAAAv7E,EAAAzP,EAAAyP,MAAA8rF,EAAAv7F,EAAAu7F,aACX79F,EAAAtB,OAAAo4B,EAAA,WAAAp4B,CAAAgnC,GAAA,cACoCk0I,EAAAl7K,OAAAo4B,EAAA,OAAAp4B,CAAA,MACL2W,EAAA4R,EAAA,EAAAvoB,OAAAo4B,EAAA,SAAAp4B,CAAA,OAAA+mM,EAAApwL,EAAA,GAAAqwL,EAAArwL,EAAA,GACtB3W,OAAAo4B,EAAA,gBAAAp4B,CAAA,WACG,IAAAinM,EAAA/rB,EAAAr6J,QACU,GAAAomL,EAAA,CAEjC,IAAA7qB,EAMX6qB,EAAAnmM,wBALComM,EAAA,CACA7pJ,MAAA54C,OAAA6vJ,WAAehoJ,EAAA8vK,EAAAz7K,MACfoZ,OAAAtV,OAAAqvI,YAAesoC,EAAAriK,OAAAqiK,EAAAhvK,OAHS,GAKxB45L,EAAA,CALUptJ,SAAA,QAsBNhd,KAAAsqK,EAAS7pJ,MAAG/wC,EAAA8vK,EAAAz7K,MAtBQ,EAsBR2L,EAtBQ,EAuBlButC,IAAYqtJ,EAAAntL,OAAAxN,EAAA6vK,EAAAhvK,OAvBM,EAwBtBb,EAxBsB,MA4BtB,CAAA2uK,EAAMr6J,UAGRsmL,KAAsBjsB,EAAA,WAElBtsF,GACIA,UAOJ3xE,EAAOmqL,GAAkB9lM,UACrBkR,EAAc3P,EAACmB,cAAK+xD,EAAA,OAE1BvjD,EACA3P,EAAAmB,cAAA,OAAAioB,IAAAivJ,EAAAt8I,MAAAmoK,EAAAljM,UAAAoZ,EAAAT,SAEI2iF,GAAgB3sF,EAAA3P,EAAAmB,cAAA,OAAAH,UACpBoZ,EAAAqqI,QAAAnoD,KACE3sF,EAAa3P,EAAOmB,cAAK4wK,GAAA,GAAAvhK,SAAA,GAAA6J,WAAA,SAAAxM,EAAAlS,GACb,OAAOgU,EAAK3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KAG1BT,EAAA3P,EAAAmB,cAAAqjM,GAAA,CAAA3zL,MAAAhD,EAAAsyF,YAAApU,eAKcp8E,EAAY3P,EAAA2pE,KAAA,SAAA5oE,OAE1B6E,EAAM7E,EAAI6E,IACV7K,EAAAgG,EAAAhG,KAAA0F,EAAAM,EAAAN,MAAAgT,EAAA1S,EAAA0S,OAAA6hB,EAAAv0B,EAAAu0B,QAAAt0B,EAAAD,EAAAC,UAEIvC,EAAAtB,OAAeo4B,EAAA,WAAfp4B,CAAegnC,GACnB,cACE/pB,EAAOmqL,GAAkB9lM,UACrBkR,EAAc3P,EAACmB,cAAK,OAAAH,UAAAoZ,EAAAvM,MAE1B8B,EACA3P,EAAAmB,cAAA,KAAA07B,KAAAj3B,EAAA6N,UAAA,QAAAzS,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA6D,EAAAoZ,EAAAs3C,MAAAp8B,QAAA,SAAAqC,GAEIrC,GAEKA,EAAAqC,KAGH58B,GAAE4U,EAAU3P,EAAAmB,cAAU,IAAW,CAAAH,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,GAAApC,EAAAqf,EAAArf,kBAOzCypM,GAAO,SAAAzjM,OACL8P,EAAM9P,EAAA8P,MAAAsvF,EAAGp/F,EAAAo/F,YAMT1hG,EAAOtB,OAAEo4B,EAAG,WAALp4B,CAAKgnC,GAAA,cAMZ/pB,EAAMmqL,GAAG9lM,UASF,IAAPoS,EAAKL,MAAEpM,OAGP,KAUAuL,EAAU3P,EAAAmB,cAAG,WAIb0P,EAAApQ,OAAAkP,EAAA3P,EAAAmB,cAAA,OAAAH,UAAAoZ,EAAAqqL,YAAA5zL,EAAApQ,OACDkP,EAAA3P,EAAAmB,cAAA4wK,GAAA,GAAAvhK,MAAAK,EAAAL,OAAA,GAAA6J,WAAA,SAAAxM,GAEU,OAAmB8B,EAAsE3P,EAAAmB,cAAAujM,GAAA,CAAA9+L,IAAAiI,EAAAjI,IAAAnF,MAAAoN,EAAApN,MAAAgT,OAAA5F,EAAA4F,OAAA1Y,KAAA8S,EAAA9S,KAAAu6B,QAAA,SAAAqC,GAA5B9pB,EAAAynB,SAC5DznB,EAAAynB,QAAOqC,GAENwoE,GACIA,eAMfzlF,YAAO,cA8BX,SAAE0oL,GAEFA,EAAoB,OAAW,SAOzBA,EAAA,MAAkE,UACnE,cACDA,EAAc,mBACdA,EAAe,oBAZnB,MAeMA,GAAA,YACEjmM,OAAC2jL,EACY,EADb3jL,CACa,SACXsB,SAEEtB,OACEgnC,GAAA,mBADFhnC,CAEI,gBAEEq+F,aACFvjD,OACAmwD,iBAGEjrG,OAAAgnC,GAAM,mBAANhnC,CAAM,oCAAyCy+F,SAItD5oF,MAKTgxL,EAAA7mM,OAAAgnC,GAAA,mBAAAhnC,CAAA,CAEFosD,MAAA9qD,EAAAw5C,OAAwB2jD,0OCtNxBryC,MAAA9qD,EAAAw5C,OAAAgxD,MAAAz/C,KAAA/qD,EAAAw5C,OAAAywD,OA2BCjqG,EAAAuU,MA1BC2xL,EAAAxnM,OAAAgnC,GAAA,mBAAAhnC,CAAA,CACEosD,MAAMsyC,IAAmB2nG,EAAc1+L,YACjC8/L,OAAO,IAET9/L,gBACF+2F,IAAkB2nG,EAAc1+L,YAChCs7K,QAAO,IACRt7K,cAEDkO,kBAEE7V,OAAO2mC,EAAA,IAAP3mC,CAAO0nM,QAAAn/K,EAAA,gNAAAi/K,WACPxnM,OAAS2mC,EAAA,IAAT3mC,CAAS2nM,QAAAp/K,EAAA,oOAAA89K,EAAAK,QACT1mM,OAAQ2mC,EAAA,IAAR3mC,CAAQ4nM,QAAAr/K,EAAA,4TAAAs+K,EAAAN,SACRvmM,OAAQ2mC,EAAA,IAAR3mC,CAAQ6nM,QAAAt/K,EAAA,gEAAAjnB,EAAAw5C,OAAAgzD,qBACA9tG,OAAC2mC,EAAA,IAAD3mC,CAAC8nM,QAAAv/K,EAAA,kLAAAw/K,eACT/nM,OAAA2mC,EAAA,IAAA3mC,CAAAgoM,QAAAz/K,EAAA,0HAAAjnB,EAAAgb,WAAAstF,WAAAE,UAAAxoG,EAAAgb,WAAApS,KAAAqS,IACH0rL,SAAAjoM,OAAA2mC,EAAA,IAAA3mC,CAAAkoM,QAAA3/K,EAAA,gHAAAjnB,EAAAi9F,QAAAc,GAAA8oG,SAGa,SAAAvkM,OACdu1G,EAACv1G,EAAAu1G,YAAAja,EAAA32E,EAAA,EAAA3kB,EAAA,uFAAAqoB,EAAA,WAEDizE,EAAAtQ,+GAEC,CAAAuqB,IACHl8F,EAAAmrL,GAAC9mM,GAAA,OAAAkR,EAAA3P,EAAAmB,cAAA,OAAAioB,MAAApoB,UAAAoZ,EAAAT,SAAAxc,OAAAgH,KAAAqhM,GAAAnlM,IAAA,SAAAkF,EAAAF,8QChBiCw/L,GAAAC,GAAAC,GAAAC,GAAAC,GAAAE,GAAAE,+YAX+DI,EAAA53L,IAC7ChT,MAAAgT,EAAAo1D,eAC4CtzD,EAAA3P,EAAAmB,cAAA,QAAAH,UAAAoZ,EAAA81D,WACrBvgE,EAAA3P,EAAAmB,cAAA,QAAAH,UAAAoZ,EAAA3Z,UACjB,IACxBoN,EAAApN,cAKmBilM,GAAAhrL,YAAA,0BAKR,IC2B3CirL,GAAEC,GD3ByCC,GAAA1sM,EAAA,QAGvCq/D,GAAmCr/D,EAAaqhC,EAAAqrK,OAU1C1sM,EAAe,WACNA,EAAOqhC,EAAAsrK,IAItBC,GAAY,WAChB,SAAQA,YAUVA,EAAArmM,UAAAzB,sBAAA,WACA,IAAAuiB,EAAA5e,OAAAi2B,eACas7B,EAAa3yC,GAAiCA,EAAK84J,WAAG,OAAAnmH,KAAKqmH,cACpDrmH,EAAAqmH,cAAAv7K,wBAGZ,CACA+4C,IAAA,EACAjd,KAAA,EACA7iB,OAAW,EAEjBsjC,MAAA,EACM18C,MAAW,EACTyM,OAAQ,IAKhBpN,OAAMuU,eAAYq0L,EAAMrmM,UAAY,cAAsC,CACxEQ,IAAK,WACH,OAAIjB,KAAMhB,wBAAwBH,mBAEjC,gBACM,WAGT4T,eAAiBq0L,EAAErmM,UAAA,oBACjB,WACA,OAAKT,KAAAhB,wBAAQsM,oBAEX,gBAEG,MA3CO,MAmDVpR,EAAO,WAGVA,EAAA,WAIDA,EAAA,WAGIA,EAA2B,QAGjC6sM,GAAI7sM,EAAuB,QAmB3ByV,GAAE,CAEFzR,OAAO8oM,GACL,EADF9oM,CACE,CASE26D,OAAA,SAAA3E,GAAA,MAAK,eAALA,EAAAngD,gBACG,WAAkB,MACjB,eAMW7V,OAAI2jL,EAAgB,EAApB3jL,CAAoB,SAAAsB,GAAA,uBACf,KAAAknM,KAAaA,GAAAjgL,EAAA,wOAAAjnB,EAAAw5C,OAAAuyD,WAAA/rG,EAAAw5C,OAAAyyD,2BAMnBn1E,EAAA,eAAAx0B,SAQNA,EAEKP,MACVe,EAAAR,EAAAQ,SAAA+0G,EAAAv1G,EAAAu1G,cACDn5G,OAAAo4B,EAAA,OAAAp4B,GAaLsB,EAAAtB,OAAAo4B,EAAA,WAAAp4B,CAAAgnC,GAAA,cAEH/pB,EAAc8rL,GAAcznM,2KExKiB0nM,EAAAhpM,OAAAo4B,EAAA,OAAAp4B,CAAA,CAAAipM,qBAAA9vF,cAAA+vF,mBAAAtpC,UAAAx7J,aAEf4kM,EAAAnoL,QAAA,CAAAooL,qBAAA9vF,cAAA+vF,mBAAAtpC,UAAAx7J,YAEkB,IAAA+kM,EAAAnpM,OAAAo4B,EAAA,QAAAp4B,CAAA,sBAAA4oM,IAAA,CAAAQ,EAAAxpC,IAY1Cz8I,EAAA3Q,EAAY3P,EAAAwmM,YAAA,SAAAjmL,EAAAtM,GAChB,IAAQkyL,EAAEnoL,QAAAooL,mBAGF,MAAE,MAAA7lL,EAAAhb,KAAG,MAAHgb,EAAGhb,KAAA,KAAAgb,EAAAssD,SAAAtsD,EAAA4Y,QAKXotK,GAAA,GAGCtyL,IAEK,OAAMsM,EAAGhb,KACT,gBAEA,aAEJ,OADQghM,GAAQ,GAChBE,EAAA,GACI,YAEJ,OADQlmL,EAAMI,iBACd+lL,EAAAP,EAAAnoL,QAAAs4F,YAAA6vF,EAAAnoL,QAAAqoL,mBAEI,gBACJ,IAAS,UACT9lL,EAAAI,iBAEI,IAAAgmL,EAAgB,cAAApmL,EAAAhb,IAAA,KACZ,OAAOkhM,EAAC,SAAA9qM,GAAA,OFoETqE,EEpESrE,EAAAgrM,EFoETnsK,EEpES2rK,EAAAnoL,QAAAs4F,YAAAlyG,OFoETpE,EAAAw6B,EAAAr8B,KAAA+N,MAAAlM,EAAKw6B,GAAd,IAASx6B,EAAAw6B,IEnEP,QAEI,OAAAvmB,MAEJ,IAEF9W,OAAOo4B,EACL,UADFp4B,CACE,WAaIypM,KAAApmL,UAAAqmL,YAAiB9pC,EAACv8I,UAAAqmL,aAChB7oL,QAAAzc,SAAA4rK,GACO,EACLkP,UAAAtf,MASLA,EAAM6pC,IASb,IAAAE,EAAAn3L,EAAA3P,EAAAwmM,YAAA,SAAAzlM,GAEF,IAAAP,EAAeO,EAAAP,0DD3Ff,IAAYumM,EAAA,MAAA55B,GAAA,EAAAkP,UAAA75K,EAAAhC,OAAA0oC,OAAA,GACkCr7B,EAAAq1D,SAAAkgI,GAAAp/H,UAAAn2D,EAAArN,QAAA2jC,GAAA,oBAAA8/B,YAC9CzhE,EAAa0e,YAAA6lL,EAAA,YAAAl5L,EAAArN,MAAA,KAGiBgC,EAAA0e,WAAA,OAAArT,EAAArN,MAAA,MAAAqN,EAAArN,MAAA,KAGIwmM,EAAAxkM,EAAAhC,OACgB+lM,GAAA,GAUlDE,EAAgB,GACdllM,EAAA4rK,GAAiB,EAAAkP,UAAA75K,EAAAhC,gBAEhBmP,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,gBAAAA,OAAA2mC,EAAA,IAAA3mC,CAAAyoM,QAAAlgL,EAAA,qJACD/V,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,qBAEWolM,GAA4Cz2L,EAAW3P,EAAAmB,cAA2C+xD,EAAA,OAAxCvjD,EAAO3P,EAAAmB,cAAA8lM,GAAU,GAAAn8J,iBAAaw7J,EAAQ31L,UAAA,UAAAu2L,UAAA,CAC7FC,gBAAA,CAAUxhE,SAAC,EAAAyhE,kBAAc,UAEzBC,MAAA,CAAA1hE,SAAA,GACI9kH,OAAC,CAAAA,OAAA,OACjB,SAAA9f,GAEI,IAAgBqoB,EAAAroB,EAAAqoB,IAAC2S,EAAmBh7B,EAAAg7B,MAAmBprB,EAAqB5P,EAAA4P,UAE9E,OAAUhB,EAAK3P,EAAEmB,cAAS,OAAAioB,MAAA2S,QAAAmP,iBAAAv6B,GACpBhB,EAAc3P,EAASmB,cAAEmmM,GAAA,CAAAhxF,YAAA6vF,EAAAnoL,QAAAs4F,YAAAmvF,mBAAAiB,EAAA36G,QAAA,kBAAAw6G,GAAA,IAAAgB,YAAAlB,UAE5BrmM,EAAAmB,cAAAqmM,GAAA,GAAAv1B,OAAA+zB,GAAA,EAAA58K,IAAAq+K,EAAAjmM,YAAA,kDAAAhB,MAAA2lM,EAAAnoL,QAAA++I,QAAAx7J,SAAAulM,EAAAxmL,UAAA,SAAAC,EAAAmnL,EAAAzzL,GAAA,OAAAqM,EAAAC,EAAAtM,IAAArF,WAAA5N,UAAAoZ,EAAA5X,gBAGHkY,YACA,oBE7BJitL,GAAYC,GAAAC,4XCZ0BC,GAAAn4L,EAAA3P,EAAA2pE,KAAA,SAAA5oE,GACmC,IAAApF,EAAAoF,EAAApF,MAAA6E,EAAAO,EAAAP,MAAAe,EAAAR,EAAAQ,SAAAg5F,EAAAx5F,EAAAw5F,SAAA+b,EAAAv1G,EAAAu1G,YAAAhQ,EAAAvlG,EAAAulG,OAO9D7nG,EAAAtB,OAAkDo4B,EAAkC,WAApFp4B,CAAoF2jL,EAAA,GAA/B1mK,EAAA2tL,GAAUtpM,GACpEqV,EAAA4R,EAAA,EAAAvoB,OAAAo4B,EAAA,SAAAp4B,CAAAqD,EAAA3F,OAAC,GAAAA,EAAAiZ,EAAA,GAAYk0L,EAAAl0L,EAAA,qMAMH,SAACyM,KACTA,EAAA9M,OAAcjT,eAEX,eACGklB,EAAM,KAAAllB,EAAA,CAAA3F,oJAepB,0DDlCwB8U,EAAA3P,EAAAmB,cAAA,UAAAH,UAAA,mCAAAs0B,QCqBjB,aACD90B,IDtBkB3F,MAAA,eACuC8U,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA,kBAEG2O,EAAA3P,EAAAmB,cAAA+/K,EAAA,CAAAzgL,MAAA,MAAAm4C,WAAA,EAAA25B,QAAA5iE,EAAA3P,EAAAmB,cAAA8mM,GAAA,CAAAznM,QAAAoF,IAAArE,SCO5D,SAAAqE,EAAAma,GAENxe,EACE5F,EAAA+pB,EAAA,KAAAllB,EAAA,CAAAoF,QAAAma,IDVgEu2F,gBAAAt1G,UAAA7D,OAAA2mC,EAAA,IAAA3mC,CAAA0qM,QAAAniL,EAAA,6FACtC4gF,GAAA32F,EAAA3P,EAAAmB,cAAA,OAAAH,UAAAoZ,EAAA8tL,UAAA,8JAO8CxtL,YAAA,+EEVnB,ICGvBytL,GDHuBC,GAAAz4L,EAAA3P,EAAA2pE,KAAA,SAAA5oE,GACoD,IAAAP,EAAAO,EAAAP,MAAAe,EAAAR,EAAAQ,SAAA+0G,EAAAv1G,EAAAu1G,YAAA8vD,EAAArlK,EAAAqlK,SAG7G3nK,EAAAtB,OAAAo4B,EAAA,WAAAp4B,CAAAgnC,GAA+C,gBAa9B,SAAAkkK,EAAAC,EAAAvoL,GAIXxe,EAEFf,EAAAH,IAAA,SAAAwN,EAAA06L,GACF,OAAAF,IAAAE,EAEWD,EAEAz6L,IACXkS,IAEAw6E,EAAa,SAAA7oC,GACbnwD,EAAAf,EAAAiQ,OAAA,SAAA5C,GAAA,OAAAA,IAAA6jD,qYCjCwClxD,QAAA4D,QAAAgiK,GAAA1pH,OAAA/sC,EAAA3P,EAAAmB,cAAA6/K,EAAA,CAAA/7H,QAAA,UAAAlqD,KAAA,aAAAu6B,QAAA,WDOxC/zB,EAAAf,EAAAklB,EACQ,EACRllB,EAAA,EAAAoF,IAAK,GAAA/K,MAAA,QAAA+K,IAAA,GAAA/K,MAAA,QCTmC,eAGeutM,GAAA1tL,YAAA,4BCoE1B8tL,GAAAC,MDI7B,SAAgB1nM,SACNA,EAAAipB,SAAA0+K,EAAwB3nM,EAAA2nM,sBAChChjL,EAAqB,EAAAvoB,OAAeo4B,EAAE,SAAjBp4B,EAAiB,MAAAwrM,EAAA70L,EAAA,GAAA80L,EAAA90L,EAAA,OACd,EAAC3W,OAAOo4B,EAAK,SAAZp4B,CAAY,CAAAsM,EAAC,EAAKC,EAAA,IAAS,GAACmwK,EAAE7lK,EAAA,GAAA60L,EAAA70L,EAAA,YACtDhU,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,OAAM,UACA,SAASunB,GACfixK,GAAA,GACDC,EAAA,CAEFp/L,EAAQkuB,EAAGmC,MACJpwB,EAAAiuB,EAAAsuB,cA3DMt2C,EAAc3P,EAAAmB,cAAa8iM,GAAA,CAAAl4G,QAAA,kBAAA68G,GAAA,IAAAn/L,EAAAowK,EAAApwK,EAAAC,EAAAmwK,EAAAnwK,EAAA8G,MAAAk4L,wBAYhC,SAAoB3nM,OAE1BipB,EAAMjpB,EAAQipB,SAAuB+mC,EAAAhwD,EAAAgwD,UACrCA,qBAGI5zD,OAAQ2mC,EAAa,IAArB3mC,CAA2B2rM,QAAApjL,EAAA,sFAC3B1lB,EAAImB,cAAI4nM,GAAA,CAAAL,oBAHI,gEAGJ,SAAA3nM,uCAEAojK,EAAQC,gBAAIA,gYAenB,SAAAvlK,cAEFC,8BA6BG,6JAzBM,SAAWklC,KAClBlkC,SAAA,CAAAkkC,aACJjlC,EAAAD,MAAAyC,SAAAmkB,EAAA,KAAA3mB,EAAAD,MAAAqH,QAAA,CAAAorB,QAAAyS,EAAAt+B,KAAA,WACCxG,MAAK,CACNqyB,QAAAzyB,EAAAqH,QAAAorB,SAAA,GACFprB,QAAA,GAmBD69B,SAAA,IACQjlC,EC3CR,SDac,EAAKiqM,EAAGnqM,KAiChBa,UAACkpB,kBAAA,iCAUOlpB,UAAAupM,YAAC,yBAEGj1L,eACDgmD,EACInlD,EAAEmlD,MACP7zD,EAAU0O,EAAA1O,UAOtBA,EAAAorB,QAAAprB,EAAAorB,QAAAytC,MAAA,QACHkqI,EAAA,GACHl8K,EAAA,GArGmD,oDA4GnC,IAA8BxgB,EAAC28L,EAA4B3oM,MAA1B,IACjC,QAAA0iC,GAAA7Y,OAAA,EAAW3E,EAAA,EAAAlZ,EAAcuG,SAAA4tF,EAAAz9D,EAAAjvB,QAAA0sF,EAAAzsF,KAAAysF,EAAAz9D,EAAAjvB,OAAA,CAErC,IAAArB,EAAA+tF,EAAAngG,OAYIyE,EAAA+nB,EAAApa,EAAA3O,SAYNgB,EAAA+nB,EAAApa,EAAA3O,MAAA,CAEWA,KAAA2O,EAAuC3O,KAC7B+a,MAAC,GAETkqL,EAAAr6L,KAAA5J,IAEAA,EAAA+Z,sCEjK0B,IAC+B2hF,MAAAzsF,OAAAJ,EAAAovB,EAAAw3C,SAAA5mE,EAAA9U,KAAAkkC,GAI3D,QAAyB,GAAI7Y,EAAA,MAAAA,EAAwCiK,8BDLlF,QACA,IAEA60K,MAAAj1L,OAAAnT,EAAAqoM,EAAA1uH,SAAA35E,EAAA/B,KAAAoqM,GAEG,WAAA9jL,EAAA,MAAAA,EAAAgP,OAED,GAAO+0K,EAAiBjlM,OAAK,CAC9B,IAAAkmB,EAAA,GAED0Z,EAAA,OAEG,QAAAslK,EAAA5jL,EAAA,EAAAwjL,GAAAK,EAAAD,EAAAr1L,QAAAs1L,EAAAr1L,KAAAq1L,EAAAD,EAAAr1L,OAAA,CACsB,IAAUhP,EAAAskM,EAAA/oM,MACb6oM,EAAMnmG,SAAAj+F,EAAAhB,OACR+/B,EAASn1B,KAAA5J,GAG7BqlB,EAAAzb,KAAA5J,yBAIG,QACa,IACCskM,IAAWA,EAAAr1L,OAAAF,EAAAs1L,EAAA5uH,SAAA1mE,EAAAhV,KAAAsqM,GAEzB,WAAAp7K,EAAA,MAAAA,EAAAoG,OAECr1B,KAAOa,SAAS,CACjBqG,QAAAmkB,EACU0Z,SAAWA,EAAQ3jC,IAAK,SAAOqE,GAAA,OAAaA,EAAAT,cAKjDhF,KAAOa,SAAG,CAAAqG,QAAmB+iM,EAAOllK,SAAY,QAGrDtkC,UAAAoB,OAAA,eAAM/B,EAAAE,KACL8B,EAAS9B,KAACC,MAAAiH,EAAApF,EAAAoF,QAAA69B,EAAAjjC,EAAAijC,SACX,OAAAr0B,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KACFT,EAAA3P,EAAAmB,cAAAqiH,GAAA,GAAAhzG,MAAArK,EAAAkU,WAAA,SAAAsf,EAAAt0B,GAED,IAAA5E,EAAAk5B,EAAA11B,MAAA01B,EAAA3a,MAAA,OAAA2a,EAAA3a,MAAA,qOAEGrP,EAAA3P,EAAAmB,cAAAqoM,GAAA,CAAAl0K,QAAA,WACmCv2B,EAAA0qM,cAAA9vK,EAAA11B,OACfxD,QAAAujC,WAAAj+B,QAAA4zB,EAAA11B,OAAA,UAGd+kM,EDYA,CCXRr5L,EAAA3P,EAAAq7F,8BAIE,IAAA56F,EAAAM,EAAAN,MAAAujC,EAAAjjC,EAAAijC,SAAA1O,EAAAv0B,EAAAu0B,QACI72B,EAAStB,OAAAo4B,EAA6C,WAA7Cp4B,CAA6C4jE,GAAA,GAC3D,OAAUpxD,EAAW3P,EAAAmB,cAAQ,OAAAH,UAAA7D,OAAA2mC,EAAA,IAAA3mC,CAAAqrM,QAAA9iL,EAAA,sWAAAjnB,EAAAi9F,QAAAmM,IAAAppG,EAAAi9F,QAAAhiF,GAAAsqB,EAAAvlC,EAAAw5C,OAAAqxD,UAAA7qG,EAAAw5C,OAAAoxD,WAAA/zE,WAEzB0O,GAASr0B,EAAc3P,EAAKmB,cAAa,KAAAH,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,cAAAA,OAAA2mC,EAAA,IAAA3mC,CAAAsrM,QAAA/iL,EAAA,kHAC3CjlB,IAGFipM,GAAuB,IACrBltM,GAAc,kBAAAu1B,6BACf43K,GACDl4K,YAAaj1B,GAAY,qBAAA0D,IAAA1D,GAAA,kBAAAu1B,yBACvB,6BAEE,sEAWH,OAAA63K,GAAAF,qBAiBI,QAASlpM,GAA0B,kBADvCA,EASI,SAASqpM,GAActuM,GAC5B,QAAW2J,IAAL3J,EACF,YAEH,OAAAA,EACG,MAAO,YAEO,iBAAXA,IAAqBA,EAAAuuM,kBACzB,eACI,mBACJjhK,KAAAttC,EAAAuuM,YAAAhlM,mBACFgsB,KAAA1sB,OAAA,EACS0sB,EAAA,ME7GZ,SAAMi5K,GAAAxuM,GACA,OAAe,OAAfA,EAEN,cAGMA,EAaN,SAAMyuM,GAAqCzuM,EAAAiF,GACzC,IAAAwS,EAAW+2L,GAAMxuM,GACjB,MAAY,SAAZyX,GAAkB,cAAAA,EAClBA,0BF2DElW,QAAK,IAAG,yBEnDZvB,EASEuJ,iHA8BU3D,GAAA6R,EAAQhS,EAAA4P,OACRuyI,EAAAplJ,SAAAoD,cAA2C6R,UAC3ChS,GAxCVmiJ,EAAA9vF,UAAAtuD,IAAAioE,GAAAhsE,SAGAkE,IAAA0L,IACQA,aAA+Bq5L,KAE/B9mD,EAAA/iI,YAAYxP,GAqCpBuyI,EAAA/iI,YAAAriB,SAAAmsM,eAAAzkM,OAAAmL,eCiBSu5L,GAAAC,GAAAC,GAAAC,GAAAC,MCnGXC,GAAAC,MF6FE,0IAEG,gDAGF7oM,OAAA8oM,mCAPA,iBASD,8BAEG,GAWHC,GAAY,oCAiBX,IAAA3kH,MAAA,QAKD,IAAAtyE,IAAYA,EAAAk3L,IAHZ3rM,KAAAsV,wBAEGb,cACHnO,MAEAtG,KAAC4rM,QAAA,uBAAA5rM,KAAA6rM,cAAA,gBAEDp5L,eAAAq5L,EAAArrM,UAAA,cAIE,WACD,cAAAT,KAAA4rM,qBAMD5rM,KAAY+mF,KAAA,OACV,SAAOxlF,GACRvB,KAAA4rM,QAAArqM,iBAAAs1C,cAAA,WAEDpkC,eAAAq5L,EAAArrM,UAAA,cAIE,WACD,iBAAAT,KAAA+T,oEAAA6iC,YAAA,EAMDC,cAAA,mDACE,WACD,iBAAA72C,KAAA+T,MAAA,IAAA/T,KAAAsV,KAAAxO,QAAA,uBAAA+vC,cAAA,WAEDpkC,eAAAq5L,EAAArrM,UAAA,eAIA,WACE,OAAIyzB,MAAKvuB,QAAU3F,KAAAsV,mBAElB,gBAAM,0BAENw2L,EAAArrM,UAAA,YAGHQ,IAAA,iCAGG21C,YAAA,EACHC,cAAA,WAGEpkC,eAAkBq5L,EAAArrM,UAAA,uCAIVT,KAACkF,KAAAC,SAAoBnF,KAAA2F,qBAEtB,gBACN,IAGHzH,OAAAuU,eAAAq5L,EAAArrM,UAAA,WAIGQ,IAAA,WACH,OAAAjB,KAAA+rM,eAAA/rM,KAAAkF,OAAqBlF,KAAAkF,KAAAC,QAAAnF,KAAA2F,SACnBixC,YAAY,gBACH,WAGTnkC,eAAkBq5L,EAAArrM,UAAA,qCAQf,IAAAT,KAAAsG,iBACK,gBACC,WAERmM,eAAAq5L,EAAArrM,UAAA,mBAKFQ,IAAA,WAED,OAAA2pM,GAAA5qM,KAAWsV,OAETshC,YAAA,EAEAC,cAAA,0BAEYi1J,EAAQrrM,UAAwB,YAKzC,WACD,OAAKqqM,GAAA9qM,KAAesV,mBACf,gBACL,WAGF7C,eAAiBq5L,EAAYrrM,UAAa,OAAO,qCAQhDvC,OAAAgH,KAAAlF,KAAAsV,MAAAlU,IAAA,SAAAkF,GAAA,OAAAA,GAAA,OAED,IAIAswC,YAAM,EACNC,cAAM,MAQGp2C,UAAQurM,WAAA,gBACf9uI,QAAWl9D,KAACk9D,OACbl9D,KAAAgqB,UAEDhqB,KAAAk9D,OACQl9D,KAACisM,eAAUjsM,KAAAyU,OAAAy3L,aAIjBlsM,KAAAmsM,eAAAnsM,KAAAyU,OAAA23L,cAGApsM,KAAAgqB,QAAAoqC,UAAAwlB,OAAA7L,GAAA,aAUAttE,UAAA4rM,YAAA,SAAAC,QACM,IAANA,IAAkBA,EAAA,GAClBA,EAAA,SAEKvlH,KAAAulH,OACLpvI,OAAA,IAAAovI,EACAtsM,KAAMgqB,UAENhqB,KAAAmsM,gBAAA,GACM,IAANG,EACItsM,KAAKgqB,QAAQoqC,UAAAlU,OAAA6tB,GAAA,UAGb/tE,KAAKisM,eAAOjsM,KAAAyU,OAAAy3L,aACdlsM,KAAKgqB,QAACoqC,UAActuD,IAAAioE,GAAgB,eAKhCttE,UAAA8rM,cAAe,kBACrBvsM,KAAMsV,KAAAnQ,OAAY,GAASnF,KAAAsV,KAAAnQ,OAAe,IAAAwhB,GAAe5lB,EAAAqb,SAAApc,KAAAsV,KAAA,KAAAqR,GAAA5lB,EAAAqb,SAAApc,KAAAsV,KAAA,QAGzD7U,UAAY+rM,YAAiB,eAC9BC,EAAAvqM,GAAA,eAEDuqM,EAAAtrL,YAAAjf,GAA+B,uBAG/BlC,KAAAusM,iBACIvsM,KAAKsV,KAAAi+C,QAAU,SAAAjuD,EAAA5I,GACTA,EAAC,GACV+vM,EAAAtrL,YAAAjf,GAAA,2BAECuqM,EAAmBtrL,YAAajf,GAAU,gBAAAoD,MAExCtF,KAAK6rM,cAAS,GAIlBY,EAAAtrL,YAAAjf,GAAmC,gBAAAlC,KAAAsV,KAAAnQ,WAEpBgc,YAAUjf,GAAa,OAAW,UAAS,MACzDuqM,KAQAhsM,UAAAoB,OAAA,SAAA6qM,QAES,IAANA,IAAoBA,GAAA,QAEvB1iL,QAAA9nB,GAAA,iBACCyqM,EAAAzqM,GAAqB,oBACrB0qM,EAAY1qM,GAAY,OAAY,WAatC,GAVAlC,KAAAg+E,UACI2uH,EAAKxrL,YAAiByrL,GAI1B5sM,KAAA6sM,QACIF,EAAKxrL,YAAUjf,GAAA,aAAAlC,KAAAsG,IAAA,MAInBtG,KAAOg+E,SAA8B,CAGvC,IAAAz8E,EAAAW,GAAA,6BAIA4qM,EAAA5qM,GAAA,OAAe,mBAAgBlC,KAAA8sM,iBACvB,GADRC,EAgCC5rL,YAAA2rL,GA/BO9sM,KAAQ2F,QAAQ,CAEjB,IAAA8mM,EAA0BzsM,KAAAwsM,cAC7BO,EAAO5rL,YAAAsrL,GAIPlrM,EAAI4f,YAAU4rL,GACdJ,EAAMxrL,YAAY5f,SAOhBA,EAAIvB,KAAKgtM,MAAQ9qM,GAAa,KAAAA,GAAA,mBAE1B4D,IAAAioE,GAAY/tE,KAAA+T,YACbgyF,oBAAMjgG,IAAAioE,GAAA,cAENi/H,UACF54I,UAAAtuD,IAAAioE,GAAA,QACDxsE,EAAAy5K,aAAA,OAAAh7K,KAAAsV,WAGG23L,EAAAlC,GAAA/qM,KAAAsV,KAAAtV,KAAAsV,MACL/T,EAAK4f,YAAariB,SAAAmsM,eAAGgC,MAEX9rL,YAAY5f,GAGzB,IAAAwpB,EAAA7oB,GAAA,kBG7Y2D,oDHmZ5DlC,KAAA2F,SAAeolB,EAAAqpC,UAAAtuD,IAAAioE,GAAA,UAIT/tE,KAAA+sJ,SACFhiI,EAAIqpC,UAAAtuD,IAAeioE,GAAK,uBAGpB/tE,KAAAyU,OAAgBjV,oBAChB40D,UAAAtuD,IAAeioE,GAAM/tE,KAAAyU,OAAAjV,kCAGpB40D,UAAAtuD,IAAAioE,GAAA,iBAGF/jD,QAAA7I,YAAAwrL,GAEH3sM,KAAA6rM,eAIChjJ,YAAA+jJ,GAHF5sM,KAAAgqB,QAAA7I,YAAA4J,GAML/qB,KAAAg+E,UAACh+E,KAAAk9D,QAAAl9D,KAAAisM,uFG3a6DjsM,KAAAgqB,WA4B5DvpB,UAAawrM,eAAA,SAAAiB,OACLptM,EAAAE,UACS,IAAfktM,IAAuBA,GAAW,OAClCniL,EAAM/qB,KAAYgqB,SAAIhqB,KAAAgqB,QAAAmjL,cAAmB,OAAMp/H,GAAQ,gBACvDhjD,IAAa/qB,KAAA+sJ,aAGX,KACAqgD,EAAU,EACXC,EAAA,eAAM/mM,EAAAxG,EAAAoF,KAAAkoM,GACL7iM,EAAa,IAAAuhM,EAAAhsM,EAAAwV,KAAAhP,GAAAxG,EAAAinF,KAAA,EAAAjnF,EAAA2U,OAAAnO,GACbykB,EAAS5J,YAAY5W,EAAU1I,WAChCurM,GAAA,GAEgBttM,EAAAoF,KAAAC,SACfioM,EHqDkB,GGpDnBC,IAOJ5B,GAAA4B,KA3BC5B,GAAA4B,QAuBArtM,KAAAkF,KAAAquD,QAAA,SAAAjtD,GACU,IAAAiE,EAAA,IAAAuhM,EAAyBhsM,EAAAwV,KAAAhP,GAAAxG,EAAAinF,KAAA,EAAAjnF,EAAA2U,OAAAnO,GAC1BykB,EAAA5J,YAAA5W,EAAA1I,aAEXiqM,EAAArrM,UAAC0rM,eAAA,SAAAe,QAzC+C,IAAbA,IAyClCA,GAAA,GAzCyB,IAAAI,EAAAttM,KAAAgqB,SAAAhqB,KAAAgqB,QAAAmjL,cAAA,OAAAp/H,GAAA,wCCX0Bu/H,KAAAviL,SAAA5lB,SACKmoM,EAAAzkJ,YAAAykJ,EAAAviL,SAAA,KAC3BwiL,GAAA,GJ+FN,GIlFlBC,IAgBK/B,GAAG+B,KAsBD/B,GAAqB+B,QAE1BF,IACMA,EAAGpsL,UAAS,OJyDZ,MInCD,SAAAthB,gIH9E2F,IAAAkC,EAAAhC,EAAAD,MAAAyV,EAAAxT,EAAAwT,KAAAb,EAAA3S,EAAA2S,OAAAsyE,EAAAjlF,EAAAilF,KAAA0mH,EAAA3rM,EAAA2rM,YAC9DC,EAAA5tM,EAAA6tM,WAAA5uL,QACcxU,EAAA,IAAAmhM,GAAAp2L,EAAAyxE,EAAAtyE,GAEAi5L,EAAAzxD,gBAcxDyxD,EAAAE,aAAArjM,EAAA1I,SAAA6rM,EAAAG,WACEH,EAAUvsL,YAAa5W,EAAM1I,UAGrB4rM,GACNA,EAASljM,EAAA+K,gBG6DXmR,EAAA,EAAAqnL,EAAAluM,KHvDKa,UAAAkpB,kBAAA,gBACHokL,gBAGFttM,UAAAy7D,mBAA0B,gBAClB6xI,gBAENttM,UAASoB,OAAgB,eACzBE,EAAK/B,KAAWH,MAAAkC,UAClB,OAAE2O,EAAA3P,EAAAmB,cAAA,OAAAH,YAAAooB,IAAAnqB,KAAA2tM,gBAGMjwI,aAA0C,MAChD,SACA,CACAwuI,aAAK,MGkCI,GH7BH,2BA6BYpqM,oBACFyB,EAASzB,EAAEyB,OAAAyB,EAAAlD,EAAAkD,KAAA+1D,EAAAj5D,EAAAi5D,iBACV,YAAA+G,GAAA,OAGP,EAAA5jE,OAAAo4B,EAAA,SAAAp4B,EAAA,MAAA8vM,EAAAn5L,EAAA,GAAAo5L,EAAAp5L,EAAA,KAvBN,SAAArV,GAAA,oBACDqlC,EAAA,KAAAqpK,QAAAznL,EAAA,gfAAAjnB,EAAAw5C,OAAAkzD,uBAEHrnE,EACE,KAAAqmK,QACuBzkL,EAAK,sGAAAjnB,EAAAgb,WAAAyrC,OAAAuiD,SAAAhpG,EAAAw5C,OAAA2xD,qBACpB9lE,EAAc,KAAAsmK,QAAA1kL,EAAA,2EAClBoe,EAAa,KAAAumK,KAAwBA,GAAA3kL,EAAA,oXAAAjnB,EAAAw5C,OAAAgzD,SAAAxsG,EAAAi9F,QAAAhiF,GAAAjb,EAAAw5C,OAAAn9C,sBAEjC,KAAAwvM,KAACA,GACY5kL,EAAG,sOAGJjnB,EAAEw5C,OACZkzD,YAULiiG,CAAA3uM,YACKuB,EAAAmB,cAAmB,OAAAH,UAAuB7D,OAAA2mC,EAAkB,IAAlB3mC,CAAkBotM,QAAA7kL,EAAA,8FAC7D1lB,EAAGmB,cAAA,OAAAH,UAAmBoZ,EAAAvf,SAEvBmF,EAAAmB,cAAkB,OAAAH,UAAAoZ,EAAAnW,WACdjE,EAAAmB,cAAG,MAAM,CAAAH,UAAcoZ,EAAAizL,WAC3BrtM,EAAOmB,cAAE,OAAAm0B,QAAA,WAAK,OAAiB43K,GAAYD,IAAqBjsM,UAASoZ,EAAArf,QACpEiF,EAAAmB,cAAA,KAAAH,UAAA,uBACLhB,EAAQmB,cAAG,MAAY,CAAAm0B,QAAAilE,EAAAv5F,UAAAoZ,EAAArf,QAChBiF,EAAAmB,cAAA,KAAuBH,UAAG,2CACvB,MAAE,CAAAA,UAAAoZ,EAAA5X,eAEPxC,EAAAmB,cAAA,aACJnB,EAAAmB,cAAAmsM,GAAA,CAAA/4L,KAAAylD,QA6BfuzI,GAAC,SAAA1uM,mKI9HuD0C,cAAAmkB,EAAA,EAAAxC,EAAA,CACjB,CACTpnB,GAAAU,GAAA,kBAAA40B,KACejrB,QAAA,OAoB7CpH,EAAAe,SAAA,CAAA0tM,cAAAzuM,EAAAG,MAAAsuM,cAAA,KACWzuM,EAAA0uM,uBAAe,SAAAl9K,EAAA7c,GACtB,IAAA3S,EAAOhC,EAAID,MAAAokB,EAAAniB,EAAAmiB,gBAAA3hB,EAAAR,EAAAQ,SACX2hB,EAAeqN,GAAA7c,EACfnS,EAAA2hB,wDAEFnkB,EAAA2uM,uBAAA,SAAAn9K,GACM,IAACxvB,EAAQhC,EAACD,MAAAokB,EAAAniB,EAAAmiB,gBAAA3hB,EAAAR,EAAAQ,SACZ2hB,EAAYlnB,OAAAu0B,EAAA,GACZhvB,EAAS2hB,GACRnkB,EAAAe,SAAA,CAAA0tM,cAAAzuM,EAAAG,MAAAsuM,cAAA,KAGLzuM,EAAA4uM,4BAAA,WACU,IAAA5sM,EAAAhC,EAAAD,MAAAokB,EAAwBniB,EAAAmiB,gBAAA6vB,EAAAhyC,EAAAgyC,WAC1B85D,EAAE3pF,EAAO9e,OAAA,EAERwpM,EAAS76J,EACd,GAAK85D,EAAL,CAGH,IAAAghG,EAAAC,GAAA1rL,OAAA/hB,IAAA,SAAA4U,GACH,OAtBmCzU,MAsBlCyU,EAAAwc,YAAA31B,+BAOE,OAAA6T,EAAA3P,EAAAmB,cAAAwO,EAAA3P,EAAAoQ,SAAA,KAAA8S,EAAA7iB,IAAA,SAAA4U,EAAA5P,GAQH,IAAA7C,EAAAw3D,EAAwC,GAAA/kD,EAAAnZ,KAAAU,GAAA,kBAAA40B,KAAxC,OAAAzhB,EAAA3P,EAAAmB,cAAAw6D,EAAA,GAAA36D,UAAA7D,OAAA2mC,EAAA,IAAA3mC,CAAA4wM,QAAAroL,EAAA,mIAAAngB,IAAA0P,EAAAnZ,GAAA,IAAAuJ,EAAAc,QAAA0nM,EAAArsM,YAAA,wBAAAD,SAAA,SAAA0D,+BA0CCnJ,GAAAmJ,EAAAzE,MApCC2F,QAAM,QAMM,IAAC6nM,EAAWF,GAAArsL,YAAAxM,EAAAnZ,WACdk+D,EAAO78D,OAAQX,GAAC,mBAATW,CAAS+lB,EAAAgmB,MAAA,EAAA7jC,GAAAuoM,GACjBI,IAEGxrM,EAAUmN,EAAY3P,EAAAmB,cAAA6sM,EAAArxH,UAAA,CAEtBx2E,QAAAuf,EAAM,EAAC,GAAAsoL,EAAkBv8K,YAAApwB,eAAA4T,EAAA9O,SACvB6zD,QACGz4D,SAAS,SAAM4E,GAChBpH,EAAA0uM,uBAAApoM,EAAA,CACCvJ,GAAUmZ,EAAAnZ,GAIlBqK,gBAKQwJ,EAAc3P,EAACmB,cAAU8sM,GAAA,CAAA1oM,IAAA0P,EAAAnZ,GAAA,IAAAuJ,EAAA20D,SAAA,GAAAugC,SAAA,kBAAAx7F,EAAA2uM,uBAAAroM,IAAA7C,SAAAyB,KAAA+pM,IAAA/pM,KAAA,GAAAke,YAAA6rL,IAAA7rL,YAAA,UAMjCpjB,EAKX,OJpF2C2mB,EAAmB,EA4G7DwoL,EAAArvM,GIzBCqvM,EAACxuM,UAAAoB,OAAA,WAxCM,OAAA6O,EAAA3P,EAAAmB,cAA2CwO,EAAA3P,EAAAoQ,SAAA,KAChDnR,KAAO0uM,8BACPh+L,EAAiB3P,EAAAmB,cAAA6/K,EAAA,CAAA/7H,QAAA,UAAAlqD,KAAA,aAAAu6B,QAAAr2B,KAAAkvM,qBAAA,wBAuCrBD,EJwBC,CIlEuCv+L,EAAA3P,EAAAq7F,kBClDc,SAAAx8F,GAEpD,SAAWuvM,IAEL,IAAArvM,EAAS,OAAAF,KACb4pB,MACAxpB,KAAAypB,YAAAzpB,KAkBF,OALAF,EACEG,MAAA,CACEo1B,MAAA,qBAGJv1B,EJlCF,OIWE2mB,EAA+B,EAAA0oL,EAAAvvM,8DJXjCy1B,QAAA+5K,eAAAD,EAAA1uM,UAAAoB,OAAA,eAAAkpB,EAAA/qB,KAAAH,MAAAkrB,SAAAjpB,EAAA9B,KAAAC,MAAA,OAAA8qB,EAAA,CAAAsK,MAAAvzB,EAAAuzB,MAAA+5K,UAAAttM,EAAAstM,aAAAD,EIUsD,CJVtD74K,EAAA,eAAA+4K,GAAAnxM,OAAA2jL,EAAA,EAAA3jL,CAAA,kBAAAA,OAAA2mC,EAAA,IAAA3mC,CAAAqtM,QAAA9kL,EAAA,+GAAA6oL,GAAA,SAAA1vM,GAAA,SAAA2vM,IAAA,cAAA3vM,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KAAA,OAAAymB,EAAA,EAAA8oL,EAAA3vM,GAAA2vM,EAAA9uM,UAAAoB,OAAA,eAAAC,EAAA9B,KAAAH,MAAAjE,EAAAkG,EAAAlG,MAAAmvB,EAAAjpB,EAAAipB,SAAA+R,EAAAh7B,EAAAg7B,MAAA,OAAApsB,EAAA3P,EAAAmB,cAAAstM,GAAA,cAAA1tM,GAAA,IAAAuzB,EAAAvzB,EAAAuzB,MAAA+5K,EAAAttM,EAAAstM,UAAA,OAAAA,EAAA,aAAAtyK,EAAApsB,EAAA3P,EAAAmB,cAAA64L,GAAA,CAAAn/L,SAAA,IAAA8U,EAAA3P,EAAAmB,cAAA,WAAA46B,MAAA,CAAAmvJ,WAAA,aAAA52J,KAAAxvB,WAAA6K,EAAA3P,EAAAmB,cAAA,WAAAktM,EAAAK,iBAAA/+L,EAAA3P,EAAAmB,cAAA,OAAAH,UAAAstM,MAAA3+L,EAAA3P,EAAAmB,cAAA,UAAAtG,GAAA8U,EAAA3P,EAAAmB,cAAA,WAAA46B,MAAA,CAAAmvJ,WAAA,aAAA52J,KAAAxvB,WAAA6K,EAAA3P,EAAAmB,cAAA,WAAAktM,EAAAK,iBAAA1kL,KAAAwkL,EAAA7xI,aAAA,CAAA9hE,MAAA,+BAAAkhC,MAAA,YAAAyyK,EAAA,CAAAj5K,EAAA,eAAAo5K,GAAA,SAAA5tM,GAAA,IAAA7B,EAAA6B,EAAA7B,MAAApE,EAAAiG,EAAAjG,KAAAkG,EAAAD,EAAAC,UAAAo2B,EAAAt8B,GAAA,8EAAA2D,EAAAtB,OAAAo4B,EAAA,WAAAp4B,CAAAgnC,GAAA,cAAA/pB,EAAAjd,OAAA2mC,EAAA,GAAA3mC,CAAA6D,EAAA7D,OAAA2mC,EAAA,IAAA3mC,CAAAstM,QAAA/kL,EAAA,4hBAAAjnB,EAAAw5C,OAAAmxD,SAAA3qG,EAAAw5C,OAAAoxD,UAAA5qG,EAAAw5C,OAAAixD,QAAA,OAAAv5F,EAAA3P,EAAAmB,cAAA,OAAAH,UAAAoZ,EAAAvf,MAAAu8B,GAAAznB,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA,sBAAA9B,IAAA/F,EAAAC,EAAAC,EAAA,sBAAAgmL,IAAAlmL,EAAAC,EAAAC,EAAA,uBAAAi+B,EAAA,IAAAn+B,EAAAC,EAAAC,EAAA,uBAAAi+B,EAAA,iBAAAn+B,EAAAC,EAAAC,EAAA,uBAAAgtL,EAAA,IAAAltL,EAAAC,EAAAC,EAAA,uBAAAitL,EAAA,IAAAntL,EAAAC,EAAAC,EAAA,uBAAA65D,EAAA,IAAA/5D,EAAAC,EAAAC,EAAA,sBAAAkiE,EAAA,IAAApiE,EAAAC,EAAAC,EAAA,sBAAA2nL,IAAA7nL,EAAAC,EAAAC,EAAA,sBAAA4nL,IAAA9nL,EAAAC,EAAAC,EAAA,kBAAAF,EAAAC,EAAAC,EAAA,uBAAAsiE,EAAA,IAAAxiE,EAAAC,EAAAC,EAAA,sBAAAsiE,EAAA,IAAAxiE,EAAAC,EAAAC,EAAA,sBAAA+jE,EAAA,IAAAjkE,EAAAC,EAAAC,EAAA,sBAAAqkE,EAAA,IAAAvkE,EAAAC,EAAAC,EAAA,uBAAAogE,EAAA,IAAAtgE,EAAAC,EAAAC,EAAA,sBAAA49B,EAAA,IAAA99B,EAAAC,EAAAC,EAAA,sBAAA8nL,IAAAhoL,EAAAC,EAAAC,EAAA,sBAAA6nL,IAA2D/nL,EAAAC,EAAAC,EAAA,uBAAAu1M,IACCz1M,EAAAC,EAAAC,EAAA,sBAAAmoL,IACIroL,EAAAC,EAAAC,EAAA,sBAAAwnM,KACpB1nM,EAAAC,EAAAC,EAAA,uBAAAmtL,KACHrtL,EAAAC,EAAAC,EAAA,uBAAAysL,KAC2B3sL,EAAAC,EAAAC,EAAA,uBAAAw1M,KAEpC11M,EAAAC,EAAAC,EAAA,uBAAAyuL,KACwB3uL,EAAAC,EAAAC,EAAA,uBAAAy1M,KAE/C31M,EAAAC,EAAAC,EAAA,uBAAA01M,KAC6C51M,EAAAC,EAAAC,EAAA,uBAAA21M,KACa71M,EAAAC,EAAAC,EAAA,sBAAA41M,KACN91M,EAAAC,EAAAC,EAAA,uBAAA61M,KACa/1M,EAAAC,EAAAC,EAAA,uBAAA81M,IACrBh2M,EAAAC,EAAAC,EAAA,uBAAAuoM,KAE7CzoM,EAAAC,EAAAC,EAAA,uBAAAioM,KAC0CnoM,EAAAC,EAAAC,EAAA,sBAAAk7B,GAAA,IACAp7B,EAAAC,EAAAC,EAAA,sBAAAk7B,GAAA,IACiBp7B,EAAAC,EAAAC,EAAA,uBAAA4wL,GAAA,IAEU9wL,EAAAC,EAAAC,EAAA,uBAAAs8B,GAAA,IACFx8B,EAAAC,EAAAC,EAAA,uBAAA+1M,KAC0Cj2M,EAAAC,EAAAC,EAAA,sBAAA04K,GAAA,IAE3C54K,EAAAC,EAAAC,EAAA,uBAAAg2M,KACHl2M,EAAAC,EAAAC,EAAA,uBAAA+mK,GAAA,IACSjnK,EAAAC,EAAAC,EAAA,uBAAA8wL,KACvChxL,EAAAC,EAAAC,EAAA,sBAAAi2M,KACiCn2M,EAAAC,EAAAC,EAAA,sBAAAk2M,KACbp2M,EAAAC,EAAAC,EAAA,sBAAA60L,KACR/0L,EAAAC,EAAAC,EAAA,sBAAA2+I,KACG7+I,EAAAC,EAAAC,EAAA,sBAAAm2M,KACLr2M,EAAAC,EAAAC,EAAA,sBAAA+0L,KACWj1L,EAAAC,EAAAC,EAAA,uBAAAo2M,KACTt2M,EAAAC,EAAAC,EAAA,sBAAAggJ,GAAA,gBACUlgJ,EAAAC,EAAAC,EAAA,sBAAAggJ,GAAA,qBAC5BlgJ,EAAAC,EAAAC,EAAA,sBAAAggJ,GAAA,sBAEtBlgJ,EAAAC,EAAAC,EAAA,sBAAAggJ,GAAA,IAC2ClgJ,EAAAC,EAAAC,EAAA,sBAAAggJ,GAAA,IAElBlgJ,EAAAC,EAAAC,EAAA,sBAAAggJ,GAAA,aACgBlgJ,EAAAC,EAAAC,EAAA,sBAAAggJ,GAAA,kBAErClgJ,EAAAC,EAAAC,EAAA,sBAAAggJ,GAAA,IAC8BlgJ,EAAAC,EAAAC,EAAA,sBAAA2gM,KACT7gM,EAAAC,EAAAC,EAAA,sBAAAq2M,KACAv2M,EAAAC,EAAAC,EAAA,kBACYF,EAAAC,EAAAC,EAAA,sBAAAy6L,KACQ36L,EAAAC,EAAAC,EAAA,sBAAA+kM,KACXjlM,EAAAC,EAAAC,EAAA,sBAAAs2M,KACSx2M,EAAAC,EAAAC,EAAA,uBAAAokM,KAU/BtkM,EAAAC,EAAAC,EAAA,uBAAAu2M,KACaz2M,EAAAC,EAAAC,EAAA,uBAAAw2M,KACiD12M,EAAAC,EAAAC,EAAA,uBAAAy2M,KACxC32M,EAAAC,EAAAC,EAAA,sBAAAk+B,GAAA,IACFp+B,EAAAC,EAAAC,EAAA,sBAAA02M,KACJ52M,EAAAC,EAAAC,EAAA,sBAAA22M,KACgB72M,EAAAC,EAAAC,EAAA,mBAC+BF,EAAAC,EAAAC,EAAA,uBAAA42M,KACxE92M,EAAAC,EAAAC,EAAA,uBAAAipM,KACuDnpM,EAAAC,EAAAC,EAAA,uBAAA4oM,KACS9oM,EAAAC,EAAAC,EAAA,sBAAA62M,KACvC/2M,EAAAC,EAAAC,EAAA,sBAAA4qM,KAC8B9qM,EAAAC,EAAAC,EAAA,kBACsCF,EAAAC,EAAAC,EAAA,kBACxBF,EAAAC,EAAAC,EAAA,kBACvBF,EAAAC,EAAAC,EAAA,mBACUF,EAAAC,EAAAC,EAAA,uBAAA+pM,KACvBjqM,EAAAC,EAAAC,EAAA,sBAAA+uM,KACsBjvM,EAAAC,EAAAC,EAAA,sBAAA82M,KACAh3M,EAAAC,EAAAC,EAAA,uBAAAs+I,KACQx+I,EAAAC,EAAAC,EAAA,uBAAAy0M,KACjB30M,EAAAC,EAAAC,EAAA,uBAAA40M,KACa90M,EAAAC,EAAAC,EAAA,uBAAAk0M,KACOp0M,EAAAC,EAAAC,EAAA,sBAAAi0M,KAC1Bn0M,EAAAC,EAAAC,EAAA,sBAAAsxM,yGKrDtDyF,KACA,SAAStuM,EAAAzI,EAAAF,oBAGTk3M,EAAS,KACAroM,EAAAqoM,KACAj3M,EAAAi3M,EAAA,sCAAAC,MACAl3M,EAAAi3M,EAAA,qCAAAt6F,QAGTgU,EAAS5wH,EAAA,QAGTusB,EAASvsB,EAAA,QAGTkH,EAAAlH,EAAS,QACTo3M,EAASp3M,EAAAqhC,EAAAn6B,GAGTg6E,EAASlhF,EAAA,QACTk9K,EAASl9K,EAAAqhC,EAAA6/C,GAGTm2H,EAASr3M,EAAA,QACTs3M,EAASt3M,EAAAqhC,EAAAg2K,GAGTE,EAASv3M,EAAA,QACTw3M,EAASx3M,EAAAqhC,EAAAk2K,GAGTE,EAAAz3M,EAAS,QACT03M,EAAS13M,EAAAqhC,EAAAo2K,GAGTt1G,EAASniG,EAAA,QACT0iG,EAAS1iG,EAAAqhC,EAAA8gE,GAaTw1G,EAAO,EAWE74J,EAAA,+GC7FC,UAAZ,UACE,UACA,UACA,UAHU,UAMC,UACX,kDAME,UAGF,UACA,UAEW,UACX,UACA,sJCvBF,UACI,UACF,wHAuBE84J,EAAU5mM,UACX0xF,IAAA1xF,GAAA6mM,QAEH,SAACC,EAAA9mM,GAEM,OAAS0xF,IAAiB1xF,GAAesgD,kBAhB5CymJ,EACHC,EAEMC,EACDC,EACAC,EAGFC,ECtBJC,ED+BEC,GAjBEP,EAiBuBj5J,EAhB1Bk5J,EAAAZ,IAAAW,EAAAH,GAEMK,EAA0B/6B,IAA4B86B,EAAA,OACvDE,EAAeV,IAAcS,EAAgBN,GAC7CQ,EAAGf,IAAAc,EAAA,SAAA9V,GACP,OAAOllB,IAASklB,EAAA,OAEdgW,EAAQd,IAAAI,EAAA7wM,EAAAyoB,WAAA,EAAA/C,EAAA,EAAA4rL,SACIC,EAAAN,MAWb93M,EAAA,QAIDw5C,EAAqBx5C,EAAY,qBCtCnC,SAAAq4M,KAAA,gBAAAA,EAAA,kBAAAA,EAAA,qBAAAA,MAAA,SAAAvjL,EAAA,SAAAztB,EAAAkxM,GAAA,IAAAtY,EAAAsY,EAAAziL,OAAA,SAAA+gB,EAAA2hK,GAAA,OAAAA,EAAAC,KAAApxM,GAAAwvC,IAAAtJ,OAAAirK,EAAAE,eAAA,WAAAzY,EAAAh1L,OAAA,EAAAg1L,EAAA,MAAA0Y,EAAA,SAAAvxL,EAAAwxL,GAAA,OAAAA,KAAAxxL,IAAAyxL,EAAA74M,EAAA,QAAA6sM,EAAA7sM,EAAA,QAAA4gJ,EAAA5gJ,EAAA,QAAAiiM,EAAAjiM,EAAA,QAA4C,SAAAm3M,EAAAn9I,EAAA8+I,GAGT,IAFV,IACY9uD,EADZ+uD,EAAA/+I,EAAAqmH,cAAA24B,gBAEUD,GAAA,CAER,GADI/uD,EAAA+uD,EAAA9F,cAAA6F,GAEkC,OAAA9uD,EAErC+uD,IAAAC,iBAKT,SAAAp8F,EAAAq8F,wKAbnB,YAAAxwM,SAAAywM,QAAA3yM,UAAA+7I,UAAA42D,QAAA3yM,UAAA+7I,QAAA,SAAA/2I,GAAA,IAAAW,EAAAu4B,GAAA3+B,KAAAlB,UAAAkB,KAAAqzM,eAAA7iC,iBAAA/qK,GAAAy+I,EAAAlkJ,KAAA,OAAAoG,EAAAu4B,EAAAx5B,SAAAiB,GAAA,GAAAu4B,EAAA/vB,KAAAxI,KAAA89I,QAAAq2B,oBAAAn0K,EAAA,GAAA89I,GAAA,OAAAA,kXHqFC,gCAE8B,oDACtB,yBI7EchqJ,EAAAC,EAAAC,EAAA,qBJ8EtB,yBI5EsCF,EAAAC,EAAAC,EAAA,qBJ8ErB,2BI7EqBF,EAAAC,EAAAC,EAAA,qBJ8E9B,0BI3EgDF,EAAAC,EAAAC,EAAA,qBJ4ExD,MI3E0CF,EAAAC,EAAAC,EAAA,sBAAA4+C,IAU3C9+C,EAAwDC,EAAAC,EAAA,sBAAAo4M,IACTt4M,EAAAC,EAAAC,EAAA,sBAAAopL,EAAA,IACFtpL,EAAAC,EAAAC,EAAA,sBAAAopL,EAAA,IACZtpL,EAAAC,EAAAC,EAAA,sBAAAopL,EAAA,IACStpL,EAAAC,EAAAC,EAA2C,sBAAAopL,EAAA,IAEGtpL,EAAAC,EAAAC,EAAA,sBAAAopL,EAAA,sCACtFtpL,EAAqDC,EAAAC,EAAA,sBAAAopL,EAAA,IAC1CtpL,EAAAC,EAAAC,EAAA,sBAAAs5C,EAAA,IACIx5C,EAAAC,EAAAC,EAAA,sBAAAs5C,EAAA,IACdx5C,EAAAC,EAAAC,EAAA,sBAAAs5C,EAAA,IAC0Bx5C,EAAAC,EAAAC,EAAA,sBAAAwiJ,EAAA,IACR1iJ,EAAAC,EAAAC,EAAA,sBAAAwiJ,EAAA,IAClB1iJ,EAAAC,EAAAC,EAAA,sBAAAwiJ,EAAA,IAEkB1iJ,EAAAC,EAAAC,EAAA,sBAAAwiJ,EAAA,sCACC1iJ,EAAAC,EAAAC,EAAc,sBAAAwiJ,EAAE,IAApB1iJ,EAAAC,EAAAC,EAAA,sBAAAwiJ,EAAA,IACK1iJ,EAAAC,EAAAC,EAAgB,IAAE,kBAAAwiJ,EAAA,IACtB1iJ,EAAAC,EAAAC,EAAA,sBAAAm4M,IACdr4M,EAAAC,EAAAC,EAAA,sBAAA40B,IACF90B,EAAAC,EAAAC,EAAA,sBAAAy4M,oRAE0B34M,EAAAC,EAAAC,EAAA,sBAAAg3M,KAwC3BkC,KAEA,SAAUzwM,EAAAzI,EAAAF,gBAGaA,EAAiBC,EAAAC,EAA6B,IAAK,WAAQ,OAAAm5M,IAC9Cr5M,EAAAC,EAAAC,EAAA,sBAAAo5M,IAEdt5M,EAAgBC,EAAQC,EAAO,sBAAAq5M,IAC9Bv5M,EAAEC,EAAAC,EAAA,sBAAAs5M,IACHx5M,EAAAC,EAAAC,EAAA,sBAAAu5M,IACPz5M,EAAAC,EAAAC,EAAA,eACE,OACLw5M,IAEP15M,EAAAC,EAAAC,EAAA,sBAAAy5M,IAEU35M,EAAsBC,EAAQC,EAAiB,IAAO,WAAS,OAAA05M,IAElE,IAAAtzM,EAAAtG,EAAA,QACK65M,EAAI75M,EAAc,QAElB85M,EAA+C95M,EAAA,QAC/C+5M,EAAoB/5M,EAAAqhC,EAAAy4K,GAE/BE,EAAyBh6M,EAAA,QAChBi6M,EAAoBj6M,EAAQqhC,EAAA24K,GACnCE,EAASl6M,EAAA,QACVm6M,EAAAn6M,EAAA,UAWC,kBACA,4BAGI,gBAyCJ,KACI,SAAQgN,oBAERmiI,EAAiBniI,EAAAmiI,iBAAAk9B,EAAAr/J,EAAAq/J,iBACjB92J,SAAcuO,EAAUuoJ,EAAAvoJ,aACvBmR,MAAAhqB,OAAAohK,EAAAp3I,MAAA,CAAA4kL,EAAA,UAAA3jL,iCAGMyqD,MAAI0rF,EAAA1rF,MAAA84H,aAhDjB/3M,EAAgBmhB,EAAAvU,kFAYA,EAAAA,EAAA,GAAAsL,QAAAiB,EAAWF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,sBAEpB++L,EAAA,UAAA9gM,wBAMDoiB,MAAImmD,4BAGA15E,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,sBAEJwR,EAAQgP,iDAKF,cAET,UACF,KAAAk+K,EAAA,QACC,IAAM/rG,EAAOriG,qBACXquM,EAAK,YAEL,MAYWjtC,EAAc92J,SAAa7T,MAAMuzB,EAAO3mB,cAEnDA,EAAArD,SAAamvM,EAAQ7uM,IAAA,SACrBA,gBAEe,KAAA2B,EAAA,CAAApC,KAAAoC,EAAAiO,MAAAjO,EAAAiO,MAAA,UAAA5P,EAAA,SAEb,UAAA5J,KAAS,SAAA0F,MAAA,CAAAyD,KAAAoC,EAAApC,wBACT+uM,EAAI,cAAA3sM,GAAA+P,kBACO,cAAA/P,SACVA,EAAA0M,OAAA3O,SAAAmvM,EAAAluM,IAAA,OACJgB,EAAA0M,OAAA1N,4FAEJtI,EAAA,SAAAjC,KAAA,QAAA0F,MAAA,CAAAyD,SACF,IAAAzG,EAAAL,OAAAk2M,EAAA,EAAAl2M,CAAA,CACFuW,SAEUjV,MAAY0H,EAAE1H,QAEf5D,EAAS6Y,EAAA7Y,MAAA6Y,EAAA7Y,MAAA24M,EAIf,GAAOhuC,EAAEj4J,OAEH,IADJ,IAAOkmM,EAAG54M,EAAAkL,QAAA4sM,IAAA,EACJ3kM,EAAS,EAAAA,EAAA4E,EAAArF,OAAAnJ,OAAA4J,IAAA,CAEhB,GAAAylM,EACJ,QAAAzuM,EAAA,EAAAA,EAAAqB,EAAA0M,OAAA3O,OAAAY,IAAA,CAA6B,IAC5BC,EADiCoB,EAAA0M,OAAa/N,GAC9CuI,OAAmCrN,IAAA8N,GACZjR,EAAY41M,EAAC3tM,GAAA,CACrCxE,MAAAyE,EAEanK,KAAAs4M,IAAAnuM,IAgBA,IAXLyuM,EAAAl2M,EAAAoV,EAAArF,OAAArN,IAAA8N,KACAnT,MAAAytI,EAAAztI,EAAAkC,GACTwQ,EAAAsB,KAAA,CAEF5K,wDAOgBsJ,EAAuCnJ,QAAqB01E,EAAA,MAC9D,WAII,CACF,IAAChpD,EAAA3zB,OAAA61M,EAAA,YAAA71M,CAAA,CACdyV,QACYub,SAAAC,IACK4yI,OAAA97J,EACHiB,EAAkB66J,WAAC5qJ,IACpB4qJ,EAAW7jK,OAAKm2M,EAAW,EAAhBn2M,CAAgB,CAC5Bg2C,OAAA/8B,EACVg9B,OAAA/sC,EAAA0M,OAAA1N,MAIK,IACE,IAAK,IAAGsuM,GAAItpL,OAAA,EAAA5qB,EAAA,EAAA2uB,IAAAwlL,EAAAD,EAAA1/L,QAAA2/L,EAAA1/L,KAAA0/L,EAAAD,EAAA1/L,OAAA,CACjB,IACay/L,EADbn4F,EAAAq4F,EAAApzM,MACFzD,EAAA21M,GAAA,CAAAlyM,MAAA+6G,EAAAzgH,KAAAygH,IAAem4F,EAAAl2M,EAAAszB,EAAAyqF,KACO1gH,MAAAytI,EAAAztI,EAAAkC,GACTwQ,EAAMsB,KAAI,CACX5K,KAAAs3G,EACV3oG,MAAAc,EACelW,QAAAk2M,EACjB1yC,YACF5lD,0FAEF,WAAA/wF,EAAA,MAAAA,EAAAiK,kBAGqC,IAAhC/mB,EAAKnJ,OACTmJ,EAAUsB,KAAM,CACd5K,KAAQ,UACT2O,MAAAnT,EAAA,KAAAiP,GAEDlR,QAAA,CACU+vB,QAAU,EACZzyB,KAAA,aAKC,IAAPyS,EAAOnJ,QAAAohK,EAAA92J,SAAA7T,QAMT0S,EAAO,GAAM/P,QAAA3C,WAAAqK,sIC1R4C,IAC7B,QAAA2uM,EAAAp0M,EAAA,EAAA0E,GAAA2vM,EAAAD,EAAA5/L,QAAA6/L,EAAA5/L,KAAA4/L,EAAAD,EAAA5/L,OAAA,CAUxB,IAAA1O,EAAkBuuM,EAAAtzM,MACd+D,EAAAzF,EAAAyG,GAGN,GAAAhB,QASI,GAAAwvM,EAAAxuM,GAAA,CACE,IAAM+/F,EAAA4tG,IAAc3uM,GACf0oC,MAAAq4D,KAIbpvF,EAAA3Q,GAAA+/F,QAmBF,GAAA/gG,EAAA,CACE,GAAW,SAAXgB,GAAoC,SAAxBhB,EACF,SAER2R,EAAA3Q,GAAAhB,UAGMs8F,GAAA3yE,EAAA,CAcQoG,MAbZusE,WAmBF,IAmBDizG,MAAA5/L,OAAAnT,EAAA8yM,EAAAn5H,SAAA35E,EAAA/B,KAAA60M,GA9CkC,WAAA3lL,EAAA,MAAAA,EAAAoG,uFCjDrC,eAAAjvB,EAAA,EAAAA,EAAAvG,EAAAsF,OAAAiB,IAAAuN,EAAAkgM,EAAAlgM,EAAA9T,EAAAuG,WAGauN,EAAAq/H,YAAmBr/H,EAACq/H,WAAoB7tI,SAC7CwO,EAAAq/H,WAAU,GAAAzxI,OAAAk8C,OAIZxpC,eAAa,QAAUN,EAAMM,eAAA,QAAAN,EAAAhL,IAAAgL,EAAA1L,IAC5BzH,EAAA,KAAAmT,EAAA,CAAAhL,IAAAgL,EAAA1L,QAAA0L,EAAAhL,MAELgL,yBCVF,IAAAjR,EAAA,mDAEAC,OAAAC,QAAAC,uDADA,8sECyBqB,SAAQjD,YAExBo4B,IACH,IAAEl4B,EAAA,OAAAF,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,KAZD,+BAFDsC,EAmBDxC,EAAAD,MAAAyC,UAnBCsM,IAEC9O,EAiBH,SAP2B,EAAAk4B,EAAAp4B,KAPhBa,UAAAoB,OAAoB,WAC5B,IAXHkzM,EAWGjzM,EAAA9B,KAAAH,MAAAkC,EAAAD,EAAAC,UAAAmF,EAAApF,EAAAoF,QAAA3F,EAAAO,EAAAP,MAAAC,EAAAM,EAAAN,MAAA02B,EAAAp2B,EAAAo2B,UAAA70B,EAAAvB,EAAAuB,WAAA40B,EAAAn2B,EAAAm2B,cAAAE,EAAAr2B,EAAAq2B,eAAAuxK,EAAA5nM,EAAA4nM,WAAArsI,EAAAv7D,EAAAu7D,WAAAD,EAAAt7D,EAAAs7D,YAAAD,EAAAr7D,EAAAq7D,gBAAAtoD,EAAA/S,EAAAk7D,iBAAA,IAAAnoD,KAUDmgM,EAAAx0M,EAAA,KAAA6C,EAAA,CAAA4xM,SArBFF,EAqBE,CAAAvzM,QAAAO,YAAAm2B,aArBF,SAAAr4B,GAAyC,IAAA2B,EAAAuzM,EAAAvzM,MAAAO,EAAAgzM,EAAAhzM,UAAAm2B,EAAA68K,EAA2B78K,UAApE,OAAAj2B,EAAAlB,EAAAmB,cAAA,OAAAioB,IAAAtqB,EAAAq1M,SAAAnzM,UAAA,0CAAAA,EAAAs0B,QAAAx2B,EAAAo8D,YAAA+B,WAAAn+D,EAAAo8D,YAAAiC,YAAAr+D,EAAAo8D,YAAAgC,WAAA1oC,OAAA11B,EAAAo8D,YAAAiC,YAAA/oC,SAAA,GAAAlzB,EAAAlB,EAAAmB,cAAA,OAAAH,UAwBC,iBAvBCm2B,GAAQj2B,EAAAlB,EAAAmB,cAAA,KAAAH,UAAA,sBAAAm2B,IACNj2B,EAAuBlB,EAAAmB,cAAA,QAAAH,UAAA,uBAAAP,GAAA,KACvB3B,EAAAm+D,YAAA/7D,EAAAlB,EAAAmB,cAAA,KAAAH,UAAA,2BAUFlC,EAAAm+D,YAAiB/7D,EAAWlB,EAAAmB,cAAA,KAAAH,UAAA,+BAS1B,OAAOE,EAAoBlB,EAAAmB,cAAAizM,EAAA,GAAAn4I,YAAAF,uBAAA,EAAAD,aAAA,EAAAh/B,cAAA,EAAA32B,UAAA5E,SAAAtC,KAAAsC,SAAAf,QAAA27D,OAAAwsI,EAAArsI,aAAAD,cAAAnlC,gBAAA50B,WAAA2xM,EAAAjzM,UAAA,mCAAAo2B,iBAAAglC,qBAE/BnlC,EARqB,CAhBoBv1B,EAAA,yHCXzC,OAAA47B,EAAAt9B,EAAA6J,kCAAA,SAAAyK,GACA,OAAAgpB,EAAAt9B,EAAAqwF,MAAA9uD,EAAA,SAAA7uB,GACA,OAAAA,EAAA4B,gBCFA+/L,OACA,SAAAvyM,EAAAI,GAEA,IAAAP,EAAA,0uCCHA2yM,KACA,SAAAxyM,EAAAzI,EAAAF,GAEA,8FCAAo+B,kNCEY,kHAJwBA,EAAA73B,UAAAwpB,qBAAA,WAC6CtnB,OAAAupE,oBAAA,QAAAlsE,KAAAk7L,gBAAA,IAGjF5iK,EAAuB73B,UAAAoB,OAAA,WACrB,OAAA7B,KAAAH,MAAAkrB,UADUuN,GAmBZ71B,EAAA,8BAiBEI,EAAAI,mBAOEJ,EAAAI,yFAKE,MAAOH,IAAA,kBAAkB,SAAAC,KAAAC,IAAAN,mLAC1BA,+IAMO,SAAMK,GAAKA,EAAAC,IAAAN,wmEA3BrBA,EAAA,kFACEG,OAAO,MAAKC,IAAM,kBAAoB,SAAUC,KAAAC,IAAWN,iWAC5DA,GAED4yM,cAAAzyM,EAAAzI,EAAAF,gFAEC,IAdMq7M,EAcN/0M,EAAAtG,EAAA,QAgCDuI,EAAAvI,EAAA,QACQ+H,EAAoB/H,EAAWqhC,EAAA94B,GAC7B6/G,EAAqBpoH,EAAA,QACvB4mC,EAA4B5mC,EAA4BqhC,EAAA+mF,GACxDkzF,EAAyBt7M,EAAwC,kBAjDvEq7M,KACA,kBAyDJA,EAAC,eA5D0BA,MAAA,KAAT,IAAAjgL,EAAA,SAAA11B,uHCxBlB,gBAAAma,GACA,IAAAogL,EAAAj8L,OAAAs3M,EAAA,EAAAt3M,CAAA6b,EAAAvF,OAAAjT,MAAAkxM,GACA3yM,EAAAe,SAAA,SAAAm7D,GACA,gHCAY99D,OAAQgH,KAAAswM,EAAA,GAAAjiJ,QAAA,SAAAkiJ,IACVv3M,OAAAs3M,EAAA,EAAAt3M,CAAAu3M,EAAA3C,IAAA4C,EAAAD,MACAE,EAAAF,GAAA,SAAA17L,GAAA,OAAAvZ,EAAA,EAAAV,OAAA,oBACA,OAAAU,EAAA,EAAAR,KAAA,SAAA8B,GACR,OAAAA,EAAAN,OAEkC,OAEA,OAD3BuY,EAAA6wE,UAC2B1sF,OAAkCs3M,EAAA,EAAlCt3M,CAAkCu3M,EAAA3C,GACvC,GAAA9yM,KAAA41M,eAAA9C,EAAA2C,IAAAjsL,MAAAxpB,KAAA,CAAA+Z,KADuC,MAG7C,OACRjY,EAAA+iB,OACA/iB,EAAAN,MAAA,EACC,OASR,OARoBk0M,EAAGD,IACjBC,EACJD,GAASjsL,MAAA,MAAAzP,EAAA/Z,KAAmB2/G,SAM9B,2DAWErqF,EAAO70B,UAAW,SAAS,kCACtB40B,MAAAkgL,EAAAM,QAAAN,EAAAO,mCAIP,0BAGGxgL,EAAW70B,UAAE,wCAEVk/G,SAAS41F,EAAMM,qBAErB,gBACA,uBAEE,4BACA/C,EAAMhxM,EAAAgxM,iBAAA/wM,EAAAD,EAAAC,UAAAyzB,EAAA1zB,EAAA0zB,iBAAAkgL,EAAAl1M,EAAA,EAAAsB,EAAA,kEACHuzB,QACAyL,IAAgB,iBAAA7iC,QAAA+B,KAAA+1M,WAAAh0M,KAChB/B,KAAQg2M,6BAAAN,EAAA5C,YACC/xM,EAAAmB,cAAA,OAAA46B,MAAA,CAAAonJ,SAAA,MACbnjL,EAAAmB,cAAA,QAAA1B,EAAA,KAAAm1M,EAAA,CAAA5zM,UAAAo9D,SACF3pC,GAAAvzB,EAAAlB,EAAAmB,cAAA,YAAAmzB,oBAGC,WACD,MFvCS,GE2Cb,uGCnEL1yB,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,okMAAAG,EAAAI,QAAAP,GAMEuzM,qUCSQ,OAbV10M,EAAAggB,UAAAC,WAAAje,EA8DC2yM,gBAAAngC,EAAAD,EAAAx0J,EAAAhb,KA7DQ4vM,gBAAPjgC,EAAAD,EAA+C,EAAAmgC,EAAA70L,EAAAhb,yBAEzB8vM,IAAYv6M,EAAUsJ,QACR,MAA5BtJ,EAAUu6M,IACZl4M,OAASoQ,OAAA6nM,GAAAlyG,SAAApoG,EAAAu6M,IACV7yM,EAAA0e,WAAA,GAAAX,EAAAhb,IAAA6vM,EAAA70L,EAAAhb,MAAA+vM,aAAA,GAKO9yM,EAAU0e,WAAMX,EAAAhb,MAEd,MAEN,YACDzK,EAAA0F,EAAAujG,WAAAjpG,KAAA,IACI+lB,EAAMrgB,EAAAggB,UAAAwjF,OAAAnjF,OACH00L,EAAQz6M,EAAU+lB,EAAU,GAClCi1F,EAAeh7G,EAAG+lB,GAClB,GAAAu0L,EAAMG,IAAAH,EAAAG,KAAAz/F,EAQJ,OAPHv1F,EAAAI,iBAEOne,EACAs4K,eAAmB,GAErB52E,cAAiB,GACnB/iF,SACA,SAOHlN,wBASG5a,EAAkBF,gBAGdA,EAAAC,EAAAC,EAAA,sBAAA2oL,IACP,IAAAwzB,EAAAr8M,EAAA,UAEG,SAAA4wD,EAAA0rJ,UACP1rJ,EAAA0rJ,GAAAD,EAAA,EAAArrJ,sBAMAroD,EAAAzI,EAAAF,8CAEoBA,EAAAqhC,EAAAsuC,GAGzB4E,EAAAv0E,EAAC,wSChEsBqH,EAAAwiB,EAAAF,OAAA,GACuBmvH,EAAApjI,KAAA,CAAArO,QAAAskF,GAAA,OACY,MAElB,qBACHu8C,EAAAr+G,EAAAF,OAAA,KACOw+G,EAAAt+G,EAAAF,OAAA,KAQ5CmvH,EAAApjI,KAAA,CAAArO,MAAA6gI,EAAAv8C,GAAA,OAmBkBmtD,EAAApjI,KAAA,CAAArO,MAAA8gI,EAAAx8C,GAAA,SAENmtD,EAAWpjI,KAAA,CAAArO,MAAA6gI,EAAAv8C,GAAA,OACDmtD,EAAVpjI,KAAsB,CAAArO,MAAA8gI,EAAAx8C,GAAA,QAEtB,MAEA,mBA2UJ,IAAGu8C,EACIC,GADJD,EAAAr+G,EAAAF,OAAA,KACIw+G,EAAQt+G,EAAGF,OAAA,KAEXmvH,EAASpjI,KAAO,CAAErO,MAAA6gI,EAAAv8C,GAAA,OAC7BmtD,EAAApjI,KAAA,CAAArO,MAAA8gI,EAAAx8C,GAAA,SA3UgBmtD,EAAQpjI,KAAA,CAAArO,MAAA6gI,EAAAv8C,GAAA,OACRmtD,EAAKpjI,KAAA,CAAArO,MAAA8gI,EAAAx8C,GAAA,QAKjB,OAEJ,IACD,QAAAhxE,EAAA4R,EAAA,EAAAnrB,EAAA03I,YAAAj+H,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CAED,IAAAgB,EAAAjB,EAAAxT,MAAAyU,EAAAxG,MAyBC,EAxBMwG,EAAA8/D,MAAA,EAEL9/D,EAAA08H,UAAA,YAIA,MAAAl3D,GAAAn1D,EAAA,CAAAgP,MAA4BmmD,GAC5B,QACE,IACKzmE,IAASA,EAACE,OAAAnT,EAAA+S,EAAiB4mE,SAAS35E,EAAA/B,KAAA8U,GAExC,WAAAwR,EAAA,MAAAA,EAAAgP,OAIH,OADK,GAILohL,KAMFC,EAACx8M,EAAA,UAGMA,EAAU,UAGXA,EAAoB,UAGlBA,EAAU,UAGXA,EAAA,QAKSA,EAAAC,EAAAC,EAAA,sBAAAu8M,UAUG,sBAGNzxL,EAAAvkB,EAAqB2kB,EAAAuoD,EAAAC,EAAA3pD,OAC9BrkB,EAAKE,iBACHklB,OACFvkB,WAAYA,oBACH2kB,OACTuoD,aAAYA,UACVC,OACH3pD,gBACDnkB,KAAA42M,OAAO,WACR92M,EAAAxE,MAAAG,MAAA,GAEDqE,EAAA+2M,YAAA/2M,EAAAxE,MAAAG,MAMCq7M,IAAA,WAHKlrE,UAAY1mH,EAAAsrD,KACdxwE,KACA1E,MAAA0E,KAAA4rI,UAAAtwI,MACH0E,KAAAklB,OAAAsrD,KAAAxwE,KAEDA,KAAA+2M,YAAA,EACE/2M,KAAMq/B,cAAawnH,EAAY,EAAAxnH,mBAC7BC,cAAWunH,EAA4B,EAAAvnH,mBACtCF,eAAAynH,EAAA,EAAAznH,eACHp/B,KAAKu/B,YAAOsnH,EAAA,EAAAtnH,iBACVC,oBAAOqnH,EAAA,EAAArnH,yBACR3Y,UAAApS,EAAA,EAAAoS,UAED7mB,KAAK4rI,UAAAorE,aAAwBh3M,KAAA42M,OCvGjC,SD2EWxwL,QAAS,6EA8Bd3lB,UAAe+jF,QAAC,eAChB1kF,EAAAE,UACAi3M,uBAAcj3M,KAAA6tE,aAAAggB,gBAGhB,IAAAqpH,EAAAl3M,KAAAm3M,sBAAA/2M,KAAAJ,MAcA,OAbAA,KAAK4rI,UAAA5uI,OAAEwc,GAAA,oBAAgB09L,QAEtBhyL,OAAAtL,IAAA,sBAED9Z,EAAA8rI,UAAoB5uI,OAAA6c,IAAA,oBAAAq9L,GAChBp3M,EAAC8rI,UAAA+H,mBAAmC,EACpC7zI,EAAC8rI,UAAA/pI,WAIP7B,KAAAo3M,cAAA,GACEp3M,KAAAq3M,mBAAA,GACAr3M,KAAAwmJ,aAAA,GACAxmJ,KAAAW,WAAQM,IAAC,mCAAiCC,KAAK,SAAKwW,GACpD5X,EAAAs3M,cAAS1/L,EACV5X,EAAA+2M,YAED/2M,EAAAw3M,qBAGG72M,UAAA82M,gBAAA,WACD,IAAIz3M,EAACE,KACLA,KAAKW,WACNM,IAAA,gCAAAjB,KAAA4rI,UAAAvwI,UAAAwB,GAAA,YAAAmD,KAAA1E,MAAAuB,GAAA,wBAEDqE,KAAA,SAAAwW,GACE5X,EAAO0mJ,aAAW7/H,EAAsB5lB,EAACK,IAAAsW,EAAA,SAAAmoB,GAG3C,OAFCA,EAAArsB,KAAA1T,EAAAwlB,aAAA8c,aAAA4G,WAAAnJ,EAAArsB,KAAA,wBAEDqsB,EAAAynH,WAAAT,EAAA,EAAA5nH,qBAAAY,EAAA8lH,+CAAA9lH,SAIGp/B,UAAA+2M,oBAAA,SAAAzjM,GAED,OAAMA,GACF,IAAK,QACP,MAAM,iBACP,YAEK,oBACN,IAAM,YACA,MAAS,kBACf,IAAM,UACA,oBACN,IAAS,YACH,uBAEA,eACA,MAAO,aAET,IAAC,UAGG,MAAM,qBACV,eAGF,qBAEF,iCAEA,IAAgC,QAA3B,MAAM,sCAKTtT,UAAUg3M,iBAAE,iBACVz3M,iBACD8tE,GAAAG,KAAAjuE,KAAAo3M,cAAAh2M,IAAA,SAAAwN,UAED9O,EAAS+tE,aAAUG,WAAcp/D,EAAK5J,YAGrCvE,UAAAi3M,kBAAA,iBACF/wL,EAAA5lB,EAAA6J,KAAA5K,KAAAo3M,cAAA,gJAED1uL,IAA2BrsB,EAAAqsB,QAEvB3nB,EAAA6J,KAAa5K,KAAAvE,MAAY27M,cAAK,SAAoB77K,GAAA,OAAaA,EAAA1+B,KAAMR,EAAAQ,IAAA0+B,EAAA7S,MAAArsB,EAAAqsB,kBACrE0uL,cAAaxnM,KAAO,CAAG8Y,IAAArsB,EAAUqsB,WAGpCuuL,uBAAA11M,MAAAvB,KAAA6tE,aAAAggB,gBAAAtsF,yUAGId,UAAUk3M,gBAAS,WACzB33M,KAAA43M,gBAAA5yM,OAEDhF,KAAAvE,MAAAo8M,cAAA73M,KAAA43M,gBAAA5yM,MAA8BhF,KAAA43M,gBAAAr2M,yCAC5Bq2M,gBAAwBr2M,MAAA,MACtBd,UAAIq3M,mBAA4B,SAAAC,eAC9Bt8M,MAAAo8M,cAAoBE,gBAEdlB,UAAA,iBACP/0M,EAAAspB,EAAAvW,IACF7U,iIACFvE,EAAAu8M,YAAAv8M,EAAAu8M,aAAAvjM,EAAA,EAAAwjM,2BAEDx8M,EAAAy8M,oBAAAz8M,EAAay8M,qBAAbzjM,EAAA,EAAA0jM,qDAAA18M,EAAAge,QAAAhe,EA2CCge,SAAA,EA1CChe,EAAK27M,cAAY37M,EAAA27M,eAAA,KACfN,IAAOr7M,EAAAq7M,KAAA,OACRe,cAAAp8M,EAAAo8M,eAAA,GAED,IAAIO,EAAYp4M,KAAA1E,MAAAM,MAAA,SAChBH,EAAIuJ,KAAAvJ,EAAyBuJ,MAAKozM,oEAElC1tI,EAAwB96D,KAAA9P,EAAAu4M,oBAAA92M,IAAnBmpE,SAEQ4tI,uBAAAt4M,KAAA1E,6EAGXi9M,EAAqB3iM,EAAArU,QACfolB,EAAc5lB,EAAA6J,KAAA5K,KAAAo3M,cAAA,CAAA1uL,IAAA6vL,EAAA7vL,YAGd/B,EAAe5lB,EAAC6J,KAAM5K,KAAGo3M,cAAiB,CAAEv6M,GAAA07M,EAAA17M,UAExC,IAANR,EAAMoxC,cACPvV,UAAAl4B,KAAAw3M,oBAAAn7M,EAAA0X,WACFsjM,mBAAAznM,KAAAvT,kFAEI,GAAAgqB,EAAA,MAAaA,EAAAgP,qBAGd5O,EAA0B,EAAAzmB,KAAAo3M,eAAA11G,EAAAz9D,EAAAjvB,QAAA0sF,EAAAzsF,KAAAysF,EAAAz9D,EAAAjvB,OAAA,OAC3B0sF,EAAAngG,QAAMksC,cACAvV,UAAQl4B,KAAAw3M,oBAAAgB,EAAoCzkM,QAClD2gG,QAAA,UACF10G,KAAAq3M,mBAAAznM,KAAA4oM,cAKGptL,EAAK,CAAAiK,MAAQumD,mBAEb8lB,EAAKzsF,OAAQJ,EAAAovB,EAAAw3C,SAAA5mE,EAAA9U,KAAAkkC,cACR7Y,EAAA,MAAAA,EAAAiK,sBAENs+G,mBAAA,iBACA9xI,8PAEN,QAMC,MAAG+/F,GAAW3yE,EAAG,CAAAoG,MAAAusE,GACjB,QACG,IAEO7sF,MAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAGZ,WAAAoa,EAAA,MAAAA,EAAAoG,WAES50B,UAAA62M,cAAsB,iBACzBx1M,EAAAmgG,EAAMptF,IACP7U,QACDA,KAAKvE,WAGLg9M,IACO,SAEP,IAAK,IAAA1jM,EAAA0R,EAAqB,EAAAzmB,KAAAvE,MAAAi9M,YAAA9iM,EAAAb,EAAAC,QAAAY,EAAAX,KAAAW,EAAAb,EAAAC,OAAA,CACxB,IAAMs4E,EAAS13E,EAAKrU,SACN,UAAZ+rF,EAAOv5E,MAIV,IACF,QAAAkwB,GAAAg+D,OAAA,EAAAx7E,EAAA,EAAAzmB,KAAA1E,MAAA4oB,UAAAw9E,EAAAz9D,EAAAjvB,QAAA0sF,EAAAzsF,KAAAysF,EAAAz9D,EAAAjvB,OAAA,CACF,IAAAR,EAAAktF,EAAAngG,MAIQ,GAFTk3M,SAEmBnrH,EAAA5sF,MAAAmjB,OAAA,KAAArP,EAAAa,MAAA,CACbsjM,EAAsBnkM,EACtB,QAIA,MAAMokM,GAAY32G,EAAA,CAAA5sE,MAAAujL,WAClB,IAAWl3G,IAAIA,EAAAzsF,OAAAJ,EAAAovB,EAAAw3C,SAAA5mE,EAAA9U,KAAAkkC,WAEX,GAAMg+D,EAAK,MAAMA,EAAC5sE,OAErBsjL,sFACD,IAAAv0L,EAAoBu0L,EAAQh0L,YAAA3kB,KAAA1E,MAAAqpB,WAC7B3kB,KAAAmkB,cAAAljB,IAAAmjB,GAAAljB,KAAA,SAAA0jB,GACFA,EAAAxnB,KAAA0nB,SAIiBF,EAAAG,wBAAAH,EAAAG,uBAAA4zL,GAClB74M,EAAAu1B,MAAwB,wDAGnBv1B,EAAgBu1B,MAAS,GAP/Bv1B,EAAAu1B,MAAA,uDAaA,MAAA0sE,GAAAh2E,EAAA,CAAAsJ,MAAA0sE,GAED,YACEnsF,MAAAX,OAAUnT,EAAKiT,EAAA0mE,SAAA35E,EAAe/B,KAAEgV,GAE9B,QAAM,GAAAgX,EAAA,MAAAA,EAAAsJ,YAGN50B,UAAS43M,oBAAQ,SAAAptI,OACjB4tI,EAAA,CAAA5tI,OAAWA,EAAAl3D,KAAAk3D,EAAAl3D,yBACF,IAAA2iM,EAAiB,EAAAzrI,EAAAvqE,MAAAmmJ,EAAA,EAAAtoH,6BACnBsoH,EAAa,EAAAnnH,kBAAAurC,EAAAnnD,qBACbmnD,EAAMlnD,qBACNknD,EAAAjnD,cAGNvjB,UAAAq4M,qBAAA,SAAAC,EAAAh/L,OACAja,EAAAE,KACJ,OAAA+Z,EAAA/U,MAQD,yBACE,MAED,uBAED,OAAAhF,KAAA8tE,GAAAG,KAAA,IAEE,IAAQ,qBACNjuE,KAASs3M,oBAEP,oBACA,IAAAn2M,EAAMnB,KAAA1E,MAAA4oB,QAAA9iB,IAAA,SAAAoT,GACP,OAAA1U,EAAA+tE,aAAAG,WAAA,CAAAzsE,MAAAiT,EAAAa,UAED,OAAKrV,KAAA8tE,GAAAG,KAAiB9sE,OAIjBV,UAAUu4M,uBAAE,SAAAD,EAAAh/L,SACfjY,SACDiY,EAAA/U,MACF,aAEI+zM,EAAA9tI,OAAyBnnD,QAAA/P,KAAAgG,EAAAs8C,OAAA90D,MAC/Bw3M,EAAAE,YAAApyD,EAAA,EAAAnnH,kBAAAq5K,EAAA9tI,OAAAnnD,SAED,MACE,uBACE,IAAO3iB,EAAA,GACH,IACE,QAAU0T,EAAA4R,EAAA,EAAAogI,EAAA,EAAApnH,cAAA1qB,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CACP,IAAKjB,EAAAgB,EAAAxT,MACHwS,EAAAxS,QAAAw3M,EAAA9tI,OAAAnnD,QAAA/P,MACJ5S,EAAUyO,KAAAmE,UAIX0uF,GAAAl2E,EAAA,CAAA8I,MAAAotE,WAEA,IACK1tF,IAASA,EAACE,OAAUnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAE9B,WAAA0X,EAAA,MAAAA,EAAA8I,OAEJ,OAAAr1B,KAAA8tE,GAAAG,KAAA9sE,KAGHk6G,EAAgB56G,UAAAy4M,aAAA,SAAAnlM,GACT,IAASu5E,EAAQpvF,OAAA0lB,EAAA,EAAA1lB,GAEtB8B,KAAOvE,MAAAi9M,WAAA9oM,KAAA09E,GAELttF,KAAKm5M,gBAAMvpM,KAAA5P,KAAAq4M,oBAAA/qH,OAEX7sF,UAAY24M,gBAAY,SAAA18M,GACxBsD,KAAAvE,MAAAi9M,WAAA37M,OAAAL,EAAA,GACHsD,KAAAm5M,gBAAAp8M,OAAAL,EAAA,qOEjbDX,QAAA,SACAC,UAAA,kBACA8D,EAAAxE,MAAAG,MACAqE,6GCFAu7G,EAAA56G,UAAA44M,uBAAA,WACAC,EAAAhB,uBAAAt4M,KAAgE1E,OAChE0E,KAAA4rI,kGFHA7nH,EAAAF,OAAA,CAAAE,EAAAF,OAAA,IACA,MAEA,mBACA,oBACAE,EAAAF,OAAA,CAAAE,EAAAF,OAAA,GAAAE,EAAAF,OAAA,IACK,MAEL,eACKE,EAAAF,OAAA,GAGA7jB,KAAAq5M,0BAELh+F,EAAA56G,UAAA84M,aAAA,WACA,IAAAz5M,EAAAE,KACAiwE,EAAA,EAAAt0E,KAAA,iBACAC,MAAA,uBACAC,KAAA,4EACAC,KAAA,yBAEAE,UAAA,WACA8D,EAAAa,WACA0oE,KAAA,gCACA9rC,YAAAz9B,EAAA8rI,UAAAvwI,UAAAwB,GACA0lC,QAAAziC,EAAAxE,MAAAuB,KAEAqE,KAAA,WACApB,EAAA0mJ,aAAA,+BAMAnrC,EDyEqB,uBClErBpyF,SAAA,IACAvP,OAAA,qEAEAyP,WAAAqwL,GAGA/qI,EAAA,EAAAJ,UAAA,WAAAsoI,IAKA8C,mBAGA,IAAA/2M,EAAA,gDAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,+tBACAG,EAAAI,QAAAP,GAIAg3M,KACA,SAAA72M,EAAAI,GAEA,IAAAP,EAAA,oEAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,EADA,ouFAOA,SAAAG,EAAAI,IAEA,SAAA8D,GACA,aAEA,IAAA3E,EAAA,sBAEA,0BAEA6uE,UAAA,SAAAriE,GACA,OAAAA,IAAA/I,WAAA+I,wBAGA,OAAA5O,KAAAixE,UAAAriE,IAEA+qM,WAAA,iBAEAC,YAAA,KACAC,YAAA,SAAAjrM,EAAAwyF,GACAA,EAAAr2B,OAAA+uI,WAOA,SAAAC,EAAA/vL,EAAA9iB,sBAGAlH,KAAAutE,SAAAxmE,EAAAijB,wBAGAhqB,KAAAs9D,WAAAp2D,EAAAo2D,YAAA,UACAt9D,KAAAg6M,SAAA,WAAAhwL,EAAA+tL,QACA/3M,KAAAi6M,SAAAj6M,KAAAg6M,UAAAhwL,EAAA0mJ,aAAA,YACA1wK,KAAAk6M,YAAAhzM,KAAA+pE,kGAGAjxE,KAAAm6M,WAAApzM,EAAA,2CACA/G,KAAAsrE,OAAAvkE,EAAA,+BAAA/G,KAAAs9D,WAAA,8BAAAt9D,KAAAo6M,gBAAA,OAAAz5J,SAAA3gD,KAAAm6M,YAEAn6M,KAAAutE,SAAAt6C,MAAAjzB,KAAAm6M,YAEAn6M,KAAAkzK,MAAAhsK,yFAGA6yM,EAAAt5M,UAAA,eAOAqF,IAAK,SAAA8I,EAAAyrM,cAGL,KAAArtH,EAAA9lF,QAAAozM,SAAAttH,EAAAutH,WAAAp1M,QAAA6nF,EAAA9lF,QAAAozM,YAIA,IAAA1rM,MAAA,CAIA,oBAAAA,IAAAo+E,EAAAktH,YACA,2FAUA,GAHAltH,EAAAgtH,WAAAhtH,EAAAitH,UAAAjtH,EAAAutH,WAAAp1M,OAAA,GACA6nF,EAAA9sC,OAAA8sC,EAAAutH,WAAA,IAEA,iBAAA3rM,GAAA,UAAA5O,KAAAutE,SAAA,GAAAwqI,QAAA,CACA,IAAAxmM,EAAA3C,EAAAmxD,MAAA,oBAEA,QAAA35D,EAAA,EAAAA,EAAAmL,EAAApM,OAAAiB,IACApG,KAAA8F,IAAAyL,EAAAnL,IAAA,eAGAi0M,GACKrtH,EAAAwtH,YAKL,IAAAvpI,EAAA+b,EAAA9lF,QAAA+pE,UAAAriE,GACAuiE,EAAA6b,EAAA9lF,QAAAiqE,SAAAviE,oGAKA,GAAA43C,6BAGA,IAAAi0J,EAAA1zM,EAAA,OAAAimF,EAAAmtH,YAAA3oM,OAAA,kBAAAzK,EAAA/G,MAAAwI,KAAA,UAAAg+C,oCAHA,CAUAwmC,EAAAutH,WAAA3qM,KAAAhB,GAGA,IAAAwyF,EAAAr6F,EAAA,oBAAA2zM,EAAArpI,GAAA,KAAAqpI,EAAAvpI,GAAA,2CAMA,GALAiwB,EAAA54F,KAAA,OAAAoG,GACAo+E,EAAA2tH,mBAAA/gB,OAAAx4F,GACAA,EAAAnuE,MAAA,KAGA+5D,EAAAgtH,WAAAjzM,EAAA,iBAAAoW,OAAA8zD,GAAA,KAAA+b,EAAAzf,UAAA,IACA,IAAAia,EAAAzgF,EAAA,oBAAA2zM,EAAAvpI,GAAA,8BAEAqW,EAAA18E,KAAA,QAAAmmE,GACA+b,EAAAzf,SAAAxiE,OAAAy8E,GAGA6yH,GACArtH,EAAWwtH,UAGXxtH,EAAA9lF,QAAAozM,UAAAttH,EAAAutH,WAAAp1M,QACA6nF,EAAAmtH,WAAAzwJ,SAAA,2BAEAsjC,EAAOzf,SAAA50C,QAAA5xB,EAAAglE,MAAA,aAAAn9D,cAOPsxC,OAAA,SAAAtxC,EAAAyrM,GACK,IAAArtH,EAAAhtF,KAELgtF,EAAAktH,cAEAtrM,EADA,iBAAAA,EACA7H,EAAAg3C,KAAAivC,EAAAutH,WAAA,SAAA9mM,GAAA,OAAAu5E,EAAA9lF,QAAA+pE,UAAAx9D,IAAAu5E,EAAA9lF,QAAA+pE,UAAAriE,KAAA,GAEA7H,EAAAg3C,KAAAivC,EAAAutH,WAAA,SAAA9mM,GAAA,OAAAu5E,EAAA9lF,QAAA+pE,UAAAx9D,IAAA7E,IAAA,IAGAA,IACA7H,EAAA,OAAWimF,EAAAmtH,YAAA3oM,OAAA,kBAAAzK,EAAA/G,MAAAwI,KAAA,UAAAoG,IAAAsxC,6FAEX8sC,EAAAutH,WAAAx9M,OAAAgK,EAAA6zM,QAAAhsM,EAAAo+E,EAAAutH,YAAA,IAGAF,GACArtH,EAAAwtH,UAGAxtH,EAAA9lF,QAAAozM,QAAAttH,EAAAutH,WAAAp1M,4DAGA6nF,EAAAzf,SAAA50C,QAAA5xB,EAAAglE,MAAA,eAAAn9D,WAMAisM,UAAA,WAMA,aALA76M,0BAGA+G,EAAA,SAHA/G,KAGAutE,UAAArtB,SAHAlgD,KAKAu6M,WAAAp1M,OAAA,GALAnF,2BAQAw6M,UARAx6M,KAUAkH,QAAAozM,UAAAt6M,KAAA86M,aACA96M,KAAA42M,UAOAlzK,QAAA,WACA,IAAAspD,EAAAhtF,KACA+G,EAAA,OAAAimF,EAAAmtH,YAAAxgL,KAAA,WACA,IAAAynE,EAAAr6F,EAAA/G,uBAEAixE,EAAA+b,EAAA9lF,QAAA+pE,UAAAriE,GACAuiE,EAAA6b,EAAA9lF,QAAAiqE,SAAAviE,GACAyiE,EAAA2b,EAAA9lF,QAAAmqE,SAAAziE,IAGAwyF,EAAAt2F,KAAA,cACAs2F,EAAA13C,SAAA,OAAAgxJ,EAAArpI,IACA+vB,EAAa11B,WAAAl6D,OAAA,WACb,UAAAxR,KAAA+6M,WACA,GAAAC,UAAAN,EAAAvpI,GAEA6b,EAAAgtH,WACWjzM,EAAA,SAAAimF,EAAAzf,UAAA/7D,OAAA,kBAAAzK,EAAA/G,MAAAwI,KAAA,UAAAoG,IACX9D,KAAA,QAAAmmE,MAQA1/D,MAAW,WACX,OAAAvR,KAAAu6M,YAOAC,QAAA,WACA,IAAAxtH,EAAAhtF,KACOsF,EAAAyB,EAAA3F,IAAA4rF,EAAAz7E,QAAA,SAAA3C,8CAIPo+E,EAAAzf,SAAAjoE,OAAA,GAAAqzB,QAAA,WAMAu6I,MAAA,SAAAhsK,GACA,IAAA8lF,EAAAhtF,KAEAgtF,EAAA9lF,QAAAH,EAAAqJ,OAAA,GAAAhO,EAAA8E,GACA,IAAA8jE,EAAAgiB,EAAA9lF,QAAA8jE,WAAA,GAGAgiB,EAAAktH,cACAltH,EAAA9lF,QAAAyyM,WAAA,GAEAsB,EAAAjuH,EAAA9lF,QAAA,aACA+zM,EAAAjuH,EAAA9lF,QAAA,YACA+zM,EAAAjuH,EAAA9lF,QAAA,YAGA8lF,EAAA9lF,QAAA+jE,SACAD,EAAAC,OAAA+hB,EAAA9lF,QAAA+jE,QAEAD,EAAAC,QAAAlkE,EAAA2hD,GAAAsiB,2BG/TA,sBAAA9jE,EAAAZ,GAAA,CACA,IAAA/E,EAAA2F,EAAAZ,GACAY,EAAAZ,GAAA,kBAAA/E,IH8TA25M,CAAAlwI,EAAA,UAEAgiB,EAAA1hB,OAAAN,UAAA,CACAC,OAAA,SAAAvqE,EAAA+sE,iBAIA,IAFA,IAAAhU,EAAA,GAEArzD,EAAA,EAAAA,EAAAmL,EAAApM,OAAAiB,IAAA,CACA,IAAAvK,EAAAmxF,EAAA9lF,QAAAiqE,SAAA5/D,EAAAnL,IACAhF,EAAAvF,GAAA0V,EAAAnL,GACAqzD,EAAA7pD,KAAA/T,GAEA4xE,EAAAhU,GAGAz5D,KAAAoB,IAAA,GACA,IAAAA,EAAApB,KAAAoB,IACAoH,EAAAwiE,EAAAC,OAAAvqE,GAEAqG,EAAAw5C,WAAA/3C,EAAA2yM,SAEA3yM,EAAA2yM,QAAAC,GAGAr0M,EAAAknE,KAAAzlE,GACAtH,KAAAk6M,IAGAjwI,QAAA,SAAAtvE,GACAmxF,EAAAlnF,IAAA9F,KAAAoB,IAAAvF,KAEA2vB,QAAA,SAAA3vB,wEAGAw/M,OAAA,SAAA5hJ,GACO,OAAAA,EAAAxpD,QAEPqrM,YAAA,SAAAz/M,GACA,IAAAggB,EAAA,IAAAq8C,OAAA,IAAAl4D,KAAAU,MAAA,UACA,OAAA7E,EAAAgC,QAAAge,EAAA,2BAKAmxE,EAAAmtH,WAAA3gM,GAAA,QAAAzS,EAAAymE,MAAA,SAAAlsD,GACA0rE,EAAA1hB,OAAAppD,SACA8qE,IAEAA,EAASmtH,WAAA3gM,GAAA,eAAAzS,EAAAymE,MAAA,SAAAlsD,GACT,IAAAgqD,EAAAvkE,EAAAua,EAAA9M,QACAw4E,EAAAlnF,IAAAwlE,EAAAhmE,OACAgmE,EAAWhmE,IAAA,IACXgc,EAAAI,kBACAsrE,0DAGA,IAAA1hB,EAAAvkE,EAAAua,EAAA9M,QACA+mM,EAAAvuH,EAAA2tH,mBAEA,OAAAr5L,EAAAwX,cAGA,OAAA0iL,EAAAlwI,EAAA,KACA,IAAA3iC,EAAA4yK,EAAA5yK,OACAA,4BAIA,MAGA,QACA,OAAA6yK,EAAAlwI,EAAA,KACA,IAAAt2D,EAAAumM,EAAAvmM,OACAA,GACAg4E,EAAA9sC,OAAAlrC,EAAAxM,KAAA,SAGA,MAGA,QAEK,IAAAizM,EAAAF,EAAA5yK,kCAEL8yK,EAAA7hB,OAAA2hB,GACAjwI,EAAAppD,SAEA,MAEA,QAEA,IAAAw5L,EAAAH,EAAAvmM,OACA,IAAAs2D,EAAAhmE,MAAAH,QAAAu2M,EAAA,gBAEApwI,EAAAppD,SAEA,cAIA8qE,EAAA9lF,QAAAyyM,WAAA5yM,EAAA6zM,QAAAt5L,EAAAwX,MAAAk0D,EAAA9lF,QAAA0yM,cAAA,IACA5sH,EAAAlnF,IAAAwlE,EAAAhmE,OACAgmE,EAAAhmE,IAAA,wBAMAgmE,EAAAxgE,KAAA,OAAA5L,KAAA+I,IAAAjI,KAAA27M,UAAArwI,EAAAhmE,MAAAH,UACA6nF,qEAIAA,EAAA9sC,OAAAn5C,EAAAua,EAAA9M,QAAAgoI,QAAA,QAAAh0I,KAAA,SAEA8Y,EAAA+S,uBAIO24D,EAAA9lF,QAAA+pE,YAAA7uE,EAAA6uE,YACP,UAAA+b,EAAAzf,SAAA,GAAAwqI,QACA/qH,EAAAlnF,IAAAknF,EAAAzf,SAAAjoE,OAEAyB,EAAA,SAAAimF,EAAAzf,UAAA5zC,KAAA,WACAqzD,EAAAlnF,IAAAiB,EAAA/G,MAAA8K,KAAA,iBASAof,QAAA,gBAIAiwL,WAAAtgM,IAAA,yBACAsgM,WAAAtgM,IAAA,8BAEAsgM,WAAAj6J,cACAqtB,SAAAquI,WAAA,kBACAruI,SAAAnhE,QAMA8V,MAAA,WACAliB,KAAAsrE,OAAAppD,SAMA64C,MAAA,WACA,OAAA/6D,KAAAsrE,QAOAqvI,iBAAA,WAGA,IAFA,IAAAkB,EAAA77M,KAAAsrE,OAAA,wBAEAuwI,KAAAjzJ,aAAAxP,GACAyiK,IAAAjzJ,WAEA,OAAA7hD,EAAA80M,KAOA90M,EAAA2hD,GAAAqoB,UAAA,SAAA+qI,EAAAC,GACA,IAAKlqL,EAAA,GIlfL,OJofA7xB,KAAA25B,KAAA,WACA,IAAAo3C,EAAAhqE,EAAA/G,MAAAwI,KAAA,aAGA,GAAAuoE,4CACAA,EAAA,IAAAgpI,EAAA/5M,KAAA87M,GACA/0M,EAAA/G,MAAAwI,KAAA,YAAAuoE,GACAl/C,EAAAjiB,KAAAmhE,GAEA,WAAA/wE,KAAA+3M,SACGhxM,EAAA,SAAAA,EAAA/G,OAAA8K,KAAA,oDI9fH,iBAAAgxM,EAAAjqL,EAAA1sB,OAAA,EAAA0sB,IAAA,GAAAA,GAEO9qB,EAAM2hD,GAAAqoB,UAAAqgD,YAAuB2oF,4NCFpCiC,EAAAC,gBAAA,KAAAD,EAAAC,kBAAAC,EAAAF,EAAAC,gBAAuB,WAerB,WAEAl1M,EAAA,qEAAAgqE,cL0DF,QKxDGzgE,2ICjBHpW,EAAAC,EAAAC,EAAA,sBAAA+hN,IAAAjiN,EAAAC,EAAAC,EAAA,sBAAAgiN,IAECliN,EAAAC,EAAAC,EAAA,sBAAAiiN,IAFsBniN,EAAAC,EAAAC,EAAA,sBAAAkiN,IACrBpiN,EAAAC,EAAAC,EAAmC,sBAAAmiN,IADdriN,EAEtBC,EAAAC,EAAA,sBAAAoiN,IASM,IAAMC,EAAiB,GAC5BC,EAAkB,GAClBC,EAAa,GAF6DR,EAGzE,wCCdHS,KACA,SAAA/5M,uiICFiD,SAAAA,EAAAzI,EAAAF,GAGN,aAS1CA,EAAAC,EAAAC,EAAA,sBAAAyJ,IAPW,IAAWu6B,EAAAlkC,EAAA,QACrBmkC,EAAwBnkC,EAAAqhC,EAAA6C,GAExBv6B,EAAA,WACA,SAAAA,EAAAqhB,EAAAmqC,GACArvD,KAAAklB,SACAllB,KAAAqvD,YANUrvD,KAAA1E,MAAA0E,KAAA4rI,UAAWtwI,MAiDjB0E,KAAA68M,YAAcx+K,EAAqCt9B,EAAA+F,QAAA9G,KAAA1E,MAAA4oB,QAAAlkB,KAAAwU,UAAAxU,KAAA1E,MAAA4oB,QAAA/e,OAAA,EAMvD,OAJAtB,EAASpD,UAAKijC,QAAA,WACb1jC,KAAA4rI,UAAAloG,WAGK7/B,EApDN,IA6DIi5M,KACJ,SAAMj6M,EAAYzI,EAAcF,oBAMhCiwC,EAFkCjwC,EAAoBC,EAAiCC,EAAC,sBAAA+vC,IACtEjwC,EAAoBC,EAAAC,EAAA,sBAAA2iN,aAErC5yK,GAEUA,EAAkB,uCACvBA,EAAY,SAClB4yK,EAAS,SAAWnuM,GAAA,OAFuDmF,KAG1Eo2B,EAAA6yK,eAEIvyK,QAAS77B,yzPAOhBquM,KACE,SAAOp6M,EAAMzI,EAAQF,gDACFA,EAAMC,EAAAC,EAAA,sBAAA8iN,oCAANhjN,EAA6CC,EAAAC,EAAA,sBAAA6jG,IACrD/jG,EAAsBC,EAAAC,EAAA,sBAAA+iN,IACtBjjN,EAAAC,EAAAC,EAAA,sBAAAgjN,oGACTljN,EAAAC,EAAAC,EAAA,sBAAAijN,IACHnjN,EAAAC,EAAAC,EAAA,sBAAAkjN,IAE8BpjN,EAAAC,EAAAC,EAAA,sBAAAmjN,IAM9BrjN,EAAAC,EAAAC,EAAA,sBAAAojN,IALyBtjN,EAAQC,EAAAC,EAAA,sBAAAqjN,yHAI9B,uCACHtzK,EAAA,oDAEMA,EAAiC,sCAAxCA,EAMC,yCALQA,EAAiB,sEACTh4B,GAAQ,MAAO,QAC5BurM,uBACA,SAASC,GAAmB,4CAC5B,SAAAC,GAAA,OACH7pM,KAAAo2B,EAAA0zK,eAEMpzK,QAASmzK,IACdV,EAAc,SAAUzkH,GAAQ,2EACxB9tD,8IAGN,OAAA7oC,EAAAN,OACH,gBAAAtD,OAAAspE,EAAA,cAAAtpE,GAAA+C,IAAA,qBAAA68M,QAAA,IAAA1xH,KAAA,KAEe,KAAW,SAA3Bn/C,EAMCnrC,EAAA+iB,OALQgmB,EAAekzK,EAAU9wK,EAAAh7B,2DAE9B44B,GAAoE,OAAArqC,EAAA,EAAAV,OAAA,sIAEpE,OAIK,OAHRmtC,EAAAnrC,EAAA+iB,OAEegmB,EAAcmzK,EAAA/wK,IAA9BpC,EAMC3sC,OAAA+/M,EAAA,EAAA//M,QAAAggN,EAAA,EAAAhgN,CAAA+uC,KALe,8GAGyB,EAAAjtC,KAAA,SAAA8B,0BACrC,0BAAA5D,OAAAspE,EAAA,cAAAtpE,GAAA+C,IAAA,cAAAkR,EAAAtV,GAAA,aACH,OAGQ,OADOowC,EAA4BnrC,EAAA+iB,OAA5CgmB,EAMCszK,EAAAlxK,IALe,qBACNpwC,wFAEqB,EAAAmD,KAAA,SAAA8B,0BAC3B,0BAAA5D,OAAAspE,EAAA,cAAAtpE,GAAAmrE,KAAA,cAAAl3D,EAAAtV,GAAA,YAAAyE,OAAAzE,KACH,OAGQ,OADOiF,EAAA+iB,OAAhBgmB,EAMCuyK,KALe,qBACFvgN,wFAEiB,EAAAmD,KAAA,SAAA8B,0BAC3B,0BAAA5D,OAAAspE,EAAA,cAAAtpE,GAAAw6D,OAAA,cAAAvmD,EAAAtV,GAAA,YAAAA,IACH,OAGQ,OADkBiF,EAAU+iB,OAArCgmB,EAKCuyK,KAJc,qBACXp4M,EAAA+L,2GAEA,OAAAjP,EAAAN,OACH,OAED,OAAgB2Q,EAAiBo7B,IAAkBp7B,UAOlD,GAAAjU,OAAAspE,EAAA,cAAAtpE,GAAA8E,IAAA,cAAAmP,EAAAtV,GAAA,CAAAmI,OAAA+L,WANQ,KAAM,6BACX,4GAIAvQ,EAAA,EAAAR,KAAA,SAAA8B,GACH,OAAAA,EAAAN,gJC1KD,SAAA87M,EAAAc,GAAA,IAAAt+M,EAAAE,KAAmC,gBAAA6qC,EAAA0C,GAAA,OAAA/sC,EAAA,EAAAV,OAAA,oBACZ,IAAAqS,EACc,OAAA3R,EAAA,EAAAR,KAAA,SAAA8B,GAErC,OAAAA,EAAAN,OACE,OAEA,OAFgB2Q,EAAAo7B,IAAAp7B,UAEhB,GAAAjU,OAAAspE,EAA0C,cAA1CtpE,GAA0CmrE,KAAA,cAAAl3D,EAAAtV,GAAA,WAAAuhN,aAClC,OAGJ,OAFEt8M,EAAW+iB,OACXgmB,EAAAwyK,KACY,mBAMhBE,EAAca,SACZp+M,YACC,SAAA6qC,EAAA0C,GAAA,OAAA/sC,EAAA,EAAAV,OAAA,oBAEH,IAAAqS,EAEA,OAAI3R,EAAyB,EAAAR,KAAA,SAAA8B,GAC3B,OAAAA,EAAWN,OACZ,OAEF,OADC2Q,EAAAo7B,IAAAp7B,UACD,GAAAjU,OAAAspE,EAAA,cAAAtpE,GAAAw6D,OAAA,cAAAvmD,EAAAtV,GAAA,WAAAuhN,IAED,OAKa,OAJPt8M,EAAW+iB,OAEJgmB,EAAQwyK,KAEL,mBAOhBG,EAAA3gN,OACEiD,EAAOE,KACT,OAAC,SAAA6qC,GAAA,OAAArqC,EAAA,EAAAV,OAAA,oBACH,OAAAU,EAAC,EAAAR,KAAA,SAAA8B,GAAA,OAAAA,EAAAN,0EAEK,KAAgB,SACPM,EAAA+iB,sCC/Cf,IAAA/kB,EAAAE,KACA,gBAAA6qC,GAAA,OAAArqC,EAAA,EAAAV,OAAA,oBACA,OAAAU,EAAgE,EAAAR,KAAA,SAAoB8B,GACpF,OAAAA,sICHA,oVCAYslB,QAAAmW,GACqC8gL,EAAAl5M,OAAA,IAEjDk5M,EAAaC,MAWAzjN,EAAwF,EAAAoB,IAAAsiN,EAAAriN,KAAAC,UAAAkiN,KACnGG,EAAa/9M,UAAAw5E,mBAAA,WACX,IAAAokI,EACExjN,EAAyB,EAAAoG,IAAAjB,KAAAy+M,kBAAA,KAczB,SAbEviN,KAAAoC,MAAA+/M,KAKEptJ,EAAclwD,EAAIyQ,OAGtB6sM,EAAA,SAAAn6D,GACH,OAAAjzF,EAAAlwD,EAAAqb,SAAA8nI,MASDs6D,EAAA/9M,UAAAg+M,cAAA,qFCpCF,SAAW57M,EAAAI,GAE8B,IAAAP,EAAA,kDAWeC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,EADxD,wxRAGAG,EAAAI,QAAAP,GAWyCg8M,KAAzC,SAAA77M,EAAAI,SACE,wFAOAJ,OAAA,MAAAC,IAAA,kBAA2B,SAAgBC,KAAAC,IAAAN,EAN3C,yvHAOMA,iBAMJG,EAAOI,mBAQPJ,EAAAzI,EAAAF,sBAOMA,EAAe,YAGb,UACSA,EAAeqhC,EAASjF,KAI1Cp8B,EAAC,UAIAA,EAAA,YAIe,QAwCnBykN,EAAC,SAAA78M,GAlFC,IAAAhG,EAAAgG,EAAAhG,KAAAqxD,EAAIrrD,EAAAqrD,QAAAyxJ,EAAA98M,EAAA88M,YAAiBvoL,EAAAv0B,EAAAu0B,QAAAuH,EAAA97B,EAAA87B,cACnBltB,EAAkB3P,EAAAmB,cAAe3E,EAAkB,SAAAoU,QAAAw7C,GACpDz8C,EAAA3P,EAAAmB,cAAA,UAAAH,UAAA,oCAAA68M,EAAAvoL,UAAAwoL,aAAA1xJ,EAAA,yDAAAz8C,EAAA3P,EAAAmB,cAAA3E,EAAA,SAAAoU,QAAAw7C,GAqDDz8C,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA,oCAAA68M,EAAAhhL,QACUltB,EAAA3P,EAAAmB,cAAA,IAAyB,CAAAH,UAAAjG,SAM/B5B,EAAA,QAmBJ4iH,EAAC5iH,EAAA,oBCvGH4kN,EAAa,SAAAl/M,GAE+C,SAAAm/M,IACtB,IAAAj/M,EAAA,OAAAF,KAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,YAE9BF,EAAAmmE,QAAA/nE,OAAA4+G,EAAA,EAAA5+G,GAC0C4B,EAAAulB,WAAAvlB,EAAAD,MAAAwvD,UAAApuD,IAAA,cAsBlDnB,EAAAk/M,wBAAA,SAAAlyJ,GAA6BhtD,EAAAmmE,QAAAw3C,eAAA3wD,GAG3BhtD,EAAAqjH,eAKArjH,EAAAotD,UAAA,WAEE,OADAptD,EAAAmmE,QAAAo3C,mBACAh5F,QAAA61D,aAGA+kI,WAAA,aACE55L,WAAOG,SAAA,cAAgB,IAE3B1lB,EAAEs3B,cAAA,WAEFt3B,EAAAulB,WAAUG,SAAA,sCAEK,SAAehoB,SACjBsC,EAAED,MAAUxE,UACNgvB,aACZ/uB,EAAA4jN,UAAA,QAAA1hN,EAAAW,IAAAK,GACJ2gN,EAAA/zF,EAAA,SAAAxzF,aAAAp6B,EAAAW,IAAAC,MAAAZ,EAAAW,IAAAC,KAAAZ,EAAAY,OAAMgtH,EAAA,SAAAxzF,aAAAp6B,EAAAW,IAAAK,IAAAhB,EAAAW,IAAAK,GAAAhB,EAAAgB,GACL4gN,EAAW,MACTD,KACAE,EAAS,OAAI/jN,EAAA4jN,SAAAI,KAEhBr5I,QAAAn/B,QAAAs4K,IAGHt/M,EAAAu3B,OAAA,WACEv3B,EAAAulB,WAAAG,SAAA,WAAe,IAGjB1lB,EAAAy/M,oBAAS,SAAAC,EAAAC,GACC,OAAAD,EAAAp+M,IAAA,SAAA6hB,GACF,OAAAA,EAAAzkB,KAAeihN,EAAcjhN,IAAAykB,EAAe7kB,OAACqhN,EAAArhN,KACtCqoB,EAAgB,KAAAxD,EAAA,CAAAuV,QAAA,IAG/B/R,EAAiB,KAAAxD,EAAA,CAAAuV,QAAA,gBArE6B/R,EAAA,EAAAs4L,EAAAn/M,UA0E5C6S,eAAAssM,EAAAt+M,UAAA,qBAEFQ,IAAA,WACQ,OAAAjB,KAAAH,MAAAorC,SAAEvqC,MAAAgjC,qBAGR,gBACE,MAECjjC,UAAAoB,OAAA,WACL,IAAExG,EAAA2E,KAAAH,MAAAxE,UAEFwxD,EAAAxxD,EAAiBgvB,WAAAC,kBACfo1L,EAAiB1/M,KAAIimE,QAAGzoE,YACxBk2B,EAAAr4B,EAAAgkJ,cAEF,OAAA3uI,EAAc3P,EAAGmB,cAAA,OAAAH,UAAA,gCACf2O,EAAK3P,EAAAmB,cAAmB3E,EAAA,YAAAgE,MAAAm+M,EAAAp9M,SAAAtC,KAAA2/M,mBAAAjsL,WAAAyD,eAAAn3B,KAAAi/M,WAAA7nL,cAAAp3B,KAAAo3B,cAAAC,OAAAr3B,KAAAq3B,OAAA1U,cAAA3iB,KAAAu/M,oBAAA7oL,EAAA,EAAAgpL,EAAAvhN,OACxBuS,EAAA3P,EAAAmB,cAAA3E,EAAA,eAAA0vD,kBAAAjtD,KAAAg/M,wBAAA9xJ,UAAAltD,KAAAktD,UAAA3rD,MAAAlG,EAAAqoC,QAAAmpB,YAAAM,QAAA,0BA7FS,GAiGJ,aAKLjzD,EAAmB,UAiBjB,SAAA0F,cAEIC,SACGD,EAAMG,KAAAC,KAAAH,IAAAG,kCAEL,aACE,EAAArE,KAAA,yCAMJ,aACkB,EAAAA,KAAA,gDAKtBmxF,QAAA,WAGLhtF,EAAAD,MAAA+mB,SAED9mB,EAAAD,MAAI85G,eAAA,CAAJj5G,MAAA,CAAAkmB,SAAA,MACS6+D,SAAU,IAClB3lF,EAAAD,MAAA85G,eAAA,CAEDj5G,MAAI,CAAA6hC,QAAA,KAAA8tB,KAAA,KAAAptB,WAAU,KAAArC,IAAA,MAAd6kD,SAAA,iCAECxV,EAAA,EAAAt0E,KAAA,sBAGCmE,EAAA8/M,OACE,WACE9/M,EAAAD,MAAAwvD,UACEpuD,IAAA,gBACEsmB,iBAOVznB,EAAA+/M,eAAA,WACQ//M,EAAAD,MAAA85G,eAAE,CACFj5G,MAAA,CAAAkmB,SAAE,YACA6+D,SAAA,OAIHq6H,gBAAK,WACL,IAAIh+M,EAAChC,EAAAD,MAAAxE,EAAAyG,EAAgCzG,UAAEyG,EAAAutD,UAEbpuD,IACzB,gBACEykJ,cAAArqJ,EAACwB,GAAAxB,EACC+B,KAAAk9E,WAAQp5E,KAAA,SAAAykJ,GAKVtqJ,EAAA+B,KAAAk9E,UAAAqrE,EAMA7lJ,EAAAqjH,kCAoBA,aAQD48F,YACCp3K,yBAYc,aASfo3K,YAAY/qM,yBAWb,WAQDlV,EAACigN,YAAUC,SAER78F,eAWZrjH,EAAAmgN,YAAC,WAhP4B,MAgP5BngN,EAAAD,MAAAwvD,UAAApuD,IAAA,qBAEKupF,EAAkBr1D,SAAC,EACfq1D,EAAQnvF,UAAQyE,EAAAD,MAAAxE,UACvB40E,EAAA,EAAAt0E,KAAA,cAEG4B,IAAA,oEACJmc,MAAc8wE,mEA3JR,EAAA01H,EAAAtgN,GChIwBsgN,EAAAz/M,UAAA0/M,iCAAA,WACb,IAAA9kN,EAAA2E,KAAAH,MAAAxE,mTCDnBqV,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA,0BAAAs0B,QAAAr2B,KAAAogN,mBAAAt3L,GACApY,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA,sDACA2O,EAAA3P,EAAAmB,cAAA,KAAAm0B,QAAgEr2B,KAAAqgN,ydCFnBp/M,IAAA,WACJ,OAAAjB,KAAAH,MAAA+mB,UAazCgwB,YAAA,EAAkCC,cAAA,MAAlCp2C,UAAA6/M,iBAAA,WACE,OAAA5vM,EAAQ3P,EAAAmB,cAAA,OAAAH,UAAA,eACN2O,EAAW3P,EAAKmB,cAAA3E,EAAA,SAAAoU,QAAA,iBAChBjB,EAAA3P,EAAAmB,cAAA,UAAAH,UAAA,wBAAAs0B,QAAAr2B,KAAA8sF,SAEFp8E,EAAkB3P,EAAAmB,cAAA,KAAAH,UAAA,2BAEhBtB,UAAKoB,OAAW,WAClB,IAAEC,EAAA9B,KAAAH,MAAAxE,EAAAyG,EAAAzG,UAAAklN,EAAAz+M,EAAAy+M,WAAAt1K,EAAAnpC,EAAAmpC,SAAAokB,EAAAvtD,EAAAutD,uFAkDHmxJ,EAAAnlN,EAAAmlN,SAhDCC,EAAAD,KAAAE,YACU,OAAAhwM,EAAA3P,EAAAmB,cAAA,MAA4B,CAAAH,UAAA,UAC5B/B,KAAA2gN,0BAAyB3gN,KAAAsgN,mBAC3BtgN,KAAAmgN,mCACAngN,KAAA+/M,YAAAa,WAAqBlwM,EAAgB3P,EAAAmB,cAAsB,OAAAH,UAAA,2CAC3D2O,EAAe3P,EAAAmB,cAAmBy8M,EAAE,CAAAxxJ,QAAA,2BAAAyxJ,YAAS,QAAA9iN,KAAa,sBAAyBu6B,QAAAr2B,KAAgB6gN,iBAGvGnwM,EAAA3P,EAAAmB,cAAAy8M,EAAA,CAAAxxJ,QAAA,gBAAAyxJ,YAAA,QAAA9iN,KAAA,aAAAu6B,QAAAr2B,KAAA8gN,iBACEpwM,EAAA3P,EAAAmB,cAAAy8M,EAAA,CAAAxxJ,QAAA,uBAAcyxJ,YAAc,QAAA9iN,KAAA,gBAAAu6B,QAAAr2B,KAAA+gN,+FAE1Bl7L,GAAAnV,EAAA3P,EAAAmB,cAAAy8M,EAAA,CAAAxxJ,QAAA,YAAiByxJ,YAAE,YAAA9iN,KAA8B,wBAAgBu6B,QAAiBkqL,OAChF7vM,EAAA3P,EAAAmB,cAAAy8M,EAAA,CAAAxxJ,QAAA,mBAAgByxJ,YAAW,OAAA9iN,KAAqBw+E,EAAA,4BAAAjkD,QAAAr2B,KAAA8/M,qBACtCpvM,EAAI3P,EAAAmB,cAAAy8M,EAAA,CAAAxxJ,QAAA,kBAAGyxJ,YAAU,QAAA9iN,KAAA,uBAE1Bu6B,QAAAr2B,KAAAigN,cACLp6L,GAAAnV,EAAA3P,EAAAmB,cAAAy8M,EAAA,CAAAxxJ,QAAK,iBAAUyxJ,YAAe,OAAA9iN,KAAA,aAAAu6B,QAAAr2B,KAAA4/M,SAC5Ba,GAAA/vM,EAAA3P,EAAAmB,cAAAy8M,EAAA,CAAAxxJ,QAAK,0BAAmByxJ,YAAA,kBAAA9iN,KAAA,mBAAA8hC,KAAA6iL,OACtB/vM,EAAA3P,EAAAmB,cAAAy8M,EAAA,CAAAxxJ,QAAA,qBAAiByxJ,YAAA,WAA0B9iN,KAAA,kBAAAu6B,QAAAr2B,KAAA6/M,oBACzC9+M,EAAAmB,cAAA,OAAAH,UAAA,uCACEhB,EAAAmB,cAAAy8M,EAAA,CAAAxxJ,QAAA,kBAAAyxJ,YAAA,KAAA9iN,KAAA,gBAAAu6B,QAAAr2B,KAAAghN,gCACE9vE,QAAAxgI,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,sBACAG,cAAA48M,EAAA,CAAAzvJ,UAAIA,EAAah0D,YAAsB4vC,SAAUA,EAAG0uE,eACjDnrB,EAAA,SHgFf,sCGrE+B,KAGftwF,OAAA4pI,EAAA,EAAA5pI,UARJ+B,GAAA,6BAQIy5G,EAAA,CAShBunG,GAxD4B/mN,EA0DjCC,EAAAC,EAAA,sBAAA8mN,wBCvED,IAAAx+M,EAAA,kEAEAC,OAAAC,QAAAC,uDADA,yKCDA,aACA3I,EAAAC,EAAAC,EAAgE,eAAoB,OAAA+mN,IACpF,iDCHAA,EAAA,SAAAvhN,GAAW,SAAWuhN,IAEf,IAASrhN,EAAsB,OAAbF,GAAaA,EAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,YACpCF,EAAQG,MAAS,CAClBmhN,WAAA,kHAJD5gN,EAAA,EAAA2gN,EAAAvhN,GCAAuhN,EAAA1gN,UAAAoB,OAAA,WACA,IAAAw/M,EAAArhN,KAAAH,MAAAwhN,aACAD,EAAAphN,KAAAC,MAAAmhN,UACAE,ytBCHuBr/M,EAAAlB,EAAAmB,cAAA,UAcvBD,EAAAlB,EAAAmB,cAAA,oCAMyBD,EAAAlB,EAAAmB,cAAA,MAAAyO,QAAA,GAAA0wM,EAAA36E,QAAA,mDACHzkI,EAAAlB,EAAAmB,cAAA,uBACED,EAAAlB,EAAAmB,cAAA,UAAAm/M,EAAAE,WACLt/M,EAAAlB,EAAAmB,cAAA,UACKD,EAAAlB,EAAAmB,cAAA,4CAETD,EAAAlB,EAAAmB,cAAA,UAAAo/M,IACCr/M,EAASlB,EAAAmB,cAAA,8DACCs/M,GAAAv/M,EAAMlB,EAAAmB,cAAOD,EAAElB,EAAAoQ,SAAA,KAAnBlP,EAAAlB,EAAAmB,cAAA,UAAAu/M,GACPx/M,EAAelB,EAAAmB,cAAA,kCF7B9B,iCE+BOW,EAAAI,oFAEYH,IAAG,2BAAAC,KAAAC,IAAAN,+2EAGfA,iBAMDG,EAAOzI,EAAAF,iCAOPwnN,KACCA,EAJkBxnN,EAAAC,EAAAC,EAAA,sBAAA80D,IACAh1D,EAAAC,EAAAC,EAAA,sBAAAunN,KAWtBC,KAED,SAAA/+M,EAAAI,wEAIGJ,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,+yCACFO,QAAAP,GAKHm/M,KAAC,SAAAh/M,EAAAzI,EAAAF,GAED,aACAA,EAAAC,EAAAC,EAAwD,sBAAA0nN,IAC/C,IAAgBthN,EAA8CtG,EAAA,QAChDumE,EAASvmE,EAAA,QACV+2D,EAAmD/2D,EAAAqhC,EAAAklC,KAGpD,oBACdshJ,EAAApsM,OACF0Q,EAAAvkB,EAAAspB,EAAAvW,EAIH,QAJSnJ,QAAQ,QACbs2M,UAAA,QACDr2M,KAAA,GACF3L,KAAA+T,KAAA,QACM4B,EAAA,CACR,GAAAA,EAAAjK,QAEe,IAA8D,QAAAqJ,EAAAvU,EAAA,EAAAmV,EAAAjK,SAAAkK,EAAAb,EAAAC,QAAAY,EAAAX,KAAAW,EAAAb,EAAAC,OAAA,CAAvB,IAAAhI,EAAA4I,EAAArU,MAAAvB,KAAAk7J,UAAuBluJ,IAGxE,MAAUwuE,GAAcn1D,EAAA,CAAAgP,MAAAmmD,GACnB,QACR,IACD5lE,MAAAX,OAAAnT,EAAAiT,EAAmD0mE,SAAA35E,EAAA/B,KAAAgV,GAE3C,QAAgB,GAAIsR,EAAA,MAAAA,EAAegP,OAG1C,GAAA1f,EAAAhK,KAED,IACiB,IAA8B,IAAAs4B,EAAAzjC,EAAA,EAAAmV,EAAAhK,MAAA+1F,EAAAz9D,EAAAjvB,QAAA0sF,EAAAzsF,KAAAysF,EAAAz9D,EAAAjvB,OAAA,CAE/C,IAAA9H,EAAAw0F,EAAiCngG,MACZvB,KAAMiiN,OAAM/0M,IAIvB,MAAA0uE,GAAgBxwD,EAAM,CAAAiK,MAASumD,GACjC,QACI,IACL8lB,MAAAzsF,OAAAJ,EAAAovB,EAAAw3C,SAAA5mE,EAAA9U,KAAAkkC,GAEQ,WAAA7Y,EAAA,MAAAA,EAAAiK,gBAQf0sL,EAAMthN,UAAiBwP,KAAG,SAAW/I,GAErC,OAAAA,EAAA8F,KAAAhN,KAAA0L,QAAAvG,QAAA+B,EAA2D8F,MAIvDhN,KAAA2L,KAAOsE,KAAK,SAAQlP,EAAAmP,WAIN,OAHZnP,EAAMA,EAAAmG,EAAU8F,SAGW,OAF3BkD,IAAAhJ,EAAA8F,UAE6BjM,EAAAmP,MAAAnP,EAAAmP,KAE7BhJ,EAAQ+3J,MACPj/J,KAAA2L,KAAA+G,UAGL1S,KACA0L,QAAAxE,EAAA8F,KAAAiD,MAAA,EAEFjQ,KAAA0L,QAAAxE,EAAA8F,KAAAiyJ,KAAA/3J,EAAA+3J,OAGA8iD,EAAMthN,UAAgBy6J,UAAa,SACjCluJ,GACOhN,KAAAgiN,UAAWh1M,EAAQnR,QACtBmE,KAAA0L,QAAAkE,KAAA5C,GACAhN,KAAIgiN,UAASh1M,EAAAnR,MAAamR,gBAGxBi1M,OAAA,SAAA/0M,aACA0C,KAAM1C,MAzEK,cAgFNxB,EAAAwB,EAAAg1M,cACF,IACD,EAAAzkD,EAAA/xJ,EAA6BvG,OAAAs4J,YAClBx3J,eAAoBA,IAAXi8M,EAAWzkD,SAC/BA,KAAAykD,EAAAzkD,UACA,YAEAx3J,MAAAw3J,SAA+Bx3J,IAAAi8M,EAAAzkD,QACzB,qBAKZqkD,EAAWK,GAKf,IAJE,IACAtrJ,EACA,GAEIhtB,EAAO,EAAGA,EAAApgB,UAAatkB,OAAA0kC,IAC7BgtB,EAAUhtB,EAAG,GAAApgB,UAAcogB,GAE5B,IAAAxtC,EAAA8lN,GAAA,IAAAJ,+YCpLqDK,EAAAvrJ,EAAA7mC,OAAA,SAAA+gB,EAAA3pC,EAAA0gD,GACkB,IAAAsO,EAAAisJ,EAAAv6J,GASrE,OAPI1gD,EAASuE,KAAA4nD,QAAgB,SAAwBrmD,GACjD,IAAMo1M,EAAM,GAEblsJ,EAAM7C,QAAO,SAAA/0D,EAAAJ,GACdkkN,EAAA9jN,GAAA0O,EAAA9O,KACC2yC,EAAAnhC,KAAM0yM,KAETvxK,GAED,MAEW,GACTwxK,EAAEH,EAAApyL,OAAA,SAAA+gB,EAAA7jC,EAAAmvG,GACH,IAAAmmG,EAAAnmG,GAAA,CAKG,IAFA,IAAMz6F,EAASy6F,EAAA,EAERz6F,EAASwgM,EAAaj9M,QAAQ,CAExC,IAAA4W,EAAAk1C,EAAAlwD,EAAAnE,UAAAwlN,EAAA,SAAAF,GAAA,OAAAO,EAAAC,EAAAx1M,EAAAg1M,IAAAtgM,GAED,KAAA7F,GAAA,GCvBmG,UDwB5F,IAAC4mM,EAAkBP,EAAMrmM,6ECrBqBg1B,EAAAnhC,KAAA1C,GAGC,OAAA6jC,GAM3C,WAEb10C,EAAAqP,QAAAg3M,EAYErmN,EAAAsP,KAAA42M,IFgImBnoN,EAAiB,mBE7H9ByI,EAAOzI,EAAAF,sBAMPA,EAAQ,UAGRA,EAAiB,UAGZA,EAAgB,YAGH,UACnBA,EAAAqhC,EAAA51B,KAGAzL,EAAA,UACWA,EAAAqhC,EAAAyO,cAGTzoC,EAAAoS,6FACFI,OAAAqa,EAAA,EAAAnb,OACF,SAAA1R,GAED,OAAAqpH,WAAArpH,aAIW6sB,EAAkB,EAAAjb,QAC1B,SAAA5R,GACA,cAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,cAILA,GAAA,OAAAA,qBAKcrH,EAAS,QAGlBA,EAAAC,EAAAC,EAAA,sBAAAwoN,IACJ1oN,EAAAC,EAAAC,EAAA,sBAAAyoN,UAUI,OACF,oBAEGhrK,EAAcozB,EAAA63I,GAElB,IAAIz8L,EAAKvkB,EACPhC,EAAOE,KAWT,QAVC8T,OAAA,QAAMxF,OAAA,QACL0Q,MAAS,IAAIzM,EAAyB,OAErCuwM,oBAEQtwM,GACR,WAAAD,EAAA,EAAAC,IAICy4D,EAAQ,CACR,IAACjmE,EAAMimE,EAAAjmE,KAAAmQ,EAAA81D,EAAA91D,OAAAE,EAAA41D,EAAA51D,MAAAjY,EAAA6tE,EAAA7tE,KAAA0W,EAAAm3D,EAAAn3D,OAaT,GAZI9O,IACFhF,KAAIgF,KAAQA,OAEZhF,KAAImV,OAAGA,GAEVE,IAEKrV,KAAsBqV,SAEtBjY,IACJ4C,KAAS5C,KAAOA,GAEhB0W,EAEM,IACC,QAAA+B,EAAA4Q,EAAA,EAAA3S,GAAuBgC,EAAOD,EAAAb,QAAAc,EAAAb,KAAAa,EAAAD,EAAAb,OAAA,CAC3B,IAAAe,EAAAD,EAAAvU,MACFvB,KAAO6uB,SAAK9Y,IAIjB,MAAOylE,GAAYn1D,EAAA,CAAAgP,MAAAmmD,GACnB,QAEL,IACoB1lE,IAAGA,EAAAb,OAAAnT,EAAA+T,EAAA4lE,SAAA35E,EAAA/B,KAAA8V,GAEtB,WAAAwQ,EAAA,MAAAA,EAAAgP,QAKDn3B,OAAIuU,eAAazS,KAAA,UACf42C,YAAY,MACV,WACD,OAAA92C,EAAAkf,MAAA7Z,wBAGFsN,eAAAolC,EAAAp3C,UAAA,UAGFQ,IAAA,WAED,OAAAjB,KAAAgf,MAAA7Z,QACEyxC,YAAA,EACAC,cAAe,MAETp2C,UAAAsiN,YAAA,SAAAxhN,EAAAyD,yBAENA,QAAA,GACA+O,KAAoB7V,OAAA+zB,EAAW,EAAX/zB,CAAWqD,QAE3Bd,UAAMouB,SAAW,SAAe9Y,EAAA+Y,cACjC7oB,IACFqI,mEACFyF,GAAA,SAAAgC,EAAA/Q,MAAA,SAAA+Q,EAAA/Q,OAGmB+O,GAAAvB,KAAArN,SAAb4O,EAAS7V,OAAA+zB,EAAA,EAAA/zB,CAAAsU,EAAA,aAGC,EAAAiB,QAJTM,EAAAqa,EAAA,EAAmB5a,WAQxBuC,EAAA/Q,gHACF,IAAA2O,EAAA,CAED3O,cAEGyP,OAAAsB,EAAAtB,QAAA,GACHnG,OAAAtO,KAAA8iN,QAAAtwM,IAQG,mBAPDuB,EAAgB7V,OAAA+zB,EAAW,EAAX/zB,CAAWyV,MACzBA,EAAEI,KAAOA,6JAEZ/T,KAAAsO,OAAAtJ,GAAA2O,EAAArF,OAIEwgB,EACH,KAAAnb,EAAArF,OAAAnJ,OAAS2pB,GACPnb,EAAArF,OAAAxI,IAAwB88M,aAIpB5zL,kBAEHrb,KAGQlT,UAAYuuB,SAAA,eACnB5D,EAAKtpB,IAEE9B,KAAE8T,OAAUkc,OAAI,SAAKhqB,EAAA+P,eACtB9N,IAAIjC,EAAG+P,EAAAzH,OAAAnJ,gBAKf,IAAS,IAAI0P,EAAI4R,EAA4B,EAAAzmB,KAAA8T,QAAAiB,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAEvC,IADE,IAAIrB,EAAKoB,EAAMxT,MACVoS,EAAIrF,OAAAnJ,YACTwO,EAAIrF,OAAKxI,IAAA88M,YAIPx3L,EAAQ,CAACiK,MAAAumD,WAEjB,IACD7mE,MAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAGH,WAAAuW,EAAA,MAAAA,EAAAiK,SAGAwiB,EAAAp3C,UAAAuiN,oBAAY,SAAEzhN,WACZ,IACE,IAAK,IAAAsT,EAAA4R,EAA2B,EAAAvoB,OAAAgH,KAAA3D,IAAAwT,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CACjC,IAAA1O,EAAAyO,EAAAxT,MAEDvB,KAAAsO,OAAAhI,IACYtG,KAAa6uB,SAAA,QACL9a,KAAA7V,OAAA+zB,EAAW,EAAX/zB,CAAWqD,EAAA+E,gBAKzB2oB,EAAM,CAAAoG,MAAQusE,eAGjB7sF,MAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,WAGC,GAAMoa,EAAA,MAAAA,EAAcoG,6JAQxB,QACE,IACDtgB,MAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAGC,QAAK,GAAAkX,EAAA,MAAoBA,EAAAsJ,WAKpB50B,UAAQ4T,UAAc,SAAOnH,4HAErC,IAAA9G,EAAA,EAAAA,EAAApG,KAAA8T,OAAA3O,OAAAiB,IAAA,EAED2P,EAAA/V,KAAA8T,OAAA1N,+BAEG2P,EAAAhC,KAAA7V,OAAA+zB,EAAA,EAAA/zB,CAAAgP,EAAA9G,uCAGD,IAAA2P,EAAoB/V,KAAA8T,OAAA1N,GAAfJ,EAAMkH,EAAA9G,GACT2P,EAAEhC,OAAMqa,EAA8B,EAAAhb,QAAA6vM,IAAAj9M,KACvC+P,EAAAzX,wDAIHu5C,EAAAp3C,UAAAqF,IAAA,SAAAvE,EAAA2hN,GACE,IAAAjhH,EAAOngG,EACRohN,GAEDljN,KAAAgjN,oBAAAzhN,GAGA,IAAAqE,EAAArE,EACE,IACD,QAAAsT,EAAA4R,EAAA,EAAAzmB,KAAA8T,QAAAiB,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CACH,IAAArB,EAACoB,EAAAxT,MAAA+D,EAAAM,EAAA+N,EAAA3O,8FCzRD2O,EAAArF,OAAAxI,IAAAR,uGCDAuyC,EAAAp3C,UAAAxE,IAAA,SAAAS,EAAA6E,EAAA2hN,GAAA,IAAA32L,EAAAzqB,EAAQ,GAAApF,EAAAsD,KAAAmF,OAC0E,UAAAiR,MAAA,6CAQnD8sM,GACrBljN,KAAGgjN,oBAAczhN,GAEnB,IAAAqE,EAASrE,GAAU,GACrB,IACF,IAAM,IAAIsT,EAAM4R,EAA2B,EAAAzmB,KAAA8T,QAAAiB,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CAC5C,IAAArB,EAAAoB,EAAAxT,MAEKoS,EAAcrF,OAAArS,IAAAS,EAAkBkJ,EAAA+N,EAAA3O,QAKtC,MAAUy9F,GAAUl2E,EAAM,CAAE8I,MAAKotE,GAC/B,QACI,IAEM1tF,IAAMA,EAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,WAEZ,GAAS0X,EAAA,MAAAA,EAAA8I,WAOb50B,UAAoBQ,IAAA,SAAAqwB,GACpB,IAAI6xE,EAACrhG,EACHkE,EAAA,OAGF,IAAM,IAAO6O,EAAK4R,EAAC,EAAAzmB,KAAA8T,QAAAiB,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CACpB,IAAArB,EAAAoB,EAAAxT,MACWyE,EAAC2N,EAAA3O,MAAA2O,EAAArF,OAAArN,IAAAqwB,qCAOZvc,MAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAEI,QAAU,GAAKsuF,EAAM,MAAOA,EAAA9tE,OAEhC,OAAArvB,GAGD6xC,EAAmBp3C,UAAUkS,QAAC,WACxB,OAAKzU,OAAGmhE,EAAiB,EAApBnhE,CAAoB8B,iEF+B5B,iGGjFL2C,OAAYC,QAMXC,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,EAXgD,whCAKjDG,EAAAI,QAAYP,GAIVygN,KACA,SAAAtgN,EAAAzI,EAAAF,GA2BK,aACaA,EAAaC,EAAAC,EAAA,sBAAAqkB,IAClBvkB,EAAAC,EAAAC,EAAA,sBAAAgpN,IACZ,IAAApnG,EAAA9hH,EAAA,iBAIDukB,EAAc3c,GAFqE,IAGlFoyC,EAAApyC,EAAAoyC,OAAAC,EAAAryC,EAAAqyC,OAAAvkB,EAAA9tB,EAAA8tB,cAEGyzL,EAAAnvK,EAAgB5lC,OAChBg1M,EAAEnvK,EAAA7lC,OACNnJ,EAASk+M,EAAOl+M,OAFkD,GAGjEm+M,EAAAn+M,WAEG,UAAAiR,MAAoB,2BAMxB,IAN6D,IAE5DsJ,EAAAkQ,IAAAosF,EAAA,cAAAlsF,OAEGnQ,EAAAiQ,IAA0BosF,EAAiE,cAAAjsF,OAC3FwzL,EAAE,GACGn9M,EAAA,EAAAA,EAAUjB,EAAAiB,IAAA,CAClB,IAAAoE,EAAA64M,EAAApiN,IAAAmF,GAWaqE,EAAA64M,EAAAriN,IAAWmF,GAA3B,UAAAqE,EAKC,CAJQ,GAAAiV,gCAGL9P,KAAA,CAAApF,EAAAC,IAGG,OAAS84M,aAEHC,EAAArkM,gBACHA,EAAA3gB,KAAiBglN,GAAkC,IAAvBA,EAAYr+M,wBACxC/G,KAAA6yC,iBACNA,4GCpFJ/2C,EAAAC,EAAAC,EAAA,sBAAAqpN,IACAvpN,EAAAC,EAAAC,EAAA,sBAAAspN,IACAxpN,EAAAC,EAAAC,EAAgE,eAAoB,OAAAupN,+ECFpFx5K,EAAA,2BACAA,EAAA,8CACAA,EAAA,kDACAA,+KCHAp2B,KAAAo2B,EAAAy5K,sBAAAn5K,QAAA/pC,IAAAmjN,EAAA,SAAAl0M,GAAA,OAAAoE,KAAAo2B,EAAA25K,YAAAr5K,QAAA96B,IAAAo0M,EAAA,kBAAAhwM,KAAAo2B,EAAA65K,uBAAAC,EAAA,SAAA/7I,GAAA,OAAAn0D,KAAAo2B,EAAA+5K,uBAAAz5K,QAAAy9B,IAAA,SAAAy7I,IAAA,IAAA7jN,EAAAE,KAAA,gBAAA6qC,GAAA,OAAArqC,EAAA,EAAAV,OAAA,wBAAAqB,EAAA,OAAAX,EAAA,EAAAR,KAAA,SAAA8B,GAAA,OAAAA,EAAAN,OAAA,gBAAAtD,OAAAspE,EAAA,cAAAtpE,GAAA+C,IAAA,eAAA+kJ,SAAA,mBAAA7kJ,EAAAW,EAAA+iB,OAAAgmB,EAAAg5K,EAAA1iN,IAAA,mBAAAgjN,IAAA,IAAArkN,EAAAE,KAAA,gBAAA6qC,EAAA0C,GAAA,OAAA/sC,EAAA,EAAAV,OAAA,wBAAAskN,EAAAn3K,EAAA,OAAAzsC,EAAA,EAAAR,KAAA,SAAA8B,GAAA,OAAAA,EAAAN,OAAA,cAAAqpC,EAAAk5K,KAAAK,EAAA72K,IAAAD,YAAAH,WAAAp5B,KAAA,GAAA7V,OAAAspE,EAAA,cAAAtpE,GAAA+C,IAAA,eAAAmjN,EAAA,8BAAAn3K,EAAAnrC,EAAA+iB,OAAAgmB,EAAAo5K,EAAAh3K,IAAA,YAAAo3K,KAAA,SAAAxhN,EAAAI,GAAA,IAAAP,EAAA,4EAAAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,EAAA,2mDAAAG,EAAAI,QAAAP,GAAA4hN,KAAA,SAAAzhN,EAAAI,GAAA,IAAAP,EAAA,2EAAAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,EAAA,80JAAAG,EAAAI,QAAAP,GAAA6hN,KAAA,SAAA1hN,EAAAzI,EAAAF,GAAA,aAAAA,EAAA6O,EAAA3O,GAAA,IAAAoqN,EAAAtqN,EAAA,QAAAA,EAAAC,EAAAC,EAAA,iCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,4BAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,mCAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,sCAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,4BAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,2BAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,oCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,kCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,2BAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,gCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,wCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,qCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,sCAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,iCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,8BAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,8BAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,oCAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,uCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,gCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,sCAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,6CAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,sDAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,sCAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,qCAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,wCAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,2BAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,sCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,6BAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,iCAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,+BAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,gCAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,0BAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,gCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,kCAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,+BAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,oCAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,yBAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,gCAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,0BAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,kCAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,6BAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,0BAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,0BAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,gCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,oCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,6BAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,gCAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,kCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,uCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,wCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,+BAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,gCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,+BAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,oCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,sCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,0BAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,uCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,0CAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,6BAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,8BAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,4BAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,oCAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,sCAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,iCAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,qCAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,wCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,qCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,gCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,oCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,qCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,qCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,uCAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,mCAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,oCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,yCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,+BAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,2CAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,sCAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,0CAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,kCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,iCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,kCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,uCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,gCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,2BAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,+BAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,uCAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,0CAAAoqN,EAAA,IAAAtqN,EAAAC,EAAAC,EAAA,0CAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,wDAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,qDAAAoqN,EAAA,KAAAtqN,EAAAC,EAAAC,EAAA,kDAAAoqN,EAAA,SAAAl9F,EAAAptH,EAAA,gBAAAypE,KAAA2jD,EAAA,oiDAAAxgH,QAAA68D,GAAA,YAAAr9D,GAAApM,EAAAC,EAAAC,EAAAkM,EAAA,kBAAAghH,EAAAhhH,KAAA,CAAAq9D,GAAA,IAAA8gJ,EAAAvqN,EAAA,QAAAA,EAAAC,EAAAC,EAAA,iCAAAqqN,EAAA,IAAAvqN,EAAAC,EAAAC,EAAA,yCAAAqqN,EAAA,IAAAvqN,EAAAC,EAAAC,EAAA,8BAAAqqN,EAAA,IAAAvqN,EAAAC,EAAAC,EAAA,4BAAAqqN,EAAA,IAAAvqN,EAAAC,EAAAC,EAAA,4BAAAqqN,EAAA,IAAAvqN,EAAAC,EAAAC,EAAA,kCAAAqqN,EAAA,IAAAvqN,EAAAC,EAAAC,EAAA,gCAAAqqN,EAAA,IAAAvqN,EAAAC,EAAAC,EAAA,gCAAAqqN,EAAA,IAAAvqN,EAAAC,EAAAC,EAAA,2BAAAqqN,EAAA,IAAAvqN,EAAAC,EAAAC,EAAA,oCAAAqqN,EAAA,IAAAvqN,EAAAC,EAAAC,EAAA,mCAAAqqN,EAAA,IAAAvqN,EAAAC,EAAAC,EAAA,2CAAAqqN,EAAA,IAAAvqN,EAAAC,EAAAC,EAAA,oCAAAqqN,EAAA,IAAAvqN,EAAAC,EAAAC,EAAA,iCAAAqqN,EAAA,IAAAvqN,EAAAC,EAAAC,EAAA,oCAAAqqN,EAAA,IAAAvqN,EAAAC,EAAAC,EAAA,6CAAAqqN,EAAA,IAAAvqN,EAAAC,EAAAC,EAAA,6BAAAqqN,EAAA,IAAAvqN,EAAAC,EAAAC,EAAA,mCAAAqqN,EAAA,IAAAvqN,EAAAC,EAAAC,EAAA,kCAAAqqN,EAAA,IAAAvqN,EAAAC,EAAAC,EAAA,kCAAAqqN,EAAA,IAAAvqN,EAAAC,EAAAC,EAAA,sCAAAqqN,EAAA,IACwBvqN,EAAAC,EAAAC,EAAA,2BAAAqqN,EAAA,IAECvqN,EAAAC,EAAAC,EAAA,iCAAAqqN,EAAA,owBCHbvqN,EAAAC,EAAAC,EAAA,0CAAAqqN,EAAA,IAE0DvqN,EAAAC,EAAAC,EAAA,yCAAAqqN,EAAA,IAEnDvqN,EAAAC,EAAAC,EAAA,uCAAAqqN,EAAA,IAW6EvqN,EAAAC,EAAAC,EAAA,yCAAAqqN,EAAA,6CAY3DvqN,EAAoDC,EAAAC,EAAA,uCAAAqqN,EAAA,IAE1EvqN,EAAAC,EAAAC,EAAA,SACF,WACT,OAAAqqN,EAAA,IAIsBvqN,EAAAC,EAAAC,EAAA,iCAAAqqN,EAAA,IAENvqN,EAAAC,EAAAC,EAAA,YAAmB,WAAK,OAAAqqN,EAAA,IAE9BvqN,EAAAC,EAAAC,EAAQ,sBAAuB,WAAM,OAAAqqN,EAAA,IAE7BvqN,EAAAC,EAAAC,EAAA,gDAAAqqN,EAAA,IAEV,IAAAC,EAAAxqN,EAAA,QAEWA,EAAAC,EAAAC,EAAA,gBACnB,kBAAAsqN,EAAoB,IAGpBxqN,EAAAC,EAAAC,EAAA,iCAAAsqN,EAAA,IAGmBxqN,EAAIC,EAAAC,EAAA,uBAAiB,OAAAsqN,EAAA,IAEjCxqN,EAAAC,EAAAC,EAAA,8BAAAsqN,EAAA,IAEPxqN,EAAAC,EAAAC,EAAA,6BAAAsqN,EAAA,IAGHxqN,EAAAC,EAAAC,EAAA,uCAAAsqN,EAAA,uHAkBU7hN,EAAIzI,EAAAF,gBAKYA,EAAMC,EAAAC,EAAA,sBAAA60G,IAG9B/0G,EAAAC,EAAAC,EAAA,sBAAAuqN,IAEsBzqN,EAA0BC,EAAEC,EAAa,sBAAAwqN,IAC9D,IAAApkN,EAAAtG,EAAgE,QAChE2qN,EAAA3qN,EAAK,QACE4qN,EAAA5qN,EAAoB,QACb6qN,EAAM7qN,EAAkD,QACnE8qN,EAAA9qN,EAAA,QAEc+qN,EAAc/qN,EAAA,QAIhBgrN,EAAUhrN,EAAA,QACvBirN,EAAAjrN,EAAA,QACckrN,EAAAlrN,EAAA,QAChBmrN,EAAAnrN,EAAc,QACZorN,EAAGprN,EAAA,QAKJqrN,EAAArrN,EAAA,QACDsrN,EAAqDtrN,EAAA,QACrDurN,EAAmEvrN,EAAA,wBAyDpE,IAAA+F,EAAA,CACI6jC,UAAS,8BACT18B,OAAA,GACH+mG,QAAUA,EACX3wG,UAAA2wG,EAAAhvF,yBAKO+E,QAAS/e,+CAEflF,MAAAwlN,EAA6B,aAAAC,YACTb,EAAA,GAAA5kN,EAAA6jC,eAatBs+E,aAMSz9F,EAAAwpF,OACRw3G,EAAAhhM,EAAAjkB,MAAAytG,GAED,OAAAjwG,OAAA8mN,EAAmD,EAAnD9mN,CAAmDynN,GArB1CC,CAAcjhM,EAAAwpF,GAAAL,iLAjDrB+3G,EAAA5lN,GACH,IAAAkuG,EAAAluG,EAAA6jC,UAAAqqE,QAEM23G,EAAStlN,EAAoE,KAAAP,EAAA6lN,SAClFA,EAAMD,EAASv/M,KAAG,KAAWu/M,EAE9B,IAAA1mM,EAAA3e,EAAA,KAAA2tG,EAAAhvF,OAEM3hB,EAASU,OAAkB+mN,EAAQ,SAA1B/mN,CAA0BihB,EAAAhhB,IAAAC,MAClC,CAEDA,KAAMqnN,EAAS,SAAAnnN,MAAA6gB,EAAAhhB,IAAAC,MAAA,GACdI,GAAAinN,EAAkD,SAAAnnN,MAAA6gB,EAAAhhB,IAAAK,IAAA,GACpDL,IAAAghB,EAAShhB,KAGXghB,EACA4mM,EAAU7nN,OAAS+mN,EAAA,QAAT/mN,CAASA,OAAA+mN,EAAA,IAAA/mN,CAAA4nN,EAAA,SAAAD,UACjBA,EAAUr9M,eAKLs9M,QAASA,EAAShiL,UAJd,OACT+hL,EAAU5lN,OAAMwlN,EAAa,aAAAC,YAC9BK,UAAU53G,YACF3wG,8BA+BV2nN,EAAA,YAAA/tH,kGAQDgrB,IACI,WACFlkH,OAAKsnN,EAAY,EAAjBtnN,GAAiB+hH,wBAAAmC,EAAAtC,6BALd,OAAS5hH,OAAA4mN,EAA0D,EAA1D5mN,CAA0DA,OAAA6mN,EAAA,EAAA7mN,CAAA,KAAA4vG,KAAA5vG,OAAAonN,EAAA,EAAApnN,CAAA+B,EAAA6jC,WAAA5lC,OAAAqnN,EAAA,EAAArnN,CAAA8nN,OAiB1E,SAACC,EAAA7uH,yHC7MDj4D,EAAA9J,EAAA8J,QAEA9J,EAAA7sB,MAAA6sB,EAAA7sB,KAAA22B,QACAA,EAAA9J,EAAA7sB,KAAA22B,QAEA9J,EAAA7sB,MAAA6sB,EAAA7sB,KAAA6sB,MACA8J,EAAA9J,EAAA7sB,KAAA6sB,MAEAA,EAAAsqF,SACAxgF,EAAA,gBAAA9J,EAAAsqF,OAAA,IAAAtqF,EAAAkrF,YAEAlrF,EAAA8J,UAEA,OAAA9J,EAOA,SAAAsvL,EAAA9yL,eAEA,IAAA3zB,OAAe+mN,EAAY,QAA3B/mN,CAA2B2zB,YAG3B,IAAAiiB,EAAA,GACA,oDAEA,IAAA3yC,EAAAm6E,EAAA/5E,4DAEA,IAEA,QAAAwT,GAAAqW,OAAA,EAAA5qB,EAAA,EAAA4tB,EAAAta,SAAA8B,EAAAb,EAAAC,QAAAY,EAAAX,KAAAW,EAAAb,EAAAC,OAAA,SAEAma,MAAA,MAGA,MAAAysD,GAAAxwD,EAAA,CAAAiK,MAAAumD,GACA,QACA,IACAhmE,MAAAX,OAAAJ,EAAAE,EAAA0mE,SAAA5mE,EAAA9U,KAAAgV,+BAIA++B,EAAAlkC,KAAAwe,IAGA,MAAAotD,GAAAn1D,EAAA,CAAAgP,MAAAmmD,WAEO,wCAGP,WAAAn1D,EAAA,MAAAA,EAAAgP,gCAKG,IAAAjuB,EAAAoB,EAAApB,OAEF,OAAAoB,EAAAvI,QAAgBwlN,EAAA,aAAAvrG,SAAA,IAAA9yG,EAAAjC,QACjB6pG,IACAA,EAAAxmG,GAEAhI,EAAA,KAAAwuG,EAAA,CAAA/uG,MAAAwlN,EAAA,aAAAvrG,WAGA15G,EAAA,KAAAgI,EAAA,CAAApB,OAAAu9M,EAAAv9M,OAMA8+M,KACA,SAAArjN,EAAAI,IAsBA,SAAA8D,GAEA,aAMAA,EAAA,eAIAo/M,0BAAA,WAEA,IAOAnhN,EAPAk/I,EAAAplJ,SAAAoD,cAAA,aACAkkN,EAAA,CACSC,iBAAA,sBACTC,cAAA,4DAEAnxJ,WAAA,iBAIA,IAAAnwD,KAAAohN,EACA,QAAAngN,IAAAi+I,EAAApnH,MAAA93B,GACA,OAAAohN,EAAAphN,GAbA,MAoBA8jC,IAAAq9K,KAhCA,CAuCAxjN,OAAA2N,QAoBA,SAAAvJ,GAEA,aAyBA,IAAA6yE,EAAA,yBACA2sI,EAAA,SAAAv8L,GACA,IAAAw8L,EAAAz/M,EAAAijB,GAAAxQ,GAAA,0BAAAxZ,KAAA45E,0DAEA4sI,EAAA/xI,SAAAhJ,YAAA,WA6EA,SAAAg7I,IACA1/M,EAAA,sBAAAm5C,SACAn5C,EAAA6yE,GAAAjgD,KAAA,WACAszG,EAAAlmI,EAAA/G,OAAAyrE,YAAA,wBAKA,MAAAunI,EAAe9hF,EAAApmH,KAAY,eAa3B,OAVAkoM,IAGAA,GAFAA,EAAA9hF,EAAApmH,KAAA,UAEA,YAAAvE,KAAAysM,MAAAn1M,QAAA,uBAGAizE,EAAAkiI,GAAAjsM,EAAAisM,KAEAliI,EAAA3rE,SAAA2rE,EAAAogD,EAAAz8C,UAEA3D,EA9FAy1I,EAAA9lN,UAAA,CAEAoqM,YAAK0b,qBAGL,IACAz1I,EACAnI,EAFAuoD,EAAAnqH,EAAA/G,MAIA,IAAAkxH,EAAAC,GAAA,+BAIAxoD,GAFAmI,EAAAm8D,EAAA/b,IAEAw1F,SAAA,QAEAD,IAEA99I,+CAGA5hE,EAAA,oCAAA4/M,aAAA5/M,EAAA/G,OAAAwZ,GAAA,QAAAitM,wCAUA94I,QAAA,SAAAj1C,GACA,IAAAw4F,EACA01F,EAEK91I,EACLnI,sCAKAuoD,EAAAnqH,EAAA/G,yBAGA04B,EAAArE,mBAEA68F,EAAAC,GAAA,+BAIAxoD,WAAA+9I,SAAA,2BAIA,OADA,IAAAhuL,EAAAI,OAAAg4C,EAAAlmE,KAAAgvE,GAAA13D,QACAgvG,EAAA//D,SAGAy1J,EAAA7/M,EAAA,yCAAA+pE,IAEC3rE,SAEDzI,EAAAkqN,EAAAlqN,MAAAkqN,EAAAp1M,OAAA,WAEA,IAAAknB,EAAAk1C,SAAAlxE,EAAA,GAAAA,IACA,IAAAg8B,EAAAk1C,SAAAlxE,EAAAkqN,EAAAzhN,OAAA,GAAAzI,KACAA,MAAA,GAEAkqN,EACAC,GAAAnqN,GACAwlB,gCAmCAnb,EAAA2hD,GAAAsgD,SAAA,SAAA/lF,GACA,OAAAjjB,KAAA25B,KAAA,yBAEAnxB,EAAA0oH,EAAA1oH,KAAA,gDAEA,iBAAAya,GAAAza,EAAAya,GAAAljB,KAAAmxH,MAIAnqH,EAAA2hD,GAAAsgD,SAAAooB,YAAAm1F,EAMAx/M,EAAA2hD,GAAAsgD,SAAA89G,WAAA,kBACA//M,EAAA2hD,GAAAsgD,SAAA0I,QAQA3qG,EAAAjI,UACA0a,GAAA,0BAAAitM,GACAjtM,GAAA,oDAAAkf,KAAArE,uEAEA7a,GAAA,4BAAAogE,EAAA,gBAAA2sI,EAAA9lN,UAAAktE,SAtKA,CAwKAhrE,OAAA2N,iCA6BA,IAAAy2M,EAAA,SAAA/8L,EAAA9iB,GACAlH,KAAAkH,UACAlH,KAAAutE,SAAAxmE,EAAAijB,oFAEAhqB,KAAAkH,QAAA8/M,QAAAhnN,KAAAutE,SAAA3iE,KAAA,eAAAmf,KAAA/pB,KAAAkH,QAAA8/M,SAGAD,EAAAtmN,UAAA,CAEAoqM,YAAAkc,EAEAntI,OAAA,sDAIAxtE,KAAA,WACA,IAAAwiI,EAAA5uI,KACA04B,EAAA3xB,EAAAglE,MAAA,QAEA/rE,KAASutE,SAAA50C,QAAAD,GAET14B,KAAAinN,SAAAvuL,EAAAwuL,uCAIAlnN,KAAAmd,SAEAnd,KAAA8qF,SAAA,WACA,IAAA31B,EAAApuD,EAAAogN,QAAAhyJ,YAAAy5E,EAAArhE,SAAAm5I,SAAA,oCAGA93E,EAAArhE,SAAA5sB,SAAA7hD,SAAA60D,MAGSi7E,EAAArhE,SAAAnhE,UAGTwiI,EAAArhE,SAAA,GAAA47G,YAGAv6C,EAAArhE,SACA7jB,SAAA,MACA5+C,KAAA,kBAEA8jI,EAAAw4E,eAEAjyJ,EACAy5E,EAAArhE,SAAAj0C,IAAAvyB,EAAAogN,QAAAhyJ,WAAArsB,IAAA,WAAA8lG,EAAArhE,SAAArrD,QAAAyW,QAAA,WACAi2G,EAAArhE,SAAArrD,QAAAyW,QAAA,aAKAoyC,KAAA,SAAAryC,yBAKAA,EAAA3xB,EAAAglE,MAAA,iCAIA/rE,KAAAinN,UAAAvuL,EAAAwuL,uBAEAlnN,KAAAinN,SAAA,+DAOAx7I,YAAA,6BAGA1kE,EAAAogN,QAAAhyJ,YAAAn1D,KAAAutE,SAAAm5I,SAAA,QACA1mN,KAAAqnN,gEAKA,IAAAz4E,EAAA5uI,KACA+G,EAAAjI,UAAA0a,GAAA,yBAAAkf,GACAk2G,EAAArhE,SAAA,KAAA70C,EAAAlkB,QAAAo6H,EAAArhE,SAAA/pD,IAAAkV,EAAAlkB,QAAArP,8BAMAgY,OAAA,0DAGAnd,KAAAutE,SAAA/zD,GAAA,+BAAAkf,GACA,IAAAA,EAAAI,OAAA81G,EAAA7jE,SAEA/qE,KAAAinN,mDAKAI,mBAAA,WACA,IAAAz4E,EAAA5uI,KACA81D,EAAA18B,WAAA,WACAw1G,EAAArhE,SAAA1zD,IAAA9S,EAAAogN,QAAAhyJ,WAAArsB,KACA8lG,EAAAtkD,aACK,2DAGLld,aAAAtX,GACA84E,EAAAtkD,oCAKA,IAAAskD,EAAA5uI,mDAGA4uI,EAAA04E,iBACA14E,EAAArhE,SAAA50C,QAAA,aAIA2uL,eAAA,WACAtnN,KAAAunN,WAAAvnN,KAAAunN,UAAArnK,8BAIA4qC,SAAA,SAAAhqE,OAEAoF,EAAAlmB,KAAAutE,SAAAm5I,SAAA,kBAEA,GAAA1mN,KAAAinN,SAAAjnN,KAAAkH,QAAA4jF,SAAA,CACA,IAAA08H,EAAAzgN,EAAAogN,QAAAhyJ,YAAAjvC,EAeA,4DAZAy6B,SAAA7hD,SAAA60D,MAEA3zD,KAAAunN,UAAAp2J,MACA,UAAAnxD,KAAAkH,QAAA4jF,SACA/jF,EAAAymE,MAAAxtE,KAAAutE,SAAA,GAAArrD,MAAAliB,KAAAutE,SAAA,IACAxmE,EAAAymE,MAAAxtE,KAAA+qE,KAAA/qE,wCAKAA,KAAAunN,UAAA79J,SAAA,OAEA5oC,EAAA,OAEA0mM,EACAxnN,KAAAunN,UAAAjuL,IAAAvyB,EAAAogN,QAAAhyJ,WAAArsB,IAAAhoB,GACAA,SAEA9gB,KAAAinN,SAAAjnN,KAAAunN,WACAvnN,KAAAunN,UAAA97I,YAAA,MAEA1kE,EAAAogN,QAAAhyJ,YAAAn1D,KAAAutE,SAAAm5I,SAAA,QACA1mN,KAAAunN,UAAAjuL,IAAAvyB,EAAAogN,QAAAhyJ,WAAArsB,IAAAhoB,GACAA,KAEAA,GACAA,uBAWA/Z,EAAA2hD,GAAAgiC,MAAA,SAAAznE,+BAEA,IAAAiuG,EAAAnqH,EAAA/G,MACAwI,EAAA0oH,EAAA1oH,KAAA,SACAtB,EAAAH,EAAAqJ,OAAA,GAAArJ,EAAA2hD,GAAAgiC,MAAAj7E,SAAAyhH,EAAA1oH,OAAA,iBAAAya,yCAEA,iBAAAA,EAAAza,EAAAya,yBAKAlc,EAAA2hD,GAAAgiC,MAAAj7E,SAAA,CACAq7E,UAAA,EACAD,UAAA,EACAz+E,MAAA,GAGArF,EAAA2hD,GAAAgiC,MAAA0mC,YAAA21F,mCAQA,OADAhgN,EAAA2hD,GAAAgiC,MAAAgnB,EACA1xG,MAOA+G,EAAAjI,UAAA0a,GAAA,wDAAAkf,GACA,IAAAw4F,EAAAnqH,EAAA/G,MACA49B,EAAAszF,EAAApmH,KAAA,sEAEAmY,EAAAwkM,EAAAj/M,KAAA,kBAAAzB,EAAAqJ,OAAA,CAAA42M,QAAA,IAAAzgN,KAAAq3B,OAAA6pL,EAAAj/M,OAAA0oH,EAAA1oH,QAEAkwB,EAAAhX,mBAGAgpE,MAAAznE,GACAqW,IAAA,iCAKA32B,OAAA2N,QAsBA,SAAAvJ,GAEA,aAMA,IAAAsxB,EAAA,SAAArO,EAAA9iB,GACAlH,KAAA6P,KAAA,UAAAma,EAAA9iB,IAGAmxB,EAAA53B,UAAA,CAEAoqM,YAAOxyK,uBAGP,IAAAqvL,EACAC,EACAC,EACAjvL,EACAvyB,EASA,IAPApG,KAAA+T,OACA/T,KAAAutE,SAAAxmE,EAAAijB,mCAEAhqB,KAAA0mI,SAAA,EAIAtgI,GAFAwhN,EAAA5nN,KAAAkH,QAAAyxB,QAAAonC,MAAA,MAEA56D,OAAAiB,KAEA,kBACApG,KAAAutE,SAAA/zD,GAAA,SAAAxZ,KAAA+T,KAAA/T,KAAAkH,QAAA8rM,SAAAjsM,EAAAymE,MAAAxtE,KAAA45E,OAAA55E,OACA,UAAA24B,sCAEAgvL,EAAA,SAAAhvL,EAAA,oBACA34B,KAAAutE,SAAA/zD,GAAAkuM,EAAA,IAAA1nN,KAAA+T,KAAA/T,KAAAkH,QAAA8rM,SAAAjsM,EAAAymE,MAAAxtE,KAAAw0E,MAAAx0E,OACAA,KAAAutE,SAAA/zD,GAAAmuM,EAAA,IAAA3nN,KAAA+T,KAAA/T,KAAAkH,QAAA8rM,SAAAjsM,EAAAymE,MAAAxtE,KAAAm0E,MAAAn0E,QAIAA,KAAAkH,QAAgB8rM,gFAEhBhzM,KAAA6nN,mCAaA,OATA3gN,EAAAH,EAAAqJ,OAAA,GAAArJ,EAAA2hD,GAAA1oD,KAAA+T,MAAAtE,SAAAzP,KAAAutE,SAAA/kE,OAAAtB,sCAGAA,EAAA4gN,MAAA,CACA17M,KAAAlF,EAAA4gN,MACA/8I,KAAA7jE,EAAkB4gN,QAIlB5gN,GAGAstE,MAAA,SAAA97C,GACA,IAEAs0D,EAFAv9E,EAAA1I,EAAA2hD,GAAA1oD,KAAA+T,MAAAtE,SACAvI,EAAkB,GASlB,GANAlH,KAAA6sI,UAAA9lI,EAAA4yB,KAAA35B,KAAA6sI,SAAA,SAAAvmI,EAAA/E,GACAkO,EAAAnJ,IAAA/E,IAAA2F,EAAAZ,GAAA/E,IACAvB,QAEAgtF,EAAAjmF,EAAA2xB,EAAAokE,eAAA98F,KAAA+T,MAAA7M,GAAAsB,KAAAxI,KAAA+T,OAEA7M,QAAA4gN,QAAA96H,EAAA9lF,QAAA4gN,MAAA17M,KAAA,OAAA4gF,EAAA5gF,OAEAghE,aAAAptE,KAAA81D,SACAk3B,EAAA+6H,WAAA,KACA/nN,KAAA81D,QAAkB18B,WAAA,WAClB,MAAA4zD,EAAA+6H,YAAA/6H,EAAA5gF,QACA4gF,EAAA9lF,QAAA4gN,MAAA17M,yBAIA,IAAA4gF,EAAAjmF,EAAA2xB,EAAAokE,eAAA98F,KAAA+T,MAAA/T,KAAA6sI,UAAArkI,KAAAxI,KAAA+T,MAGA,GADA/T,KAAA81D,SAAkBsX,aAAAptE,KAAA81D,UAClBk3B,EAAA9lF,QAAA4gN,QAAA96H,EAAA9lF,QAAA4gN,MAAA/8I,KAAA,OAAAiiB,EAAAjiB,OAEAiiB,EAAA+6H,WAAkB,MAClB/nN,KAAA81D,QAAA18B,WAAA,0CAEA4zD,EAAA9lF,QAAA4gN,MAAA/8I,OAGA3+D,KAAA,WACA,IAAA47M,EACAnhN,EACAohN,MAGAC,oBAGA,GAAAloN,KAAAmoN,cAAAnoN,KAAA0mI,QAAA,CAEA,GADA1mI,KAAAutE,SAAA50C,QAAAD,GACAA,EAAAwuL,qBAAA,2BAEAlnN,KAAAooN,aAEApoN,KAAAkH,QAAAmhN,WACAL,EAAAt+J,SAAA,QAGAh4C,EAAA,mBAAA1R,KAAAkH,QAAAwK,UACA1R,KAAAkH,QAAAwK,UAAA3R,KAAAC,KAAAgoN,EAAA,GAAAhoN,KAAAutE,SAAA,2BAGAy6I,EACAr/J,SACA39C,IAAA,CAAA+sC,IAAA,EAAAjd,KAAA,EAAAv8B,QAAA,UAEAyB,KAAAkH,QAAAkyC,UAAA4uK,EAAArnK,SAAA3gD,KAAAkH,QAAAkyC,WAAA4uK,EAAAv+J,YAAAzpD,KAAAutE,+BAIA06I,EAAAD,EAAA,GAAA7+B,YACAm/B,EAAAN,EAAA,GAAA5+B,gBAGA,aACA8+B,EAAA,CAAAnwK,IAAAlxC,EAAAkxC,IAAAlxC,EAAAyE,OAAAwvB,KAAAj0B,EAAAi0B,KAAAj0B,EAAAhI,MAAA,EAAAopN,EAAA,SAEA,UACAC,EAAA,CAAAnwK,IAAAlxC,EAAAkxC,IAAAuwK,EAAAxtL,KAAAj0B,EAAAi0B,KAAAj0B,EAAAhI,MAAA,EAAAopN,EAAA,GACA,MACA,WACAC,EAAA,CAAAnwK,IAAAlxC,EAAAkxC,IAAAlxC,EAAAyE,OAAA,EAAAg9M,EAAA,EAAAxtL,KAAAj0B,EAAAi0B,KAAAmtL,GACA,MACA,6DAEA,MAGA,yDAEA,MACA,0DAEA,MAGA,eACAC,EAAA,CAAAnwK,IAAAlxC,EAAAkxC,IAAAlxC,EAAAyE,OAAA,KAAAg9M,EAAAxtL,KAAAj0B,EAAAi0B,KAAAj0B,EAAAhI,aAEA,kBACAqpN,EAAA,CAAAnwK,IAAAlxC,EAAAkxC,IAAAlxC,EAAAyE,OAAA,KAAAg9M,EAAAxtL,KAAAj0B,EAAAi0B,KAAAj0B,EAAAhI,OACA,MAGA,iBACAqpN,EAAA,CAAAnwK,IAAAlxC,EAAAkxC,IAAAlxC,EAAAyE,OAAAwvB,KAAAj0B,EAAAi0B,KAAAj0B,EAAAhI,MAAA,KAAAopN,SAEA,kBACAC,EAAA,CAAAnwK,IAAAlxC,EAAAkxC,IAAAlxC,EAAAyE,OAAAwvB,KAAAj0B,EAAAi0B,KAAAj0B,EAAAhI,MAAA,KAAAopN,GACA,MAGA,cACAC,EAAA,CAAAnwK,IAAAlxC,EAAAkxC,IAAAlxC,EAAAyE,OAAA,KAAAg9M,EAAAxtL,KAAAj0B,EAAAi0B,KAAAmtL,SAEA,6DAOAjoN,KAAAuoN,eAAAL,EAAAx2M,GACA1R,KAAAutE,SAAA50C,QAAA,wCAKA,MAIA2vL,IAEAzqN,EANAmqN,EAAAhoN,KAAAqvE,MACAxwE,EAAAmpN,EAAA,GAAA7+B,YACA79K,EAAA08M,EAAA,GAAA5+B,eAOAxnK,UACA8nC,SAAAh4C,GACAg4C,SAAA,MAEAu+J,EAAAD,EAAA,GAAA7+B,YACAm/B,EAAAN,EAAA,GAAA5+B,aAEA,OAAA13K,GAAA42M,GAAAh9M,IACAsW,EAAAm2B,IAAAn2B,EAAAm2B,IAAAzsC,EAAAg9M,EACAzqN,GAAA,GAGA,UAAA6T,GAAA,OAAAA,GACAuN,EAAA,EAEA2C,EAAAkZ,KAAA,IACO7b,GAAA,EAAA2C,EAAAkZ,KACPlZ,EAAAkZ,KAAA,cAEAmtL,EAAAD,EAAA,GAAA7+B,YACAm/B,EAAAN,EAAA,GAAA5+B,iDAKAppL,KAAAwoN,aAAAF,EAAAh9M,EAAAg9M,EAAA,OAGAzqN,GAAAmqN,EAAApmM,WAGA4mM,aAAA,SAAAvpM,EAAA0kJ,EAAA7rH,GACA93C,aAEAgL,IAAA8sC,EAAA74B,EAAA,MAAAA,EAAA0kJ,GAAA,+BAIA,IAAAqkD,EAAAhoN,KAAAqvE,MACAzzE,EAAAoE,KAAAyoN,WAEAT,EAAAp9M,KAAA,kBAAA5K,KAAAkH,QAAA+4C,KAAA,eAAArkD,GACAosN,EAAAv8I,YAAA,kDAIA,IAUA3V,EATAkyJ,EAAAhoN,KAAAqvE,MACA32C,EAAA3xB,EAAAglE,MAAA,QAGA,GADA/rE,KAAAutE,SAAA50C,QAAAD,IACAA,EAAAwuL,kGAKApxJ,EAAA18B,WAAA,qDAEA,KAEA4uL,EAAA1uL,IAAAvyB,EAAAogN,QAAAhyJ,WAAArsB,IAAA,WACAskC,aAAAtX,4BASA91D,KAAAutE,SAAA50C,QAAA,gBAKAkvL,SAAA,WACA,IAAAa,EAAA1oN,KAAAutE,UACAm7I,EAAA59M,KAAA,2BAAA49M,EAAA59M,KAAA,yBACA49M,EAAA59M,KAAA,sBAAA49M,EAAA59M,KAAA,cAAAA,KAAA,aAIAq9M,WAAK,WACL,OAAAnoN,KAAAyoN,mCAIA,IAAAvkE,EAAAlkJ,KAAAutE,SAAA,GACA,OAAAxmE,EAAAqJ,OAAA,sBAAA8zI,EAAAllJ,sBAAAklJ,EAAAllJ,wBAAA,CACAH,MAAAqlJ,EAAAilC,YACA79K,OAAA44I,EAAAklC,cACAppL,KAAAutE,SAAA3rD,WAGA6mM,SAAA,WACA,IACAC,EAAA1oN,KAAAutE,SACA7yC,EAAA16B,KAAAkH,+CAGA,mBAAAwzB,EAAA9+B,MAAA8+B,EAAA9+B,MAAAmE,KAAA2oN,EAAA,IAAAhuL,EAAA9+B,QAKAyzE,IAAA,WACA,OAAArvE,KAAAgoN,KAAAhoN,KAAAgoN,MAAAjhN,EAAA/G,KAAAkH,QAAAsjB,4BAIA,OAAAxqB,KAAA2oN,OAAA3oN,KAAA2oN,QAAA3oN,KAAAqvE,MAAAzkE,KAAA,mBAGAokB,SAAA,WACAhvB,KAAAutE,SAAA,GAAA3kB,aACA5oD,KAAA+qE,OACA/qE,KAAAutE,SAAA,KACAvtE,KAAAkH,QAAA,OAIA0vM,OAAA,WACA52M,KAAA0mI,SAAA,GAGAkiF,QAAA,WACA5oN,KAAA0mI,SAAA,4BAIA1mI,KAAA0mI,SAAA1mI,KAAA0mI,sGAKA15C,EAAA3d,MAAAq3I,SAAA,MAAA15H,EAAAjiB,OAAAiiB,EAAA5gF,QAGA8d,QAAA,WACAlqB,KAAA+qE,OAAAwC,SAAA1zD,IAAA,IAAA7Z,KAAA+T,MAAA6nM,WAAA57M,KAAA+T,QASA,IAAA29F,EAAA3qG,EAAA2hD,GAAAyE,QAEApmD,EAAA2hD,GAAAyE,QAAA,SAAAlqC,GACA,OAAAjjB,KAAA25B,KAAA,WACA,IAAAu3F,EAAAnqH,EAAA/G,0BAEAkH,EAAA,iBAAA+b,KACAza,GAAA0oH,EAAA1oH,KAAA,UAAAA,EAAA,IAAA6vB,EAAAr4B,KAAAkH,IACA,iBAAA+b,GAAAza,EAAAya,0DAOAolM,WAAA,EACA32M,UAAA,MACAshM,UAAO,2GAEPr6K,QAAA,uBAEAmvL,MAAA,UAEA1uK,WAAA,GAOAryC,EAAA2hD,GAAAyE,QAAS25J,WAAA,WAET,OADA//M,EAAA2hD,GAAOyE,QAAAukD,EACP1xG,MAlXA,CAqXA2C,OAAA2N,QAsBA,SAAAvJ,GAEA,+BAOA/G,KAAAgqB,QAAAjjB,EAAAijB,iBAKA6gL,YAAAge,kBAGA,IAGAx8F,EACAo7F,EACA/uL,EALAw4F,EAAAlxH,KAAAgqB,8CAEAgpL,EAAA9hF,EAAApmH,KAAA,eAKAkoM,IAEAA,GADKA,EAAA9hF,EAAApmH,KAAA,UACLkoM,EAAAn1M,QAAA,0DAKAwuH,EAAAy8F,EAAAl+M,KAAA,uCAGAm+M,cAAA18F,IAGA6E,EAAAv4F,QAAAD,4BAIA+uL,EAAA1gN,EAAAisM,GAEAhzM,KAAAgpN,SAAA93F,EAAAz8C,OAAA,MAAAq0I,GACA9oN,KAAAgpN,SAAAvB,IAAAhzI,SAAA,WACAy8C,EAAAv4F,QAAA,CACG5kB,KAAA,+BAMHi1M,SAAA,SAAAh/L,EAAAovB,EAAAt4B,GACA,IAAAmoM,EAAA7vK,EAAAxuC,KAAA,aACAuqD,EAAAr0C,GACA/Z,EAAAogN,QAAAhyJ,YACA8zJ,EAAAvC,SAAA,QAEA,SAAA1xM,IACAi0M,EACAx9I,YAAA,UACA7gE,KAAA,8BACA6gE,YAAA,UAEAzhD,EAAA0/B,SAAA,8BAIA1/B,EAAA0/B,SAAA,OAEA1/B,EAAeyhD,YAAY,QAG3BzhD,EAAAyqD,OAAA,mBACAzqD,EAAAwyH,QAAA,eAAA9yF,SAAA,UAGA5oC,OAGAq0C,EACA8zJ,EAAA3vL,IAAAvyB,EAAAogN,QAAAhyJ,WAAArsB,IAAA9zB,GACAA,IAEAi0M,EAAAx9I,YAAA,uBAUA1kE,EAAA2hD,GAAA9nB,IAAA,SAAA3d,GACA,OAAAjjB,KAAA25B,KAAA,WACA,IAAAu3F,EAAAnqH,EAAA/G,MACAwI,EAAA0oH,EAAA1oH,KAAA,OACAA,GAAA0oH,EAAA1oH,KAAA,MAAAA,EAAA,IAAAqgN,EAAA7oN,OACA,iBAAAijB,GAAAza,EAAAya,QAIAlc,EAAA2hD,GAAA9nB,IAAAwwF,YAAAy3F,EAMA9hN,EAAA2hD,GAAO9nB,IAAAkmL,WAAA,WAEP,kBAAA9mN,kGAQA04B,EAAAhX,iBACA3a,EAAA/G,MAAA4gC,IAAA,UAxHA,CA2HAj+B,OAAA2N,QAoBA,SAAAvJ,oCASA/G,KAAAutE,SAAAxmE,EAAAijB,GACAhqB,KAAAkH,QAAAH,EAAAqJ,OAAA,GAAArJ,EAAA2hD,GAAAsiB,UAAAv7D,SAAAvI,GACAlH,KAAAwrB,QAAAxrB,KAAAkH,QAAAskB,SAAAxrB,KAAAwrB,qDAEAxrB,KAAAs7M,YAAAt7M,KAAAkH,QAAAo0M,aAAAt7M,KAAAs7M,YACAt7M,KAAAmrE,QAAAnrE,KAAAkH,QAAAikE,SAAAnrE,KAAAmrE,wCAEAnrE,KAAAkpN,MAAAniN,EAAA/G,KAAAkH,QAAAgqD,MACAlxD,KAAAuxH,OAAA,EACAvxH,KAAAmpN,UAGA/uC,EAAA35K,UAAA,CAEAoqM,YAAAzwB,oBAIA,IAAA90K,EAAAtF,KAAAkpN,MAAAt+M,KAAA,WAAAE,KAAA,eAAA9K,KAAAutE,SAAAjoE,aACAtF,KAAAutE,SACAjoE,IAAAtF,KAAAmrE,QAAA7lE,IACA8pE,0CAKA,OAAAxgE,GAGAxC,KAAA,WACA,IAAAvF,EAAAE,EAAAqJ,OAAA,GAAApQ,KAAAutE,SAAAz1B,WAAA,CACAxsC,OAAAtL,KAAAutE,SAAA,GAAA67G,eAYA,OATAppL,KAAAkpN,iCAEAl+M,IAAA,CACA+sC,IAAAlxC,EAAAkxC,IAAAlxC,EAAAyE,qBAGAc,OAEApM,KAAAuxH,OAAA,EACOvxH,MAGP+qE,KAAA,WAGA,OAFA/qE,KAAAkpN,MAAAn+I,OACA/qE,KAAAuxH,OAAA,EACAvxH,MAGAstE,OAAA,SAAAhsD,GACA,IAAA/P,EAIA,OAFAvR,KAAAU,MAAAV,KAAAutE,SAAAjoE,OAEAtF,KAAAU,OAAAV,KAAAU,MAAAyE,OAAAnF,KAAAkH,QAAAgkE,mIAMAlrE,KAAAytE,QAAAl8D,GAAAvR,MAGAytE,QAAA,SAAAl8D,GACA,IAAAq9H,EAAA5uI,KAQA,8BALA,OAAA4uI,EAAApjH,QAAA5c,MAGA2C,EAAAvR,KAAAq7M,OAAA9pM,IAEApM,yDACAnF,KAAAuxH,MAAAvxH,KAAA+qE,OAAA/qE,MAMAwrB,QAAA,SAAA5c,6DAIAysM,OAAA,SAAA9pM,GAMA,IALA,IAGA3C,EAHAw6M,EAAA,GACKC,EAAA,QAILz6M,EAAA2C,EAAAivG,SACA5xG,EAAAgF,cAAA9M,QAAA9G,KAAAU,MAAAkT,gDAEA01M,EAAA15M,KAAAhB,GAFAw6M,EAAAx5M,KAAAhB,GAKA,OAAAw6M,EAAA3hL,OAAA4hL,EAAAC,IAGAhO,YAAA,SAAA1sM,GACA,IAAAlO,EAAAV,KAAAU,MAAA7C,QAAA,kGAKA,iBAAAke,EAAA,cAHAnN,sBAQA,IAAAggI,EAAA5uI,YAEAuR,EAAAxK,EAAAwK,GAAAnQ,IAAA,SAAAgF,EAAAwI,GAGA,OAFAxI,EAAAW,EAAA6nI,EAAA1nI,QAAA0H,MAAA9D,KAAA,aAAA8D,IACAhE,KAAA,KAAAq1C,KAAA2uF,EAAA0sE,YAAA1sM,IACAxI,EAAA,KAKApG,KAAAkpN,MAAAjpK,KAAA1uC,SAIAyD,KAAA,SAAAsM,GACA,IACAtM,EADAhV,KAAAkpN,MAAAt+M,KAAA,WAAA6gE,YAAA,UACAz2D,OAEAA,EAAA7P,SACA6P,EAAAjO,EAAA/G,KAAAkpN,MAAAt+M,KAAA,WAGAoK,EAAA00C,SAAA,4BAIA,IACA/gB,EADA3oC,KAAAkpN,MAAAt+M,KAAA,WAAA6gE,YAAA,UACA9iC,OAEAA,EAAAxjC,yCAIAwjC,EAAA+gB,SAAA,WAGAy/J,OAAA,WACAnpN,KAAAutE,SACA/zD,GAAA,QAAAzS,EAAAymE,MAAAxtE,KAAAkiB,MAAAliB,0CAEAwZ,GAAA,WAAAzS,EAAAymE,MAAAxtE,KAAA0lF,SAAA1lF,OACAwZ,GAAA,QAAAzS,EAAAymE,MAAAxtE,KAAAurE,MAAAvrE,OAEAA,KAAAupN,eAAA,YACAvpN,KAAAutE,SAAA/zD,GAAA,UAAAzS,EAAAymE,MAAAxtE,KAAA2tE,QAAA3tE,OAGAA,KAAAkpN,MACA1vM,GAAA,QAAAzS,EAAAymE,MAAAxtE,KAAAmxD,MAAAnxD,OACAwZ,GAAA,kBAAAzS,EAAAymE,MAAAxtE,KAAAwpN,WAAAxpN,4DAIAkqB,QAAA,uDAEAlqB,KAAAkpN,MAAArvM,OAGA0vM,eAAO,SAAA9T,GACP,IAAAgU,EAAAhU,KAAAz1M,KAAAutE,gBACAk8I,IACAzpN,KAAAutE,SAAAytG,aAAAy6B,EAAA,qDAMAlkD,KAAA,SAAA74H,oBAIAA,EAAAjX,UAAA,KAAAiX,EAAAk1C,SAAA,CAIA,OAAAl1C,EAAAk1C,SACA,OACA,QACA,QACAl1C,EAAAhX,uBAGA,QACAgX,EAAAhX,iBACA1hB,KAAA2oC,OACA,MAEA,QACAjQ,EAAAhX,iBACA1hB,KAAAgV,6BAOA24D,QAAA,SAAAj1C,wEAEA14B,KAAAuxJ,KAAA74H,IAGAgtD,SAAA,SAAAhtD,GACA14B,KAAA0pN,wBACA1pN,KAAAuxJ,KAAA74H,IAGA6yC,MAAA,SAAA7yC,GACK,OAAAA,EAAAk1C,SACL,gBAEA,QACA,QACA,QACA,MAEA,OACA,8BAEA5tE,KAAA4iB,eAGA,QACA,IAAA5iB,KAAAuxH,MAAA,mBAEA,MAEA,QACAvxH,KAAAstE,SAGA,KAAA50C,EAAAk1C,cAAA,IAAA5tE,KAAAkpN,MAAAt+M,KAAA,WAAAE,KAAA,sCAIA4tB,EAAArE,kBACAqE,EAAAhX,mBAKAQ,MAAA,SAAAwW,GACA14B,KAAA2pN,SAAA,GAGAtgN,KAAA,SAAAqvB,GACA14B,KAAA2pN,SAAA,GACA3pN,KAAA4pN,YAAA5pN,KAAAuxH,OAAAvxH,KAAA+qE,QAGA5Z,MAAA,SAAAz4B,GACAA,EAAArE,kBACAqE,EAAAhX,iBACA1hB,KAAA4iB,SACA5iB,KAAAutE,SAAArrD,SAGAsnM,WAAA,SAAA9wL,GACA14B,KAAA4pN,YAAA,0FAKAC,WAAe,SAAAnxL,+DAWf,IAAAg5E,EAAA3qG,EAAA2hD,GAAAsiB,UAEAjkE,EAAA2hD,GAAAsiB,UAAA,SAAA/nD,+BAEA,IAAAiuG,EAAAnqH,EAAA/G,MACAwI,EAAA0oH,EAAA1oH,KAAA,qCAEAA,GAAA0oH,EAAA1oH,KAAA,YAAAA,EAAA,IAAA4xK,EAAAp6K,KAAAkH,IACA,iBAAA+b,GAAAza,EAAAya,QAIAlc,EAAA2hD,GAAAsiB,UAAAv7D,SAAA,CACAw7D,OAAA,GACA15D,MAAA,mDAEA3C,KAAA,4BACAs8D,UAAA,GAGAnkE,EAAA2hD,GAAAsiB,UAAAomD,YAAAgpD,uCAQA,OADArzK,EAAA2hD,GAAAsiB,UAAA0mC,EACA1xG,MAOA+G,EAAAjI,UAAA0a,GAAA,iEAAAkf,iBAEAw4F,EAAA1oH,KAAA,sCA3UA,CA+UA7F,OAAA2N,QAqBA,SAAAvJ,gBAQA,IAAA+iN,EAAA,SAAA9/L,EAAA9iB,GACAlH,KAAAkH,QAAAH,EAAAqJ,OAAA,GAAArJ,EAAA2hD,GAAAqhK,MAAAt6M,SAAAvI,0BAEAsS,GAAA,wBAAAzS,EAAAymE,MAAAxtE,KAAAgqN,cAAAhqN,2GAEAA,KAAAutE,SAAAxmE,EAAAijB,GACAhqB,KAAAgqN,iBAGAF,EAAKrpN,UAAAupN,cAAA,WACF,GAAAhqN,KAAAutE,SAAA4jD,GAAA,0CAGF4gB,EAAA/xI,KAAAozE,QAAA2+D,8ECl+CD,iBAAAnwH,IAAAqoM,EAAAC,EAAAtoM,GACA,mBAAAsoM,MAAAtoM,EAAAm2B,4CAGAgyK,IAAA,MAAA/pN,KAAAmqN,OAAAp4E,EAAA/xI,KAAAmqN,OAAAryK,EAAAC,OACA,MAAAkyK,GAAAnyK,EAAAC,IAAA/3C,KAAAutE,SAAAjiE,UAAA8+M,EAAAH,EACA,eAAAC,GAAAn4E,GAAAm4E,GACA,OAEAlqN,KAAAqqN,UAAAN,mBAGA/pN,KAAAmqN,MAAA,UAAAJ,EAAAjyK,EAAAC,IAAAg6F,EAAA,KAEA/xI,KAAAutE,SAAA9B,4CAAwB/hB,SAAsB,SAAAqgK,EAAA,IAAAA,EAAA,QAO9C,IAAAr4G,EAAA3qG,EAAA2hD,GAAAqhK,MAEAhjN,EAAA2hD,GAAAqhK,MAAA,SAAA9mM,GACA,OAAAjjB,KAAA25B,KAAA,WACA,IAAAu3F,EAAAnqH,EAAA/G,MACAwI,EAAA0oH,EAAA1oH,KAAA,SACAtB,EAAA,iBAAA+b,wCAEA,iBAAAA,GAAAza,EAAAya,iCAMAlc,EAAA2hD,GAAAqhK,MAAAt6M,SAAA,CACAmS,OAAA,GAOA7a,EAAA2hD,GAAAqhK,MAAAjD,WAAA,kBACA//M,EAAA2hD,GAAAqhK,MAAAr4G,QAQA3qG,EAAApE,QAAA6W,GAAA,0DAEA,IAAA8wM,EAAAvjN,EAAA/G,MACAwI,EAAA8hN,EAAA9hN,6BAIAA,EAAAyhN,eAAAzhN,EAAAoZ,OAAA3J,OAAAzP,EAAAyhN,cACAzhN,EAAA0hN,YAAA1hN,EAAAoZ,OAAAm2B,IAAAvvC,EAAA0hN,0BDi5CA,iBCr4CAK,oBAGA,SAAAxjN,GACA,uCAQA,SAAAM,2BAiDA,SAAAA,EAAAC,EAAAF,GAKA,IAAAojN,EAEApyM,EACAE,IAGAE,EAEAmiB,EACA5sB,EAEA,SAAA08M,EAAAjgN,EAAAC,GACAnD,EAAA6H,YACA7H,EAAAg7C,OACAl7C,EAAA+yB,MAAA2B,IAAAtxB,GAAAmwB,EAAAG,KACA1zB,EAAA+U,MAAA2f,IAAArxB,GAAAkwB,EAAAod,KA+BA,SAAA2yK,EAAAC,EAAAC,kFAGA,MAOAC,EAPAhiL,SAEA,OAAAvwB,EAAAqyM,EAAA,IACA,OAAAnyM,EAAAmyM,EAAA,GAEAG,GAAA,EAIA,IAAA1kN,EAAAukN,EAAAvkN,EAAAwkN,EAAAxkN,IAEA,GACA,OAAAkS,EAAAlS,EAAAgS,EAAA,oBAGA0yM,GAAA,YAKA,GAAAxyM,EAAAlS,EAAAgS,EAAA,KAAAI,EAAApS,EAAAmS,EAAA,GACAuyM,GAAA,WAKA,IAAAxyM,EAAAlS,EAAAgS,EAAA,GAAAI,EAAApS,EAAAmS,EAAA,GAkBA,OAhBAswB,qBAKAiiL,EACAL,EAAAnyM,GAAAlS,EAAA,GAAAgS,GAAAE,GAAAlS,EAAA,GAAAgS,EAAA,IAMAqyM,GADAI,EAAAE,EAAA3kN,IACA,GAAAykN,EAAA,SAGAG,EAAA5kN,EAAAwkN,GAMA/hL,GAAA,EACAiiL,GAAA,yBAzIAG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EACAnmN,EAAAuQ,EAiJA,IAJAE,QAAA21M,OAAAC,EAAA,yDAIA1lN,EAAA,EAAAA,EAAAoS,EAAArT,OAAAoT,EAAAnS,IASA,GA5JA6kN,EAqJA3yM,GAAAwzM,EAAA,GAAA1zM,GArJA8yM,EAqJA5yM,GAAAwzM,EAAA,GAAA1zM,EAAA,GArJA+yM,SAAAC,WAAAC,EAwJA7yM,GAAApS,EAAA,GAAAmS,GAxJA+yM,EAwJA9yM,GAAApS,EAAA,GAAAmS,EAAA,GAxJAgzM,EAyJA/yM,EAAApS,EAAAmS,GAzJAizM,EAyJAhzM,EAAApS,EAAAmS,EAAA,GAxJAkzM,SAAAC,SAAAC,SAAAC,SACAnmN,SAAAuQ,SAaAA,IATA21M,EAAAJ,EAAAF,IAUAH,EAAAI,IATAM,EAAAJ,EAAAF,IASAL,EAAAI,MAEAM,WAdAF,EAAAN,EAAAF,GAcAW,GA0IA,WAnJAnmN,IACAimN,GAAAT,EAAAI,GAAAI,GAAAP,EAAAI,MAEAK,EAAAD,EAAAD,EAAAG,KAUA,GAAAnmN,GAAA,GAAAuQ,GAAA,GAAAA,GAAA,EACA,CACAi1M,EAAAj1M,EAAAy1M,EACAP,EAAAl1M,EAAA01M,SAoIA,OAAAb,EAIA30M,QAAAmf,MAAA,0FAMA,IAAAjvB,EAEA,mJAAAA,EAAAukN,EAAAvkN,GAAAwkN,EAAAxkN,IACAkB,EAAA+H,+DA/GA/H,EAAAgI,YACAhI,EAAAkI,uBA0HA,IAAApJ,EACAykN,EAEK,IALL30M,QAAA21M,OAAAlB,GAAAC,EAAA,2HAKKxkN,EAAAukN,EAAAvkN,EAAAwkN,EAAAxkN,IAAA,gCAEJ2lN,EAAA3lN,EAAA,EAAAukN,sCC/RD,4MCKAoB,EAAAnB,EAAAD,GFiIA,OAAAvjN,EAAAiX,cExHImsM,EFuEJ,SAAApjN,EAAAqQ,SAIA,IAAArR,EAAA,EAAAA,EAAAqR,EAAAtS,SAAAiB,EACA,GAAAqR,EAAArR,GAAAvJ,KAAAuK,EAAAiX,YACA,OAAA5G,EAAArR,GAIA,YEjFW4lN,CAAA5kN,EAAAC,EAAAK,cAGF0Q,EAAAhR,EAAA0N,WAAAuD,gCACDE,EAAQiyM,EAAQ11M,WAASuD,UACvBG,EAAMgyM,EAAA11M,WAAAwD,OACVqiB,EAAatzB,EAAEuzB,gBF+IrB,WACA,GAAAtiB,EAAAnT,OAAAiT,GAAAI,EAAArT,OAAAoT,SACArC,QAAAmf,MAAA,4DAKA,IAAAjvB,EAAA,EAAAA,EAAAkS,EAAAnT,OAAAiT,EAAAhS,OAE2B,OAA3BkS,EAA2BlS,EAAAgS,IAC3B,OAAAI,EAAApS,EAAAmS,IACAD,EAAAlS,EAAAgS,KAAAI,EAAApS,EAAAmS,GAGA,2EAIA,iBE1JQxR,EAAMmE,MAAA5M,MAAA8I,EAAA8D,QACPnK,EAAA,KAEKikD,cACNj3C,UAAIA,EAAiBlI,aAItB,EAAAyS,EAAAnT,OAAAiT,gBF2CL,CACAhR,OAAA,oBE1CIpC,KAAI,8BFsCR,skJE3BGinN,KAED,SAAAppN,EAAAzI,EAAAF,gBAGDA,EAAAC,EAAAC,EAAA,sBAAA6vF,oCAEe,IAAczpF,EAAAtG,EAAA,QACP23K,EAA+B33K,EAAA,QACrD2pG,EAAA3pG,EAAA,QAE6BqoH,EAA+BroH,EAAA,QAC9CsoH,EAAAtoH,EAAAqhC,EAAAgnF,GAKb2pG,EAAO,oBAEDA,IACJlsN,KAAImsN,SAAMtoH,EAAA,EAAA3K,SAAAC,eAEb+yH,EAAAzrN,UAAA2rN,WAAA,WAED,OAAA5pG,EAAAzhH,EAAA6J,KAAA5K,KAAWmsN,SAAQ,CAAAtvN,GAAA,6HCtEnBwvN,EAAA,CAAAjrL,YAAA,IAGa,IACP,IAAO,IAAGkrL,EAAA9rN,EAAyC,EAAgBupC,GAACwiL,EAAAD,EAAAt3M,QAAAu3M,EAAAt3M,KAAAs3M,EAAAD,EAAAt3M,OAAA,CAC7D,IAAEnY,EAAA0vN,EAAAhrN,MAEZ,GAAAihH,EAAAzhH,EAAAqb,SAAAvf,GAAA,CACgBwvN,EAAKjsL,KAACisL,EAAAjrL,YAAAvkC,GACV,MAEH,IAAIq3D,EAACsuD,EAASzhH,EAAA6J,KAAAmgB,EAAA,CAAAluB,OACdwvN,EAAAjrL,YAAexxB,KAAAskD,GACxBm4J,EAAAn4J,OACDm4J,EAAAjsL,KAAA8zB,gOChBwBtlD,EAAAjI,MAAA0lN,EAAAn4J,KAAAvtD,MACQiI,EAAA4pB,QAAA,IAcuB,MAAAojD,GAAAxwD,EAAA,CAAAiK,MAAAumD,GACnD,QAME,IAGNhmE,MAAAX,OAAAJ,EAAAE,EAAA0mE,SAAA5mE,EAAA9U,KAAAgV,GAEF,WAAAqW,EAAA,MAAAA,EAAAiK,cAEIg3L,GAGFH,EAAAzrN,UAAAwpF,eAAA,WACQ,OAAAA,KAGNiiI,EF6BK,YElBNjiI,IACH,OAAAuiI,EAAC,iIChDDpsL,KAAA8zB,GAGA29G,yGCDA46C,EAAyB,SAAAC,EAAAC,EAAAC,GACvB,IAAMztL,EAAqB,yBAAAutL,EAAA,KAAAC,EAAA,iBACzBC,IACAztL,GAAM,UAAgBytL,EAAA,gBAEtBvtH,EAAA/rF,KAAU+rF,MACVjvE,EAAK0vE,EAAA3gE,KACL/O,GAAAivE,EAAAjvE,EAAA,OAEFla,QAAOC,KAAAgpB,GACL2gE,EAAM3gE,GAAIkgE,mBAYLx8F,EAAWzI,EAAkBF,gBAO3BA,EAAAC,EAAAC,EAAA,sBAAA4uJ,IACC,IC3BVzuI,EAAAI,ED2Bcna,EAAAtG,EAAA,QACAuI,EAAAvI,EAAA,QACV+H,EAAA/H,EAAAqhC,EAAA94B,GACH6yG,EAAAp7G,EAAA,QAEawqN,EAAAxqN,EAAA,QAOHkgB,EAAAlc,OAAAwmN,EAA0C,EAA1CxmN,CAA0C,SAAA2uN,GAErD,YADU,IAAVA,IAAwBA,GAAe,GACvC,yVC7C4D,sSAAA7jE,GAG9D/mJ,EAGClB,EAAAq7F,gBAkBC0wH,OACC,SAAAjqN,EAAAI,OAEHP,EAAA,sHACS,0qFAELtI,EAAwBF,uHAUxB2C,GAAA,CACH,IAAAkwN,EAAAC,EAAAnwN,GAEeujC,EAAA5/B,EAAuB,KAAAusN,EAAAE,mBAAvC7sL,EAAArV,SAMCqV,EAAArV,SAAA3pB,IAAA,SAAAwN,GALQ,OAAApO,EAAc,KAAAoO,EAAA,CAAA4pB,OAAA5pB,EAAAjI,MAAAomN,EAAApmN,QACnB,MACGomN,OACA3sL,mBAXA8zB,EAAS,CAAhBr3D,GAAA,YACEhB,KAAO,0FAHT,IAEOq4D,MAesEg5J,EAG1E,SAAAjkI,0zBCvDS,gBAAA/qF,OAAAsxC,EAAA,EAAAtxC,GAAA+C,IAAA,mBACW,OAgBA,OAdyDgsC,EAAAnrC,EAAA+iB,OAC7DgmB,EAAAsiL,EAAAlgL,IAaI,UAOuF,SAAAmgL,EAAAvwN,GAC3E,IAAAiD,EAAAE,KAGtB,gBAAgB6qC,GAAA,OAAArqC,EAAA,EAAAV,OAAA,oBACvB,OAAEU,EAAQ,EAAAR,KAAA,SAAA8B,GAKd,OAJI5D,OAAKsxC,EAAA,EAALtxC,GACJw6D,OAAA,kBAAA77D,GAEWqE,KAAgB2pC,EAAGwiL,MAChB,aAId3iL,EAAA,SAAA+tD,GAAA,OAEI1kF,KAAAo2B,EAAiBmjL,sBAEV7iL,QAAAguD,uCAaXv+F,EACAC,EAAAC,EACkB,IAClB,WAAgB,OAAAmzN,oKAGZrzN,EAA2CC,EAAAC,EAAA,sBAAAozN,IAI3CtzN,EAAuBC,EAAAC,EAAgB,IAAc,WAArD,OAAAqzN,MAEUtzN,EAAAC,EAAA,sBAAAszN,sEACSvzN,EAAAC,EAAmB,IAAK,WAAa,OAAAuzN,sCAArCxzN,EAAAC,EAAqC,sBAAAwzN,MAEtDzzN,EAAAC,EAA+B,sBAAAyzN,MAC/B1zN,EAAAC,EAA8B,IAAO,WAAK,OAAA0zN,sCAE3C3zN,EAAAC,EAAA,sBAAA2zN,oMANa7zN,EAAAC,EAAAC,EAAA,sBAAA4zN,iCAAJ9zN,EAAA,0LAgBF,kBAAA+xH,QAOJ,MAEP,SAAAp6G,GAAA,MAAAo8M,8BAAAp8M,YAYKq8M,EAAc5yN,EAAO6yN,EAACC,EAAkBjqM,EAAA8hD,UAC5CzlE,EAAyB,EAAAR,UAAA,oBACzB,IAAAquN,EAAmBC,EAAA3nN,EAAAstC,EAAAs6K,EAAAC,EAAAx4M,EAAAwlE,EAAAr8D,EAAAlf,EAAAwuN,EACdpoM,EAAAvkB,EAED,OAAAtB,EAAA,EAAAR,KAAA,SAAE6U,GAER,OAAAA,EAAArT,OACA,OAGgB,GAFhB6sN,EAAAD,EACAE,EAAAH,EACyB,UAADC,EAAChxN,KAAAP,KAAAyxN,EAAA,YAESr6K,EAAA,SAAAj+B,GAClB,IAAA2O,EACd,OAAAnkB,EAAA,EAAAR,KAAsF,SAAA8B,GAC5E,OAAAA,EAAAN,OACW,gBAAA2iB,EAAAljB,IAAA+U,EAAA2O,aACb,OAER,OADUA,EAAA7iB,EAAA+iB,SAEcwpM,EAAA1pM,EACD2pM,EAAAH,EAAA38M,OAAA,SAAAwE,GAAA,OAAAA,EAAA2O,eAAA3f,OACG,aAEN,QAIlB6P,EAAArT,MAAiB,EAClB,OACDqT,EAAesvB,KAAAv0B,KAAA,GAAa,QAC5B2+M,EAAA/tN,EAAA,EAAA8tN,GAAAE,EAAAD,EAAAv5M,OAEKH,EAAArT,MAAA,EACE,OACA,OAAAgtN,EAAAv5M,KAAA,OACCe,EAAAw4M,EAAAjtN,MACS,GAAA0yC,EAAAj+B,KACX,KAAK,EAEX,aADUnB,EAAAgQ,OAEb,YAE0BhQ,EAAiCrT,MAAC,EAAE,KAAG,EAA4B,OAADgtN,EAAAD,EAAAv5M,OAAC,MAE5E,aAAC,GAAkC,GAAE,KAAkB,SAAAwmE,EAAlB3mE,EAAAgQ,OAAAwB,EAAA,CAAAgP,MAAAmmD,SAChD,KAAK,EAAuC,IAOlDgzI,MAAAv5M,OAAAnT,EAAAysN,EAAA9yI,SAAA35E,EAAA/B,KAAAwuN,GAJC,WAAAloM,EAAA,MAAAA,EAAAgP,MACA,UACA,OAgBI,OAfJg5L,IAJqBlvM,EAAlB8mD,EAAAI,kBAYJpmE,EAAA,CAAAkf,SAJClf,EADoBouN,EAAAK,gBACpBluN,EAAS,KAAAP,EAAAouN,EAAAK,gBAAAJ,IAGT9tN,EAAY,KAAAP,EAAA,CAAA0kB,WAAA0pM,EAAArpN,KAAAs9B,QAAAgsL,EAAAltN,IAAA,SAAA4U,GAAA,OAAAxV,EAAA,KAAAwV,EAAA,CAAA2O,WAAA0pM,EAAArpN,WAGeypN,EAAavyN,KAAAC,UAAAqE,EAAA,KAAAP,EAAA,CAAA0uN,cAAArzN,EAAAuB,MAC7B8J,EAAAzI,OAAAkoE,EAAA,EAAAloE,CAAA,YAAA48B,KAAA2zL,KAIP,GAFHG,EAAA,EAAA/nM,UAAAlgB,iBAMAkoN,EAAAvsL,EAAAwsL,EAAA3vM,EAAA4vM,GACD,IAAAC,EAAA1sL,EAAAlhC,IAAA,SAAAV,GAAA,OAAAF,EAAA,KAAAE,EAAAouN,KAEWxoN,EAAAg8B,EAAkBtS,OAAG,SAACi/L,EAA0BvuN,GAEzD,OADEuuN,GAAQvuN,EAAA4F,KAEX,IAEGxE,WCnFAqd,EAAO+vM,EAAgBp0G,eAEzB,CAAAhuD,SAAO,KAAUkuD,WAAc,YAvE/Bm0G,EAAa,EAAAtgH,kBAAA1vF,EAAA27F,EAAAo0G,GDwJXE,CAAAjwM,EAAA2vM,EAAA5gH,YAAA4gH,EAAA7vN,eAAA6tD,EAAAhrD,EAAAgrD,SAAAkuD,EAAAl5G,EAAAk5G,WAIHz4E,EAAA,GAAAj8B,QA0BC,CACDg8B,UAEK6rE,QA3BI,CACV5wE,YAAA,EAGMoJ,SAAS3rC,EAAuB,gBAChCwzG,UAAWl7F,KAAQ+rF,MACvBvyC,SAAUA,EACVkuD,WAAWA,EAGXz4E,QAAMA,EACNre,QAAA8qM,EACA7vM,QAEE2gG,UAAS,UACXrR,SAAOtvF,EAAAhhB,IACRL,WAAA,CAEIgzC,WAAc,CAAAj1C,KAASixD,EAAAvrD,MAAAurD,GAC1BuiK,cAAc,CAAAxzN,KAAAm/G,EAAAz5G,MAAAy5G,IAGZ/7G,cAAa6vN,EAAI7vN,eAMnB8vN,SAAMA,EACNlyN,GAAIyyN,IACJr6M,MAAA,EACIs6M,QAAA,WAGNC,EAAgB,SAAA1tN,GACVA,EAAOwE,IAAGxE,EAAeuT,MAC/B,OADsC7U,EAAsC,EAAEsB,EAAE,kBAIhF2tN,EAAW,SAAOrjJ,WAChBvsE,EAAE,GACEgqC,EAAA,EAAAA,EAAcpgB,UAAUtkB,OAAC0kC,MACzBA,EAAA,GAAWpgB,UAAUogB,YAErBwpB,KAAA,SAAeupB,GAAW,OAAAxQ,EAAiBn4D,eAAU2oE,gBAIrD8yI,GACNA,EAAmBA,EAAS,UAAE,GAAK,YACpCA,IAAA,qBAEMA,EAASA,EAAqE,2BACnFA,EAAaA,EAAA,sCACCA,EAAU,mBAGXC,EAAU,mBACPA,EAAO,iBACXA,EAAe,mBACvBA,EAAA,4BACMA,EAAA,WACF,SAAU9zN,mBAKbK,KAAAoC,MAAAsxN,UAAA/zN,UAEJw5B,GACDnf,QAAYmf,WAGcm4L,EAAA,SAAAjsN,EAASsuN,GACnC,IAAAtuN,EACD,SAEwD,IACvD,OAASrF,KAAOC,UAAAoF,EAAA,KAAAsuN,GAGL,MAAAx6L,GAA+Enf,QAAAmf,SAE1F,MAAM,IAGR,SAAEo4L,EAAAl9E,GAEF,IAAA4sD,EAAA2yB,EAAAv/E,MAEG5rH,WAAA,KACI2d,QAAS,GACVnjB,MAAOouM,EACTwC,GAAMC,EACNj1L,KAAK,mBACQ,mBAGXy+J,YAEC7zL,QAAAw3L,UAEDA,OAKDh4L,QAAAuqN,EAAAO,cAEF,OADC/5M,QAAOmf,MAAA,gDACRmkK,EAEF,IAAAr6K,EAAA,CAED/gB,KAAA++L,EAAAuyB,EAAAQ,4BAGMvrM,EAAaw4K,EAASuyB,EAAkBS,YACvCC,EAAyBjzB,EAAiClzJ,MAAiBylL,EAAAO,eAChFI,EACS,uCACP/tL,EAAQ8tL,EAAM5+M,OAAU,SAAA46D,GAAA,OAAAqjJ,EAAAjmM,WAAA,EAAAhpB,EAAA,GAAA4rE,GAAAikJ,QAChBD,EAAc5+M,OAAU,SAAC46D,GAAA,OAAAqjJ,EAAArjJ,EAAA,iBACrBkkJ,EAAAv1L,KAAGw1L,EAAkC,EAAAj/H,UAC5C8+H,EAAK5+M,OAAI,SAAO46D,GAAE,OAAAqjJ,EAAArjJ,EAAA,WAgBzB,MAAO,CAACznD,WAAQA,EAAK2d,UAAAnjB,QAAA4wM,MAZnBS,aAAAC,EAAAV,GAAAJ,EAAAljC,OACHikC,YAAAD,EAAAV,GAAAJ,EAAAgB,MAEDC,aAAAH,EAAAV,GAAAJ,EAAAxuD,uCAGgB6uD,EAMOj1L,OAAA4zL,cADCyB,EAAA5+M,OAAA,SAAA46D,GAAA,OAAAqjJ,EAAArjJ,EAAA,gCAGnBshJ,EAAAmD,EAAAC,GAEH,OAAIA,EACK50N,KAAGC,UAAQqE,EAA4B,GAC/CqwN,EAAA1xM,MAAA/gB,KAEDyyN,EAAA1xM,MAAA3gB,GACMqyN,EAAalsM,YACnBksM,EAAAvuL,QAAA,CACO,CAAAvH,KAAQ81L,EAAA91L,MAChB,CAEeg1L,GAAA,GACKc,EAAAd,GAAAS,eACnBK,EAAAd,GAAAW,cACDG,EAAAd,GAAAa,aAE2BC,EAACd,GAAAtvB,mBAMpBvkM,KAAAC,UAAU00N,GAGZ,SAAMvB,EAAe5yN,eACnB,IAAPA,IAAOA,EAAA,GACL,KAAM4W,KAAA+rF,MAAA,IAAAngG,KAAA6xN,SAAA,IAAAr0N,WAENs0N,EAAa1uL,EAAA5lC,GAEf,YADE,IAAAA,MAAA,GACF,CAAA2Y,MAAAnX,OAAA+yN,EAAA,EAAA/yN,CAAAokC,GAAAh8B,IAAAgpN,EAAA5yN,QAGAw0N,EAAoB,SAAA18M,EAAA8tB,EAAA5lC,QACX,IAAPA,IAAYA,EAAA,OACb4J,EAAAgpN,EAAA5yN,GAEG2Y,EAAMb,EAAQa,OAAMnX,OAAS+yN,EAAA,EAAT/yN,CAASokC,UAC/B9hC,EAAa,KAAAgU,EAAA,CAAAa,QAAA/O,kBAKXqnN,EAAYrrL,MACdA,GAAO,iBAAAA,KAAAn9B,OAAA,GAET,IADC,IAAAgsN,EAAA,GACDz0N,EAAA,EAAAA,EAAyB4lC,EAAAn9B,OAAAzI,IAAA,CACrB,IAAMgE,EAAM4hC,EAAS5lC,GAChB4J,EAAAgpN,EAAA5yN,GACR2Y,EAAA3U,EAAA2U,MAEUA,IACHA,EAAQnX,OAAS+yN,EAAW,EAApB/yN,CAAoBizN,IAEnCA,EAAAvhN,KAAApP,EAAA,KAAAE,EAAA,CAAA2U,QAEW/O,SAGD,OAAA6qN,QAET,CAAI3wN,EAA0B,KAAAwwN,EAAA1uL,WAM1B,mCACJ8uL,EAAG9uL,UACHA,GACFA,EAAA+wB,KAAA,SAAA3yD,GAOI,OALwBxC,OAAGgH,KAACxE,GACpB8Q,OAAA,SAAAlL,GAAA,WAAA+qN,EAAAvqN,QAAAR,KACHlF,IAAK,SAAA2E,GAAA,OAAArF,EAAAqF,KACbyL,OAAA,SAAAxL,GAAA,OAAAA,IAEeb,OAAa,aAQvByoN,EAAc9tH,EAAUwxH,EAAEhvL,GAChC,IAAAoE,EAASpzB,KAAK+rF,QACN9rC,QAAM,SAAY7yD,GACxBo/F,EAAWt/F,EAAiC,IAAAE,QAAAgmC,OAAAo5D,OAE1C36F,OAAaosN,MACdzxH,EAAA71D,MAAA,EAAAsnL,IAIH,IAAAC,EAAA,2BAAAF,EAGA,OADWG,EAA0D,EAAArrF,UAAAorF,EAAA1xH,GAChEA,QAQL+tH,EAAY,SAAAvrL,EAAAovL,UACApvL,EAAAtS,OAAA,SAAA2hM,EAAAjxN,EAAAhE,GACX,IAAAk1N,EAAAF,KAAA1sN,KAAA0sN,EAAA1sN,KAAAtE,EAAA4F,IAEG,OAAOqrN,EAAUlqL,OAAUmqL,EAAA,IAAAl1N,SAK/BoxN,EAAiB,SAACp6L,EAAAm+L,GAClB,MAAK,CACHzzN,KAAMpD,EAAkB,SAAAsD,MAAAuzN,EAAAzzN,MAAA,EAAAs1B,GACxBl1B,GAAIxD,EAAiB,SAAAsD,MAAAuzN,EAAArzN,IAAA,EAAAk1B,OACnBm+L,MAGS,SAAUtwN,MACtB,OAAAA,EAED,OAAO,KAGI,IAAuB,IAAvBA,EAAAuF,QAAA,OACP,OAAEvF,KAEL,IAAAA,EAAA4D,OAEG,OAAEjH,OAAYlD,EAAa,MAAzBkD,CAAyBqD,EAAA,eAE9B,KAAAA,EAAA4D,OAED,OAASjH,OAAAlD,EAAA,MAAAkD,CAAAqD,EAAA,mBAIT,GAAoB,KAAhBA,EAAE4D,OACJ,OAAOjH,OAAGlD,EAAA,MAAHkD,CAAGqD,EAAA,uBAGZ,IAAKysC,MAACzsC,GAAa,CACjB,IAAAo8G,EAAStyG,SAAA9J,EAAA,IACV,OAAArD,OAAAlD,EAAA,MAAAkD,CAAAy/G,GAGD,aAEFm0G,EAAqB,SAAA3yM,EAAAuU,GACnB,IAAAv1B,EAAA,CACAC,KAAA2zN,EAAA5yM,EAAA/gB,MAFUI,GAASuzN,EAAT5yM,EAAS3gB,KAMnB,OAAqEJ,KAAApD,EAAA,SAAAsD,MAAAH,EAAAC,MAAA,EAAAs1B,GAE1Dl1B,GAAAxD,EAA6D,SAAAsD,MAAAH,EAAAK,IAAA,EAAAk1B,GAClEv1B,IAAIA,IAIV4vN,EAAc,SAAAxsN,GACd,IAAAA,EAEW,YAEX,GAAiB,iBAANA,EACP,OAAO,QAEVA,EAAA8T,MACD,OAAO9T,EAIP,IADW,IAAA2D,EAAAhH,OAAiBgH,KAAA3D,GACxB7E,EAAA,EAAAA,EAAmBwI,EAAAC,OAAAzI,IAAA,CACrB,IAAA4J,EAAApB,EAAAxI,GACD2Y,EAAA04M,EAAAxsN,EAAA+E,IACD,GAAA+O,EAEc,OAAAA,SAGb,MAGF28M,EAAA,SAAA73B,+EC1gB4C,OAAAp5L,EAAAof,UAAAjQ,EAAAiQ,WAEG,EAgB1Cpf,EAAMof,UAAWjQ,EAAEiQ,UAEV,EAEN,GAEP8xM,EAAA,SAAAlxN,EAAAmP,GAEF,OAAAnP,EAAAof,UAAAjQ,EAAAiQ,WAAuC,EAGrCpf,EAAAof,UACEjQ,EAAAiQ,UAHF,oBAgDE,WAAM,eAEA,UAAuC,mBAE7C,WACE,SAAAmsC,mBACK,GAAAA,GAAA4lK,EAAAvnD,UAAAunD,EAAAxnD,uBAELynD,EAAAhzE,kCAJFwrB,UAIGh/J,EAAAsE,KAAAmiN,GAAAzmN,EAAAsE,KAAAgiN,KACGzxN,EAAmB,KAAA2xN,EAAA,CAAAxmN,SAAA,CAAAwhH,iBAAA,EAAAxhH,2BAG3B0mN,EAAA,IAFE,WAAA1vN,OAAAsoC,SAAAu3C,SAAA,kBAEe7/E,OAACsoC,SAAagoB,KAAA27J,EAAA,EAAA/nM,mBAC7B8nB,SAAK,OACP0jL,EAAEA,EAAApoL,MAAA,EAAAooL,EAAAltN,OAAA,OAGAktN,EAAa1rN,KAGf,SAAA8zG,MAEAA,EAAEt3E,qBA3DD,SAAAtgC,EAAAI,skJAMK/I,EAAGC,EAAAC,EAAA,sBAAA4kG,UACW9kG,EAAA,UACRA,EAAA,UAC0BA,EAAAqhC,EAAA94B,KAC3BvI,EAAA,UACAA,EAAA,2BAKP,WAAa,CAAAqH,MAAA,OAAAC,MAAA,SAAAD,MAAA,QAAAC,MAAA,+DAGb,0EAII3B,gBACFG,KAAUH,IAAMG,yBACjB9B,OAAAo0N,EAAA,EAAAp0N,yFAGW,EAAA8B,KAAA,SAAA6U,mCAGZ6M,mBACA1hB,KAAAC,MAAYsyN,EAAAzwN,EAAAywN,gBAAA/yN,EAAAsC,EAAAtC,MAACmnC,EAAA7kC,EAAA6kC,SACZ,GAAA3mC,KAAAW,WAAAqC,IAAA,QAAAhD,KAAAH,MAAAo/F,YAAA,wDACJ,OAmCO,OADRpqF,EAAAgQ,OAAAliB,OAkDCsoC,SAAAvjB,SAjDS,2BAMF,SAAAloB,KACAqB,SAAA,CAAArB,+BASA,SAAAmnC,KAMA9lC,SAAA,CAAA8lC,uCAWA,SAAApJ,KACA18B,SAAA,CAAA0xN,gBAAAh1L,uBASA,SAAAliC,GAMP,gBAAAA,EAAAytB,aAAA,KAAAztB,EAAAytB,YACHztB,EAACO,6GAjG4F,EAAAojG,EAAAp/F,GC1D7Fo/F,EAAAv+F,UAAAkpB,kBAAA,WAAe,OAASnpB,EAA6B,EAAAR,UAAA,oBAAd,IAAAwyN,EAAAtqJ,EAAOuqJ,EAAAnjM,EACrC,OAAA9uB,EAAA,EAAAR,KAAA,SAAA8B,GACL,OAAAA,EAAAN,OACE,OAAe,SAAAxB,KAAAW,WAAAM,IAAA,QAAAjB,KAAAH,MAAAo/F,YAAA,iBACX,KAAO,EAEH,OADNuzH,EAAA1wN,EAAkB+iB,OACZ,GAAiB7kB,KAAAW,WAAAR,OAAA,CAAAy6E,SAAA,KACvB,KAAQ,SACD1S,EAAKpmE,EAAA+iB,OACb4tM,EAAA,CAEa51N,GAAA,EACfjB,MAAA,UACDwZ,KAAA,GACHrB,KAAA,iTCdgD,4HAM/CirF,EAAAv+F,UAAAoB,OAAA,WAHU,IAAA/B,EAAAE,KAqBN8B,EAAW9B,KAAGC,MAACT,EAAsCsC,EAAAtC,MAACmnC,EAAA7kC,EAAA6kC,SAAA4rL,EAAAzwN,EAAAywN,gBAAArqJ,EAAApmE,EAAAomE,WACtD,OAAEjmE,EAAqBlB,EAAAmB,cAAA,QAAAH,UAAA,wBAAA2wN,SAAA1yN,KAAA2yN,cACpB1wN,EAAOlB,EAAAmB,cAAA,MAAAH,UAAA,+BACbE,EAAAlB,EAAAmB,cAAA,OAAAH,UAAA,WAEGE,EAA+DlB,EAAAmB,cAAA,QAAAH,UAAA,sCAC7DE,EAAwBlB,EAAAmB,cAAA2tH,EAAA,QAAAhyF,cAAA,EAAAt8B,MAAAsgL,EAAAj3K,KAAA,SAAAgE,GAAA,OAAAA,EAAArN,QAAA/B,IAAA0H,QAAA26K,EAAAv/K,SAAA,SAAA9C,GAAA,OAAAM,EAAA8yN,eAAApzN,EAAA+B,QAAA1C,MAAA,MACvBoD,EAAUlB,EAAAmB,cAAA,OAAAH,UAAA,WAChBE,EAAAlB,EAAAmB,cAAA2tH,EAAA,WAAAhxH,MAAA,GAAAsuD,QAAA,8GAEUlrD,EAAqElB,EAAAmB,cAAA2tH,EAAA,QAAAtuH,MAAA2mE,EAAAt9D,KAAA,SAAAvP,GAAA,OAAAA,EAAAwB,KAAA01N,IAAA31J,eAAA,SAAAx2D,GAAA,OAAAA,EAAAvJ,IAAA8/D,eAAA38D,KAAA6yN,gBAAAvwN,SAAA,SAAAjH,GAAA,OAAAyE,EAAAgzN,uBAAAz3N,EAAAwB,KAAAqK,QAAAghE,EAAA3lE,YAAA,2BAAA1D,MAAA,MAC1EoD,EAA+BlB,EAAAmB,cAAA,OAAAH,UAAA,WAC5BE,EAAKlB,EAAAmB,cAAA,SAAAH,UAAA,sCACbE,EAAAlB,EAAAmB,cAAA2tH,EAAA,QAAAhyF,cAAA,EAAAt8B,MAAAwxN,EAAAnoN,KAAA,SAAAgE,GAAA,OAAAA,EAAArN,QAAAolC,IAAArkC,SAAA,SAAAqkC,GAAA,OAAA7mC,EAAAkzN,kBAAArsL,EAAAplC,QAAA2F,QAAA6rN,EAAAl0N,MAAA,MAMaoD,EAASlB,EAAAmB,cAAA,OAAAH,UAAA,sBAAzBE,EAKClB,EAAAmB,cAAA,UAAA6R,KAAA,SAAAhS,UAAA,kDAHiB3H,EAAM,0BAGxB,sBAEA64N,EAKCnxN,GAJC,IAAA2X,EAAO3X,EAAM2X,mDACM,UAAA6H,EAAAhb,MAAMgb,EAAAG,YAAjBC,mBACNJ,aAHwBpnB,EAAAC,EAAAC,EAAA,sBAAA64N,+BAY3B,SAAApwN,EAAAzI,EAAAF,gBAGsBA,EAAAC,EAAAC,EAAA,sBAAA+vC,oEACnBjwC,EAAMC,EAAAC,EAAA,sBAAA84N,oCAAmDh5N,EAAAC,EAAAC,EAAA,sBAAA+4N,IAChDj5N,EAAaC,EAAAC,EAAA,sBAAAg5N,QAEzBjpL,2BAEM,SAASA,GAAhBA,EAKC,uBAJCA,EAAqB,4EADhB,2BAEHs9B,GAAA,yFAGH4rJ,EAAA,SAAA3yN,GAAA,iKC7ED,OAAAoB,EAAAN,OAAA,gBAAAtD,OAAAspE,EAAA,cAAAtpE,GAAA+C,IAAA,mBAAsD,cAE3BwmE,EAAG3lE,EAAA+iB,iDCA9B,gBAAAgmB,GAAA,OAAArqC,EAAA,EAAAV,OAAA,wBAAAwzN,EAAa,OAAA9yN,EAAsB,EAAAR,KAAA,SAAA8B,GACzB,OAAEA,EAAAN,OACV,KAAe,QAAQ,GAAAtD,OAAAspE,EAAA,cAAAtpE,GAAA+C,IAAA,qBACZ,KAAE,EAGF,OAFEqyN,EAAAxxN,EAAiB+iB,OAClBgmB,EAAA0oL,EAAeD,IAChB,mBAKXE,EAAAnyN,GACA,IAAAvB,EAAWE,KACX,gBAAA6qC,GAAA,OAAArqC,EAAA,EAAAV,OAAA,oBAEF,OAAAU,EAAA,EAAAR,KAAA,SAAA8B,mBAEG,gBAAA5D,OAAAspE,EAAA,cAAAtpE,GAAAghH,MAAA,kBAAA79G,EAAAC,OAAA,CAAAu7B,KAAAx7B,EAAAw7B,QACU,OAGA,OAFE/6B,EAAA+iB,OACJgmB,EAAA4oL,KACO,mBAKbN,EAAC7xN,GACJ,IAAGxB,EAAAE,KACH,gBAAA6qC,GAAA,OAAArqC,EAAA,EAAAV,OAAA,6RC/BF,OAAAgC,EAAAN,OAAA,gBAAAtD,OAAAspE,EAAA,cAAAtpE,GAAAghH,MAAA,oBAAA92B,EAAA,6BAAAtmF,EAAA+iB,OAAAgmB,EAAAqoL,KAAA,gDAQsDh5N,EAAaC,EAAAC,EAAA,sBAAAu/G,IAChD,IAAK+5G,EAEFx5N,EAAA,QAGpBy/G,EAAiBz7G,OAAMw1N,EAA2C,EAAjDx1N,CAAiD,mBAAAmuC,wBAM3DxpC,EAAMzI,EAAAF,gBAEAA,EAAAC,EAAAC,EAAA,sBAAAu5N,IACZz5N,EAAAC,EAAAC,EAAA,sBAAAw5N,QAEDD,EAAsB,CACvB5vJ,SAAA,mBAEMI,cAAS,SACdC,YAAO,OACRY,YAAA,kBAEDM,WAAA,iJAOGQ,UAAA,gBAMD8tJ,EAAgC,SAAA9hK,GAChC,OAAMA,EAAOQ,WAAalxD,IAAC,SAAAqxD,GACvB,MAAK,CAEDjxD,MAAMixD,EAAE72D,MAEf+K,IAAA8rD,EAAA70B,KAAMppB,OAAWi+C,EAAGj+C,OACf1Y,KAAK,iBAAA22D,EAAAj+C,OAAA,wCAQV,SAAA3R,EAAAI,KAOF4wN,KAED,SAAAhxN,EAAAzI,EAAAF,yBAwBK45N,EAAAjrL,EAAAm3K,EAAAjgM,OACFg0M,EAAA70N,KAAA80N,KAAA,IAAAC,EAAA/0N,KAAA80N,KAAA,IAAAE,EAAAh1N,KAAA80N,KAAA,KAAM90N,KAAA08B,IAAAokL,EAAAn3K,GAAA3pC,KAAA+I,IAAA,EAAA8X,GACLo0M,EAAAj1N,KAAA8oC,IAAA,GAAA9oC,KAAuB+N,MAAA/N,KAAAwQ,IAAA0kN,GAAAl1N,KAAA+oC,OACvB5S,EAAM++L,EAASD,SACf9+L,GAAI0+L,KACE,MAEFE,KACA,KAEEC,OACD,KAECrrL,GAAQsrL,EAAUA,aAET93M,EAAIwrB,YACb3oC,KAAO+N,MAAC/N,KAAAwQ,IAAAm4B,GAAA3oC,KAAA+oC,eAWfosL,EAAA1rN,EAAAV,EAAA+4C,EAAAtkC,GACI,IAMCtU,EAND6W,GAAShX,EAAAU,GAAoBq4C,EAC5BC,GAAA/hD,KAAA+N,MAAA/N,KAAAwQ,IAAAuP,GAAA/f,KAAA+oC,MACAiZ,EAAOxkC,EACPqrB,EAAK7oC,KAAO8oC,IAAG,IAAIiZ,GACnB/Y,EAAOjpB,EAAK8oB,SAGlBG,EAAA,IACM9/B,EAAO,EAGL8/B,EAAQ,GACd9/B,EAAO,EACF8/B,EAAQ,OAAM,MAAAgZ,GAAAD,EAAA,GAAAC,KACf94C,EAAK,MACT64C,IAID74C,EADE8/B,EAAA,IACF,EAEA,MACKH,EAQR,SAACusL,EAAAC,EAAAC,EAAAj4M,EAAAC,GAED,sDAOM,IACIuiC,EAAQ7/C,KAAG08B,IAAO,IAAD3zB,EAAC,EADR,IACQA,GACL,OAAbssN,IACA5rN,GAAMo2C,GAKX,MAAAy1K,GAAA,MAAAD,IACGtsN,GAAA82C,OAGJ,CAIiB,MAAfw1K,IACD5rN,GAxBL,IAwBKsW,GAIY,SAAA1C,MAAA,IAChB5T,EAAA,GAIE,MAAA6rN,IACkBvsN,GAlCrB,IAkCoCgX,GACZ,GAAgB,MAAbzC,GAAeA,GAAA,IACzCvU,EAAA,GAMC,MAAS,CAAAU,IAAOA,EAAAV,IAAUA,GAOrB,SAASwsN,EAAmBl4M,EAAWC,EAAAP,EAAA3Q,GAC5C,MAAIxJ,EAAKwyN,EAA8Br4M,EAAAtT,IAAAsT,EAAAhU,IAAAsU,EAAAC,GAAA7T,EAAA7G,EAAA6G,IAEtCsW,GAFsCnd,EAAAmG,IAEtCU,IADU,GAAAzJ,KAAA80N,KAAA1oN,IAGL21C,GAAA/hD,KAAW+N,MAAI/N,KAAQwQ,IAAIuP,GAAC/f,KAAA+oC,MAC9BF,EAAA7oC,KAAQ8oC,IAAO,IAAEiZ,GAEpB/Y,EAAAjpB,EAAA8oB,EACCG,EAAO,IACR9/B,EAAA,8CCpNH,IAAAsU,EAAAxd,KAAA+I,IAAA,IAAA/I,KAAA+N,MAAA/N,KAAAwQ,IAAAuP,GAAA/f,KAAA+oC,OAGA,OAAAvrB,8BADAA,EAAAxd,KAAA+N,MAAA/N,KAAAwQ,IAAAtH,GAAgElJ,KAAA+oC,OCFhE,SAAAysL,EAAA/sL,EAAAh/B,EAAAV,GAAA,GAAAU,GAAAV,GAAA0/B,EAAA,KAAAxoB,EAAAlX,EAAAU,EAAA23I,EAAAnhI,EAAAwoB,EAAA,IACM,OAAI24G,GAAY,GACP,WAGPA,GAAkB,MAAInhI,GAL9B,MAOc,QAEXmhI,GAAA,IAEU,cAGGA,GAAsB,SAAAnhI,GAdtB,QAeJ,QAET,QAGD,MAAM,iBAMN8wI,EAAQ1uJ,EAAM6jC,UACZlmC,KAAQwQ,IAAAnO,GAAArC,KAAAwQ,IAAA01B,cAKGihE,YACNA,EAAGxgG,uBAMUwgG,MACnBr4D,MAAAq4D,GACF,SAGC,IAAIsuH,EAAUtuH,EAAIv/F,QAAS,YACZ,IAAb6tN,EACD,EAIatuH,EAAAlhG,OAAAwvN,EAAkC,IFsB/C5rN,EAAA3O,GACuCF,EAAkCC,EAAAC,EAAe,6BAAA05N,IAC5D55N,EAAAC,EAAAC,EAAA,sCAAAw6N,IAEL16N,EAAkBC,EAAOC,EAAE,oCAAAi6N,IAC3Bn6N,EAAkBC,EAAOC,EAAE,iCAAAk6N,IAC3Bp6N,EAAAC,EAAAC,EAAA,wCAAAq6N,IAELv6N,EAAAC,EAAAC,EAAA,sCAAAs6N,IACjBx6N,EAAAC,EAAAC,EAA6D,yBAAA61J,IAC7D/1J,EAAsCC,EAAAC,EAAA,iCAAAy6N,IACd36N,EAAAC,EAAAC,EAAA,uCAAA06N,KEzBrBC,KACL,SAAYlyN,EAAAI,4OCzDd+xN,KAAY,SAGXnyN,EAAAzI,EAAAF,yBAiBEwwH,EAAAj5E,GAEU,GAAY,MAAZA,EAAA,GACP,OAAE,IAAAymB,OAAY,IAAAzmB,EAAA,KAD2C,IAG5D11B,EAAA01B,EAAA11B,MAAA,IAAAm8C,OAAA,6IC3BH,SAEA,IAAA6xD,EAAA1+G,SAAAomC,EAAA,IACA/8B,EAAA+8B,EAAA+P,wDCHA,mBAAAuoE,EAA8D,QAOxD,YAAeA,EAEd,IAAS,IACJ,aAAAA,EACN,QACF,IAAOr1G,EACR,OAAAs5B,MAAA+7E,GAAA,EAAAA,EAEK,MAAC,IAAA3zG,MAAA,uBAAmC1B,aAGtCugN,EAAgB1zN,GAClB,OAAEA,SAAAod,OAAAuB,SAAA3e,GACKA,EAAAsE,WAEL,GAEN,SAACqvN,EAAA3zN,0HFpBCrH,EAAAC,EAAAC,EAA+C,sBAAAswH,IAF1BxwH,EAGtBC,EAAAC,EAAA,sBAAA+6N,IAcmCj7N,EAACC,EAAAC,EAA+B,sBAAA66N,IAChD/6N,EAAoBC,EAAAC,EAAA,sBAAA86N,IACZh7N,EAAAC,EAAAC,EAAA,sBAAAg7N,UGrBkB,SAAAvyN,EAAAzI,EAAAF,GAEU,iBAiBtDiwC,EAhBuDjwC,EAAAC,EAAAC,EAAA,sBAAA+vC,IACZjwC,EAAAC,EAAAC,EAAA,sBAAA0gG,IAY7C5gG,EAAAC,EAAAC,EAAA,sBAAA2gG,aAIE5wD,KAOC,4CAPyC,mDAAUA,EAAA,WAAyB,SAA2BkrL,GAAA,YAqBxGlrL,EAAAmrL,6BACED,MAEA,SAAA76H,GAAA,YAEFrwD,EAAAorL,8CAeM1yN,EAAAI,yFAESH,IAAG,2BAAAC,KAAAC,IAAAN,s0CAKd,cACDitD,SAED6lK,EAAkB7lK,oBASZuqB,QAAAl0E,UAEHyvN,EAAA,SACF,gBAAE9lK,EAAA,kBAEH,SAAKphB,GAhEL,OAiEFinL,EAAE7lK,GAAAphB,EAjEAA,IAEA6qE,MAAA,SAAAhiB,GAGA,OAAA/yE,QAAey+D,OAAO,sBASvB4yI,OAED,SAAA7yN,EAAAzI,EAAAF,gBAwDsBA,EAAKC,EAAAC,EAAA,sBAAAu7N,IAEb,MAAIn1N,EAAsCtG,EAAE,QACzC23K,EAAQ33K,EAAA,QAEhB07N,EAAqC17N,EAAA,QACjC27N,EAAU37N,EAAA,QACX47N,EAA0C57N,EAAA,QACzC67N,EAA8C77N,EAAA,UAOxD,oBAKCioC,EAAKxhC,EAAoB0kB,EAAAD,SACvBplB,qBACMW,kBACC0kB,iBACED,qBACH,SAAYmd,OAClBlnC,EAAWyE,EAAAsiC,sBACiB,GAAA/mC,IAAAsnC,aAAAJ,IAAA,SAE7ByzL,kBAAE,SAAAl0N,GACJ,IAAAukB,EAAAxR,EAEOE,EAAIjT,EAAImhC,WAASA,OAAW,IAAAluB,GAAoBA,EAAAa,EAAA9T,EAAAuuD,YAAA,IAAAz6C,KAAA2sB,EAAAzgC,EAAAygC,QAClD1a,EAAY/nB,EAAKslB,UAAAjlB,YAMnB8iC,IAASpb,EAAWob,YAAAotB,MAAAxoC,EAAAwoC,MAqBlB,IAAA4lK,EAAmBz1N,EAAiB,KAAAqnB,EAAA,CAAAob,mBAAAh9B,EAAAoqD,aAAApqD,EAAA26B,IAAAyvB,EAAAxoC,EAAA+Y,SAAA36B,EAAAs8B,YAEtCrkC,OAAMgH,KAAK+wN,GAAa1iK,QAAA,SAAAjtD,QACCL,IAAtBgwN,EAAc3vN,WACpB2vN,EAAA3vN,KAKHxG,EAAAslB,UAAAjlB,OAAA81N,QA5BM,IACA,QAAaC,EAAA11N,EAAA,EAFK,uCAEL21N,EAAAD,EAAAlhN,QAAAmhN,EAAAlhN,KAAAkhN,EAAAD,EAAAlhN,OAAA,QAEZ6S,EADMsuM,EAAkB50N,QAIzB,MAACi6E,GAAAn1D,EAAA,CAAAgP,MAAAmmD,GACA,QACJ,IACF26I,MAAAlhN,OAAAJ,EAAAqhN,EAAAz6I,SAAA5mE,EAAA9U,KAAAm2N,GAGM,QAAiB,GAAG7vM,EAAK,MAAOA,EAACgP,OAGjCv1B,EAAAslB,UAAmBjlB,OAAC0nB,KAczB+tM,EAAmE,EAAAp8M,GAAA,iBAAuBxZ,KAAIunB,cAAennB,KAAAJ,MAAAqlB,GAE7GuwM,EAAsB,EAAAp8M,GAAA,oBAAAxZ,KAAAg2N,qBACU,EAAAx8M,GAAA,eAAAxZ,KAAAo2N,iBAElBp2N,cAzDRomB,QAAS,CAAG,aAAK,0BA4DzB+b,EAAA1hC,UAAA4rC,OAAA,SAAAhxC,EACE+B,UACA,IAAA04N,EAAE,EAAAz6N,EAAsB+B,MAGjBqD,UAAU41N,WAAa,SAAOh7N,QACpCA,eAGCoF,UAAY2hC,WAAA,kBACbpiC,KAAA3E,aAGCoF,UAAe61N,yBAAU,SAAAtsK,EAAA9iD,EAAAkwF,OAC1Bt3F,EAAAE,KAEDkH,EAAQw5G,WAAW,EACjBtpB,EAAA5uF,MAA8B,qBAAlB4uF,EAAA5uF,KAAAm3G,SACbvoB,EAAA2qB,WAAA,EAEG/hH,KAAKqlB,WAAUG,SAAU,gBAAG,CAC9B5pB,MAAW,WACZC,KAAA,2CAEML,MAAK,+CACbO,QAAA,mBAEDD,KAAA,aACSE,UAAU,WAClB8D,EAAAwJ,KAAA0gD,EAAA9iD,OAKIkwF,EAAA5uF,MAAA,gBAAA4uF,EAAA5uF,KAAAm3G,SACJvoB,EAAA2qB,WAAA,EAED/hH,KAAAqlB,WAAAG,SAAA,iBACO5pB,MAAU,WACbC,KAAA,oEACAL,MAAU,+CACTO,QAAA,mBACJD,KAAA,aAEDE,UAAA,WACO8D,EAAWwJ,KAAA0gD,EAAS9iD,OAI1BkwF,EAAA5uF,MAAA,qBAAA4uF,EAAA5uF,KAAAm3G,SAEDvoB,EAAA2qB,WAAA,EAAA/hH,KAAAqlB,WAmBCG,SAAA,iBAlBK5pB,MAAQ,mBAERC,KAASu7F,EAAE5uF,KAAA22B,QACb3jC,MAAU,8FACRO,QAAO,YACND,KAAA,aACJqvF,cAAA,UAAMD,YAAA,WACEprF,EAAOwnB,mBAEXtrB,UAAA,WACJ8D,EAAAwJ,KAAA0gD,EAAAxpD,EAAA,KAAA0G,EAAA,CAAAw5G,WAAA,YAMCjgH,UAAW81N,SAAA,SAAA/tN,GACbxI,KAAG3E,UAAAgV,QAAA7H,EAAA6H,QAEPrQ,KAAAqlB,WAACG,SAAA,kBAAAxlB,KAAA3E,WAAA2E,KAAAqlB,WAAAG,SAAA,uEAQG,OAJFgxM,IAFFx2N,KAAAolB,UAAA1iB,QAGA1C,KAAAolB,UAAAze,IAAA6vN,GAAA34N,UAGImC,KAAA3E,WAGF8mC,EAAA1hC,UAAoB6I,KAAS,SAAA0gD,EAAA9iD,GAC9B,IAAApH,EAAAE,KAGC,OADKkH,EAAS2hB,SAAe3hB,EAAA2hB,UAAA,EAAA3hB,EAAA2hB,SAAA7oB,KAAA3E,UAAA+B,KAAAyrB,UAAAmhC,EAAAnhC,SACtB7oB,KAAAW,WACR4mB,cAAAyiC,EAAA9iD,0QCjQD,8DAAAlH,KAAA3E,UAAA+B,KAAA+qB,YACAnoB,KAAAy2N,6HCFAz2N,KAAA3E,UAAAgV,QAAA,EACArQ,KAAA02N,gBAEA12N,KAAAsJ,6lBCFgDtJ,KAAAqlB,WAAAG,SAAA,cAQhDi0E,aAAA,kGAIGt3D,EAAA1hC,UAAAilJ,cAAA,SAAAnoH,EAAA+8C,GACH,IAAAx6E,EAAAE,KAYI,OARUs6E,EAHHt6E,KAAEW,WAAA+3D,OAAA,6BAAAn7B,GAAAr8B,KAAA,WACX,OAAuC,yEAQpC,YAEYA,KAAK,SAAQwW,UACxB5X,EAAAzE,WAAAyE,EAAAzE,UAAAwB,KAAA0gC,IACIz9B,EAACzE,UAAe+B,KAACk9E,UAAA5iE,GACZA,OH+EV,2BG3EqB,EAAAokE,QAAA,eAAA35C,oBAQrBt/B,EAAAI,OAGHP,EAAA,mFAEIG,OAAO,MAAKC,IAAM,2BAAAC,KAAAC,IAAAN,EADpB,2lRAEOA,iBAKAG,EAAKI,OAGdP,EAAA,uEAEIG,OAAY,MAAKC,IAAA,CAAM,iBAAI,SAAAC,KAAAC,IAAAN,EAD7B,09FAEMA,QAKP,SAAAG,EAAAzI,EAAAF,sBAOQA,EAAA,QAEVmlE,EAAAnlE,EAAA,QCtEDy8N,EAAA,WACE,SAAAC,EAAoBC,QAAA,IAAAA,IAAQA,EAAA,GAAU72N,KAAAmF,OAAG,EAAYnF,KAAAirE,OAAA,IAAA/2C,MAErDl0B,KAAAmF,OAAA0xN,ECH+B,yCDK9B,IAAAxwM,EAAAvkB,EAED,GAAAqD,EAAAnF,KAAAmF,OAECnF,KAAAmF,cAGO,GAAGA,EAAOnF,KAASmF,OAAW,CAErC,IAAAmtK,EAAA,IAAAp+I,MAED,IACS,IAAK,IAAArf,EAAU4R,EAAA,EAAAzmB,KAAAirE,QAAAl2D,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CACvB,IAAAzX,EAAAwX,EAAAxT,MACF,GAAD+wK,EAAC1iK,KAAArS,KAAAurC,IAAA3jC,EAAA,iBEjBC,MAAAq2E,GAAoBn1D,EAAgC,CAAAgP,MAAammD,GAA7C,QAAgC,IAAiBzmE,MAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAErE,WAAAwR,EAAA,MAAAA,EAAAgP,OAECr1B,KAAAirE,OAAAqnG,kBAEDskD,EAAAn2N,UAAGsK,OAAH,SAAiB/E,GACf,IAAAwK,EAAW,CACZq4B,MAAA7oC,KAAAmF,OAED2jC,IAAA9oC,KAAAmF,OAAAa,EAAAb,OACEmJ,OAAOtI,GAKR,OAFDhG,KAAAmF,OAAAqL,EAAAs4B,IACE9oC,KAAAirE,OAAOr7D,KAAAY,GACRA,GACFomN,EAAAn2N,UAAAQ,IAAA,SAAAvE,sHDrBDk6N,EAAAn2N,UAAAkS,QAAA,kBAAAzU,OAAAmhE,EAAA,EAAAnhE,CAAA8B,OAAA42N,EAAAn2N,UAAAmS,OAAA,WAAkC,OAAA1U,OAAAmhE,EAAA,EAAAnhE,CAAA8B,OAED42N,EDAjC,gFG4FE,mDA3FmD31N,IAAA,WAgErD,OAAAjB,KAAAqG,KAYEuwC,YAAA,EAAAC,cACE,gCAED,OAAA72C,KAAAuB,SAGYd,UAAUkS,QAAA,WAEtB,OADQ,IAAKuhB,MAAAl0B,KAAAmF,QACbqK,KAAAxP,KAAAuB,UAGMd,UAAWmS,OAAS,WACzB,OAAO5S,KAAK2S,WAGdmkN,KAMAC,EAAmB,oBACZC,EAAA/rJ,EAAmB7uC,GACxBp8B,KAAAirE,OAAYA,EACbjrE,KAAAo8B,0EAKE,OAAAp8B,KAAAirE,OAAA9lE,QAEDyxC,YAAK,EACLC,cAAY,IAEhBmgL,EAAAv2N,UAACQ,IAAA,SAAAvE,GA9CgD,OAAAsD,KAAAirE,OAAAhqE,IAAAvE,GAAAsD,KAAAo8B,OAwErC46L,EAAAv2N,UAIXkS,QAAA,WAJD,OAAYzU,OAAAmhE,EAAc,EAAdnhE,CAAc8B,OAExBg3N,EAAAv2N,UAAAmS,OAAA,WACA,OAAA1U,OAAAmhE,EAAyB,EAAzBnhE,CAAyB8B,SA1CN,eCnGrB9F,EAAAC,EAAAC,EAAA,sBAAAu8N,IACAz8N,EAAAC,EAAgEC,EAAoB,sBAAAmY,EAAA,+OC8IpF0kN,4BA7IA,SAAAC,EAAA57N,GAAA,IAAAwE,EAAAF,EAAAG,KAAAC,YAAY,OAAZF,EAAAxE,QAGCwE,SAHDU,EAAA,EAAA02N,EAAAt3N,GACEs3N,EAAAz2N,UAAAyqI,UAAe,SAAA3nI,GADL,OAEVvD,KAAAuD,SAFqBvD,MAKvBk3N,EAAYz2N,UAAUwqI,YAAA,SAAAx7H,GAEpB,OADAzP,KAAAyP,WACAzP,MA8CAk3N,EAAAz2N,UAAsBkoK,oBAAA,SAAAlvJ,GAEtB,OADAzZ,KAAA+wG,iBAAAt3F,EACAzZ,MA+EAk3N,EAAAz2N,UAAAgpI,sBAAA,SAAkDhwH,UAChDzZ,KAAKyxG,mBAAkBh4F,EACrBzZ,MAEFk3N,aACY,IAEhB,SAACD,iEAAD,kBChJA,SAAAp0N,EAAAI,GAAqC,IAAAP,EAAA,wCAGrCC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,EAFA,+6DASEy0N,KACD,SAAAt0N,EAAAI,ikHCVDm0N,KACA,SAAAv0N,EAAAzI,EAAAF,wBCSEm9N,oNAXwBC,EAAA,wBACaA,EAAA,UASvCA,EAAA,yBAA8BA,EAAA,iBAG5BD,EAAC,sBAEDA,EAAA,cAEQ,gBACW,6BACfA,EAAsB,WACT,oBACbE,cAKG92N,UAAc+2N,cAAA,SAAA52L,GAKvB,OAJS5gC,KAAKgkG,mCAGXhkG,KAAAgkG,YAAAp0F,KAAAgxB,GACH5gC,QAXmB,+FCwCjB+gL,EAAA02C,iBACMC,EAAkB,SAAAD,mBAYpB50N,EAAKI,mBA9BFJ,EAAQI,wJAGX,uxCACHA,QAAAP,iBASMG,EAAAzI,EAAAF,gBA+BPA,EAAAC,EAAAC,EAAA,sBAAA89F,IACQ,IAAA13F,EAAYtG,EAAuB,QACnCuI,EAAQvI,EAAyB,QAEvB+H,EAAkC/H,EAAAqhC,EAAA94B,GAC5Ck1N,EAAAz9N,EAAA,QAIRg+F,EAAC,SAAAt4F,GA3D6B,SAAAs4F,EAAAr4F,GA8DH,OAAAD,EAAAG,KAAAC,KAAAH,IAAAG,KC/E7B,OD6EAQ,EAAC,EAAA03F,EAAAt4F,iXC/FuE,IAkBxEg4N,IAAA1/H,ED4EG,sBC/DD,SAAAr1F,EAAAzI,EAAwBF,gDAKrB,IAAAsG,EAAAtG,EAAA,QACHuI,EAAqEvI,EAAA,QAIrEktL,EAAC,SAAAxnL,iBAGC,IAAIE,EAAAF,EAAcG,KAAAC,KAAYH,IAAAG,cAC5BsrC,WAAK,WACNxrC,EAAA+3N,aAEOzqJ,aAAattE,EAAM+3N,eACzBh3N,SAAsB,SAAAm7D,GAAA,OAAAx7D,EAAkB,KAAAw7D,EAAA,CAAA5vD,MAAA,oBAClC,WACU,YAAN6vF,8BAQCjgC,GAAiB,OAACx7D,EAAA,KAAAw7D,EAAA,CAAA5vD,MAAA,oBANfgtB,WAAA,sBACD,SAAM4iC,GAAA,OAAAx7D,EAAmE,KAAAw7D,EAAA,CAAA5vD,MAAA,eAChF6vF,+BAQHn8F,EAAAD,MAAA6R,WAAA,aACF,YArBLlR,EAAA,EAAA4mL,EAA+BxnL,2LAwBjCwnL,EAAC3mL,UAAAoB,OAAA,WAjD4C,IAAAC,EAAA9B,KAAAH,MAAAkrB,EAAAjpB,EAAAipB,SAAApZ,EAAa7P,EAiDzD6P,wHA1BE,CAHkBzX,EAAAqhC,EAAA94B,GCxCrB1B,EAAAohE,yQCAuB,kCAAAniE,6DAGjB,IAAAqmB,EAAAvkB,EAKF,GAJA+C,EAAiBnB,aAClB1D,KAAA2D,kBAAAkB,EAAAnB,YAGO1D,KAAA5C,MAAY4C,KAAW5C,KAAA6mG,aAC7B,IAAkB,IAAApvF,EAAArU,EAAY,EAAER,KAAI5C,KAAE6mG,UAAAlvF,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAEF,EAAAG,OAAA,CAA7B,IAAGsd,EAAAvd,EAAAxT,MACZ,GAAA+wB,EAAgBve,OAAIuvD,EAAuB,EAAA8oB,MAAA95D,EAAAorD,UAAA,CAC5C,IAAAo6I,EAAAjzN,EAAAytB,EAAAorD,gLAKJ,MAAAlC,GAAAn1D,EAAA,CAAAgP,MAAAmmD,0FChBDu8I,KACuB,SAAAl1N,EAAAI,GAGyB,IAAAP,EAAA,mDAEXC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,EADiB,ulCAGtDG,EAAAI,QAAQP,GAc0Cs1N,KAElD,SAAAn1N,EAAAzI,EAAAF,sBAQYA,EAAO,UAGVA,EAAU,UAESA,EAAUqhC,EAAasuC,KAI/C3vE,EAAA,UAGIA,EAAiB,YAGhB,UAIDA,EAAoB,mBAKlB6gE,gBAGEh6D,EAAA4E,QAAAo1D,YACF35D,IAAK62N,QAGHl3N,EAAKm3N,cAAOn9J,GAAA,OACV,iBAEFt0C,EAAsB,EAAAE,EAAA5lB,EAAAmE,KAAA61D,GAAA9qD,QAAA8E,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,OACvBD,EAAAxT,QAEQ+E,GAAM2xN,EAAKl9J,EAAAz0D,cAGnB+f,EAAA,CAAAgP,MAAAmmD,eAIDzmE,IAAKA,EAAKE,OAACnT,EAAW+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,WAErB,GAAAwR,EAAA,MAAAA,EAAAgP,iCASgB,UAGlBn7B,EAAA,UAIDA,EAAgB,YAGA,UAgBuB,sBACpCi+N,kBACIA,WAEV13N,UAAA23N,aAAA,SAAA1mH,GAED,IAAItrG,EAAA2I,EAAAhJ,EAAAw1B,EACF88L,EAAAr4N,KAAA3E,UAAAi9N,cACAC,EAAiB,WAEjBl9N,UAAIi9N,cAAa,OACVt4N,KAAU3E,UAAWi9N,kBAK5BD,EAAA,IACA3mH,EAAM1f,UACE0f,EAAA1f,SAAWxgF,SACbxR,KAAA3E,UAASmY,KAAUk+F,EAAK1f,SAAQxgF,OAAAgC,KAClCxT,KAAA3E,UAAS2tH,WAAiB7lG,KAACuuF,EAAA1f,SAAAxgF,OAAA2R,MAAA,MAG3BvT,KAAS,SAAOtU,GAED,aAAbA,EAAAyY,OACFzY,EAAAyY,KAAa,SAEF,UAATzY,EAAAyY,OAGL4S,EAAA5lB,EAAAy3N,UAAAl9N,EAAA0U,UACF1U,EAAA0U,OAAA,CAAA5D,KAAA9Q,EAAA0U,SAGS1U,EAAGmS,OACJnS,EAASmS,KAAC9E,MAChBrN,EAAAmS,KAAAgrN,QAAAn9N,EAAAmS,KAAA9E,WAEDrN,EAAsBmS,KAAA9E,KAEpBrN,EAAAmS,KAAExF,MACI3M,EAACmS,KAAOirN,QAAOp9N,EAAAmS,KAAAxF,WACV3M,EAAKmS,KAAGxF,MAGlB3M,EAAAq9N,WACJr9N,EAAAs9N,YAEat9N,EAAMs9N,UAAA,IAEhBt9N,EAAAs9N,UAAE,GAAKt9N,EAAMq9N,gBACXr9N,EAAAq9N,YAEEE,cACED,cACAA,UAAc,gBACT,GAAAt9N,EAAAu9N,mBACLA,yCAOWC,iCACFx9N,oBAGN,6BAOQA,wBAIRyF,EAAA44B,KAAAr+B,EAAAy9N,WAAA,SAAAx3N,EAAA+E,qBAEY,CAAE,CAAAiQ,MAAAjQ,EAAA6V,MAAA5a,+BAKpB,GAEL,IAAGwnH,EAAApiG,EAAA5lB,EAAA6J,KAAA8mG,EAAAsnH,UAAA,CAAAjlN,KAAA,oBACJg1G,IAED/oH,KAAA3E,UAAA0tH,YAA2B,CACvB5lG,KAAc4lG,EAAEA,aAAA,OAId,EAAA3iH,EAAOpG,KAAA3E,UAAA2tH,WAAA7lG,KAAAhe,OAAAiB,IAAA,KACRgrC,EAAApxC,KAAA3E,UAAA2tH,WAAA7lG,KAAA/c,QAEqB,IAAlBgrC,EAAMzsB,aACRysB,EAAOzsB,WAAS,MAGJ,aAAR5Q,SACGA,KAAC,cAET,IAAAq9B,EAAAr9B,OACAq9B,EAAAr9B,KAAA,cAGuB,IAA5Bq9B,EAAA6nL,YACI7nL,EAAiB6nL,UAAA,cAIf,MACD5M,KAAA36G,EAAA26G,IAAAlnN,SAEDnF,KAAA3E,UAAAgvB,WAAaqnF,EAAA26G,IAAQ,MAGjBz8M,KAAE,SAAQtU,KACJyF,EAAA44B,KAAAr+B,EAAa4oB,QAAE,SAAA1P,GACtBA,EAAAa,QACAb,EAAAa,MAAA/Z,EAAA49N,oBAAA59N,EAAA49N,2BAMLb,EAAA,KACMzoN,KAAA,SAAiBtU,KACnByF,EAAA44B,KAAiBr+B,EAAO4oB,QAAK,SAAA1P,GAE1BA,EAAAV,QAAiBU,EAASY,MAAAZ,EAAAo/E,UAC7Bp/E,EAAA+hF,iBACD/hF,EAAAV,cACGU,EAAiBhF,OAEVgF,EAAAoO,OAAiB+D,EAAW5lB,EAAAK,IAAAoT,EAAAV,OAAA,SAAAH,GACrC,IAAgB6zF,EAAQ,GAUzB,OATAA,EAAA53F,KAAA,CAAAmE,KAAA,QAAA8P,OAAA,CAAAlQ,EAAA3O,QACAwiG,EAAA53F,KAAA,CAAAmE,KAAAJ,EAAAwnF,KAAAt3E,OAAA,KACJlQ,EAAAwlN,UAEoB3xH,EAAA53F,KAAA,CAAAmE,KAAA,OAAA8P,OAAA,CAAAlQ,EAAAwlN,YAEAxlN,EAACylN,QACC5xH,EAAO53F,KAAE,CAAAmE,KAAA,QAAA8P,OAAA,CAAAlQ,EAAAylN,UAE3B5xH,WAEQhzF,EAAAV,OACR6S,EAAA5lB,EAAA44B,KAAAnlB,EAAAo/E,QAAA,SAAAhP,GAEiB,SAAAA,EAAA7wE,MAAA6wE,EAAA93B,WACF83B,EAAA/gE,OAAA,CAAA+gE,EAAA93B,iBACZ83B,EAAA93B,UAEkB,QAAX83B,EAAM7wE,MAAY6wE,EAAAt+E,MAClBs+E,EAAM/gE,OAAK,CAAO+gE,EAAAt+E,YACRs+E,EAAKt+E,OAGrBkO,EAAAhF,OACDgF,EAAAo/E,QAAAhkF,KAAA,CAAAmE,KAAA,OAAA8P,OAAA,CAAArP,EAAAhF,eACagF,EAAChF,cASX,KAEHI,KAAA,SAAAtU,OAEW,eAAbA,EAAAyY,MAA0B,KAAAzY,EAAA03I,aAG1B13I,EAAA03I,WAAkB,CAClB,IAAAqmF,EAAO/9N,EAAM03I,WAAcjzE,MAAA,KAC3Bs5J,EAAOl0N,QAAW,IAClBk0N,EAAO74G,QACPllH,EAAO03I,WAAMqmF,EAAc5yN,KAAC,SAMjC4xN,EAAA,IAGCE,EAAA3oN,KAAA,SAA6BtU,GACV,UAAnBA,EAAcyY,QAGXhT,EAAA44B,KAAAr+B,EAAA6f,OAAA,SAAA2hB,GACG,GAACA,EAAMk2G,YAAMl2G,EAAAk2G,WAAA7tI,QAAA,GACf,IAAOm0N,EAAAx8L,EAAAk2G,WACRsmF,EAAA94G,QAEK1jF,EAAAk2G,WAAgBsmF,SAOlB,MAEGv4N,EAAA44B,KAAA35B,KAAY3E,UAAS2tH,WAAA7lG,KAAA,SAAAo2M,KACzB71L,YAAMA,QAAA,KAEOA,YACAA,QAAW,GAE1B61L,EAAAC,aAEGD,EAAWxuJ,KAAU,EAEnBwuJ,EAAWE,cACH1uJ,KAAK,OAGV,MAEHn7D,KAAC,SAAYtU,GACZ,YAADyY,MAIFzY,EAAAmS,yBAIQ,EAEPrB,KAAA9Q,EAAA,cAAMA,EAAAmS,KAAAgrN,QACLxwN,IAAK3M,EAAMmS,KAAKirN,QAChB74E,QAAMvkJ,EAAAmS,KAAWisN,YACjB3gN,OAAMzd,EAAAs9N,UAAkB,GACzBp3N,MAAAlG,EAAAq+N,iBAEEvtN,KAAK9Q,EAAK,UACbqN,IAAMrN,EAAAmS,KAAWmsN,SAClB3xN,IAAA3M,EAAAmS,KAAAosN,SACFh6E,QAAAvkJ,EAAAmS,KAAAqsN,aAEW/gN,OAAMzd,EAAAs9N,UAAW,GACjBp3N,MAAMlG,EAAAy+N,kBAGlBz+N,EAAO6+B,MAAW,CACjB/tB,KAAA9Q,EAAA,kBAGcA,EAAEmS,KAAAgrN,eACJn9N,EAAAmS,KAAAirN,eAChBp9N,EAAAmS,KAAAisN,mBAEkBp+N,EAAEmS,KAAAmsN,gBACdt+N,EAAAmS,KAAoBosN,gBAC1Bv+N,EAAAmS,KAAAqsN,oBAEkBx+N,EAAEs9N,iBACLt9N,EAAKq+N,sBACPr+N,EAAOy+N,uBACTz+N,EAAM,iBACNA,EAAO,gBAIX,MAGIsU,KACH,SAACtU,MACL,UAAAA,EAAAyY,MAGJzY,EAAAmS,KAAA,CAICnS,EAAA03I,WAAmB,GACjB,IAAIgnF,EAAK,GAACC,EAAA,GACc,OAAtB3+N,EAAMmS,KAAAysN,aACNF,EAAAz4N,MAAMjG,EAAQmS,KAAAysN,WACZ5+N,EAAMmS,KAAK0sN,eACXH,EAAAlkJ,MAAM,EACNkkJ,EAAA9lF,UAAe54I,EAACmS,KAAQ2sN,gBACxBJ,EAAAtnF,UAAc,WAIhBsnF,EAAAxqN,MAAA,EACIwqN,EAAA58M,UAAc9hB,EAAAmS,KAAY2sN,gBAC5BJ,EAAAtnF,UAAc,WAIK,OAArBp3I,EAAAmS,KAAO4sN,aACPJ,EAAA14N,MAAOjG,EAAMmS,KAAQ4sN,WACrB/+N,EAAOmS,KAAM0sN,eACbF,EAAOnkJ,MAAM,EACbmkJ,EAAO/lF,UAAM54I,EAAQmS,KAAO6sN,gBAC5BL,EAAOvnF,UAAM,WAGdunF,EAAAzqN,MAAA,EACJyqN,EAAA78M,UAAA9hB,EAAAmS,KAAA6sN,gBAEaL,EAAKvnF,UAAE,WAGb/rH,EAAe5lB,EAAAqb,SAAA49M,EAAAz4N,SACjBolB,EAAmB5lB,EAACqb,SAAU69M,EAAA14N,OAC/By4N,EAAAz4N,MAAA04N,EAAA14N,OACAy4N,EAAAn0I,GAAAo0I,EAAAp0I,GAAA,KACJvqF,EAAA03I,WAAApjI,KAAAoqN,GAEkB1+N,EAAE03I,WAAApjI,KAAAqqN,KAMjBD,EAAAn0I,GAAAo0I,EAAAp0I,GAAA,KACYvqF,EAAK03I,WAACpjI,KAAUoqN,GAC5B1+N,EAAkB03I,WAAApjI,KAAAqqN,KAKlBD,EAAAn0I,GAAA,KACIvqF,EAAM03I,WAAWpjI,KAAMoqN,YAGxB1+N,EAAAmS,KAAAysN,kBACD5+N,EAASmS,KAAC2sN,yBACH3sN,KAAC4sN,kBAGP/+N,EAAAmS,KAAA6sN,uBACFh/N,EAAAmS,KAAA0sN,iBAID9B,EAAa,KACfr4N,KAAA3E,UAAOk9J,aAAA7mD,EAAA6oH,gBAAA,KAGTlC,EAAgB,IACdr4N,KAAKw6N,oBAAW9oH,KAEL,MACD9hG,KAAI,SAAWtU,QACnBm/N,QAAA,KACDC,EAAAhlI,EAAA,EAAAp6F,EAAAm/N,QACFE,EAAAz8N,OAAA08N,EAAA,EAAA18N,CAAAw3F,EAAA,GAGNp6F,EAAAu/N,UAEDF,EAAAh0M,EAAA5lB,EAAAnE,UAAA+9N,EAA4B,SAAAjgM,gBACb,UAGGp/B,EAAGm/N,UAOfpC,EAAY,IAGdE,EAAO3oN,KAAA,SAAAtU,GACRA,EAAA,mBAEDA,EAAA4L,QAAA5L,EAAA,iBACcA,EAAG4L,QAAAi1I,aAAW,qBAEV5nG,KAAAj5C,EAAA4L,QAAAqtC,KAAJl4B,SAAA/gB,EAAA4L,QAAAmV,SACJlW,OAAA7K,EAAA4L,QAAiBf,OACvB+iC,OAAS5tC,EAAA4L,QAAAgiC,QAIL5tC,EAAA4L,QAAgB8rI,YAEhB13I,EAAQ4L,QAAW8rI,WAAAtgI,iBAGvBpX,EAAA4L,uBACA5L,EAAW4L,QAAGwN,YACdpZ,EAAa4L,QAAQqtC,YACrBj5C,EAAS4L,QAAYmV,gBACrB/gB,EAAS4L,QAAYf,cACrB7K,EAAS4L,QAAYgiC,cACrB5tC,EAAS,sBAIN,MAEDsU,KAAA,SAAAtU,GACFA,EAAAw2D,OAAanrC,EAAO5lB,EAAA4E,QAAArK,EAAAw2D,SACpBx2D,EAAAw2D,MAAYx2D,EAAAw2D,MAAA1wD,IAAA05N,kBAMM,SAAAroK,YAAJ,KAAAA,EAAA,CAAA9rD,IAAAo0N,EAAAtoK,EAAA9rD,UAEdiJ,KAAI,SAAatU,KAEhB4L,SAAA5L,EAAA4L,QAAA4zI,WAAAn0H,EAAA5lB,EAAA4E,QAAArK,EAAA4L,QAAA4zI,eACD5zI,QAAM4zI,UAAkBx/I,EAAM4L,QAAM4zI,UAAQ15I,IAAA45N,MAI5C9zN,SAAO5L,EAAY4L,QAACq/J,cAAAjrK,EAAA4L,QAAAq/J,aAAA92J,WACpBnU,EAAM4L,QAAOq/J,aAAG92J,SAAAqiD,OAAAnrC,EAAA5lB,EAAA4E,QAAArK,EAAA4L,QAAAq/J,aAAA92J,SAAAqiD,WACb5qD,QAAEq/J,aAAU92J,SAAAqiD,MAAAx2D,EAAA4L,QAAAq/J,aAAA92J,SAAAqiD,MAAA1wD,IAAA45N,MAEZ9zN,QAAEq/J,aAAU92J,SAAA7T,UACZsL,QAAEq/J,aAAW92J,SAAA7T,MAAAm/N,EAAAz/N,EAAA4L,QAAAq/J,aAAA92J,SAAA7T,cAOd,4BAEAP,UAAKsB,OAAUwI,OAAW4J,cAC3BwpN,EAAApzN,OAAAY,SACFA,GAAAhG,KAAAC,UAAA3E,UAAAsB,OAAAoS,gJAEGtO,UAAA+5N,oBAAe,SAAA9oH,WACjBtmF,EAAKvW,IACN,IAEK6gF,EAAsC,OACtC/uE,EAAI5lB,EAAckH,IAAA0e,EAAA5lB,EAAAwwM,YAAA5qL,EAAA5lB,EAAAK,IAAAswG,EAAA/lG,KAAA,SAAAuB,UACvByZ,EAAA5lB,EAAAK,IAAA8L,EAAAvQ,OAAA,6JAEJ,IAAAuQ,EAAA0I,EAAArU,MACH,IAAA2L,EAAA+tN,gBAAA,CAES,IACHC,EAAWC,EAD6BjuN,EAAA5B,QAAAoqF,EAAA,GAEjC0lI,EAAS,GACnBC,OAAA,EAEYC,IAEZF,EAAAv+N,GAAA0+N,EAEeH,EAAQrnN,KAAK,MACtBqnN,EAAWx/N,MAAAsR,EAAAtR,MACnBw/N,EAAAI,UAAAtuN,EAAAknL,SAEDgnC,EAAAK,OAAAvuN,EAAAuuN,8DASGF,IACHG,KAK8B,IAAAC,EAAA,IAAAC,EAAQV,EAAAxlI,EAAiB,EAAAgmI,GAAE,IACzC,IAAI,IAAKz3L,GAAM7Y,OAAM,EAAI3E,EAAA,EAAAvZ,EAAAvQ,SAAA+kG,EAAAz9D,EAAAjvB,QAAA0sF,EAAAzsF,KAAAysF,EAAAz9D,EAAAjvB,OAAA,CACzB,IAAQ1Z,EAAAomG,EAAAngG,MACNjG,EAAOqP,KAAArP,EAAAqP,MAAA+qF,EAAA,EACtBp6F,EAAAm/N,UAEIn/N,EAALm/N,QAAAv7N,KAAAyJ,IAAA+sF,EAAA,EAAAA,EAAA,KAAAp6F,EAAAm/N,UAEC,IAAAx/E,EAAA/7I,KAAA+N,MAAA3R,EAAAqP,MAAAwiJ,EAEDwS,EAAArkK,EAAAgQ,OAAA6vN,EAAA7/N,EAAAgQ,QAAA4vN,4BAEGQ,EAAAC,EAAAD,KACHpgO,EAAQ8D,QAAR,CACsBoL,EAAEqxN,EAAMrxN,EACVC,EAACixN,EAAIG,EAAYpxN,EACnBpL,EAAG47I,EAChB1+G,EAAAojI,GAEag8D,EAACG,SAAAxgO,EAAA8D,gBAClB9D,EAAAqP,KAED0wN,GAAAD,EAAAI,2BAG0Dx7N,KAAA3E,UAAAsB,OAAAiT,KAAgB,IAAAsgG,EAAA,EAAA50G,KAIlE,MAAKsgF,GAASxwD,EAAK,CAAKiK,MAAMumD,GAChC,QACE,IACD8lB,MAAAzsF,OAAAJ,EAAAovB,EAAAw3C,SAAA5mE,EAAA9U,KAAAkkC,GACC,QAAQ,GAAK7Y,EAAK,MAAMA,EAAIiK,eAErBh6B,UAAAsB,OAAAiT,KAAAyrN,GAENA,GAAAD,EAAAI,YACFE,GAAAR,WAGF1/I,GAAAn1D,EAAA,CAAAgP,MAAAmmD,WAGC,IACQ5lE,IAAGA,EAAAX,OAACnT,EAAKiT,EAAA0mE,SAAU35E,EAAK/B,KAACgV,WAE9B,GAAAsR,EAAU,MAAAA,EAAAgP,UAGhB0mM,EAvhBuC,cAyhB7BzwN,GAQb,SAPcvK,EAAGipC,SAAA1+B,OACbD,SAAYC,EAAAzN,QAAiB,SAAW,OACnC63F,EAAA,MACLA,EAAY,GAGDx2F,KAAAC,KAAAmM,GAAAoqF,EAAA,EAAAA,EAAA,QAgBfkmI,EAAU,oBACLI,EAAO1wN,EAAAzM,EAAAo9N,QACX,IAAAp9N,MAAA62F,EAAA,QAEkB,IAAXumI,IAAWA,EAAA,GACjBj8N,KAAGk8N,KAAG,IAAAhoM,MAAAr1B,GAAA2Q,KAAA,GACPxP,KAAA07N,KAAAO,EAEGj8N,KAAKsL,kBAER7K,UAAAq0G,MAAA,WAEG90G,KAAKk8N,KAAA1sN,KAAQ,MAMf/O,UAAYq7N,SAAK,SAAA18N,GACjB,QAAAgH,EAAahH,EAAKoL,EAAApE,EAAAhH,EAAWoL,EAAApL,EAAAC,EAAA+G,MAC7BpG,KAAAk8N,KAAA91N,IAAAhH,EAAAqL,EAAArL,EAAAm9B,EAAAv8B,KAAA07N,KAAA17N,KAAAk8N,KAAA91N,MACHpG,KAAAk8N,KAAA91N,GAAAhH,EAAAqL,EAAArL,EAAAm9B,EAAAv8B,KAAA07N,MAKC,OAAW17N,KAACk8N,QAKRz7N,UAAO07N,iBAAmB,SAAAx8D,EAAA1kB,EAAAmhF,GAE5B,IAAIC,EAAWC,OADd,IAAAF,OAAA,OAGA,IAAAh2N,EAAApG,KAAAk8N,KAAA/2N,OAAA,EAAAiB,GAAA,GACGpG,KAASsL,OAAEtL,KAAAk8N,KAAA91N,GAAA,EADdA,IAEC,QAAqBH,IAAdq2N,EACRA,EAAAl2N,MAEQ,CACR,KAAAA,EAAApG,KAAAk8N,KAAA/2N,OAAA,GAAAnF,KAAAk8N,KAAA91N,IAAApG,KAAAk8N,KAAA91N,EAAA,UACYi2N,EAAAj2N,0CC3sBN,CACYoE,EAAA6xN,EAEX5xN,+BAIZ2xN,EAUyD,MAREp8N,KAAA07N,MAAA17N,KAAAsL,OACNtL,KAAA80G,QAE7C90G,KAAAm8N,iBAAAx8D,EAAA1kB,GAAA,KA2DJ+gF,ED0lBQ,YCxlBPlB,EAAAroK,OAED9rD,EAAK8rD,EAAM9rD,WACXA,GAAO8rD,EAAGp3D,YACVsL,EAAK,iBAAkBmoE,EAAK,EAAA27C,cAAAh4D,EAAAp3D,aAE5BsL,GAAK8rD,EAAQ8pK,UACb51N,EAAK,cAAiB8rD,EAAC8pK,SAGvB51N,IACAA,EAAK,KAEL8rD,EAAKsR,WACLp9D,EAAKzI,OAAOs+N,EAAmC,EAA1Ct+N,CAA+CyI,EAAG,IAAApJ,EAAA,oBAAAwmE,WAEvDtR,EAAKuS,cACLr+D,EAAKzI,OAAAs+N,EAAwC,EAAxCt+N,CAAwCyI,EAAY,IAACpJ,EAAA,oBAAAynE,cAE1DvS,EAAK5uC,SACLld,EAAKzI,OAAAs+N,EAAwC,EAAxCt+N,CAAwCyI,EAAA8rD,EAAA5uC,SAE7C,CACAld,IAAKA,EACL/K,MAAK62D,EAAM72D,MAEX0qE,YAAK7T,EAAA6T,sBAILy0J,EAAuBl/N,UAGvBA,EAAKgC,QADA,oFACsB,SAAAke,EAAAupD,EAAAm3J,EAAA92J,EAAArB,EAAAo4J,GAC5B,OAAAp3J,EAED,gBACMm3J,uBAEF,iBAGC,6CAGCviO,EAAO,UAINA,EAAyB,QAGXA,EAAAC,EAAAC,EAAA,sBAAAuiO,UAkBI,oBAElBC,EAAep0N,EAAApL,GAClBoL,IACAA,EAAK,SAENxL,OAAA,IAAAuc,EAAA,EAEDvZ,KAAKnD,GAAI2L,EAAG3L,IAAK,KAClBmD,KAAA0oB,IAAAlgB,EAAAkgB,KAAA,KAED1oB,KAAA68N,SAAAr0N,EAAAq0N,SACA78N,KAAApE,MAAA4M,EAAA5M,OAAA,WACEoE,KAAM88N,WAAWt0N,EAAAs0N,gBACf55M,YAAe1a,EAAI0a,iBACnB9N,KAAA5M,EAAa4M,MAAM,QAClB0nB,MAAAt0B,EAAAs0B,OAAA,OAEH98B,KAAA2mC,SAAan+B,EAAAm+B,UAAA,GACb3mC,KAAIgoB,UAAe,IAAAxf,EAAAwf,SACnBhoB,KAAKu4J,aAAc/vJ,EAAQ+vJ,cAAE,OAC3B/kJ,KAAIhL,EAAAgL,MAAe,CAAApV,KAAA,SAAAI,GAAuB,uBAC/BgK,EAAA6hB,YAAA,QACV2+F,WAAAhpH,KAAA+8N,gBAAAv0N,EAAAwgH,iBAEDD,YAAc/oH,KAAG+8N,gBAAEv0N,EAAAugH,kBACpBrlF,QAAAl7B,EAAAk7B,QAED1jC,KAAAwgN,SAAAh4M,EAAAg4M,SACAxgN,KAAKs4N,cAAa9vN,EAAA8vN,eAAA,OAChBjoN,QAAM7H,EAAA6H,SAAM,aACV7H,EAAAspD,OAAS,QAAiDkrK,OAC3Dx0N,EAAAw0N,QAAA,UACDrgO,OAAAgqB,EAAA5lB,EAAAK,IAAAoH,EAAA7L,QAAA,YAAAmnC,GAAA,WAAAosE,EAAA,EAAApsE,KAEF9jC,KAAKi9N,8BACHC,kCACQ9/N,qBACAoL,wEAMN/H,UAAY08N,0BAAkB,sBAE7B,cACCtoN,EAAK4R,EAA6B,EAAAzmB,KAAA+oH,YAAiB5lG,MAAApO,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CAEtD,OADED,EAAAxT,MACFkmK,QAAA,CACFpkJ,GAAA,EAEI,QAKL,MAAKm4D,GAASn1D,EAAA,CAAAgP,MAAEmmD,eAGNzmE,IAACA,EAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAGP,QAAG,GAAWwR,EAAK,MAACA,EAAAgP,OAGzBhS,GAICrjB,KAAK+oH,YAAK5lG,KAAYiE,QAAA,CAEtBzC,WAAM,gBAEF3f,KAAC,uBACN+O,KAAA,YAEDqpN,UAAA7/N,EAAA,yBACMq5M,QAAQ,EACb7rI,MAAA,EAED08F,QAAA,yCAGErqK,GAAoB,cAAJ,IAALA,EAAKigO,oBACJ,IAALjgO,EAAKyoB,mBACQ,IAAhBzoB,EAAMkgO,mBACP,IAAAlgO,EAAAC,UACFkgO,aAAAngO,EAAAC,6IACF2C,KAAA5C,UAGYqD,UAAM0mB,kBAAU,SAAAjgB,6BAE3Bs2N,eAAoB,iBAAJ,kHAGjBvmN,EAAA+xG,WAAA,CAED7lG,KAAAwD,EAAA5lB,EAAAK,IAAApB,KAAAgpH,WAAA7lG,KAAiB,SAAiBiuB,GAC1B,OAAAA,EAAch1C,aAAAg1C,EAAAh1C,eAAAg1C,MAInB3hC,EAAA+tN,cACF,QAAAp3N,EAAA,EAAAA,EAAA6Q,EAAA+xG,WAAA7lG,KAAAhe,OAAAiB,IAAA,CAED,IAAA2Y,EAAA9H,EAAA+xG,WAAA7lG,KAAsB/c,GACRq3N,EAAK92M,EAAqB5lB,EAAA6J,KAAA5K,KAAW09N,mBAAA,CAAA14N,KAAA+Z,EAAA/Z,KAAA+O,KAAAgL,EAAAhL,OAClD0pN,IAIa,UAAH1+M,EAAGhL,KACXkD,EAAA+xG,WAAA7lG,KAAA/c,GAAAkrC,QAAAmsL,EAAAnsL,QAGAr6B,EAAA+xG,WAAA7lG,KAAA/c,GAAA2Y,QAAA0+M,EAAA1+M,kCAKG9H,EAAGzD,KAAKxT,KAAA29N,uBAEDh3M,EAAK5lB,EAAAmkE,MAAAllE,KAAArD,eACV,SAAQrB,GAAQ,oBAAAA,EAAAyY,oBACZzY,GAAS,OAAAA,EAAAc,6CAKbk0G,YAAe,SAAQh1G,EAAA2nC,EAAAwsE,8CAEtBA,GAAAzvG,KAAA5C,KAAAC,sBACF4lC,EAAAjjC,KAAA5C,KAAAqyG,uNAEJ,IAAA56F,EAAA4R,EAAA,EAAAzmB,KAAArD,QAAAoY,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,yFAED,IACDD,MAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAGC,QAAc,GAAGuW,EAAG,MAAKA,EAAOiK,SAGlCunM,EAACn8N,UAAAoB,OAAA,WAED,IAAAotB,EAAAntB,iCACE,IAAoB,IAAA+S,EAAA4R,EAAA,EAAAzmB,KAAKrD,QAAMoY,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAE,CAAjBD,EAAAxT,MACVM,gBAGL+/F,GAAA3yE,EAAA,CAAAoG,MAAAusE,0HACDtmG,EAAAq1G,cACD3wG,KAAA49N,uBAAAtiO,IAEDA,EAAAooC,aAKajjC,UAASm9N,uBAAO,SAAAtiO,GAE3B,OAAK0E,KAAA5C,KAAA6lC,aAAsB3nC,EAAA2nC,YAG7B25L,EAACn8N,UAAAs8N,gBAAA,SAAAv0N,UAEDA,IACMA,EAAO,MAEP2a,SACDA,KAAA,SAGA1iB,UAAAq4N,eAAA,WACJ,IAAA/sM,EAAAjqB,EAAAmgG,EAAAptF,EAED5M,EAAA,MACM,IAAK,IAAA8M,EAAQ0R,EAAyB,EAAMzmB,KAAKrD,QAAGiZ,EAAAb,EAAAC,QAAAY,EAAAX,KAAAW,EAAAb,EAAAC,OAAA,CACtD,IAAO1Z,EAAAsa,EAAArU,SACRjG,EAAAuB,GAAAoL,IAEIA,EAAa3M,EAAKuB,gBAGvB,IACoB,QAAAonC,GAAAg+D,OAAA,EAAAx7E,EAAW,EAAAnrB,EAAAqB,SAAA+kG,EAAAz9D,EAAAjvB,QAAE0sF,EAAAzsF,KAAAysF,EAAAz9D,EAAAjvB,OAAA,CAAjB,IAAAomN,EAAA15H,EAAAngG,MACD65N,EAAWv+N,GAAAoL,IACzBA,EAAAmzN,EAAAv+N,0EAEe,QAAS,GAAAolG,EAAO,MAASA,EAAI5sE,eAK5C0sE,GAAAh2E,EAAA,CAAAsJ,MAAA0sE,GAED,QACA,IACAnsF,IAAmBA,EAAAX,OAACnT,EAAIiT,EAAA0mE,SAAE35E,EAAO/B,KAAGgV,GAEhC,QAAQ,GAAKgX,EAAA,MAAAA,EAAAsJ,OAGnB,OAAAptB,EAAA,KAEWxH,UAAAo9N,aAAA,SAAA/8M,OACR,IAAA1a,EAAA,EAAAA,EAAApG,KAAArD,OAAAwI,OAAAiB,IAEG0a,EAAC9gB,KAAArD,OAAiByJ,SAKd3F,UAAakiC,aAAU,SAAA9lC,OAC7B0vB,EAAIzqB,UAEH,IAAA+S,EAAA4R,EAAA,EAAAzmB,KAAArD,QAAAoY,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CACF,IAAA1Z,EAAAyZ,EAAAxT,MAEI,GAAAjG,EAAAuB,KAAmBA,EACZ,OAAKvB,GAKjB,MAAKmnG,GAAWl2E,EAAI,CAAA8I,MAAUotE,WAE5B,IACE1tF,MAAcE,OAAMnT,EAAO+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAE9B,WAAA0X,EAAA,MAAAA,EAAA8I,OAED,aAGFunM,EAAAn8N,UAAAq7N,SAAA,SAAAh4L,GACEA,EAASjnC,GAAAmD,KAAQ84N,qBACfx9N,EAAO,IAAA40G,EAAA,EAAApsE,QACRnnC,OAAAyqB,QAAA9rB,GAED0E,KAAI/C,sBACJ+C,KAAKhD,OAAIrB,KAAA,cAAWL,MAElBmF,UAAiBxD,oBAAa,gBAC/BN,OAAAsT,KAAA,SAAA6tN,EAAAC,GAEG,OAACD,EAAA1+N,QAAkBqL,IAAAszN,EAAW3+N,QAAAqL,YAExBD,EAAAuzN,EAAA3+N,QAAAoL,EAGAszN,EAAU1+N,QAAGqL,EAAAszN,EAAC3+N,QAACqL,2CAHzB,IAAA04F,EAASrhG,qBAAC,IAAA9B,KAAAgpH,WAAA7lG,KAAAhe,QASZnF,KAAAg+N,WAAAh+N,KAAAg+N,YAAA,IAAmB1qN,MAAnBs1B,WAAoB,EAClB,IAAAq1L,EAAA,GACA,IAEC,QAAAppN,EAAA4R,EAAA,EAAAzmB,KAAArD,QAAAoY,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,QAEa1Z,EAAIyZ,EAAAxT,OACFzD,YAKhB,MAAMslG,GAAAD,EAAe,CAAG9tE,MAAK+tE,GAC7B,QACA,IACYruF,IAACA,EAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAGf,WAAAsuF,EAAA,MAAAA,EAAA9tE,OAEE,IAAI,IAAAjvB,EAAA,EAAUA,EAAMpG,KAAErD,OAAAwI,OAAAiB,IAAA,CACpB,IAAI9K,KAAC0E,KAAArD,OAAeyJ,IACZq1N,SAAYngO,EAAK4iO,gBAAa5iO,EAAAw0G,eAAkBx0G,EAAA2/N,kBAAAj7N,KAAAg+N,WACtDC,EAAeruN,KAAAtU,GAKnBqrB,EAAc5lB,EAAIo9N,KAAA30M,MAAA7C,EAAA5lB,EAAA0lB,EAA0B,EAAY,CAAAzmB,KAAIrD,QAAAshO,IAC5DA,EAAA78N,IAAA,SAAAolC,GAAA,OAAAA,EAAAtc,YACAlqB,KAAI/C,sBACJ+C,KAAIhD,OAAArB,KAAA,yBAEI8E,UAAS29N,eAAU,eACzBp+N,KAAAwgN,UAAwC,IAAxCxgN,KAAAgpH,WAAA7lG,KAAAhe,aAEKk5N,sBACLL,WAAYh+N,KAAKg+N,YAAa,IAAA1qN,MAAAs1B,WAAkB,MAChD,IAAKxiC,EAAC,EAAMA,EAAGpG,KAAArD,OAAAwI,OAAMiB,IAAA,CACrB,IAAA9K,EAAA0E,KAAArD,OAAAyJ,GACA9K,EAASmgO,QACVz7N,KAAAs+N,YAAAhjO,EAAA8K,GAIDpG,KAAA/C,sBACD+C,KAAAhD,OAAArB,KAAA,yBAGO8E,UAAgB89N,kBAAW,SAACC,OAClC,IAAIP,EAAW,GACb73N,EAAO,EAAAA,EAAAo4N,EAAAr5N,OAAAiB,IAAA,CACR,IAAA9K,EAAAkjO,EAAAp4N,IAEQ9K,EAAKmgO,QAAUngO,EAAEw0G,eACpBmuH,EAAWruN,KAAOtU,GAIxBqrB,EAAM5lB,EAAAo9N,KAAkB30M,MAAK7C,EAAA5lB,EAAA0lB,EAAqC,GAAA+3M,GAAAP,IAClEt3M,EAAe5lB,EAAGo9N,KAAM30M,MAAA7C,EAAe5lB,EAAA0lB,EAAA,GAAAzmB,KAAArD,QAAAshO,OAE5Bx9N,UAAMg+N,kBAAU,SAAAvxN,GAE3B,IAAAlN,KAASwgN,UAA2C,IAAhCxgN,KAAKgpH,WAAG7lG,KAAAhe,OAA5B,KAIEq5N,EAAYtxN,EAAAvQ,WACZuQ,EAAKsuN,UAAU,CACf,IAAIkD,EAAY/3M,EAAiB5lB,EAAAnE,UAAOoD,KAAArD,OAAA,SAAA6pC,GAAA,OAAAA,EAAA3pC,KAAAqQ,EAAArQ,KAExC2hO,EAAUx+N,KAAA2+N,aAAoBD,0BAElBF,aACT,SAAAp4N,OACD9K,EAAKkjO,EAAYp4N,MAClB9K,EAAAmgO,OAAA,KAAMtqD,EAAAxqJ,EAAA5lB,EAAAnE,UAAAgiO,EAAAjiO,OAAA,SAAA6pC,GAAA,OAAAA,EAAA3pC,KAAAvB,EAAAuB,KACL+hO,EAAAN,YAAAhjO,EAAA61K,OAGKnxK,KACLoG,EAAK,EAAAA,EAAOo4N,EAAUr5N,OAAAiB,MAElBA,iBAIOy4N,oBAAA,SAAAC,EAAAC,EAAAC,MAEV,aACFF,EAGH,IAAA90K,EAAA,IAAAkmD,EAAkC,EAAA4uH,EAAA1iO,uBAClC4tD,EAAMntD,GAAOmD,KAAG84N,sBAEdn8N,OAAMI,OAAAiiO,EAA4BD,EAAG,EAAA/0K,KACrCixK,gBAAaj7N,KAAAg+N,0BACGc,EAAUjiO,KACzB4+N,OAAA,KACFzxK,GAGH4yK,EAAAn8N,UAAAw+N,kBAAA,SAA6BC,EAAoBH,EAAaC,GAC5D,GAAqB,IAAfD,EAAkB,CACpB,IAAIG,EAAgB1D,UAAG,CAE3B,IAAS2D,EAAcn/N,KAAmB2+N,aAAmBK,GAC3DE,EAAmBviO,OAAMwiO,EAE1B,OAAAD,MAKCV,EAAAY,EAFAp1K,EAAM,IAAMkmD,EAAgC,EAAAgvH,EAAA9iO,uBAI5C8iO,EAAe1D,WACfgD,EAAM73M,EAAoB5lB,EAAAk4F,UAAaimI,EAAAviO,QACvCqtD,EAAIrtD,OAAA6hO,IAGFQ,EAAAD,MAGM/+N,KAAA2+N,aAAiBK,YACnBr4M,EAAK5lB,EAAAK,IAAAo9N,EAAuB,SAAgBljO,GAAA,OAAAA,EAAAc,mBAE7C4iO,GAAAR,EAAAr5N,OAAA,GAAA45N,eAEChiO,OAAIqiO,EAAY,EAAAp1K,+BACFA,GACnBA,KACCvpD,UAAA69N,YAA2B,SAAAhjO,EAAA61K,SACrBxqJ,EAAY5lB,EAAA6J,KAAU5K,KAAIgpH,WAAU7lG,KAAS,CAAEne,KAAG1J,EAAAmgO,iBAIpD,0BAIKz7N,KAAAq/N,2BAA8BjuL,KACpC91C,EAAAu/N,WAAA,IACA,IACHv/N,EAAQ8D,QAASqL,EACjB/N,EAAQ,EAAAA,EAASq6G,EAAgB5xG,OAAWzI,IAAC,KAC7CumB,EAAQ8zF,EAAUr6G,GAClBua,OAAA,KACDjX,KAAA6+N,oBAAAvjO,EAAAoB,EAAAy0K,IAEDrzK,WAAAmZ,EAAAnZ,YAAkC,GAClCmZ,EAAKnZ,WAAQszC,EAAApsC,MAAkBie,EAC7B3nB,EAAAy0G,kBAAwBra,EAAS,GAClCh5F,EAAA,oBA1CEua,EAAI7X,QAAWqL,EAAIixN,IA+ClBzkN,EAAA7X,QAAaC,EAAGH,KAAQ+I,IAACytF,EAAA,EAAAqhB,EAAA5xG,OAAAuwF,EAAA,EAAAmlI,GACvB5jN,EAAG7X,QAAKoL,EAAA80N,EACVroN,EAAA7X,QAAeqL,EAAGixN,GACpB4D,GAAAroN,EAAe7X,QAAAC,GAElB4X,EAAA7X,QAAAC,EAAAq2F,EAAA,IAAM4pI,EAAA,EACC5D,GAASzkN,EAAK7X,QAAAm9B,IAMtB,IAAIgjM,EAAA7D,EAAuBpgO,EAAA8D,QAAAqL,EAC3B,GAAI80N,EAAS,EAEZ,IADC,IACDn5N,EADmB+qK,EAAiBp6D,EAAS5xG,OAC7CiB,EAAApG,KAAArD,OAAAwI,OAAAiB,IAAMpG,KAAArD,OAAAyJ,GAAAhH,QAAAqL,GAAA80N,sBAnCCjkO,EAAK61K,EAAA//H,IAuCfwrL,EAACn8N,UAAA++N,UAAA,SAAAlkO,EAAA61K,EAAA//H,GAED,IAAAtxC,EAAAE,KACM+2G,EAAgB/2G,KAAIq/N,2BAA8BjuL,GACpDsqL,EAAOpgO,EAAE8D,QAAAqL,WACVg1N,EAAAnkO,EAAAokO,GACKpkO,EAAAwC,WAAmBxC,EAAAwC,YAAU,GAC7BxC,EAAAwC,WAAYszC,EAAApsC,MAAM06N,EAwDxB,QAtDEC,EAAU,SAAUC,GACnB,IAAA38M,EAAA8zF,EAAA6oH,GACIrzG,EAAWszG,EAAOZ,kBAAY3jO,EAAAskO,EAAAzuD,GACtCsuD,EAAAlzG,EAAAtpG,GAED,IAAA68M,EAAAD,EAAAE,aAAAxzG,GACQiyG,EAAQjyG,EAAC5vH,QAAS,GACnBqjO,OAAqB,EACtB,GAAC1kO,EAAOkgO,UAGd70M,EAAA5lB,EAAA44B,KAAS6kM,EAAT,SAA2BpD,EAAqBh1N,GACxCq5N,EAAerE,EAAgBn4M,GAErB28M,EAAA,GACT9/N,EAAamgO,uBAAE7E,GAAA,KAIvB7uG,EAAAntH,QAAAqL,GAAAm1N,EAEDlE,GAAAkE,EACOI,EAAoB7uD,EAAayuD,EAAO,MAGvC,CAEH,IAAAM,EAAA/uD,GAAAqtD,EAAAr5N,OAAA,GAAAy6N,EAAA,EAEGj5M,EAAe5lB,EAAE44B,KAAA6kM,EAAA,SAAApD,EAAAh1N,GAEpB,GADKq5N,EAAWrE,EAAOn4M,GACvB28M,EAAA,GACF,IAAAO,EAAA,IAAAjwH,EAAA,EAAAkrH,GACFt7N,EAAAmgO,uBAAAE,GAAA,GAGiBA,EAAS/gO,QAAaqL,GAAKq1N,EAAEF,EAC7B9/N,EAAKnD,OAAQI,OAAEmjO,EAAA95N,EAAA,EAAA+5N,MAI5B5zG,EAAA5vH,OAAA,GAEG4vH,EAAOntH,QAASqL,GAAEq1N,EAAAF,EACpBlE,GAAKoE,EACNE,EAAAE,EAAA1B,EAAAr5N,OAIL,QAAAiB,EAAA45N,EAAa55N,EAAby5N,EAAAljO,OAAwBwI,OAAAiB,IACjBy5N,EAAKljO,OAAYyJ,GAAGhH,QAAGqL,GAAAixN,GAG9BmE,EAAA7/N,KACW4/N,EAAC,EAAcA,EAAI7oH,EAAA5xG,OAAAy6N,IAC1BD,EAAIC,MAIEn/N,UAAWw/N,uBAAY,SAAK3kO,EAAW4iO,GAYhD,SAXGpuH,cAAgBx0G,EAAMuB,QACpBmD,KAAO84N,mBACRmC,gBAAAj7N,KAAAg+N,UAEDE,EACA5iO,EAAI4iO,eAAkB,EAItB5iO,EAAAmgO,OAAa,KAEhBngO,KAGWmF,UAAU4+N,2BAAyB,SAAAjuL,GAS7C,MAPW,UAAPryB,QAAOljB,KACEu1C,EAAYlqC,QAAE+iC,MAAA,EAAAmH,EAAAlqC,QAAA/B,QAGxBwhB,EAAA5lB,EAAAyQ,OAAA4/B,EAAAlqC,QAAA,CAAA69B,UAAA,KAML63L,EAAAn8N,UAAAs/N,aAAc,SAAd3E,GACE,IAAMA,EAAQz+N,QAAwB,IAAfy+N,EAAYz+N,OAAGwI,OACtC,OAAW,EAGX,IAAA82N,EAAOb,EAASh8N,QAAeqL,EAC/B6+C,EAAgB3iC,EAAc5lB,EAAAK,IAAAg6N,EAAAz+N,OAAA,WAC9ByjO,EAAOz5M,EAAoB5lB,EAAAs/N,MAAA/2K,EAAA,SAAAziD,GACvB,OAAAA,EAAS4D,EAAK5D,EAAE01B,WAEnB6jM,EAAA31N,EAAA21N,EAAA7jM,EAAA0/L,KAGDx7N,UAAApG,YAA4B,SAAAiB,GAC5B,IAAIoB,EAAMiqB,EAAiB5lB,EAAC+F,QAAS9G,KAAIrD,OAAIrB,QAC3CqB,OAAQI,OAACL,EAAa,QACvBM,OAAArB,KAAA,gBAAAL,MACCmF,UAAY6/N,UAAA,SAAApzN,EAAAqzN,KACHA,GAAmBrzN,EAAOsuN,WAAG+E,IAAArzN,EAAAsuN,YAGpCx7N,KAACwgO,UAAStzN,GAEflN,KAAA3F,YAAA6S,MAGQzM,UAAAgxK,WAAA,WACP,QAASrrK,EAAA,EAAMA,EAAIpG,KAAArD,OAAAwI,OAAqBiB,IAAC,CACnC,IAAA9K,EAAW0E,KAAKrD,OAAAyJ,GAEF,QAAb9K,EAAAyY,oBAIF/T,KAAOwgO,UAAAllO,QAEVmF,UAAa+wK,aAAG,eACjB,IAAAprK,EAAA,EAAAA,EAAApG,KAAArD,OAAAwI,OAAAiB,IAAA,yEAGHw2N,EAAAn8N,UAAAggO,cAAA,SAAyB5jO,+BAGf4D,UAAW8kB,wBAAA,eACjBzlB,EAAIE,UACJ5C,KAAMsjO,eAEF5gO,EAAIgyD,MAAO3sD,OAAU,GAGTwhB,EAAW5lB,EAAQyQ,OAAK1R,EAAIkpH,WAAe7lG,KAAC,SAAWiuB,GAAA,WAAAA,EAAA25B,OAErE5lE,OAAA,GAGAwhB,EAAA5lB,EAAAyQ,OAAA1R,EAAAipH,YAA8D5lG,KAAA,SAAAw9M,GAAA,WAAAA,EAAA51J,OAC/C5lE,OAAU,eAKlBisK,iBAAmB,SAAC7uI,eACzBn8B,EAAApG,KAAArD,OAAAwI,OAAmBiB,mBACfA,GAACvJ,KAAO0lC,eAEZviC,KAAArD,OAAeyJ,SACfA,8EAyBN,2DAtBU60N,yBAENnrH,uBACKhyG,aACHrC,cACDe,EAAAw2I,oBAIGv3I,QAEH2D,QAAAoL,EAAA,EAAAlP,EAAA8D,QAAAC,GAAAq2F,EAAA,IACFt2F,QAAAoL,GAAAlP,EAAA8D,QAAAC,EAMD7C,EAAK4C,QAAYqL,GAAAnP,EAAA8D,QAAgBm9B,OAElCu/L,SAAAt/N,GAEKA,KAGNiE,UAAMuoC,WAAN,SAAC/U,EAAAlb,GAKD,OAJAkb,EAAA/1B,OAAAktH,EAAqC,WAArCltH,CAAqC+1B,KAAA/1B,OAAAktH,EAAA,SAAAltH,CAAA+1B,GACrClb,EAAIA,GAAS,sBAGO,YAFP/Y,KAAOq/I,cAEAnhJ,OAAAktH,EAAA,SAAAltH,CAAA+1B,GAAAlb,UAAA7a,OAAAktH,EAAA,MAAAltH,CAAA+1B,GAAAlb,WAEtB6jN,EAACn8N,UAAAypB,QAAA,WAED,IAAA2C,EAAA/qB,mCAEG,IACH,QAAA+S,EAAA4R,EAAa,EAAAzmB,KAAArD,QAAgBoY,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CACND,EAAAxT,MAEP2oB,iBAIZ02M,GAAU/zM,EAAI,CAAKwI,MAAOurM,eAI1B7rN,MAAAE,OAAAnT,EAAgC+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAEjC,WAAAgY,EAAA,MAAAA,EAAAwI,SAKHunM,EAAAn8N,UAAA+/N,UAAA,SAAGtzN,GACD,IAAI2zN,EAAC/+N,EACNu6G,EAAA11F,EAAA5lB,EAAA+F,QAAA9G,KAAArD,OAAAuQ,GAED,GAAAA,EAAAsuN,UAAA,CACMtuN,EAACsuN,WAAW,EACjB,IAAAsF,EAAAn6M,EAAA5lB,EAAAsyD,KAAAnmD,EAAAvQ,OAAA,SAAA6pC,GAAA,OAAAA,EAAAi1L,SAED,GAAAvuN,EAAAvQ,OAAAwI,OAAA,GAEC,IAED47N,EAFC7zN,EAAAvQ,OAAA,GAEDyC,QAAAqL,GAAAyC,EAAA9N,QAAAqL,EAAAyC,EAAA9N,QAAAm9B,GAEC6iM,EAAA/iH,EAAA,EAIA43C,EAAA/mJ,EAAA9N,QAAAqL,EAED,IACS,QAAAoK,EAAA4R,EAAmB,EAAAvZ,EAAMvQ,QAACoY,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAASF,EAAKG,OAAC,CAEpC,IAAQ1Z,EAAKyZ,EAAAxT,MAIbjG,EAAA8D,QAAkBqL,GAAKs2N,EAGrC/gO,KAAArD,OAAAI,OAAAqiO,EAAA,MAAAlvH,EAAA,EAAA50G,IAEC8jO,GAAA,EAEDnrE,EAAA/0J,KAAA+I,IAAWgsJ,EAAX34J,EAAA8D,QAAAqL,EAAAnP,EAAA8D,QAAAm9B,IAIQ,MAAAykM,GAAAH,EAAA,CAAAxrM,MAAR2rM,GACQ,QACG,IACVjsN,MAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAGM,QAAe,GAAAgsN,EAAA,MAAEA,EAAAxrM,OAKvB,IAFD,IAAA4rM,EAAAhtE,EAAc/mJ,EAAd9N,QAAAqL,EAAA,EAEC0mK,EAAAiuD,EAAAjuD,EAAAnxK,KAAArD,OAAAwI,OAAAgsK,IAEDnxK,KAAArD,OAAAw0K,GAAA/xK,QAAsBqL,GAAtBw2N,EAEI/zN,EAAOvQ,OAAA,GACDmkO,GACA9gO,KAAEy+N,kBAAavxN,GAQnB,OAJDlN,KAAA/C,2BAGL+C,KAAAhD,OAAArB,KAAA,oBAGG6iO,EAAAx+N,KAAA2+N,aAAAtiH,KAGQt7G,EAAAo9N,KAAA30M,MAAA7C,EAAA5lB,EAAA0lB,EAAA,GAAAzmB,KAAArD,QAAA6hO,aAED73M,EAAe5lB,EAAAK,IAAAo9N,EAAA,SAAAljO,GAAA,OAAAA,EAAAc,8BACZ,OAERY,OAACrB,KAAA,oBAOE8E,UAAiBk+N,aAAW,SAAJtiH,GAG5B,QADEmiH,EAAY,GAEd9hO,EAAA2/G,EAAA,EAAA3/G,EAAAsD,KAAArD,OAAAwI,OAAAzI,IAAA,CAEI,IAAApB,EAAY0E,KAAKrD,OAACD,GAElB,GAAmB,QAAnBpB,EAAAyY,KAEF,MAIFyqN,EAAA5uN,KAAatU,GAGf,OAAAkjO,KAEE/9N,UAAiB+Y,GAAA,SAAai8L,EAAA30L,QAC/B9jB,OAAAwc,GAAAi8L,EAAA30L,MAGKrgB,UAAcoZ,IAAA,SAAiB47L,EAAG30L,GAExC9gB,KAAKhD,OAAO6c,IAAA47L,EAAQ30L,MAEZrgB,UAASygO,kBAAoB,WACrClhO,KAAGu4J,cAAAv4J,KAAAu4J,aAAA,MAGLqkE,EAAAn8N,UAAA67I,yBAAA,WACE,OAAKt8I,KAAAu4J,aAAiB,GAExBqkE,EAACn8N,UAAAyxI,wBAAA,WAED,WAAAlyI,KAAAu4J,+DACEr6J,OAAoBktH,EAAA,WAApBltH,CAAoB+1B,GAAKA,EAAM/1B,OAAAktH,EAAA,SAAAltH,CAAA+1B,GAAf,iBAAL0S,SAAKzoC,OAAAktH,EAAA,SAAAltH,CAAA+1B,GAAA40C,UAAA3qE,OAAAktH,EAAA,MAAAltH,CAAA+1B,GAAA40C,sDAEW,wCACrBs4J,WAAa,uBACXl7N,+BAEDo5I,YAAA,gCACFr/I,KAAA2mC,SAAA+zC,EAAA,EAAAr5E,KAAAslC,mKACFlmC,UAAA2gO,eAAA,kBACFz6M,EAAA5lB,EAAAkwF,QAAAjxF,KAAAwT,KAAAxT,KAAA29N,qOAIKl9N,UAAiB4gO,yBAAsB,cAC3CrhO,KAAAgpH,WAAa7lG,KAAMhe,SAAKnF,KAAa09N,mBAAiBv4N,OACrD,SAGH,IAAM4qC,EAAUppB,EAAA5lB,EAAiBK,IAACpB,KAAOgpH,WAAA7lG,KAAK,SAAIiuB,GAC5C,OACApsC,KAAAosC,EAAiBpsC,iBAEvB+Z,QAAoB4H,EAAA5lB,EAAAk4F,UAAA7nD,EAAAryB,SAAfuyB,QAAW3qB,EAAA5lB,EAAAk4F,UAAA7nD,EAAAE,mBAGf3qB,EAAA5lB,EAAAkwF,QAAAlhD,EAAA/vC,KAAA09N,0JACF4D,EAAAC,QAj3BCvhO,KAAQ5C,KAAIsjO,iBAAAc,IACRF,OAGJE,GAAcA,IAAI3xM,EAAA,gBAClByxM,OA62BJ,IAACG,EAAAC,EAAAxiO,KAAA+N,MAAAq0N,GAAA5rI,EAAA,EAAAA,EAAA,IAt5B0B11F,KAAArD,OAAA42D,QAAA,SAAAj4D,EAAA8K,uNCzB3Bw2N,EAAAn8N,UAAAkhO,mBAAA,SAAAp/L,GACA,IAAAq/L,EAAA9/N,EAAA+/N,EAAAhtN,EACA,whBCSgBitN,EAAAC,EAAAvwN,OAAA,SAAAlW,GAAA,OAAAA,EAAA0U,OAAA5D,OAAAjH,OAIH68N,EAAAF,GAFEC,EAAA58N,OAAA28N,EAKF,IACA,QAAAG,EAA8Bx7M,EAAA,EAAAs7M,GAAAG,EAAoBD,EAAWjtN,QAAyBktN,EAASjtN,KAAAitN,EAAAD,EAAAjtN,OAAA,CAC/F,IAAA1Z,EAAA4mO,EAA8B3gO,MAC9BjG,EAAA0U,OAAA5D,MAA6B41N,EAC7B1mO,EAAAuG,UAIA,MAAAsgO,GAAAC,EAA2B,CAAA/sM,MAAA8sM,GAC3B,QACA,IACAD,IAA8BA,EAAAjtN,OAAAnT,EAAAmgO,EAAAxmJ,SAAA35E,EAAA/B,KAAAkiO,GAI3B,QAAa,GAAAG,EAAA,MAAAA,EAAA/sM,2FAGA,2BF0GF,sBEnGnBpyB,okBAMRo/N,KACE,SAAOx/N,EAAMzI,EAAQF,gFACfA,EAAAC,EAAAC,EAAA,eAAO,OAAUkoO,IAEApoO,EAAMC,EAAAC,EAAA,sBAAAmoO,oCAATroO,EAA4BC,EAAAC,EAAA,sBAAAooO,IACnCtoO,EAAAC,EAAAC,EAAwC,sBAAAqoO,oEAGtDvoO,EAAAC,EAAAC,EAAA,sBAAAsoO,IAE+BxoO,EAAgBC,EAAAC,EAAA,sBAAAuoO,IAe/CzoO,EAAAC,EAAAC,EAAA,sBAAAwoO,IAdsB1oO,EAAAC,EAAAC,EAAA,sBAAAyoO,oDAEXC,EAAsC5oO,EAAA,QAC5C2pG,EAAgD3pG,EAAA,sBAKnCgE,OAAM4kO,EAAK,EAAX5kO,CAAW,+BAAAmuC,WACtBnuC,OAAA4kO,EAAA,EAAA5kO,CAAA,2BAAAmuC,WACOnuC,OAAA4kO,EAA8B,EAA9B5kO,CAA8B,yBAAAmuC,WAC9BnuC,OAAA4kO,EAAwC,EAAxC5kO,CAAwC,yBAAAmuC,mMAEnDnuC,OAAA4kO,EAAA,EAAA5kO,CAAA,wBAAAmuC,SACHnuC,OAAA4kO,EAAA,EAAA5kO,CAAA,oBAAAmuC,SAE6BnuC,OAAA4kO,EAAA,EAAA5kO,CAAA,uBAAAmuC,SACbnuC,OAAA4kO,EAAA,EAAA5kO,CAAA,4BAAAmuC,kBAEbq2L,IACH,IAAA5iO,EAAAE,KAEM,OAAS,SAAA6qC,GAAoB,OAAArqC,EAAA,EAAAV,OAAA,oBAClC,IAAOijO,EAAAx6J,EAAQy6J,EACb,OAAAxiO,EAAiC,EAAAR,KAAA,SAAA8B,GACjC,OAASA,EAAAN,OACT,OAGqB,OAFxBM,EAAAqiC,KAAAv0B,KAAA,UAEsC,GAAA1R,OAAA+kO,EAAA,EAAA/kO,IAAvC,KAUC,SATQ6kO,EAAcjhO,EAAA+iB,4DAEjBm+M,EAAA,sBAAArvK,KAA2B4U,EAAA//D,KAAA6sB,OAE3BwV,EAAS43L,EAAAO,gEAIX,SAAAn4L,GAAA,OAAArqC,EAAA,EAAAV,OAAA,oBACH,IAAAojO,EAEM,OAAS1iO,EAA+B,EAAAR,KAAA,SAAA8B,GAA/C,OAAAA,EAgBCN,OAfQ,KAAM,sFAEIM,EAAAN,MAAA,iHAKb2hO,EAAMC,WACY,EAAApjO,KAAA,SAAA8B,0BAIlB,SADEqiC,KAAAv0B,KAAA,UACF,CAAQ,EAAC1R,OAAA+kO,EAAwC,EAAxC/kO,CAAwCsqE,2CAEnD,cACH26J,EAAArhO,EAAA+iB,QAEgCk9F,WAAc,EAA/CqhH,EAKC,CAJcxnO,MAAQunO,EAAA36N,KAAA22B,oCACFojM,EAAMa,eAAjB,QAAW,mBAElBP,IACF,gBAAAh4L,GAEMA,EAAS23L,yFC9HmD,IAAAa,EAMKC,EAItEC,kGAXUrpO,EAAAC,EAAAC,EAAA,sBAAAopO,IAE2B,SAAAH,GACAA,EAAA,kBAEvCA,EAAQ,YAH+B,CAI6BA,MAAA,KAEH,SAAAC,GAErDA,EAIX,wBANgE,CAEjEA,IAA0BA,EAAA,cAExBC,GACAA,EAAA,YAHUA,EAAc,MAAd,SAgCLA,IAAiBA,EAAiC,SACvDC,EAA8B,WAGhC,OAFC,aAD8B,kBA6B7B3gO,EAAAzI,EAAkCF,sBAEfA,EAAsBC,EAAEC,EAAK,sBAAAqpO,kBAG1C,MAAS,UACV,iBACKA,EAAiB,wBAMnBrpO,EAAkBF,4BAMV,YAIN,YAGM,YAGH,UAESA,EAAqBqhC,EAACmoM,mBAIfnoM,EAAA9rB,iBAGPvV,EAAAqhC,EAAAnf,mBAMN,YAIM,uFAcI,mBAAL,KAAC,iBACV,0HAEG,uDAIRyV,EAAAurK,aACFt7L,EAEDsE,EAAA,EAAAA,EAAAyrB,EAAArpB,KAAArD,OAAAiB,IAAsC,CACtC,IAAI0vE,EAAKjkD,EAAKrpB,KAAKpC,QACjB0vE,EAAA3wE,OAAc,IAKhB,IAAA6Z,EAAA82D,EAAA,GACA,GAAI92D,EAAK,CAEP,GAAAA,EAAUw5C,WAAU,KAAM,CAGtB,IAAAlnC,EAAKtS,EAAUlY,QAAA,OACjB,GAAAwqB,EAAK,GACN,IAAAvrB,EAAAiZ,EAAAwiC,OAAA,EAAAlwB,EAAA,GACFqyM,EAAA,SAAA59N,EAOK,GAAA49N,GAJa,CACjBjvN,KAAA,KAGIT,eAAAlO,GAAA,CAELjG,EAAAG,QAAA2jO,EAAAC,cACF/jO,EAAAif,QAAA,IAAA84B,EAAA,GAAA/jC,OAAA,KACDhU,EAAA0I,KAAAoH,KAAA9P,EAAAif,UA7Ge,IAAA/Y,EAAAgZ,EAAAwiC,OAAAlwB,EAAA,GACd,GAAAqyM,EAAA,CAC2B7jO,EAAMif,QAACgkM,iBAAA98M,EAAAD,GACX,IAAS,IAAA+I,EAAA,EAAAA,EAAA+mE,EAAA3wE,OAAA4J,IAEdjP,EAAAif,QAAAgkM,iBAAA98M,EAAmB6vE,EAAQ/mE,QA0GhD,KAAA+E,EAAoBhU,EAAAif,QAAAjL,OACC,IAAA/E,EAAA,EAAAA,EAAA+E,EAAA3O,OAAgB4J,IAAG,CACX+E,EAAA/E,GAAA0F,SAEXX,EAAA/E,GAAA0F,OACN,IASOX,EAAA/E,GAAA0F,OAClB1O,GAAA,IAAAgJ,EAAA/I,EAAA8vE,EAAA/mE,uBAK6B,eAG5B,GAAAjP,EAAAG,QAAqC2jO,EAAAE,SAAA,CACvBhkO,EAAYG,MAAI2jO,EAAeG,SAC9C,SAGA,SAEF,GAAAjkO,EAAAG,QAAA2jO,EAAAE,SAAA,CAGiB,GADqB5lO,OAAiB+zB,EAAA,EAAjB/zB,CAAiB8gB,KACtC6Q,EAAA,UAAAzc,OAAA,CACK,IACT,IAAU,IAAA4wN,GAAA39M,OAAA,EAAAI,EAAA,EAAAqvD,IAAAmuJ,EAAAD,EAAAhvN,QAAAivN,EAAAhvN,KAAAgvN,EAAAD,EAAAhvN,OAAA,CACD,IAASvP,EAAAw+N,EAAQ1iO,MAChCzB,EAAAif,QAAAgkM,iBAAA98M,EAAAR,IAIK,MAAW+1E,GAAAn1D,EAAA,CAAAgP,MAAAmmD,GACZ,QACU,IACbyoJ,MAAAhvN,OAAAnT,EAAAkiO,EAAAvoJ,SAAA35E,EAAA/B,KAAAikO,GAED,WAAA39M,EAAA,MAAAA,EAAAgP,OAELv1B,EAAAG,MAAA2jO,EAAAG,SAEiB,SAGGjkO,EAAaG,MAAiB2jO,EAAiBG,UAOhE,yBAFIjkO,EAAAG,MAAY2jO,EAAOC,YAEnB/tJ,EAAI3wE,OAASrF,EAAMif,QAAIjL,OAAA3O,OAAA,CAEzB,IADF,IACW4Q,GADNjC,EAAYhU,EAAGif,QAAOjL,QACd3O,OAAA4Q,EAAA+/D,EAAA3wE,OAAA4Q,IACTjW,EAAIif,QAAUgkM,YAAOjtI,EAAU//D,IAG7BjW,EAASghB,UACThhB,EAAMghB,SAAEojN,SAAApkO,EAAAif,QAAAjL,kBAEDO,UAAQyhE,KACjBh1D,UAIFhhB,EAAKghB,SAAEqjN,MAAAruJ,YAKV,oMAEH91E,KAASwI,KAAC,CAAAxI,KAAA+e,SACX,IAAAqlN,EAAA39M,EAAA,KAAAzmB,KAAAyU,OAAA,CAAA4vN,eAAA,EAAAC,gBAAA,EAAAC,UAAA,EAAA/zM,KAAAxwB,KAAAwwB,cAEMg0M,EAAoDzjO,EAAAzC,MAAAzC,EAAAuoO,cAEvDK,EA1Ha,YA8HfC,EAASnjO,EAAAkT,OACPg9B,EAAAlwC,EAAWsE,kBACX4rC,EAAAwyD,SAAS,KAETxvF,EAAYkwN,UAAAlzL,EAAA5zC,QAAA,YAAA4W,EAAAkwN,UAEXlzL,EAAAwyD,SAAA,OAAAxyD,EAAAwyD,SAAAxvF,EAAAmwN,kDAIUjxN,EAAAc,aACN,aACEob,EAAA,UAAA1c,wBACH5R,YACA,OAAc,cAGjBwS,OAAA8b,EAAA,UAAA5c,cAAM,SAAW1R,GAChB,OAAAmvB,IAAoBnvB,GACbA,EAAMsE,WAEV6+N,EAAAnjO,EAAAkT,oBAIJlT,GAAA,OAAAmjO,EAAAnjO,EAAAkT,eAESnO,EAAMwN,EAAAW,aAEd,SAAUnO,aACHA,gBAEDmgB,EAA4B,EAAC3S,GAAAgC,EAAAD,EAAAb,QAAAc,EAAAb,KAAAa,EAAAD,EAAAb,OAAA,SAC9BzT,MAEKkT,aACNowN,GAAUtmO,GAAMA,EAAA0V,eAAA3N,GAAA,eACXA,EAAM,IACVF,EAAA,EAAAA,EAAA0N,EAAA3O,OAAAiB,IAAA,CACFA,EAAA,IACE0vE,GAAerhE,EAACmwN,WAEtB,IAAA5+N,EAAA8N,EAAA1N,GAAApB,KACW6/N,EACb7+N,EAAA8N,EAAA1N,GAAA2N,+BAEU+hE,GAAA4uJ,EAAA1+N,EAAAyO,0HCrT8C,SAGL,SAAAqwN,EAAAt8N,EAAAiM,GACF,IAAAwa,EAAAntB,EAE9C,IAAA0G,EAEN,yCAKGu8N,QAAA,OACIJ,UAAS,gBACVK,YAAOC,EAAAjgO,2DAGX,IAAW8O,EAAOgJ,EAAAvb,MAAJuS,OACZ,GAAMW,EAAMuwN,cAAcC,EAAS3gE,KAC/B4gE,EACIA,EACFC,EAAO,OAAArxN,EAAAW,GACT0wN,EAAa,OAAArxN,EAAAW,GACd0wN,EAAA,OAAArxN,EAAAW,GACF0wN,EAAA,aAAArxN,EAAAW,8GAGJ,IAAAtP,EAAA2O,EAAA,GAAAxF,OAAAnJ,OAEe,GAAAA,EAAA,EACC,KAAAigO,EAAAtxN,EAAA1S,IAAiB,SAAKuS,GAAA,OAAA0xN,EAAA1xN,EAAAc,KAC1B,IAAArO,EAAA,EAAAA,EAAAjB,EAAAiB,IAAA,CACG,IAAC,IAAA2I,EAAA,EAAAA,EAAA+E,EAAA3O,OAAA4J,IAAA,CACdA,EAAA,IAEMm2N,GAASzwN,EAAQmwN,WAGV,IAAmB5+N,EAAC8N,EAAmB/E,GAAAT,OAAiBrN,IAAAmF,GACnD,OAAAJ,IACEk/N,GAAiBE,EAACr2N,GAAA/I,IAG9Bk/N,GAAYzwN,EAAYswN,SAO7BG,GAAAzwN,EAAAswN,kBAGE91M,EAAQ,CAAAoG,MAAMusE,eAIlB9kF,MAAA7H,OAAAnT,EAAA+a,EAAA4+D,SAAA35E,EAAA/B,KAAA8c,GAGG,QAAS,GAAAoS,EAAA,MAAwBA,EAAmBoG,OAEzD,OAAM6vM,MAKNr7J,EAAM3vE,EAAe,UAGlBA,EAAS,QAIbqY,EAAArY,EAAA,UASO,yCAQD47E,SAACh0E,QAEJ,OAACiqH,EAAA,EAAAH,YAGD,IAAI,IAAE/2G,EAAA4R,EAAI,EAAAvoB,OAAAgH,KAAA6mH,EAAA,IAAAh3G,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CACR,IAAI1O,EAAAyO,EAAAxT,SACK,IAAK22D,OAAM,MAAM5xD,EAAA,WACzBC,KAAAuvE,GAAA,CAAC,IAAOhmC,EAAOi8E,EAAE,EAAAzlH,GACnB,GAAAwpC,EACF,OAAAA,aAMQzpB,EAAQ,CAAAgP,MAAUmmD,eAGpBzmE,MAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAEL,QAAC,GAAAwR,EAAA,MAAAA,EAAAgP,cAED02F,EAAmB,EAAAH,iBAEpB05G,EAAAh/N,GACD,IAAAwpC,EAAAi8E,EAAA,EAAAzlH,GAEK,OAAAwpC,GAGCi8E,EAAyB,EAAAH,iBAGzB25G,EAAgBn+N,EAAAo+N,WACpBziC,EAAS,IAAkBxwL,EAAA,EAC3BoG,EAAMvR,EAAW0M,OAAO0xN,GAExBp/N,EAAO,EAAKA,EAAGuS,EAAOrK,OAAInJ,OAAKiB,IAAA,CAC9B,IAAA0vE,EAAAn9D,EAAArK,OAAArN,IAAAukO,GACGziC,EAAAvwL,OAAY5C,KAAG61N,EAAA3vJ,WAElBrvD,EAAe,KAAArf,EAAA,CAAA0M,OAAA2S,EAAA,EAAArf,EAAA0M,OAAA,CACf,CACO9O,KAAC,WAEJ+O,KAAA8b,EAAa,UAAAzc,OACrB9E,OAAAy0L,EAEetuL,OAAsB,mBAIX9I,EAAKnK,OAE7BkkO,EAAA/5N,EAAA6F,OAAA,SAAAtE,GAAA,YAAAjH,IAAAiH,EAAAiI,OAAA3T,KAAC8U,EAAcovN,EAAEvgO,OAGhBwgO,EAASznO,OAAY2rE,EAAO,QAAnB3rE,CAAmBwnO,EAAA,SAAAx4N,GAAA,OAAAA,EAAAiI,OAAA3T,YAC7BtD,OAAA2rE,EAAA,MAAA3rE,CAAAynO,GAEDvkO,IAAO,SAAO2e,EAAAxe,GAAA,OAAAwe,QAAAxe,QAAA20L,WAAAn2K,EAAAzJ,KACf8kE,OAAA,kCCtJEl/E,KAAA,CACG0hM,aAAc,SAAAp8L,GAAA,OAA8B,IAAA02D,OAAA,eAAA12D,EAAA,oCAElD61C,UAAA,SAAAy+B,oCAIG53E,OAAA2rE,EAAA,IAAA3rE,CAAAi/L,EAAA,SAAA57L,EAAA+E,GACwB,IAACs/N,EAAc,IAAA1tK,OAAA,IAAA5xD,EAAA,eAAApI,OAAA2rE,EAAA,aAAA3rE,CAAAhC,KAAAC,UAAAoF,IAAA,MACVwa,EAAC+5D,EAAA/5D,MAAA6pN,GAChB7pN,GACGjI,EAAGlE,KAAMmM,EAAA,MAI5B,MAAAja,IAED,OAAAgS,GAEG4pL,kBAAA,SAAA/pL,GAAA,OAAAA,EAAAoI,MAAA,yBACI4hL,kBAA0B,SAAoBhqL,GAAA,OAAAA,EAAAoI,MAAA,sBACnDxV,KAAO,SAAWuvE,GAEV,IACF,OAAU55E,KAAMoC,MAAAw3E,GAEd,MAAMzgD,cAGT,cAAM,SAAA7zB,GAAA,WAAA02D,OAAA,YAAA12D,EAAA,8BACL,SAAAs0E,GACA,IAAAhiE,EAAY,GAKZ,SAJEjW,QAAQ,IAAIq6D,OAAK2tK,EAAiB,KAAI,SAAY1tK,YAChDvoD,KAAOuoD,EAASs3D,QACjB,KAEH37G,qBAEa,SAASH,GAAS,OAAEA,EAAAoI,MAAA8pN,IAAA,0BACtB,SAASlyN,GAAA,OAAAA,EAAAoI,MAAA8pN,IAAA,sBACjB/vJ,GAAA,OAAA+vJ,EAAAt/N,KAAAuvE,eAGLgwJ,EAAWn6N,EAAAo6N,GAIhB,IAAAC,EAAAr6N,EAAA6F,OAAA,SAAAtE,GAAA,OAAA64N,EAAAx/N,KAAA2G,EAAAuzC,SAEDnqC,EAAA0vN,EAAA7gO,OAEGwgO,EAAAznO,OAAA2rE,EAAA,QAAA3rE,CAAA8nO,EAAA,SAAAj9N,GACI,IACCgT,EADQhT,EACM03C,MAAA1kC,MAAAgqN,GACpB,OAAWhqN,EAACA,EAAa,GAAC,OAQzB,OANE7d,OAAA2rE,EAAA,MAAA3rE,CAAAynO,GACHvkO,IAAO,SAAA2e,EAAexe,GAAA,OAAAwe,QAAAxe,QAAA20L,WAAAn2K,EAAAzJ,KACvB8kE,OAAA,SAED1oE,2BAG6CuzN,EAAAnwJ,GAC3C,IAAIsnH,MAEH8oC,EAAAhqO,KAAAqK,KAAAuvE,KACKsnH,EAAY8oC,EAAYhqO,MAG/B,MAAAm5B,ICzEC,yCAAO+nK,+CCGP+oC,EAAwBhxN,SAAb,oBACLixN,EAAS,SAAiBjpL,EAAA72C,EAAA0d,EAAAziB,YAC5B+E,GAAS/E,EACV,sHCMC,UDIUrD,OAAAgH,KAAeiQ,GAAAo+C,QAAuB,SAAAjtD,QAC7BL,IAAhB8qC,EAAWzqC,IAAYyqC,EAAAzqC,KAAA6O,EAAA7O,WACVyqC,EAAGzqC,6CCnBgDL,IAAAkP,EAAA7O,WAInEyqC,EAAyBzqC,MDQ9ByqC,EAAAtqB,EAAA,KAAAtR,GCCU47B,oBAQPs1L,EAAOlxN,EAAiB+3G,OACzBo5G,EAAA7/M,EAAA,KAAAtR,GAMD,OAJAjX,OAAIgH,KAAAgoH,GAAkB35D,QAAA,SAAAjtD,UACbggO,EAAAhgO,KAGFggO,WAUNC,EAAApxN,EAAAmoC,eAGe,IAAdA,IAAcA,EAAA,IACdnoC,GAAuB,IAAvBjX,OAAkBgH,KAAKiQ,GAAAhQ,OAMxB,KAHCjH,OAAmBgH,KAAGiQ,GAAAlF,OAEE7O,IAAM,SAACkF,GAAA,OAAoBA,EAAA,KAAA6O,EAAA7O,GAAA,MAAAG,KAAA,MACpD,KAAAA,KAAA,IALC62C,MAWFkpL,EAAU,SAAkB5gO,UAC1B1H,OAAOgH,KAAAU,GAAAoqB,OAAiB,SAAA+gB,EAAAzqC,GAKzB,YAJAL,IAAAL,EAAAU,KAEGyqC,EAAAzqC,GAAaV,EAAIU,IAEpByqC,GAED,gBAOsBxvC,EAAGyxI,SACpBlxI,IAAUkxI,EAAA,WAEV,IAAAouD,EAAA36K,EAAA,EAAAusH,GAAAquD,EAAAD,EAAApsL,QAAAqsL,EAAApsL,KAAAosL,EAAAD,EAAApsL,OAAA,CAED,IAAO3M,EAAAg5L,EAAiB9/L,MAG1B,KAAAA,GAAA8G,EAAA9G,OAMK,MAJPi3B,EAAAnwB,GASA,MAAAmzE,GAAAn1D,EAAA,CAAAgP,MAAAmmD,eCxFF6lH,MAAApsL,OAAAnT,EAAAs/L,EAAA3lH,SAAA35E,EAAA/B,KAAAqhM,GAAA,WAAA/6K,EAAA,MAAAA,EAAAgP,OAAA,OAAAmD,EAAA,SAAAiuM,EAAAzzF,GAAA,OAAAA,EAAA/iI,KAAA,SAAA+pN,EAAAC,GAAA,OAAAD,EAAAz4N,MAAA04N,EAAA14N,QAAA,ICC6DmlO,EAAA,SAAAx/D,EAAA3lK,GACU,IAAAolO,EAAAz/D,EAAAl3I,OAAA,SAAA42M,EAAA5+C,GAa1D,OAXAA,EAAgBj0K,OAAA8b,EAAA,YAAA43J,YAChBm/C,EDLb,SAAAA,EAAAC,EAAAtlO,GAAA,QAAA0E,IAAA4gO,EAAAtlO,MAAA,OAAAqlO,EAAA,UAAArlO,GAAAslO,EAAAtlO,OAAA,SAAAslO,EAAAtlO,MAAAqS,cAAA,OAAAgzN,EAAAn/L,OAAAo/L,GAAA,IAAAC,EAAAl8G,WAAArpH,GAA2BwlO,EAAAn8G,WAAAi8G,EAAAtlO,OACU,OAAAysC,MAAA84L,IAAA94L,MAAA+4L,GACfH,EAEGE,IAAAC,EACAH,EAEIA,EAAAn/L,OAAAo/L,GCFCG,CAAuBJ,EAAA5+C,EAAAzmL,GAG7CymL,EAAiBj0K,OAAC8b,EACtB,YAAA63J,cAGKk/C,6SAAeK,CAAAL,EAAA5+C,EAAAzmL,IAGXqlO,GACX,WAAiFD,EAAA12N,KAAA,SAAA+pN,EAAAC,GAEtE,OAAAD,EAAAn9N,GAAkBo9N,EAAAp9N,KAEC8pO,KAIjB,SAAAz/D,EAAA3lK,GACT,OAEFmlO,EAAAx/D,EAAA3lK,GAAA,IAKFrH,EAAAC,EAAAC,EAAA,sBAAA+nB,EAAA,sWCCgCjoB,EAAAC,EAAAC,EAAA,sBAAA6rO,IAEgB/rO,EAAAC,EAAAC,EAAA,sBAAA+rO,IACnBjsO,EAAAC,EAAAC,EAAA,sBAAA8sO,IAC9BhtO,EAAAC,EAAAC,EAAA,sBAAAisO,IAE4BnsO,EAAAC,EAAAC,EAAA,sBAAAmsO,IACFrsO,EAAAC,EAAAC,EAAA,sBAAA+rO,IAC1BjsO,EAAAC,EAAAC,EAAA,sBAAA8sO,oEC/B2BhtO,EAAAC,EAAAC,EAAA,sBAAAosO,IAEqBtsO,EAAAC,EAAAC,EAAA,sBAAA+sO,IAClCjtO,EAAAC,EAAAC,EAAA,sBAAAqsO,IACdvsO,EAAAC,EAAAC,EAAA,sBAAAgtO,YCaG,SAAAvkO,EAAAzI,EAA+BF,gDC3BNA,EAAAC,EAAAC,EAAA,sBAAAitO,IACG,IAAA7mO,EAAAtG,EAAA,QACAuI,EAAAvI,EAAA,QACF+H,EAAA/H,EAAAqhC,EAAA94B,wECenB,WAAM,OAAAvE,OAAAiE,EAAA,SAAAjE,CAFfowC,EAAgE,OAAA4qD,SAAA73F,KAAAwqH,WAAA1pH,EAAA,iBAAAqyI,MAAAryI,EAAA,iBAAA+oD,SAGhE,SAAiBppD,OACjBipB,EAAAjpB,EAASipB,gBACT9oB,EAAmBlB,EAAAmB,cAAAolO,EAAA,cAAA7yN,GAEnB,OAAAxS,EAA4BlB,EAAAmB,cAAAC,EAAA,aAAAolO,SAAA,CAAAhmO,MAAAimO,KAAAz8M,QAG5B,SAAc2yD,sBAzBoG,OADjF,SAAA79E,GAAA,OAAAoC,EAAAlB,EAAAmB,cAAAulO,EAAAF,SAAA,CAAAhmO,MAAA+sC,EAAA,QAAArsC,EAAAlB,EAAAmB,cAAAw7E,EAAAl9E,EAAA,KAAAX,MA2BjC6nO,CAAA,SAAmB7nO,GAAM,OAAAoC,EAAAlB,EAAAmB,cAAAylO,EAAA,KAAA1lO,EAAAlB,EAAAmB,cAAAw7E,EAAAl9E,EAAA,KAAAX,uBAOzBgD,EAAWzI,EAASF,qCAYpB0tO,EAAA1xK,KACEA,WAIA2oD,WAEAgpH,aAKE7hO,KACAA,mCAQckwD,KACQA,WAEvB4xK,WAEDC,EAIJ,SAAMC,EAA2B9xK,GAC/B+xK,EAAY/xK,WAEZgyK,IAEI,OAAAD,IAxCJl/N,EAAA3O,GCvCF,IAAAgW,EAAalW,EAAA,QACgCiuO,EAAAjuO,EAAAqhC,EAAAnrB,GAU3C7S,EAAMrD,EAAe,QCbvBkuO,EAAA,WC6FE,OD7FF,SAAAlhO,GAAAlH,KAAAyuC,YAAA,GAAAzuC,KAAArD,OAAA,GAAAqD,KAAA6mB,UAAA,GAAA7mB,KAAAqoO,kBAAA,GAAAroO,KAAAkkG,UAAA,GAAAlkG,KAAAsoO,cAAA,GAAAtoO,KAAAuoO,uBAAA,GAAAvoO,KAAAwoO,wBAAA,GAAAxoO,KAAAyoO,oBAAA,GAAAzoO,KAAA0oO,gBAAA,EAA2B1oO,KAAAwpF,kBAAA,EACFxpF,KAAA4jC,kBAAA,GACgC5jC,KAAA2oO,iBAAA,6MCDzD3oO,KAAA4oO,iBAAA,EAAA5oO,KAAAkyD,qBAAA,EAAAlyD,KAAA6oO,iBAAA,GAAA7oO,KAAA+tG,eAAA,CAAA9pF,iBAAA,GAAAjkB,KAAAR,MAAA0H,EAAAgyF,SAAA73F,KAAAwqH,WAAA3tH,OAAAX,EAAA,SAAAW,CAAAX,EAAA,iBAAAi3I,OAAAt2I,OAAAX,EAAA,SAAAW,CAAAX,EAAA,iBAAA2tD,MAyFEi9K,IAAAnoO,KAzFF,CAAAyuC,YAAA,GAAA45L,kBAAA,aAAA1rO,OAAA,GAAA2rO,cAAA,cACwEQ,kBAAA,KAInDC,yBAA0B,EAsElCliN,UAAY,GACvBq9E,UAAA,CACA7zF,QAAA,OAEW0vK,OAAgB,IACpBipD,IAAA,aACP7kI,cAAA,GAGO8kI,gBAAA,EACPL,iBAAA,EAEmB12K,qBAAwB,GAE3ChrD,ID1FF,GCiGEgyF,EAAOv2F,OAAAumO,iBAAA,CACP36L,SAAA,GAEWltC,KAAA,IAEX8nO,EAAAjwI,EAAA3qD,SAEK46L,EAAMjwI,SAAsBA,MAKjCzkF,EAAI,IAAQ2zN,EAAYe,GAIxBC,EAAOlvO,EAAgB,UACvBA,EAAAqhC,EAAA6tM,oOClHFlvO,EAAAC,EAAAC,EAAA,qCAAAivO,IAAAnvO,EAAAC,EAAAC,EAAA,qCAAAkvO,IAAApvO,EAAAC,EAAAC,EAAA,qCAAA0tO,IAAA5tO,EAAAC,EAAAC,EAAA,mCAAA4tO,IAAA9tO,EAAAC,EAAAC,EAAA,mCAAA8tO,IAAAhuO,EAAAC,EAAAC,EAAA,sCAAAguO,IAAAluO,EAAAC,EAAAC,EAAA,2BAAAqa,IAAAva,EAAAC,EAAAC,EAAA,kCAAAmvO,IAAArvO,EAAAC,EAAAC,EAAA,6BAAAovO,KAiBgEC,KAUzD,SAAS5mO,EAAAzI,EAAqDF,gBAG9CA,EAAAC,EAAAC,EAAA,sBAAAsvO,IAEDxvO,EAAAC,EAAAC,EAAA,sBAAAuvO,IACRzvO,EAAkBC,EAAAC,EAAA,sBAAAwvO,IAClB1vO,EAAUC,EAAAC,EAAA,IAAqB,kBAAAyvO,IAC7B3vO,EAAAC,EAAAC,EAAA,sBAAA0vO,IAEC5vO,EAAAC,EAAAC,EAAE,IAAS,WAAO,OAAAsoI,IACfxoI,EAAgBC,EAAAC,EAAA,sBAAAqsG,IAEXvsG,EAAKC,EAAAC,EAAA,sBAAA2vO,IACR7vO,EAAqBC,EAAAC,EAAA,sBAAA4vO,IAC7B,IAAAC,EAAc/vO,EAAA,QAEhBgwO,EAAahwO,EAAAqhC,EAAA0uM,OAIAlpO,EAAA2oO,oBACbS,KACDppO,EAAA8jI,OAAAslG,MAGF,oBACFppO,EAAAqpO,gBAGC,SAAI7oO,YACIR,EAAAspO,SAAA9oO,eAGNw5D,EAAAuvK,YACmCvpO,EAAE02B,IAAAsjC,EAAAuvK,eAEnCvvK,EAAIrmD,YACsB3T,EAAAwpO,SAAAxvK,EAAArmD,eAE3BqmD,EAAAuvK,cACFvvK,EAAAuvK,MAEC,SAAQvvK,YACTA,MAGQ,SAAAp0B,EAAAo0B,EAAAuvK,SACL,YACFvvK,EAAOuvK,OACFA,KAMZE,KAED,SAAO3nO,EAAAI,KAONwnO,KACD,SAAS5nO,EAASzI,EAAuBF,gBAGpBA,EAAWC,EAAAC,EAAA,sBAAAswO,IACTxwO,EAAAC,EAAAC,EAAA,sBAAAuwO,IACtBzwO,EAAAC,EAAAC,EAAA,sBAAAwwO,IACM,IAAAxsM,EAAElkC,EAAgB,QAC1BmkC,EAAAnkC,EAAAqhC,EAAA6C,GAEQ21K,EAA4B75M,EAAA,QACpB2wO,EAAmB3wO,EAAkB,QACrD4wO,EAAA5wO,EAAA,QAEe8Y,EAAkF9Y,EAAA,iBAY1FwwO,EAAiBxjO,GAEvB,GAAIA,IAAAm3B,EAA2Bt9B,EAAAgsJ,QAAA7lJ,GAAA,CAC7B,IAAM6jO,EAAA7jO,EAAgBuN,OAAGvN,EAAeuN,OAAK,GAC7Cu2N,EAAO9sO,OAAA2sO,EAAyB,EAAzB3sO,CAAyB6sO,EAAiBr2N,MAAO,QACzD,gBAAAnT,GAED,IAED2J,EAFC1L,EAAA0H,EAAA1H,MACOojK,EAAAmoE,EAAAnoE,SAAA5vB,EAAA+3F,EAAA/3F,WAGTn3I,EAAAwiC,EAAyDt9B,EAAA8E,SAAAtE,GACzD+sB,EAAA2xH,EAAA1+I,GACA0pO,GAAA,EACA,GAAAroE,GAAmBA,EAAAz9J,OAAA,IACH+lO,EAAAhtO,OAAA61M,EAAA,eAAA71M,CAAA0kK,EAAArhK,IACV,CAEN,IAAAyE,EAAAi6I,EADEpkJ,EAAAqvO,EAAArvO,MAEFmyC,MAAAhoC,KACesoB,EAAAtoB,GAEbilO,GAAA,EAGE,IAAAj9L,MAAA1f,GAAA,CAEY,GAAA28M,IAAmC5sM,EAA8Bt9B,EAAAy3N,UAAAj3N,GAAA,CAC3E,IAKkB2pO,EALlBppO,EAAA8oO,EAAArpO,EAAEwpO,EAAS1uN,YAAkBva,EAAAua,SAAAM,EAAA7a,EAAA6a,eAGhC,GAFC9gB,EAAAmvO,EAAA18M,EAAAjS,EAAkDM,EAAAzV,EAAA28H,OAEnD++B,KAAAz9J,OAAA,GAEqB+lO,EAAehtO,OAAQ61M,EAAU,eAAlB71M,CAAkB0kK,EAAA/mK,MAE7BA,EAACqvO,EAAArvO,MAK1Bm3I,KAAA7tI,SAAiB+F,EAAGy/N,EAAAr8M,EAAA0kH,EAAAxzI,IASd,OANG3D,IAEAA,EADCkvO,GAAIA,EAAAloE,QACLkoE,EAAAloE,QAEa,IAEhB,CAAAhnK,OAAAyyB,UAAApjB,UAIP,OAAIigO,WAIFlrF,EAAQ1+I,SACT,iBAAAA,EAEKA,EAGNA,SAAiC2yB,MAAAvuB,QAAApE,GAClCmnC,4DCtLD,OAAA7sC,KAAAwiC,EAAAt9B,EAAA8E,SAAAtE,GAAA+sB,QAAA2xH,EAAA1+I,IAEA,SAAAopO,EAAAppO,EAAAyxI,EAAAxzI,GACA,IAAA4rO,EAAA5rO,wKCHA,IAAA6rO,EAAAr4F,EAAAxhI,OAAA,SAAAnJ,GAAA,OAAA9G,EAAA8G,EAAA9G,QAAA,GAAA8pO,EAAAlmO,OAAA,OAAAmmO,EAAAD,EAAAp7N,KAAA,SAAA+pN,EAAAC,GAAA,OAAAA,EAAA14N,MAAAy4N,EAAAz4N,QAAA,UAAArD,OAAA4sO,EAAA,EAAA5sO,CAAAotO,EAAApgO,MAAAkgO,GAIA,OAAAltO,OAAiB4sO,EAAA,EAAjB5sO,CAAiB80I,EAAA,GAAA9nI,MAAAkgO,sCCHjB,OAAA/uN,SAAAkvN,EAAA5uN,eAAA,MAEA,MAAAskC,IAAA/hD,KAAA+N,oECHA7E,EAAA,EAAA8/B,EAAA,OAAA9/B,EAAA,MAAA64C,IACuB74C,EADc8/B,EAAA,IACd,EAgBrB,MAEIH,EAEHxmC,EAAA,OACH0/C,EAAA,uBAYE,OAAA5kC,WAAAM,eAVFN,EAAAnd,KAAA+N,MAAA/N,KAAAwQ,IAAAtH,GAAAlJ,KAAA+oC,MAAA,mBAiBSplC,EAAAI,SAEL,gFAGFL,QAAAC,OAAA,MAAAC,IAAO,kBAAa,SAAAC,KAAAC,IAAAN,EAFnB,w2BAGQA,GAKR8oO,KAED,SAAA3oO,EAAAzI,EAAkBF,gBAGnBA,EAAAC,EAAAC,EAAA,sBAAAqxO,IAAAvxO,EAAAC,EAAAC,EAAA,sBAAAg0K,oBAEsBs9D,EAAaxxO,EAAAqhC,EAAAowM,GAGpCv9D,EAAAs9D,EAAA3qO,EAAA8B,OAAW,eAAQ,aAEhB4oO,EAAA,6OChE0C,IAAA/oO,EAAA,uEAGHC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,EADsC,0lNAErBG,EAAAI,QAAAP,GAMzDkpO,KAEI,SAAA/oO,EAA8CzI,EAAAF,gBAKlDA,EAAAC,EAAAC,EAAA,sBAAA8tF,IAcF,IAAA4+C,EAAA5sI,EAAA,QAAsBumE,EAAAvmE,EAAoB,QAA1C+2D,EAAA/2D,EAAAqhC,EAAAklC,iBAoBM,+BAIQ,EAAAy4B,SAAC73F,QACCN,EAAAqP,OAAApQ,KAAA8mI,EAAC,EAAA5tC,SACC73F,OANZ,SA2BqB,sDAEO,IACE,EAAA63F,aACgB,EAAcA,SAAA,CAAA73F,KAAA,GAAAktC,SAAA,+CAGtCosC,yCACEzpE,qDACSlR,KAAA6rO,QAAA,yCAIjB7rO,KAAAqB,KAAAukB,oCAONnlB,UACVorO,QAAA,SAAAhvM,GACH,OAAA78B,KAAAqB,KAAAoQ,UAAAorB,KAnECp8B,UAAe+9G,iBAAI,WACnB,aAAAv4G,IAAAnH,SAAAs+G,iBAAA,YAAAt+G,SAAAs+G,kBAHkB0uH,EAAArrO,UAAAwwK,mBAAA,WAwEH,OAAAjxK,KAAAw/E,UAAAsnD,EAAA,EAAAmiG,iBAAAniG,EAAA,EAAAilG,qMCvGuBC,EAAA9xO,EAAA,QAEb+xO,EAAA/xO,EAAAqhC,EAAAywM,KAMvB,CACJ72K,WAAG,uBACH/pD,QAAO,yBCVTsqD,SAAA,CAAAtqD,QAoGA,4CApG4CwqD,QAAA,CAAAxqD,QAAA,EAAA8gO,gBAAA,UAMiB7kD,EAAA,SAAAznL,sEAE7DY,EAAA,EAAA6mL,EAAAznL,mPAOGqC,EAAAlB,EAAAmB,cAAA+pO,EAAAlrO,EAAA,CAAAu0D,GAAAlpD,EAAA0pD,QAAA,IAAAq2K,cAAA,EAAAC,eAAA,YAAAC,GACU,OAAgBpqO,EAE3BlB,EAAAmB,cACAoqO,EAGA,6EAIQrkC,UAAA,CAAAC,gBAAA,CAAAxhE,SAAA,EAAAyhE,kBAAA,qBAAArmM,GACF,IAAAqoB,EAAAroB,EAAAqoB,IAAA2S,EAAAh7B,EAAAg7B,MAAAprB,EAAA5P,EAAoD4P,UAAnDs6B,EAAelqC,EAAEkqC,WAAAugM,EAAmCzqO,EAAAyqO,eACrD,OAAAtqO,EAAAlB,EAA4DmB,cAA3D,OAAAypC,aAAwBA,EAAAC,aAAoCA,EAAAzhB,MAAA2S,MAAAt8B,EAAA,KAAAs8B,EAAA0vM,EAAAh3K,EAAA62K,IAAApgM,iBAAAv6B,EAAA3P,UAAA,GAAA+pC,GAC7D7pC,EAAAlB,EAAAmB,cAAA,OAAAH,aAGA,iBAAA4P,KAEE1P,EAAAlB,EAAA0rO,eAAA96N,IAAA1P,EAAAlB,EAAAmrC,aAAAv6B,GACuC,mBAAdA,kCACgCo6B,EAAA,CAC5CC,WAAEA,EACnBt6B,UAAmBA,eAErBgsD,aAAA,CAEI6vE,eAAA,KApCqD,GAqCnD,gCAMLnzI,EAAAF,oBAGHusB,EAAUvsB,EAAA,QAIVo8B,EAAAp8B,EAAA,UAGIA,EAAkB,UACAA,EAAAqhC,EAAAqrK,OAGL,UAOX,iBACA1oM,OAAAo4B,EAAkB,OAAlBp4B,EAAkB,GAQxB,gBAPK,sBAED,SADD6gB,SAAA,EACC,WAEJ2tN,EAAA3tN,SAAA,KAGA2tN,KAmBE,SAAAptI,EAAAqtI,EAAAC,EAAA3sI,EAAAL,EAAAitI,aClGJ/qO,EAAA2kB,EAAA,EAAAvoB,OAAAo4B,EAAA,SAAAp4B,CAAA,OAAAq5G,EAAAz1G,EAAA,GAAAgrO,EAAAhrO,EAAA,GAAA+S,EAAA4R,EAkEA,EAAAvoB,OAAAo4B,EAAA,SAAAp4B,EAAA,MAAA6uO,EAAAl4N,EAAA,GAAAm4N,EAAAn4N,EAAA,+DAlE4Ce,EAAA6Q,EAAA,EAAAvoB,OAAAo4B,EAAA,SAAAp4B,EAAA,MAAA+uO,EAAAr3N,EAAA,GAAAs3N,EAAAt3N,EAAA,mBAgDtC,2BACA,OACDg3N,IAAAznO,OAAA,0DACDshB,EAAA,KAAAxD,EAAA,CAAA8wE,SAAA,IAGF9wE,IAEO6pN,EAAA97I,GAnD4E/tE,EAqD5EkqN,EAAA5rO,MArD4EklB,EAAA,OD8E/ExgB,OC9E+E,oBAExB,OAAAwgB,EAAA,EAAAzmB,KAAA,SAAA8B,GAEvD,OAAeA,EAAAN,OAErB,gBAAA89F,EAAA8tI,iBAAAnqN,EAAAg9E,WAUkB,2BANf6sI,EAAAxtI,EAAAiY,iBAMe,UAhBmE,IAAAt0F,IAwDjF2pN,IAIF1uO,OAAAo4B,EAAA,UAAAp4B,CAAA,mBAvCAuoB,EAAA,ODyDIxgB,OCzDJ,yGAIG,cACGnE,EAAA+iB,OAEA65J,EAAA3/J,UAQEiuN,GAAA,GACFE,GAA6B,kHCvCrCA,GAAA,GAAOG,EAAwCztI,IAC7C,CAAAA,IACE,CACA2X,gBAAIA,EACJu1H,mBAAUA,EACVptI,cAAO,kBAAAstI,GAAA,MAKU9yO,EAAAC,EAAAC,EAAA,sBAAA8kG,UAaf,SAAAI,EAAAM,EAAAK,SACEqtI,QAEI,EAAmBpvO,OAAOo4B,EAAK,SAAZp4B,EAAY,MAAAqvO,EAAAzrO,EAAA,GAAA0rO,EAAA1rO,EAAA,OACnB,EAAA5D,OAAAo4B,EAAA,SAAAp4B,CAAA,SAAA+8K,EAAApmK,EAAA,GAAA44N,EAAA54N,EAAA,GAOjBE,EAAS0R,EAA8B,EAAAvoB,OAAAo4B,EAAA,SAAAp4B,GAAA,GAAA0uO,EAAA73N,EAAA,GAAA0qF,EAAA1qF,EAAA,GACtCa,EAAI83N,EAAGpuI,EAAciuI,EAAAX,EAAA3sI,EAAAL,GAAA2X,EAAA3hG,EAAA2hG,gBAAAu1H,EAAAl3N,EAAAk3N,mBAAAptI,EAAA9pF,EAAA8pF,cCtC7B,sCDwCkBj5E,EAAA,OA1BJxgB,OA0BI,oBACd,OAAOwgB,EAAS,EAAAzmB,KAAA,SAAA8B,GACb,OAAOA,EAAAN,OACH,KAAE,EAER,OADS89F,EAAAquI,aAAA1tI,EACT,GAAAX,EAAAz2D,SAEE,KAAS,SAEP/mC,EAAA+iB,OACK00C,EAAAx4D,EAAAy4D,UAAA,OAAA8lC,EAAAxmC,YACC4lH,EAAS3/J,UACpB+tN,EAAAxtI,EAAAiY,iBACHk2H,EAAAnuI,EAAAxmC,8BCrDD,KAAuB0mC,cAAA+tI,EAEhBtyD,OAASA,EACV1jE,gBAAQA,EACV9X,gBAAiBA,gBACJC,mBAKN78F,EAAAzI,EAAAF,gBAMX,SAAC0zO,EAAAhlN,gLChBDmC,SAAA,CACA,CACAyN,QAAA,EACA18B,kGCHAA,KAAA,mBACAe,GAAA,sBAAA+rB,EAAAF,IACA7sB,KAAA,cACA8K,IAAAiiB,EAAAjiB,IAAA,gBAEA,CACA6xB,QAAA,EACA18B,KAAA,kBACAe,GAAA,mBAAA+rB,EAAAF,IACA7sB,KAAA,WACA8K,IAAAiiB,EAAAjiB,IAAA,eAKA,SAAAknO,EAAA14M,GACA,IAAAiL,EAAAwtM,EAAA,CACA/wO,GAAA,EACA6rB,IAAA,UACA9sB,MAAA,UACA+K,IAAA,MACAkf,SAAA,EACAxV,QAAA,IAGA,OADA+vB,EAAArV,SAAAoK,GAAAqD,QAAA,EACA,CACA4H,OACA8zB,KAAA9zB,EAAArV,SAAAoK,IFdGj7B,EAAAC,EAAAC,EAAA,sBAAAwzO,IAEU1zO,EAAAC,EAAAC,EAAA,sBAAAyzO,KEmBbC,KACA,SAAAjrO,EAAAzI,EAAAF,GAEA,aACAA,EAAAC,EAAAC,EAAA,sBAAA2zO,IACA,IAAA3vM,EAAAlkC,EAAA,QACAmkC,EAAAnkC,EAAAqhC,EAAA6C,GAEA,SAAA2vM,EAAA32I,GACA,OAAAA,IAAA/4D,EAAAt9B,EAAAipC,SAAAotD,GACAA,EAAAj4D,QACAi4D,EAAAj4D,QAEAi4D,EAAA5uF,MAAA4uF,EAAA5uF,KAAA22B,QACAi4D,EAAA5uF,KAAA22B,QAEAi4D,EAAAmpB,WACAnpB,EAAAmpB,WAGArkH,KAAAC,UAAAi7F,GAGAA,IAMA42I,KACA,SAAAnrO,EAAAI,GAEA,IAAAP,EAAA,qDAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,EADA,kvRAEAG,EAAAI,QAAAP,GAIAurO,KACA,SAAAprO,EAAAI,EAAA/I,GAEA,IAAAkH,EAAA,CACA8sO,mCAAA,OACAC,6DAAA,OACAC,uCAAA,OACAC,+CAAA,OACAC,4CAAA,OACAC,0CAAA,OACAC,2CAAA,OACAC,0CAAA,OACAC,sCAAA,OACAC,0CAAA,OACAC,uCAAA,OACAC,4CAAA,OACAC,uCAAA,OACAC,gDAAA,OACAC,8CAAA,OACAC,sDAAA,OACAC,uDAAA,OACAC,8CAAA,OACAC,oDAAA,OACAC,gEAAA,OACAC,wDAAA,OACAC,kEAAA,OACAC,gEAAA,OACAC,6DAAA,OACAC,2DAAA,OACAC,2DAAA,OACAC,wDAAA,OACAC,+DAAA,OACAC,qDAAA,OACAC,yDAAA,OACAC,iDAAA,OACAC,qDAAA,OACAC,0EAAA,OACAC,8DAAA,OACAC,4DAAA,OACAC,2DAAA,OACAC,sCAAA,OACAC,sCAAA,OACAC,0CAAA,OACAC,0CAAA,OACAC,6CAAA,OACAC,2CAAA,OACAC,kDAAA,OACAC,6CAAA,OACAC,oDAAA,OACAC,8CAAA,OACAC,+CAAA,OACAC,uDAAA,OACAC,2CAAA,OACAC,6CAAA,OACAC,6CAAA,iFAGAC,wBAAA,OACAC,wBAAA,OACAC,iCAAA,OACAC,iCAAA,OACAC,+BAAA,OACAC,sCAAA,OACAC,6DAAA,OACAC,+CAAA,OACAC,mEAAA,OACAC,uDAAA,OACAC,6DAAA,OACAC,gEAAA,OACAC,sEAAA,OACAC,8DAAA,OACAC,0DAAA,OACAC,8DAAA,OACAC,sEAAA,OACAC,6gBCnJAC,2DAAA,OACAC,iEAAA,OACAC,qDAAA,OACAC,gcCHAC,kDAAA,OACAC,wDAAA,OACAC,iEAAA,OACAC,qDAAA,OACAC,2DAAA,OACAC,iEAAA,OACAC,qDAAA,OACAC,2DAAA,OACAC,mEAAA,OACAC,uDAAA,OACAC,oEAAA,OACAC,wDAAA,OACAC,8DAAA,OACAC,8DAAA,OACAC,2DAAA,OACAC,wCAAA,OACAC,wCAAA,OACAC,uCAAA,OACAC,uCAAA,OACAC,yCAAA,OACAC,yCAAA,OACAC,iDAAA,OACAC,wCAAA,OACAC,yDAAA,OACAC,6CAAA,OACAC,+CAAA,OACAC,sCAAA,OACAC,oDAAA,OACAC,uDAAA,uDAEAC,yCAAA,uDAEAC,2CAAA,uDAEAC,4CAAA,kDAEAC,oCAAA,iDAEAC,mCAAA,QAIA,SAAA1zG,EAAA9e,cAEA,OAAAloH,EAAA2C,GAEA,SAAAskI,EAAA/e,GACA,IAAAloH,EAAAwgC,EAAAt5B,EAAAghH,GAAA,CACA,IAAA1pF,EAAA,IAAAtiB,MAAA,uBAAAgsG,EAAA,KAEA,MADA1pF,EAAA0vD,KAAA,mBACA1vD,cAIAwoG,EAAAh8H,KAAA,WACA,OAAAhH,OAAAgH,KAAA9D,IAEA8/H,EAAahnD,QAAAinD,EACbt+H,EAAAI,QAAAi+H,EACAA,EAAArkI,GAAA,aAKA,SAAAgG,EAAAI,GAEA,IAAAP,EAAA,6DAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,21KACAG,EAAAI,QAAAP,GAIAmyO,oBA+BA,SAAA9tO,eCXG4I,QAACC,KAAA,MDaJ,SAAAvI,kDAIAD,EAAAwW,OAAAxR,MAEA/E,EAAAyI,MAAAK,KAAAP,KAAA,SAAAvI,EAAAC,GAEA,IAAAqzB,EAAatzB,EAAAuzB,gBACbioB,EAAAz7C,EAAA+yB,MACA2oB,EAAA17C,EAAA+U,MAEA,SAAA24N,EAAAnyL,EAAAC,GAEA,IAMAmyL,EACAC,EAPA18N,EAAAxD,EAAAwD,OACAF,EAAAtD,EAAAuD,UACA0qC,EAAA,YAEAkyL,EAAA,EACAC,GAAA,0BAKAH,EAAA3tO,EAAAwW,OAAAC,WAAA,GAEAm3N,yBAAA5tO,EAAAwW,OAAAC,WAAA,GAEAk3N,GAGAC,EAAAD,EAAA3tO,EAAAwW,OAAAC,WAGAvW,EAAA6H,YAEA,QAAA/I,EAAAgS,EAAAhS,EAAAkS,EAAAnT,OAAAiB,GAAAgS,EAAA,CAEA,IAAAgiB,EAAA9hB,EAAAlS,EAAAgS,GACAiiB,EAAA/hB,EAAAlS,EAAAgS,EAAA,GACAkiB,EAAAhiB,EAAAlS,GACAm0B,EAAAjiB,EAAAlS,EAAA,GAEA,SAAAg0B,GAAA,MAAAE,EAAA,CAGA,GAAAD,GAAAE,GAAAF,EAAAyoB,EAAAn6C,IAAA,+CAIA0xB,EAAAyoB,EAAAn6C,SACA,GAAA4xB,GAAAF,GAAAE,EAAAuoB,EAAAn6C,IAAA,CACA,GAAA0xB,EAAAyoB,EAAAn6C,IAAA,mCAEA4xB,EAAAuoB,EAAAn6C,IAIA,GAAA0xB,GAAAE,GAAAF,EAAAyoB,EAAA76C,IAAA,CACA,GAAAsyB,EAAAuoB,EAAA76C,IAAA,SACAmyB,GAAA0oB,EAAA76C,IAAAoyB,IAAAE,EAAAF,IAAAC,EAAAF,kBAEA,GAAAG,GAAAF,GAAAE,EAAAuoB,EAAA76C,IAAA,CACA,GAAAoyB,EAAAyoB,EAAA76C,IAAA,SACAqyB,GAAAwoB,EAAA76C,IAAAoyB,IAAAE,EAAAF,IAAAC,EAAAF,KACAG,EAAAuoB,EAAA76C,IAIA,GAAAmyB,GAAAE,GAAAF,EAAAyoB,EAAAl6C,IAAA,CACA,GAAA2xB,EAAAuoB,EAAAl6C,IAAA,SACA0xB,GAAAwoB,EAAAl6C,IAAAyxB,IAAAE,EAAAF,IAAAG,EAAAF,kBAEA,GAAAC,GAAAF,GAAAE,EAAAuoB,EAAAl6C,IAAA,CACA,GAAAyxB,EAAAyoB,EAAAl6C,IAAA,SACA4xB,GAAAsoB,EAAAl6C,IAAAyxB,IAAAE,EAAAF,IAAAG,EAAAF,+BAMA,GAAAC,EAAAuoB,EAAA56C,IAAA,SACAoyB,GAAAwoB,EAAA56C,IAAAmyB,IAAAE,EAAAF,IAAAG,EAAAF,kBAEA,GAAAC,GAAAF,GAAAE,EAAAuoB,EAAA56C,IAAA,CACA,GAAAmyB,EAAAyoB,EAAA56C,IAAA,SACAsyB,GAAAsoB,EAAA56C,IAAAmyB,IAAAE,EAAAF,IAAAG,EAAAF,KACAC,EAAAuoB,EAAA56C,IAGAmyB,GAAA2oB,GAAA1oB,GAAA2oB,GACA17C,EAAAg7C,OAAAO,EAAA/mB,IAAA1B,GAAAuoB,EAAAG,EAAAhnB,IAAAzB,GAAAuoB,GAGA,MAAAuyL,EAAAtyL,EAAA/mB,IAAA1B,GAAAuoB,eAEAyyL,EAAAvyL,EAAA/mB,IAAAxB,GAAAqoB,EACA0yL,EAAAvyL,EAAAhnB,IAAAvB,GAAAqoB,EA2BK,OAEL0yL,EAAAC,EACGN,EAAA,EAAAA,mGExOHC,KACAD,EAAAK,EAAAE,UACAL,GAAAG,iDF2MA,SAAAC,EAAAE,4DAKO,OACPC,OAAAN,EAAAD,aAEK3jG,SAAAzuI,EACLyyO,UAAAC,EAAA1yO,GAGA,eAEA,OACA2yO,QAHAN,EAAAD,EAAA,MAGAj2O,KAAA80N,KAAA90N,KAAA8oC,IAAAytM,EAAA,MAAAv2O,KAAA8oC,KAAAqtM,EAAAM,IAAAP,EAAAD,GAAA,KACAS,OAAAC,EAAA32O,KAAA80N,KAAA90N,KAAA8oC,IAAAytM,EAAA,GAAAv2O,KAAA8oC,IAAAytM,EAAA,MAAAv2O,KAAA8oC,KAAAqtM,EAAAM,IAAAP,EAAAD,GAAA,KACA3jG,SAAAikG,EACAD,UAAA,IG9NAluO,EAAAiI,iSFAoCjI,EAAAqG,UAAAxE,EACa7B,EAAAkG,YAAApG,EAAA8D,MAkBjD/B,EAAA,UAGqC7B,EAAAuC,uBAwEjC,QACA,CAEF+T,OAAA,OACE,EACAjQ,UAAA,EAEFkQ,WAAA,4BAME,QDLJ,kBCxDKhb,EAAAI,OAGHP,EAAA,mFACOG,OAAA,MAAeC,IAAA,2BAAAC,KAAAC,IAAAN,EADtB,mlSAGEA,GAIDozO,KAED,SAAAjzO,EAAAI,4FAIM,MAAUH,IAAM,kBAAG,SAAAC,KAAAC,IAAAN,u1CACpBA,QAMJ,SAAAG,EAAAzI,EAAAF,gBAqDGA,EAAAC,EAAAC,EAAA,IAAC,kBAAAkiE,IAQC,IGhIN/hD,EHgIM/Z,EAAAtG,EAAA,QACAuI,EAAAvI,EAAA,QACa+H,EAEb/H,EAA4BqhC,EAAA94B,GASjCszO,EAAA77O,EAAA,QAxHM87O,EAA+B97O,EAAAqhC,EAAAw6M,GACrBE,EAAA/7O,EAAA,QACEg8O,EAAGh8O,EAAAqhC,EAAA06M,GACJE,EAAKj8O,EAAA,QACPk8O,EAAQl8O,EAAAqhC,EAAA46M,GACtBE,EAA8Bn8O,EAAA,+DILhC,6dAxB+C,OAAA4F,EAAAw2O,YAAA,iBAAAx2O,EAAAD,MAAA02O,kBAAAC,IAEjD12O,EAAY22O,sBAAW,SAAAD,GACrB,OAAA12O,EAAA42O,YAAA,mBAAsCF,IAD5B12O,EAAW62O,oBAAA,SAGtBH,GAYK,OAAA12O,EAAqB42O,YAAC,iBAA+BF,IAEzD12O,EAAS82O,WAAY,SAAAJ,GACpB,OAAAv0O,EAAAlB,EAAAmB,cAAA,MAAA1B,EAAA,KAAAg2O,EAAA,CAAAz0O,UAAA,WAGGjC,EAAEqqB,IAAAloB,EAA+BlB,EAAA46F,YAC5B77F,EDzBX,gBC8BOw8D,EAAS77D,UAAgBo2O,aAAA,WAAhC,IAAA1sN,EAAAnqB,KAOCmqB,IAAApL,QANQgzH,EAAM/xI,KAAQH,MAAAkyI,qFACb/xI,2IAOHs8D,EAAS77D,UAAkBq2O,iBAAA,WAAlC,GAAA92O,KAAAmqB,KAQCnqB,KAAAmqB,IAAApL,QAAA,CAPQ,IAAAkxE,EAAOjwF,KAAUmqB,IAAApL,iCAGtBte,UAAAy7D,mBAAM,kCAENz7D,UAASoB,OAAA,wUAEZ26D,gBAAAqjH,gBAAAk3D,sBAAA/2O,KAAA+2O,sBAAAC,oBAAAh3O,KAAAg3O,oBAAAP,sBAAAz2O,KAAAy2O,sBAAAE,oBAAA32O,KAAA22O,oBAAAC,WAAA52O,KAAA42O,YAAA7rN,gJD/CDyxC,cAAA,QAAAF,GACA75D,EAAA,YAUEw0O,cACSp0O,EAAKzI,EAAgBF,gBAGNA,EAAmBC,EAAIC,EAAQ,sBAAA+vC,IAC9BjwC,EAAKC,EAAiBC,EAAC,sBAAA88O,IAEvBh9O,EAAoBC,EAAAC,EAAU,sBAAA+8O,IAEjCj9O,EAAEC,EAAAC,EAAA,sBAAAg9O,IAClB,MAAQ52O,EAAoBtG,EAAA,QAC7BstE,EAAAttE,EAAA,uBAOqB,iBAAC,sBACtB,iDACJiwC,EAAA,SAEDktM,EAAmB,SAAAC,GAAA,OAEnBvjO,KAAAo2B,EAAcotM,iBACf9sM,QAAA6sM,iiBEnCsB,gBADkBzsM,EAAAssM,KAClB,0BA6Bdt0O,EAAAzI,EAAkBF,yBAOvBkrE,EAAM5wD,EAAayI,OAGnB2nN,KAFA3nN,GAAK,IAED2nN,WAAQ,MACL3nN,EAAMu6N,UAAA,IACZ,EAEDC,EAAO,GAgCT,gBA/BIjnN,EAAMl0B,EAAQqsC,eACZrsC,GAAOi3D,QAAA,SAAAjtD,SACDhK,EAAOgK,KACN2W,EAAMy6N,MAAGxjN,MAAAvuB,QAAApE,KAEC,oBADfrD,OAAOuC,UAASoF,SAAA9F,KAAAwB,KAEhBonC,EAAYA,EAACi8L,EAASt+N,IAK1B,GAJG2W,EAACu6N,WACDA,EAAAG,EAAA,IAGHC,GAAaC,GAAA35O,OAAAgH,KAAA3D,GAAA4D,QAAAwyO,EAAAH,EAEhB,QADIG,EACJnnN,EAAAjvB,EAAAu2O,GAGOL,EAAAK,GAAEv2O,OAIJ,MAWLk2O,IA3CI1uO,EAAA3O,4EC/BkE,IAAAqsB,EAAAvsB,EAAA,QAkBzEo8B,EAAAp8B,EAAA,QAA6BwW,EAAAxW,EAAAqhC,EAAAjF,KAmB3Bp8B,EAAgB,YAIP,UACAA,EAAcqhC,EAAAsuC,OAGd,UAGL3vE,EAAK,UAWqB,SAAW0F,YAGzCm4O,EAAAl4O,OACEC,EAAKF,EAASG,KAAEC,KAAAH,IAAYG,YAC9BF,EAAEG,MAAA,CAAAC,WAAA,GAEFJ,EAAAK,OAAQL,EAAGK,OAAOC,KAAyBN,0FANzC,EAAAi4O,EAAAn4O,eAQAO,OAA6C,SAAAO,oFAE7C,2EA5CD,IAAAuR,EAAA9Q,EAAA8Q,MAAA7Q,IAAA,SAAA+Q,GAED,OACStV,GAAAsV,EAAAtV,GACG0E,MAAC4Q,EAAAtV,GACD2E,MAAC2Q,EAAAnN,KACHA,KAAAmN,EAAAnN,KACNtD,OAAYyQ,EAAAxQ,aAwCd,OADF7B,EAAAe,SAAA,CAAAX,WAAA,IACU+R,OAGNxR,UAAKoB,OAAA,iBACH7B,KAAAH,MAAYmC,EAAYF,EAAKE,WAAAD,EAAAD,EAAAC,UAChC7B,EAAAF,KAAAC,MAAAC,UACD,OAAOwQ,EAAK3P,EAAAmB,cAAA,OAAAH,UAAA,eACb2O,EAAA3P,EAAAmB,cAAA3E,EAAA,aAAA2C,YAAAkC,gBAAA,EAAAC,YAAArC,KAAAK,gBAAAiC,SAAAN,EAAAD,YAAAQ,YAAA,gBAAAC,iBAAA,uCAGSu1O,EAxBoB,GAyBf,eAKT,UAkBU,SAAAn4O,cAIFC,SAIHD,EAAOG,KAAKC,KAAKH,IAAAG,4BAEd,SAAA+Z,SAIJA,EAAAvF,OAAAjT,qBASAk8B,EAAA,EAAA8wB,YACE,EAAAD,KAQXxuD,EAAAe,SAAA,CAAAkT,OAAAzS,OAAA,EAAA07B,OAAA,EAAAH,UAAA52B,IAxHM,MACL,KAAAw3B,EAA0B,EAAAgxB,OAC1B3uD,EAAAe,SAAA,CAAAkT,OAAAzS,OAAA,EAAA07B,OAAA,EAAAH,KAAAY,EAAA,EAAAgxB,SAuHJ,MA1H6B,KAAShxB,EA0HrC,EAAA+wB,OAEc1uD,EAAAe,SAAA,CAAAkT,OAAAzS,OAAA,EAAA07B,OAAA,EAAAH,KAAAY,EAAA,EAAA+wB,uHChJf1uD,EAAAe,SAAA,CAAAm8B,OAAA7qB,IAAA+hB,MAAAvuB,QAAAwM,KAAAtV,GAAA,KAEAiD,EAAAo9B,oBAAA,SAAAS,GACA79B,EAAAe,gJCHA,6BAAAb,KAAAH,MAAAm4O,gBAAAh4O,KAAAC,QACA,cACA6B,EAAA+iB,iFC4CA,SHiEyB,EAAAozN,EAAKr4O,GG9G9Bq4O,EAAAx3O,UAAAy3O,cAAA,WACA,OACA52O,OAAA,EACS07B,OAAA,EACTjpB,KAAA0pB,EAAA,EAAA6wB,2BAIA2pL,EAAAx3O,UAAAozB,QAAA,WACA,OAAA7zB,KAAAC,MAAA8T,MACA,KAAA0pB,EAAA,EAAA6wB,KACA,OAAAtuD,KAAAC,MAAA+8B,OAAA,gBAEA,OAAAh9B,KAAAC,MAAAqB,OAAA,EAEA,UAEA22O,EAAAx3O,UAAAoB,OAAA,WACA,IAAAs2O,EAAAn4O,KAAAH,MAAAs4O,SACA/nM,EAAApwC,KAAAC,MAEA4zB,EAAA7zB,KAAA6zB,UACA,OAAAnjB,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,2BACA2O,EAAA3P,EAAAmB,cAAA,UAAAH,UAAA,sCAAAs0B,QAAA8hN,GACAznO,EAAA3P,EAAAmB,cAAA,KAAAH,UAAA,iBACA2O,EAAA3P,EAAAmB,cAAA,QAAA8C,KAAA,gBAAA0tN,SAAA1yN,KAAA0yN,UACAhiN,EAAA3P,EAAAmB,cAAA,gCACAwO,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,kBACmB2O,EAAS3P,EAAAmB,cAAA,OAAAH,UAAA,WAC5B2O,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,0BACA2O,EAAA3P,EAAAmB,cAAA,UAAAH,UAAA,6BAAAR,MAAA6uC,EAAAr8B,KAAAzR,SAAAtC,KAAAo4O,eAAA36M,EAAA,EAAAr8B,IAAA,SAAA6hB,EAAAqO,GACA,OAAA5gB,EAAA3P,EAAAmB,cAAA,UAAAoE,IAAAgrB,EAAA/vB,MAAA0hB,EAAA1hB,OAAA0hB,EAAApnB,WAEAu0C,EAAAr8B,OAAA0pB,EAAA,EAAA8wB,KAAA79C,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,WACA2O,EAAA3P,EAAAmB,cAAAvC,EAAA,GAAAqC,WAAAhC,KAAAq4O,eAAAt2O,UAdA,kBAcA,KACAquC,EAAAr8B,OAAA0pB,EAAA,EAAA6wB,KAAA59C,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,WACA2O,EAAA3P,EAAAmB,cAAAo2O,EAAA,CAAAt2O,WAAAhC,KAAAu4O,eAAAx2O,UAhBA,kBAgBA,KACA2O,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,4JAEA2O,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,WACA2O,EAAA3P,EAAAmB,cAAA,UAAAs2O,wBAAA,EAAAz2O,UAAA,kBAAAgS,KAAA,SAAAqiB,UAAAvC,GAAA,aAEAokN,EAAAv6K,aAAA,CACA+6K,sBAAA,GAEAR,EH+DkB,CG9DlB3hN,EAAA,WACAl8B,EAAA,KAKAs+O,KACA,SAAA71O,EAAAI,GAEA,IAAAP,EAAA,yDAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,EADA,uyBAEAG,EAAAI,QAAAP,GAIAi2O,KACA,SAAA91O,EAAAI,GAEA,IAAAP,EAAA,wEAEAC,OAAAC,QAAAC,OAAA,MAAAC,IAAA,2BAAAC,KAAAC,IAAAN,EADA,0tIAEAG,EAAAI,QAAAP,GAIAk2O,KACA,SAAA/1O,EAAAI,IAEA,SAAA8D,kCAOA,SAAAM,GAGA,IAAAwxO,EAAA,QAEAC,EAAkB,GA6BlB,SAAAC,EAAAC,kBAEAC,EAAA,GACA,GAAAC,EAAA,EAEA,QAAA9yO,EAAA,EAAAA,EAAA8yO,EAAA9yO,IACA,GAAA4yO,EAAA5yO,GAAAs4I,aAAA,CACK,IAAAy6F,EAAA,EACJC,EAAA,2OCrHW,OAAAH,ECPZ5xO,EAAAyI,MAAA4rC,eAAA9rC,KF0FA,SAAAvI,EAAAD,EAAAoB,EAAAsM,GAKA,GAJA8Z,IACAA,GAAA,EACAkqN,EAAAC,EAAA1xO,EAAAK,YAEA,GAAAN,EAAAs3I,aAAA,CACA,IAAAr4C,EAAA79F,EAAArD,OACAiC,EAAA6hL,SAAA,GACA,IAAAkwD,EAAA,EACAC,EAAA,EACAhyO,EAAAyR,MAAAzR,EAAAyR,KAAAD,aAAA,IAAAxR,EAAAyR,KAAAD,aACAugO,EAAA,EACAC,EAAA,GAEA,QAAArqO,EAAA,EAAAA,EAAAs3F,EAAAt3F,IAAA,CACK,IAAAmhB,EAAA4oN,EAAAtwO,EAAAuG,GAAAoqO,GAAA,IACLjpN,EAAA,EACA9oB,EAAA6hL,SAAAr5K,KAAA,IAAApH,EAAAuG,GAAAqqO,GAAAlpN,GAEA9oB,EAAA6hL,SAAAr5K,KAAA,OE5GAvI,EAAAyI,MAAAyH,kBAAA3H,KDQE,SAAAvI,EAAA5B,EAAAqP,GACA,GAAArP,EAAAi5I,aAAA,CACA9vH,IAJUkqN,EAAAC,EAAA1xO,EAAiBK,YAQ1B,IAAA2xO,EAAkB,GAGlBF,EAAA,EACFC,EAAC,EAEW3zO,EAAAoT,MAAApT,EAAAoT,KAAoBD,aAAyB,IAAxBnT,EAAwBoT,KAAAD,aACxDugO,EAAO,IACD,GAGN,QAAA/yO,EAAA,EAAAA,EAAA0O,EAAAwD,OAAAnT,OAAAiB,GAAA,EAaCyyO,EAAU/jO,EAAAwD,OAAAlS,EAAA+yO,MACTN,EAAQ/jO,EAAAwD,OAAAlS,EAAA+yO,IAAA,KAEA/yO,EAAA+yO,GAAArkO,EAAEwD,OAAAlS,EAAA+yO,KACR/yO,EAAOgzO,GAAAtkO,EAAAwD,OAAAlS,EAAAgzO,GAAAP,EACF/jO,EACHwD,OAASlS,EAAA+yO,MACT/yO,EAAI,GAAAyyO,EACJ/jO,EAAAwD,OAAAlS,EAAA+yO,IACJN,EAAC/jO,EAAAwD,OAAAlS,EAAA+yO,KAAArkO,EAAAwD,OAAAlS,EAAAgzO,GAGDN,EAAQO,EAAAjzO,EAAA+yO,GAAA,OACRE,EAAQjzO,EAAAgzO,GAAoC,IAAZC,EAAAjzO,EAAYgzO,GAAAN,EAAAO,EAAAjzO,EAAA+yO,GAAA,IAC5CE,EAAAjzO,EAAA,OAAAizO,EAAAjzO,EAAA,GAAA0yO,EAAAO,EAAAjzO,EAAA+yO,GAAA,gDDuBJ,CACA/xO,OAAA,yDAFA,qNG5E8BkyO,EAAA,8BACPA,EAAA,oBACAA,EAAA,eACuBA,MAAA,KAGF,IAAAC,IAAAz3O,EAAA,IAE5Cw3O,EAAAE,SAAA,UAuCE13O,EAAAw3O,EAAgBG,eAAA,gBAChB33O,EAAAw3O,EAAAI,UAAoB,cAUnB3+C,OAAA,aAVwC,SAAA4+C,SA/BzC,IACEA,OACAJ,EAAgBI,OAGV,WACN,UACA,MAGOz7O,OAAAknG,EAAkD,EAAlDlnG,CAAkD83D,aACzD,QACA4jL,EAAmC,SACnC,SAAS35O,EAAAo2D,SACPA,EAAQ5rB,QAAA86D,EAAAzjG,EAAAyjG,UAAAs0I,EAAA/3O,EAAA+3O,YAUTr5O,EAAA,KAAAP,EAAA,CAAAslG,YACDs0I,sBA8CF,QACED,EAAkB,SAClB,WAAa,OAAA5jL,6BAjCRnzD,EAAAI,OAGDP,EAAA,4xEACEtI,EAAgBF,+FAMxB0I,EAAA1I,EAAA,UAC2BA,EAAWqhC,EAAA34B,KAG/B1I,EAAoB,UACNA,EAAAqhC,EAAAsuC,GAIrBC,EAAA5vE,EAAA,UAC2BA,EAAkBqhC,EAAAuuC,KAGtC5vE,EAAoB,UAIpBA,EAAQ,QAgBf4/O,EAAC,oBAIKC,EAAU70N,EAAAf,OACZrkB,EAAAE,UACAklB,OAAOA,OACRf,gBACDnkB,KAAKg6O,mBAAqB,CACtBh1O,KAAM,GACN2f,WAAQ,KACRy4M,UAAW,uBAChBxmB,QAAA,EAEDqjC,OAAA,EACQlvK,MAAK,GAEX/qE,KAAKk6O,aAAU,CAChBt+O,MAAA,mDAEDo0H,WAAA,yBACME,YAAC,uBACNK,QAAA,CACH70B,OAAA,quBC3HuB57F,EAAAi7B,KAAA,MAEPj7B,EAAAg1G,SAGd5vF,EAAAsrD,KAAAxwE,KACMA,KAAA3E,UAAS6pB,EAAA7pB,UAET2E,KAAA+6B,KAAU,OAChB/6B,KAAQyuC,YAAAtqB,EAAMkuJ,uBACZryK,KAAI+oH,YAAW/oH,KAAS3E,UAAM0tH,YAAC5lG,UAC7B2xF,aACA37B,cAAOn5E,KAAAm5E,cAAO/4E,KAAYJ,eD2FNomB,QAAA,UAAO,mBCzFxB3lB,UAAA05O,kBAAA,kBACJ1zN,EAAA,EAAAzmB,UAAA,wBAAMo6O,EACLt6O,EAAOE,KACR,OAAAymB,EAAA,EAAAzmB,KAAA,SAAA8B,GACA,OAAAA,EAAAN,OAEK,OAAC,MAAO,CAAC,EAAaxB,KAAKmkB,cAAAljB,IAAAjB,KAAAq6O,kBAAA11N,aACtB,cACdy1N,EAAAt4O,EAAA+iB,OAEqB7kB,KAA4BklB,OAAA4C,OAAA,WAC1BhoB,EAAKw6O,kBAAcF,cCvBpBL,EAAAt5O,UAAA4vD,KAAA,SAAAswK,GAEvB3gO,KAAaq6O,kBAAA1Z,EACU3gO,KAAAq6O,kBAAAJ,OAAAj6O,KAAAq6O,kBAAAJ,QAAA,EACuBj6O,KAAAu6O,cAAA,EAE9Cv6O,KAAAm6O,oBACuDn6O,KAAA+6B,KAAA,OAUvDjU,IAAA,eAAAo5B,UAME65L,EAAAt5O,UACUq0G,MAEA,WAFA90G,KAAAq6O,kBAAApzN,EAAelmB,EAAAkW,KAAAjX,KAAAg6O,oBACfh6O,KAAAq6O,kBAAa11N,WAAA3kB,KAAAyuC,YAAA,GAAAzpC,KACbhF,KAAAu6O,cAAa,EACbv6O,KAAAm6O,qBAEPJ,EAACt5O,UAAAolJ,OAAA,WAEJ7lJ,KAAA80G,QACE90G,KAAA+6B,KAAA,UAEAt6B,UAAA+5O,WAAmC,WACnCx6O,KAAA+6B,KAAY,QAGdg/M,EAAAt5O,UAAA8wJ,KAAA,SAAA70J,EAAAo3K,GAEEntJ,EAAK5lB,EAAAwwJ,KAAAvxJ,KAAqB+oH,YAAKrsH,IAAAo3K,IAEjCimE,EAACt5O,UAAAqF,IAAA,WAED6gB,EAAA5lB,EAAA6J,KAAc5K,KAAd+oH,YAA2B,CAAA/jH,KAAAhF,KAAAq6O,kBAAAr1O,OACzBirE,EAAc,EAAAt0E,KAAA,sFAGVotH,YAAAn5G,KAAA5P,KAAAq6O,wBACAvlI,aAEA/5E,KAAA,YACA1/B,UAAWkqB,8BAEA9kB,UAAWg6O,iBAAgB,SAAK9Z,SACvCh6M,EAAY5lB,EAAA+F,QAAY9G,KAAA+oH,YAAiB43G,oBAC1C5jO,OAAAL,EAAA,kBACM6oB,6BAGK9kB,UAAA04E,cAAiB,SAAawoE,QAE5C04F,kBAAAjd,UAAAz7E,KFoCL,cEHUrgI,SACR,gBAAAA,EAAAutH,YA5BK,EAAA1lH,WAAA,wBAAA2wN,SA2CiC,wBAI5BhsK,EAAU3pD,EAAAxjB,EAAAslE,QACnB5gD,WAAKA,iBAEJlB,qBAEDxjB,WAAcA,0BAPVylB,QAAgB,6DAUd3lB,UAAAoP,KAAoB,SAAKxU,QAE/Bq/O,uBAGMlhO,GAAA,UAAAxZ,KAAA06O,mBAAkCt6O,KAAAJ,oBAEzB06O,mBAAK,yCACO,6BACP,6BACD,QAEbj6O,UAAAokJ,eAAA,SAAA39I,SACDlH,iBACC8tE,OACA,CAAA9tE,KAAI26O,qBAAoBzzO,GAAAlH,KAAA46O,eAAA1zO,mBACtB2qB,OAEFk3F,EAAApiG,EAAmB5lB,EAAAwwM,YAAA1/K,EAAA,kCArEjBk3F,SACL,KAEGpiG,EAAY5lB,EAAA6sI,UAAS7kB,EAAgB,QAChCpiG,EAAC5lB,EAAA6yF,QAAA52F,EAAA,kBACT2pB,EAAA5lB,EAAAK,IAAAy5O,EAAA,SAAAC,GACN,OAAAA,EAAA31O,OAAA,IAAAwhB,EAAA5lB,EAAAqwF,MAAA0pJ,EAAAC,GAGMp0N,EAAoB5lB,EAAE6J,KAAAkwO,EAAA,SAAAx5N,GACzB,MAAwB,gBAAbA,EAAIutH,YAKRloH,EAAe5lB,EAAEi6O,KAAAF,OAIxBn0N,EAAe5lB,EAAA0mC,OAASwzM,EAAAj+O,EAAA,KAoDpB+rH,EACFpiG,EAAA5lB,EAAAyQ,OAAAu3G,EAAA,SAAAn6G,uFACH+X,EAAA5lB,EAAA6J,KAAAinB,EAAA,IAAA0Q,QAAAr7B,EAAA5L,MAAAuB,0BAIF,qEAFKqZ,QAACxG,IAAA,4BAAuC0nF,GAC5Ct3F,EAAOulB,WAAKG,SAAA,cAAyB,2BAAA4xE,EAAAj4D,SAAAi4D,IACtC,QAIY32F,UAACm6O,eAAgB,SAAoB1zO,GACjD,OAAAA,EAAA7L,UAAAwB,GAKAqK,EAAA5L,QAAA4L,EAAA5L,MAAAG,MAEDuE,KAAA8tE,GAAAG,KAAA,IAEoB,QAAZ/mE,EAAAiY,MAAYhhB,IAAAK,GAEPwB,KAAC8tE,GAAAG,KAAW,IAGzBjuE,KAAAk7O,4CAEEl7O,KAAAk7O,mBAAAl7O,KAA2BW,WAAAM,IAAA,oCACvBs8B,YAAWr2B,EAAA7L,UAAcwB,KAE3BmD,KAAOk7O,oBAjBXl7O,KAAA8tE,GAAAG,KAAA,sDAoBE5nD,EAAmBvkB,IAAR9B,OACJkH,EAAS7L,kBACd8/O,gCACDn7O,KAAAm7O,8GAED,GAAOxa,EAAQjmH,aAChB,OAAAn5G,MAAAq9N,EAAAwc,qBAAAza,IAAAjmH,eACF,IAAA2gI,EAAAzc,EAAAz6M,cAAAljB,IAAA0/N,EAAAh8M,sBAEDm2D,EAAAlrE,KAAAyrO,iGC1L2Cn6O,KAAA,SAAA2wB,GAgBlC,OAVTx2B,EAAAmlN,WAQkBmgB,EAAAjmH,aAAAzzF,EAAAlmB,EAAAkW,KAAA4a,IAEH/xB,EAAUs7O,qBAAqBza,EAAG9uM,OAIzC+sM,EAAO5+N,KACX,IACE,IAAK,IAAA6U,EAAM4R,EAA+B,EAACprB,EAAM0tH,YAAS5lG,MAAApO,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CAC3D,IAEIsmO,EAAernM,EAFnBl/B,EAAAxT,OAGF,oBAAA+5O,EAED,OAAAA,EAAI/5O,aAEAi6E,GAAOn1D,EAAA,CAAAgP,MAAAmmD,WAGH,IACIzmE,IAAOA,EAAAE,OAAcnT,EAAC+S,EAAO4mE,SAAG35E,EAAA/B,KAAA8U,GAGtC,QAAU,GAAAwR,EAAQ,MAAEA,EAAAgP,mBAGtByvH,mBAAqB9kJ,KAAG8tE,GAAAqN,IAAUogK,iCACpBv7O,KAAgB8tE,GAAAqN,IAAAL,QAC5BqgK,4BAEH16O,UAAA+6O,oBAAA,SAAA7a,UAED3gO,KAAIm7O,yBAAc,KAChBn7O,KAAKW,WAAc0oE,KAAA,mBAAAs3J,MAEhBlgO,UAAKg7O,sBAAA,SAAA9a,wCACkB,UACtBhgO,WAAaqC,IAAA,oBAAA29N,EAAA9jO,GAAA8jO,MAEdlgO,UAAMi7O,sBAAA,SAAA/a,iCACiB,WACjB,oBAAQA,EAAA9jO,UACZmD,KAAAW,WAAA+3D,OAAAijL,MACAl7O,UAAA26O,qBAAA,SAAAza,EAAA9uM,OACLzG,EAAKtpB,IAGI44G,uBACAzzF,EAAQlmB,EAAAkW,KAAA0pN,IACbjmH,qBAGA,IAAIr/B,EAAS50D,EAAA,EAAAoL,GAAAypD,EAAAD,EAAArmE,QAAAsmE,EAAArmE,KAAAqmE,EAAAD,EAAArmE,OAAA,CACZ,IAAApG,EAAA0sE,EAAA/5E,MACNqN,EAAAq8D,OAAA01J,EACF/xN,EAAAgtO,SAAAhtO,EAAAghI,SAAAhhI,EAAA4E,OAAA5E,EAAAghI,SAGC,MAAOh0D,GAAKxwD,EAAA,CAAAiK,MAAcumD,eAGjBN,IAAiBA,EAAGrmE,OAAAnT,EAAAu5E,EAAAI,SAAA35E,EAAA/B,KAAAs7E,GAEzB,WAAAjwD,EAAA,MAAAA,EAAAiK,cAEAxD,GAECgqN,ED+BkC,GC7B3CptK,EAAC,EAAAqN,QAAA,iBAAAggK,OAGCn2N,EAAIzrB,EAAa,UAGhBA,EAAA,QAMD6hP,EAAO,oBAGLC,EAAkB33F,GAClBrkJ,KAAAqkJ,eAAoBA,EACpBrkJ,KAAAshB,MAAWihB,QAAEviC,KAAA4rI,UAAAtwI,MAAAuB,GACbmD,KAAKshB,MAAEic,YAAAv9B,KAAA4rI,UAAAvwI,UAAAwB,QAELykB,MAAO9N,KAAGyoO,EAAAj8O,KAAAshB,MAAA9N,MACVxT,KAAKshB,MAAKs6N,WACX57O,KAAAshB,MAAAsuH,QAAAqsG,EAAAj8O,KAAAshB,MAAAsuH,UAEJ5vI,KAAAk8O,aAAAl8O,KAAA4rI,UAAAvwI,UAAA2tC,WAAAhpC,KAAAshB,MAAA9N,eAVe4S,QAAA,gKClGO+1N,EAAAvsG,QAAA5vI,KAAAshB,MAAAsuH,QAAA3+F,UACYkrM,EAAAvsG,QAAAusG,EAAA3oO,MAQd0C,QAAAxG,IAAA,gBASgCysO,EAAAt/O,GAEnDmD,KAAAqkJ,eACOo3F,sBAAaU,GACbj7O,KAAA,WACApB,EAAS8rI,UAAUloG,UACzB5jC,EAAAysF,UAGM6sB,MAAU,WAChBt5G,EAAA8rI,UAAAloG,UAED5jC,EAAAysF,UAIIvsF,KAAKqkJ,eACNm3F,oBAAAW,GAEDj7O,KAAc,WACTpB,EAAM8rI,UAAaloG,UACnB5jC,EAAMysF,UAGJ6sB,MAAM,WACPt5G,EAAM8rI,UAASloG,UACpB5jC,EAAAysF,cAMS9rF,UAASi4D,OAAA,WACnB,IAAI54D,EAACE,KACN,OAAAA,KAAAqkJ,eAEDq3F,sBAAA17O,KAAashB,OACNpgB,KAAK,WACRpB,EAAA8rI,UAAOloG,UACR5jC,EAAAysF,UAGC6sB,MAAA,aACEwyB,UAAOloG,YACP6oD,aDkCC,cC5BSpsE,SACXwG,EAAA5lB,EAAAqb,SAAA+D,GAAA,KACDw9F,EAAAh/F,OAAYwB,iBACL5iB,EAAE,UAAAogH,UAGRx9F,IAkBK,EAAGkuD,UAAO,yCAbf,eACD0tK,oBACS,eACP,mBACA,mEACD,CACDnwG,UAAA,IAEEtqH,MAAK,IACPirE,MAAI,gBAOa,UACAryF,EAAUqhC,EAAA8gE,KAG1BniG,EAAA,UAK0B,sBACrB0xI,kBACDA,WAEJnrI,UAAAqrI,aAAA,gBACFxqH,MAAA,UAAM86N,YAAA,OACLxwG,UAAA/pI,YAEEpB,UAAaorI,aAAe,4BAE5B,KAEAprI,UAAWo6I,WAAU,SAAA17H,QACrBmC,aAEAA,MAAS,cACPic,YAAiBv9B,KAAK4rI,UAAQvwI,UAASwB,cACvC0lC,QAASviC,KAAA4rI,UAAAtwI,MAAAuB,oBAIHsiB,EAAK/gB,0BACJ,4BAEL+gB,EAAa3gB,cACbo9O,UAAA,QAELhwG,UAAA/pI,YAGGpB,UAAUgrI,UAAW,SAAanqH,EAAA0oD,GACxChqE,KAAAshB,QAEAthB,KAAM4rI,UAAA/pI,YAENpB,UAAiBo9I,cAAkB,SAAG90B,EAAmB6jE,GACzD,GAAA5sL,KAAAshB,OAAuC,IAArBynG,EAAA5jH,OAAlB,KCpFGnI,EDwFD6yB,EAAM,CACNwsN,YAAY,CACZnxO,MAASg6B,EAAI,eACb4S,SAAA,SACH02F,WAAA,GACF8tG,MAAA,kBAEQxkM,SAAoC,SACpC02F,WAAE,GAGF+tG,WAAA,CACOrxO,MAAGg6B,EAA0B,cACrC4S,SAAe,SACjB02F,WAAU,GAGRguG,WAAO,CACTtxO,MAASg6B,EAA8B,cACxC4S,SAAA,SAAM02F,WAAA,GAENiuG,WAAA,CAEDvxO,MAAYg6B,EAAyB,yBAC7B4S,SAAM,SACZ02F,WAAe,IAGhB,GAAAxuI,KAAAshB,MAGIynG,EAFR/oH,KAAAshB,MAAAs6N,SAEsB,CACP,CACKA,UAAE,EACJjzO,IAAM3I,KAACshB,MAAA9N,KACTo8H,QAAW5vI,KAAGshB,MAAAsuH,QAC5B/zI,KAAAmE,KAAAshB,MAAAzlB,KAAMgzI,UAAA,aACEU,UAAYvvI,KAAAshB,8BCrLAzlB,KAAAmE,KAAAshB,MAAAzlB,KACA0zI,UAAAvvI,KAAAshB,MACuButH,UAAA,oBAezC,QAAAzoI,EAAA,EAAAA,EAAA2iH,EAAA5jH,OAAAiB,IAAA,CAAQ,IAAKwI,EAAAm6G,EAAA3iH,GAEZwI,EAAOjG,IAAAiG,EAAA4E,KACR5E,EAAA3G,IAAA2G,EAAA4E,KACF5E,EAAAigI,UAAAjgI,EAAAq8D,OAAAjmE,KAEM4J,EAAA+2I,SACK/2I,EAAGigI,UAAA,MAAAjgI,EAAA+2I,SAGH91H,EAAGjhB,EAAAq8D,OAAAjmE,QACZ6qB,EAAAjhB,EAAAq8D,OAAAjmE,MAAA,CACMkG,MAAY0D,EAAAq8D,OAAemyJ,UAClBtlL,SAAM,SACR02F,WAAY,cAgCZX,EAAI++C,WACdA,EAAUn/K,KAAAktC,WAKXzV,EAAA,2BAGMnkC,EAAA44B,KAAIk0G,EAAO,SAAAkC,OAmBT2sG,EAAS5pI,IAhBlB11F,EAFA2yH,EAAO9kE,QAEG8kE,EAAA9kE,OAAAmyJ,WAIG/0K,EAYJq0L,EATWt/N,EASF01F,EATE5tE,EAAA,oBAWpB03D,IAAiB8/I,KACnBxxO,EAAC2oB,WACD3oB,EAAA42I,SAAAhvC,GACH5nG,EAAA62I,mBAbOnyI,KAAA,QACExR,KAAA2xI,EAAApnI,IAAAnK,GAAAuxI,EAAAH,eACHxyH,QA7BApgB,EAlBkB+rH,IAmBThoH,EAAAyQ,OAAAxU,EAAA,aAlBW4vL,KAGfn/K,KAAG+sC,mBADC,IAEJrgB,MAAMqgB,mBAHK,KAIbx9C,OAAO,QACR2pB,EAAA5lB,EAAAmE,KAAA2qB,GAAA1qB,OAAA,OACF4jH,QAAMl5F,UACD7vB,UDyDqB,GExGkB,IAAA6mJ,EAAA3sJ,EAAA,0DCCnD,MAAAk9F,GAEA,OADAlhF,QAAAxG,IAAA,+DACAiX,oDCHA6kH,OAAA,KAEA/4E,KAAA,SAAA/4C,EAAAsQ,GACA,IAAA1I,+ICDAq7N,EAAAr1F,EAAApoH,WAAAtjC,EAAA,aAAA0rJ,EAAApvH,UAAA,UAAAovH,EAAAzrJ,OAAAgrJ,EAAA,EAAAjnH,uBAAAte,KAAAzlB,WAAA,SAAAylB,EAAAzlB,WAA0CD,IACEC,EAAAD,EAAA,UAAA+qB,EAAA5lB,EAAAipC,SAAAnuC,KAAA,IAEhCD,EAGX,IAFC,IAAA4pJ,EAAA,yCACAlkI,EAAA7f,QAFU+jJ,GAAA,gEAGXlkI,EAAA7f,MAAA,iBAAA6f,EAAA3f,UAAA,stBCHyDzH,EAAAC,EAAAC,EAAA,sBAAAwiP,KAmC1DC,gBAAAh6O,EAAAI,uEAqBEJ,OAAM,MAAGC,IAAA,CAAC,iBAAU,SAAAC,KAAAC,IAAAN,EAlBlB,48CAmBKA,iBAKLG,EAAAI,6IAIA,yOA6CHA,QAAAP,qBAtEGxI,gBACAA,EAAWC,EAAAC,EAAiB,sBAAA0iP,oBAA5B5iP,EAA6BC,EAAAC,EAAA,sBAAA2iP,EAAA,QAIzBD,+FAC8CA,EAA1C,yDAKAt8O,EAA8BtG,EAAC,QAChCuI,EAAsBvI,EAAS,UAACA,EAAAqhC,EAAA94B,2BACxCu6O,EAAA9iP,EAAA,QAcD+iP,EAAA/iP,EAAA,QACQgjP,EAAYhjP,EAAW,QACrBijP,EAAyBjjP,EAAA,QAG/BkjP,EAACljP,EAAA,QACCmjP,EAACnjP,EAAA,QACCojP,EAAApjP,EAAA,QACGqjP,EACCrjP,EAAA,QACEsjP,EAAAtjP,EAAC,QAILujP,EAAAvjP,EAAC,QAgCXwjP,EAAU,SAAA99O,GAEV,SAAQ89O,IACR,IAAA59O,EAAyB,OAAXF,GAAmBA,EAAA4pB,MAAAxpB,KAAAypB,YAAAzpB,YACjCF,EAASG,MAAQ,CACjBC,WAAiB,GAGbJ,EAAAK,OAAkB,SAAGmhB,GACzBA,EAAaI,iBACb,IAAA8mD,EAAkBlnD,EAAA9M,OAAA0/E,SAAA,SAAA3yF,MAClBinE,GACA1oE,EAAc69O,iBAAAn1K,IAID1oE,EAAA89O,iBAAA,8CAfbp9O,EAA6C,EAAAk9O,EAAA99O,iICxH/C,gBAAAI,KAAAH,MAAAg+O,wBACA,cACA/7O,EAAA+iB,msDDqHY,kBEvHZ60F,EAAA,CACAgpH,cAAA+a,EAAA,EACI9a,mBAAgC8a,EAAK,EAE1B7a,gBAAS6a,EAAiB,EACvC5a,eAAI4a,EAAyB,uBACpBA,EAAe,GAGArjP,EAAa,EAAA8D,OAAA4/O,EAAA,IAAA5/O,CAAA2E,EAAA,CAAA3E,OAAA6/O,EAAA,EAAA7/O,+MAAAw7G,EAAAx7G,CAAAw/O,MAEjB39O,KAAAC,KAAA9F,EAAA,OAAAA,CAAA2I,mBAKhBA,EAAUI,SAEV,qEAGAJ,OAAA,MAAaC,IAAA,2BAAAC,KAAAC,IAAAN,EADf,4nGAEKA,QAMN,SAAAG,EAAAzI,EAAAF,kBAEAksB,QAAA,+DACMA,QAAkB,CAAC,iBAAC,qBAC7B43N,GAAC53N,QAAA,iEAED63N,GAAM73N,QAAyB,4BAAwB,uDAEhD83N,GAAM93N,QAA+B,mBAAoBA,QAAA,mBAA2B,YAAa,qDAClGA,QAAA,YAAwB,0BAC1BA,QAAY,UAAc,aAAW,6DACtCA,QAAA,mBACH+3N,GAAE/3N,QAAA,2JCvCsDyjD,EAAA3vE,EAAA,QAMxDysB,EAAAzsB,EAAAqhC,EAAAsuC,KAUoB3vE,EAAA,UAEUA,EAAmBqhC,EAAAuuC,OAGxB,UACA5vE,EAAQqhC,EAAA34B,MAEvB1I,EAAsB,QAGvBA,EAAA,QAGJA,EAAA,QAICA,EAAa,UAGC,WACXA,EAAAqhC,EAAAjF,KAGJp8B,EAAA,UAEkBA,EAA2BqhC,EAAIwgD,MAI9C7hF,EAAY,QAGVA,EAAO,QAIXA,EAAY,SAMlBkkP,EAAA,KA6BA,IAAAC,EA7BA,uBAEA,OAAAD,EAEE,uBAAAt/O,SAAyB,CACvB,IAAAw/O,EAAOx/O,SACLoD,cAAA,OACEq8O,EAAM,OACJ,eACA,iBACK,eACL,mBACD,SACDC,gBAAW,yBAETD,GAAQn9O,IAAA,SAAA07B,WAEJA,GAAMyhN,EAAWzhN,+BAEVwhN,KACRA,EAAAn1D,YAAAm1D,EAAAjsF,qBACF1+F,KAAA9K,YAAAy1L,QAKRF,EAAA,EACF,OAAAA,GAAA,EAEDK,GAAsB,EACtBC,EAAW,SAAWC,EAAAC,4FC1FIjwJ,EAAAz0F,EAAA,QAMc2kP,EAAA,WAKxC,SAASC,EAA2B55N,EAAA+iE,EAA0B82J,EAAAp+O,EAAAykB,EAAA45N,GAC5D95N,EACEM,SAAA,yBACEyiE,EAAAv/D,KAAAu/D,EAACg3J,KAmBA,WAAAh3J,EAAAl0E,MAAA,aAAAk0E,EAAAl0E,MAAAk0E,EAAAv/D,MAWSw2N,cAAKj3J,EAAAl0E,KAAAk0E,EAAAg3J,KAAAh3J,EAAAv/D,KAAAxnB,KAAA,SAAAC,MACbA,EAAA/D,KAAWuJ,IAAE,CACb,IAAAA,EAASgoF,EAAyB,EAASC,iBAAAztF,EAAA/D,KAAAuJ,KAC3C,GAAAA,IAAAye,EAAA1iB,OAMI,YAFN0iB,EAAA1iB,KAASiE,GAAO9I,UAKhBsD,EAAG/D,KAAAu0K,cAAA1pF,EAAA0pF,cACJxwK,EAAA/D,KAAAuzK,MAAA1oF,EAAA0oF,MACDzrJ,EAAAi6N,cAAAh+O,EAAA+jB,KAtBEvkB,EAAAy+O,mBAAAn3J,EAAAg3J,MAAA/9O,KAAA,SAAAwW,GACIA,GACF0N,EAAY1iB,KAAAisF,EAAkB,EAAAC,iBAAAl3E,EAAAta,KAAAuJ,MAAA9I,YAvB9B8C,EAAAM,IAAA,wBAAUC,KAAA,SAAAm+O,GAIjB,GAAAA,EAAAC,YAAA,CAEe,IAAA9oB,EAAA7nI,EAAA,EAAAC,iBAAAywJ,EAAAC,aACAl6N,EAA0B1iB,KAAE8zN,OAE3B,CACD,IAAAp5N,EAAAiiP,EAAAjiP,KACZA,EAAKyoB,QAAwBzoB,EAAAigO,SAAAjgO,EAAAkgO,SAAA,EAC3Bp4M,EAAAi6N,cAAAE,EAAuCn6N,aAlBI45N,EAAA14N,QAAA,qFAHT,GCDlCm5N,EAAuC,2BAG3Cr6N,EAAsBi6N,cAAA,CAAjB/hP,KAAM,CACTkgO,SAAQ,EACTD,UAAA,mGACFj+N,QAAA,CAAAoL,EAAA,EAAAC,EAAA,EAAApL,EAAA,GAAAk9B,EAAA,GAEe3gC,MAAA,kEAR6B,GCLW6yE,EAAA,EAAAtlD,WAAA,oBAAA01N,GAMxDpwK,EAAA,EAAAtlD,WAAA,mBAAAo2N,SASYrlP,EAAA,UARLA,EAAM,QAcXqgJ,EAACrgJ,EAAA,UAGCA,EAAS,iBAqBNslP,EAAEr6N,EAAAC,EAAAiqC,EAAAhqC,EAAA6iE,GACP,MAAC,CACHj/D,SAAA,IAACuB,SAAA,mDC9CDlY,KAAAnN,SACEmN,EAAA+gD,KAAoB,SAAsBtqD,GAAA,OAAAm/E,EAAA2jJ,QAAA9iO,MAAtBqc,EAAAze,IAAA,MAGd,IAAC+2E,EAAWv4D,EAAApG,QAAA0gO,OAAA/hK,UAEZA,EAAMvG,UACNuG,EAAIA,EAAevG,aAEnBt3E,EAAO,CACPwvD,UAAQA,EACRhqC,WAAWA,EACXH,OAAQxL,cACNwuE,YACE/iE,EAAQpG,QAAA2gO,QAAkBC,yBAExBvrL,UAAEtuD,IAAA,cACE/E,EAAAc,gBDqBNqtD,EAAAiT,EAAAtiE,UACJ6Q,EAAK3P,EAAAmB,cAAqB4lI,EAAM,GAAA54E,SAClCx+C,EAAE3P,EAAAmB,cAAA3E,EAAA,oBAAAu/B,MAAA,UACK/7B,EAAAmB,cAAGigE,EAAA17C,EAAA,KAAA5mB,MCxBE+/O,CAAYrxJ,EAAA,EAAArwF,OAAAq8I,EAAA,EAAAr8I,CAAAw/E,GAAA79E,GAAAmqE,EAAA,qBACb,oBACNrW,KAAAS,UAAAlU,OAAA,cACDn/C,EAAAu9E,uBAAAtU,EAAA,UAKO,EAAAqE,UAAA,iBAAwBmxK,kBA6BjCtlP,EAAmB,QCrBf2lP,ED2BX,iDE9D8D7/O,KAAAolB,YACPplB,KAAA8/O,gBAIxD9/O,KAAApE,MAAA,GAKEoE,KAAA+/O,cAAgB,EAChB//O,KAAAipF,SAAAe,EACUg2J,OAAA,aACgB,oBAExB,GDkBF,4ECnBUv/O,UAAA4rC,OAAY,WAGpB,IAAIvsC,EAAKE,SACPA,KAAKigP,+BAKGt/O,WAAMggH,aAAA,CAAA/kH,MAAAoE,KAAYpE,QAACsF,KAAA,SAAuBC,KAE1B,EAAIxF,KAAI,qDAC5BgL,IAAUgoF,EAAoB,EAAAC,iBAAAztF,EAAAwF,WAGnClG,UAAAy/O,aAAA,WACF,IAAApgP,EAAAE,KACHA,KAAA+/O,cAAA,EAAC//O,KAAA8/O,0FD/BsB1mI,MAAA,SAAAhiB,GACct3F,EAAAmgP,oBAAA,EACmBngP,EAAAqgP,gBAAA/oJ,EAAAj4D,WA+BtDihN,ED6BD,KCpBiB,oBACTC,EAAa1/O,GAClBX,KAAKW,WAAYA,WAEZF,UAAAspB,KAAuB,SAAAymD,EAAiB9nD,EAAA43N,UAC7C9vK,EAAKyY,SAAW,CACZ7oD,KAAC,CAELtkC,KAAA,oBACIe,GAAA,gBACE+kC,SAAQ,yCACRj7B,IAAC,GACN9K,KAAA,GACFulC,YAAA,EAAAxlC,MAAA,aAAA+K,IAAA,eAEDokB,SAAA,EACkByN,OAAC,6BAAA8nN,EACFxkP,KAAK,uBACNe,GAAA,2BACEhB,KAAC,aAEH8K,IAAA,cACZ,CAAW6xB,OAAK,8BAAA8nN,EACRxkP,KAAA,mBACJe,GAAI,4BACJhB,KAAK,cACL8K,IAAI,2BAGJ6xB,OAAwB,2BAAhB8nN,EACRxkP,KAAA,kBACAe,GAAA,yBAEEhB,KAAM,WACR8K,IAAK,+BAKPhG,WAAW2uC,eAAM5mB,GAAYxnB,KAAA,SAAA0nB,KAC9BC,SAAAD,EAAA/rB,0QACF2zE,EAAAyY,SAAA7oD,KAAArV,SAAAngB,KAAA,SAAAugB,GAAA,iCAAAA,EAAAtuB,KAEkB8J,IAAKqiB,EAAa,aAGtCwnD,EAAAyY,SAAA7oD,KAAArV,SAAA,CAAAw1N,GAGO,OAAO33N,KAIby3N,EArDc,KA4D+B,WAI/C,SAAAG,EAAA7/O,EAAAqpF,EAAA/B,EAAA7iE,sBACEplB,KAAKioF,aAAcA,2BACnBjoF,KAAoB0oB,IAAAu/D,EAAAv/D,IAAJ,IAAA23N,EAAArgP,KAAAW,YACdopB,KAAK/pB,KAAMA,KAAO0oB,IAAA,4BAAAxnB,KAAA,SAAA0nB,OAChBjiB,EAAKgoF,EAAoB,EAAAC,iBAAAhmE,EAAAjiB,KAC1BA,IAAAye,EAAA1iB,QACF0iB,EAAA1iB,KAAAiE,GAAA9I,oBARH2iP,EAACp6N,QAAA,0DAF8C,GE/DhCq6N,EFgFK,oBAGdC,EAAkB//O,EAAMm/O,EAAA91J,EAAA5kE,EAAA6iE,QACxBtnF,WAAKA,EACPX,KAAE8/O,qBACD16N,UAAMA,OACL6jE,SAAYe,EAAKg2J,OAAY,6BAC3B,OACDW,YAAA,OAEDC,WAAK,OACLC,iBAAK,EACP7gP,KAAG8gP,qBAAA,iBACN9gP,KAAA6oB,SAAAo/D,EAAAp/D,SAAAlK,OAAAspE,EAAAp/D,WAAA,OAED7oB,KAAA+gP,mBAAA,kBACM94J,EAAa+0I,SACbh9N,KAACghP,QAAA/4J,EAAwB+0I,OAEzBh9N,KAAAihP,+BAlBI76N,QAAA,0EAsBO3lB,UAAAygP,SAAA,SAAAz8J,OACbp+D,EAAAvkB,UACC2iF,YACAA,KAAK5nF,GAAA,UACJ2zB,KAAK,OACL2wN,OAAK,GACLnhP,KAAIykF,KAAC28J,SAGL,IACD,IAAM,IAAAvsO,EAAC4R,EAAQ,EAAAzmB,KAAAykF,KAAA28J,UAAArsO,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CACV,IAAA+lD,EAAgBhmD,EAACxT,MACpB8/O,EAAA,CACNr8O,KAAA+1D,EAAA/1D,KAEDxD,MAAAu5D,EAAAv5D,MACkBgP,KAAMuqD,EAAI73C,YACrB3hB,MAAew5D,EAAAx5D,MACrBwS,KAAAgnD,EAAAhnD,KAED47C,SAAAoL,EAAApL,SACkBzoD,QAAS,IAG3B,eAAA6zD,EAAAhnD,KACO/T,KAAAshP,qBAAoBvmL,EAAAsmL,GAG3BA,EAAO7wO,OACO6wO,EAAe7wO,KAAK,6BAGlCxQ,KAAAmhP,OAAAvxO,KAAAyxO,IAEI,MAAO7lK,GAAAn1D,EAAA,CAAAgP,MAAAmmD,WAEL,IACQzmE,IAAOA,EAACE,OAAQnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAExB,WAAAwR,EAAA,MAAAA,EAAAgP,YAIDksN,YAA8B,IAAzBvhP,KAAAmhP,OAAAh8O,YACJ+6O,oBACAsB,YAAW,MAED/gP,UAAK6gP,qBAAQ,SAAAvmL,EAAAsmL,OACvB/uE,EAAA3rJ,EAAA5lB,EAAAyQ,OAAAiD,EAAA,EAAAg6B,YAAA,SAAAnpC,UACIA,EAAAyO,OAAGgnD,EAAApL,WAEW,IAAlB2iH,EAAKntK,OACJk8O,EAAA7wO,KAAA,2BAAAuqD,EAAAnL,WAAA,SAGPyxL,EAAA7wO,OACM6wO,EAAA7wO,KAAA,YAAAuqD,EAAAnL,WAAA,kBAEI1oD,QAAYorK,EAAMlxK,IAAK,SAAUkE,GACvC,MAAK,CAAAzJ,KAASyJ,EAAKN,KAACzD,MAAA+D,EAAAN,WAERvE,UAAKghP,kBAAA,eACjBr2N,EAAKtpB,OACLy/O,aAAO,MAEV,QAAA1sO,EAAA4R,EAAA,EAAAzmB,KAAAmhP,QAAApsO,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CAEDD,EAAAxT,MA0BCA,QAzBMvB,KAAYuhP,aAAG,UAMlB3lK,GAAWxwD,EAAG,CAAMiK,MAAGumD,eAEvB7mE,IAAcA,EAAAE,OAASnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,WAClB,GAAAuW,EAAA,MAAAA,EAAAiK,WAIK50B,UAAUy/O,aAAA,iBACflgP,UACJ+/O,cAAK,OACJY,YAAa,OACbb,cACA4B,yBAAyB1hP,KAAA6oB,SAAA7oB,KAAAykF,KAAA7oF,OACzBsF,KAAK,WACLpB,EAAA6gP,YAAA,IACIgB,wBAAI,IAERvoI,MAAK,SAAShiB,GACb,aAAAA,EAAArjF,OACNjU,EAAA6gP,YAAA,GAGK7gP,EAAC6hP,wBAAa,EACd7hP,EAAK8hP,oBAAKxqJ,EAAAj4D,WAGhBuhN,EAACjgP,UAAA+gP,WAAA,SAAAjxG,GACH,IAAAzwI,EAAAE,KAACA,KAAA4gP,WAAA,iCAEc,IAAArwG,GAAAvwI,KAAAykF,KAAA/7D,yJGtPmB5oB,EAAA+hP,mBAAA,oBAAAnqO,EAAArc,UAAAO,MAAA,gBAAA8b,EAAAta,KAAA0rB,YAAA,uBAI9BswF,MAAA,SAAAhiB,GACEA,EAAA2qB,WAAA,+DCLoB/hH,KAAAkgP,gBAGpBQ,EAAqCjgP,UAAMqhP,sBAAC,WAC5C9hP,KAAEuhP,aAAA,KAEQ9gP,UAAAshP,qBAAA,WACZ/hP,KAAAyhP,uBAEDhhP,UAAAozB,QAAA,WACD,OAAQ7zB,KAAAuhP,aAAA,OAAAvhP,KAAA6oB,YAEQpoB,UAAA8mB,cAAA,WACf,IAAAznB,EAAAE,KACOmhP,EAAAnhP,KAAAmhP,OAAA//O,IAAA,SAAA25D,GACN,MAAS,CACH/1D,KAAQ+1D,EAAA/1D,KACf+O,KAAAgnD,EAAAhnD,KACO47C,SAAAoL,EAAApL,SACCpuD,MAAEw5D,EAAAx5D,SAGX,OAAUvB,KAAEW,WACV0oE,KAAS,wBAAO,CACZhuE,UAAE2E,KAAaykF,KACnBi8B,WAAU,EACNygI,OAAEA,EACPt4N,SAAA7oB,KAAA6oB,WAEC3nB,KAAS,SAAAwW,GACL,IAAEsqO,EAAOrzJ,EAAA,EAAAC,iBAAAl3E,EAAAuqO,aACTniP,EAAEslB,UAASze,IAAAq7O,MA5B8BtB,EA+B9CjgP,UAAAyhP,aAAA,WAcG,IAEFliP,KAAAmiP,WAAA,GACE,IAAA19J,EAAAvoF,KAAAoC,MAAA0B,KAAAoiP,UACEpiP,KAAAkhP,SAAAz8J,SAGA2S,kBACE1nF,IAAA0nF,QAEFp3F,KAAAmiP,WAAA/qJ,EAAAj4D,WASKuhN,EAAmBjgP,UAAGwgP,mBAAA,WAC3B,IAAAnhP,EAAWE,KACXA,KAAAqiP,UAAA,GACJ,IACA9kN,EADMxhB,EAAO,4BAAsC6tB,KAAA5pC,KAAAghP,gBAElDjlO,KAAA,GAECwhB,EAAAxhB,EAAuB,GAE1BA,KAAA,GAEKwhB,EAAkBxhB,EAAA,GASlB/b,KAAAqiP,UAAA,2BACcriP,KAAQW,WAGzBM,IAAA,uBAAAs8B,GAEGr8B,KAAU,SAAAwW,GAEd5X,EAAAwiP,SAAA5qO,EAEEA,EAAApC,KAAA0nN,OAAAtlN,EAAA7a,GAGJiD,EAAAohP,SAAAxpO,EAAApC,0EFpGwEorO,EAAAjgP,UAAA8hP,KAAA,WAmB1EviP,KAAAghP,QAAA,GAA+BhhP,KAAAwwB,KAAA,EAE7BxwB,KAAAqiP,UAAY,GAAZriP,KAAAsiP,SACE,MFiGkB,KE5EpBpoP,EAAmB,YAGH,UAKV,oBACM6G,EAAAmB,cAAY,OAAAH,UAAA,sBACfhB,EAAEmB,cAAc,MAAE,CAAOH,UAAO,4BAAoB,qBACxDhB,EAAAmB,cAAA,KAAA07B,KAAA,SAAA77B,UAAA,sDA3BM,WAAK,YACZ,yBACHiD,KAAA,OAEDjD,UAAA,SACEjG,KAAK,OAyBP0mP,OAAA,CACE97G,QAAOjyH,EAAmB,EAAS+kG,MAAMgpI,OAC1Cx9O,KAAA,iBAED,CACE0hI,QACEjyH,EAAA,EAAA+kG,MAAAipI,YACE,4BAMQ,EAACjpI,MAAMkpI,YAQf,qBAaA,SACIjuO,EAAwB,EACxB+kG,MAAAmpI,2FAmBE,EAAAnpI,MAAAopI,cAMX59O,KAAA,QACHlJ,KAAA,UApG+B+mP,SAAA,qBGqBrB,iBACF3kP,OAAOgH,KAAA49O,KACWtxO,OAAY,SAAClL,UAClCw8O,IAAAx8O,GAAMogI,aAEN,MAAAvhI,OACH,OAAE,WAGa49O,EAAC3hP,IAAA,SAAAkF,SACZw8O,IAAsBx8O,UACtBoK,EAAY3P,EAAAmB,cAAS,IAAa,CAAEoE,IAAEA,EAAOvE,UAAM,4CAAA+5E,EAAA/5E,WAAAuE,GAAA,aAAAs3B,KAAA,UAAAk+C,EAAA+mK,SAAA/mK,EAAA+mK,SAAAv8O,GAAAkO,OAAA,WAClDzT,EAAAmB,cAAA,KAAAH,UAAA,2BAAA+5E,EAAAhgF,KAAAggF,EAAAhgF,KAAAwK,KACH,gBAEFw1E,EAAA92E,8CAvDwE0L,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,6BACpC2O,EAAA3P,EAAAmB,cAAA,WACMwO,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,wBAc5C2O,EAAA3P,EAAAmB,cAAA,WAAoCwO,EAAA3P,EAAAmB,cAAA,QAAAH,UAA2B,sBAAA0S,EAAA,EAAA+0E,iBAAA,KAAA94E,EAAA3P,EAAAmB,cAAA,oBAE7DwO,EAAA3P,EAAYmB,cAAY,WAAxBwO,EACE3P,EAAAmB,cAAY,MAMb,CAAAH,UAAA,yBAYD2O,EAAQ3P,EAAAmB,cAAqB,OAAAH,UAAA,uBAqBlBhB,EAAImB,cAAUwO,EAAgB3P,EAAAoQ,SAAa,OAEtDT,EAAE3P,EAAAmB,cAAA,OAAAH,UAAA,2BAAAihP,OAxCK9oP,EAAQ,sBAOf,SAAA+oP,EAAApjP,GACE,IAAIC,EAACF,EAAUG,KAASC,KAAKH,IAAWG,cACtC0yN,SAAa,SAAAh6L,GACdA,EAAAhX,iBACF,IAAA5f,EAAAhC,EAAAG,MAAAoB,EAAAS,EAAAT,KAAA03G,EAAAj3G,EAAAi3G,SAAAhoG,EAAAjP,EAAAiP,MAEDjR,EAAAG,MAAA21B,OACO91B,EAASD,MAAM6yN,SAAG,CAAArxN,OAAA03G,WAAAhoG,WAiCvBjR,EAAIojP,iBAAY,SAAexqN,GAC7B54B,EAAAe,SAAY,CACbk4G,SAAArgF,EAAAlkB,OAAAjT,MAAMq0B,MAAI91B,EAAYkvB,SAAAlvB,EAAcG,MAAAoB,KAAAq3B,EAAAlkB,OAAAjT,UAGrCzB,EAAAqjP,iBAAa,SAAAzqN,GACd54B,EAAAe,SAAA,CAEDQ,KAAAq3B,EAAAlkB,OAAAjT,MAAAq0B,MAAA91B,EA0DCkvB,SAAA0J,EAAAlkB,OAAAjT,MAAAzB,EAAAG,MAAA84G,qBAtDO,kBAGA,YAGFnjF,OAAA,KC5EN,ODgBAnP,EAAC,EAAAw8N,EAAArjP,eAwEW+pB,kBAEE,0BACNzH,qBAWA8M,SAAA,SAAA3tB,EAAA03G,YACE5zG,OAAA,GAAA4zG,EAAA5zG,OAAC,eASDtD,OAAA,WAYT,IAAA/B,EAAAE,KACH,OAAA0Q,EAAC3P,EAAAmB,cAAA,QAAA8C,KAAA,YAAAjD,UAAA,kCAtHmC2O,EAAa3P,EAsHhDmB,cAAA,OAAAH,UAAA,unBCtIiC/B,KAAAH,MAAAw5G,YAAA3oG,EAAA3P,EAAAmB,cAAA,UAAA6R,KAAA,SAAAhS,UAAA,+CACQ,aACkB2O,EAAA3P,EAAAmB,cAAA,iBACxBwO,EAAA3P,EAAAmB,cAAA,iBACIwO,EAAA3P,EAAAmB,cAAA,kBAJNwO,EAAA3P,EAAAmB,cAAA,UAAA6R,KAAA,SAAA8qM,aAAA,eAAA98M,UAAA,wBAAA/B,KAAAC,MAAA21B,MAAA,6BAAAS,QAAAr2B,KAAA0yN,SAAAt8L,UAAAp2B,KAAAC,MAAA21B,OAAA,UAKgB51B,KAAAH,MAAAujP,sBAAA1yO,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,sCACK2O,EAAA3P,EAAAmB,cAAA,KAAA07B,KAAA,oEAG9CqlN,KAEH,iBAuBY,SAAArjP,cAUAC,SAEJD,EAAAG,KAAAC,KAAAH,IAAAG,uBAOE,SAAA04B,GAvBAA,EA2BIhX,iBAEZ,IAAA5f,EAAAhC,EAAAG,MAAAojP,EAAAvhP,EAAKuhP,YAAoBvhP,EAAG8zB,uFC3D6B91B,EAAAwjP,oBAAA,SAAA5qN,GAC/B54B,EAAAe,SAAA,CACsCwiP,YAAA3qN,EAAAlkB,OAAAjT,MAE3Dq0B,MAAA91B,EAAuBkvB,SAAsB,cACxD0J,EAAAlkB,OAAAjT,UAMAzB,EAAOyjP,wBAAG,SAAA7qN,GAIX54B,EAAAe,SAAA,CAEYo4G,WAAoBvgF,EAAAlkB,OAACjT,MAAqCq0B,MAAA91B,EAAAkvB,SAAA,aAAQ0J,EAAAlkB,OAAAjT,YAIrEiiP,OAAA,SAAO9qN,GACL54B,EAACD,MAAW2jP,kBAGV,CAGLH,YAAA,GAEDpqI,WACE,GACErjF,OAAA,GAEA91B,WDSI,EAAA2jP,EAAA7jP,KCPJa,UAAAy7D,mBAAA,SAAcn4B,MACZ7hB,OAAAliB,KAAAH,MAAAqiB,OAIFliB,KAAAkiB,WAGGzhB,UAAUyhB,MAAA,WAMrBliB,KAAA0jP,UAAAxhO,8FCjDsB,eAAA4/B,GACkC9hD,KAAAC,MAAAojP,cAAArqI,GAIyByqI,EAAAhjP,UAAAoB,OAAA,WAC7B,IAAA/B,EAAAE,KACnB,OAAA0Q,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,kBAAAlF,GAAA,wBAE7B6T,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,wCACuC2O,EAAA3P,EAAAmB,cAAA,6BACiB,6HACSwO,EAAA3P,EAAAmB,cAAA,WAEzD,6CACAwO,EAAA3P,EAAmBmB,cAAoC,OAAE,CAAAH,UAAoC,kCAC3G2O,EAAkB3P,EAAUmB,cAAM,OAAAH,UAAA,cAElC2O,EAAA3P,EAAAmB,cAAA,SAAA6R,KAAA,WAAAlX,GAAA,cAAAmI,KAAA,cAAiHjD,UAAA,iCAAAq7C,UAAA,EAAA76C,YAAA,eAAAD,SAAAtC,KAAAsjP,oBAAAn5N,IAAA,SAAA4wC,GACjHj7D,EAAA4jP,UAAA3oL,MAGErqD,EAAA3P,EAAiBmB,cAAC,OAAAH,UAAA,cAAkG2O,EAAA3P,EAAAmB,cAAA,SAAA6R,KAAA,WAAA/O,KAAA,aAAAjD,UAAA,iCAAAq7C,UAAA,EAAAumM,WAAA,qBAAAphP,YAAA,uBAAAD,SAAAtC,KAAAujP,2BAEtH7yO,EAAc3P,EAAAmB,cAAA,OAAAH,UAAA,2DACD2O,EAAA3P,EAAAmB,cAAA3E,EAAA,SAAAmU,UAAA,SAAAC,QAAA,4EACCjB,EAAA3P,EAAqBmB,cAAA,KAAAH,UAAA,eAAAs0B,QAAAr2B,KAAAwjP,QAAA,SACnB9yO,EAAA3P,EAAAmB,cAAA,UAAA6R,KAAA,SAAAhS,UAAA,wBAAA/B,KAAAC,MAAA21B,MAAA,6BAAAS,QAAAr2B,KAAA0yN,SAAAt8L,UAAAp2B,KAAAC,MAAA21B,OAAA,YAEZ6tN,EFIY,GEHE,iBAIdvpP,EAAA,UAUI,kBACJwW,EAAU3P,EAAAmB,cAAqB,OAAAH,UAAA,mBAC/B2O,EAAW3P,EAAAmB,cAAgB,OAAAH,UAAA,iBAC3B2O,EAAgB3P,EAAAmB,cAAK,OAAAH,UAAA,kBACrB2O,EAAW3P,EAAAmB,cAAkB,MAAO,CAAAH,UAAA,YAAAxE,IAAA,8BAAA2vE,IAAA,YAC7Bx8D,EAAE3P,EAAAmB,cAAA,OAAAH,UAAA,mBACP2O,EAAW3P,EAAAmB,cAAmB42G,EAAA,gBAAAh3G,GAC/B,IAAA8hP,EAAA9hP,EAAA8hP,UAAAC,EAAA/hP,EAAA+hP,aAAAv6J,GAAAxnF,EAAAgiP,eAAAhiP,EAAAwnF,aAAAC,EAAAznF,EAAAynF,iBAAAC,EAAA1nF,EAAA0nF,iBAAAu6J,EAAAjiP,EAAAiiP,kBAAAtiP,EAAAK,EAAAL,MAAA43G,EAAAv3G,EAAAu3G,YAAAsuB,EAAA7lI,EAAA6lI,eAAAluB,EAAA33G,EAAA23G,mBAAAH,EAAAx3G,EAAAw3G,mBACD,OAAA5oG,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,mBACI2O,EAAA3P,EAAAmB,cAA0B,OAAAH,UAAA,oBAAAu3G,EAAA,aAAAz8G,GAAA,cACpB2sF,EAAqB,KAAA94E,EAAA3P,EAAAmB,cAAA8hP,EAAA,CAAAZ,wBAAA95J,GAAAC,GAAAmpI,SAAAjxN,EAAAmiP,YAAAC,eAAAxqI,gBACpB3oG,EAAgB3P,EAAAmB,cAAA+hP,EAAA,MAChBF,EAAyB,KAAzBrzO,EAAyB3P,EAAAmB,cAAAgiP,EAAA,OACpCxzO,EAAqB3P,EAAAmB,cAAAiiP,EAAA,eAAAC,QAAA,EAAAjY,cAAA,EAAA72K,GAAAgkD,EAAAxjD,QAAA,IAAA42B,WAAA,mBACZh8E,EAAA3P,EAAAmB,cAAAmiP,EAAA,CAAA3xB,SAAA/qF,EAAA67G,OAAA/pI,EAAAv3F,MAAAo3F,QAER5oG,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,kBAID7H,EAA2B,UAOvB,WAAsB,OAAAwW,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA7D,OAAA2mC,EAAA,GAAA3mC,CAAA,gBAChB6C,EAAAmB,cAAA3E,EAAqB,oBAAA1B,KAAA,yBAItB,SAAAyoP,GAAA,gBAAAxiP,SACP2kB,EAAW,EAAA3kB,EAAA,MACT5D,OAAAo4B,EACE,KADFp4B,CACE,kBAAAomP,WADF5zO,EAEC3P,EAAAmB,cAAA3E,EAAA,4BAAAuE,OACJuzB,EAAAvzB,EAAAuzB,MAAA+5K,EAAAttM,EAAAstM,UACD,OAAAA,EAIA1+L,EAAW3P,EAAAmB,cAAkB,MAAO,CAAAH,UAZpC7D,OAAS2mC,EAAE,IAAX3mC,CAAWqc,IAAyBA,EAAAkM,EAAA,gHAapC/V,EAAgB3P,EAAAmB,cAAK,6CACrBwO,EAAS3P,EAAAmB,cAAA,WACPwO,EAAW3P,EAAAmB,cAAA,MAAAH,UAAA,qFACThB,EAAAmB,cACE,WADFwO,EAEC3P,EAAAmB,cAAA,OAAAH,UAAA,iBACJ2O,EAAA3P,EAAAmB,cAAA3E,EAAA,QAAA6K,KAAA,KAAA49C,QAAA,YAAAlqD,KAAA,eAAAu6B,QAAA,kBAAA1zB,OAAAsoC,SAAAvjB,WAAA,WACDhX,EAAA3P,EAAAmB,cAAA,WAAA46B,MAAA,CAAAmvJ,WAAA,aACI52J,KAAAxvB,WACJ6K,EAAa3P,EAAAmB,cAAA,WACbktM,EAAYK,iBAdR/+L,EAAA3P,EAAAmB,cAA+Bo0B,EAAA,UAAAiuN,SAAA7zO,EAAA3P,EAAAmB,cAAAsiP,EAAA,OAC3B9zO,EAAE3P,EAAAmB,cAAqBuiP,EAAAh+N,EAAA,KAAA5mB,kBAmChC6kP,EAAKC,EAAAC,KACMC,WAAA,SAGN,kBAECC,EAAAzgO,QAAA82D,IAAA,CAAAjhF,EAAAw+B,EAAA,GAAAx+B,EAAAw+B,EAAA,KAAAx3B,KAAAhH,EAAAkG,KAAA,kBAGN6tE,KAAK,KACJzjD,SAAU,gCAER,2BACEqF,EACE,mBAAAk1N,qBACD,UACJ,CACDrnK,UAAAsnK,KAGA/2K,KAAA,gBAAY,CACZzjD,SAAA,sBACAy6N,UAAA,2BACIp1N,EAA0B,mBAAAq1N,OAC9BC,gBAAa,EACbjrK,QAAA,CACAwD,UAAcsnK,KAGd/2K,KAAA,UAAU,CACVzjD,SAAS,gCACP,iCACE,YAECqF,EAAA,mBAAAq1N,eACJ,CACDxnK,UAAAsnK,KAGA/2K,KAAA,yBAAS,UACP,gCACE,2BAECp+C,EAAA,mBAAAq1N,uBACJ,EACDhrK,QAAA,CACDwD,UAAKsnK,KAGJ/2K,KAAA,iBAAoB,CACpBzjD,SAAA,gCACI,iBACJm1N,UAAW9vN,EAAE,mBAAAu1N,IACbD,gBAAY,EACZjrK,QAAA,CACAwD,UAAAsnK,KAGA/2K,KAAA,qBAAqB,CACrBzjD,SAAS,gCACA,2BACPqF,EAAiB,mBAAAq1N,uBAClB,EACDhrK,QAAA,CACDwD,UAAK,WACJ,OAAAonK,EAAAzgO,QAAA82D,IAAwD,CAAAjhF,EAAAw+B,EAAA,GAAAx+B,EAAAw+B,EAAA,MAAAx3B,KAAAhH,EAAAkG,KAAA,wBAItD,8BAAW,UACT,gCAAmG,2BACtGyvB,EAAA,mBAAAq1N,OACDC,gBAAA,UACI,CACJznK,UAAU,WACH,OAAEonK,EAAAzgO,QAAA82D,IAAA,CAAAjhF,EAAAw+B,EAAA,GAAAx+B,EAAAw+B,EAAA,MAAAx3B,KAAAhH,EAAAkG,KAAA,mBAGR6tE,KAAA,qBACD/kD,YAAA,kFACIu3N,EACJp3N,aAAa,SAEb4kD,KAAA,yBACI,sBACJiM,QAAQ,CACRwD,UAAS,WACP,OAAWonK,EAAA5qP,EAAAw+B,EAAA,GAAAx3B,KAAAhH,EAAAkG,KAAA,mBAGb6tE,KAAA,mCACI,sBACJk3K,gBAAa,EACbjrK,QAAA,CACAwD,UAAc,WACd,OAAAonK,EAAA5qP,EAAAw+B,EAAA,GAAAx3B,KAAAhH,EAAAkG,KAAA,wBAIE,mCAAsB,UACtB,8BACE,CAAAs9E,UAAoG,WACvG,OAAAonK,EAAA5qP,EAAAw+B,EAAA,GAAAx3B,KAAAhH,EAAAkG,KAAA,mBAID6tE,KAAA,mBAAS,UACF,8BACL,CACDyP,UAAA,WACD,OAAAonK,EAAA5qP,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAAkG,KAAA,mBAIA6tE,KAAA,cAAoB,CACpB/kD,YAAA,gFACI,oBACJG,aAAU,cAER,yBAAa,aACJ,qEACVw2N,EACDx2N,aAAA,SAEA4kD,KAAA,uCAAa,CACbzjD,SAAU,sBACV0vD,QAAA,CACAwD,UAAA,WACI,OAAAonK,EAAqB5qP,EAAAw+B,EAAA,GAAAx3B,KAAAhH,EAAAkG,KAAA,4DAKnB,UACD,8BACJ,CACDs9E,UAAA,WACI,OAAAonK,EAAuB5qP,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAAkG,KAAA,mBAI7B6tE,KAAA,2BAAQ,aACF,8DACJ9kD,WAAWk8N,EACXh8N,aAAY,SAEZ4kD,KAAA,kCACI,8DACJ9kD,WAAWk8N,EACXh8N,aAAY,SAEZ4kD,KAAA,qBACI,sBACJk3K,gBAAa,EACbjrK,QAAA,CACA5nE,MAAA,WAAoB,OAAAmC,EAAA,EAAAw0N,eAAA,uBACpBvrJ,UAAA,kBAAAonK,EAAA5qP,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAAkG,KAAA,mBAGA6tE,KAAA,gBAAY,UAER,sBACJk3K,gBAAa,EACbjrK,QAAA,CACAwD,UAAA,WACI,OAAAonK,EAAe5qP,EAAAw+B,EAAA,GAAAx3B,KAAAhH,EAAAkG,KAAA,mBAInB6tE,KAAA,iBACI,sBACJiM,QAAA,CACAwD,UAAY,WACZ,OAAconK,EAAM5qP,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAAkG,KAAA,mBAIpB6tE,KAAA,WAAS,aACE,0DACP,eACHA,KAAA,cACDzjD,SAAA,8BACI,CACJkzD,UAAU,WACH,OAAEonK,EAAA5qP,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAAkG,KAAA,mBAIX6tE,KAAA,oBAAiB,aACX,+CACJ9kD,WAAU,iBACVE,aAAS,SAER4kD,KAAA,gBACDzjD,SAAS,sBACT0vD,QAAA,CACD5nE,MAAK,WAAiB,0BACrBorE,UAAa,WACb,OAAYonK,EAAa5qP,EAAAw+B,EAAA,GAAAx3B,KAAAhH,EAAAkG,KAAA,mBAIzB6tE,KAAA,aAAa,CACbzjD,SAAU,sBACV0vD,QAAS,CACT5nE,MAAA,kBAAAmC,EAAA,EAAAm0N,gBAAA,uBACDlrJ,UAAK,kBAAAonK,EAAmC5qP,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAAkG,KAAA,mBAGvC6tE,KAAA,iBAAW,CACX/kD,YAAA,iEACI,iBACJG,aAAa,SAEb4kD,KAAA,6BAA4B,CAC5BzjD,SAAA,8BACI,CACJlY,MAAW,WAAE,OAAAmC,EAAA,EAAAm0N,gBAAA,GAAmE,WAChFlrJ,UAAY,kBAAkBonK,EAAA5qP,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAAkG,KAAA,mBAG/B6tE,KAAK,WAAY,CAChB/kD,YAAU,oDACVC,WAAS,2BACE,cACkG,8BAC5G,sBACD+wD,QAAA,CACDwD,UAAK,WACI,OAAEonK,EAAqB5qP,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAAkG,KAAA,8CAI3B,aAAgG,8DACnG,kBAGD6tE,KAAA,SAAa,CACb/kD,YAAY,qDACZC,WAAY,gBACZE,aAAA,SAEA4kD,KAAA,kBAAY,CACZ/kD,YAAY,mDACZC,WAAW,oBACXE,aAAA,SAEA4kD,KAAA,eAAY,CACZ/kD,YAAA,2DACI,qBACJG,aAAU,SAEV4kD,KAAA,sBAAS,aACE,8DACP,sBACHA,KAAA,yBACD/kD,YAAA,+DACI,sBAEJ+kD,KAAA,cAAY,CACZ/kD,YAAY,+CACZC,WAAA,iCACI,SAEJ8kD,KAAA,uBAAY,CACZ/kD,YAAY,mDACZC,WAAA,gCACI,SAEJ8kD,KAAA,eAAY,CACZzjD,SAAA,sBACA0vD,QAAA,CACDwD,UAAU,WACT,OAAaonK,EAAA5qP,EAAgCw+B,EAAA,IAAAx3B,KAAAhH,EAAAkG,KAAA,mBAKlD6tE,KAAA,6VC9Y6BA,KAAA,WACgB/kD,YAAA,wCACvBC,WAAA,aAMG87N,UAAA,oBAGxBh3K,KAAA,kCAAgB,CAChB/kD,YAAA,0CAAoBC,WAAA,oBAAuB87N,UAAA,oBAE3Ch3K,KAAA,wBACE/kD,YAAc,0CAEdC,WAAA,oBAEA87N,UAAM,oBAENh3K,KAAA,uBAA8B,CAE9B/kD,YAAO,+EACE,gCACC,cAEP,qBACK,8BACJ,WACE,kBACD47N,EAAA5qP,EAAAw+B,EAAA,IAAAx3B,KAAAhH,EAAAkG,KAAA,wBAIF,gCACD,sBACH+kP,gBAAA,EACHjrK,QAAA,CAACwD,UAAA,2DAMDzP,KAAA,gCAAmB,0XC5C6CiM,QAAA,CAE3BwD,UAAA,WAErB,OAAAonK,EAAiB5qP,EAAAw+B,EAAA,GAAAx3B,KAAAhH,EAAAkG,KAAA,mBAI/B6tE,KAAO,0BAAS,CACjB/kD,YAAA,gEAEDC,WAAS,mDACP8kD,KAAmB,0CAAJ,0EACL,yCAKC,cAER,+CACF,sNXWa02K,yBAGLl+N,EAAA,EAAA6+N,GAAAC,EAAAC,EAAAxwO,QAAAuwO,EAAAtwO,KAAAswO,EAAAC,EAAAxwO,UACFuwO,EAAAhkP,OACFojP,YAIIt+N,EAAQ,CAAGgP,MAAOmmD,eAGnB+pK,IAAeA,EAAOtwO,OAAYnT,EAAA0jP,EAAA/pK,SAAA35E,EAAA/B,KAAAylP,WAGtC,GAAQn/N,EAAM,MAAAA,EAAUgP,4BWrBE6sD,EAAAhoF,EAAoBqhC,EAAAmmD,KAGhCxnF,EAAgB,aAGX,aAKlB,wBAGJ,oEAEDurP,EAAAr/N,QAAA,sLCzC6C1M,EAAAo6D,WACxB4xK,EAAAxlM,UAE2BsjE,OAAA,WAErC9pG,EAAY8iE,SAChB9iE,EAAA28D,WAGP2e,SAAe,WACN,OAAKt7E,KAKb+rO,EDwBA,KCjBa,EAAA3pK,QAAE,gBAAgB6pK,WAI5BzrP,EAAO,WAGEA,EAAA,WAGPA,EAAwB,QAG5B+uF,GAAA/uF,EAAA,QChCG,OAAM87D,ICGN,SAAM4vL,EAAA54B,EAA0BjiM,EAACkiM,GAAA,IAAA5mM,EAAAvkB,EACtC,IACE,IAAK,IAAAmpB,EAAAxE,EAAY,EAAAsE,GAAkBG,EAAAD,EAAAjW,QAAAkW,EAAAjW,KAAAiW,EAAAD,EAAAjW,OAAA,CACjC,IAAAk/C,EAAOhpC,EAAA3pB,MACTyrN,EAAK94J,EAAAr3D,IAAA4pB,EAAY,KAAAytC,EAAoB,CAAA+4J,eACnC/4J,EAAOnpC,UAIV66N,EAAA54B,EAAA94J,EAAAnpC,SAAAmpC,yBChB4D,QAElD,qEDCA0xL,OAFoDnxO,EAAA,EAAAykF,SAAAC,SAG/D6zH,8BEH8Cx+H,GAAAt0F,EAAA,QA2B/C2rP,GAAA3nP,OAAA4nP,GAAA,EAAA5nP,CATY,aAER,SACD,eACO,YACN,cACF,IAKUi4D,UAAA,CAAqB3kD,OAAAg9E,GAAQ,EACxCp4B,OAAQ,SAAOn2D,EAAMo2D,GACnB,IAAAv0D,EAAKu0D,EAAA5rB,QAAA/nC,EAAAZ,EAAAY,KAAW+rF,EAAC3sF,EAAgB2sF,YAAA5wF,EAAAiE,EAAAjE,QAC/B6C,EAAO21D,EAAA5rB,QAAA/pC,OAAAT,EAAAS,aACR21D,EAAA5rB,QAAAg7C,UAED/kF,EAAKimB,EAAA5lB,EAAA0O,SAAA/O,EAAYT,EAAAS,OACfA,EAAMimB,EAAmC5lB,EAACglP,OAAQrlP,EAAAimB,EAAA5lB,EAAAguF,UAIlDpoF,IAAGzI,OAAAs+N,GAAA,EAAAt+N,CAAAwE,GAAAzC,EAAAyC,KAAAhC,GAEHgC,QAAOzC,EAAAyC,KACRhC,MAAA+lB,EAAA,KAAA/lB,GAED+tF,YAAKA,GAAAxuF,EAAAwuF,YACH5wF,SAAO,IAAAA,EACVmoP,aAAA,IAAA1yO,MAAAs1B,cAMDyD,sBCrD8C45M,GAAA,CAEnCjrJ,iBAAiB,IAgB5BkrJ,GAAahoP,OAAA4nP,GAAA,EAAA5nP,CAAA,sBAAAmuC,sBJdI,SAAApsC,EAAAo2D,GACjB,IAAAjrC,EAAAtpB,cAEW,IAAA7B,IAAqBA,EAAA+1D,IAC/BK,EAAUtiD,MACT,KAAQk1E,GAAgB,EAAA+zH,eAChB,IAAAmpC,EAAM,GAId17M,EAAA4rB,EAAA5rB,QACK,2EKhBgD07M,EAAAjyL,EAAAr3D,IAAA4pB,EAAA,KAAAytC,EAAA,CAAA+4J,WAAAxiL,KAGS,MAAAmxC,GAAAxwD,EAAA,CAAAiK,MAAAumD,GAEnD,QACL,IACA7mE,MAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAEG,WAAAuW,EAAA,MAAAA,EAAAiK,iEDJK,SAAAp1B,EAAAo2D,GAEhB,YAD2B,IAA3Bp2D,IAA2BA,EAAAgmP,IACnB5vL,EAAiBtiD,MACzB,KAAAymF,GAAqB,EAAA+6H,mBACrB,OAAA9uM,EAAA,KAAAxmB,EAAA,CAAA+6F,iBAAA/6F,EAAA+6F,iBAAAvzD,OAAA,CAAA4uB,EAAA5rB,YAEW,KAAA+vD,GAAyD,EAAA86H,qBAAzC,OAAA7uM,EAAA,KAAyBxmB,EAAA,CAAA+6F,iBAAA/6F,EAAA+6F,iBAAAxpF,OAAA,SAAAgpF,GAAA,OAAAA,EAAA39F,KAAAw5D,EAAA5rB,mBAElDxqC,eAiBK/B,OAAA4nP,GAAY,EAAZ5nP,CALI,aAEJ,cAIH,QAEFgoP,UACE,SAAOjmP,GAAA,OAAAwmB,EAAY,EAAM,GAAExmB,EAAO,CAAAmmP,YAAUnmP,EAAAmmP,gBAGhD/5M,UEhCAg6M,GAAensP,EAAA,QAIJ2sJ,GAAA3sJ,EAAkB,WAEtBA,EAAA,QAQMosP,GAAA,CAAA/0O,MAAA,GAAAknF,YAAA,GAAAv4F,WAAA,OCQZqmP,GAAA,CAEDC,WAnBmB,SAAEvmP,EAAAo2D,eACV,IAATp2D,IAAiBA,EAAUqmP,IACvBjwL,EAACtiD,MACN,KAAAsyO,GAAA,EAAAh8M,eAAM,OAAS5jB,EAAY,KAAAxmB,EAAA,CAAAC,WAAA,IAE1B,KAAKmmP,GAAc,EAAA77M,iBACpB,IAAUi8M,EAAVpwL,EAAA5rB,QAAqBrpC,IAAA,SAAAuxM,GACf,gBDGgB+zC,EAAAzmP,GACvB,IAAAqnJ,EAAAT,GAAA,EAAA5nH,qBAAAh/B,yICdA,2FALc0yM,EAAAg0C,UAAgBh0C,EAAwBg0C,SAAAC,SAC/Cj0C,EAAMniM,KAAI,2BAIXmiM,EAUQk0C,CAAAl0C,EAA0BA,EAAA1yM,SAElC,OAACwmB,EAAc,KAAAxmB,EAAA,CAAAsR,MAAAk1O,EAAAvmP,WAAA,SAEjBmmP,GAAmB,EAAA17M,eACpB,OAAAlkB,EAAA,KAAAxmB,EAAA,CAAAw4F,YAAApiC,EAAA5rB,UAGH,OAAIxqC,iBCnBJ6mP,GAAc,CAAA70O,MAAA,GAAAwmF,YAAA,GAAAsuJ,YAAA,GACdC,GAAgB,CAChB70O,KAAK,GACL80O,QAAS,GACT31O,OAAA,GACA41O,kBAAU,cAEV,SAAAjnP,EAAAo2D,GAE4B,YAAJ,IAAbp2D,IAAgBA,EAAsB6mP,IAArBzwL,EAAAtiD,MAC5B,KAAQozO,GAAa,EAAAC,UACnB,OAAK3gO,EAAA,KAAAxmB,EAAY,CAAA8mP,YAAU,EAAA90O,MAAAokD,EAAA5rB,eACzB08M,GACK,EAAAx8M,eAIP,OAAKlkB,EAAA,KAAAxmB,EAAY,CAAAw4F,YAAcpiC,EAAA5rB,iBAM/BxqC,QAKD,SAAAA,EAAAo2D,GAED,YADa,IAAbp2D,IAAaA,EAAA+mP,IACb3wL,EAAAtiD,MAEa,KAAAozO,GAAA,EAAAzpC,SACL,OAAAj3L,EAAa,KAAAxmB,EAAA,CAAAkS,KAAAkkD,EAAA5rB,UACrB,KAAA08M,GAAA,EAAAE,2MC9B8CC,GAAAptP,EAAA,QAM9CqtP,GAAW,CACXriP,KAAA,GACAuzF,YAAW,GACXsuJ,YAAW,GAmBDS,GAAA,CACRC,QAjByB,SAAGxnP,EAAAo2D,GAE5B,YADS,IAAVp2D,IAAUA,EAAAsnP,IACDlxL,EAAAtiD,MACR,KAAQuzO,GAAoB,EAAAI,YAI5B,OAAAjhO,EAAA,KAAAxmB,EAAA,CAAA8mP,YAAA,EAAA7hP,KAAAmxD,EAAA5rB,UACD,KAAA68M,GAAU,EAAAh6B,sBACD,OAAA7mM,EAAA,KAAAxmB,EAAA,CAAAw4F,YAAqBpiC,EAAA5rB,UAK7B,OAAAxqC,IAUA0nP,GAAaztP,EAAK,iBAMlB0tP,GAAQr2O,GACR,OAAMA,EAAEnQ,IAAAymP,IAAc53O,KAAK,SAAClP,EAAAmP,GAAA,OAAAA,EAAA43O,SAAA/mP,EACvB+mP,UACH/mP,EAAAiE,KAAW8R,cAAA5G,EAAAlL,iBAMd6iP,GAAUnB,GACT,IAAA93O,EAAQ83O,SACR93O,EAAAk5O,SAAQ,EAMRl5O,EAAAtN,OAAA,GACDsN,EAAA5J,KAAU4J,EAAAm5O,UACTn5O,EAAQk5O,SAAA,IAENl5O,EAAAouB,OAAA,GACApuB,EAAA5J,KAAA4J,EAAAuD,KACAvD,EAAKk5O,SAAO,IASbl5O,EAAAiuB,OACDjuB,EAAA9S,KAAA,0BACD8S,EAAQ5J,KAAC4J,EAAAiuB,KAEGjuB,EAAAk5O,SAAA,GACF,WAAXl5O,EAAWiuB,OACXjuB,EAAak5O,UAAA,0IClFfE,GAAA,CACEp/N,gJAT6E,OAAAnC,EAAA,KAAAxmB,EAAA,CAAArE,MAAAy6D,EAAA5rB,QAAAw9M,WAAA5xL,EAAA5rB,QAAAglF,OAAAtqH,OAAA,IAEb,KAAAwiP,GAAA,EAAAt4M,sBACM,OAAA5oB,EAAA,KAAAxmB,EAAA,CAAAgR,YAAA22O,GAAAvxL,EAAA5rB,WAEb,OAAAxqC,IAIkDioP,GAAChuP,EAAA,WAIjGA,EAAK,WAKWA,EAAQ,WAkBjC,WACA21B,EAAA,mBAAAs4N,uBACM,QAEN,iBACE,IA6CHC,GAAA,CACH/sP,UA3CmB6C,OAAA4nP,GAAoB,EAApB5nP,CAAoBmqP,cACzB,QACRH,GAAiC,SACjC,SAAMjoP,EAAWo2D,GAAY,OAAC5vC,EAAA,KAAAxmB,EAAA,CAAAgR,YAAA22O,GAAAvxL,EAAA5rB,mCAIZ,kBAChBxqC,GAAY,OAAMwmB,EAAiB,KAAAxmB,EAAA,CAAAqoP,UAAAz4N,EAAA,mBAAA04N,wBAGrC,QACAL,GAAmC,kBAC3BjoP,GAAgB,OAAAwmB,EAAA,KAAAxmB,EAAA,CAAAqoP,UAAAz4N,EAAA,mBAAA24N,mCAGrB,kBACIvoP,GAAU,OAAAwmB,EAAA,KAAAxmB,EAAA,CAAAwoP,YAAA,iBAGjB,WACS,kBACHxoP,EAAAo2D,GAAA,OAAA5vC,EAAA,KAAAxmB,EAAA,CAAAqoP,UAAAz4N,EAAA,mBAAA64N,OAAAD,YAAA,EAAAE,UAAAtyL,EAAA5rB,QAAApuC,MAAA,IAAAugO,GAAA,GAAAhhO,MAAA,0BAAAiqB,SAAA,EAAAxoB,SAAA,mBAEH,QACF6qP,GAAA,SAEH,SAAOjoP,EAAAo2D,GAAA,OAAA5vC,EAAoB,KAAAxmB,EAAA,CAAAqoP,UAAAz4N,EAAK,mBAAA+4N,UAAYvsP,MAAKg6D,EAAQ5rB,QAAAg+M,YAAA,OAG3DtyL,UAAA,QACM+xL,GAAoB,SACtB,SAAOjoP,EAAKo2D,GAKd,OADAp2D,EAAM5D,MAAA6tB,UACAzD,EAAmB,KAAAxmB,EAAA,CAAAqoP,UAAAz4N,EAAqC,mBAACs4N,WAAA9rP,MAAA,KAAAosP,YAAA,EAAAE,UAAA,mBAMlEE,YAAAC,GAAA,MAIO5uP,EAAoB,WAGzBA,EAAA,qBC9FoB6uP,GAAA7uP,EAAA,QAY8DmlK,GAAAnlK,EAAA,QA8C1B8wL,GAAA9wL,EAAA,QAIA8uP,GAAA9uP,EAAA,QAIzDu0H,GAASv0H,EAAA,sBAaR,SAAA+uP,EAAAhpP,EAAA6zC,EAAAknE,GACUh7G,KAAAC,QACXD,KAAS8zC,WAAWA,EACpB9zC,KAAAg7G,WAAiBA,SAEjBiuI,EAAAxoP,UAAyByoP,eAAI,WAC7B,GAAAlpP,KAAAC,MAAiB86B,OAAIouN,GAAA,EAAA73J,QACrB,YAEA,IAAA83J,EAAsBppP,KAAA8zC,WAAAtiC,OAAA63O,IACtB,OAAW,IAAJD,EAAIjkP,OACA,KAEJjH,OAAAuwH,GAAA,EAAAvwH,CAAAkrP,EAAA,IAAA16H,UAAA,EAAAC,WAAA,EAAAC,YAAA,IAAAC,SAAA,EAAAl6E,WAAA,EAAAjjC,UAAA,aAEGjR,UAAA6oP,eAAA,WACR,GAAGtpP,KAAEC,MAAA86B,OAAaouN,GAAA,EAAA73J,QACnB,YAKD,IAAQi4J,EAAOvpP,KAAA8zC,WAAAtiC,OAAA,SAAAjE,GAAA,OAAA87O,GAAA97O,KACf,GAAe,IAAfg8O,EAAepkP,OACf,OAAc,KAEd,IAAO0xD,EAAO0yL,EAAAnoP,IAAA,SAAAmM,GAUd,IATA,IAAWuG,EAAEvG,EAAAuG,OACHipL,EAAIjpL,EAAA3O,OACNmR,EAAA/I,EAAApI,OACEuG,EAAAoI,EAAA1S,IAAA,SAAAuS,GAAA,OACV9X,KAAkB8X,EAAA3O,KACR+O,KAAAJ,EAAAI,KACFY,WAAKhB,EAAAc,OAAAE,cAEFhJ,EAAO,GACHvF,EAAA,EAAAA,EAAAkQ,EAAAlQ,IAA0B,CAG9B,IAFV,IAAA8G,EAAA,GAEU6B,EAAwB,EAAGA,EAAAguL,EAAiBhuL,IAChD7B,EAAA0C,KAAArC,EAAAuG,OAAA/E,GAAaT,OAAArN,IAAUmF,IAEpBuF,EAAAiE,KAAA1C,GAEV,OAAW,IAAAmyJ,GAAgB,GAC1B3zJ,UAEHC,uBAIa,OAAA0zJ,GAAoC,EAAA71I,WAAA,EAAA/C,EAAA,OAAA44I,GAAA,GAAAxoG,KAE/CoyL,EAAMxoP,UAAA+oP,cAAuB,WAC7B,GAAOxpP,KAAAC,MAAA86B,OAAAouN,GAAuB,EAAAx4B,KAC9B,gEAICxxE,EAAAjhJ,OAAAg9G,GAAA,EAAAh9G,CAAA8B,KAAAC,MAAAqsD,iBACUm9L,EAAcvrP,OAAAg9G,GAAwD,EAAxDh9G,CAAwD6sK,EAAA5rB,GAChFxzI,EAAU89O,EAAA99O,KACDvE,EAAAqiP,EAAAriP,OACR,OAAQqf,EAAc,KAAAgjO,EAAA,CAAA99O,OAAAvE,YAEd6hP,cAKNI,GAAO97O,GAMT,OAAC,IAAAA,EAAAuG,OAAA3O,QACDoI,EAAAuG,OAAA,GAAAC,OAAAq3G,GAAA,UAAA53G,SAyBA+5M,GAAA,MACD,SACC/uN,GAAA,OAmFAkrP,GAAC,kBACDzpP,MAAAmrH,GAAA,aAAA+8H,mBACD,GACC/gP,OAAQ,GACRiuB,MAAM,eACI+1F,GAAA,sBA5EW,gBAEfnlH,iBACF,qBACD,6BAEM,KAYT0jP,gBAAC,KACDC,kBAAA,wBACS,EACTC,mBAAQ,GACR/pJ,QAAQ,WACA,gBACN,QACA,CAWD1hG,KAAA,KACDI,GAAA,KACDL,IAAAovN,IAECttH,cAAQ,CACN7hG,KAAA,KAIDI,GAAA,gBAEO,EACRsrP,UAAQ,KACRt5B,cAAQ,gBACE,WACR,EACFu5B,UAAC,GACDl5B,SAAA,YA/DmC,aAC1B,EACTvuL,SAAC,EACDnjB,OAAA,QACD,EACC4wM,IAAA,GA4DAR,QAAQ,EACRy6B,eAAQ,QACA,aACN,YAGE,eACK,gBACDN,SAsBC,oBAgBTnuM,MAAC0uM,OAKQ/rP,OAAA4nP,GAEL,EAFK5nP,CAEL,IAIHi4D,UAAA,CACD3kD,OAAA04O,GAAA,SACD,SAAUjqP,EAAAo2D,GACT,IAAQ/zB,EAAAriC,EAAAqiC,QACAxgC,EAAAu0D,EAAC5rB,QAAO/tC,EAAMoF,EAAApF,MAAAgE,EAAAoB,EAAApB,MAMrBypP,EAAA1jO,EAAA,EAAA6b,EAAA2H,MAAA,EAAAvtC,EAAA,IAAA+pB,EAAA,KAAA/lB,IAAA4hC,EAAA2H,MAAAvtC,EAAA,IACD,OAAA+pB,EAAA,KAAAxmB,EAAA,CAAAqiC,QAAA6nN,EAAAC,gCAAAnkP,EAAA8jP,UAAA7rP,OAAAg9G,GAAA,EAAAh9G,CAAAisP,EAAAlqP,EAAAyxN,yBAGAv7J,UAAQ,QACE+zL,GAA2B,SACnC,SAAOjqP,EAAAo2D,GAQR,IAAA/zB,EAAAriC,EAAAqiC,QACDxgC,EAAAu0D,EAAA5rB,QAAA/pC,EAAAoB,EAAApB,MAAAhE,EAAAoF,EAAApF,MAEQ2tP,EAAAnsP,OAAAg9G,GAAmB,EAAnBh9G,CAAmBwC,EAAA4hC,EAAA5lC,GACnBytP,EAAC1jO,EAAa,EAAA6b,GAEd,OADE6nN,EAAAztP,GAAA2tP,EACF5jO,EAAE,KAAAxmB,EAAA,CAAAqiC,QAAc6nN,EAAAJ,UAAO7rP,OAAAg9G,GAA4B,EAA5Bh9G,CAA4BisP,EAAAlqP,EAAAyxN,mCAGvD,QACAw4B,GAA2B,kBACnBjqP,EAASo2D,SACRA,EAAA5rB,QAAA5rC,aACN4nB,EAAA,KAAAxmB,EAAA,CAAAqqP,gCAEH,QACAJ,GAA2B,kBACpBjqP,EAAKo2D,WACF5rB,QAAS1P,cACR,KAAA96B,EAAA,CAAA86B,sBAIR,QACJmvN,GAAA,SACD,SAAOjqP,EAAAo2D,GAKR,IAAA/J,EAAA+J,EAAA5rB,QAAA6hB,gBACDi+L,EAAArsP,OAAA8sL,GAAA,EAAA9sL,CAAAouD,GACD6yF,EAAUjhJ,OAAAg9G,GAAA,EAAAh9G,CAAAouD,GACD6lK,EAAAj0N,OAAAg9G,GAAgB,EAAhBh9G,CAAgB+B,EAAAkyN,WAAAhzE,GAcxB,OAbQjhJ,OAAA8sL,GAAM,EAAN9sL,CAAM+B,EAAAqsD,mBAAAi+L,GACZrsP,OAAOg9G,GACF,EADLh9G,CACU+B,EACRw6G,mBAUJh0F,EAAA,KAAAxmB,EAAA,CAAAqsD,kBAAAgrD,cAAA7wF,EAAA,KAAAxmB,EAAAq3G,cAAA,CAAAr3G,MAAAsqP,EAAAn/H,GAAA,aAAAo/H,UAAAp/H,GAAA,aAAA+8H,aAAA97L,OAAAk+L,EAAAE,UAAAF,GAAAtqP,EAAAwqP,SAAA12J,QAAAw2J,EAAAp4B,kBAGAh8J,UAAQ,QACE+zL,GAAS,SACT,SAAAjqP,GAER,IAAIqiC,EAAQpkC,OAAMg9G,GAAO,EAAbh9G,iBACVg9G,GAAa,GAAAj7G,EAAAw6G,mBACdh0F,EAAA,KAAAxmB,EAAA,CAAAqiC,UAAA2H,QAAAygN,YAAA,KAAAC,YAAA,KAAAx4B,WAAA,KAAAy4B,iBAAAC,QAAA5qP,EAAA6qP,WAAAf,UAAA7rP,OAAAg9G,GAAA,EAAAh9G,CAAAokC,EAAAriC,EAAAyxN,oBAAAp6G,cAAAoyI,KAAA31J,SAAA,iBAKM,CAMTviF,OAAC04O,GAAA,EACD9zL,OAAA,SAAAn2D,GACD,OAAUwmB,EAAA,KAAAxmB,EAAA,CAAA0uN,mBAAA1oN,iBAGA,CACTuL,OAAC04O,GAAA,EACD9zL,OAAA,SAAAn2D,EAAAo2D,GACD,IAAA00L,EAAU10L,EAAA5rB,QAAAsgN,YACT,OAAQtkO,EAAA,KAAcxmB,EAAA,CAAAmqP,2BAAAW,OAQrB50L,UAAA,CACD3kD,OAAA04O,GAAA,SACD,SAAUjqP,EAAAo2D,GACT,IAAQv0D,EAAAu0D,EAAA5rB,QAAA6/M,EAAAxoP,EAAgBwoP,eAAAU,EAAAlpP,EAAAkpP,YAAA1oN,EAAAxgC,EAAAwgC,QAAAnjB,EAAArd,EAAAqd,MAAA4b,EAAAj5B,EAAAi5B,KAAAg1L,EAAAjuN,EAAAiuN,GAAApB,EAAA7sN,EAAA6sN,cACxB,OAAQloM,EAAc,KAAAxmB,EAAA,CAAAqqP,iBACZU,cACR7rO,MAAOA,EAKR4b,OACDuH,UAAAquE,aAAA,EAAAo5I,UAAA7rP,OAAAg9G,GAAA,EAAAh9G,CAAAokC,EAAAriC,EAAAyxN,qBAAA3B,EAAA,CAAApB,gBAAA9oE,OAlPmC,aAC1B,EACTvjH,SAAC,EACDnjB,OAAA,QACD,EACC4wM,IAAA,QAgPA55J,UAAQ,QACN+zL,GAA6B,EAC/B9zL,OAAC,SAAAn2D,EAAAo2D,GACD,IAAAq7J,EAAAr7J,EAAA5rB,QAAAinL,mBACD5vN,EAAU2kB,EAAA,EAAAwkO,GAAAv5B,EAAAzxN,EAAA86B,MAAA,GAAAivN,EAAAloP,EAAA,GAAAi5B,EAAAj5B,EAAA,GACD6sN,EAAA1uN,EAAA4wN,UAAA5wN,EAAiB4wN,SAAAlC,cAEjBm8B,EAAYp5B,EAAUruN,WAAaoB,wBACzCvG,OAAIg9G,GAAc,EAAlBh9G,CAAkB+B,EAAAw6G,mBAChBh0F,EAAO,KAAAxmB,EAAK,CAAKyxN,mBAAcA,EAAGg5B,YAAA,KAAAC,YAAA,KAAAx4B,WAAA,KAAA5C,QAAA,EAAAj4G,cAAAoyI,KAAA31J,SAAA,EAAA+2J,YAAAF,iBAAAC,QAAAC,GAAAf,UAAA,GAAAC,iBACnCjvN,OAED4zL,cAAOA,OAGVx4J,UAAU,CACT3kD,OAAQ04O,GAAiB,EACzB9zL,OAAQ,SAACn2D,GACP,OAAMwmB,EAAsB,KAAaxmB,EAAA,CAAAirP,mBAAA,EAAAtB,mBAAA,EAAA/jG,OAvQR,aAC1B,EACTvjH,SAAC,EACDnjB,OAAA,QACD,EACC4wM,IAAA,kBAqQG,QAEDm6B,GAAmB,EACrB9zL,OAAC,SAAAn2D,EAAAo2D,GACD,OAAA5vC,EAAA,KAAAxmB,EAAA,CAAA2pP,mBAAA,EAAAuB,wBAAA90L,EAAA5rB,QAAA0gN,6BAGAh1L,UAAQ,QACE+zL,GAA2B,SACnC,SAAOjqP,EAAAo2D,GAKR,IAAAypC,EAAAzpC,EAAA5rB,QAAAq1D,QACD,OAAAr5E,EAAA,KAAAxmB,EAAA,CAAA6/F,UAAA8pJ,mBAAA,EAAAsB,mBAAA,EAAAd,gCAAAnkP,EAAA4/I,OAzRmC,aAC1B,EACTvjH,SAAC,EACDnjB,OAAA,QACD,EACC4wM,IAAA,QAuRA55J,UAAQ,QACE+zL,GAAA,SACR,SAAOjqP,EAAAo2D,GAIR,IAEF8zL,EAFE7nN,EAAAriC,EAAAqiC,QACDxgC,EAAAu0D,EAAA5rB,QAAA2gN,EAAAtpP,EAAAspP,aAAA1uP,EAAAoF,EAAApF,MAAA2uP,EAAAvpP,EAAAupP,SAgCD,OA5BGlB,OAFMlkP,IAAAvJ,EAEC4lC,EAAAlhC,IAAA,SAAAV,EACG0F,GAGX,IAAAikP,EAAAgB,EAAA5kO,EAAA,KAAA/lB,GAAA0qP,GACD,OAAAltP,OAAAg9G,GAAA,EAAAh9G,CAAAmsP,EAAA/nN,EAAAl8B,KAQCk8B,EAAAlhC,IAAA,SAAAV,EAAA0F,GACD,GAAAA,IAAA1J,EAAA,CACS,IAAA2tP,EAAAgB,EAAA5kO,EAAA,KAAA/lB,GAAA0qP,GACD,OAAAltP,OAAAg9G,GAA2B,EAA3Bh9G,CAA2BmsP,EAAA/nN,EAAAl8B,GAE1B,OAAA1F,IAUA+lB,EAAA,KAAAxmB,EAAA,CAAAqiC,QAAA6nN,EAAAJ,UAAA7rP,OAAAg9G,GAAA,EAAAh9G,CAAAisP,EAAAlqP,EAAAyxN,mCAGA,CAITlgN,OAAC04O,GAAA,EACD9zL,OAAA,SAAAn2D,GACD,OAAUwmB,EAAA,KAAAxmB,EAAA,CAAAsvN,QAAA,EAAAj4G,cAAA7wF,EAAA,KAAAxmB,EAAAq3G,cAAA,CAAAr3G,MAAAmrH,GAAA,aAAAlR,QAAA7kF,MAAA,OAAA0+D,SAAA,EAAA8xD,OA5U0B,aAC1B,EACTvjH,SAAC,EACDnjB,OAAA,QACD,EACC4wM,IAAA,kBA0US,CAITv+M,OAAC04O,GAAA,EACD9zL,OAAA,SAAAn2D,EAAAo2D,GACD,IAAA/zB,EAAUriC,EAAAqiC,QAAAynN,EAAA9pP,EAAA8pP,UACDrtP,EAAA25D,EAAA5rB,QAAA/tC,MACR,GAAQ4lC,EAAAn9B,QAAM,EACZ,OAAOlF,EAKT,IAAAkqP,EAAA1jO,EAAA,EAAA6b,EAAA2H,MAAA,EAAAvtC,GAAA4lC,EAAA2H,MAAAvtC,EAAA,IACD4uP,EAAU7kO,EAAA,EAAAsjO,EAAA9/M,MAAA,EAAAvtC,GAAAqtP,EAAA9/M,MAAAvtC,EAAA,IACT,OAAQ+pB,EAAA,KAAAxmB,EAAiB,CAAAqiC,QAAA6nN,EAAAC,gCAAAnkP,EAAA8jP,UAAAuB,iBAGhB,QAGLpB,GACM,EAEV9zL,OAAC,SAAAn2D,EAAAo2D,GACD,OAAA5vC,EAAA,KAAAxmB,EAAA,CAAA8uN,UAAA,OAGA54J,UAAQ,QACE+zL,GAAA,SACR,SAAOjqP,GAQR,OAAAwmB,EAAA,KAAAxmB,EAAA,CAAA8uN,UAAA,EAAA+6B,eAAA7jP,EAAA4/I,OAtXkC,aAC1B,EACTvjH,SAAC,EACDnjB,OAAA,QACD,EACC4wM,IAAA,QAoXA55J,UAAQ,CACR3kD,OAAQ04O,GAAc,SACZ,SAAAjqP,EAAAo2D,GACR,IAAA/zB,EAAO+zB,EAAA5rB,QAAAnI,QAIR,OAAA7b,EAAA,KAAAxmB,EAAA,CAAAqiC,UAAA2H,QAAA8/M,UAAA7rP,OAAAg9G,GAAA,EAAAh9G,CAAAokC,EAAAriC,EAAAyxN,yBAGDv7J,UAAQ,CACR3kD,OAAQ04O,GAAc,SACZ,SAAAjqP,EAAAo2D,GACR,OAAO5vC,EAAA,KACFxmB,EAAKo2D,EACR5rB,YAIL0rB,UAAU,CACT3kD,OAAQ04O,GAAA,EACR9zL,OAAQ,SAACn2D,GACP,IAAAuwN,GAAOvwN,EAAAuwN,aACR,OAAAA,EACD/pM,EAAA,KAAAxmB,EAAA,CAAAuwN,iBAGS/pM,EACY,EACvB,GAAAxmB,EAAmC,CAAAuwN,eAAAk6B,YAAA,UAKnCv0L,UAAW,QACL+zL,GAAiB,SACnB,SAAOjqP,OACR2wN,GAAA3wN,EAAA2wN,aAED,OAAAA,EACMnqM,EAA+B,KAAOxmB,EAAA,CAAA2wN,iBAY7CnqM,EAAA,KAAAxmB,EAAA,CAAA2wN,eAAA+5B,YAAA,IAAAtrF,GAAA,OAIDlpG,UAAM,CACN3kD,OAAM04O,GAAyC,EAC/C9zL,OAAM,SAAan2D,EAAAo2D,GAEnB,IAAA/zB,EAAA+zB,EAAA5rB,QAAAnI,QACI,OAAM7b,EAA6B,EAAC,GAAAxmB,EAAW,CAAAqiC,UAAAynN,UAAA7rP,OAAAg9G,GAAA,EAAAh9G,CAAAokC,EAAAriC,EAAAyxN,yBAIlDv7J,UAAA,CAED3kD,OAAO04O,GAEL,SAGA,SAAWjqP,EAAAo2D,GACX,IAAAk1L,EAAUl1L,EACV5rB,QAAS8gN,gBAIX,OAAA9kO,EAAA,KAAAxmB,EAAA,CAAAsrP,gBAAAr3N,MAAA91B,KAAAmtP,QAQAp1L,UAAM,CACN3kD,OAAK04O,GAAY,SACf,SAAajqP,GACd,OAAAwmB,EAAA,KAAAxmB,EAAA,CAAA0pP,gBAAA,oBAIC,QACAO,GAEE,SAGH,SAAAjqP,GAEK,OAAAwmB,EAAe,EAAO,GAACxmB,EAAU,CAAC0pP,gBAAS,UAGjDxzL,UAAa,CACb3kD,OAAQ04O,GAAoC,EAE5C9zL,OAAO,SAAAn2D,EAAAo2D,UAMH5vC,EAAO,KAAAxmB,EAAA,CAAA0pP,gBAAAtzL,EAAA5rB,QAAApV,MAAAq1N,iBAAAzkP,EAAA0kP,iBAAA1kP,EAAAksN,gBAAAlsN,EAAA4/I,OA1e0B,aAC1B,EACTvjH,SAAC,EACDnjB,OAAA,QACD,EACC4wM,IAAA,kBAweI,CAGNv+M,OAAA04O,GAAA,EAEI9zL,OAAA,SAAAn2D,EAAwBo2D,GAC5B,OAAA5vC,EAAA,KAAAxmB,EAAA,CAAA4pP,mBAAAxzL,EAAA5rB,QAAAo/M,wBAGA1zL,UAAM,CACN3kD,OAAM04O,GAAoC,EAE1C9zL,OAAQ,SAAGn2D,EAAWo2D,GAChB,OAAA5vC,EAAmC,KAAAxmB,EAAA,CAAA6/F,QAAAzpC,EAAA5rB,QAAAq1D,aAIxC3pC,UAAA,CAED3kD,OAAI04O,GAAc,SAChB,SAAcjqP,GACf,OAAAwmB,EAAA,KAAAxmB,EAAA,CAAAurP,aAAA,OAIAr1L,UAAA,CAED3kD,OAAQ04O,GAAsB,EAC9B9zL,OAAA,SAAAn2D,EAAAo2D,GAEF,IAAAv0D,EAAAu0D,EAAA5rB,QAAAtrB,EAAArd,EAAAqd,MAAA8gF,EAAAn+F,EAAAm+F,8DA3gBuC,aAC1B,EACT39D,SAAC,EACDnjB,OAAA,QACD,EACC4wM,IAAA,mBA0gB2Bv+M,OAAA04O,GAA2B,EACxD9zL,OAAQ,SAAOn2D,EAAMo2D,GACnB,IAAAo1L,EAAKp1L,EAAA5rB,QAAAghN,oBACKhlO,EAAA,KAAqDxmB,EAAA,CAAAq3G,cAAA7wF,EAAA,KAAAxmB,EAAAq3G,cAAA,CAAAr3G,MAAAwrP,IAAA13J,QAAA03J,IAAArgI,GAAA,aAAAlR,SAAAuxI,IAAArgI,GAAA,aAAAo/H,oCAI3D,SACF,SAAOvqP,EAAAo2D,OAKRo0L,EAAAp0L,EAAA5rB,QAAAggN,SAED,OAAKhkO,EAAA,KAAYxmB,EAAA,CAAUwqP,SAACA,iBAIvB,QACHP,GAA8C,kBAC5CjqP,EAAOo2D,SACRA,EAAA5rB,QAAAgwE,yBAEDh0F,EAAO,KAAAxmB,EACF,CAAAw6G,kBACHA,iBASM,QACRyvI,GAAqB,kBACnBjqP,EAAao2D,UACdq1L,GAAAzrP,EAAAo2D,kBAMM,SAAAp2D,EAAAo2D,SAMRA,EAAA5rB,QAAAwC,SAEDkhE,EAAKlhE,EAAAkhE,QAAAs9I,EAAAx+M,EAAwBhtC,MAACmH,EAAA6lC,EAAA7lC,OAAAiuB,EAAA4X,EAAA5X,kBAE5BA,EAAMulF,UACN36G,KAQD+qP,YAAArvP,KAAA,aAAA05B,GACF5O,EAAA,KAAAxmB,EAAA,CAAA8zF,SAAA,EAAAujB,cAAArqE,EAAAy9M,YAAA,KAAAC,YAAA,KAAAx4B,WAAA,KAAAy4B,kBAAA,EAAA/kG,OA/kBoC,aAC1B,EACTvjH,SAAC,EACDnjB,OAAA,QACD,EACC4wM,IAAA,UA6kBQR,EAAAphH,EAAAw9I,QAAAx9I,EAAAw9I,QAAoCx9I,EAAAK,UAAA,EAC5Co1C,EAAI,IAASgoG,GAAgB3rP,EAAAmH,EAAA+mG,EAAA6M,cAC3B4oC,EAAaslG,mBACPtlG,EAAgB0lG,mBACf1lG,EAAA4lG,mBAEVvpP,EAAAyxN,mBAAAruN,WAAAQ,UAAA,CAED,IAAOu2G,EAAMhzG,EAAAhG,IAAA,SAAA4E,GAAA,OAAA9H,OAAAktH,GAAA,qBAAAltH,CAAA8H,KACb/F,EAAA+qP,YAAArvP,KAAA,gBAAAy+G,GAGA,OAAO3zF,EAAgB,KAAAxmB,EAAA,CAAAsvN,UAAAj4G,cAAArqE,EAAAy9M,cACvBC,yHA/lBqC,aAC1B,EACTroN,SAAC,EACDnjB,OAAA,QACD,EACC4wM,IAAA,4FC9L4C,IAAA9vN,EAAA4wN,UAAA,aAAAnuN,EAMnC,OAAA+jB,EAA6B,KAAAxmB,EAAA,CAAA4wN,WAAAhrE,OAAA,CAAAlhI,YAAA,EAAA2d,SAAA,EAAAnjB,OAAA,EAAA4b,MAAA,EAAAg1L,IAAA,KAExC,IAAAprM,GAAe,IAAAgC,EAAA5lB,EAAAkwF,QAAA4/H,IAAAlsM,WAAA,GAAA1kB,EAAA4wN,SAAAlsM,YACf2d,GAA4B,IAAhB3b,EAAA5lB,EAAAkwF,QAAA4/H,EAAYA,EAAIvuL,QAAA,GAAAriC,EAAA4wN,SAAAvuL,SAC5BnjB,GAAiB,IAALwH,EAAK5lB,EAAAkwF,QAAA4/H,IAAA1xM,MAAAouM,GAAAttN,EAAA4wN,SAAA1xM,OACjB4b,GAAmC,IAAzBpU,EAAyB5lB,EAAAkwF,QAAA4/H,IAAA91L,KAAAouN,GAAA,EAAA73J,QAAArxF,EAAA4wN,SAAA91L,MACnCg1L,GAAgC,IAAhCppM,EAAA5lB,EAAyBkwF,QAAO4/H,IAAAd,GAAA70G,GAAA,EAAAj7G,EAAA4wN,SAAAd,IAChC,OAAAtpM,EAAA,KAAAxmB,EAAA,CAAA4wN,WAAAhrE,OAAAp/H,EAAA,KAAAxmB,EAAA4lJ,OAAA,CAAAlhI,aAEW2d,QAAiBA,EAACnjB,QACrB4b,KAAMA,EACZg1L,GAAKA,UAGA,SAAA5iL,EAAA0+M,OAMLC,EAAK,SAAA3+M,EAAA/vC,KAAA4H,MAAYmoC,EAAA/vC,KAAoBo0F,UAC5BrkD,EAAA/vC,KAAA2uH,KAEThxF,EAAK8wN,GAAA1C,GAAY,EAAA73J,UACR,UACVw6J,GACD9B,EAAap6O,KAAAu5O,GAAA,EAAA73J,SAGAy6J,GACb/B,EAASp6O,KAAcu5O,GAAA,EAAAx4B,oCCwCZq7B,GAAA,CACT9wI,QA5DS,SAAAj7G,EAAAo2D,GACX,IAAAv0D,EAAA+S,EAAWE,EAEX,YADoC,IAApC9U,IAAoCA,EAAAgsP,IACpC51L,EAAYtiD,MACZ,KAAAm2O,GAAe,EAAAn2O,KACf,IACAm4O,EAAmB,CACnBpxN,KAFmBu7B,EAAA5rB,QAAA0hN,SAEUhD,GAAA,EAAAruN,KAAA76B,EAAAs7C,MAAAt7C,EAAA66B,KACjBygB,MAAK0wM,GAAA1wM,OAEjB,OAAc90B,EAA4B,KAAAxmB,EAAAisP,EAAA,CAAAnsL,OAAA,IAG/B,KAAAmqL,GAAqB,EAAAkC,UAC/B,OAAU3lO,EAAA,KAAAxmB,EAAA,CAAA8/D,OAAA,EAAAxkB,MAAA90B,EAAA,KAAA4vC,EAAA5rB,QAAA4hN,aAET,KAAQnC,GAAmB,EAACoC,aAM5B,OAAAj2L,EAAA5rB,QAAA8hN,QAAA5tO,OAAA6tO,UAAAvsP,EAAA66B,KAAA6zL,eACSs9B,GAEDxlO,EAAoB,KAAAwlO,GAAA,CAAAnxN,KAAKrU,EAA0B,KAAOwjO,GAAG,CAAA3nN,QAAAriC,EAAA66B,KAAAwH,QAAAqsL,cAAA1uN,EAAA66B,KAAA6zL,kBAEtE,KAAAo6B,GAAU,EAAAh1O,KACD,IAAArT,EAAA21D,EAAA5rB,QAAA/pC,MACA,IAAAA,IAAMA,EAAEyoP,GAAY,EAAAruN,MAC5B,OAAA76B,EAEQ,IAAA8/D,IAAAr/D,EAAAyoP,GAAA,EAAA5tM,OACAkxM,EAAMxsP,EAAEkpP,GAAY,EAAAruN,MAC5B4xN,EAAAzsP,EAAAkpP,GAAA,EAAA5tM,OACD,OAAU90B,EAAA,KAAAxmB,IAAA6B,EAAA,CAAAi+D,UAAAopL,GAAA,EAAAruN,MAAA6xN,GAAAF,EAAAp2L,EAAA5rB,QAAA0+M,GAAA,EAAAruN,MAAAh5B,EAAAqnP,GAAA,EAAA5tM,OAAAoxM,GAAAD,EAAAr2L,EAAA5rB,QAAA0+M,GAAA,EAAA5tM,OAAAz5C,IAET,KAAQooP,GAAU,EAAAn2O,KASlB,OARA04O,EAAAxsP,EAAAkpP,GAAA,EAAAruN,MACS4xN,EAAAzsP,EAAAkpP,GAAA,EAAA5tM,OACDr9C,OAAAg9G,GAAA,EAAAh9G,CAAAuuP,EAAAhyI,mBACAv8G,OAAAg9G,GAAoB,EAApBh9G,CAAoBwuP,EAAAjyI,mBAK5Bh0F,EAAA,KAAAxmB,IAAA4U,EAAA,IAAAs0O,GAAA,EAAAruN,MAAA6xN,GAAAF,EAAAp2L,EAAA5rB,QAAA0+M,GAAA,EAAAruN,MAAAjmB,EAAAs0O,GAAA,EAAA5tM,OAAAoxM,GAAAD,EAAAr2L,EAAA5rB,QAAA0+M,GAAA,EAAA5tM,OAAA1mC,IAGA,GAAAwhD,EAAQ5rB,QAAC,CACT,IAAAmiN,EAAAv2L,EAAA5rB,QAAAmiN,UACD,QAAU3mP,IAAV2mP,EAAU,CAED,IAAAC,EAAc5sP,EAAK2sP,GAC3B,OAAAnmO,EAAA,KAAAxmB,IAAA8U,EAAA,IAAA63O,GAAAE,GAAAD,EAAAx2L,GAAAthD,KAGA,OAAM9U,IAWK8sP,GAAA7yP,EAAA,qBCpFiC8yP,GAAA,CACXr9O,QAAA,GAExB8oF,YAAA,GACX9uB,WAAyBsjL,GAAA,EAAAl6E,KACzBg0E,YAAsB,EACtB7+K,WAAW,GACXglL,2BAAY,GAsBCC,GAAA,CACbx9O,QArBA,SAAyB1P,EAAAo2D,GAEzB,YADA,IAAAp2D,IAAwBA,EAAA+sP,IACxB32L,EAAYtiD,MACZ,KAAAg5O,GAAA,EAAAjpC,YAEW,OAAer9L,EAAqC,KAAAxmB,EAAA,CAAA8mP,YAAA,EAAAp3O,QAAA0mD,EAAA5rB,UAApC,KAAAsiN,GAAQ,EAAAnpC,sBAC3B,OAAOn9L,EAAM,KAAAxmB,EAAA,CAAAw4F,YAAApiC,EAAA5rB,UACnB,KAAKsiN,GAAY,EAAAK,cACf,OAAO3mO,EAAA,KAAKxmB,EAAK,CAAE0pE,WAAYtT,EAAM5rB,UAEvC,KAAKsiN,GAAY,EAAA/oC,qBACf,OAAOv9L,EAAA,KAAKxmB,EAAK,CAAEioE,WAAY,GAAIglL,2BAA0B,IAE/D,KAAKH,GAAY,EAAA7oC,uBACf,OAAOz9L,EAAA,KAAKxmB,EAAK,CAAEioE,WAAW7R,EAAQ5rB,QAAQyiN,2BAAG,IAGrD,OAAOjtP,IC1B4BotP,GAAAnzP,EAAA,QAQnCozP,GAAa,CACbhgN,YAAA,GAEaH,WAAA,GACbw8B,WAAMsjL,GAAW,EAAAn6E,KACjBr6E,YAAA,+HCwBW80J,GAAA,CACTjgN,YCpCEpvC,OAAA4nP,GAAkC,EAAlC5nP,CAAkCovP,IACtCn3L,UAAA,CACA3kD,OAAA67O,GAAA,EAEIj3L,OAAA,SAAAn2D,EAAsBo2D,GAAC,OAAsB5vC,EAAc,KAAAxmB,EAAA,CAAA8mP,YAAA,EAAAz5M,YAAA+oB,EAAA5rB,QAAA+iN,iBAAAn3L,EAAA5rB,QAAAtlC,YAC/DgxD,UAAQ,QACNk3L,GAAiB,SACf,SAAOptP,EAAAo2D,GAAA,OAAA5vC,EAAwB,EAAE,GAAAxmB,EAAO,CAAOktC,WAAGkpB,EAAA5rB,uBAGlD,QACH4iN,GAAA,EAEDj3L,OAAO,SAAMn2D,EAAAo2D,GAAA,OAAA5vC,EAAA,KAAAxmB,EAAA,CAAAw4F,YAAApiC,EAAA5rB,aAGA0rB,UAAA,CACb3kD,OAAA67O,GAAiC,EACjCj3L,OAAA,SAAAn2D,EAAAo2D,GAAA,OAAA5vC,EAAA,KAAAxmB,EAAA,CAAA0pE,WAAAtT,EAAA5rB,mIDrB8Cj5B,OAAA67O,GAAA,EAY7Bj3L,OAAA,SAAAn2D,EAAAo2D,GAAA,OAAA5vC,EAAA,KAAAxmB,EAAA,CAAAwtP,gBAAAp3L,EAAA5rB,QAAAijN,sBAAA,OAGjBv3L,UAAA,CACA3kD,OAAQ67O,GAAM,EACdj3L,OAAM,SAAIn2D,EAAAo2D,GAAA,OAAA5vC,EAAA,KAAAxmB,EAAA,CAAA0tP,0BAAAt3L,EAAA5rB,aAEV0rB,UAAW,CACX3kD,OAAA67O,GAAA,EAEIj3L,OAAA,SAAAn2D,EAAsCo2D,GAAA,OAAA5vC,EAAA,KAAAxmB,EAAA,CAAA2tP,eAAAv3L,EAAA5rB,aAE1C0rB,UAAU,CACV3kD,OAAA67O,GAAkB,EAClBj3L,OAAQ,SAAIn2D,EAAAo2D,GAAA,OAAA5vC,EAAA,KAAAxmB,EAAA,CAAAktC,WAAA1mB,EAAA,KAAAxmB,EAAAktC,WAAA,CAAAnoC,KAAAqxD,EAAA5rB,eAGD0rB,UAAW,QACrBk3L,GAAU,EACTj3L,OAAQ,SAAAn2D,EAAAo2D,GAAA,OAAA5vC,EAA8B,KAAAxmB,EAAA,CAAAktC,WAAA1mB,EAAA,KAAAxmB,EAAAktC,WAAA,CAAAM,UAAA4oB,EAAA5rB,eAMtC4B,UASAwhN,GAAQ3zP,EAAA,QAaR4zP,GAAA,UACQ,GACRrmL,MAAM,GACNgxB,YAAQ,GAKRs1J,WAAAt5O,EAAA,EAAA+zN,4CACS/zN,EAAA,EAAAg0N,oBACTD,wBAAQ/zN,EAAA,EAAA+zN,wBACRD,uBAAc9zN,EAAc,EAAA8zN,uBAI5Bwe,YAAA,GAyBAiH,GAAA,OAvBQ,SAAA/tP,EAAAo2D,GAKR,YAJQ,IAARp2D,IAAaA,EAAI6tP,IAIjBz3L,EAAAtiD,MACD,KAAQ85O,GAAC,EAAAI,UAEC,OAAexnO,EAAG,KAAAxmB,EAAA,CAAA8mP,YAAe,EAAAt/K,MAAoBpR,EAAC5rB,UAChE,KAAAojN,GAAU,EAAAK,aACD,OAAAznO,EAAA,KAAAxmB,EAAA,CAAA8mP,YAA2B,EAAAzzB,SAAAj9J,EAAA5rB,UACnC,KAAQojN,GAAoB,EAAAM,oBAI5B,OAAA1nO,EAAA,KAAAxmB,EAAA,CAAAw4F,YAAApiC,EAAA5rB,UAEA,OAAMxqC,IAeNmuP,GAAQ,CACRv8O,MAAM4C,EAAgB,EAAAykF,SAAK73F,KAACwQ,MAI5B6hB,SAAAjf,EAAA,EAAAykF,SAAA73F,KAAAslC,UAUQ0nN,GAAA,CACRhtP,KATQ,SAAApB,EAAAo2D,GAMR,YALQ,IAARp2D,IAAcA,EAAQmuP,IAKtBnuP,IAWFquP,GAAiBp0P,EAAA,QEjIuCq0P,GAAA,CAE7CjX,aAAA,IAiBMkX,GAAoB,cAff,SAAEvuP,EAAAo2D,eACf,IAAPp2D,IAAoBA,EAAAsuP,IACrBl4L,EAAAtiD,MAEK,KAAAu6O,GACqB,EAAI/W,iBACzB,OAAA9wN,EACa,KAAQxmB,EAAI,CAAOq3O,aAASjhL,EAAU5rB,UACnD,KAAA6jN,GAA0C,EAAAG,oBAE5C,OAAAhoO,EAA+B,KAAAxmB,EAAA,CAAAq3O,aAAA7wN,EAAA,KAAAxmB,EAAAq3O,aAAA,CAAAtyO,KAAAqxD,EAAA5rB,mBAElCxqC,iBCmCCyuP,GAAe,MCpC2DxwP,OAAA4nP,GAAA,EAAA5nP,CAdV,CACN6kO,eAAA,GACK4rB,SAAA,KACDttP,KAAA,KACIutP,gBAAA,KACJxrB,UAAA,OAW5DjtK,UAAA,CAgBC3kD,OAASq9O,GAA4B,EAC1Cz4L,OAAO,SAAMn2D,EAAbo2D,GAAM,OAAA5vC,EAAoB,KAAKxmB,EAAQ,CAAE+iO,UAAA,KAAAD,eAAA1sK,EAAA5rB,aAGpC0rB,UAAS,CACd3kD,OAAMq9O,GAAmC,EACzCz4L,OAAM,SAAcn2D,EAAAo2D,GAAA,OAAA5vC,EAA4B,EAAE,GAAAxmB,EAAA,CAAA+iO,UAAA3sK,EAAA5rB,uBAEhD,QACEokN,GAAyC,SAC1C,SAAA5uP,EAAAo2D,GAAA,OAAA5vC,EAAA,KAAAxmB,EAAA,CAAA0uP,SAAAt4L,EAAA5rB,aAEH0rB,UAAM,QAEA04L,GAA0D,SAC1D,SAAA5uP,EAAAo2D,GAAA,OAAA5vC,EAAgB,KAAAxmB,EAAO,CAAAoB,KAAAg1D,EAAA5rB,QAAA24L,UAAA,UAG7BjtK,UAAA,CACA3kD,OAAOq9O,GAAM,EACdz4L,OAAA,SAAAn2D,EAAAo2D,GAAA,OAAA5vC,EAAA,KAAAxmB,EAAA,CAAAoB,KAAA,KAAA+hO,UAAA/sK,EAAA5rB,oGDxDDj5B,OAAYq9O,GAAA,EACWz4L,OAAA,SAAAn2D,GAAA,OAAAwmB,EAAA,KAAAxmB,EAAA,CAAAmjO,UAAA,UAEvB/2L,kBAC+BnuC,OAAA4nP,GAAA,EAAA5nP,CCO2C,CACZmD,KAAA,KACCgR,SAAA,KACIgvM,aAAA,KACN54I,SAAA,KDT7DtS,UAAA,CACqC3kD,OAAAq9O,GAAA,EAC0Cz4L,OAAA,SAAAn2D,EAAAo2D,GAAA,OAAA5vC,EAAA,KAAAxmB,EAAA,CAAAoS,SAAAgkD,EAAA5rB,aAEjC0rB,UAAA,CACD3kD,OAAAq9O,GAAA,EACDz4L,OAAA,SAAAn2D,EAAAo2D,GAAA,OAAA5vC,EAAA,KAAAxmB,EAAA,CAAAoS,SAAA,KAAA+wN,UAAA/sK,EAAA5rB,aAGsC0rB,UAAA,CACA3kD,OAAAq9O,GAAA,EACxBz4L,OAAA,SAAAn2D,GAAA,OAAAwmB,EAAA,KAAAxmB,EAAA,CAAAmjO,UAAA,UAGRjtK,UAAA,CAI2B3kD,OAAAq9O,GAAA,EAO7Ez4L,OAAA,SAAAn2D,EAAAo2D,GAAA,OAAA5vC,EAAA,KAAAxmB,EAAA,CAAAohN,aAAAhrJ,EAAA5rB,aAEE0rB,UAAA,QAaE04L,GAAA,SACA,SAAA5uP,EAAiBo2D,GAAc,OAAC5vC,EAAA,KAAAxmB,EAAA,CAAAoB,KAAAg1D,EAAA5rB,QAAA24L,UAAA,oBAEhC,QACAyrB,GAAoB,SACpB,SAAA5uP,EAAAo2D,GAAA,OAAW5vC,EAAS,KAAAxmB,EAAA,CAAAwoE,SAAApS,EAAA5rB,0BAqDXhkB,EAAA,KAAAqoO,GAAAvI,GAAAwI,GAAAvH,GAAAQ,GAAAI,GAAA4D,GAAAmB,GAAAI,GAAAS,GAAAK,GAAAG,GAAAE,aAgCY,WA2BC,sBAIlBxpO,EAAA8pO,EAAA3pO,EAAmC6iE,EAAA+mK,EAAAtuP,EAAAslE,EAAAu7F,EAAAr9I,EAAA+qO,EAAAC,OpBpJ/BnpP,IoBuJJmpP,SpBtJF1wJ,EAAyC,kBAACz4F,YoBwJZ,eAAArF,YACI,kBAAOwjB,6BAErB,GAAAq9I,aACC,GAAA0tF,wBAnExBE,EAAAzsP,OAAA0sP,sCAAAC,GAAA,EACFC,EAAArxP,OAAAoxP,GAAA,EAAApxP,CAAAsxP,IAaGC,GAXYvxP,OAAAwxP,GAAA,aAAAxxP,CAAA,CACTyxP,UAAS,SACd3kN,GAMO,OAAAA,IAAA4kN,YAAAxJ,qBAMHkJ,GAAA,GAAAO,GAA2D,MAC3D3xP,OAAAoxP,GAAW,EAAXpxP,CAAWqxP,EAAY,GAASH,EAAgBK,oBAE9C,GAAAvgM,iBAgDiB,iCAChBo4C,wHAEDz3F,OACFo/O,EAAGp/O,UAGHmpC,OAAAz7C,EAAA,SACE0oB,WAA0C,SAAUjhB,EAAS8b,EAAAgvO,OAE7DrzN,EAAIpX,EAAWzL,IAAQ5U,EAAM8b,KACpB9gB,KACR,MAAAwvE,KAAAsgL,GAED55O,QAAQxG,IAAA,gEAGJogP,KAEDl2O,IAAA,WAAA6iB,eAES,SAACz3B,EAAAylC,WACTzlC,EAAOylC,KACD,EAAA9uC,KAAAqJ,EAAAylC,8BAnCT,8IAFiB,eA6ClBkpB,EAAoB54B,wBACnB,+BAEH,kCACI,uBACJA,OACA,KAEA44B,EAAAjK,SAAS,iDAML,iCAOHq2J,EAAA73H,EAAA34B,EAAAlqC,EAAAD,mBAGC,eACI2qO,iBACFr2O,EAAUswD,OA4BZi7K,IA3BEn+N,IAAiB,QAErBA,EAAC/lB,EAAA2nD,GAAAgiC,MAAA0mC,YAAA3wH,UAAA2mN,aAAA,aAEDtgM,IAAA,cAAsCo5B,SACtC+vB,EAAe,EAAAz2D,GAAA,yBAAsB,WACjCm6C,EAAC6X,YAAQ,uBAEbyE,EAA0B,EAAAz2D,GAAO,yBAA0B,WAC3Dm6C,EAAA6X,YAAA,qBAGAyE,EAAwB,EAAAz2D,GAAA,8BACxBwwD,EAAAwB,YAAY,uBAA4B,OAGrB,EAAAhyD,GAAA,8BACjBwwD,EAAAwB,YAAA,uBAAuB,MAIX,IAAV1sE,SAAOkxP,OAAAlpP,QAAG,cACZ6sD,EAAMjK,SAAS,qBAMf9vC,IAAK,sBAAK,SAAuBG,EAAWvR,GAE5C,IAAA6d,EAAAvkB,EACAmjP,GACMtxL,EAAA8X,YAAgBw5K,GAEpBz8O,EAAMk3O,UACNuF,EAAAz8O,EAAck3O,QAASuF,YAErBtxL,EAAAjK,SAAAu7L,GAKJtxL,EAAI8X,YAAU,yBACO,sBAAAvrB,YAETyT,EAASnrD,EAAAqb,OAAA8sJ,WAGpB,QAAA97J,EAAA4R,EAAA,EAAAy7D,EAAAnhF,EAAAkvP,OAAAl7O,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CAEeD,EAAAxT,MACH2oB,iBAGZsxD,GAAAn1D,EAAA,CAAAgP,MAAAmmD,GACA,QACJ,IACDzmE,MAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAGJ,QAAU,GAACwR,EAAA,MAAUA,EAAAgP,8FEvSE,gCAAAl1B,EAAAwwK,OACuB,SACHxwK,EAAAwwK,OAAA,EACC1gG,EAAA,EAAAt0E,KAAA,kDAK5C,MAEE,aA4MC,SA3MwBwE,EAAAwwK,MACP,MAEL,QACJxwK,EAAewwK,MAAG,KAGvBphH,EAAa,WAAc,OAAAnqC,EAAAjlB,YAC3B+vP,GAAYv8L,EAAAxzD,EAAsBwwK,aAYhCw/E,GAAc,IAAA78O,MAAAs1B,UACfwnN,GAAA,EACDC,EAAA,IAEF,SAAOC,IACIF,GAKJz8L,EAAW+yJ,SAAG,oBAGZ,IAAKpzM,MAAMs1B,UAAAunN,EAAuBE,IAClCD,GAAW,EACXz8L,EAAKjK,SAAM,wBAGlB,SAAA6mM,IAEKJ,GAAe,IAAE78O,MAAUs1B,UAEvBwnN,IACFA,GAAc,EAEdz8L,EAAA8X,YAAY,oCAKR8kL,KACR5iL,QAAA4iL,GAEHzxP,SAAA8hB,iBAAA,QAAA2vO,EAAA,CAAAC,SAAA,EAAAC,SAAA,IAGA3xP,SAAO8hB,iBAAY,mBAAA2vO,GAGrBG,YAAOJ,EAAa,KAClBrgL,EAAsB,EAAAz2D,GAAA,8BACtB22O,EAAA,EAEKG,QAGHn/L,MAAO,SAASp3C,GACjB,IAAAvF,EAAAsS,IAAA/M,EAAAvF,QACD,OAAAA,EAAAs+H,UAAA3tI,OAAA,CAKCwuD,EAAA/oD,KAAA,uBAAA6gE,YAAA,sBAIC,IAAAklL,EAAan8O,EAAAgoI,QAAA,qBACd,GAAAm0G,EAAAxrP,OAAA,CAEK,IAAQyrP,EAAcD,EAAQl8K,SAChCk8K,EAAYhoM,SACdvvB,WAAA,WACOw3N,EAAM7lP,OAAA4lP,IACd,KAKCh9L,EAAO/oD,KAAO,qBAAiBzF,OAAY,GAEX,IAAhCqP,EAAAs+H,QAAA,oDAAgC3tI,QAC9BuU,EAAAoO,OAAY,WACZpO,EAAA8L,SAAA,sBAMJ,IAAAyhK,EAAAj9G,EAAAp/D,KAAA,YAEKq8K,EAAW9hL,OAAA,OAAAqP,EAAAs+H,QAAA,iBAAA3tI,QACT8hL,EAAQl8G,cAMV,EAAAsD,UAAA,aAAA2vK,IAGL9jP,EAAA,eAIOA,EAA0B,WASJ,oBAG7B22P,EAAA3rO,EAAAf,EAAA2kG,EAAA9iD,GAEF,IAAAlmE,EAAWE,OACTspC,cAAiBwnN,GAAS,IAC1BtgL,KAAO,KACPugL,YAAc,eACd5zM,EAAOx2B,EAAW5lB,IAClBiwP,aAAkB,kBACT,CACTp1P,MAAG,6BACHs0H,YAAA,eAEFF,WAAgB,uBACdO,QAAW,CACX70B,OAAO,0jBACP80B,aAAe,0BAIjBtrG,EAAO+rO,eAAS,CACd,CAAA1vP,MAAI,EAAO1F,KAAO,gBAChB,EAAOA,KAAA,4BACL,EAAAA,KAAO,uCAEP,QACC,EAAAA,KAAA,aACJ0F,MAAA,EAAA1F,KAAA,sBACD,CAAA0F,MAAA,EAAA1F,KAAA,uBAEF,CAAM0F,MAAM,EAAG1F,KAAA,mBACb,CAAA0F,MAAO,EAAA1F,KAAA,oBACP,CAAA0F,MAAO,EAAA1F,KAAU,wCAEjB,CAAA0F,MAAA,EAAA1F,KAAA,wDAEa,EAAK0F,MAAK,EAAI1F,KAAG,IAAU,CAAA0F,MAAK,EAAA1F,KAAA,UAAA0F,MAAA,EAAA1F,KAAA,eAC1CgU,KAAA,WAEHqV,EAAO6V,KAAA,SACJ4V,UAAOm4E,EAAUn4E,YACjBmkE,UACC1qC,OAAS,OAAS,SAAS9kE,GAC3B,QAAAA,GACD4f,EAAQ4vF,aAKX18B,QAAO,SAAUr9C,KACfA,KAAMA,KAERm2N,WAAe,WACfhsO,EAAOkzD,QAAQ,UAGftyE,IAAI,WACFof,EAAK2O,YACNi1F,EAAAqoI,YAAAjsO,EAAAnG,SAEDmG,EAAO2gI,aAIPhyH,QAAY,WACZ,IAAA3O,EAAAsrD,KAAA4gL,KAAAzoK,OAEK,SAEL,IAAAzjE,EAAAnG,QAAA/Z,KAAA+W,MAAA,gBAEKk0D,EAAoB,EAAAt0E,KAAA,wGAEhBgrB,EAAa5lB,EAAG6J,KAAGsa,EAAAyrB,UAAA,CAAA3rC,KAAAkgB,EAAAnG,QAAA/Z,iBACnBqsP,IAAAnsO,EAAoBnG,SAC7BkxD,EAAG,EAAAt0E,KAAA,iFACH,UAAAupB,EAAAnG,QAAAhL,OACH4S,EAAA5lB,EAAAipC,SAAA9kB,EAAAnG,QAAAre,SACHwkB,EAAAnG,QAACre,MAAAqb,MAAA,IAAAm8C,OAAA,MAAAhzC,EAAAnG,QAAA/Z,KAAA,cAAAirE,EAAA,EAAAt0E,KAAA,8BAED,0DAA4CupB,EAAAnG,QAAmB/Z,YCzN/DkgB,EAAA8J,SAAA,WAAA9J,EAAA+jL,SAAA,GAkEC,UAAA/jL,EAAAnG,QAAAhL,MAAA,OAAAmR,EAAAnG,QAAA4F,aA9DCO,EAAA+jL,SAAA,qFACM9kL,EAAgBljB,IAAAikB,EAAAnG,QAAA4F,YAAAzjB,KAAA,SAAA0jB,GACbA,EAAW0sO,aACjBpsO,EAAA+jL,SAAA,2DAOF/jL,EAAA83J,SAAA,WAGK,OADN93J,EAAA8rO,aAAA,GACOloI,EAAWzY,cAAAnrF,EAAAnG,SAAAq6F,MAAA,SAAAhiB,GACRA,EAAM5uF,MAAA4uF,EAAA5uF,KAAA22B,UACbi4D,EAAAj4D,QAAAi4D,EAAA5uF,KAAA22B,SAGC8wC,EAAY,EAAAt0E,KAA0B,4EAAAy7F,EAAAj4D,aAIxCja,EAAKu6D,cAAY,SAAU/+E,EAAAiqD,GACvBzlC,EAACnG,QAAare,QAEdwkB,EAACnG,QAAQ4rC,WAAcA,EACvBzlC,EAAC83J,YAEN93J,EAAAmrC,KAAA,SAAAjf,GAEDlsB,EAAAnG,QAAAqyB,EACMlsB,EAAIq1N,cAAA,EACFr1N,EAAK6V,KAAQ,OACb7V,EAAK8J,WAEP7K,EAAWljB,IAAMikB,EAAEnG,QAAA4F,YAAAzjB,KAAA,SAAA0jB,GACrBM,EAAOo1N,kBAAA11N,KAITM,EAAO0sC,UAAO,SAAAxgB,GACZ,IAAA4Y,EAAYrjC,EAAe5lB,EAAAk4F,UAAA7nD,EAAAh1C,gBAC5B8oB,EAAAnG,QAAA+pG,EAAAyoI,wBAAAvnM,GAEE9kC,EAAQnG,QAAO/Z,KAAQ,WAAMosC,EAAApsC,KAC5B8jH,EAAUqoI,YAAAjsO,EAAAnG,YAEb8mI,OAAA,WAEK3gI,EAAM2O,WACL3O,EAAO83J,WAAA97K,KAAA,WACNgkB,EAAA4vF,QACP5vF,EAAA6V,KAAA,OAEWirC,EAAWp1B,iBAKvB1rB,EAAK4vF,MAAS,WACV5vF,EAACq1N,cAAkB,EACxBr1N,EAAAnG,QAAA+pG,EAAAyoI,wBAAA,CAAAx9O,KAAA,UACFmR,EAAAupB,YAAA9nB,EAAA5lB,EAAAyQ,OAAA2S,EAAAqjJ,mBAAA,SAAA5iJ,yCAQCM,EAAYssO,gBAAY7qO,IAAAzB,EAAAupB,aACb+9I,OAAO,WACXprL,IAAQ,SAAGwjB,GACX,MAAU,CAAA/oB,KAAM+oB,EAAAxnB,KAAA4H,KAAAzD,MAAAqjB,EAAAxnB,KAAAP,MAEtB0E,SAGC2jB,EAAKusO,YAAM,WACT,IAAA//I,EAAOxsF,EAAKnG,QACbmG,EAAAnG,QAAA+pG,EAAAyoI,wBAAA,CAEGx9O,KAAOmR,EAASnG,QAAQhL,OAE3BmR,EAAAnG,QAAA/Z,KAAA0sG,EAAA1sG,KAEDkgB,EAAWnG,QAACvd,MAAekwG,EAAClwG,MAC7B,IAAAkwP,EAAA/qO,EAAA5lB,EAAA+F,QAAA9G,KAAA2wC,UAAA+gE,IAEQ,IAATggJ,IACS1xP,KAAE2wC,UAAA+gN,GAAAxsO,EAAAnG,SAERmG,EAAA8J,cAGC2iO,eAAY,SAAiBvgN,GAC9B03E,EAAA6oI,eAAAvgN,IAGFlsB,EAAA0sO,gBAAA,WAED1sO,EAAA8rO,cAAA,IACE9rO,EAAMi1N,kBAAwB,kBAAA1zN,EAAA,EAAA3mB,OAAA,oBAC1B,OAAC2mB,EAAoB,EAAAzmB,KAAA,SAAA8B,UACjBqiB,EAAAljB,IAAkBikB,EAAEnG,QAAU4F,YAAezjB,KAAA,SAAK0jB,GAExDM,EAAenG,QAAQre,MAAC,GAChBwkB,EAAAo1N,kBAA2B11N,IAE/B,kBDwBGwB,QAAW,uDCnBpByqO,EDiB+B,GCfnCpiL,EAAC,EAAAtlD,WAAA,qBAAA0oO,QAKCjjJ,GAAA10G,EAAA,QAEA43P,GAAA,oBACSA,cAEPrxP,UAASsxP,QAAA,SAAA79L,EAAAl6B,GACVA,GAAA,GAEDk6B,EAAA89L,WAAApiP,KAAW5P,MACHg6B,GAAmB,GACzBk6B,EAAM+9L,YAAQriP,KAAA5P,MAEdk0D,EAAGg+L,MAAAtiP,KAAA5P,OAEL8xP,EAACrxP,UAAAgyD,KAAA,SAAA0/L,EAAAC,GAED,IAAAD,EAAA,MAAA/7O,MAAA,yBAEE,IAAIg8O,EACE,MAAAh8O,MAAU,iCAGhBpW,KAAIqyP,cACFF,UAAWA,OACZC,kBAAML,QAAAI,EAAA,QACLJ,QAAQK,GAAW,GACpBpyP,kBAGCqyP,OAAY,eACbxrP,IAAM7G,KAAAmyP,UACLG,EAAAtyP,KAAaoyP,WACdG,GAAAD,OAICC,EAAIL,MAAQprP,QAAK9G,QACf,KACAkyP,MAAMn1P,OAAE8J,EAAA,QAEPqrP,MAAAprP,QAAA9G,QACD,KACDkyP,MAAAn1P,OAAA8J,EAAA,QACCorP,YAAgBnrP,QAAG9G,QACpB,GACFuyP,EAAAN,YAAAl1P,OAAA8J,EAAA,MAGCyrP,EAAUN,WAAWlrP,QAAE9G,QACnB,KACFgyP,WAAUj1P,OAAK8J,EAAU,kBAEvB,qBACD,SAnDP,MAuDK,oBACFmkM,EAAAhmM,GAEDhF,KAAMgF,KAAgBA,EACtBhF,KAAAkyP,MAAW,QACTF,WAAY,oBACC,GCxLnB,SD0LKvxP,UAAE+xP,YAAA,SAAAp0P,GACH,OAAAA,EAIkB,iBAAPA,EACZ4B,KAAAgyP,WAAApnP,KAAA,SAAA8tB,GAAA,OAAAA,EAAAy5N,UAAAntP,OAAA5G,EAAA4G,OAGQhF,KAAKgyP,WAAWpnP,KAAC,SAAA8tB,GAAA,OAAAA,EAAAy5N,UAAAntP,OAAA5G,IAPzB,MASH4sM,EAAAvqM,UAACgyP,UAAA,SAAAj0P,GAAA,OAAAA,EAGsB,iBAAPA,EACAwB,KAAMiyP,YAAMrnP,KAAA,SAAA8tB,GAAA,OAAAA,EAAA05N,WAAAptP,OAAAxG,EAAAwG,OAEnBhF,KAAAiyP,YAAarnP,KAAA,SAAA8tB,GAAA,OAAAA,EAAA05N,WAAAptP,OAAAxG,YAEjBiC,UAAAiyP,uBAAA,WACD,IAAI5yP,EAAAE,KACA2yP,EAAa,GClN0D,YDmNzEX,WAAUz+L,QAAG,SAAS76B,GACvBA,EAAAy5N,UAAAH,WAAA5wP,IAAA,SAAAs3B,GAAA,OAAAA,EAAAy5N,YACoB5+L,QAAA,SAAAh4B,GACpB,IAAAq3N,EAAAr3N,EAAAk3N,UAAA3yP,EAAAkF,MACH4tP,iBCvN6E5yP,KAAAgyP,WAAAxgP,OAAA,SAAAknB,GAAA,WAAAi6N,EAAA7rP,QAAA4xB,MAG/EsyK,EDkLO,GC/KoCve,GAAA,WAQ3C,SAAAA,IAIEzsL,KAAA+zE,MAAgB,YAENtzE,UAAEoyP,WAAW,SAAA7tP,GACb,IAAAu2B,EAAA,IAAAyvK,GAAAhmM,GAEA,OADAhF,KAAA+zE,MAAA/uE,GAAAu2B,EACAA,GAEPkxJ,EAAChsL,UAAAqyP,YAAA,SAAA99I,GAEJ,IAAAl1G,EAAAE,UAGE,OAHFg1G,EAAAzhD,QAAA,SAwBCvuD,GAvBK+uE,EAACnkE,KAAS9P,EAAG+yP,WAAU7tP,MAEtB+uE,KAGLtzE,UAAKgyD,KAAY,SAAUsI,EAAA08K,GAC3B,IAAI33O,EAACE,UAEL+yP,EAAA,GACAC,EAAuB,KAAZ,kBACA9+N,MACV6mC,6BAEgB,CAAA08K,OAEd,IACCl8M,EAAI,EAACA,EAAA03N,EAAc9tP,OAAAo2B,IAAA,CAGpB,oBAFGn1B,EAAO6sP,EAAK13N,IAEf,CACA,IAAK23N,EAAAlzP,KAAAmzP,QAAA/sP,GACJ,IAAK8sP,EACJ,MAAA98O,MAAA,gCAAAhQ,EAAA,oCAGP4sP,EAAApjP,KAAAsjP,QAEQF,EAAepjP,KAACxJ,OAGZm1B,EAAA,EAAAA,EAAAw3N,EAAkB5tP,OAASo2B,IAAQ,CAEzC,IAAAn1B,KACM,iBADNA,EAAO2sP,EAASx3N,IACF,KACV63N,EAAKpzP,KAAAmzP,QAAU/sP,OAChBgtP,EACA,MAAAh9O,MAAA,iCAAAhQ,EAAA,oCAGAitP,EAAYzjP,KAAAwjP,QAGpBC,EAAAzjP,KAAAxJ,GAED,IAAA8rP,EAAA,UACEc,EAAMz/L,QAAe,SAAGwH,yBAExBm3L,EAA4BtiP,KAAA9P,EAAAwzP,aAAA7gM,KAAAsI,EAAA08K,uBAI3B6b,WAAA,kFAzEsC,MAsGtC,WAIH,SAACC,EAAAzlL,EAAA1oD,EAAAiqC,EAAA2W,EAAAC,GAEDjmE,KAAA8tE,KACE9tE,KAAKolB,UAAUA,EACfplB,KAAKqvD,UAAYA,EACjBrvD,KAAKgmE,YAAUA,EAChBhmE,KAAAimE,mBAPQ7/C,QAAS,yDAUV3lB,UAAQoP,KAAA,SAAExU,GAChB,IAAIgrB,EAACvkB,EACDhC,EAACE,KACLA,KAAK3E,UAAUA,EAChB2E,KAAA3E,UAAA2B,OAAAwc,GAAA,qBAAAxZ,KAAAwzP,mBAAApzP,KAAAJ,OAEDA,KAAA3E,UAAA2B,OAAAwc,GAAA,kCAA2BxZ,KAAAyzP,oCAAArzP,KAAAJ,OAE1BA,KAAA2wC,UAAAt1C,EAAA2tH,WAAA7lG,KAAA9nB,EAAA2tH,WAAA7lG,KAAA/hB,IAAApB,KAAAuxP,wBAAAnxP,KAAAJ,OAEDA,KAAAgmE,YAAAn2D,KAAA7P,KAAA2wC,UAAA3wC,KAAAimE,QAAgBzoE,aAAhB,IAEM,QAASqX,EAAA4R,EAAU,EAAAzmB,KAAA2wC,WAAA57B,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CACFD,EAAGxT,MACvBmyP,SAAA1zP,KAAA8tE,GAAAsyC,SAID,MAAI5kC,GAAWn1D,EAAG,CAAAgP,MAAAmmD,GAClB,QACE,IACEzmE,IAAOA,EAAKE,OAAAnT,EAAc+S,EAAA4mE,SAAK35E,EAAU/B,KAAK8U,GAEjD,WAAAwR,EAAA,MAAAA,EAAAgP,WAGCs+N,EAAI3zP,KAAAolB,UAAkBjlB,qBACpB2tE,OACA9tE,KAAK2wC,UAAUvvC,IAAA,SAAcgwC,UAC9BtxC,EAAA8zP,gBAAAxiN,EAAAuiN,MAEJzyP,KAAA,WAEDpB,EAAAkmE,YAAAp1B,mBAIQnwC,UAAU+yP,mBAAuB,SAAOh2P,OAC5CsC,EAAME,UACNgmE,YAAO90B,gBAAiB1zC,OACxBs9E,EAAI96E,KAAA2wC,iBACF,SAAaS,GAAY,OAA2B,IAAnBA,EAAM1N,uBAChC0N,SACMA,EAAUlqC,QAAO+iC,iBAC1BomE,gBAAkBnvG,KAAK,aACdH,EAAKmmB,OAAO2sO,KAAC5sO,EAAAlmB,EAAAmmB,OAAAkqB,EAAAlqC,YACvB7L,UAAAy4P,+CAGHhmL,GAAOqN,IAAAL,GAAW55E,KAAK,aACvB7F,UAASoqB,oBAINhlB,UAASmzP,gBAAA,SAAAxiN,EAAAuiN,GACjB,IAAAvoO,EAAAtpB,EAEDhC,EAAAE,KACM+zP,EAAU,OAEb,QAAAl/O,EAAA4R,EAAA,EAAAzmB,KAAA2wC,WAAA57B,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CAEG,IAAAg/O,EAASj/O,EAACxT,MACR6vC,EAAW6iN,UAAKD,IAEpBD,EAAqBnkP,KAAAokP,EAAAN,SAAAloK,mBAGdpgE,EAAA,CAAAiK,MAAAumD,mBAGD7mE,EAAAE,OAAWnT,EAAM+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,WAEnB,GAAMuW,EAAA,MAAAA,EAAAiK,mBAENy4C,OACDimL,GACF7yP,KAAA,WAED,IAAAgzP,EAAeP,EAAU,OAAUviN,EAAApsC,MACpC,gBAAAkvP,EAAM9iN,EAAA+iN,gBAAAD,GAAAhzP,KAAAkwC,EAAAsiN,SAAAx5K,SAEY,IAAf9oC,EAAM1N,SAAqB,IAAJ0N,EAAI1N,QAC1B0N,EAAAi/D,gBAAAnvG,KAAAkwC,EAAAsiN,SAAAx5K,gBAEDw5K,SAAOx5K,oBACF,aACLlU,YAAc70B,oBAAgBC,YACrBsiN,cAGVjzP,UAAA8wP,wBAAA,SAAAl1P,GAEJ,IAAA+3P,EAAAtD,GAAA,EAAAz0P,EAAA0X,MAAAqgP,KAED,IAAAA,mEAMG,kDAEG3zP,UAAc0wP,YAAW,SAAA//M,GAE7BpxC,KAAI2wC,UAAS/gC,KAAOwhC,QAClB40B,YAAUp1B,mBACXv1C,UAAAkqB,6BAGC9kB,UAAAkxP,eAAA,SAAAvgN,OACA10C,EAAIiqB,EAAc5lB,EAAA+F,QAAE9G,KAAK2wC,UAASS,kBACzBr0C,OAAOL,EAAK,QACpBspE,YAAEp1B,mBAEHv1C,UAAAkqB,6BAEE9kB,UAAI4vG,cAAsB,SAACj/D,YACrBi/D,6BAGJ6Y,gBAAA,SAAA93E,EAAAijN,SACAr0P,0EAKIoxC,EAASpsC,wBAIVkvD,EAAIw+L,yBAAAtxP,IAAA,SAAAs3B,UACR54B,EAAAuwG,cAAAvwG,EAAA6wC,UAAA/lC,KAAA,SAAA5E,GAAA,OAAAA,EAAAhB,OAAA0zB,EAAAy5N,UAAAntP,gBAID8oE,GAAMqN,IAAKL,GAAM55E,KAAA,WAClBmzP,IAEGv0P,EAAAzE,UAAgBy4P,+BAClBh0P,EAAAzE,UAAAoqB,qBAKFhlB,UAAO6zP,6BAA0B,SAAAljN,GACnC,IAAGhrC,EAAAqE,EAAAlJ,EAAA0hB,EACJ8hB,EAAA,GAED,IAAA3+B,EAAA,EAAAA,EAAAgrC,EAAAlqC,QAAA/B,OAAAiB,IAII,IAHF6c,EAASmuB,EAAUlqC,QAAAd,IAEf2+B,UAAE,EACJpe,EAAiB5lB,EAAI4E,QAAGyrC,EAASryB,QAAaxd,OAC/C,IAAAkJ,EAAA,EAAAA,EAAA2mC,EAAAryB,QAAAxd,MAAA4D,OAAAsF,IAAUlJ,EAAA6vC,EAAEryB,QAAQxd,MAASkJ,GACnBwY,EAAQ1hB,QAAOA,IACzB0hB,EAAA8hB,UAAA,EAEIA,EAAAn1B,KAAAqT,SAKQA,EAAA1hB,QAAA6vC,EAAAryB,QAAAxd,QACP0hB,EAAS8hB,UAAK,EAEpBA,EAAAn1B,KAAAqT,gBAKGxiB,UAAA8zP,+BAAA,SAAAnjN,GAKH,GAHAA,EAAAryB,UACIqyB,EAACryB,QAAY,IAEb4H,EAAW5lB,EAAM4E,QAAQyrC,EAACryB,QAAAxd,OAAA,CAC/B,IAAAwjC,EAAA/kC,KAAAs0P,6BAAAljN,GAiBK,OAbErM,EADc,IAAhBA,EAAgB5/B,OACLisC,EAAAlqC,QAAA,GAGA,CACL3F,MAAOolB,EAAC5lB,EAAAK,IAAA2jC,EAAwB,SAAAz/B,GAChC,OAASA,EAAA/D,QAEf1F,KAAU8qB,EAAU5lB,EAAAK,IAAU2jC,EAAA,SAAAz/B,GAC7B,OAAAA,EAAAzJ,QAKKu1C,EAAQojN,SAACzvN,GAIjB,IAAAzN,EAAoB3Q,EAAC5lB,EAAA6J,KAAAwmC,EAAAlqC,QAAA,CACtBrL,KAAAu1C,EAAAryB,QAAAljB,OAGG,OAACy7B,EACN8Z,EAAAojN,SAAAl9N,GAGe8Z,EAAQlqC,QAAA/B,OAInBisC,EAAAojN,SAAApjN,EAAAlqC,QAAA,IAFYmd,QAAQ61D,aAgBfz5E,UAACg0P,iBAAA,SAAArjN,EAAA8iN,GACV,IAAA1oK,EAAAxrF,KAAA8tE,GAAAG,OAGH,OAFA78B,EAAA1N,UAAC8nD,EAAAp6C,EAAAi/D,iBAED7kB,EAAAtqF,KAAA,iFC9VuB,IAAA+hB,EAAA,CACc,IAAAyxO,EAAAR,EACuC52M,EAAA42M,EAK5EvtO,EAAA5lB,EAAA4E,QAAAuuP,KA2BEQ,EACUR,EACAlkO,OACA,SACA+gB,EAAAniC,GAHA,IAAUoH,EAAA2Q,EAAA5lB,EAAA6J,KAAAwmC,EAAAlqC,QAAA,CAAA3F,MAAAqN,IAdX,OAeCoH,EACA+6B,EAAAnhC,KAAAoG,EAAwBna,MAlBhBk1C,EAAAnhC,KAAAhB,GAETmiC,GACE,KAIT9tB,EAAO,CAAApnB,KAAA64P,EAAAnzP,MAAA+7C,GAeH,OAbJlM,EAAU0hC,QAGV7vD,EAAA,CAAApnB,KAAA8qB,EAAA5lB,EAAA4zP,UAAA1xO,EAAApnB,MAAA0F,MAAAolB,EAAA5lB,EAAA4zP,UAAA1xO,EAAA1hB,SAUK6vC,EAAYojN,SAAAvxO,QAIjBxiB,UAAAm0P,mBAAA,SAAAxjN,EAAAnuB,UACAmuB,EAAOryB,QAAW4H,EAAA5lB,EAAAk4F,UAAAh2E,GACnB0D,EAAA5lB,EAAA4E,QAAAyrC,EAAAryB,QAAAljB,OAAAu1C,EAAAryB,QAAAljB,KAAAsJ,OAAA,EAEDisC,EAAAryB,QAAAljB,KAAAu1C,EAAAryB,QAASljB,KAAW4K,KAAA,OAEXkgB,EAAiB5lB,EAAA4E,QAAAyrC,EAAmBryB,QAAMxd,QAAQ,WAAA6vC,EAAAryB,QAAAxd,MAAA,KAC1D6vC,EAAAryB,QAAAljB,KAAAu1C,EAAAryB,QAAAxd,MAAAkF,KAAA,QAGCzG,KAAKs0P,6BAAWljN,GACdpxC,KAAOkpH,gBAAA93E,MAGT3wC,UAAAgzP,oCAA6B,eAE3B5vO,EAAK7jB,KAAQolB,UAAQjlB,WAEZY,EAAA44B,KAAA9V,EAAA,SAAsBtiB,EAAS+E,GACrC,IAAAA,EAAAQ,QAAA,gBACJ+c,EAAAvd,KAKDtG,KAAKgmE,YAAY1yB,yBAAmBzvB,GAGtC7jB,KAAAolB,UAAAjlB,OAAA0jB,MAEOpjB,UAAU+/J,eAAK,SAAMt5J,OACxBkqC,EAAWzqB,EAAS5lB,EAAQ6J,KAAK5K,KAAC2wC,UAAA,CAClC58B,KAAA,QACC4Q,WAAAzd,EAAAyd,aAGHysB,IACDA,EAAApxC,KAAAuxP,wBAAA,CAEDvsP,KAAA,UACS+O,KAAM,QACd4Q,WAAAzd,EAAAyd,aAGK3kB,KAACmxP,YAAe//M,IAErB,IAAAE,EAAAF,EAAAE,QAED9/B,EAAAmV,EAAA5lB,EAAA6J,KAAA0mC,EAAA,CAAAhrC,IAAAY,EAAAZ,IAAA/E,MAAA2F,EAAA3F,QACEiQ,IACDA,EAAA,CAAAlL,IAAAY,EAAAZ,IAAA/E,MAAA2F,EAAA3F,OACH+vC,EAAA1hC,KAAA4B,0BAEAxR,KAAakpH,gBAAA93E,GAAA,IAEXmiN,EAAM9yP,UAAUo0P,YAAA,WACZ,IAAE/0P,EAAAE,KACN80P,EAAW,IAAEroE,GC7CH,OD8CVzsL,KAAA2wC,UAAA4iB,QAAA,SAAAvtD,0BCvGqBhG,KAAA2wC,UAAA4iB,QAAA,SAAAwhM,GACuEj1P,EAAA6wC,UAAA4iB,QAAA,SAAAyhM,GAC9CD,IAAAC,GAQ/CD,EAAAd,UAAAe,IAEDF,EAAAriM,KAAAsiM,EAAA/vP,KAAAgwP,EAAAhwP,UA6CY8vP,GAEAvB,EFkDP,KE7EY,EAAAz3K,QAAA,cAAAm5K,aAGJ,WAMG,oBAGZC,EAAW74P,EAAA4pE,EAAAD,EAAA8iD,QACXzsH,MAASA,OACT4pE,QAAQA,OACRD,YAAcA,OACd8iD,YAAaA,OACbr5G,SAAA,CACAsE,KAAA,WACA/O,KAAA,GACA+lE,KAAA,EAUAvpE,MAAA,GACAkiC,QAAA,EACDx8B,QAAA,GAED6X,QAAA,GACEre,MAAA,qCACAqnD,MAAA,EAEAotM,SAAA,MACIC,WAAY,GACd7hN,aAAW,GAGbr1C,OAAO4yP,GAAW,EAAlB5yP,CAAkB8B,KAAA3D,EAAA2D,KAAAyP,UACnBzP,KAAA0jC,QAAA,WAjCStd,QAAM,kDAoCF3lB,UAAWrE,aAAC,WAG1B,OAFC8B,OAAA4yP,GAAA,EAAA5yP,CAAA8B,KAAA3D,MAAA2D,UAAAyP,UAEDzP,KAAA3D,OAEA64P,EAACz0P,UAAA+zP,SAAA,SAAAvxO,GAGC,OADFjjB,KAAAq1P,kBACMr1P,KAAK8oH,YAAY8rI,mBAAY50P,KAAAijB,MAEhCxiB,UAAA40P,gBAAA,WACD,GAAAr1P,KAAO+nD,KAAP,MAKO7gD,QAAK/B,QAAW,SAAAnF,KAAAkH,QAAA,GAAArL,WAChBqL,QAAMkgB,QAAA,CACVvrB,KAAS,OACT0F,MAAU,oBAAYvB,KAAAgF,OAG3B,IAAA0S,EAAAo3D,GAcC,EAAA+/B,kBAAA7uG,KAAAimE,QAAAzoE,YAAAwC,KAAAo1P,WAAAp1P,KAAAm1P,UAbCn1P,KAAIgmE,YAAYh0B,mBAAE,oBAAAhyC,KAAAgF,KAAA0S,EAAAo1C,2BAET9a,mBAAU,mBAAAt6B,EAAAo1C,cAEbrsD,UAAU4vG,cAAgB,+BAErB1pF,EAAW5lB,EAAAK,IAAApB,KAAAU,MAAAqb,MAAA,+BAAAlgB,GAErB,OAAAA,MADCA,EAAGA,EAAAgC,QAAA,cACJ4xH,OAAAluH,MAAA1F,EAAA4zH,eACC4lI,kBACDr1P,KAAA8oH,YAAAyrI,+BAAAv0P,OAGHk1P,EAACz0P,UAAAwzP,UAAA,SAAA7iN,GAED,YACc3wC,UAAA0zP,gBAAuB,SAAgBD,eACjDmB,kBACAr1P,KAAO8oH,YAAK2rI,iBAAgBz0P,KAAYk0P,MAEpCzzP,UAAO+yC,eAAW,uBACjBz0B,QAAAxd,OAEJ2zP,EApFS,MAwFgB,EAAiB,SAAM,qCAG/C,qDAYoB,oBAIxBI,EAAkBj5P,EAAA8nB,EAAuB6hD,EAAS8iD,EAAA7iD,GACnDjmE,KAAA3D,QAED2D,KAAAmkB,gBACEnkB,KAAKgmE,YAAQA,EACdhmE,KAAA8oH,cAED9oH,KAAAimE,UACEjmE,KAAIyP,SAAO,CACXsE,KAAU,QAENvS,MAAK,KACPd,MAAK,GACNmb,MAAA,GACD5L,KAAU,EACR0U,WAAa,KACb+e,QAAQ,EAERqnC,KAAI,EAEJ/lE,KAAI,UACF,cACD,EAED0tC,SAAI,aACE,WACL,GAEDt9B,KAAI,YACF,YACK,kBACH,gBACD,aACG,cAGH,GAAApV,KAAA3D,EAAA2D,KAAAyP,UCxLc,SDkJlB2W,QAAA,kEAyCC3lB,UAAerE,aAAY,kBAG7B8B,OAAO4yP,GAA8B,EAArC5yP,CAAqC8B,KAAA3D,MAAA2D,UAAAyP,UAEtC,IAAAzP,KAAA0jC,UAED1jC,KAAA3D,MAAA6K,QAAA,IAEIlH,KAAO3D,SAGHoE,UAAgB+zP,SAAK,SAAevxO,GAC1C,OAAMjjB,KAAA8oH,YAAc8rI,mBAAoB50P,KAAAijB,MAGtCxiB,UAAU0zP,gBAAS,SAASD,UAC7Bl0P,KAAA8oH,YAAA2rI,iBAAAz0P,KAAAk0P,MACCzzP,UAAU+yC,eAAQ,iBACI,aAApBz0B,QAAMljB,KACN,WAECkjB,QAAAxd,mBACQ8uG,cAAiB,uBACzBlsF,cACFljB,IAAEjB,KAAA2kB,YACJzjB,KAAAlB,KAAAu1P,iCAAAn1P,KAAAJ,OAAMkB,KAAIlB,KAAAw1P,WAAgBp1P,KAAAJ,OACzBkB,KAAAlB,KAAU8oH,YAAAyrI,+BAAkBn0P,KAAGJ,KAAA8oH,YAAA9oH,UAE5BS,UAAA+0P,WAAA,SAAA7wO,OACJ7kB,EAAAE,KAED,OAAIA,KAAAy1P,QACKz1P,KAAG01P,gBAAkB/wO,EAAA3kB,KAAA21P,WAAAz0P,KAAA,SAAA2wB,GAC7B/xB,EAAAsV,KAAA,GAEM,QAAQhP,EAAA,EAAAA,EAAAyrB,EAAA1sB,OAAAiB,IAChBtG,EAAAsV,KAAAxF,KAAAiiB,EAAAzrB,GAAAvK,MAGQ,OAAA8oB,sBAIXA,IAEE2wO,EAAM70P,UAAA6xE,gBAAa,SAAAsjL,GACnB,IAAA91P,EAAaE,KACb,OAAAA,KAAemkB,cAAIljB,IAAAjB,KAAA2kB,YAAAzjB,KAAA,SAAAyjB,GACnB,IAAAjkB,EAAAZ,EAAA+1P,eAAAh4P,QAAA,OAAA+3P,+EE5O4F,OAAAr0P,EAAA1F,cAiC7E4E,UAAK80P,iCAAA,SAAA5wO,GACV,IAAA7kB,EAAAE,KACA,OAAAA,KAAA01P,gBAAA/wO,EAAwB3kB,KAAAU,OAAAQ,KAAA,SAAA2wB,GAbhC,OAcQ/xB,EAAAoH,QAAApH,EAAAg2P,4BAAwBjkO,GApBlC/xB,EAAQi2P,YACFj2P,EAAEk2P,eAEFl2P,EAAGoH,QAAA/B,QACPrF,EAASoH,QAAA0I,KFyHX,CAAA/T,KAAA,OAAA0F,MAAA,GAAAyvC,QAAA,IEvHSrsB,OAGFlkB,UAAOi1P,gBAAA,SAAA/wO,EAAAjkB,OACZwG,EAAU,CAAEiY,WAAKlZ,EAAAmrC,SAAApxC,MAYjB,OAXU,IAAVA,KAAA0jC,UACAx8B,EAAAiY,MAAanf,KAAKimE,QAAAzoE,aAUlBmnB,EAAA+wO,gBAAAh1P,EAAAwG,IAEFouP,EAAC70P,UAAAu1P,aAAA,WAEDh2P,KAAAkH,QAAAkgB,QAAA,CAAAvrB,KAAA,MAAA0F,MAAA,cAGEd,UAAAq1P,4BAAwB,SAAAG,GACxB,IAAIp6O,EAAO3U,EAAOd,EAAKu4B,EAMxB,IALCz3B,EAAO,GACRlH,KAAA6b,QAEDA,EAAA3d,OAAAktH,GAAoB,gBAApBltH,CAAoB8B,KAAAgmE,YAAAnoE,QAAAmC,KAAA6b,MAAA,cAEnBzV,EAAA,EAAAA,EAAA6vP,EAAA9wP,OAAAiB,IAAA,CAED,IAAAwI,EAAAqnP,EAAA7vP,GACQvK,OAAaoK,IAAH2I,EAAG/S,MAAA,OAAA+S,EAAA/S,KAAA+S,EAAArN,MAAAqN,EAAA/S,KACb0F,OAAe0E,IAAL2I,EAAKrN,OAAiC,OAAnBqN,EAAgBrN,MAAgBqN,EAAM/S,KAAI+S,EAAArN,MAS3E,GAREolB,EAAM5lB,EAAAqb,SAAA7a,KAEFA,EAAQA,EAAAsE,YAEd8gB,EAAQ5lB,EAAAqb,SAAAvgB,KACTA,IAAAgK,YAGOgW,EAAM,CAER,KADJ8iB,EAAA9iB,EAAA+tB,KAAqBroC,IAEnB,SAGEo9B,EAAUx5B,OAAW,IACvB5D,EAASo9B,EAAA,GACV9iC,EAAA8iC,EAAA,IAKCz3B,EAAQ0I,KAAA,CAAM/T,KAAMA,EAAE0F,UAI1B,SAFColB,EAAA5lB,EAAAyrL,OAAAtlL,EAAA,SAEIlH,KAAOk2P,mBAAWhvP,EAAAlH,KAAAiQ,SAEhBxP,UAAAy1P,mBAAe,SAAAhvP,EAAAi4I,MACrB,IAAAA,EACD,OAAWj4I,EAGb,IAAAivP,EAAAj3P,KAAAC,KAAAggJ,EAAY,GACNi3G,EAASj3G,EAAgB,GAAO,EAyBtC,OAxBC,IAAAg3G,EAEDjvP,EAAAyf,EAAA5lB,EAAAq6E,OAAAl0E,EAAU,QAEC,IAAPivP,EACDjvP,EAAAyf,EAAA5lB,EAAAq6E,OAAAl0E,EAAA,SAAAogG,GACM,IAAK3oE,EAAC2oE,EAAAzrG,KAAAkgB,MAAA,cACd,OAAA4iB,KAAAx5B,OAAA,GAED,EAIAkG,SAAAszB,EAAA,GAAc,MAIQ,IAAbw3N,IACRjvP,EAAAyf,EAAA5lB,EAAAq6E,OAAAl0E,EAAA,SAAAogG,GACH,OAAA3gF,EAAC5lB,EAAAs1P,QAAA/uJ,EAAAzrG,SAEDu6P,IACQlvP,EAAYA,EAAAwL,WAElBxL,GAEAouP,EAAA70P,UAAAwzP,UAAA,SAAA7iN,sEDrHqBkkN,EDgJK,MCrHc,EAAwB,YAA5C,aAAoBgB,eAfxC,qEACQ,UAMG,oBAGTC,EAAcl6P,EAAA8nB,EAAA2kG,EAAA9iD,QACd3pE,aACA8nB,gBAIAnkB,KAAA8oH,cACD9oH,KAAAgmE,cAEDhmE,KAAAyP,SAAA,CACEsE,KAAO,aACR/O,KAAA,GAED+lE,KAAA,EACEvpE,MAAA,GACAud,QAAY,GACblD,MAAA,GAED3U,QAAA,GACExG,MAAA,GACIoyE,OAAC,EACHijL,YAAY,EACZryN,QAAS,EACR6P,aAAA,UAGDu9M,GAAoB,GAAA9wP,KAAA3D,EAAA2D,KAAAyP,eACrBi0B,QAAA,WA5BMtd,QAAK,sDA+BdmwO,EAAC91P,UAAArE,aAAA,WAMD,OAJA8B,OAAA4yP,GAAA,EAAA5yP,CAAA8B,KAAA3D,MAAA2D,UAAAyP,UAECzP,KAAA3D,MAAA6K,QAAA,GAEDlH,KAAA3D,OAEAk6P,EAAC91P,UAAA+zP,SAAA,SAAAvxO,GAED,OAAAjjB,KAAA8oH,YAAA8rI,mBAAA50P,KAAgBijB,IAEhBszO,EAAC91P,UAAA4vG,cAAA,WAED,IAEIx0F,EAFJ3U,EAAA,GACMorK,EAAKtyK,KAAQmkB,cAAgBqjJ,iBAAA,CAAAkL,eAAA,IAEhC1yK,KAAA6b,QACDA,EAAY7b,KAAAgmE,YAAcnoE,QAAAmC,KAAA6b,MAAA,cAC3BA,EAAA3d,OAAAktH,GAAA,gBAAAltH,CAAA2d,IACF,QAAAzV,EAAA,EAAAA,EAAAksK,EAAAntK,OAAAiB,IAAA,YAGO6kE,EAAQ7tE,KAAAP,KAAAmD,KAAAU,QAGdmb,IAAmBA,EAAA+tB,KAAAqhC,EAAAjmE,kDE3ErB,IAAAkC,EAAA/B,QAiBE+B,EAAgB0I,KAAA,CAAA/T,KAAA,wBAAA0F,MAAA,KACIvB,KAAAkH,UAAoBlH,KAAA+1P,YAZxC/1P,KAAAg2P,eAEEh2P,KAAQ8oH,YAAAyrI,+BAAAv0P,SAECS,UAAAu1P,aAAA,gBACT9uP,QAASkgB,QAAA,CAAAvrB,KAAA,MAAA0F,MAAA,cAEEd,UAAAwzP,UAAA,SAAA7iN,WACXpxC,KAAA6b,OACA3d,OAAA4yP,GAAA,EAAA5yP,CAAA8B,KAAA6b,MAAAu1B,EAAApsC,SAQAvE,UAAA0zP,gBAAA,SAAAD,GACA,OAAOl0P,KAAK8oH,YAAM2rI,iBAAAz0P,KAAAk0P,IAGpBqC,EAAA91P,UAAA+yC,eAAA,WACE,MAAiB,QAAbxzC,KAAC+e,QAAYljB,KAClB,MAGMmE,KAAO+e,QAAMxd,OAElBg1P,EFlBS,MEsBI,cACfvxP,KAAC,aAEDovP,KAAAoC,kBACa,EACbtzO,YAAC,0FASD,SAAMuzO,EAAAp6P,EAAAysH,GACN9oH,KAAA3D,MAAaA,EACb2D,KAAA8oH,2CCzDqB9jH,KAAA,GACqDxD,MAAA,GAE5EupE,KAAA,EAcE7jE,QAAgB,GAChB6X,QAAA,GAAoBre,MAAK,GAXzBq1P,YAAgB,EACdjjL,OAAM,EACNpgC,SAAQ,KACRa,aAAS,UAETu9M,GAAgB,GAAA9wP,KAAA3D,EAAA2D,KAAAyP,UA4ClB,ODFAgnP,EAAMrwO,QAAU,0BCxCd3lB,UAAa+zP,SAAK,SAAAvxO,UAClBjjB,KAAA8oH,YAAA8rI,mBAAA50P,KAAAijB,IAKFwzO,EAACh2P,UAAArE,aAAA,WAGC,OADF8B,OAAA4yP,GAAoB,EAApB5yP,CAAoB8B,KAAA3D,MAAA2D,UAAAyP,UACXzP,KAAA3D,OAGTo6P,EAAAh2P,UAAA4vG,cAAA,WAWC,OATCrwG,KAAAkH,QAAYyf,EAAM5lB,EAAAK,IAAApB,KAAAU,MAAAqb,MAAA,2BAAAlgB,GAGpB,OAAAA,MAFCA,IAAAgC,QAAA,aAED4xH,OAAAluH,MAAA1F,EAAA4zH,UAECzvH,KAAA+1P,YAED/1P,KAAAg2P,eAECh2P,KAAA8oH,YAAAyrI,+BAAAv0P,SAEDS,UAiBCu1P,aAAA,WAhBCh2P,KAAKkH,QAAAkgB,QAAC,CAACvrB,KAAO,MAAC0F,MAAW,cAEzBd,UAAAwzP,UAAA,SAAA7iN,GAED,OAAK,KAED3wC,UAAY0zP,gBAAkB,SAAOD,UACpCl0P,KAAA8oH,YAAA2rI,iBAAAz0P,KAAAk0P,MAEEzzP,UAAU+yC,eAAC,iBACI,aAAlBz0B,QAAQljB,KACR,MAEDmE,KAAA+e,QAAAxd,OAGJk1P,QAGyB,EAAM,0CAGxB,iDACA,UAMiC,oBAIvCC,EAAqBr6P,EAAAysH,GACtB9oH,KAAA3D,QAED2D,KAAA8oH,cACE9oH,KAAKyP,SAAU,CAChBsE,KAAA,WACH/O,KAAA,GAAC+lE,KAAA,WAEDrqE,MAAA,GACQqe,QAAA,GACA7X,QAAA,GACNqsC,aAAa,sCCxDb,OD4CAmjN,EAAAtwO,QAAA,wBCxE0EswO,EAAAj2P,UAAArE,aAAA,WAoB1E,OAjBF8B,OAAA4yP,GAAA,EAAA5yP,CAAA8B,KAAA3D,MAAA2D,UAAAyP,UAiBEzP,KAAgB3D,SACIoE,UAAU+zP,SAAA,SAAAvxO,GAAUjjB,KAAA8oH,YAAW8rI,mBAAa50P,KAAAijB,MAXxDxiB,UAAS4vG,cAAA,uBACfnpG,QAAQ,EAAArL,KAAAmE,KAAAU,MAAA+uH,OAAAluH,MAAAvB,KAAAU,MAAA+uH,cACR+kI,SAAOx0P,KAAAkH,QAAA,IACPmd,QAAS61D,aAEAz5E,UAAEwzP,UAAA,SAAA7iN,UACX,KAEA3wC,UAAA0zP,gBAAA,SAAAD,GAIA,OAAAl0P,KAAA8oH,YAAA2rI,iBAAAz0P,KAAAk0P,IAGFwC,EAAAj2P,UAAA+yC,eAAA,WACE,OAAAxzC,KAAA+e,QAAAxd,OAEDm1P,EDyCwC,MCrCxC,YAED1xP,KAAA,gBACE2xP,eACK,qGAQPC,GAAA,WAGA,SAACC,EAAAx6P,GAED2D,KAAA3D,QACE2D,KAAAyP,SAAY,CACbsE,KAAA,QACH/O,KAAA,GAACxD,MAAA,UACDmjB,WAAa,KACb2sB,QAAA,GACQiC,aAAU,GAEhBr1C,OAAW4yP,GAAE,EAAb5yP,CAAa8B,KAAA3D,EAAA2D,KAAAyP,mBAXJ2W,QAAK,qEC7C8BywO,EAAAp2P,UAAArE,aAAA,WAGD,OADJ8B,OAAA4yP,GAAA,EAAA5yP,CAAA8B,KAAA3D,MAAA2D,UAAAyP,UACIzP,KAAA3D,OAEIw6P,EAAAp2P,UAAA4vG,cAAA,WACU,OAAAhsF,QAAA61D,WAEJ28K,EAAAp2P,UAAAwzP,UAAA,SAAA7iN,GACN,UAGjDylN,EAAAp2P,UAAA0zP,gBAAmB,SAAeD,GAChC,IAAOp0P,EAAAE,KCAP,ODCC2mB,EAAA5lB,EAAA4E,QAAAuuP,KAWDA,EAAA,CAAAA,sGC1B2C,OACtB5tP,IAAAgI,EAAA,GAEmC0V,SAAA1V,EAAA,GAI1D/M,MAAA+M,EAAA,MAOE+V,QAAA61D,aAEUz5E,UAAA+yC,eAAe,WACf,IAAA1zC,EAAAE,KACA,OAAEA,KAAAsxC,QAAWlwC,IAAA,SAAAoQ,GAEjB,MAAC,CAAAA,EAAWlL,IAAAkL,EAAawS,SAASxS,EAAAjQ,OAE/BH,IAAA,SAAAG,GACJ,OAAKzB,EAAAg3P,gBAAAv1P,KAEAkF,KAAC,UAGAhG,UAAUq2P,gBAAU,SAAgBv1P,UACzCA,EAAK1D,QAAW,MAAK,YAE3Bg5P,EAACp2P,UAAAs2P,kBAAA,SAAAx1P,GAED,OAAAA,EAAA1D,QAAA,mBAEW4C,UAAGu2P,WAAM,SAAK1lN,GAEvBtxC,KAAKsxC,QAASA,KFOhB,MEFiC,EAAS,iDAGtC,2CAO2B,sBAGdj1C,EAASysH,cACpBzsH,OACDysH,mBACDr5G,SAAA,CACHsE,KAAA,UACH/O,KAAA,GAAC+lE,KAAA,WAEDrqE,MAAQ,qFARG0lB,QAAI,wBCrDQ6wO,EAAAx2P,UAAArE,aAAA,WAGuB,OADT8B,OAAA4yP,GAAA,EAAA5yP,CAAA8B,KAAA3D,MAAA2D,UAAAyP,UACSzP,KAAA3D,OAM9C46P,EAAgBx2P,UAAA+zP,SAAA,SAAAvxO,GAChBjjB,KAAS8oH,YAAA8rI,mBAEP50P,KAAAijB,MAQMxiB,UAAkB4vG,cAAE,WAGxB,YAFEnpG,QAAU,EAAIrL,KAACmE,KAAUU,MAAA+uH,OAAUluH,MAAAvB,KAAAU,MAAA+uH,cACpC1wG,QAAA/e,KAAAkH,QAAA,GACKmd,QAAS61D,aAENz5E,UAAQwzP,UAAQ,SAAA7iN,UACxB,KAEQ3wC,UAAS0zP,gBAAA,SAAAD,GAEnB,OADCl0P,KAAGU,MAAAwzP,EACJl0P,KAAA8oH,YAAA2rI,iBAAAz0P,KAAAk0P,MAGMzzP,UAAa+yC,eAAA,kBAChBxzC,KAAO+e,QAASxd,OAElB01P,EDe6B,MCX9B,WAEDjyP,KAAA,gBACEkyP,eACQ,2EAgBK,EAAA34K,QAAO,mCACb,QAMT44K,GAASj9P,EAAmC,WAMxB,oBAGhBk9P,EAAAnvK,EAAA5iE,EAAA2kE,EAAAlc,GAEF,IAAMhuE,EAAAE,KACNA,KAAAioF,aAAOA,OACL5iE,WAAeA,OACf2kE,YAAcA,OAEdlc,GAAKA,gBACIma,EAAct4B,cACtBme,GAEDG,KAAI/vE,OAASi5P,GAAkB,EAA3Bj5P,CAA2B8B,KAAA2vD,gBAC7B,SAAOphB,cACEA,KAEV6qE,MAAA,SAAAhiB,GAEDt3F,EAAIulB,WAAWG,SAAA,uCACbyjE,SAAUnpF,EAAAkqF,YAAcC,4BAnBzB7jE,QAAA,mDAuBC3lB,UAAU42P,SAAW,SAAQC,oBAC7BA,YACA3wO,EAAO5lB,EAAc6J,KAAA0sP,EAAArzJ,SAAA,CAAAg7I,KAAAj/O,KAAAioF,aAAAg3J,QACtBj/O,KAAEosF,KAIN,OAFGpsF,KAAAqlB,WAAgBG,SAAC,cAAgB,gCAChCxlB,KAAAipF,SAAAjpF,KAAAgqF,YAAAC,kBAIH,GAAc,QAAdqtK,EAAQvjP,OAAYujP,EAAA5wH,eAClB1mI,KAAAqlB,WAAYG,SAAA,mDACZxlB,KAAKipF,SAAAjpF,KAAcgqF,YAAAC,wBAIfjqF,KAASgqF,YAAQg2J,OAAO,eAAAsX,EAAAz6P,kBACpB,WAEJy6P,EAAK9mP,KAAEi0B,MAAAs/D,eACLuzJ,EAAMtyP,sBAENonF,KAAApnF,iBACD,EAAApJ,MAAA07P,EAAAtyP,KAAA2B,IAAA4wP,EAAAn3N,KAAAz5B,WAhDW,cAuDZ,uBAAOwiB,WAAA,cAAAquO,MAGO,oBASlBztL,EAAwB5lD,EAAAkB,EAAAyoD,EAAAkxC,EAAA8R,EAAAvhE,cAkBlBrmC,EAAA8lJ,eAIkB,IAAxB9lJ,EAAKpiB,QAAA,UACHoiB,IAEE,IAAOA,WAyBVuuO,EAAA/9O,EAAAuwD,OACDytL,EAAS,MACP,gBAAiBh+O,EAAApe,MAAAyY,cACf,CAAA1Y,UAAS,IAAAC,MAAA,IAAA4R,IAAA,WACR,CACJ7R,UAAA,YACFC,MAAA,QACFq8P,MAAA,wBAICC,EAACnjP,EAAoB,EAAK9X,OAAE+c,EAACpe,MAAOyY,aAClC7V,OAAU25P,EAAa,EAAvB35P,CAAuB05P,EAAA/6P,IAAAqE,KAAA,SAAA42P,GACtB,IAAA1oM,EAAA0oM,EAAAvmJ,iBAGC,OADJmmJ,EAAgBv1L,UAAO/S,GAClBA,GAAQA,EAAA2oM,WAEbL,EAEEtoM,EAAM4oM,gBACC5oM,EAAY4oM,gBAAE92P,KAAA,SAAAwW,GACnB,OAAWggP,SAIXtoM,EAAGlmC,YAAA+uO,EAAA7oM,EAAAlmC,YAAA0uO,EAAA5oF,UAEJ5/G,EAAA4oM,yBA7EIt6K,QACGlzD,gBACNsjD,EAAAG,KAAOyP,EAAAlzD,kBAIKvpB,IAAAy8E,EAAoBx0D,wBAK9B+kD,KAAOiqL,SAELx6K,EAAMx0D,aAAehoB,KAAM,SAAGwW,mBAgEnCygP,CAAA/oM,GAAAluD,KAAA,SAAAspB,GAIC,OAHL4kC,EAAAlmC,YAAA,KAEQkmC,EAAA5kC,SAAwB,0DAAwDA,EAAA,mBACnFktO,IAEKtoM,EAAA4oM,4BChMRI,EAAA1+O,EAAAswD,EAAAC,EAAAytL,GACD,GAAAA,EAAAW,SACHruL,EAAAkc,YADG,iBClCwB,MACF/mD,QAAA,gDAAAu4N,EAAA1yP,6DCD0B+rD,IHwKlC7pD,EGxKkCwwP,aH0KxCxuO,YAAS+uO,EAA2B/wP,EAAAi7D,UAAuBj5C,YAAEhiB,EAAA8nK,2BAGjE9lJ,YAAGhiB,EAAAi7D,UAAAj5C,YACJsB,SAAAtjB,EAAAi7D,UAAA33C,SACDvB,SAAW,IACXE,WAAgBjiB,EAACi7D,UACf94C,aAAc,OACdD,kBAAO,QACLliB,EAAOoxP,uBACE5+O,EAAEswD,EAASC,EAAOuG,GACzBA,EAAI/d,MACJ+d,EAAA/d,KAAU/4C,EAAEswD,EAAUC,EAAKuG,GAE3BA,EAAA3gE,MACA2gE,EAAA3gE,WGxLW4+D,EAAA,EAAAJ,UAAAkqL,EAAAxnM,GACkC2mM,EAAAv1L,UAAA41L,YAAA,MHsKvC7wP,6GClJM3F,UAAZmY,iDAIJ,oBACAyR,cACA,aACF62D,YAAA,WACAtoE,EAAM8+O,WAAI,+BEjBdC,CAAgB/+O,EAAAswD,EAAA0tL,UAChB,CAIUzuO,SAAA,IAEAwpC,KAAA,SAAA/4C,EAAAswD,EAAaC,aHiNbvwD,EAAAuwD,UACJA,EAAAl2D,MAEH,iBAEI,IAAA6Q,EAAAlL,EAAc82D,KAAS7rD,WACpB,OAAAmpD,EAAAG,KAAa,CACb+gG,QAAWpqJ,EAAGxnB,KAAA4xK,QACpBhqK,KAAA,cAAU4f,EAACxnB,KAAAP,GACXy7P,SAAc,CAAA9jP,OAAU,IAAAo3H,UAAkB,IAAAjnH,WAAA,KAC3CslD,MAAA,CAEez1D,OAAQ,cACzBkkP,aAAA,OAEM/zO,WAAA,mBAECw9C,UAAav9C,EAAAvhB,WAAwBQ,YAIvC,IAAE,gCACK3F,OAAA25P,EAAS,EAAT35P,CAASwb,EAAA82D,KAAA8pK,kBAAAl9O,MAAA8D,KAAA,SAAAwtK,GACd,MAAW,CACVM,QAAAt1J,EAAA82D,KAAA8pK,kBAAAl9O,KAAA4xK,QACNhqK,KAAA,0BAAA0U,EAAA82D,KAAA8pK,kBAAAl9O,KAAAP,GACDy7P,SAAA,CAAA33B,WAAA,IAAAh8M,WAAA,KACHslD,MAAA,CAED02J,WAAoB,6GI7PlB,iCACEg4B,EAAAj/O,EAAA82D,KAAMooL,eAIR,OAAQ16P,OAAG25P,EAAyC,EAA5C35P,CAA4Cy6P,GAAAz3P,KAAA,SAAAwtK,GAK7C,OAJAh1J,EAAQ0wD,OAAG,eAAa,WAC7B1wD,EAAAm/O,eAAAn/O,EAAA82D,KAAAzxD,WAEO,GACI,CACXiwJ,QAAA2pF,EAAA3pF,QATehqK,KAAK,aAAgB2zP,EAAA97P,mCACrCotE,MAAA,CAAA7sE,KAAA,sBAAA2hB,QAAA,gBAUDojD,UAAAusG,EAAA/qK,qBAgBF,sBA9BwD,IAAAm1P,EA8BvDp/O,EAAA82D,KAAAn0E,8FHlC6Ci8P,SAAA,CAAAS,SAAA,IAAAC,YAAA,KACW/uL,MAAA,CAAAgvL,YAAA,aAAAC,gBAAA,QAC/B/2L,UAAAg3L,EAAAx1P,uGAOP,mBAAXqB,KAAQ,YAAqCo0P,EAAAv8P,GAAA,IAAA6c,EAAA82D,KAAA4b,KAAA6yJ,KAC/CqZ,SAAS,CAAAS,SAAW,KACtB9uL,MAAA,CAAAgvL,YAAO,iBACR92L,UAAAg3L,EAAAE,aAAA3/O,EAAA82D,KAAA4b,KAAA1O,sCAGF,QAEe,OAAA5P,EAAAgV,OAAA,CACP3jD,QAAA,kCAAkD8qC,EAAAl2D,SEG/CulP,CAAA5/O,EAAAuwD,GACA/oE,KAAA,SAAAw2P,GAEHU,EAAsB1+O,EAAAswD,EAAAC,EAAAytL,KAGtBt+I,MAAU,SAAUhiB,GACpBlhF,QAAAxG,IAAe,yBAAiB0nF,SAM9B,EAAY/oB,UAAG,kBAAiB4vK,QA8BxBsb,GAvBU,SAAA35P,YAEtB45P,EAAA35P,OACDC,EAAOF,EAAAG,KAAUC,KAAAH,IAAAG,YACnBF,EAAEwC,SAAA,SAAAgf,GAEFxhB,EAAUe,SAAA,CAAAU,MAAA+f,EAAwBw7E,cAACv7F,WAEjCg0B,OAAS,SAAAjU,KACPzhB,MAAOyC,SAAKgf,EAAAw7E,cAAAv7F,MAAA+f,EAAAw7E,cAAAv7F,UAEdtB,MAAS,CAAAsB,MAAA1B,EAAea,kBAVf,EAAA84P,EAAA55P,KAcAa,UAAcoB,OAAA,kBACrB6O,EAAM3P,EAAAmB,cAAiB,OAAAH,UAAA,aACdhB,EAAAmB,cAAQ,QAAAH,UAAA,qCAEZhB,EAAAmB,cAAS3E,EAAA,OAAAwW,KAAA,OAAAhS,UAAA,gBAAAR,MAAAvB,KAAAC,MAAAsB,MAAAe,SAAAtC,KAAAsC,SAAAizB,OAAAv1B,KAAAu1B,OAAAhzB,YAAA,4BAAA66C,UAAA,QAnBO,GAsBtB,2BAUIhgD,UACNqpB,EAAA,EAAAzmB,UAAA,oBACF,IAAA0uK,EAED,OAAAjoJ,EAAgC,EAAAzmB,KAAA,SAAA8B,GAChC,OAAAA,EAAAN,OACA,gBAAAtD,OAAA25P,EAAA,EAAA35P,CAAAd,IACO,KAAK,EAET,OADQsxK,EAAK5sK,EAAA+iB,QACbxhB,WAAAsB,oBACoB,GAAU+pK,EAAArrK,WAAAsB,qBAGT,GAAa40P,kBAUnCrb,GAAAl4K,OACAlmE,EAAME,WAEN,CACAipB,SAAA,IACAwpC,KAAM,SAAU/4C,EAAGswD,GAAA,OAAAvjD,EAAA,EAAA3mB,OAAA,oBAEb,IAAIqiE,EAAStiE,EAEnB,OAAA4mB,EAA0B,EAAAzmB,KAAA,SAAA8B,GACrB,OAASA,EAAAN,OACF,KAAK,WAAAi4P,GAAA//O,EAAA4gO,kBAAAl9O,OACZ,OAgBM,OAdX+kE,EAA4BrgE,EAAA+iB,OAChBhlB,EAAU,CAER8kB,WAAEjL,EAAO4gO,kBACX55O,MAAagZ,EAAEqF,QAAAre,MACX4B,SAACoX,EAAA+lE,cACdzZ,eAGKgW,EAAkBj7E,EAAAc,OAAA6O,EAAA3P,EAAAmB,cAAAigE,EAAA17C,EAAA,KAAA5mB,IAAAmqE,EAAA,IAExBtwD,EAAAE,IAAA,WAA2B,WACXoiE,EAAEj7E,EAAAu9E,uBAAAtU,EAAA,MAEH,aAQC,EAAAqE,UAAK,4BAAA6vK,WAgBG,oBAIpBwb,EAAer+P,EAAAqe,EAAQigP,EAAiBv0O,EAAMguD,EAAA7jB,EAAA24B,EAAA7iE,GAEpD,IAAAvlB,EAAOE,KACRA,KAAAolB,YAEDplB,KAAAuvD,WACEvvD,KAAKkoF,WAAWA,EAChBloF,KAAKqlB,WAAWA,EACjBrlB,KAAAolB,YAEDplB,KAAAozE,UACEpzE,KAAK+e,QAAU1jB,OACbu+P,aAAcx0O,EAAA1iB,YACdgX,QAEHA,EAAAuM,WAAA,6BAEDnmB,EAAA29N,SAAA39N,EAAAif,QAAAoI,oBAAArnB,EAAA85P,aAUCx0O,EAAA1iB,SARC0wE,EAAMymL,eAAc,WAClB,IAAA/5P,EAASg6P,gBAGT,OAAGh6P,EAAAi6P,aACF,mDADD,GAOFrgP,EAAME,IAAA,uBAAyB,SAAe0H,EAAOtM,GAEjD,OAAClV,EAAS85P,eAAcx0O,EAAA1iB,WAE/B5C,EAAAg6P,mCE1L8Dx4O,EAAAI,iBACf5hB,EAAAkV,OAIhClV,EAAAyvD,SAAA,WACAzvD,EAAiBk6P,iBAYlB,MAEdL,IAAAt+P,EAAA+B,KAAA68P,YAEDj6P,KAAOuvD,SAAQ,6FFiILnpC,QAAc,qBAAe,oBAAe,4DGtJTszO,EAAAj5P,UAAAq5P,cAAA,WACjB,IAAA95P,KAAAy9N,SACL,SAEc,IAAAz9N,KAAAkoF,WAAA1I,SACI,SAOzC,IAAAx/E,KAAA+e,UAAA/e,KAAA+e,QAAA3hB,KACE,SAEU,IAAAA,EAAA4C,KAAU+e,QAAV3hB,KACA,OAAAA,EAAAyoB,SAAAzoB,EAAA88P,YAA0B98P,EAAA+8P,YAG1B15P,UAAa25P,iCAAA,SAAAC,GAGb,IAAAh+P,EAAA,IAAAugO,GAAiB,EAAAy9B,GAI3Bh+P,EAAAo1K,aACE,IAAAhtF,EAAWpoF,EAAA8qB,6BAET3T,KAAM,YACG,kBACK,WAEZwqN,mBACAr3M,EAAc5lB,EAAAyQ,OAAAizE,EAAA9nF,OAAA,SAAArB,UACdA,EAAAw0G,gBAILx0G,EAAAwC,WAAA,KAEDxC,EAAA0U,gBACc1U,EAAA0U,OAAAC,YAEC3U,EAAQ0U,OAAEwlG,WAEtB,OAEUz0G,EAAA44B,KAAK8qD,EAAAukC,WAAA7lG,KAAqB,SAAA5hB,GACnCA,EAAGwd,QAAA,KACJxd,EAAA2F,QAAA,OAAMoqC,QAAA,YAID7wC,UAAWs5P,WAAa,iBACtB/5P,KAAKo6P,iCAAiCp6P,KAAG+e,QAAAoI,uBACzCnnB,KAAMo6P,iCAAiCp6P,KAAAy9N,YACxC92M,EAAA5lB,EAAA6J,KAAAmU,EAAAstM,IAAA,CAAAt4M,KAAA,iBACa4S,EAAA5lB,EAAA6J,KAAA6yN,EAAApR,IAAA,CAAAt4M,KAAA,eAOpB,OANIumP,GAAEC,MACKl7J,IAAAk7J,EAAAl7J,KAEJp4E,EAAAlmB,EAAAmmB,OAAAnI,GAAA,KACNkI,EAAAlmB,EAAAmmB,OAAAu2M,GAAA,MAIGh9N,UAAA+5P,eAAA,gBACD/8B,SAAA,UAEDg9B,cAGKh6P,UAAQu5P,WAAA,WAChBh6P,KAAAqlB,WAAAG,SAAA,cAEDi0E,aAAA,sEAAA9O,WAAA,mCAIUlqF,UAAKi6P,YAAmB,iBAE5B16P,KACEgtF,EAAOhtF,OACDA,KAAEqlB,WAAAzL,IAAA,4CAEJ,aACA6gP,+BAGFj1O,SAAiB,qBAGrB/kB,UAASg6P,SAAA,eACPE,EAAQ36P,KAAIolB,UAAAw1O,SAAAz1P,OAA+BnF,KAAEolB,UAAAze,MAAAxB,OAC7C01P,EAAK76P,KAAAgV,KAAWmjD,UAASwiM,kBACvBh0P,IAAAk0P,MHmDkB,eGxCTx1O,EAAKyoD,EAAA1oD,EAAamqC,EAAA24B,EAAA5iE,EAAA8tD,aAC7B,SAAO/3E,EAAAqe,GAGb,YAFEohP,QAAA,IAAAC,GAAA1/P,EAAAqe,EAAA,IAAA0L,EAAAguD,EAAA7jB,EAAA24B,EAAA7iE,GAEFrlB,KAAA86P,WAgBA/5P,EAAA8B,OAAA,oBAAiCi5E,QAAA,oBAAAk/K,WAG/B9gQ,EAAa,WACGA,EAAAqhC,EAAA0/N,OAGb/gQ,EAAA,sBCvIqB,SAAAghQ,EAAAv6P,EAAA2kB,EAAAnB,EAAA66F,EAAAlxC,EAAAve,EAAA24B,EAAAD,EAAA5iE,GACPrlB,KAAAW,aAGZX,KAAOslB,aAAGA,EACnBtlB,KAAAmkB,cAAiBA,EACjBnkB,KAASg/G,MAAEA,EACXh/G,KAAQ8tE,GAAEA,EACN9tE,KAAEuvD,SAASA,EACXvvD,KAAEioF,aAASA,EACZjoF,KAAEqlB,WAAgBA,kIAErB61O,EAAAz6P,UAAA06P,qBAAA,SAAAv/P,EAAA4kN,GAqBA,OACApjN,KAAA,CAAAkgO,SAQC,EAtBD6D,WANF3gB,MAAA,EAOI16L,WAAO,EACPD,SAAY,EACZxoB,SAAa,EACb+9P,mBAAS,aAKR,CAAAx/P,aAmBK6E,UAAGy+O,cAAA,SAAAnrO,EAAAkrO,EAAAv2N,OAET8iE,EADA1rF,EAAKE,KAyBP,OAvCMwrF,EAgBJ,WAAAz3E,EAhBY/T,KAAGq7P,uBAAQpc,GAEL,aAATlrO,EAEE/T,KAAAW,WAAYM,IAAA,kBAAAg+O,GAAA7lI,MAAA,WACrB,OAAWt5G,EAAAq7P,qBAAS,sBAAsB,KAKhCn7P,KAAOW,WACpB8/G,kBAAA/3F,GAODxnB,KAAA,SAAAC,GACO,GAAAA,EAAU/D,KAAMk+P,SAEhB,MADOx7P,EAAMulB,WAACG,SAAA,uCACJ,IAAApP,MAAA,uBAGjB,OAAAjV,IAEWi4G,MAAG,WACJ,OAAIt5G,EAASq7P,qBAAE,mBAIlBj6P,KAAA,SAAaC,GAKlB,OAJD,IAAAA,EAAA/D,KAAAg+P,mBAEDphL,GAAA,EAAAuhL,uBAAqDp6P,EAAA9F,UAAAwB,IAEnDsE,IAGFqqF,KAEiB/qF,UAAA46P,uBAA0B,SAAA3uC,GAC1C,IAAA5sN,EAAAE,KACH2G,EAAA,qBAAC+lN,EAAA7uN,QAAA,yBAAAyV,MAAAs1B,UAAA,OAAA5oC,KAAAg/G,MAAA,CAAAr4G,MAAAmpE,OAAA,6CAEQ5uE,KAAA,SAAeC,GACf,OACG/D,KAAK,CACD88P,YAAA,EACDp0O,WAAE,EACbD,SAAkB,EACNy3M,SAAQ,GAElBjiO,UAAc8F,EAAAqH,OAEhB,SAAA4uF,GCzFmB,OD0FtBlhF,QAAAxG,IAAA,0BAAA0nF,GAEDt3F,EAAQulB,WAAOG,SAAA,cAAsB,6EC5Fd1lB,EAAAq7P,qBAAA,yBASrBD,EAAOz6P,UAAA+6P,eAAA,SAAAr6P,GACL,IAAArB,EAAOE,KACLgyF,EAAU,CACV1sE,aAActlB,KAAAslB,aACfnB,cAAAnkB,KAAAmkB,cACD2pD,GAAQ9tE,KAAK8tE,IAIb2tL,EADM,IAAQC,SAAA,iFAAAv6P,EAAAqH,KACdmzP,CAAA37P,KAAAioF,aAAAnZ,GAAA,EAAAs8C,GAAA,SAAAzkG,EAAA5lB,EAAAktK,GAAAltK,EAAA4B,OAAA7D,SAAAgoB,EAAA/lB,EAAA+lB,EAAA/lB,EAAAixF,GAGJ,GAAArrE,EAAgB5lB,EAAAw/C,WAAAk7M,GAAA,CACP,IAAAG,EAAwB57P,KAAA8tE,GAAcsyC,QAOzC,OANGq7I,EAAA,SAAApgQ,GACGyE,EAAKyvD,SAAA,WACPqsM,EAAa1hL,QAAY,CAAA1xE,KAAAnN,QAIzBugQ,EACFpwK,eAEChjF,KAAKizP,oBAMJ,oBAAA3/K,QAAA,qBAAwC+/K,MAGjC,eAOX,iBAES,0IAUN,sBAGc32O,EAAAG,SACbrlB,uBACM,2DAEL,mBACLkwH,YAAC,qBAEDK,QAAS,CACP70B,OAAM,+JAEC,kCAGTogK,SAAU,WACVh8P,EAAKi7B,KAAQ,MAEbj7B,EAAA2yD,KAAA,CAAA1+C,KAAA,aAAiCjY,KAAA,+BAE1BigQ,QACN1gQ,UAAAy2D,MAAA9xD,KAAA3E,UAAAy2D,OAAA,QAED/2B,KAAQ,SACRnhB,IAAA,WAAmB,WACpByL,EAAAG,SAAA,iCAxBGY,QAAU,wBA4BlB41O,EAAAv7P,UAAA+5O,WAAA,WACEx6O,KAAA+6B,KAAgB,UASRt6B,UAAgBw7P,QAAa,WAEnCj8P,KAAA3E,UAASy2D,MAAWliD,KAAA5P,KAAYyyD,WAC9B13B,KAAI,sBACGxV,6BAEH9kB,UAAcy7P,SAAK,SAAAzpM,aACpBA,YAEG,mBACFzyD,KAAAyyD,mBAES0pM,SAAU,0CAGfC,SAAa,SAAQ1/P,EAAWo3K,YAEhC9zK,KAAM3E,UAAAy2D,MAAYp1D,IAAAo3K,gBAEnBuoF,WAAA,SAAA3/P,kBACAo1D,MAAA/0D,OAAAL,EAAA,kBACJ6oB,6BA7DA,iBAyGOw5I,EAAWyC,qCAGf9nJ,EAAWswD,OACbvX,EAEA/4C,EAAA+4C,KACDp3D,EAAAqe,EAAAre,UACHmvB,EAAA,iFAGAioC,EAAO6pM,WAAgB,wDAA8B,IACnD,6BAaR,SAAQz2G,IACR,IAAQsd,EAAO3B,EAAA/6F,cAAsBhU,gCChM6B52D,KAAAsnK,EAAAvnK,OACN62D,EAAA6pM,mCCsC1D,WACE,IAAAv3J,EAAA/6B,EAAAp/D,KAAA,KACA2xP,EAAAx9F,EAAAh6D,EAAAtwB,SAAAx0B,QACA8kD,EAAAtwB,SAAAx0B,KAA0Bs8M,OA1CPx3J,EAAAj6F,KAAA,2BAoCvBi6F,EAAA53C,QAAA,CACEvxD,MAAAmjK,EAAoBrlJ,EAAA+4C,KAA4BtF,SAA5BlN,MAAa,EAAmB7G,UAAA,SF+I9CqZ,EAAG6pM,aACH9xO,GACC,8JAMRA,GAAA,mBAEDu/C,EAAQC,EAAO0B,WAAf3B,CAAerwD,GElJXswD,EAASp/D,KAAC,KAAAE,KAAc,QAAG,YAAA4O,EAAA+4C,KAAA32D,MAErBkuE,EAAAp/D,KAAS,KAAGE,KAAA,SAAU4O,EAAA+4C,KAAmBj+C,QAG/Ci+C,EAAA6pM,YAAsB5iP,EAAA8iP,OACtBxyL,EAAUp/D,KAAA,kBAAiB8+C,SAAA,cAGrBm8F,IACAxqJ,EAAA2B,OAA8Bwc,GAAA,UAAAqsI,EAAAnsI,OFwFlC3Y,EAAA8B,OAAU,sBAASwrE,UAAA,8JARb,sDE5EyB,oBAEhCouL,EAAAv3O,EAAAG,EAAAyoD,EAAAntE,EAAA2kB,EAAAk8I,yFAEK1zF,EAAAG,KAAA,CACA,CACAryE,MAAkB8gQ,EAAa9gQ,MAEnCwZ,KAAAsnP,EAAAtnP,KACc2uD,SAAI24L,EAAW34L,SAC3BiB,YAAqB03L,EAAA13L,YACjBxwD,OAAAkoP,EAAsBp2L,YAAA,SAA0B,QAClDxqE,KAAa,aACdwgQ,YAAA,KAMGp3O,EAAO07D,iBAAA87K,EAAA,0DAGT,SAAAA,EAAA3oP,KACA+5D,EAASG,KAAA,CACP,CACItnE,IAAG+1P,EAAO/1P,IACV/K,MAAK8gQ,EAAS9gQ,MAElBE,KAAAigQ,GAAAW,EAAA5gQ,MAEFqxD,QAAAuvM,EAAAvvM,QACI34C,OAAAkoP,EAAoBp2L,YAAA,iBACtBvC,SAAO24L,EAAA34L,SACRiB,YAAA03L,EAAA13L,iBAKCiJ,KAAO,uBAGPtnD,EAAoB5lB,EAAAK,IAAA8jB,EAAA4sC,MAAA6qM,YACpBz7P,KAAc,SAAU2wB,KACxB+qO,eAAAj2O,EAAA5lB,EAAAqkE,QAAAvzC,KAKR3M,EAAE07D,iBAAA,SAAAnuB,EAAAooB,GAEI,OAAAl6E,EAAeR,OAAC,CAAAyxE,IAAiBnf,EAAAr9C,KAAAylE,UAAA35E,KAAA,SAAA2wB,4CAEnC4yD,EAAA5nF,KAAAggQ,GACDnyL,EAAA96D,KAAA,CAEShU,MAAS6oF,EAAA7oF,gBACI4Y,OAAA,UAAAi+C,EAAAj+C,OAAA,GAAAi+C,EAAMj+C,OAAhB1Y,KAAM,iBACXioE,SAAOtR,EAAAsR,SACTiB,YAAAvS,EAAAuS,6IAKAvS,EAAAqqM,WAA4BjrO,sBAI1B,qBAAWkrO,EAAA73O,YAlEnBkB,QAAe,UAAiB,aAAS,8CADV,KAwE/BrlB,EAAA8B,OAAA,sBAAAwrE,UAAA,sCFqBD,CAED30D,MAAO,CACLo4C,MAAO,cACE,yNEvBX/wD,EAAA8B,OAAA,sBAA8BsmB,WAAA,yBAAA6zO,WAQzB,+NAILC,EAAA,WACK,IAAMv7J,EAAAj7E,EAAQ,EAAA01N,EAAAnzH,WAAA7lG,MAAA+5O,EAAAx7J,EAAA1sF,QAAAkoP,EAAAjoP,KAAAioP,EAAAx7J,EAAA1sF,OAAA,CACjB,IAAIo8B,EAAS8rN,EAAI37P,QACf6vC,EAAApsC,MAA2BosC,YAG3B/qB,EAAS,CAAAgP,MAAUmmD,mJAIvB2hL,EAAAF,EAA8Bt4O,EAAAwzC,UAAA,MACFglM,EAAAp+O,UAAjB4F,EAAaw4O,EAAAp+O,QAAAxd,qIAIxByD,KAAA4f,EAAAxnB,KAAsB4H,KACbqL,QAAUuU,EAAGxnB,KAAAoT,KAAAH,SAAA,UAGd8sP,GAAF,CAIC,IAAAC,EAAY,MAASx4O,EAAA5f,KAAAnH,QAAA,SAAA8zC,cACzBlD,EAAK2uN,GAAA,QACJ57P,MAAAojB,EAAE5f,KACAke,YAAiB,GAChBnP,KAAA,gCAEH67C,WAAAhrC,EAAAxnB,KAAuB4H,QAClB2f,WAAc,KAAAy4O,EAAA,WAGf,SAAY9hQ,mBAEJ2K,oBACS3K,qBAIjB,IAAAuZ,EAAA4R,EAA4B,EAAAnrB,EAAA4oB,SAAAnP,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CAC5B,IAAAR,EAASO,EAAKxT,WACQ0E,IAAtBuO,EAASmQ,YACP04O,EAAqB7oP,UAI1BiuF,GAAAl2E,EAAA,CAAA8I,MAAAotE,wGAED66J,IACMC,EAAgC,QAAGD,EAAAzgQ,IAAA,CAClCkX,KAAA,QACAlX,GAAAygQ,EAAazgQ,GAEpBmI,KAAAs4P,EAAEt4P,KACKqL,QAAOitP,EAAA9sP,KAAAH,mBAMZ,IAAAmtP,EAAA/2O,EAAA,EAAA01N,EAAAx/O,QAAA8gQ,EAAAD,EAAAxoP,QAAAyoP,EAAAxoP,KAAAwoP,EAAAD,EAAAxoP,OAAA,CACD,IAAA1Z,EAAAmiQ,EAAAl8P,MAER,GADEm8P,EAAApiQ,QACF2K,IAAA3K,EAAAkgO,YAAA,IAAAlgO,EAAAkgO,WAAAlgO,EAAAqB,6EChN6B+gQ,YAI0B,MAAA97J,GAAA3yE,EAAA,CAAAoG,MAAAusE,GAIxD,QAMkB,IAEN+7J,MACR1oP,OAAAF,EAA4B6oP,EACpBniL,SACA1mE,EAAAhV,KAAe69P,GADf,QAAW,GAAA3uO,EAAA,MAAAA,EAAAoG,SAQrB,MAAAumD,GAAAxwD,EAAA,CAAAiK,MAAAumD,GAAA,QACM,IACG6hL,IAASA,EAAAxoP,OAAAJ,EAAe2oP,EAAK/hL,SAAU5mE,EAAC9U,KAAAy9P,WAEzC,GAAKpyO,EAAA,MAAAA,EAAAiK,eAGJ,IAAAwoO,EAAAp3O,EAAA,EAAA01N,EAAAnzH,WAAA7lG,MAAA26O,EAAAD,EAAA7oP,QAAA8oP,EAAA7oP,KAAA6oP,EAAAD,EAAA7oP,OAAA,CAEN,WADMo8B,EAAA0sN,EAAiBv8P,OACvBwS,OACFspP,EAAAjsN,GAEDA,EAAAlqC,QAAQ,GAARkqC,EAUCryB,QAAA,GATUqyB,EAAA1N,QAAiB0N,EAAA1N,QAAA,EAAA0N,EAAA1N,QAAA,aAInB3X,EAAA,CAAAsJ,MAAA0sE,WAEN,IAAM+7J,MAAA7oP,OAAAW,EAAAioP,EAAApiL,SAAA7lE,EAAA7V,KAAA89P,GAEN,WAAA9xO,EAAA,MAAAA,EAAAsJ,OAGK,IAEJ,IAAI,IAAE0oO,EAAAt3O,EAAgC,EAAA01N,EAAApzH,YAAA5lG,MAAA66O,EAAAD,EAAA/oP,QAAAgpP,EAAA/oP,KAAA+oP,EAAAD,EAAA/oP,OAAA,CACrC,IAAAipP,EAAAD,EAAAz8P,MACH87P,EAAaY,IAIb,MAAMrlD,GAAQ32G,EAAA,CAAA5sE,MAAAujL,WAEZ,IACAolD,MAAA/oP,OAAAgvB,EAAA85N,EAAAtiL,SAAAx3C,EAAAlkC,KAAAg+P,GAGA,QAAK,GAAA97J,EAAA,MAAAA,EAAA5sE,OAST,OALEkoO,EAAe,SAChBxpP,KAAA,UACHlX,GAAA,UAACmI,KAAA,yCAGQqf,QAAA82D,IAAAL,GACL55E,KAAU,WACV,IAAAiiG,EAAarhG,EACb6kB,EAAY5lB,EAAA44B,KAAA8U,EAAA,SAAcltC,GAC1B4/O,EAAAvxO,KAAkBrO,KAElB,IAEH,QAAAsT,EAAA4R,EAAA,EAAA01N,EAAAnzH,WAAA7lG,MAAApO,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CAED,IAAAo8B,EAAWr8B,EAAAxT,iFCnF6C4/O,EAAAvxO,KAAA,CACN5K,KAAAo4P,0HCDpB77P,MAAA6vC,EAAA1wC,MAC2B7E,KAAAu1C,EAAA1wC,SAYnC,MAAA0iG,GAAAD,EAAA,CAAA9tE,MAA0B+tE,GAL9C,QACA,IACQruF,IAAMA,EAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAKd,WAAAsuF,EAAA,MAAMA,EAAN9tE,OAGI,IAAA6oO,EAAY,GAIV,OAHFA,EAAgB,SAAK/c,EACrB+c,EAAQ,WAAAv3O,EAAA5lB,EAAAq6E,OAAAmiL,EAAA,QACR52O,EAAA5lB,EAAA0O,SAAAyuP,EAAA/hB,GACO+hB,IAER9kJ,MAAA,SAAAhiB,GACC,eADK1nF,IAAA,iBAAA0nF,GACD,CACF/hE,MAAA+hE,QHkHC,0BGlGL+mK,EAAa74O,EAAAnB,EAAAe,EAAAG,GACbrlB,KAAAslB,aAAaA,EACbtlB,KAAAklB,OAAYA,EACZllB,KAAAqlB,WAAcA,EACdrlB,KAAKo+P,SAAE,IAAAC,GAAAl6O,QACLsgE,KAAOzkF,KAAGslB,aAAA8c,oBANd+7N,EAAO/3O,QAAA,yDAQJ3lB,UAAA69P,oBAAA,WACD,IAAAx+P,EAAAE,KACAA,KAAAu+P,gBACHv+P,KAAAo+P,SAAAI,eAAAx+P,KAAAykF,MAAAvjF,KAAA,SAAAu9P,GAED3+P,EAAQolB,OAAO4C,OAAA,qCCtDQ9nB,KAAA0+P,iBAAA1+P,KAAAykF,KAAAt9D,sBAOvBg3O,EAAA19P,UAAAk+P,SAAA,WAqBE,IAAA7+P,EAAgBE,KAChBA,KAAAu+P,gBAAoBv+P,KAAAo+P,SAAAI,eAAsBx+P,KAAAykF,MAAAvjF,KAAA,SAAAu9P,GAAU3+P,EAAAolB,OAAA4C,OAAA,WAAsChoB,EAAA8+P,cAAsBH,OAK7Gz+P,KAAA4+P,cAAA5+P,KAAAykF,KAAAt9D,sBAKHg3O,EAAA19P,UAAAi+P,iBAAA,SAAWj6K,GAAX,IAAA9iB,EAAA,IAAAC,KAkCC,CAAA36C,EAAAlmB,EAAAmmB,OAAAu9D,GAAA,KAjCO1wE,KAAM,0CAEV8qP,EAAmB,QAAAl9L,EAAA8iB,EAAA7oF,MAAA,SAAA0X,MAAAs1B,UAAA,YAEnBnoC,UAAAm+P,cAAA,SAAA50M,GAEF,IAAA3tD,EAAY,CACVC,OACE0tD,cACM,mBAEJxkC,SAAM,aAAkB,2EAwBhC,EAAA6oD,UAAA,6CAVQ,gBACF,oFACDywL,qBAEM,eACL,aACC,CAAAr0K,QAAA,QAUHvwF,EAAO,YAGXi0K,GAACj0K,EAAA,WAOS,oBAGL6kQ,EAAez5O,QACdA,aAAKA,OACL05O,QAAK,EACPh/P,KAAG4/D,eAAA,uBACN5/D,KAAA6/D,OAAA,WALKz5C,QAAA,mBAON3lB,UAaCw+P,OAAA,WAZC,IAAIt4N,EAAK3mC,KAAAslB,aAAA8c,aAAAuE,SACPz/B,EAAI,CACJ24D,MAAI7/D,KAAA6/D,MACLD,eAAA5/D,KAAA4/D,eAEDj5B,SAAYA,GAGL,UAAL3mC,KAAI1E,MACJ6yK,GAA6B,qBAAKnuK,KAAEwI,KAAOxI,KAAO6/D,OAGrD7/D,KAAAg/P,OAED7wF,GAAkB,sBAAlBnuK,KAAAwI,KAAmBtB,GAGXinK,GAAiB,6BAAAnuK,KAAAwI,KAAAtB,GAIvBlH,KAAKyqF,WAGCs0K,EAAAt+P,UAAAgqF,QAAA,WACNxa,EAA0B,EAAAt0E,KAAA,eAE1BojQ,EArCQ,KAqDJh+P,EAAA8B,OAAS,sBAAYwrE,UAAA,6BAZ3B,MAAC,CAEOplD,SAAA,IAARC,YAAA,yEACEC,WAAM+1O,GACN71O,aAAgB,OAEhB3P,MAAK,CACHpe,MAAI,IACJkN,KAAI,uBAEO,YAWmB,sBAEnB7H,EAAAm/O,EAAA53J,mBACLvnF,qBACDm/O,kBACF53J,OACFi3K,SAAA,eAED3/K,SAAWx/E,KAAGkoF,WAAO1I,SAErBx/E,KAAAqkF,aACArkF,KAAIqkF,WAAY,gBAEf+6K,4BAXIh5O,QAAA,4CAaTi5O,EAAC5+P,UAAA+G,WAAA,SAAA9G,GACH,IAAAZ,EAAAE,KAAC6jB,EAAA,SAEe9P,KAAA,cACP4pB,WAAA,QAEL,OAAA39B,KAAWW,WAAEM,IAAA,aAAA4iB,GAAA3iB,KAAA,SAAAC,GAkBhB,OAjBGrB,EAAY0/E,UACM,KAAlB9+E,GACoB,MAARA,EAAEkT,eACP,OAAAlT,EAAAkT,eACY,QAAjBlT,EAAckT,eACM,SAApBlT,EAAAkT,eACe,UAAflT,EAAYkT,eACC,WAALlT,EAAKkT,eACA,YAALlT,EAAKkT,eACbzS,EAAAimB,QAAmB,CAAAxrB,MAAAkE,EAAAq/P,SAAAtiQ,GAAA,IAEnBiD,EAAA0/E,UAAoB1/E,EAAGw/P,iBAAA,KAAA5+P,GACvBS,EAAAimB,QAAiB,CAAGxrB,MAAA,mBAAAiB,IAAA,IAEpBiD,EAAAy/P,aAAiB,KAAA7+P,GAAA,KAAAZ,EAAA0/P,cAClBr+P,EAAAimB,QAAA,CAAAxrB,MAAAkE,EAAA0/P,aAAA3iQ,GAAA,OAEJ8pB,EAAA5lB,EAAAK,IAAAD,EAAA,SAAAyN,GAED,OAAA/S,KAAW+S,EAAAhT,MAAU2F,MAAAqN,EAAc/R,sDCjM4B,QAAAomB,EAAA1hB,MAO/D,OALwDvB,KAAAy/P,iBAAA,OAGOz/P,KAAA0/P,0DAmB7D1/P,KAAAsC,SAAA,CAAAq9P,QACU,CAAW9iQ,GACXomB,EAAA1hB,MACA3F,MACAqnB,EACApnB,WAHA4E,UAAAm/P,qBAAe,WACf,IAAA9/P,EAAAE,KACAA,KAAA6/P,sBAAa,EACb7/P,KAAA8/O,cACDggB,sBAAW9/P,KAAA+/P,eAEb7+P,KAAA,WACDpB,EAAKmgP,oBAAW,IAEf7mI,MAAA,SAAgBhiB,GACjBt3F,EAAImgP,oBAAK,EACTngP,EAAKqgP,gBAAU/oJ,EAAAj4D,aAId1+B,UAAWkgH,aAAW,SAAmB5mG,GAC9C,IAAIja,EAACE,KAOP,OANC+Z,IAEDA,EAAAsa,kBACMta,EAAC2H,kBAGP1hB,KAAAW,WAAAggH,aAAA,CAAA/kH,MAAWoE,KAAY+/P,gBAAA7+P,KAAA,SAAAC,GACjB8uE,EAAa,EAAAt0E,KAAA,yCACbmE,EAAKkgQ,oBACPlgQ,EAAK8oB,OAAQ,CAAA/sB,KAAAsF,EAAAvF,MAAA2F,MAAAJ,EAAAtE,IACdiD,EAAA6oB,eAAA7oB,EAAA8oB,aAIInoB,UAAWw/P,mBAA4B,SAAClmP,GAC9CA,IAEDA,EAAAsa,kBACMta,EAAC2H,kBAEN1hB,KAAAggQ,oBAEDhgQ,KAAAo/P,sBAEO3+P,UAAau/P,kBAAe,WAClChgQ,KAAAkgQ,qBAEDlgQ,KAAAy/P,iBAAA,EACEz/P,KAAAigP,oBAAsB,EACvBjgP,KAAAmgP,gBAAA,KAEDngP,KAAA+/P,cAAA,GACE//P,KAAM6/P,sBAAqB,KAEfp/P,UAAU2+P,iBAAA,WACvB,IAAAt/P,EAAAE,KAEDmgQ,EAAA,CAAAtkQ,KAAAmE,KAAOw/P,aAACj+P,MAAY,MAApB6+P,EA0CC,CAAAvkQ,KAAAmE,KAAAm/P,SAAA59P,MAAA,GAzCCvB,KAAKwH,WAAW,IAACtG,KAAA,SAAAC,GACb,IAACynB,GAEL9oB,EAAAugQ,gBAEQz3O,EAAOjC,EAAY5lB,EAAA6J,KAAAzJ,EAAA,CAAAI,MAAAzB,EAAAugQ,kBAElBvgQ,EAAQy/P,aAAez/P,EAAM0/P,cAAO,OAAA1/P,EAAAugQ,kBAC5Cz3O,EAAAu3O,GAIIv3O,KAEAA,EADA9oB,EAAW0/E,SACG4gL,IAKetgQ,EAAAy9B,YAE/B4iO,EAGeh/P,EAASgE,OAAO,EAAAhE,EAAA,GAAAg/P,GAKlCrgQ,EAAO8oB,OAAKA,EAET9oB,EAAK8oB,OAACrnB,QAAazB,EAAAugQ,iBAClBvgQ,EAAAwC,SAAa,CAAAq9P,QAAA,CAAA9iQ,GAAAiD,EAAA8oB,OAAArnB,MAAA3F,MAAAkE,EAAA8oB,OAAA/sB,aDuCe,KCbtB,EAAOwyE,UAAS,gCAlBrB,CACNplD,SAAA,IAEDC,YAAA,sEAAAC,WAAAm3O,GAAOl3O,kBAAA,EACLC,aAAY,OACZ3P,MAAK,CACC8lP,aAA2B,IAC/Ba,gBAAiB,IACjBh8K,WAAY,IACZ86K,SAAA,IAEF78P,SAAY,mBACM,wBACT,2DACL,gBACkB,gBAOlB,oBAGAi+P,EAAAp7O,EAAAE,EAAAD,EAAA0oD,EAAA0yL,EAAAt7O,QACDC,OAAQA,OACPE,WAAYA,OACZD,UAAKA,EACPplB,KAAG8tE,KACN9tE,KAAAwgQ,aAEDxgQ,KAAAklB,SACEllB,KAAAygQ,WAAO,EACRzgQ,KAAAkf,KAAA,QAEDlf,KAAA66E,MAAA,GACE76E,KAAK+zF,SAAU,EACf/zF,KAAKiI,IAAI,EACTjI,KAAK+6B,KAAO,OACZ/6B,KAAK6oC,MAAA,EACL7oC,KAAK0gQ,YAAa,EAClB1gQ,KAAKqlB,WAAUY,WAAA,kBAAAjmB,KAAA2gQ,iBAAAvgQ,KAAAJ,MAAAklB,GACfllB,KAAK4gQ,2BAnBIx6O,QAAU,UAAM,qDAsB3Bm6O,EAAA9/P,UAAAkgQ,iBAAA,WACE3gQ,KAAK4gQ,mBAEPL,EAAC9/P,UAAAogQ,WAAA,SAAA9lO,GAED/6B,KAAA+6B,OACkB,SAAZ/6B,KAAC+6B,MACH/6B,KAAK80G,WAGCr0G,UAAYgqF,QAAA,gBAClBplE,WAASG,SAAA,uBAER/kB,UAAAqgQ,SAAA,WACJ9gQ,KAAA6oC,MAAA7oC,KAAA6oC,MAAA7oC,KAAA66E,MAED76E,KAAA+gQ,QAAA,MACctgQ,UAAQugQ,yBAAA,WACpB,IAAAj8N,EAAYpe,EAAU5lB,EAAAyQ,OAAAxR,KAAAihQ,UAAA,CAAA/8K,SAAA,IAAA/+E,YACnBu7P,WAAsB,IAAtB37N,KAEMtkC,UAAUuoC,WAAI,SAAA/U,UACnBj0B,KAAK3E,UAAO2tC,WAAS/U,MAErBxzB,UAAAygQ,gBAAA,SAAAjtO,SACK,YAADj0B,KAAC3E,UAAAsrC,SAAAzoC,OAAAktH,GAAA,SAAAltH,UAAAktH,GAAA,MAAAltH,UACc,YAAd8B,KAAI3E,UAAUsrC,SAAAzoC,OAAAktH,GAAA,SAAAltH,CAAA+1B,GAAA/1B,OAAAktH,GAAA,MAAAltH,CAAA+1B,IACd71B,KAAOihG,IAElBkhK,EAAC9/P,UAAA0gQ,QAAA,SAAAjiP,GACH,IAAApf,EAAAE,KAII,GAJHA,KAAAkf,2BAIGlf,KAAQif,MAAKjf,KAAAkf,MAEb,OAAUlf,KAAE8tE,GAAAG,KAAAjuE,KAAAif,MAAAjf,KAAAkf,OAEZ,IAAA6lB,EAAcpe,EAAM5lB,EAAAyQ,OAAAxR,KAAAihQ,UAAA,CAAA/8K,SAAA,IACpBlkF,KAAKohQ,QAAEr8N,EAAA,QACLs8N,SAAWt8N,EAAG,QACfu8N,YAAAthQ,KAAAohQ,QAAA/wP,UAAArQ,KAAA3E,UAAAgV,QACDrQ,KAAA+zF,SAAA,EACH,IAAA7sF,EAAA,CAEDq6P,IAAO,6DCpNuCn8N,KAAA,CAgC9C7H,YAAAv9B,KAAA3E,UAAAwB,GACEwT,QAAgBrQ,KAAAqhQ,SAAAhxP,SACImxP,SAAAtiP,GAEpB,OAAAlf,KAAAwgQ,WACQiB,cAAcv6P,GACpBhG,KAAU,SAAO+rC,GAGnBntC,EAAAmf,MAAAnf,EAAAof,MAAa+tB,IAEZmsE,MAAA,WAEDt5G,EAAAi7B,KAAA,SAEQn5B,QAAM,WAEZ9B,EAASi0F,SAAI,KAEhBwsK,EAAA9/P,UAAAsgQ,OAAA,SAAAh2P,mBAED,IAAAA,IAAWA,GAAQ,oCCtDiC,IAAA7D,EAAA,CACV2zE,MAAA76E,KAAA66E,6GCDI,QAAA6mL,EAAAj7O,EAAA,EAAAw6O,GAAAU,EAAAD,EAAA1sP,QAAA2sP,EAAA1sP,KAAA0sP,EAAAD,EAAA1sP,OAAA,CAExC,IAAA4sP,EAAAD,EAAWpgQ,MA4BjBqgQ,EAAAC,kBAAA/hQ,EAAAkpC,WAAA44N,EAAAE,SAIkBF,EAAAG,UAAAjiQ,EAAAohQ,gBAAAU,EAAAE,SAChBF,EAAA19K,SAAA,GAEA,MAAA1I,GAAAn1D,EAAA,CAAAgP,MAAAmmD,GACM,QACC,IACNmmL,MAAA1sP,OAAAnT,EAAA4/P,EAAAjmL,SAAA35E,EAAA/B,KAAA2hQ,GAGM,QAAU,GAAAr7O,EAAA,MAAAA,EAAAgP,OAEhBv1B,EAAAmhQ,UAAAl2P,EAAAjL,EAAAmhQ,UAAAx5N,OAAAw5N,OACF7nJ,MAAA,SAAAhiB,kBAGQx1F,QAAA,WACL9B,EAAUi0F,SAAG,EACbj0F,EAAU2gQ,WAAA,OAGEhgQ,UAAQuhQ,WAAA,WACpB,OAAOr7O,EAAc5lB,EAAE6J,KAAA5K,KAAAihQ,UAAA,SAAAW,GAAA,WAAAA,EAAAvxP,WAE1BkwP,EAAA9/P,UAAAq0G,MAAA,WAED90G,KAAAif,MAAA,CAAAgjP,MAAU,GAAC3sP,KAAS,uCC3DgDtV,KAAAihQ,UAAAt6O,EAAA5lB,EAAAK,IAAApB,KAAAihQ,UAAA,SAAAW,GAAA,OAAAj7O,EAAA5lB,EAAAqP,OAAA,GAAAwxP,EAAA,CAAA19K,SAAA,sCCAtBlkF,KAAAshQ,aAAA,GAoD9Cf,EAAA9/P,UAAAmgQ,gBAAA,WAQE,OADA5gQ,KAAAihQ,UAAgB,GAChBjhQ,KAAA+gQ,SAAA7/P,KAAAlB,KAAoB80G,MAAA10G,KAA0BJ,UAJ9CS,UAAAoJ,QAAyB,SAAKwG,GAK5BrQ,KAAMqlB,WAAYG,SAAK,gBAAa,CAChC5pB,MAAM,kBACNC,KAAM,GACNL,MAAO,6DAAS6U,EAAA,sCAChBvU,KAAM,aACNC,QAAO,2BAAgBsU,EACvBrU,UAAOgE,KAAAkiQ,eAAqB9hQ,KAAAJ,KAAAqQ,QAIhC5P,UAAAyhQ,eAAA,SAAA7xP,GACA,IAAAvQ,EAAAE,YACAA,KAAI+zF,SAAU,EACZ/zF,KAAKwgQ,4BACWxgQ,KAAK3E,UAAWgV,iBACrB48B,KACR7nB,UAAAze,IAAAgoF,EAAA,EAAAC,iBAAA3hD,EAAAtmC,MAAA9I,YACDsnB,OAAOuC,SACT5nB,EAAGulB,WAAAG,SAAA,+DAAAnV,MAGL+oG,MAAW,WACZt5G,EAAAi7B,KAAA,OAEDj7B,EAAAi0F,SAAA,KAGGwsK,ELwDG,KKpCCx/P,EAAA8B,OAAA,sBAA8BwrE,UAAA,sCAdnC,UACO,gBACN,wEACFllD,WAAAg5O,GAED/4O,kBAAA,EACEC,aAAa,OACd3P,MAAA,CAEDre,UAAA,QASK,IAAA+mQ,GAAiC,oBAGpCC,EAAU1hQ,GACVX,KAAAW,WAAYA,WAFZylB,QAAa,iBAIb3lB,UAAc6hQ,eAAM,SAAAjnQ,EAAA6L,GACpB,IAAArK,EAASxB,GAAYA,EAAEwB,GAAAxB,EAAAwB,QAAA,EACvB,OAAAA,EAAAmD,KAAAW,WAAAM,IAAA,qBAAApE,EAAA,YAAAqK,GAAAmd,QAAA61D,QAAA,KAGJmoL,EAAA5hQ,UAAAghQ,cAAqB,SAAAv6P,mEC3HyBm7P,EAAA5hQ,UAAA8hQ,iBAAA,SAAAlnQ,EAAAgV,GAIxC,IAAAxT,EAAAxB,KAAWwB,GAAAxB,EAAAwB,QAAA,EAiEjB8J,EAAA,qBAAA9J,EAAA,WAeE,OAAAA,GAAgB8pB,EAAA5lB,EAAAqb,SAAA/L,GAAArQ,KAAAW,WAAA0oE,KAAA1iE,EAAA,CAAA0J,YAAAgU,QAAA61D,QAAA,KACImoL,ED2BkB,KCrClB,EAAAvmL,QAAA,aAAAsmL,IAcHloQ,EAAqB,QAItCA,EAAA,eAKgC,+yBACK,oBAGjCsoQ,EAAAxH,GAEFh7P,KAAMg7P,kBAAiBA,WAHP50O,QAAO,wBAMH3lB,UAACgiQ,QAAA,WACrBziQ,KAAAyqF,UACDzqF,KAAAg7P,kBAAAF,QAAAN,oBAGa/5P,UAAe6I,KAAA,gBACzBmhF,eACDuwK,kBAAAF,QAAAJ,iBAfqB,KA+BF,EAAArsL,UAAA,iCARxB,OAACplD,SAAA,gBAEME,WAASq5O,GACdp5O,kBAAO,EACLC,aAAa,OACb3P,MAAA,CAAQ+wE,QAAE,QC/HgB,IAAAi4K,GAAA,woDACMC,GAAA,WA6CpC,SAAAA,EAAAr9O,GAMEtlB,KAAAslB,aAAgBA,EAChBtlB,KAAA4iQ,wBAAA,EACE,IAAIvnQ,EAAC2E,KAAcslB,aAAe8c,aAClCpiC,KAAKgqD,MAAO3uD,EAAK8rB,oBACjBnnB,KAAAgqD,MAAWntD,GAAK,KAChBmD,KAAKgqD,MAAAthC,IAAA,GACN1oB,KAAAgqD,MAAApuD,OAAA,QAEDoE,KAAAgqD,MAAAhiC,UAAA,EACEhoB,KAAMgqD,MAAO64M,cAAU,OACrBh6O,SAAMxtB,EAAA+B,KAAAyrB,cACLi6O,UAAA,EAILznQ,EAAAwB,GAAA,GACEmD,KAAOgqD,MAAKrtD,OAAA42D,QAAc,SAAAj4D,GAC3B,UAAAA,EAAAyY,MAAAzY,EAAAG,cACHH,EAAA03I,mCAIIhzI,KAAUgqD,MAAG8yK,WCxDf,ODZI6lC,EAAAv8O,QAAA,mBAsEU3lB,UAAA6I,KAAA,WAIZ,OAHAtJ,KAAA8iQ,WACA9iQ,KAAAgqD,MAAc50C,KAAM,IAEpBpV,KAAAslB,aAAAhc,KAAAtJ,KAAAgqD,MAAA,CAAAnhC,SAAA7oB,KAAA6oB,WAAA3nB,KAAAlB,KAAAyqF,UAGJk4K,EAAAliQ,UAAW+xE,QAAU,SAAAz4D,gCEjFmE4oP,EAAAliQ,UAAAkoB,eAAA,SAAAC,uBDFpC+5O,EAAAliQ,UAAAqhP,sBAAA,WACf9hP,KAAA4iQ,wBAAA,GAE8BD,EAAAliQ,UAAAshP,qBAAA,WAKnE/hP,KAAA4iQ,wBAAgB,GAUPD,EDjB2B,KCiCb,EAAEt0L,UAAO,wCAZ5B,CACFplD,SAAa,IAEbuB,SAAck4O,GACZv5O,WAAYw5O,GACZv5O,kBAAgB,EAChBC,aAAO,OAEP3P,MAAO,CAAA+wE,QAAU,eAOhB,g0EAE0B,oBAItBs4K,EAAsBz9O,QACzBA,aAAgBA,OACjBk4M,eAAA,EAEDx9N,KAAAgjQ,eAAkB,EAClBhjQ,KAAA+e,QAAA,GAEF/e,KAAOijQ,gBAAW,GAChBjjQ,KAAIkjQ,YAAU,EACdljQ,KAAMmjQ,qBAAqB,EAE3BnjQ,KAAIm/B,QAAU,QACZl3B,IAAO,QACRm7P,UAAA,EAEDpjQ,KAAMkjQ,WAASljQ,KAAAslB,aAAa8c,aAAUg/L,iBAEtCphO,KAAMmjQ,oBAAgBnjQ,KAAYslB,aAAA8c,aAAAi/L,oCAnBjCj7M,QAAA,mBAqBiB3lB,UAAU6I,KAAG,WAC/B,GAAAtJ,KAAOqjQ,SAAQ16K,OAAf,KAICzhF,EAAA,CAEGs2N,cAAex9N,KAACw9N,cAClBwlC,cAAchjQ,KAAKgjQ,cACnB7jO,QAAOn/B,KAAOm/B,SAIdg9M,EADSn8O,KAAQslB,aAAU8c,aACLjb,kBAAcjgB,GAGtC,YAFCk8P,UAAA,EAEGpjQ,KAAOslB,aAAchc,KAAE6yO,EAAAj1O,GAAAhG,KAAAlB,KAAAu2N,SAAAn2N,KAAAJ,KAAAkH,QAElBzG,UAAkB81N,SAAA,SAAArvN,GAC1BA,EAAAs2N,oBAAMl4M,aAAA8c,aAAA66L,yBAEL/1N,EAAO87P,eACRhjQ,KAAAslB,aAAA8c,aAAA86L,oBAIDl9N,KAAIyqF,WAEJs4K,EAnD2B,KAuEA,EAAA10L,UAAA,sCAd3B,CAIAplD,SAAO,IACPuB,SAAO84O,GACPn6O,WAAA45O,GAEF35O,kBAAA,EACAC,aAAA,OACA3P,MAAO,CAAA+wE,QAAA,eAWJ,y+CAE4C,oBAG5C84K,EAAAj+O,GAEDtlB,KAAAm4N,eAAgB7yM,EAAmB8c,aACnCpiC,KAAAykF,KAAAzkF,KAAAm4N,eAAAhxM,2BAEKnnB,KAAAykF,KAAc5nF,GACnBmD,KAAAy+P,cAAcx3O,EAASlmB,EAAAmmB,OAAAlnB,KAAAykF,MAAA,YAPJr+D,QAAA,iBAStBm9O,EAAA9iQ,UAAA6I,KAAA,WAED,IAAAq4D,EAAQ,IAAAC,KAAO,CAAA36C,EAAAlmB,EAAsBmmB,OAAClnB,KAAWykF,MAAA,6CEpIGvmF,OAAA2gQ,EAAA,OAAA3gQ,CAAAyjE,EAAA3hE,KAAAykF,KAAA7oF,MAAA,SAAA0X,MAAAs1B,UAAA,UAOpD26N,EAAA9iQ,UAAA+iQ,oBAAA,WACE,OAAAxjQ,KAAgBy+P,eASd8E,EFsG6C,eEtEzCr+O,EAAeG,EAAMD,EAAAmqC,EAAA0W,EAAAD,EAAAw7F,aACrB,aAEG,uBACI,QACR,oBAGM,CAAA9kK,MAASwoB,EAAQiQ,UAAY,UAC9B,aAEN75B,MAAS4pB,EAAA7oB,OAAA6oB,EAAA7oB,MAAAf,MAAA4pB,EAAA7oB,MAAAf,MAAA4pB,EAAA5pB,kBACA4pB,EAAA7oB,OAAa6oB,EAAU7oB,MAAAhB,UAAA6pB,EAAA7oB,MAAAhB,UAAA6pB,EAAA7pB,YAC7BooQ,iBAAgBv+O,EAAA5pB,MACrB4pB,EAAE20N,KAAA,EAAAj+O,MAAA,OAAA2B,IAAA,mBAEF2nB,EAAOu+O,gBACLv+O,EAAMw+O,WAAc,cACpBx+O,EAAO20N,KAAAjqO,KAAA,CAAAhU,MAAmB,QAAE2B,IAAA,uBAI1BmmQ,WAAgB,UAEhBroQ,UAAU+B,KAAQ+jO,cAClB0Y,KAAAjqO,KAAA,CAAAhU,MAAA,WAAA2B,IAAA,yBAIElC,UAAc+B,KAAG+jO,YAAMj8M,EAAAu+O,kBACvB5pB,KAAOjqO,KAAA,CAAAhU,MAAY,SAAQ2B,IAAU,8CAK/B,eACRyxK,EACA5pJ,EAAAw1O,SACF+I,EAAA30F,EAAAloK,QAAA,MAEK,IAAP68P,IACE30F,EAAOA,EAAO72G,UAAY,EAAAwrM,IAG5B,IAAA9/O,EAAOoD,EAAiBlmB,EAAAkW,KAACmO,EAAoBjlB,UAC3Cgf,EAAA8mD,EAAezoE,cACfY,KAAU+gB,EAAG/gB,KAAO6yC,YAEpBzyC,GAAA2gB,EAAA3gB,GAAAyyC,YACAp/B,MAAS4C,EAAuB,EAAAykF,SAAA73F,KAAAwQ,MAEhCqT,EAAAhe,QAAA08P,qBACA59L,EAAA1yB,yBAAoBzvB,KAElB3c,QAAW28P,oBACXhgP,EAAMzlB,YACLylB,EAAArlB,IAGqB,YAAxB0mB,EAAKhe,QAAA1H,UACFA,MAAO0lB,EAAAhe,QAAA1H,OAER0lB,EAAEu+O,kBACDlhO,QAAIrd,EAAC5pB,MAAeuB,KACnBomC,YAAO,aAGLV,iBACAU,uBAEA/kC,OAASs+N,GAAkB,EAA3Bt+N,CAA2B8wK,EAAA9wK,OAAAs+N,GAAA,EAAAt+N,CAAA2lB,UAC3BmrJ,EAAMnxK,QAAW4W,EAAI,EAAAoS,UAAA,cAAApS,EAAA,EAAAoS,UAAA,sBACrBi9O,EAAAjmQ,QAAA4W,EAAA,EAAAoS,UAAA,MAAApS,EAAA,EAAAoS,UAAA,mBACFhD,EAAAof,oBACIotB,OAERnyD,OAAAs+N,GAA0B,EAA1Bt+N,CAA0B4lQ,EAAA5lQ,OAAAs+N,GAAA,EAAAt+N,CAAA2lB,MAC1BkgP,WAAC,gBAAWD,EAAiB,kEAClBA,EAAQjmQ,QAAG4W,EAAA,EAAAoS,UAAA,mBAAApS,EAAA,EAAAoS,UAAA,sCACX3B,EAAO8+O,SAAGnmQ,QAAS4W,EAAQ,EAAAoS,UAAA,WAAApS,EAAA,EAAAoS,UAAA,+BAC3B,yBAAgB3B,EAAA++O,uCAKnB,iBACN,UAAoBz+P,mBAAOtH,OAAAktH,GAAA,SAAAltH,GAAA6a,OAAA,iBAE3BmrP,YACAC,QAEDxhQ,OAAAuhQ,KAAAE,qBAEDlnG,EAAAmnG,gBACA,OAAOF,QAELjnG,EAAamnG,yBACdn9P,EAAEwsB,SAGA,OAAAluB,mBAAA0B,EAAAwsB,UAFHywO,KAKFG,YAAO,kBACLp/O,EAAUq/O,YAxHF,EAAAl2L,UAAA,iDAZR,CAEFplD,SAAO,IAEPuB,SAAOg6O,cACGC,qBACA,eACA,aACN,CAAAh6K,QAAM,UA+HR1pF,EAAA8B,OAAA,uBAAAsmB,WAAA,iBAAAu7O,IAIN,IAAAC,GAAsC,WChKY,SAAAC,EAAA1/O,EAAAG,EAAAD,EAAAzkB,EAAA4uD,EAAA0W,GACM/gD,EAAAs7L,SAAA,oDCAXt7L,EAAAsL,KAAA,EACCtL,EAAA2/O,cAAA,CAK9C,CAAAhpQ,KAAA,SAAA0F,MAAA,MAME,CAAA1F,KAAgB,QAAA0F,MAAA,OAChB,CAAA1F,KAAA,SACU0F,MAAA,SAAA1F,KAAA,QAAA0F,MAAA,IAEA2jB,EAAE4/O,cAAW,CACb,CAAAjpQ,KAAA,uBAAwB0F,MAAA,GAG5B,CAAC1F,KAAA,qBAAyB0F,MAAA,GAC5B,CAAA1F,KAAM,oBAAI0F,MAAA,MAETsO,KAAA,WACClP,EAACM,IAAA,gCAAoBC,KAAA,SAAAgG,GACpBge,EAAU6/O,kBAAU79P,EAAwC,qBAClEge,EAAA8/O,gBAAA99P,EAAA,mBAGCge,EAAK+/O,OAAW,iBAEhB//O,EAAIggP,eAAmB,SAAKC,GAC3BjgP,EAAA7pB,UAAAmlN,SAAA,qBAEI2kD,IACHjgP,EAAI7pB,UAAamlN,SAAOE,YAAMt7L,EAAAw1O,YAE7B7mK,SAAA,IAEDysH,SAAW2kD,SAAKA,cACT1/O,iBACL,aACA2/O,aAAcD,IACf,MAAA3kD,SAAA6kD,6KAIJ1kQ,EAAA0oE,KAAAnkD,EAAA+/O,OAAAK,GAAApkQ,KAAA,SAAA2wB,GAED3M,EAAA6uE,SAAA,EAAA7uE,EAAAy2N,UAgCC9pN,EAAA8pN,UA/BKz2N,EAAQu7L,YAAS5uL,EAAYlrB,IAC/Bue,EAAWsL,KAAI,GAChB,WAEGtL,EAAQ6uE,SAAS,KAIrB7uE,EAAOqgP,eAAK,WACV,OAAMrgP,EAAeu7L,eAGrB+kD,eAAgB,SAAc/gL,GAoC9B,KAlCC7oF,MAAAspB,EAAAs7L,SAAAx7M,OACCwO,KAAQyyD,EAAMzoE,cAEfuD,EAAA44B,KAAA8qD,EAAA9nF,OAAA,SAAArB,GAEDA,EAAO4oB,QAAa,GAClB5oB,EAAAw2D,MAAU,KACRntC,WAAY,SAIdokG,YAAY5lG,KAAIwD,EAAY5lB,EAAAmkE,MAAAuf,EAAAskC,YAAA5lG,aAC1B,SAAcw9M,UACfA,EAAA/pB,SAEAx1M,IAAA,SAAAu/N,GACF,OACJ37N,KAAA27N,EAAA37N,KAED4xM,OAAA+pB,EAAA/pB,OACOwmB,UAAkBuD,EAAQvD,UAE/B1iH,aAAAimH,EAA8BjmH,aAClB3mG,KAAK4sN,EAAU5sN,KACpB0zJ,QAASk5D,EAAcl5D,QACpB18F,KAAC41J,EAAe51J,QAEjBxpE,UAEIR,EAAA44B,KAAS8qD,EAAKukC,WAAS7lG,KAAM,SAAUiuB,KACzC1wC,MAAQ,KACdwG,QAAAkqC,EAAAryB,QACFqyB,EAAA1N,SAAA,IAEGxe,EAAOu+O,eAAU,CACnB,IAAIgC,EAAWvgP,EAAA5pB,MAAAc,iBACRgD,QAASC,EAAM,KACrBD,QAAAoL,EAAA,EACDi7P,EAAKrmQ,QAAcqL,EAAK,EACxBg7P,EAAKrmQ,QAAcm9B,EAAK,GACxBkoD,EAAA9nF,OAAY,CAAG8oQ,UAIbvgP,EAAS7pB,UAAUmlN,WACrBnlN,UAAawiO,aAAW,SAAYviO,UACrCA,EAAAo/G,eAGC/zF,EAAC5lB,EAAA44B,KAAqBzU,EAAC7pB,UAAA0tH,YAAA5lG,KAAA,SAAAw9M,UAC5BA,EAAAjmH,gBAICx1F,EAAIwgP,eAAiB,WACjB/kQ,EAAWM,IAAAikB,EAAMy2N,WAAAz6O,KAAA,WAEhBgkB,EAASsL,KAAQ,8FFsCY,cE9B5B,uBAA4BrH,WAAS,oBAAAw7O,WAWtC,sBAGO92L,EAAA1pD,EAAA2pD,EAAAg7C,EAAA5jG,qBACP2oD,OACF1pD,gBACHnkB,KAAG8tE,KAEH9tE,KAAI8oH,YAAUA,OACZ68I,uBAAO93L,EAAAG,WAAA,CACRvB,MAAA,EAEGlrE,MAAC,wBAENvB,KAAA0yF,oBACH1yF,KAAA3E,UAAA2B,OAACwc,GAAA,kCAAAxZ,KAAA0yF,kBAAAtyF,KAAAJ,MAAAklB,GC7DC,SDgDQkB,QAAQ,gBAAa,gBAAoB,KAAM,iEAenD,IAAAC,EAAAvkB,EASC9B,KAAS4tF,SAAA,GACP5tF,KAAAoxC,SAAA7vC,OAAAolB,EAAA5lB,EAAA4E,QAAA3F,KAAAoxC,SAAA7vC,OAEL,IACA,QAAYsT,EAAA4R,EAAgB,EAAAzmB,KAAAoxC,SAAAE,SAAAv8B,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CAC5B,IAAA48D,EAAkB78D,EAAAxT,MACNvB,KAAE4tF,SAAMzoF,OAAA,GACbnF,KAAA4tF,SAAAh+E,KAAA5P,KAAA6tE,aAAAwf,aAAA,aAESpnF,IAAd2rE,EAAWtrE,UAAGL,IAAA2rE,EAAArwE,QACfvB,KAAA4tF,SAAAh+E,KAAA5P,KAAA6tE,aAAAiqK,OAAAlmK,EAAAtrE,MACDtG,KAAA4tF,SAAAh+E,KAAA5P,KAAA6tE,aAAA+kB,YAAAhhB,EAAA5tD,WACHhkB,KAAA4tF,SAAAh+E,KAAA5P,KAAA6tE,aAAAuf,YAAAxb,EAAArwE,UEnLqD,MAAAi6E,GAAAn1D,EAAA,CAAAgP,MAAAmmD,eCAXzmE,MAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GASzC,QAAgB,GAAAwR,EAAA,MAAAA,EAAAgP,OAEdr1B,KAAK4tF,SAASh+E,KAAK5P,KAAI6tE,aAAAggB,kBAEzB+3K,EAACnlQ,UAAA+G,WAAA,SAAA4kE,EAAA1vE,GAED,IAAAoD,EAAAE,KACE,MAAoB,aAAhBosE,EAAQr4D,KACD/T,KAAC8tE,GAAMG,KAAGjuE,KAAQ6tE,aAAQ0f,aAAA,+BAEtB,cAAXnhB,EAAQr4D,KACb/T,KAAA8tE,GAAAG,KAAA,CAAAjuE,KAAA6tE,aAAAG,WAAA,SACFhuE,KAAAmkB,cAAAljB,IAAAjB,KAAAoxC,SAAAzsB,YAAAzjB,KAAA,SAAA0jB,YAEe4mE,EAAA,KAQV,MAPG,UAAApf,EAAAr4D,KACGy3E,EAAK5mE,EAAA0sO,WAAA1sO,EAAA0sO,aAAAjtO,QAAA61D,QAAA,KAGbhzE,EAAgBZ,IAAMxG,EAAA8tF,SAAAlxF,EAAA,GAAA6E,MACtBiqF,EAAc5mE,EAAMihP,aAAAjhP,EAAAihP,aAAA3+P,GAAAmd,QAAA61D,QAAA,KAEbsR,EAAGtqF,KAAA,SAAA2wB,UACRA,EAAYlL,EAAA5lB,EAAAK,IAAAywB,EAAA,SAAAu6C,GACZ,OAActsE,EAAA+tE,aAAAG,WAAA,CAAAzsE,MAAA6qE,EAAAvwE,SAGnB,QAAAuwE,EAAAr4D,MAED8d,EAAW90B,OAAA,EAAU,EAAAkqB,EAAclmB,EAAAkW,KAAAnX,EAAmB6lQ,waFtCT,gBAAAv5L,EAAAr4D,OACPrX,EAAA,GAC+BsD,KAAA4tF,SAAA7wF,OAAAL,EAAA,EAAAsD,KAAA6tE,aAAAwf,aAAA,QASUrtF,KAAA4tF,SAAAh+E,KAAA5P,KAAA6tE,aAAA+kB,YAAA,MACF5yF,KAAA4tF,SAAAh+E,KAAA5P,KAAA6tE,aAAAsf,QAAA,+CACI/gB,EAAAr4D,KAAA,MACTq4D,EAAA2B,SAAA,qBAgB9BrxE,EAAA,IAAAsD,KAAA4tF,SAAAzoF,QACxCnF,KAAA4tF,SAAAh+E,KAAY5P,KAAY6tE,aAAAggB,uBAatBi4K,yBAGFrlQ,UAAeqlQ,oBAAmB,eAChCx0N,EAAK,GACLy0N,GAAA,EAEFC,GAAA,OACEp4K,SAAKr6B,QAAM,SAAA6Y,GACX,aAAAA,EAAAr4D,MAAAq4D,EAAAK,KAEFu5L,GAAA,OAIA,OAAA55L,EAAAr4D,MACE,IAAK,MACLu9B,EAAA1hC,KAAA,CAAAtJ,IAAA8lE,EAAA7qE,QA3BUwkQ,GAAG,EACH,kBAEXz0N,EAAAy0N,GAAAxkQ,MAAA6qE,EAAA7qE,MAED,MAEC,eAsBD+vC,EAAAy0N,GAAM/hP,SAANooD,EAAA7qE,MACQ,MAIJ,gBACE+vC,EAAAy0N,GAAAz4K,UAAKlhB,EAAS7qE,kBAcd6vC,SAAA4lN,WAAA1lN,oBACE43E,gBAAAlpH,KAACoxC,UAAA,KAWRw0N,ED8CM,oUC3CT,WACE,OACC38O,SAAA,IAEGuB,SAAAy7O,GACJ98O,WAAA+8O,GACA98O,kBAAsB,EACtBC,aAAA,OACA3P,MAAA,CACA03B,SAAA,IAEa/1C,UAAA,QGvGiB,IAAA8qQ,GAAA,WAEF,SAAAA,IACQnmQ,KAAAirE,OAAAjrE,KAAAkN,IACHlN,KAAAkN,IAAAlN,KAAAkN,IAAA9Q,eAQF,OANO+pQ,EAAA1lQ,UAAAolJ,OAAA,WACV7lJ,KAAAirE,OAAArvE,MAAAoE,KAAAkN,IAAAtR,MACYoE,KAAAirE,OAAAwwJ,OAAAz7N,KAAAkN,IAAAuuN,OACTz7N,KAAAkzE,YACAlzE,KAAAyqF,WAEA07K,EAZD,KCQrB,EAAS93L,UAAU,aDSwC,WAEtE,oGCzBuBllD,WAAAg9O,GACyB/8O,kBAAA,EAIhDC,aAAA,OAIE3P,MAAA,CACAxM,IAAA,IAAAu9E,QAAA,IAAoBvX,UAAA,YAWpBkzL,GAAAlsQ,EAAA,WAGOA,EAAkB,WAKdA,EAAgB,QAI3BmsQ,GAACnsQ,EAAA,WAGqBA,EAAkB,uECpCM4F,EAAAwmQ,qBAAA,WAGhDxmQ,EAAAe,SAAA,CAAA0lQ,UAAA,KAOEzmQ,EAAAq9B,aAAA,SAAYvuB,GAAZ9O,EAAAD,MAAAmtG,0BAQCltG,EAAAD,MAAA09B,YAAA3uB,IAPC9O,EAAKo9B,oBAAqB,SAAStuB,EAASkhC,GAE5ChwC,EAASD,MAAA2tG,0BAAA1tG,EAAAD,MAAA09B,YAAA3uB,EAAAkhC,MAEPkoM,gBAAkB,SAAU5nM,GAC5B,OAAKtwC,EAAAD,MAAAotG,uBAAmBntG,EAAAD,MAAA09B,YAAA6S,IAE3BtwC,EAAA0mQ,sBAAA,WAED1mQ,EAAAe,SAAA,CAAA0lQ,UAAA,KAEEzmQ,EAAMG,MAAe,CAEjBsmQ,UAAQ,KA4Bd,ODJF9/O,EAAW,EAAAggP,EAA0B7mQ,KCpB7Ba,UAAAkpB,kBAAA,WACJ3pB,KAAGH,MAAA4tG,wBAAAztG,KAAAH,MAAA09B,cAGLkpO,EAAChmQ,UAAAoB,OAAA,WAED,IAAAC,EAAA9B,KAAAH,MAAAoR,EAAAnP,EAAWmP,YAAX2X,EAAA9mB,EAAA8mB,OACM29O,EAAOvmQ,KAAOC,MAAQsmQ,SAC1B,OAAK71P,EAAgB3P,EAAGmB,cAAA,WACzBwO,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,8BAED2O,EAAA3P,EAAAmB,cAAA,OAAAH,UAAA,mBACc2O,EAAW3P,EAAKmB,cAAW,KAAM,CAAAH,UAAY,kBAAwB,eAClF2O,EAAA3P,EAAAmB,cAAA3E,EAAA,SAAAmU,UAAA,OAAAC,QAAAjB,EAAA3P,EAAAmB,cAAAmkQ,GAAA,SAED31P,EAAA3P,EAAAmB,cAAA,MAAoB,CAAEH,UAAQ,yBACR2O,EAAK3P,EAAAmB,cAAA,KAAAH,UAAA,4CACpB2O,EAAmB3P,EAAAmB,cAAA,OAAAH,UAAA,4BACf2O,EAAA3P,EAAAmB,cAAA,UAAAH,UAAA,6BAAAs0B,QAAAr2B,KAAAsmQ,qBAAAlwO,SAAAmwO,GAAA,oBACP71P,EAAI3P,EAAAmB,cAAkBkkQ,GAAA,GAAA9wM,GAAAixM,GAClB71P,EAAc3P,EAAEmB,cAACwkQ,GAAA,GAAA1uB,gBAAAh4O,KAAAg4O,gBAAAG,SAAAn4O,KAAAwmQ,yBACtB91P,EAAA3P,EAAAmB,cAAA87B,GAAA,GAAAzsB,MAAAN,EAAAksB,aAAAn9B,KAAAm9B,aAAAD,oBAAAl9B,KAAAk9B,oBAAAe,YAAA,EAAAZ,WAAAzU,MAGH69O,KACuB,kBAKV,yBACRve,GAAA,yBAEgBA,GAAM,EAC3Bl7I,0BAACk7I,GAAA,EACH16I,0BAAC06I,GAAA,sBARY,SAAAjoP,GAAA,mBACLA,EAAA5E,UAAiB4V,qBAWX/W,EAAG,eCtDfimG,GAAmB,0BAAAwmK,GAAA,8BAgBnBC,GAAmE,oBAAAC,EAAA3hP,EAAAvkB,EAAeqpF,GAN1E,IAAAlqF,EAAAE,KAM8EA,KAAAklB,SAEtFllB,KAAAW,aAAAX,KAAAipF,SAAAe,EA8BCg2J,OAAA,4BA7BCr/O,EAAKM,IAAS,kBAAYC,KAAA,SAAeC,GAEnCrB,EAAAsoE,UAAAjnE,EAAsBC,IAAK,SAAYwN,GAEvC,OADFA,EAAAk4P,SAAmB,kBAAEl4P,EAAA/R,GAClB+R,MAgCT,SAvC4CwX,QAAA,UAAa,8BAYnD3lB,UAAOsmQ,wBAA8B,SAAAC,SACrChnQ,OACDe,EAAAm/C,OAAAlgD,KAAAooE,UAAA,CAAAvrE,GAAAmqQ,EAAAnqQ,UACD8D,WAAU+3D,OAAK,kBAAAsuM,EAAAnqQ,IAAAqE,KAAA,WAChBpB,EAAAolB,OAAAM,SAAA,0CAED,WACM1lB,EAAAolB,OAAWM,SAAQ,cAAkB,CAAC,iCACtC1lB,EAAAsoE,UAAcx4D,KAAGo3P,QAIvBvmQ,UAAAwmQ,eAAmC,SAAAD,GACnC,IAAIlnQ,EAACE,UACHklB,OAAKM,SAAU,gBAAI,CAClB5pB,MAAA,SAECC,KAAM,4CAAGmrQ,EAAAhiQ,KAAA,IACTjJ,QAAC,SACDD,KAAC,WACNE,UAAA,WAED8D,EAAAinQ,wBAAAC,OAKAH,EAvCmE,KA2C9C,EAAI19O,WAAU,gBAAkBy9O,QAKrDM,GAAA,oBAGOA,EAAkB33M,EAAS5uD,GAChC,IAAIb,EAAME,KACVA,KAAKW,WAAYA,EAEjBX,KAAAU,MAAA,CAAAA,MAAA,GAA0BkxE,IAAA,GAAAgJ,SAAA,EAAAC,MAAA,IAC1BtrB,EAAK,WACDzvD,EAACY,YAAmB,GAExBZ,EAAAY,MAAAqT,KAAA,UAEAjU,EAAO8gF,kCAZKx6D,QAAA,4BAeH3lB,UAAWmgF,iBAAA,0BACX,MACPumL,EAAG,GACLA,EAAG37K,QAAAxrF,KAAAW,WAAAR,OAAAH,KAAAU,OAAAQ,KAAA,SAAAC,GACJ,OAEDimQ,gBAAAjmQ,EACUkmQ,UAAU,yBAGdF,MAEH1mQ,UAAA4gF,YAAA,WAEDrhF,KAAKU,MAAKk6E,SAAK56E,KAAAU,MAAAk6E,QACf56E,KAAK4gF,sBAGEngF,UAAaugF,kBAAA,iBACnB,KAAAhhF,KAAAU,cAAA,IAAAV,KAAAU,MAAAk6E,SAAA,IAAA56E,KAAAU,MAAAkxE,IAAAzsE,UAGM1E,UAAgBwgF,YAAK,SAAerP,EAAA73D,QAC1CrZ,MAAAkxE,IAAAhiE,KAAAgiE,GAED5xE,KAAA4gF,mBACD7mE,IACHA,EAAAsa,kBAACta,EAAA2H,2DCxHsBylP,EAAA37K,QAAAxrF,KAAAW,WAAAM,IAAA,wBAAAC,KAAA,SAAAC,GACyB,OAWhDimQ,gBAAA,GAeEC,UAAgBlmQ,KAENnB,KAAAsnQ,cAAAH,IAEAD,ED8CV,KCpCmB,EAAA74L,UAAA,kCAzBnB,CACAplD,SAAA,gBACU,wEACRi+O,GAEF99O,kBAAa,EACbC,aAAA,OACA3P,MAAA,CAYM4tP,cAAY,eAmBL,yBAER,SAEH,MAEiC,WAGnC,SAACC,EAAAniP,EAAAmqC,EAAA5uD,GAEDX,KAAAolB,YACEplB,KAAAuvD,SAAaA,EACbvvD,KAAAW,WAAiBA,EACjBX,KAAAwnQ,cAAqB,WANlBphP,QAAA,wCASE3lB,UAAAuU,KAAA,WACN,IAAAlV,EAAAE,QAEDA,KAAAuvD,SAAAk8B,OAAAzrF,KAAAynQ,eAC4BznQ,KAAAtD,MAAAsD,KAAAkoE,WAAA/iE,OAAA,EACT,CAIf,GAHAnF,KAAIwnQ,gBAGJxnQ,KAAAwnQ,eAAA,EAGG,YADA7kQ,OAAAsoC,SAAmBrN,KAAA59B,KAAY8mQ,UAItC9mQ,KAAAtD,MAAA,MAEI+nF,EAAOzkF,KAAAkoE,WAAYloE,KAAKtD,OACvBi3P,EAAA3zP,KAAAolB,UAAAjlB,SACCunQ,EAAC/gP,EAA2B5lB,EAAA4mQ,OAAAhU,EAAA,SAAApyP,EAAA+E,GAAA,OAAAshQ,GAAAthQ,KACjCuhQ,EAAAl5K,EAAA,EAAAC,iBAAAnK,EAAA99E,KAGC3G,KAAIuvD,SAAA,WAEJzvD,EAASslB,UAAQze,IAAAkhQ,EAAc,IAAA3pQ,OAAAs+N,GAAA,EAAAt+N,CAAAwpQ,WAG5BhrQ,aACAorQ,iBAAiBD,EAEpB7nQ,KAAAynQ,cACEznQ,KAAAuvD,SAAA,kBAAAzvD,EAAAkV,QAAAhV,KAAA8sD,aAEErsD,UAAKkoC,KAAe,WACtB3oC,KACAtD,MAAAwC,KAAA+I,IAAAjI,KAAAtD,MAAA,UACEsY,QAKNuyP,EAAA9mQ,UAAAsnQ,aAAA,WACcx5K,EAAsB,EAAAvjD,WACnCC,SAAAvoC,OAAA1C,KAAA8nQ,kBAED9nQ,KAAAggN,QAIAunD,EAAA9mQ,UAAAooC,MAAA,SAAam/N,GAAb,IAAAloQ,EAAAE,KAUE,OATAA,KAAAggN,YACE8mD,SAAKnkQ,OAAAsoC,SAAsBrN,UAC3BlhC,MAAK,OACLkkN,WAAK,EAER5gN,KAAAioQ,WAAA15K,EAAA,EAAAvrD,UAAA,kBAAAljC,EAAAioQ,iBAED/nQ,KAAA8nQ,iBAAA9nQ,KAAAolB,UAAgB1iB,OACdutE,EAA6B,EAAAt0E,KAAA,oBACvBqE,KAAAW,WAAcM,IAAA,kBAAyB+mQ,GAAA9mQ,KAAA,SAAA8lQ,GAEzC,OAAAlnQ,EAAWa,WAASM,IAAA,kBAAmB+mQ,EAAsB,eAAA9mQ,KAAA,SAAAgnE,GAC3DpoE,EAACooE,WAAcA,EACfpoE,EAACgtD,SAAcgiB,GAAuB,EAAAivC,eAAcipJ,EAAAl6M,UACzDhtD,EAAAkV,YAKHuyP,EAAC9mQ,UAAAu/M,KAAA,WAEDhgN,KAAA4gN,YACwB5gN,KAAAolB,UAAejlB,SACtCwwK,OACH1gG,EAAC,EAAAt0E,KAAA,qBAAAw0K,MAAA,KAEDnwK,KAAAtD,MAAA,qCCpJ8BsD,KAAAioQ,aAIrBjoQ,KAAAynQ,eACPznQ,KAAAuvD,SAAck8B,OAAAzrF,KAAAynQ,eAEVx3L,EAAa,EAAAt0E,KAAA,qBAEb4rQ,EDmD+B,KChDlB,EAAAzrL,QAAA,cAAAosL,WAKA,oBAGbC,EAAAjjP,EAAAvkB,EAAAykB,EAAAD,EAAA6kE,OACDlqF,EAAKE,KClBoB,GDmBxBA,KAAAklB,OAAYA,EACZllB,KAAAW,WAASA,OACPykB,UAAMA,0BACe,qBACP,QACbqzE,YAAA,QACF1E,SAAA,EACA/zF,KAAAgnQ,SAAA,CACNl6M,SAAA,oDC9ByB9sD,KAAAooQ,UAAA,GACCpoQ,KAAAipF,SAAAe,EAAAg2J,OAAA,4BACHhgP,KAAAqoQ,OAAAljP,EAAApG,QAAA8E,OAAAhnB,GACMsoB,EAAApG,QAAA8E,OAAAhnB,GAAA,CACH,IAAAmrQ,EAAA7iP,EAAApG,QAAA8E,OAAAhnB,8DCJgB8D,EAAAM,IAAA,kBAAA+mQ,EAAA,UAAA9mQ,KAAA,SAAAC,GAGrCrB,EAAAwoQ,cAAWnnQ,KA8DhB,SF9CiBilB,QAAA,UAAkB,iDEFlC+hP,EAAiB1nQ,UAAM8nQ,yBAAA,WAEnB,IAAIzoQ,EAAQE,KACdA,KAAAwoQ,mBAAO7hP,EAA4B5lB,EAAA+hF,OAAA9iF,KAAAyoQ,gBAAA,SAAAC,GACpC,OAAA/hP,EAAA5lB,EAAA6J,KAAA9K,EAAAwoQ,cAAA,SAAAK,GAEQ,OAASt9P,SAAAs9P,EAAApnQ,MAAA,MAAAmnQ,EAAA7rQ,OAIdmD,KAAI4oQ,aAAAjiP,EAA2B5lB,EAAA+hF,OAAA9iF,KAAQooQ,UAAA,SAAAx2L,GAEnC,OAAMjrD,EAAE5lB,EAAA6J,KAAA9K,EAAAwoQ,cAAA,SAAAK,GACN,OAAAA,EAAmBpnQ,QAAQqwE,EAACna,YAIrCh3D,UAAAooQ,gBAAA,SAAAH,GAEGA,EAAInnQ,MAAcmnQ,EAAS7rQ,GAAAgJ,WAC3B6iQ,EAAI30P,KAAA,kBAEJ20P,EAAa5pF,MAAE9+K,KAAAsoQ,cAAAnjQ,OAAA,EACjBnF,KAAIsoQ,cAAI14P,KAAA84P,GACT1oQ,KAAAuoQ,4BAIDJ,EAAgB1nQ,UAAEqoQ,mBAAA,SAAAl3L,GAChB,IAAI82L,EAAI,cACR30P,KAAsB,yBAAjB/T,KAAMsoQ,cAAOnjQ,OAAA,QAChBysE,EAAIna,yMAGPh3D,UAAAsoQ,aAAA,SAAA/B,EAAAsB,GAEG,IAAIxoQ,EAAQE,KAEjBgnQ,EAAAz1P,MAAA+2P,GAEctB,EAAmBnqQ,wNACxB2oB,SAAM,oGAEK8iP,cAAAnjQ,UAAA1E,UAAA+5O,WAAA,0FAARx6O,YACT,SAAQwI,2aAIX2/P,EFhDkB,eEwDPxjB,UAEN,aAAuB,aAElB,mRAMF,kJAIQ,0CAIP,kBAAqB5kC,EAAA56L,SACtBA,EAAApG,QAAA8E,OAAAhnB,qBAyBR,EAAAssB,WAAA,mBAAA6/O,MArBOjoQ,EAAA8B,OAAK,kBAAW4R,OAAAw0P,WAcd,uhBCzDFz4L,YACe,EAAAxwE,UAAc,OAAW,EAAI,eAC9CigD,EAACn+C,EAAA+S,EAAAjG,EAAAgtE,EAEDxwD,EAAArW,WAC6B,EAAA/U,KAAA,SAAA4V,UACvBA,EAACpU,OACN,OAEDy+C,EAAS,GACHrqC,EAAApU,MAAA,OACF,EAEH,OADEoU,EAAAuuB,KAAAv0B,KAAA,WACF,GAAA4gE,EAAA04L,WAED,OACQpnQ,EAAC2kB,EAAmB,EAAA+C,WAAA,GAAA5T,EAAAiP,SAAAhQ,EAAA/S,EAAAkT,OAC1BY,EAAApU,MAAA,EACA,OACD,GAAAqT,EAAAI,KAAA,YAEDrG,EAAAiG,EAAAtT,MACK0+C,cDoCFrxC,EAAA4hE,kBAEA,QACFhf,QACH,MAAC,4BCpFL,GDsFC5iD,EAAA2iD,UAED43M,EAAA,gGCvH8BlpN,GAAA,UAAArxC,EAAAgvB,KAAA,KAE9BqiB,GAAA,cAAarxC,EAAA9S,KAAA,SACkBmkD,GAAA,gDAAArxC,EAAA/S,KAAA,qBAAA+S,EAAA/S,KAAA,UAC/B+S,EAAawiD,WACanR,GAAA,6CAAArxC,EAAAwiD,SAAA,WAIpBnR,GAAA,OAsBNrxC,EAAA2iD,QAAM,CACJtR,GAAO,4DACL,IACA,IAAQ,IAAEprC,EAAA4R,EAAa,EAAA7X,EAAA2iD,SAAAx8C,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAEhBirC,GAAQmpN,EADCr0P,EAAAxT,MACIivE,SAGlBgL,GAAMn1D,EAAY,CAAGgP,MAAKmmD,WAE1B,IACIzmE,IAAcA,EAAAE,OAAAnT,EAAA+S,EAAA4mE,SAAA35E,EAAA/B,KAAA8U,GAGlB,WAAAwR,EAAA,MAAAA,EAAAgP,UAEI,kBAEJ,QA0Be+zO,CAAAx6P,EAAqB4hE,GAC9B56D,EAAApU,MAAK,OACP,EAEA,OADAqT,EAAM/S,EAAAkT,OACA,GAAgB,QAMtB,EAAM,SAAa,QACnB,EAIA,OAFA4mE,EAAAhmE,EAAWiP,OACXuG,EAAA,CAAAiK,MAAAumD,GACA,CAAQ,EAAU,QAElB,MAEE/mE,IAAUA,EAAAI,OAAWF,EAAAjT,EAAA25E,SAAA1mE,EAAAhV,KAAA+B,WAErB,GAAUspB,EAAA,MAAAA,EAAYiK,YACtB,SACD,EAAE,SAAA4qB,oBAQL8pB,8BAGE,aACDs/L,QAEH,SAAY3vP,EAAGswD,EAAAC,OAEbq/L,MAuCIpiN,EAxCJqiN,EAAAv/L,EAAAp/D,KAAA,uBAGE,SAAKmP,GAAA,OAAqB0M,EAA8B,EAAE3mB,OAAA,wBAC1D0pQ,EAAAC,SACAhjP,EAAS,EAAAzmB,KAAA,SAAA8B,UACHA,EAACN,OACL,OAQG,OAPFgoQ,EAAAzvP,EAAAvF,OAAAzS,UAEJunQ,GAEYA,EAAUx1L,WAEbw1L,EAAQ5vP,EAAAy8D,OACX,GAAqBuzL,GAAkBhwP,EAAA82D,OAC7C,OASC,OAPEi5L,EAAA3nQ,EAAoB+iB,OACtB0kP,EAAetpN,KAAAwpN,GACf1/L,EAAAw/L,EAAAx/L,CAA2Bu/L,IAC5BE,EAAA1iQ,QAAA,wBAAA0iQ,EAAA1iQ,QAAA,qBAUK4xB,EARyB3e,QAU5Bsa,kBAED21C,EACEp/D,KAAK,0BAAyBo+F,SAAA,YAXjB,QAMXtwE,oBAUH,SAAAA,KAEDA,EAAAmC,QACDnC,EAAAsuB,kBACC,SAAetuB,GAEhBixO,EADC1iN,IAAAvuB,EAAAmC,OAAsBqsB,IAAAxuB,EAAAsuB,YAatB,EAAAqnB,UAAe,cAAK8vK,aAGT,WACRjkP,EAAAqhC,EAAAquO,SASS7oQ,EAAA8B,OAAQ,kDAEH,8CAAAwiB,EAAAwkP,EAAAt6M,6xBAKlBihB,KAAA,UACF,SAAA92D,EAAAswD,GAED,IAMA8/L,EACEC,EAOAC,IAdFC,EAAmBjgM,EAAAp/D,KAAY,oBAC/Bs/P,EAAMlgM,EAAiBp/D,KAAA,kBAEnBu/P,EAAgBngM,EAAEp/D,KAAA,sBAClB4lE,EAAI92D,EAAA82D,QAOe,KACpB,EAaL,SAAU45L,IAOJL,GACNA,EAAAlkH,SC1LA,SAAAwkH,IACH,IAAAC,EAAA95L,EAAA3e,cAEDs4M,EAAO,GAAUpoQ,UAAA,wCAA2CuoQ,SC7CjBR,EAAA5/O,UAS3B4/O,EAAA,IAAA5nL,EAAAnhF,EAAA,CACPyT,OAAA21P,EAAkD,GAClDx4P,QAAA,WACQ,OAAA6+D,EAAA+5L,eAAA,CAAAxvO,KAAA,aAENwqB,QAAAirB,EAAAn7C,MAAA,yBACKs3D,OAAA,QACX69K,eAAA,IACM5oL,cAA2B,CAClBE,WAAS,cAER2oL,iBAAe,WACnB5oL,YAAe,CACvB,CAEiBrjF,GAAM,SACRsjF,WAAQ,WAChBC,KAAA,oECvBVvR,EAAAxzE,OAAyBwc,GAAA,iCAEf,GAAAg3D,EAAAk6L,UAAA7/D,YAAAniE,WAAA,CACP,IAGMj5C,EAAAy6K,EACEx6K,EAAGw6K,EAAAt/P,KAAA,UAAAA,KAAA,UACf6kF,EAAA/lC,SALmB,8DAMT5iC,IAJJ,0HAIe65B,SAAA8uC,GACdC,EAAWhmC,SANa,oBAOxBqgN,EAAgB75K,KAAe,CAClC/7B,KAAas7B,EAAA,GACNC,SAAUA,EAAA,GACVI,IAAI,cACJC,SAAS,aACTC,aAAW,gBAGAylF,cAGpBz4K,OAAAwc,GAAA,kCAAMk4C,qBAAAu4M,EAAA,GAAA7gF,cACL75H,EAAA,WACD66M,IAEK55L,EAAS3uE,eAGb7E,OAAAwc,GAAA,+BAIF4f,WAAc,WAEfo3C,EAAA9e,qBAAAu4M,EAAA,GAAA7gF,cAGW75H,EAAU,6BFvCpB,MASJihB,EAAAxzE,OAAAwc,GAAA,oBAEag3D,EAAOllE,QACRklE,EAAO9e,qBAAiBu4M,EAAA,GAAA7gF,cAGhCuhF,IAAAn6L,EAAAl1E,MAAA20G,cACKg6J,EAAUz+L,YAAmB,qBAA0C,IAA3BgF,EAAAl1E,MAAiB20G,aACnE06J,EAAAn6L,EAAAl1E,MAAA20G,aAGC26J,OAAA3kQ,IAAAuqE,EAAAl1E,MAAAG,MACKovQ,IAAUD,IAChBX,EAAAz+L,YAAA,kBAAAo/L,GACFC,EAAAD,GACFp6L,EAAAs6L,eAEeb,EAAAx+L,YAAA,sBAAAu+L,GAEP,OAAAx5L,EAAAs6L,WAAA7qQ,OACQ,aAAAuwE,EAAAs6L,WAAA7qQ,OACW,YAAZuwE,EAAAs6L,WAAY7qQ,OACRgqQ,EAAMvgN,SAAA,sBAAA8mB,EAAAs6L,WAAA7qQ,OAEX+pQ,EAAEx5L,EAAAs6L,WAAA7qQ,OAEN+pQ,IACLC,EAAcx+L,YAAA,sBAAAu+L,GACdA,EAAgB,UCJde,YAAY,cAAe,0BAAOV,KACnCjtL,iBAAA,mBAAAitL,GAEDrgM,EAAKxwD,GAAC,wBF8KHywP,EAAAz+L,YAAA,4BACJgF,EAAAn1E,UAAAolO,cAAAjwJ,EAAAl1E,MAAAuB,QE9KG2c,GAAI,aFgLT,WAEHywP,EAAOz+L,YAAU,yBAAmB,GAC3BgF,EAAAn1E,UAAAolO,cAAA,WElLC,WAAY,aACb5mN,MACDswP,EAAAtwP,MACHiwP,GACDA,EAAA5/O,UAGJ6/O,yBEzCS17L,UAAA,yCAAAhpD,SACL,UACO,aACN,uRACDotC,KAAA,SAAa/4C,EAAAswD,SAKhB9vE,EAAA,QAAD,OAKiB+sB,EAAelmB,EAAA8B,OAAW,yBAEhC,eAEGmoQ,YACL3+N,OAAA,CACL3yB,MAAE,CAEF82D,KAAO,IACLxf,UAAW,wBAEAt3C,OACTi2C,EAAGj2C,EAAA82D,KAAA7gB,SAEHy1H,EAAS1rK,EAAAs3C,UAAYp1D,MACpBgY,cACH/V,QAAA,SAEKA,QAAA,QACLA,QAAW,IAAO,IAChBA,QAAM,IAAS,QACfotQ,GAAet7M,OACbs7M,GAAct7M,GAAKy1H,UACjB6lF,GAAWt7M,GAAcy1H,WAGpBz1H,GAAU,SAEZ,IACN,kBAAAj2C,EAAAs3C,UAAAD,eACA/rD,KAAA,oBAAA2qD,EAAAy1H,GAIH,OADF6lF,GAAiBt7M,GAAGy1H,GAAUjkL,EACrBA,KAGb+pQ,GAAC78L,UAAA,iBAAA88L,WAIYlkP,EAAoBlmB,EAAA8B,OAAiB,yBACpC,WC1Dd,0DCJwB7C,KAAAwU,OAAAxU,KAAAorQ,UAAA52P,OACGxU,KAAA1E,MAAA0E,KAAA4rI,UAAAtwI,MACL0E,KAAAgjH,iBAAAhjH,KAAAorQ,UAAAC,mBAEMrrQ,KAAA4rI,UAAAy/H,iBAAArrQ,KAAAorQ,UAAAC,iBAAAjrQ,KAAAJ,KAAAorQ,YAECprQ,KAAAorQ,UAAAxnJ,0GFwDf,MCnCHv1C,UAAc,4CAhBjB,eACAi9L,qBACM,eACP,mBACD,2DAEFhiP,YAAW,QACT,CACA8hP,UAAA,IAEFG,YAAO,IACLvoJ,gBAAe,eASf,+OAGHwoJ,GAAA1iJ,GACH,OAAC7/F,SAAA,gBAEDvP,MAAA,YErC8B+4C,KAAA,SAAA/4C,EAAAsQ,GACOA,EAAAhf,IAAA,CAAAzM,QAAA,QAAAM,MAAA,SAIrC6a,EAAAi3B,UAAAm4E,EAAAn4E,UAAAvvC,IAAA,SAAAwN,GACE,MAAgB,CAAA/S,KAAA+S,EAAA5J,KAAAzD,MAAAqN,EAAA5J,QAEgB,IAAvB0U,EAAAi3B,UAAWxrC,QACXuU,EAAMi3B,UAAWvpB,QAAK,CAEtBvrB,KAAS,8BACd0F,MAAe,SAGXovC,UAACvpB,QAAA,CAAAvrB,KAAA,WAAA0F,MAAA,OAELmY,EAAApe,MAAAmgO,SAAA/hN,EAAApe,MAAAy0G,kBACHr2F,EAAApe,MAAAy0G,gBAAA,KACFr2F,EAAA+xP,cAAA,4BAEO/xP,EAAOpe,MAAAy0G,gBAAuB,UCVpC,EAAA1hC,UAAoB,mBAA0Dm9L,WAiBxC,WAGxC,SAAAE,EAACxmP,EAAAvkB,GAAAukB,EAAA5pB,MAAAw2D,MAAA5sC,EAAA5pB,MAAAw2D,OAAA,wBAED5sC,EAAA5pB,MAAAw2D,MAAWliD,KAAA,qBChCWsV,EAAA07D,iBAAA,SAAA+qL,EAAA7qP,GACIngB,EAAAR,OAAA,CAAAO,MAAAirQ,IAAAzqQ,KAAA,SAAA0qQ,wDCAa1mP,EAAA2mP,iBAAA,SAAAp5M,GAEvC9xD,EAAAR,OAAA,CAAAO,MAAA+xD,EAAAp3D,YAAA6F,KAAA,SAAA0qQ,GAUE,IAAgBvwQ,EAAAsrB,EAAA5lB,EAAA6J,KAAAghQ,EAAA,CAAAhwQ,MAAA62D,EAAAp3D,YAChBA,IAA8BA,EAAVsL,IATF8rD,EAAA9rD,IAAAtL,EAAAsL,IAUA8rD,EAAA8pK,QAAYlhO,EAAOywQ,IAE9Br5M,EAAW72D,MAAAP,EAAAO,UAIhBspB,EAAKm3O,WAAU,SAAA5pM,KACRn3D,MAAAw2D,MAAAnrC,EAA6B5lB,EAAAogF,QAAKj8D,EAAO5pB,MAAAw2D,MAAaW,WFO/Di5M,EAACtlP,QAAA,0BAFqC,KEChCrlB,SACA,gCAEA,2CFdF,CACAzF,MAAA,KAGJ2tB,SAAA,IAAAE,WAAA,uBACED,YAAU,wDACR,2BESI,uBAAsB6iP,WAcI,oJAIpC7mP,EAAArV,KAAA,WAACqV,EAAAmrE,eAEDnrE,EAASmrE,YAAsB,WACrB1vF,EAAWM,IAAI,kBAAgBC,KAAM,SAAEinE,GACtCjjD,EAAKijD,KAAUA,KAGzBjjD,EAAAqrE,YAAA,SAAAC,GAEQ7vF,EAAA0oE,KAAkB,mBAAamnB,EAAA3+E,OAAA3Q,KAAA,WAC7ByB,OAAKsoC,SAAWrN,KAAOnpB,EAAA,EAAAoS,UAAA,OAI1B3B,EAAArV,gBAhBHuW,QAAA,qCAkBD4lP,EApBgC,GAuBpC/kP,EAAClmB,EAAA8B,OAAA,uBAAAsmB,WAAA,gBAAA8iP,IC/DD,IAAAC,GAAA,oBAGIC,EAAgBjnP,EAAC85F,EAAAr+G,EAAAqpF,GACjB9kE,EAAO+jE,SAAWe,EAAGg2J,OAAA,yBACrB96N,EAAOknP,OAAS,CAAEpnQ,KAAM,IACxBkgB,EAAOmnP,UAAW,WAClB1rQ,EAAe0oE,KAAG,aAAYnkD,EAAOknP,QAASlrQ,KAAA,SAAkBC,GAEzDR,EAAO0oE,KAAA,mBAAAloE,EAAA0Q,OAAA3Q,KAAA,WACRyB,OAAAsoC,SAAiBrN,KAAAnpB,EAAA,EAAAoS,UAAA,mBARzBslP,EAAA/lP,QAAA,UAAY,QAAa,aAAmB,eAaxC+lP,EAfN,KAmBQprQ,EAAA8B,OAAO,uBAAYsmB,WAAA,aAAA+iP,WAIrB,sBAIWvrQ,EAAUqpF,EAAA5kE,mBAEZzkB,iBACLykB,gBACE4kE,EAAYg2J,OAAE,oFALpB55N,QAAe,4BAA2B,yBAapCkmP,WAAkB,yCAElB3jL,OAGR,OAAE3oF,KAAAW,WAAA0oE,KAAA,mBAAArpE,KAAAqoF,QAAAnnF,KAAA,WAEFpB,EAAOslB,UAAA1iB,KAAiB,mBAvBtB,KA6BW,EAAQymB,WAAU,iBAAgBojP,WAS/CryQ,EAAO,QAwELsyQ,GAlEmB,oBAGlBC,EAAA9rQ,EAAAqpF,QAEDrpF,WAAgBA,OAChB+rQ,MAAA,gBACE,QACDtgL,KAAE,EACLpsF,KAAE2sQ,YAAA,EAEF3sQ,KAAAipF,SAAOe,EAAoBg2J,OAAA,+BACzBt/O,MAAM,QAENksQ,oBAZSxmP,QAAA,+BAeE3lB,UAAGmsQ,SAAA,eACd9sQ,EAAKE,qBAEJiB,IAAA,6BAAAjB,KAAA6sQ,QAAA,SAAA7sQ,KAAAosF,KAAA,UAAApsF,KAAAU,OAEDQ,KAAA,SAAgBC,KACdsmE,MAAUtmE,EAAKsmE,MACjB3nE,EAAGssF,KAAAjrF,EAAAirF,KACHtsF,EAAA+sQ,QAAA1rQ,EAAA0rQ,QAEF/sQ,EAAOgtQ,WAAc5tQ,KAAAC,KAAWgC,EAAAsgH,WAAAtgH,EAAA0rQ,SAC9B/sQ,EAAA6sQ,WAAe7sQ,EAAAgtQ,WAAqB,IAClCJ,MAAO,GACT,IAAG,IAAAtmQ,EAAA,EAAAA,EAAAtG,EAAAgtQ,WAAA,EAAA1mQ,IACHtG,EAAA4sQ,MAAA98P,KAAA,CAAAw8E,KAAAhmF,EAAA2Y,QAAA3Y,IAAAtG,EAAAssF,OAGAtsF,EAAKitQ,0BAIMtsQ,UAAIusQ,eAAuB,SAAS5gL,aAC7CA,EAASA,UACVwgL,cAGInsQ,UAAgBssQ,mBAA2B,eAChD1mP,EAAAvkB,EACF,IAEA,IAAO,IAAA+S,EAAA4R,EAA2C,EAAAzmB,KAAAynE,OAAA1yD,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CAChD,IAAA3T,EAAW0T,EAAOxT,MAChBF,EAAA4rQ,UAAeC,GAAe7rQ,GAC9BA,EAAA8rQ,eAAmBC,GAAgB/rQ,EAAA4rQ,YAIvC,MAAOzxL,GAAAn1D,EAAe,CAAAgP,MAAMmmD,GAE5B,QACE,IACEzmE,IAASA,EAAAE,OAAAnT,EAAE+S,EAAI4mE,SAAO35E,EAAA/B,KAAA8U,WAEvB,GAAAwR,EAAA,MAAAA,EAAAgP,WA5DkB,YAoErB63O,GAAO7rQ,YACLgsQ,YAAYhsQ,EAAAgsQ,WAAmBloQ,SAC7BkoQ,WAAO,kBAKN7rQ,MAEE,aAASA,iBAId4T,GAAc,EAAA0+C,qBAAgCtyD,6BAACM,EAAAoJ,qBAAApJ,EAAA4L,oBAY7B,sBAGHwX,EAAO+iE,EAAAtnF,EAA2BykB,EAAS4kE,wBAEnD,YACJ,CAAAhlF,KAAA,GAAA63B,KAAA,YACA5rB,YAAA,GACLiU,EAAE+jE,SAAAe,EAAAg2J,OAAA,0BAEF96N,EAAOrV,KAAA,WACCo4E,EAAaprF,KAEnBqoB,EAAAkiD,QAAA6gB,EAAAprF,IACIqoB,EAAKmiD,gBAAY4gB,EAAAprF,IACnBqoB,EAAMmrE,YAAApI,EAAiBprF,QAGxBuqE,QAAA,SAAAvqE,GAED8D,EAAMM,IAAA,cAAsBpE,GAAAqE,KAAa,SAAWG,GACpD6jB,EAAW7jB,KAAKA,EACd6jB,EAAOooP,QAAOzwQ,EACbqoB,EAAAjU,YAAAC,eAAA7P,EAAA6P,kBAINgU,EAAAmiD,gBAAA,SAAAxqE,GACH8D,EAAAM,IAAA,oBAACpE,EAAA,gBAAAqE,KAAA,SAAAunE,KAAA/1D,sDChMDi2D,SAAAD,EAAAC,SACkBC,OAAA1qE,OAAAktH,GAAA,SAAAltH,CAAAwqE,EAAAE,QAAAC,UAChBC,UAAY5qE,OAAaktH,GAAgD,SAA7DltH,CAA6DwqE,EAAAI,WAAA/vD,OAAA,iBACzDgwD,SAAAL,EAAAK,SACLC,QAAWN,EAAWM,QACtBC,eAAUP,EAAAO,eACjBC,GAAAR,EAAAQ,GAEYC,UAAGT,EAAAS,UACJC,OAAIV,EAAaU,eAM5B9B,kBAAgB,SAAiBiC,KAE/BF,KAAM,oBAAAnkD,EAAAooP,QAAqC,qBAAiB,CAC5DhkM,YAAOC,IAEProE,KAAA,WACAgkB,EAAAujD,SAAWvjD,EAAAujD,SAAAj3D,OAAA,SAAAk3D,GACT,OAAAA,EAAW7rE,KAAO0sE,OAQzBrkD,EAAAqiD,sBAAA,SAAAgC,GACH5oE,EAAA0oE,KAAC,oBAAAnkD,EAAAooP,QAAA,WAAApsQ,KAAA,WAAAgkB,EAAAujD,SAAA,+BC/BD,GAAAvjD,EAAAqoP,aAAA5kL,OAAA,CAGI,IAAOl+C,EAAO,CAAAsuE,SAAA7zF,EAAA6zF,UACZp4G,EAAOqC,IAAQ,oBAAsBkiB,EAAOooP,QAAE,YAAkB7iO,GAAAvpC,KAAA,WAE5DkkB,EAAA1iB,KAAe,sBAGlB8qQ,kBAAA,WACD,IAAA/iO,EAAAvlB,EAAAjU,YAEFtQ,EAAaqC,IAAG,oBAAWkiB,EAAAooP,QAAA,eAAA7iO,aAEhB,WACNvlB,EAAAuoP,SAAA9kL,QAIHhoF,EAAW0oE,KAAI,mBAAoBnkD,EAAQ7jB,MAAMH,KAAC,WAChDkkB,EAAO1iB,KAAQ,mBAInBwiB,EAAOmrE,YAAS,SAAAxzF,GACd8D,EAAWM,IAAC,cAAepE,EAAQ,SAAAqE,KAAA,SAAAinE,GACjCjjD,EAAOijD,mBAIP,WACCjjD,EAAAuoP,SAAA9kL,QAIHhoF,EAAWqC,IAAA,cAAkBkiB,EAAGooP,QAAapoP,EAAG7jB,MAAYH,KAAA,WAC5DkkB,EAAA1iB,KAAA,mCAIS,SAAkBgrQ,GAC3B/sQ,EAAGu+G,MAAA,aAAAwuJ,EAAA77P,MAAA,UAAAqT,EAAAooP,QAAAI,GAAAxsQ,KAAA,eAGLgkB,EAAOyoP,cAAO,SAAAD,GACf/sQ,EAAA+3D,OAAA,aAAAg1M,EAAA77P,MAAA,UAAAqT,EAAAooP,SAAApsQ,KAAA,WACHgkB,EAAAkiD,QAACliD,EAAAooP,SAAApoP,EAAAmrE,YAAAnrE,EAAAooP,iCCjDoCpoP,EAAA0oP,WAAA,SAAAjC,EAAA7qP,GAIrCoE,EAAA2oP,gBAAA1oQ,OAAA,EAOE2b,EAAgB6F,EAAA5lB,EAAAK,IAAA8jB,EAAA2oP,gBAAA,SAC+BltQ,EAAUM,IAAV,YAAsB,CAAAP,MAAA,KAAAQ,KAAA,SAAAC,GANrE+jB,EAAA2oP,gBAA0B1sQ,EAC1B2f,EAAW6F,EAAe5lB,EAAEK,IAAID,EAAA,YAO9B+jB,EAAK4oP,WAAQ,WACd,GAAA5oP,EAAA6oP,WAAAplL,OAAA,CAKO,IAAGqlL,EAAGrnP,EAAA5lB,EAAA6J,KAAAsa,EAAA2oP,gBAAA,CACV7oQ,KAAOkgB,EAAKknP,OAAYpnQ,OAGrBgpQ,IAGN9oP,EAAAknP,OAAA6B,aAAA/oP,EAAA7jB,KAAAI,MACHd,EAAA0oE,KAAC,aAAA2kM,EAAAnxQ,GAAA,UAAAqoB,EAAAknP,QAAAlrQ,KAAA,WAAAgkB,EAAAkiD,QAAAliD,EAAAooP,uCC5BqDpoP,EAAAgpP,WAAA,SAAA7sQ,GACF6jB,EAAAM,SAAA,iBACA5pB,MAAA,SACFC,KAAA,yBAAAwF,EAAAI,MAAA,IACJ3F,KAAA,WAEAC,QAAA,SAI9CC,UAAA,WAGkB2E,EAAA+3D,OAAA,oBAAAr3D,EAAAxE,IAAAqE,KAAA,WAChBkkB,EAAY1iB,KAAa,sBAMxBwiB,EAAAipP,YAAA,SAAA7sP,GACH,IAAAjgB,EAAA6jB,EAAC7jB,KAED,GAAAA,EAAA+sQ,WAKS,OAFP9sP,EAAgBI,sBAChBJ,EAAA+S,kBAGF,IAAAg6O,EAAChtQ,EAAA+P,WAAA,qBAAAzQ,EAAA0oE,KAAA,oBAAAhoE,EAAAxE,GAAAwxQ,GAAAntQ,KAAA,WAEDgkB,EAAArV,UAGAqV,EAAArV,OAEA,SJoIQuW,QAAW,iEIpInBkoP,EJkIwB,MKvKD,WA0BrB,SAAAC,EAAgBrpP,EAAAvkB,EAAAqpF,GAChB9kE,EAAArV,KAAA,WAAAqV,EAAA+jE,SAyCCe,EAAAg2J,OAAA,yBAxCS96N,EAAAspP,WAEAtpP,EAAAspP,QAAA,WACA7tQ,EAAAM,IAAc,aAAdC,KAAmB,SAAAinE,GAxB7BjjD,EAAAijD,KAAeA,OAObsmM,UAAc,SAAKj+K,GACnBtrE,EAAAM,SAAA,gBAA4B,CAC5B5pB,MAAW,SACXC,KAAU,sCAAA20F,EAAAxrF,KAAA,IACRxJ,MAAA,wDACAM,KAAA,WACAC,QAAA,SACDC,UAAA,WACD2E,EAAgB+3D,OAAA,aAAA83B,EAAA3zF,IAAAqE,KAAA,WAChBgkB,EAAAspP,gBAgBAtpP,EAAErV,cAnCN0+P,EAAAnoP,QAAA,wCAJuB,GAiFbsoP,GAnCF,sBAEOxpP,EAAA+iE,EAAwBtnF,EAAAykB,EAAsB4kE,UACpD,gKAEG9kE,EAAMsrE,uBAGD,SAAC3zF,KACToE,IAAA,aAAApE,EAAA,UAAAqE,KAAA,SAAAytQ,GAEDzpP,EAAOypP,SAAKA,cAGH,WACPzpP,EAAO0pP,eAAOjmL,UAGZ3lF,IAAA,aAAWkiB,EAAAsrE,IAAA3zF,GAAAqoB,EAAAsrE,KAAAtvF,KAAA,WACfkkB,EAAa1iB,KAAK,kBAGvBwiB,EAAA2pP,cAAA,SAAAnB,GAED/sQ,EAAAu+G,MAAA,aAAIwuJ,EAAJ77P,MAAA,UAAA67P,EAAApsQ,OAAAosQ,IACExoP,EAAKyoP,cAAa,SAAQD,GACxB/sQ,EAAO+3D,OAAA,aAAAg1M,EAAA77P,MAAA,UAAA67P,EAAApsQ,QAAAJ,KAAA,WACRgkB,EAAA4pP,YAAA5pP,EAAAsrE,IAAA3zF,yBA1BQupB,QAAM,CAAQ,kEADnB,GA6DL2oP,GAtBQ,oBAEAC,EAAA/mL,EAAAtnF,EAAAqpF,QACL/B,aAAeA,kBACPtnF,mBACA,WAAS,qEACb,aAAS,GAAC,iCACL,CAAS,UACfsoF,SAACe,EAAAg2J,OAAA,mCACDvrO,EAAe,EAAAykF,SAAA73F,KAAAwqH,WAAA,wBAPnBzlG,QAAA,wDASO6oP,YAAA,6BACDzvQ,MAAA,SAAAQ,KAAAR,MAAA,mBACH0vQ,EAAG,CACN1vQ,MAAAQ,KAAAioF,aAAAzoF,OAGHQ,KAAAW,WAAAqC,IAAA,wBAAAksQ,GAAkBhuQ,KAAlB,WAAAyB,OAAAsoC,SAKCrN,KAAAj7B,OAAAsoC,SAAArN,UAtBQ,MAkCmB,oBAIpBuxO,EAAUjqP,EAAAvkB,EAAAqpF,QACdf,SAAWe,EAAUg2J,OAAA,+BACf/+O,IAAK,uBAAUC,KAAA,SAAAqtC,GACrBrpB,EAAAqpB,SAAgBA,aALjBnoB,QAAA,sCASD+oP,EAX0B,GAa9BC,GAAA,WAEA,SAAAA,EAAWplL,mCCtI6C,iCAAAolL,EDoIxD,KC7HkB,EAAAjmP,WAAA,qBAAAqjP,MAChB,EAAArjP,WAAoB,oBAAgDkmP,MAAhD,EAAAlmP,WAAsB,oBAAAmmP,MACnC,EAAiBnmP,WAAG,mBAAAulP,MACT,EAAAvlP,WAAkB,oBAAagmP,MAChD,EAAAhmP,WAAA,gBAAAimP,MAED,EAAAjmP,WAAA,iBAAiB4lP,QAMjBQ,GAAA,oBAEIC,EAAyBvnL,EAActnF,EAAQykB,EAAC0rG,EAAiB9mC,SAC/DhqF,UACDioF,aAAEA,EACLjoF,KAAGW,aACJX,KAAAolB,YACHplB,KAAA8wH,iBAAC9wH,KAAAyvQ,aAAA,0BAED17P,KAAA,iEC5B8Cw6B,SAAA,CAI7BmhO,WAAA,OACPC,aAAa,EACVC,aAAS,GAGtBniO,WAAA,GAIEztC,KAAAipF,SAAAe,EAA2Cg2J,OAAsB,yBAA7ChgP,KAAAqoQ,OAAaroQ,KAAAioF,aAAAprF,GAAUmD,KAAA6vQ,uBAAsB,WAHjE,YAAW,WAAU,mBAKrB7vQ,KAAAW,WACEM,IAAO,wBACRC,KAAA,SAAA4uQ,GAED,IAAAzpP,EAAAvkB,EACEhC,EAAOgwQ,UAAeA,EACvB,IAGS,IAAI,IAAIj7P,EAAI4R,EAAO,EAAA3mB,EAAAgwQ,WAAA/6P,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAA,CACrB,IAAA+6P,EAAsBh7P,EAAAxT,MAEnBzB,EAAMgxH,eAAQ9tH,IAAAlD,EAAAkwQ,sBAAAD,EAAAh8P,MAAAg8P,EAAAE,wBAGnBz0L,GAASn1D,EAAA,CAAAgP,MAAkBmmD,WAE9B,IAEWzmE,IAAUA,EAAAE,OAAAnT,EAAc+S,EAAK4mE,SAAK35E,EAAQ/B,KAAE8U,GAEpD,QAAM,GAAAwR,EAAU,MAAAA,EAAAgP,cAEfv1B,EAAAmoF,aAAAprF,GAOIiD,EAAKa,WAAKM,IAAW,4BAAwBnB,EAAWmoF,aAAYprF,IAAQqE,KAAG,SAAWC,GAK7F,OAHErB,EAAImpF,SAAU7nD,YAAKxxB,KAAG,CAAA/T,KAAAsF,EAAA6D,qCACxB7D,EAAcotC,SAAG5nB,EAAA5lB,EAAA0O,SAAAtO,EAAAotC,SAAAzuC,EAAA2P,SAAA8+B,UAEbptC,KAXTrB,EAAAmpF,SAAA7nD,YAAAxxB,KAAA,CAAA/T,KAAA,gBAEKiE,EAAQmpF,SAAW/0B,KAAO,CAACr4D,KAAA,eAEhB8qB,EAAG5lB,EAAA0O,SAAA3P,EAAAzD,MAAAyD,EAAA2P,aAWlBvO,KAAI,SAAU7E,KACZA,MAAOA,IACR6zQ,mBAAApwQ,EAAAkwQ,sBAAAlwQ,EAAAzD,MAAA0X,QCbL,SFvBwBqS,QAAC,6BAAuC,8CCsC9C3lB,UAAA6I,KAAA,iBACZtJ,kBACE2oF,2CAKD,4BAAA3oF,KAAA3D,MAAAQ,GAAAmD,KAAA3D,OACF6E,KAAA,SAAAwW,sJAKH1X,KAAOW,WACR0oE,KAAA,2BAAArpE,KAAA3D,OACH6E,KAAA,SAACwW,GAAAiO,EAAA,EAAAhqB,KAAA,kICzE6CgqB,EAAA,EAAAhqB,KAAA,eAAAy7F,EAAA5uF,KAAA6sB,cAYxB50B,UAAsB0vQ,mBAAA,WAH1C,IAAArwQ,EAAAE,KAG8CA,KAAAW,WAAA+3D,OAAA,4BAAA14D,KAAA3D,MAAAQ,IAAAqE,KAAA,SAAAwW,GAE9C5X,EAAAzD,MAAAqb,EACM5X,EAACslB,UAAe1iB,KAAC,+BAoBtBjC,UAAAuvQ,sBAAA,SAAAj8P,GAhBC,MAAO,oBAAgBA,KAEJtT,UAAAgxP,YAAmB,sBAClCljN,SAAe5nB,EAAmB5lB,EAAA0O,SAAA,GAAAzP,KAAayP,SAAO8+B,kCAGtDvuC,KAAAgwQ,sBAAehwQ,KAAe3D,MAAG0X,SAGxBtT,UAAe2vQ,iBAAO,mBAC/BC,QAAA1nL,YAIFl+C,EAAO,CACNzlC,KAAAhF,KAAA3D,MAAA2I,KACJ+O,KAAA/T,KAAA3D,MAAA0X,KAEDu8P,UAAAtwQ,KAAA3D,MAAAi0Q,UACM/hO,SAACvuC,KAAA3D,MAAAkyC,UAGPvuC,KAAAW,WAAA0oE,KAAA,gCAAA5+B,KAEC+kO,EFxBD,yDE8Be,oBAGbe,EAAoB5vQ,EAAAqpF,GACpBhqF,KAAKW,WAAEA,OACL6vQ,yBACAvnL,SAAYe,EAAGg2J,OAAA,yBC3Cd,SDuCmB55N,QAAA,+BAMrB3lB,UAAA+vQ,kBAAA,WACD,IAAA1wQ,EAAAE,KACHA,KAAAW,WAAAM,IAAA,4BAAAC,KAAA,SAAAC,GAEDrB,EAAAs3M,cAAWj2M,KE7D2CovQ,EAAA9vQ,UAAA0vQ,mBAAA,SAAAtzQ,oFDARiD,EAAAs3M,cAAAt3M,EAAAs3M,cAAA5lM,OAAA,SAAAgnM,GACF,OAAAA,EAAA37M,YAW5B0zQ,EDqCC,KClCH,EAAApnP,WAAA,6BAAQonP,WAMhB,iBAEA,aAEuB,sBAGjBziM,EAAIntE,6BAEHA,gBAAC,2BAHE,MAAU,0BAKZ+gP,yBAAA,SAAe74N,EAAA7jB,wBACf6jB,EAAO7jB,EAAA,6EAGT86P,sBAAa,SAAA96P,wBACX,EAAAA,EAAM,8FAERgqB,SAAA,SAAAnG,EAAA7jB,EAAAyrQ,aACJzrQ,GAAE,IAAAyqH,QAEQ77G,iBACC,MAAXzO,cAEAnF,KAAO8tE,GAAIgV,OAAE,MACX,mBACA,wBAGI,OAAG4tL,IAAS1wQ,KAAAm/P,gBACjBn/P,KAAA8tE,GAAAgV,OAAA,CACF/uE,KAAA,WAEKorB,QAAW,mEAGfn/B,KAAY8tE,GAAAsyC,UACL,GE1CX,SF2CGxwG,KAAA5P,KAAAW,WAAAR,OAAA,CAAA4T,KAAA48P,GAAA31L,UAAA,CAAAnyD,GAAAnoB,MAAAsE,OAAM4K,KAAA5P,KAAAW,WAAAR,OAAA,CAAA4T,KAAA48P,GAAA31L,UAAA,CAAAnyD,GAAAnoB,MAAAsE,aACLm2E,IAAAL,GAAA55E,KAAA,SAASwW,OACV2O,EAAAvkB,EACF8pQ,EAAA,GACDl0P,EAAAvS,OAAA,GAAAuS,EAAA,GAAAvS,OAAA,IACHymQ,EAAAl0P,EAAA,sGG9DD,IAAA2iE,EAAAu2L,EAAArvQ,MAGkB,GAAAmvQ,IAAAr2L,EAAAz+E,MAAAgY,cAAA,CAChBiuG,EAAY/+B,OAAA,CACM/uE,KAAA,WACjBorB,QAAAsxO,IACF,6BDTsB,QAKvB,IAIkBG,MAAA37P,OAAAnT,EAAA+uQ,EAAAp1L,SAAA35E,EAAA/B,KAAA8wQ,GAChB,QAcC,GAAAxqP,EAAA,MAAAA,EAAAgP,OAZSwsF,EAAA3nC,YAIH2nC,EAAWr2B,WFSS,KED1B,EAAA1P,QAAA,gBAAAg1L,WAOmC,WAKpC,SAAAC,EAAApwQ,GAAAX,KAAAW,WAUCA,EATCX,KAAK4iQ,wBAAoB,SAH3BmO,EAAC3qP,QAAA,iBAKS3lB,UAAAkoB,eAAA,SAAAC,QACNA,OAASA,KAEAnoB,UAAE6I,KAAA,iBACTtJ,YACDA,KAAAW,WAAAygH,eAAAphH,KAAAkoE,WAAAloE,KAAA4oB,QAAA1nB,KAAA,SAAAC,GACA,GAAAA,EAAA6vQ,aAAA,GACJ,IAAAxrH,EAAA,iBAAArkJ,EAAA6vQ,aAAA,iBACH5tO,EAAAjiC,EAAC6vQ,aAAA,kBAAA7vQ,EAAA6vQ,aAAA,qBAAAlxQ,EAAA8oB,OAAAhtB,MAAAq0E,EAAA,EAAAt0E,KAAA,iBAAA6pJ,EAAApiH,IE5CD,uIAFyDtjC,EAAA2qF,UAE5C3qF,EAAA4iG,eAIbquK,EAActwQ,UAAAqhP,sBAAA,WAC0C9hP,KAAA4iQ,wBAAA,GAGVmO,EAAAtwQ,UAAAshP,qBAAA,WAE9C/hP,KAAA4iQ,wBAAW,KFkB2B,KGVf,EAAEv0L,UAAA,oBAhBzB,WAKE,OACAplD,SAAA,IAAoBC,YAAA,mFAAgCC,WAAA8nP,GAClD7nP,kBAAgB,EACjBC,aAAA,OAED3P,MAAA,CAAA+wE,QAAA,IACQviB,WAAU,IACdw6B,UAAW,2NCjBuC,SAAAwuK,GAAAn0J,EAAA33F,GACf,OAIzC6D,SAAA,IAIEuB,SAAA2mP,GACAz3P,MAAA,CAAoBwnO,SAAA,IAJpBkwB,QAAQ,MAMN3+M,KAAK,SAAW/4C,EAAAswD,GACjBtwD,EAAA03P,QAAAnqP,EAAAlmB,EAAAswQ,UAAA33P,EAAA03P,SAAA13P,EAAA03P,QAAA,oBAiCD,IAAAE,EAAA3uQ,OACO2uQ,EAAAC,MAAUD,EAAAE,YAAAF,EAAAG,UAAAH,EAAA1vM,KAEXoI,EAAA,GAAWppD,iBAAS,SAlC1B,SAAA7G,OAAA,IAAA23P,EA6BC33P,EAAAvF,OAAAk9P,MATOtrQ,EAAA,EACAsmN,EAAOglD,EAAEtrQ,GACTsmN,GAAA,CACA,IAAIilD,EAAQ,IAAEH,WACdG,EAAAC,OAtBK,SAAUl5O,GAEL,IAAA+rD,EACL,IACNA,EAAAvoF,KAAAoC,MAAAo6B,EAAAlkB,OAAArT,QAGQ,MAAGi2F,GAGb,OAFUlhF,QAAOxG,IAAO0nF,QACdnnB,EAAa,EAAAt0E,KAAA,mEAAAy7F,EAAAj4D,UAIfzlB,EAAAoO,OAAA,WACDpO,EAAUwnO,SAAA,CAAAz8J,YASdktL,EAAME,WAAUnlD,GAEjBA,EAAAglD,EADCtrQ,GAAA,MAQkB,GAGpB6pE,EAA8B,EAAAt0E,KAAO,cAAC,QAAoB,oEAKvD,EAAA0yE,UAAA,aAAA6iM,IAKX,IAAAY,GAAsB,WC9DC,SAAAA,EAAA9nL,iGD8DD,MEzDX,oBAGL+nL,EAAgB1sP,EAAG1kB,EAAAqpF,EAAA5kE,OACpBtlB,EAAAE,KACDA,KAAAqlB,WAAaA,EACbrlB,KAAIW,WAAEA,OACJykB,UAAKA,gBACH4kE,EAAAg2J,OAAA,4CACO/+O,IAAA,4BAA0BC,KAAA,SAAmBC,OACpD6tK,EAAOlvK,EAAAslB,UAAiBw1O,SAAM/8P,QAAAunB,EAAAze,MAAA,MAC9B0hE,UAAOlnE,EAAAC,IAAgB,SAAGo/M,GAAA,OAAA/5L,EAAA,KAAA+5L,EAAA,CAAA75M,IAAA65M,EAAAwxD,aAAAhjG,EAAA,uBAAAwxC,EAAAl6M,UCP/B,SDFG8f,QAAe,wDAab3lB,UAAOwxQ,wBAAiB,SAAAzxD,SACtBxgN,OACAe,EAAAm/C,OAAAlgD,KAAAqoE,UAAA,CAAA/hE,IAAAk6M,EAAAl6M,sBAEKoyD,OAAA,kBAA2B8nJ,EAAAl6M,KAAApF,KAAA,0BAClCmnE,UAAOz4D,KAAA4wM,QAGX//M,UAAAyxQ,eAAA,SAAA1xD,GACD,IAAA1gN,EAAAE,8DC7BwCnE,KAAA,4CAAA2kN,EAAAx7M,KAAA,IAE3CjJ,QAAA,SACSD,KAAA,WACLE,UAAO,WACL8D,EAASmyQ,wBAAGzxD,OAIfuxD,EDJQ,GEMqBtjM,EAAA,EAAAtlD,WAAA,oBAAA2oP,IACTrjM,EAAA,EAAAtlD,WAAA,mBAAAgpP,sBCXH,SAAAC,EAAAzxQ,EAAAykB,EAAA4kE,GACJhqF,KAAAW,aACAX,KAAAolB,YACCplB,KAAAipF,SAAAe,EAAAg2J,OAAA,iBAgBuD,OApB/CoyB,EAAAhsP,QAAA,yCAMCgsP,EAAA3xQ,UAAA4rC,OAAA,WACO,IAAAvsC,EAAAE,KACPyqC,EAAA,CACXzlC,KAAAhF,KAAAgF,KACI+L,MAAA/Q,KAAA+Q,OAGyB/Q,KAAAW,WAAA0oE,KAAA,aAAA5+B,GAAAvpC,KAAA,SAAAC,GAErBA,EAAA67B,QACOl9B,EAAAslB,UAAA1iB,KAAA,mBAAAvB,EAAA67B,WAI0Co1O,KAIxE3jM,EAAa,EAAAtlD,WAAA,iBAAAipP,IAMqD,IAAAC,GAAA,WAIlC,SAAAC,EAAA3xQ,EAAAqpF,GACNhqF,KAAAW,aACgBX,KAAAyoE,SAAA,GACSzoE,KAAAqnE,kBAEnDrnE,KAAAipF,SAAAe,EAA8Bg2J,OAAA,uCAPyBsyB,EAAAlsP,QAAA,6BASvDksP,EAAgB7xQ,UAAO4mE,gBAAiB,WACtC,IAAAvnE,EAAgBE,KACfA,KAAAW,WAAAM,IAAA,yBAAAC,KAAA,SAAAunE,GAEHA,EAAA/1D,UAKE,IAAA2Q,EAAAolD,EAAA7rE,UAAA,SAAA8rE,GACE,OAAAA,EAAAC,WAEI,GAACtlD,EAAA,CACA,IAAAg8E,EAAA52B,EAAoBplD,GAC1BolD,EAAA1rE,OAAAsmB,KAEDolD,EAAArhD,QAAAi4E,GAEIv/F,EAAK2oE,WAAoBrnE,IAAA,SAAQsnE,GAClC,OAAM7rE,GAAA6rE,EAAA7rE,GACL8rE,SAAED,EAAOC,SACVC,OAAA1qE,OAAAktH,GAAA,SAAAltH,CAAAwqE,EAAAE,QAAAC,UACIC,UAAA5qE,OAAyBktH,GAAc,SAAvCltH,CAAuCwqE,EAAAI,WAAA/vD,OAAA,iBACrCgwD,SAAOL,EAAAK,SACfC,QAAAN,EAAAM,QAEDC,eAAAP,EAAAO,uBAAAE,UAuFCT,EAAAS,UAtFaC,OAAAV,EAAQU,eAgBhB3oE,UAAA6mE,kBAAiB,SAAyBiC,OAE1CzpE,EAAIE,qBAEHqpE,KAAA,+BAEDC,YAAaC,IAGbroE,KAAK,WACLpB,EAAK2oE,SAAA3oE,EAAiB2oE,SAAQj3D,OAAG,SAASk3D,GAC1C,OAAKA,EAAA7rE,KAAiB0sE,SAjEoC,kBA4E7C,cAAmB8oM,WAM5Bn4Q,EAAiB,UAOvB,EAAcm0E,UAAA,iDAEd,CACAtvD,QAAA,IACAwzP,WAAA,IACAC,eAAS,iBAEF,mEACP,CAEFC,IAAA,SAAAvtP,EAAA8kD,EAAAC,GAEE/kD,EAAKwtP,iBAAa,SAAAxtP,EAAAstP,eACjBttP,EAAAytP,gBAAA,EAEHztP,EAAA0tP,iBAAkC,WAClC1tP,EAAAytP,gBAAWztP,EAAOytP,gBAGlBztP,EAAA2tP,eAA6B,WAC7B,OAAA3tP,EAACqtP,aAGDrtP,EAAA4tP,yBAAgC50Q,OAAC60Q,GAA6B,EAA9B70Q,CAA8BgnB,EAAA6tP,GAAA,EAAAC,mBAC5D9tP,EAAA+tP,0BAAY/0Q,OAAgB60Q,GAAwB,EAAxC70Q,CAAwCgnB,EAAA6tP,GAAA,EAAAC,0BAQ3C,EAAA3kM,UAAU,oDAEpB,iGCpIQttE,EAAGwwJ,KAAA,SAAA2hH,EAAAC,EAAAC,YACZr2Q,OAAMq2Q,EAAA,EAAAF,EAAAn2Q,OAAAo2Q,EAAA,cAaRE,GAAiBn5Q,EAAmB,WAE7BgL,OAAAquD,QAAA,SAAAjtD,MACKA,UAEZ,yKCxCoD,mIAAAzD,GAI/CywQ,EAAS7yQ,UAAcoP,KAAU,WAChC,IAAAwW,EAAQvkB,EACThC,EAAOE,KACNs3P,EAAArwO,EAAiBlmB,EAAA8B,OAAA,cACrB3E,OAAAktH,GAAU,UAAVltH,CAAqCuW,EAAA,EAAAykF,SAAA73F,KAAAwjI,QACrC3mI,OAAOktH,GAAA,mBAAPltH,CAAO,CAAA44D,UAAAriD,EAAA,EAAAy9C,sBACPolM,EAAI7iP,OAAO,qBAAI,+FAAAmwO,EAAA2uB,EAAAC,EAAAC,EAAAC,EAAAC,GAEfH,EAAUI,0BAAA,GACR,gBAAAn/P,EAAA,EAAAyvF,UAAA8kI,KACEwqC,EAAaK,kBAAA,KAETC,eAAgB,KACpBC,kBAAe5qP,WAAAoqP,EAAA7wP,WACfqxP,kBAAK1lM,UAAyBmlM,EAAUnlM,YACzC0lM,kBAAAx1L,QAAAo1L,EAAAp1L,QACDz+E,EAAAi0Q,kBAAAj4L,QAAA63L,EAAA73L,UACEi4L,kBAAaviQ,OAAAiiQ,EAAA/wP,WACTsxP,UAAE,SACN,YACA,iBACA,SAAKC,EAAAnjJ,GACN,IAAA7vH,EAAAgzQ,EAAAhzQ,IAWA,OAVFgzQ,EAAAhzQ,IAAA,SAAA0F,EAAA8N,GAQO,OAPR9N,EAAAoV,MAAA,aAGuB+0G,EAAA7vH,IAAA0F,KACRA,GAAA,WAAA2M,MAAAs1B,YAGP3nC,EAAA0F,EAAqB8N,IAE1Bw/P,QAMAj0Q,KAASk0Q,qBAAkC,gBACtC,UACR,aACI,oBACA,gBACJ,UACA,kBACA,kCAKFp0Q,EAAAq0Q,UAAmBh8P,OAEI,EAAS1D,OAAMiwO,YACd,OAEd3jP,EAAA2nD,GAAAyE,QAAA19C,SAAA44M,WAAA,IAETtnN,EAAAqzQ,UAAAt1Q,SAAAkB,KAAAk0Q,sBAAA7oI,OAAA,oLAEM,IAAAgpI,EAAAt/P,EAAAxT,MACCrD,OAAI25P,EAAA,EAAJ35P,CAAIm2Q,IAGb,MAAA74L,GAAAn1D,EAAA,CAAAgP,MAAAmmD,mFD5BC","file":"app.189a5a829d25dac84fc0.js","sourcesContent":["// Store\nimport store from 'app/core/store';\n\n// Models\nimport { DashboardModel } from 'app/features/dashboard/state/DashboardModel';\nimport { PanelModel } from 'app/features/dashboard/state/PanelModel';\nimport { TimeRange } from '@grafana/data';\n\n// Utils\nimport { isString as _isString } from 'lodash';\nimport { rangeUtil } from '@grafana/data';\nimport { dateMath } from '@grafana/data';\nimport appEvents from 'app/core/app_events';\nimport config from 'app/core/config';\n\n// Services\nimport templateSrv from 'app/features/templating/template_srv';\n\n// Constants\nimport { LS_PANEL_COPY_KEY, PANEL_BORDER } from 'app/core/constants';\n\nexport const removePanel = (dashboard: DashboardModel, panel: PanelModel, ask: boolean) => {\n  // confirm deletion\n  if (ask !== false) {\n    const text2 = panel.alert ? 'Panel includes an alert rule, removing panel will also remove alert rule' : null;\n    const confirmText = panel.alert ? 'YES' : null;\n\n    appEvents.emit('confirm-modal', {\n      title: 'Remove Panel',\n      text: 'Are you sure you want to remove this panel?',\n      text2: text2,\n      icon: 'fa-trash',\n      confirmText: confirmText,\n      yesText: 'Remove',\n      onConfirm: () => removePanel(dashboard, panel, false),\n    });\n    return;\n  }\n  dashboard.removePanel(panel);\n};\n\nexport const duplicatePanel = (dashboard: DashboardModel, panel: PanelModel) => {\n  dashboard.duplicatePanel(panel);\n};\n\nexport const copyPanel = (panel: PanelModel) => {\n  store.set(LS_PANEL_COPY_KEY, JSON.stringify(panel.getSaveModel()));\n  appEvents.emit('alert-success', ['Panel copied. Open Add Panel to paste']);\n};\n\nconst replacePanel = (dashboard: DashboardModel, newPanel: PanelModel, oldPanel: PanelModel) => {\n  const index = dashboard.panels.findIndex(panel => {\n    return panel.id === oldPanel.id;\n  });\n\n  const deletedPanel = dashboard.panels.splice(index, 1);\n  dashboard.events.emit('panel-removed', deletedPanel);\n\n  newPanel = new PanelModel(newPanel);\n  newPanel.id = oldPanel.id;\n\n  dashboard.panels.splice(index, 0, newPanel);\n  dashboard.sortPanelsByGridPos();\n  dashboard.events.emit('panel-added', newPanel);\n};\n\nexport const editPanelJson = (dashboard: DashboardModel, panel: PanelModel) => {\n  const model = {\n    object: panel.getSaveModel(),\n    updateHandler: (newPanel: PanelModel, oldPanel: PanelModel) => {\n      replacePanel(dashboard, newPanel, oldPanel);\n    },\n    canUpdate: dashboard.meta.canEdit,\n    enableCopy: true,\n  };\n\n  appEvents.emit('show-modal', {\n    src: 'public/app/partials/edit_json.html',\n    model: model,\n  });\n};\n\nexport const sharePanel = (dashboard: DashboardModel, panel: PanelModel) => {\n  appEvents.emit('show-modal', {\n    src: 'public/app/features/dashboard/components/ShareModal/template.html',\n    model: {\n      dashboard: dashboard,\n      panel: panel,\n    },\n  });\n};\n\nexport const refreshPanel = (panel: PanelModel) => {\n  panel.refresh();\n};\n\nexport const toggleLegend = (panel: PanelModel) => {\n  console.log('Toggle legend is not implemented yet');\n  // We need to set panel.legend defaults first\n  // panel.legend.show = !panel.legend.show;\n  refreshPanel(panel);\n};\n\nexport interface TimeOverrideResult {\n  timeRange: TimeRange;\n  timeInfo: string;\n}\n\nexport function applyPanelTimeOverrides(panel: PanelModel, timeRange: TimeRange): TimeOverrideResult {\n  const newTimeData = {\n    timeInfo: '',\n    timeRange: timeRange,\n  };\n\n  if (panel.timeFrom) {\n    const timeFromInterpolated = templateSrv.replace(panel.timeFrom, panel.scopedVars);\n    const timeFromInfo = rangeUtil.describeTextRange(timeFromInterpolated);\n    if (timeFromInfo.invalid) {\n      newTimeData.timeInfo = 'invalid time override';\n      return newTimeData;\n    }\n\n    if (_isString(timeRange.raw.from)) {\n      const timeFromDate = dateMath.parse(timeFromInfo.from);\n      newTimeData.timeInfo = timeFromInfo.display;\n      newTimeData.timeRange = {\n        from: timeFromDate,\n        to: dateMath.parse(timeFromInfo.to),\n        raw: {\n          from: timeFromInfo.from,\n          to: timeFromInfo.to,\n        },\n      };\n    }\n  }\n\n  if (panel.timeShift) {\n    const timeShiftInterpolated = templateSrv.replace(panel.timeShift, panel.scopedVars);\n    const timeShiftInfo = rangeUtil.describeTextRange(timeShiftInterpolated);\n    if (timeShiftInfo.invalid) {\n      newTimeData.timeInfo = 'invalid timeshift';\n      return newTimeData;\n    }\n\n    const timeShift = '-' + timeShiftInterpolated;\n    newTimeData.timeInfo += ' timeshift ' + timeShift;\n    const from = dateMath.parseDateMath(timeShift, newTimeData.timeRange.from, false);\n    const to = dateMath.parseDateMath(timeShift, newTimeData.timeRange.to, true);\n\n    newTimeData.timeRange = {\n      from,\n      to,\n      raw: {\n        from,\n        to,\n      },\n    };\n  }\n\n  if (panel.hideTimeOverride) {\n    newTimeData.timeInfo = '';\n  }\n\n  return newTimeData;\n}\n\nexport function getResolution(panel: PanelModel): number {\n  const htmlEl = document.getElementsByTagName('html')[0];\n  const width = htmlEl.getBoundingClientRect().width; // https://stackoverflow.com/a/21454625\n\n  return panel.maxDataPoints ? panel.maxDataPoints : Math.ceil(width * (panel.gridPos.w / 24));\n}\n\nexport function calculateInnerPanelHeight(panel: PanelModel, containerHeight: number): number {\n  return (\n    containerHeight -\n    (panel.hasTitle() ? config.theme.panelHeaderHeight : 0) -\n    config.theme.panelPadding * 2 -\n    PANEL_BORDER\n  );\n}\n","// Libraries\nimport React, { Component } from 'react';\nimport _ from 'lodash';\n\n// Components\nimport { AsyncSelect } from '@grafana/ui';\n\n// Utils & Services\nimport { debounce } from 'lodash';\nimport { getBackendSrv } from 'app/core/services/backend_srv';\n\n// Types\nimport { User } from 'app/types';\n\nexport interface Props {\n  onSelected: (user: User) => void;\n  className?: string;\n}\n\nexport interface State {\n  isLoading: boolean;\n}\n\nexport class UserPicker extends Component<Props, State> {\n  debouncedSearch: any;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { isLoading: false };\n    this.search = this.search.bind(this);\n\n    this.debouncedSearch = debounce(this.search, 300, {\n      leading: true,\n      trailing: true,\n    });\n  }\n\n  search(query?: string) {\n    const backendSrv = getBackendSrv();\n    this.setState({ isLoading: true });\n\n    if (_.isNil(query)) {\n      query = '';\n    }\n\n    return backendSrv\n      .get(`/api/org/users/lookup?query=${query}&limit=10`)\n      .then((result: any) => {\n        return result.map((user: any) => ({\n          id: user.userId,\n          value: user.userId,\n          label: user.login,\n          imgUrl: user.avatarUrl,\n          login: user.login,\n        }));\n      })\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  }\n\n  render() {\n    const { className, onSelected } = this.props;\n    const { isLoading } = this.state;\n\n    return (\n      <div className=\"user-picker\">\n        <AsyncSelect\n          className={className}\n          isLoading={isLoading}\n          defaultOptions={true}\n          loadOptions={this.debouncedSearch}\n          onChange={onSelected}\n          placeholder=\"Select user\"\n          noOptionsMessage={() => 'No users found'}\n        />\n      </div>\n    );\n  }\n}\n","var path = 'public/app/features/datasources/partials/tls_auth_settings.html';\nvar html = \"<div class=gf-form-group>\\n  <div class=gf-form>\\n    <h6>TLS Auth Details</h6>\\n    <info-popover mode=header>TLS Certs are encrypted and stored in the Grafana database.</info-popover>\\n  </div>\\n  <div ng-if=current.jsonData.tlsAuthWithCACert>\\n    <div class=gf-form-inline>\\n      <div class=\\\"gf-form gf-form--v-stretch\\\"><label class=\\\"gf-form-label width-7\\\">CA Cert</label></div>\\n      <div class=\\\"gf-form gf-form--grow\\\" ng-if=!current.secureJsonFields.tlsCACert>\\n        <textarea rows=7 class=\\\"gf-form-input gf-form-textarea\\\" ng-model=current.secureJsonData.tlsCACert placeholder=\\\"Begins with -----BEGIN CERTIFICATE-----\\\"></textarea>\\n      </div>\\n\\n      <div class=gf-form ng-if=current.secureJsonFields.tlsCACert>\\n        <input type=text class=\\\"gf-form-input max-width-12\\\" disabled=disabled value=configured />\\n        <a class=\\\"btn btn-secondary gf-form-btn\\\" href=# ng-click=\\\"current.secureJsonFields.tlsCACert = false\\\">reset</a>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div ng-if=current.jsonData.tlsAuth>\\n    <div class=gf-form-inline>\\n      <div class=\\\"gf-form gf-form--v-stretch\\\"><label class=\\\"gf-form-label width-7\\\">Client Cert</label></div>\\n      <div class=\\\"gf-form gf-form--grow\\\" ng-if=!current.secureJsonFields.tlsClientCert>\\n        <textarea rows=7 class=\\\"gf-form-input gf-form-textarea\\\" ng-model=current.secureJsonData.tlsClientCert placeholder=\\\"Begins with -----BEGIN CERTIFICATE-----\\\" required></textarea>\\n      </div>\\n      <div class=gf-form ng-if=current.secureJsonFields.tlsClientCert>\\n        <input type=text class=\\\"gf-form-input max-width-12\\\" disabled=disabled value=configured />\\n        <a class=\\\"btn btn-secondary gf-form-btn\\\" href=# ng-click=\\\"current.secureJsonFields.tlsClientCert = false\\\">reset</a>\\n      </div>\\n    </div>\\n\\n    <div class=gf-form-inline>\\n      <div class=\\\"gf-form gf-form--v-stretch\\\"><label class=\\\"gf-form-label width-7\\\">Client Key</label></div>\\n      <div class=\\\"gf-form gf-form--grow\\\" ng-if=!current.secureJsonFields.tlsClientKey>\\n        <textarea rows=7 class=\\\"gf-form-input gf-form-textarea\\\" ng-model=current.secureJsonData.tlsClientKey placeholder=\\\"Begins with -----BEGIN RSA PRIVATE KEY-----\\\" required></textarea>\\n      </div>\\n      <div class=gf-form ng-if=current.secureJsonFields.tlsClientKey>\\n        <input type=text class=\\\"gf-form-input max-width-12\\\" disabled=disabled value=configured />\\n        <a class=\\\"btn btn-secondary gf-form-btn\\\" href=# ng-click=\\\"current.secureJsonFields.tlsClientKey = false\\\">reset</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/datasource/grafana/partials/annotations.editor.html';\nvar html = \"\\n<div class=gf-form-group>\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=\\\"gf-form-label width-9\\\">\\n\\t\\t\\t\\tFilter by\\n\\t\\t\\t\\t<info-popover mode=right-normal>\\n\\t\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t\\t<li>Dashboard: This will fetch annotation and alert state changes for whole dashboard and show them only on the event's originating panel.</li>\\n\\t\\t\\t\\t\\t\\t<li>Tags: This will fetch any annotation events that match the tags filter.</li>\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</info-popover>\\n\\t\\t\\t</span>\\n\\t\\t\\t<div class=\\\"gf-form-select-wrapper width-8\\\">\\n\\t\\t\\t\\t<select class=gf-form-input ng-model=ctrl.annotation.type ng-options=\\\"f.value as f.text for f in ctrl.types\\\">\\n\\t\\t\\t\\t</select>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=gf-form-label>Max limit</span>\\n\\t\\t\\t<div class=gf-form-select-wrapper>\\n\\t\\t\\t\\t<select class=gf-form-input ng-model=ctrl.annotation.limit ng-options=\\\"f for f in [10,50,100,200,300,500,1000,2000]\\\">\\n\\t\\t\\t\\t</select>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=gf-form ng-if=\\\"ctrl.annotation.type === 'tags'\\\">\\n\\t\\t\\t<gf-form-switch class=gf-form label=\\\"Match any\\\" label-class=width-9 checked=ctrl.annotation.matchAny on-change=ctrl.refresh() tooltip=\\\"By default Grafana only shows annotations that match all tags in the query. Enabling this returns annotations that match any of the tags in the query.\\\"></gf-form-switch>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form ng-if=\\\"ctrl.annotation.type === 'tags'\\\">\\n\\t\\t\\t<span class=gf-form-label>\\n\\t\\t\\t\\tTags\\n\\t\\t\\t\\t<info-popover mode=right-normal>\\n\\t\\t\\t\\t\\tA tag entered here as 'foo' will match\\n\\t\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t\\t<li>annotation tags 'foo'</li>\\n\\t\\t\\t\\t\\t\\t<li>annotation key-value tags formatted as 'foo:bar'</li>\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</info-popover>\\n\\t\\t\\t</span>\\n\\t\\t\\t<bootstrap-tagsinput ng-model=ctrl.annotation.tags tagclass=\\\"label label-tag\\\" placeholder=\\\"add tags\\\">\\n\\t\\t\\t</bootstrap-tagsinput>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/panel/text/module.html';\nvar html = \"<p class=\\\"markdown-html panel-text-content\\\" ng-bind-html=ctrl.content ng-show=ctrl.content>\\n</p>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/datasource/influxdb/partials/query.editor.html';\nvar html = \"<query-editor-row query-ctrl=ctrl can-collapse=true has-text-edit-mode=true>\\n  <div ng-if=ctrl.target.rawQuery>\\n    <div class=gf-form>\\n      <textarea rows=3 class=gf-form-input ng-model=ctrl.target.query spellcheck=false placeholder=\\\"InfluxDB Query\\\" ng-model-onblur ng-change=ctrl.refresh()></textarea>\\n    </div>\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword\\\">FORMAT AS</label>\\n        <div class=gf-form-select-wrapper>\\n          <select class=\\\"gf-form-input gf-size-auto\\\" ng-model=ctrl.target.resultFormat ng-options=\\\"f.value as f.text for f in ctrl.resultFormats\\\" ng-change=ctrl.refresh()></select>\\n        </div>\\n      </div>\\n      <div class=\\\"gf-form max-width-25\\\" ng-hide=\\\"ctrl.target.resultFormat === 'table'\\\">\\n        <label class=\\\"gf-form-label query-keyword\\\">ALIAS BY</label>\\n        <input type=text class=gf-form-input ng-model=ctrl.target.alias spellcheck=false placeholder=\\\"Naming pattern\\\" ng-blur=ctrl.refresh() />\\n      </div>\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div ng-if=!ctrl.target.rawQuery>\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-7\\\">FROM</label>\\n\\n        <metric-segment segment=ctrl.policySegment get-options=ctrl.getPolicySegments() on-change=ctrl.policyChanged()></metric-segment>\\n        <metric-segment segment=ctrl.measurementSegment get-options=ctrl.getMeasurements($query) on-change=ctrl.measurementChanged()></metric-segment>\\n      </div>\\n\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword\\\">WHERE</label>\\n      </div>\\n\\n      <div class=gf-form ng-repeat=\\\"segment in ctrl.tagSegments\\\">\\n        <metric-segment segment=segment get-options=\\\"ctrl.getTagsOrValues(segment, $index)\\\" on-change=\\\"ctrl.tagSegmentUpdated(segment, $index)\\\"></metric-segment>\\n      </div>\\n\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n    </div>\\n\\n    <div class=gf-form-inline ng-repeat=\\\"selectParts in ctrl.queryModel.selectModels\\\">\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-7\\\"> <span ng-show=\\\"$index === 0\\\">SELECT</span>&nbsp; </label>\\n      </div>\\n\\n      <div class=gf-form ng-repeat=\\\"part in selectParts\\\">\\n        <query-part-editor class=\\\"gf-form-label query-part\\\" part=part handle-event=\\\"ctrl.handleSelectPartEvent(selectParts, part, $event)\\\">\\n        </query-part-editor>\\n      </div>\\n\\n      <div class=gf-form>\\n        <label class=dropdown dropdown-typeahead2=ctrl.selectMenu dropdown-typeahead-on-select=\\\"ctrl.addSelectPart(selectParts, $item, $subItem)\\\" button-template-class=\\\"gf-form-label query-part\\\">\\n        </label>\\n      </div>\\n\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n    </div>\\n\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-7\\\">\\n          <span>GROUP BY</span>\\n        </label>\\n\\n        <query-part-editor ng-repeat=\\\"part in ctrl.queryModel.groupByParts\\\" part=part class=\\\"gf-form-label query-part\\\" handle-event=\\\"ctrl.handleGroupByPartEvent(part, $index, $event)\\\">\\n        </query-part-editor>\\n      </div>\\n\\n      <div class=gf-form>\\n        <metric-segment segment=ctrl.groupBySegment get-options=ctrl.getGroupByOptions() on-change=\\\"ctrl.groupByAction(part, $index)\\\"></metric-segment>\\n      </div>\\n\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n    </div>\\n\\n    <div class=gf-form-inline ng-if=\\\"ctrl.target.orderByTime === 'DESC'\\\">\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-7\\\">ORDER BY</label>\\n        <label class=\\\"gf-form-label pointer\\\" ng-click=ctrl.removeOrderByTime()>time <span class=query-keyword>DESC</span> <i class=\\\"fa fa-remove\\\"></i></label>\\n      </div>\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n    </div>\\n\\n    <div class=gf-form-inline ng-if=ctrl.target.limit>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-7\\\">LIMIT</label>\\n        <input type=text class=\\\"gf-form-input width-9\\\" ng-model=ctrl.target.limit spellcheck=false placeholder=\\\"No Limit\\\" ng-blur=ctrl.refresh() />\\n      </div>\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n    </div>\\n\\n    <div class=gf-form-inline ng-if=ctrl.target.slimit>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-7\\\">SLIMIT</label>\\n        <input type=text class=\\\"gf-form-input width-9\\\" ng-model=ctrl.target.slimit spellcheck=false placeholder=\\\"No Limit\\\" ng-blur=ctrl.refresh() />\\n      </div>\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n    </div>\\n\\n    <div class=gf-form-inline ng-if=ctrl.target.tz>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-7\\\">tz</label>\\n        <input type=text class=\\\"gf-form-input width-9\\\" ng-model=ctrl.target.tz spellcheck=false placeholder=\\\"No Timezone\\\" ng-blur=ctrl.refresh() />\\n      </div>\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n    </div>\\n\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-7\\\">FORMAT AS</label>\\n        <div class=gf-form-select-wrapper>\\n          <select class=\\\"gf-form-input gf-size-auto\\\" ng-model=ctrl.target.resultFormat ng-options=\\\"f.value as f.text for f in ctrl.resultFormats\\\" ng-change=ctrl.refresh()></select>\\n        </div>\\n      </div>\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n    </div>\\n\\n    <div class=gf-form-inline ng-hide=\\\"ctrl.target.resultFormat === 'table'\\\">\\n      <div class=\\\"gf-form max-width-30\\\">\\n        <label class=\\\"gf-form-label query-keyword width-7\\\">ALIAS BY</label>\\n        <input type=text class=gf-form-input ng-model=ctrl.target.alias spellcheck=false placeholder=\\\"Naming pattern\\\" ng-blur=ctrl.refresh() />\\n      </div>\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n</query-editor-row>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/panel/graph/tab_legend.html';\nvar html = \"<div class=editor-row>\\n\\t<div class=\\\"section gf-form-group\\\">\\n\\t\\t<h5 class=section-heading>Options</h5>\\n\\t\\t<gf-form-switch class=gf-form label=Show label-class=width-7 checked=ctrl.panel.legend.show on-change=ctrl.render()>\\n\\t\\t</gf-form-switch>\\n\\t\\t<gf-form-switch class=gf-form label=\\\"As Table\\\" label-class=width-7 checked=ctrl.panel.legend.alignAsTable on-change=ctrl.render()>\\n\\t\\t</gf-form-switch>\\n\\t\\t<gf-form-switch class=gf-form label=\\\"To the right\\\" label-class=width-7 checked=ctrl.panel.legend.rightSide on-change=ctrl.render()>\\n\\t\\t</gf-form-switch>\\n\\t\\t<div ng-if=ctrl.panel.legend.rightSide class=gf-form>\\n\\t\\t\\t<label class=\\\"gf-form-label width-7\\\">Width</label>\\n\\t\\t\\t<input type=number class=\\\"gf-form-input max-width-5\\\" placeholder=250 bs-tooltip=\\\"'Set a min-width for the legend side table/block'\\\" data-placement=right ng-model=ctrl.panel.legend.sideWidth ng-change=ctrl.render() ng-model-onblur>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\\"section gf-form-group\\\">\\n\\t\\t<h5 class=section-heading>Values</h5>\\n\\n\\t\\t<div class=gf-form-inline>\\n\\t\\t\\t<gf-form-switch class=gf-form label=Min label-class=width-4 checked=ctrl.panel.legend.min on-change=ctrl.legendValuesOptionChanged()>\\n\\t\\t\\t</gf-form-switch>\\n\\n\\t\\t\\t<gf-form-switch class=\\\"gf-form max-width-12\\\" label=Max label-class=width-6 switch-class=max-width-5 checked=ctrl.panel.legend.max on-change=ctrl.legendValuesOptionChanged()>\\n\\t\\t\\t</gf-form-switch>\\n\\t\\t</div>\\n\\n\\t\\t<div class=gf-form-inline>\\n\\t\\t\\t<gf-form-switch class=gf-form label=Avg label-class=width-4 checked=ctrl.panel.legend.avg on-change=ctrl.legendValuesOptionChanged()>\\n\\t\\t\\t</gf-form-switch>\\n\\n\\t\\t\\t<gf-form-switch class=\\\"gf-form max-width-12\\\" label=Current label-class=width-6 switch-class=max-width-5 checked=ctrl.panel.legend.current on-change=ctrl.legendValuesOptionChanged()>\\n\\t\\t\\t</gf-form-switch>\\n\\t\\t</div>\\n\\n\\t\\t<div class=gf-form-inline>\\n\\t\\t\\t<gf-form-switch class=gf-form label=Total label-class=width-4 checked=ctrl.panel.legend.total on-change=ctrl.legendValuesOptionChanged()>\\n\\t\\t\\t</gf-form-switch>\\n\\n\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t<label class=\\\"gf-form-label width-6\\\">Decimals</label>\\n\\t\\t\\t\\t<input type=number class=\\\"gf-form-input width-5\\\" placeholder=auto bs-tooltip=\\\"'Override automatic decimal precision for legend and tooltips'\\\" data-placement=right ng-model=ctrl.panel.decimals ng-change=ctrl.render() ng-model-onblur>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\\"section gf-form-group\\\">\\n\\t\\t<h5 class=section-heading>Hide series</h5>\\n\\t\\t<gf-form-switch class=gf-form label=\\\"With only nulls\\\" label-class=width-10 checked=ctrl.panel.legend.hideEmpty on-change=ctrl.render()>\\n\\t\\t</gf-form-switch>\\n\\t\\t<gf-form-switch class=gf-form label=\\\"With only zeros\\\" label-class=width-10 checked=ctrl.panel.legend.hideZero on-change=ctrl.render()>\\n\\t\\t</gf-form-switch>\\n\\t</div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/partials/modal.html';\nvar html = \"<div class=modal-header>\\n  <button type=button class=close data-dismiss=modal aria-hidden=true>×</button>\\n  <h3>{{modal.title}}</h3>\\n</div>\\n<div class=modal-body>\\n\\n  <div ng-bind-html=modal.body></div>\\n\\n</div>\\n<div class=modal-footer>\\n  <button type=button class=\\\"btn btn-danger\\\" ng-click=dismiss()>Close</button>\\n</div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { ComponentType, ComponentClass } from 'react';\nimport {\n  TimeRange,\n  RawTimeRange,\n  TableData,\n  TimeSeries,\n  DataFrame,\n  LogRowModel,\n  LoadingState,\n  DataFrameDTO,\n  AnnotationEvent,\n  ScopedVars,\n} from '@grafana/data';\nimport { PluginMeta, GrafanaPlugin } from './plugin';\nimport { PanelData } from './panel';\nimport { Observable } from 'rxjs';\n\n// NOTE: this seems more general than just DataSource\nexport interface DataSourcePluginOptionsEditorProps<TOptions> {\n  options: TOptions;\n  onOptionsChange: (options: TOptions) => void;\n}\n\nexport class DataSourcePlugin<\n  DSType extends DataSourceApi<TQuery, TOptions>,\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData\n> extends GrafanaPlugin<DataSourcePluginMeta> {\n  DataSourceClass: DataSourceConstructor<DSType, TQuery, TOptions>;\n  components: DataSourcePluginComponents<DSType, TQuery, TOptions>;\n\n  constructor(DataSourceClass: DataSourceConstructor<DSType, TQuery, TOptions>) {\n    super();\n    this.DataSourceClass = DataSourceClass;\n    this.components = {};\n  }\n\n  setConfigEditor(editor: ComponentType<DataSourcePluginOptionsEditorProps<DataSourceSettings<TOptions>>>) {\n    this.components.ConfigEditor = editor;\n    return this;\n  }\n\n  setConfigCtrl(ConfigCtrl: any) {\n    this.angularConfigCtrl = ConfigCtrl;\n    return this;\n  }\n\n  setQueryCtrl(QueryCtrl: any) {\n    this.components.QueryCtrl = QueryCtrl;\n    return this;\n  }\n\n  setAnnotationQueryCtrl(AnnotationsQueryCtrl: any) {\n    this.components.AnnotationsQueryCtrl = AnnotationsQueryCtrl;\n    return this;\n  }\n\n  setQueryEditor(QueryEditor: ComponentType<QueryEditorProps<DSType, TQuery, TOptions>>) {\n    this.components.QueryEditor = QueryEditor;\n    return this;\n  }\n\n  setExploreQueryField(ExploreQueryField: ComponentClass<ExploreQueryFieldProps<DSType, TQuery, TOptions>>) {\n    this.components.ExploreQueryField = ExploreQueryField;\n    return this;\n  }\n\n  setExploreMetricsQueryField(ExploreQueryField: ComponentClass<ExploreQueryFieldProps<DSType, TQuery, TOptions>>) {\n    this.components.ExploreMetricsQueryField = ExploreQueryField;\n    return this;\n  }\n\n  setExploreLogsQueryField(ExploreQueryField: ComponentClass<ExploreQueryFieldProps<DSType, TQuery, TOptions>>) {\n    this.components.ExploreLogsQueryField = ExploreQueryField;\n    return this;\n  }\n\n  setExploreStartPage(ExploreStartPage: ComponentClass<ExploreStartPageProps>) {\n    this.components.ExploreStartPage = ExploreStartPage;\n    return this;\n  }\n\n  setVariableQueryEditor(VariableQueryEditor: any) {\n    this.components.VariableQueryEditor = VariableQueryEditor;\n    return this;\n  }\n\n  setComponentsFromLegacyExports(pluginExports: any) {\n    this.angularConfigCtrl = pluginExports.ConfigCtrl;\n\n    this.components.QueryCtrl = pluginExports.QueryCtrl;\n    this.components.AnnotationsQueryCtrl = pluginExports.AnnotationsQueryCtrl;\n    this.components.ExploreQueryField = pluginExports.ExploreQueryField;\n    this.components.ExploreStartPage = pluginExports.ExploreStartPage;\n    this.components.QueryEditor = pluginExports.QueryEditor;\n    this.components.VariableQueryEditor = pluginExports.VariableQueryEditor;\n  }\n}\n\nexport interface DataSourcePluginMeta extends PluginMeta {\n  builtIn?: boolean; // Is this for all\n  metrics?: boolean;\n  logs?: boolean;\n  annotations?: boolean;\n  alerting?: boolean;\n  mixed?: boolean;\n  hasQueryHelp?: boolean;\n  category?: string;\n  queryOptions?: PluginMetaQueryOptions;\n  sort?: number;\n  streaming?: boolean;\n\n  /**\n   * By default, hidden queries are not passed to the datasource\n   * Set this to true in plugin.json to have hidden queries passed to the\n   * DataSource query method\n   */\n  hiddenQueries?: boolean;\n}\n\ninterface PluginMetaQueryOptions {\n  cacheTimeout?: boolean;\n  maxDataPoints?: boolean;\n  minInterval?: boolean;\n}\n\nexport interface DataSourcePluginComponents<\n  DSType extends DataSourceApi<TQuery, TOptions>,\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData\n> {\n  QueryCtrl?: any;\n  AnnotationsQueryCtrl?: any;\n  VariableQueryEditor?: any;\n  QueryEditor?: ComponentType<QueryEditorProps<DSType, TQuery, TOptions>>;\n  ExploreQueryField?: ComponentClass<ExploreQueryFieldProps<DSType, TQuery, TOptions>>;\n  ExploreMetricsQueryField?: ComponentClass<ExploreQueryFieldProps<DSType, TQuery, TOptions>>;\n  ExploreLogsQueryField?: ComponentClass<ExploreQueryFieldProps<DSType, TQuery, TOptions>>;\n  ExploreStartPage?: ComponentClass<ExploreStartPageProps>;\n  ConfigEditor?: ComponentType<DataSourcePluginOptionsEditorProps<DataSourceSettings<TOptions>>>;\n}\n\n// Only exported for tests\nexport interface DataSourceConstructor<\n  DSType extends DataSourceApi<TQuery, TOptions>,\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData\n> {\n  new (instanceSettings: DataSourceInstanceSettings<TOptions>, ...args: any[]): DSType;\n}\n\n/**\n * The main data source abstraction interface, represents an instance of a data source\n *\n * Although this is a class, datasource implementations do not *yet* need to extend it.\n * As such, we can not yet add functions with default implementations.\n */\nexport abstract class DataSourceApi<\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData\n> {\n  /**\n   *  Set in constructor\n   */\n  readonly name: string;\n\n  /**\n   *  Set in constructor\n   */\n  readonly id: number;\n\n  /**\n   *  min interval range\n   */\n  interval?: string;\n\n  constructor(instanceSettings: DataSourceInstanceSettings<TOptions>) {\n    this.name = instanceSettings.name;\n    this.id = instanceSettings.id;\n  }\n\n  /**\n   * Imports queries from a different datasource\n   */\n  importQueries?(queries: TQuery[], originMeta: PluginMeta): Promise<TQuery[]>;\n\n  /**\n   * Initializes a datasource after instantiation\n   */\n  init?: () => void;\n\n  /**\n   * Query for data, and optionally stream results\n   */\n  abstract query(request: DataQueryRequest<TQuery>): Promise<DataQueryResponse> | Observable<DataQueryResponse>;\n\n  /**\n   * Test & verify datasource settings & connection details\n   */\n  abstract testDatasource(): Promise<any>;\n\n  /**\n   *  Get hints for query improvements\n   */\n  getQueryHints?(query: TQuery, results: any[], ...rest: any): QueryHint[];\n\n  /**\n   * Convert a query to a simple text string\n   */\n  getQueryDisplayText?(query: TQuery): string;\n\n  /**\n   * Retrieve context for a given log row\n   */\n  getLogRowContext?: <TContextQueryOptions extends {}>(\n    row: LogRowModel,\n    options?: TContextQueryOptions\n  ) => Promise<DataQueryResponse>;\n\n  /**\n   * Variable query action.\n   */\n  metricFindQuery?(query: any, options?: any): Promise<MetricFindValue[]>;\n\n  /**\n   * Get tag keys for adhoc filters\n   */\n  getTagKeys?(options?: any): Promise<MetricFindValue[]>;\n\n  /**\n   * Get tag values for adhoc filters\n   */\n  getTagValues?(options: any): Promise<MetricFindValue[]>;\n\n  /**\n   * Set after constructor call, as the data source instance is the most common thing to pass around\n   * we attach the components to this instance for easy access\n   */\n  components?: DataSourcePluginComponents<DataSourceApi<TQuery, TOptions>, TQuery, TOptions>;\n\n  /**\n   * static information about the datasource\n   */\n  meta?: DataSourcePluginMeta;\n\n  /**\n   * Used by alerting to check if query contains template variables\n   */\n  targetContainsTemplate?(query: TQuery): boolean;\n\n  /**\n   * Used in explore\n   */\n  modifyQuery?(query: TQuery, action: QueryFixAction): TQuery;\n\n  /**\n   * Used in explore\n   */\n  getHighlighterExpression?(query: TQuery): string[];\n\n  /**\n   * Used in explore\n   */\n  languageProvider?: any;\n\n  /**\n   * Can be optionally implemented to allow datasource to be a source of annotations for dashboard. To be visible\n   * in the annotation editor `annotations` capability also needs to be enabled in plugin.json.\n   */\n  annotationQuery?(options: AnnotationQueryRequest<TQuery>): Promise<AnnotationEvent[]>;\n}\n\nexport interface QueryEditorProps<\n  DSType extends DataSourceApi<TQuery, TOptions>,\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData\n> {\n  datasource: DSType;\n  query: TQuery;\n  onRunQuery: () => void;\n  onChange: (value: TQuery) => void;\n  panelData: PanelData; // The current panel data\n  queryResponse?: PanelData; // data filtered to only this query.  Includes the error.\n}\n\nexport enum DataSourceStatus {\n  Connected,\n  Disconnected,\n}\n\nexport interface ExploreQueryFieldProps<\n  DSType extends DataSourceApi<TQuery, TOptions>,\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData\n> extends QueryEditorProps<DSType, TQuery, TOptions> {\n  datasourceStatus: DataSourceStatus;\n  history: any[];\n  onHint?: (action: QueryFixAction) => void;\n}\n\nexport interface ExploreStartPageProps {\n  datasource?: DataSourceApi;\n  onClickExample: (query: DataQuery) => void;\n}\n\n/**\n * Starting in v6.2 DataFrame can represent both TimeSeries and TableData\n */\nexport type LegacyResponseData = TimeSeries | TableData | any;\n\nexport type DataQueryResponseData = DataFrame | DataFrameDTO | LegacyResponseData;\n\nexport type DataStreamObserver = (event: DataStreamState) => void;\n\nexport interface DataStreamState {\n  /**\n   * when Done or Error no more events will be processed\n   */\n  state: LoadingState;\n\n  /**\n   * The key is used to identify unique sets of data within\n   * a response, and join or replace them before sending them to the panel.\n   *\n   * For example consider a query that streams four DataFrames (A,B,C,D)\n   * and multiple events with keys K1, and K2\n   *\n   * query(...) returns: {\n   *   state:Streaming\n   *   data:[A]\n   * }\n   *\n   * Events:\n   * 1. {key:K1, data:[B1]}    >> PanelData: [A,B1]\n   * 2. {key:K2, data:[C2,D2]} >> PanelData: [A,B1,C2,D2]\n   * 3. {key:K1, data:[B3]}    >> PanelData: [A,B3,C2,D2]\n   * 4. {key:K2, data:[C4]}    >> PanelData: [A,B3,C4]\n   *\n   * NOTE: that PanelData will not report a `Done` state until all\n   * unique keys have returned with either `Error` or `Done` state.\n   */\n  key: string;\n\n  /**\n   * The stream request.  The properties of this request will be examined\n   * to determine if the stream matches the original query.  If not, it\n   * will be unsubscribed.\n   */\n  request: DataQueryRequest;\n\n  /**\n   * The streaming events return entire DataFrames.  The DataSource\n   * sending the events is responsible for truncating any growing lists\n   * most likely to the requested `maxDataPoints`\n   */\n  data?: DataFrame[];\n\n  /**\n   * Error in stream (but may still be running)\n   */\n  error?: DataQueryError;\n\n  /**\n   * @deprecated: DO NOT USE IN ANYTHING NEW!!!!\n   *\n   * merging streaming rows should be handled in the DataSource\n   * and/or we should add metadata to this state event that\n   * indicates that the PanelQueryRunner should manage the row\n   * additions.\n   */\n  delta?: DataFrame[];\n\n  /**\n   * Stop listening to this stream\n   */\n  unsubscribe: () => void;\n}\n\nexport interface DataQueryResponse {\n  /**\n   * The response data.  When streaming, this may be empty\n   * or a partial result set\n   */\n  data: DataQueryResponseData[];\n\n  /**\n   * When returning multiple partial responses or streams\n   * Use this key to inform Grafana how to combine the partial responses\n   * Multiple responses with same key are replaced (latest used)\n   */\n  key?: string;\n\n  /**\n   * Use this to control which state the response should have\n   * Defaults to LoadingState.Done if state is not defined\n   */\n  state?: LoadingState;\n}\n\nexport interface DataQuery {\n  /**\n   * A - Z\n   */\n  refId: string;\n\n  /**\n   * true if query is disabled (ie not executed / sent to TSDB)\n   */\n  hide?: boolean;\n\n  /**\n   * Unique, guid like, string used in explore mode\n   */\n  key?: string;\n\n  /**\n   * For mixed data sources the selected datasource is on the query level.\n   * For non mixed scenarios this is undefined.\n   */\n  datasource?: string | null;\n\n  metric?: any;\n}\n\nexport interface DataQueryError {\n  data?: {\n    message?: string;\n    error?: string;\n  };\n  message?: string;\n  status?: string;\n  statusText?: string;\n  refId?: string;\n  cancelled?: boolean;\n}\n\nexport interface DataQueryRequest<TQuery extends DataQuery = DataQuery> {\n  requestId: string; // Used to identify results and optionally cancel the request in backendSrv\n  timezone: string;\n  range: TimeRange;\n  rangeRaw?: RawTimeRange;\n  timeInfo?: string; // The query time description (blue text in the upper right)\n  targets: TQuery[];\n  panelId: number;\n  dashboardId: number;\n  cacheTimeout?: string;\n  interval: string;\n  intervalMs: number;\n  maxDataPoints: number;\n  scopedVars: ScopedVars;\n\n  // Request Timing\n  startTime: number;\n  endTime?: number;\n}\n\nexport interface QueryFix {\n  type: string;\n  label: string;\n  action?: QueryFixAction;\n}\n\nexport interface QueryFixAction {\n  type: string;\n  query?: string;\n  preventSubmit?: boolean;\n}\n\nexport interface QueryHint {\n  type: string;\n  label: string;\n  fix?: QueryFix;\n}\n\nexport interface MetricFindValue {\n  text: string;\n}\n\nexport interface DataSourceJsonData {\n  authType?: string;\n  defaultRegion?: string;\n}\n\n/**\n * Data Source instance edit model.  This is returned from:\n *  /api/datasources\n */\nexport interface DataSourceSettings<T extends DataSourceJsonData = DataSourceJsonData, S = {}> {\n  id: number;\n  orgId: number;\n  name: string;\n  typeLogoUrl: string;\n  type: string;\n  access: string;\n  url: string;\n  password: string;\n  user: string;\n  database: string;\n  basicAuth: boolean;\n  basicAuthPassword: string;\n  basicAuthUser: string;\n  isDefault: boolean;\n  jsonData: T;\n  secureJsonData?: S;\n  readOnly: boolean;\n  withCredentials: boolean;\n}\n\n/**\n * Frontend settings model that is passed to Datasource constructor. This differs a bit from the model above\n * as this data model is available to every user who has access to a data source (Viewers+).  This is loaded\n * in bootData (on page load), or from: /api/frontend/settings\n */\nexport interface DataSourceInstanceSettings<T extends DataSourceJsonData = DataSourceJsonData> {\n  id: number;\n  type: string;\n  name: string;\n  meta: DataSourcePluginMeta;\n  url?: string;\n  jsonData: T;\n  username?: string;\n  password?: string; // when access is direct, for some legacy datasources\n  database?: string;\n\n  /**\n   * This is the full Authorization header if basic auth is ennabled.\n   * Only available here when access is Browser (direct), when acess is Server (proxy)\n   * The basic auth header, username & password is never exposted to browser/Frontend\n   * so this will be emtpy then.\n   */\n  basicAuth?: string;\n  withCredentials?: boolean;\n}\n\nexport interface DataSourceSelectItem {\n  name: string;\n  value: string | null;\n  meta: DataSourcePluginMeta;\n  sort: string;\n}\n\n/**\n * Options passed to the datasource.annotationQuery method. See docs/plugins/developing/datasource.md\n */\nexport interface AnnotationQueryRequest<MoreOptions = {}> {\n  range: TimeRange;\n  rangeRaw: RawTimeRange;\n  // Should be DataModel but cannot import that here from the main app. Needs to be moved to package first.\n  dashboard: any;\n  annotation: {\n    datasource: string;\n    enable: boolean;\n    name: string;\n  } & MoreOptions;\n}\n","var path = 'public/app/features/plugins/partials/plugin_page.html';\nvar html = \"<div ng-if=ctrl.navModel>\\n  <page-header model=ctrl.navModel></page-header>\\n\\n  <div class=page-container>\\n    <div ng-if=ctrl.page>\\n      <plugin-component type=app-page>\\n      </plugin-component>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/core/components/help/help.html';\nvar html = \"<div class=modal-body>\\n\\t<div class=modal-header>\\n\\t\\t<h2 class=modal-header-title>\\n\\t\\t\\t<i class=\\\"fa fa-keyboard-o\\\"></i>\\n\\t\\t\\t<span class=p-l-1>Shortcuts</span>\\n\\t\\t</h2>\\n\\t\\t<a class=modal-header-close ng-click=ctrl.dismiss();>\\n\\t\\t\\t<i class=\\\"fa fa-remove\\\"></i>\\n\\t\\t</a>\\n\\t</div>\\n\\n\\t<div class=\\\"modal-content help-modal\\\">\\n\\n\\t\\t<p class=small style=position:absolute;top:13px;right:44px>\\n\\t\\t\\t<span class=shortcut-table-key>mod</span> =\\n\\t\\t\\t<span class=muted>CTRL on windows or linux and CMD key on Mac</span>\\n\\t\\t</p>\\n\\n\\t\\t<div ng-repeat=\\\"(category, shortcuts) in ctrl.shortcuts\\\" class=shortcut-category>\\n\\t\\t\\t<table class=shortcut-table>\\n\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t<th class=shortcut-table-category-header colspan=2>{{category}}</th>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t<tr ng-repeat=\\\"shortcut in shortcuts\\\">\\n\\t\\t\\t\\t\\t\\t<td class=shortcut-table-keys>\\n              <span class=shortcut-table-key ng-repeat=\\\"key in shortcut.keys track by $index\\\" ng-bind-html=key>\\n              </span>\\n            </td>\\n\\t\\t\\t\\t\\t\\t<td class=shortcut-table-description>{{shortcut.description}}</td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t</tbody></tbody></table>\\n\\t\\t</div>\\n\\n\\t\\t<div class=clearfix></div>\\n\\t</div>\\n\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/features/alerting/partials/alert_tab.html';\nvar html = \"<div ng-if=ctrl.panel.alert>\\n  <div class=\\\"alert alert-error m-b-2\\\" ng-show=ctrl.error>\\n    <i class=\\\"fa fa-warning\\\"></i> {{ctrl.error}}\\n  </div>\\n  <div class=panel-options-group>\\n    <div class=panel-options-group__body>\\n      <div class=gf-form-group>\\n        <h4 class=section-heading>Rule</h4>\\n        <div class=gf-form-inline>\\n          <div class=gf-form>\\n            <span class=\\\"gf-form-label width-6\\\">Name</span>\\n            <input type=text class=\\\"gf-form-input width-20\\\" ng-model=ctrl.alert.name>\\n          </div>\\n          <div class=gf-form>\\n            <span class=\\\"gf-form-label width-9\\\">Evaluate every</span>\\n            <input class=\\\"gf-form-input max-width-6\\\" type=text ng-model=ctrl.alert.frequency>\\n          </div>\\n          <div class=\\\"gf-form max-width-11\\\">\\n            <label class=\\\"gf-form-label width-5\\\">For</label>\\n            <input type=text class=\\\"gf-form-input max-width-6 gf-form-input--has-help-icon\\\" ng-model=ctrl.alert.for spellcheck=false placeholder=5m>\\n            <info-popover mode=right-absolute>\\n              If an alert rule has a configured For and the query violates the configured\\n              threshold it\\n              will first go from OK to Pending.\\n              Going from OK to Pending Grafana will not send any notifications. Once the alert\\n              rule\\n              has\\n              been firing for more than For duration, it will change to Alerting and send alert\\n              notifications.\\n            </info-popover>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=gf-form-group>\\n        <h4 class=section-heading>Conditions</h4>\\n        <div class=gf-form-inline ng-repeat=\\\"conditionModel in ctrl.conditionModels\\\">\\n          <div class=gf-form>\\n            <metric-segment-model css-class=\\\"query-keyword width-5\\\" ng-if=$index property=conditionModel.operator.type options=ctrl.evalOperators custom=false></metric-segment-model>\\n            <span class=\\\"gf-form-label query-keyword width-5\\\" ng-if=\\\"$index===0\\\">WHEN</span>\\n          </div>\\n          <div class=gf-form>\\n            <query-part-editor class=\\\"gf-form-label query-part width-9\\\" part=conditionModel.reducerPart handle-event=\\\"ctrl.handleReducerPartEvent(conditionModel, $event)\\\">\\n            </query-part-editor>\\n            <span class=\\\"gf-form-label query-keyword\\\">OF</span>\\n          </div>\\n          <div class=gf-form>\\n            <query-part-editor class=\\\"gf-form-label query-part\\\" part=conditionModel.queryPart handle-event=\\\"ctrl.handleQueryPartEvent(conditionModel, $event)\\\">\\n            </query-part-editor>\\n          </div>\\n          <div class=gf-form>\\n            <metric-segment-model property=conditionModel.evaluator.type options=ctrl.evalFunctions custom=false css-class=query-keyword on-change=ctrl.evaluatorTypeChanged(conditionModel.evaluator)></metric-segment-model>\\n            <input class=\\\"gf-form-input max-width-9\\\" type=number step=any ng-hide=\\\"conditionModel.evaluator.params.length === 0\\\" ng-model=conditionModel.evaluator.params[0] ng-change=ctrl.evaluatorParamsChanged() />\\n            <label class=\\\"gf-form-label query-keyword\\\" ng-show=\\\"conditionModel.evaluator.params.length === 2\\\">TO</label>\\n            <input class=\\\"gf-form-input max-width-9\\\" type=number step=any ng-if=\\\"conditionModel.evaluator.params.length === 2\\\" ng-model=conditionModel.evaluator.params[1] ng-change=ctrl.evaluatorParamsChanged() />\\n          </div>\\n          <div class=gf-form>\\n            <label class=gf-form-label>\\n              <a class=pointer tabindex=1 ng-click=ctrl.removeCondition($index)>\\n                <i class=\\\"fa fa-trash\\\"></i>\\n              </a>\\n            </label>\\n          </div>\\n        </div>\\n\\n        <div class=gf-form>\\n          <label class=\\\"gf-form-label dropdown\\\">\\n            <a class=\\\"pointer dropdown-toggle\\\" data-toggle=dropdown>\\n              <i class=\\\"fa fa-plus\\\"></i>\\n            </a>\\n            <ul class=dropdown-menu role=menu>\\n              <li ng-repeat=\\\"ct in ctrl.conditionTypes\\\" role=menuitem>\\n                <a ng-click=ctrl.addCondition(ct.value);>{{ct.text}}</a>\\n              </li>\\n            </ul>\\n          </label>\\n        </div>\\n      </div>\\n\\n      <div class=gf-form-group>\\n        <h4 class=section-heading>No Data & Error Handling</h4>\\n        <div class=gf-form-inline>\\n          <div class=gf-form>\\n            <span class=\\\"gf-form-label width-15\\\">If no data or all values are null</span>\\n          </div>\\n          <div class=gf-form>\\n            <span class=\\\"gf-form-label query-keyword\\\">SET STATE TO</span>\\n            <div class=gf-form-select-wrapper>\\n              <select class=gf-form-input ng-model=ctrl.alert.noDataState ng-options=\\\"f.value as f.text for f in ctrl.noDataModes\\\">\\n              </select>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=gf-form-inline>\\n          <div class=gf-form>\\n            <span class=\\\"gf-form-label width-15\\\">If execution error or timeout</span>\\n          </div>\\n          <div class=gf-form>\\n            <span class=\\\"gf-form-label query-keyword\\\">SET STATE TO</span>\\n            <div class=gf-form-select-wrapper>\\n              <select class=gf-form-input ng-model=ctrl.alert.executionErrorState ng-options=\\\"f.value as f.text for f in ctrl.executionErrorModes\\\">\\n              </select>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=panel-options-group>\\n    <div class=panel-options-group__header>Notifications</div>\\n    <div class=panel-options-group__body>\\n      <div class=gf-form-inline>\\n        <div class=gf-form>\\n          <span class=\\\"gf-form-label width-8\\\">Send to</span>\\n        </div>\\n        <div class=gf-form ng-repeat=\\\"nc in ctrl.alertNotifications\\\">\\n          <span class=gf-form-label ng-style=\\\"{'background-color': nc.bgColor }\\\">\\n            <i class={{nc.iconClass}}></i>&nbsp;{{nc.name}}&nbsp;\\n            <i class=\\\"fa fa-remove pointer muted\\\" ng-click=ctrl.removeNotification(nc) ng-if=\\\"nc.isDefault === false\\\"></i>\\n          </span>\\n        </div>\\n        <div class=gf-form>\\n          <metric-segment segment=ctrl.addNotificationSegment get-options=ctrl.getNotifications() on-change=ctrl.notificationAdded()></metric-segment>\\n        </div>\\n      </div>\\n      <div class=\\\"gf-form gf-form--v-stretch\\\">\\n        <span class=\\\"gf-form-label width-8\\\">Message</span>\\n        <textarea class=gf-form-input rows=10 ng-model=ctrl.alert.message placeholder=\\\"Notification message details...\\\"></textarea>\\n      </div>\\n      <div class=gf-form>\\n        <span class=\\\"gf-form-label width-8\\\">Tags</span>\\n        <div class=gf-form-group>\\n          <div class=gf-form-inline ng-repeat=\\\"(name, value) in ctrl.alert.alertRuleTags\\\">\\n            <label class=\\\"gf-form-label width-15\\\">{{ name }}</label>\\n            <input class=\\\"gf-form-input width-15\\\" placeholder=\\\"Tag value...\\\" ng-model=ctrl.alert.alertRuleTags[name] type=text />\\n            <label class=gf-form-label>\\n              <a class=pointer tabindex=1 ng-click=ctrl.removeAlertRuleTag(name)>\\n                <i class=\\\"fa fa-trash\\\"></i>\\n              </a>\\n            </label>\\n          </div>\\n          <div class=gf-form-group>\\n            <div class=gf-form-inline>\\n              <div class=gf-form>\\n                <input class=\\\"gf-form-input width-15\\\" placeholder=\\\"New tag name...\\\" ng-model=ctrl.newAlertRuleTag.name type=text>\\n                <input class=\\\"gf-form-input width-15\\\" placeholder=\\\"New tag value...\\\" ng-model=ctrl.newAlertRuleTag.value type=text>\\n              </div>\\n            </div>\\n            <div class=gf-form>\\n              <label class=gf-form-label>\\n                <a class=pointer tabindex=1 ng-click=ctrl.addAlertRuleTag()>\\n                  <i class=\\\"fa fa-plus\\\"></i>&nbsp;Add Tag\\n                </a>\\n              </label>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","/**\n * @preserve jquery-param (c) 2015 KNOWLEDGECODE | MIT\n */\n\nimport { UrlQueryMap } from '@grafana/runtime';\n\nexport function renderUrl(path: string, query: UrlQueryMap | undefined): string {\n  if (query && Object.keys(query).length > 0) {\n    path += '?' + toUrlParams(query);\n  }\n  return path;\n}\n\nexport function encodeURIComponentAsAngularJS(val: string, pctEncodeSpaces?: boolean) {\n  return encodeURIComponent(val)\n    .replace(/%40/gi, '@')\n    .replace(/%3A/gi, ':')\n    .replace(/%24/g, '$')\n    .replace(/%2C/gi, ',')\n    .replace(/%3B/gi, ';')\n    .replace(/%20/g, pctEncodeSpaces ? '%20' : '+');\n}\n\nexport function toUrlParams(a: any) {\n  const s: any[] = [];\n  const rbracket = /\\[\\]$/;\n\n  const isArray = (obj: any) => {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n  };\n\n  const add = (k: string, v: any) => {\n    v = typeof v === 'function' ? v() : v === null ? '' : v === undefined ? '' : v;\n    if (typeof v !== 'boolean') {\n      s[s.length] = encodeURIComponentAsAngularJS(k, true) + '=' + encodeURIComponentAsAngularJS(v, true);\n    } else {\n      s[s.length] = encodeURIComponentAsAngularJS(k, true);\n    }\n  };\n\n  const buildParams = (prefix: string, obj: any) => {\n    let i, len, key;\n\n    if (prefix) {\n      if (isArray(obj)) {\n        for (i = 0, len = obj.length; i < len; i++) {\n          if (rbracket.test(prefix)) {\n            add(prefix, obj[i]);\n          } else {\n            buildParams(prefix, obj[i]);\n          }\n        }\n      } else if (obj && String(obj) === '[object Object]') {\n        for (key in obj) {\n          buildParams(prefix + '[' + key + ']', obj[key]);\n        }\n      } else {\n        add(prefix, obj);\n      }\n    } else if (isArray(obj)) {\n      for (i = 0, len = obj.length; i < len; i++) {\n        add(obj[i].name, obj[i].value);\n      }\n    } else {\n      for (key in obj) {\n        buildParams(key, obj[key]);\n      }\n    }\n    return s;\n  };\n\n  return buildParams('', a).join('&');\n}\n\nexport function appendQueryToUrl(url: string, stringToAppend: string) {\n  if (stringToAppend !== undefined && stringToAppend !== null && stringToAppend !== '') {\n    const pos = url.indexOf('?');\n    if (pos !== -1) {\n      if (url.length - pos > 1) {\n        url += '&';\n      }\n    } else {\n      url += '?';\n    }\n    url += stringToAppend;\n  }\n\n  return url;\n}\n","/*!\n * jquery.flot.gauge v1.1.0 *\n *\n * Flot plugin for rendering gauge charts.\n *\n * Copyright (c) 2015 @toyoty99.\n * Licensed under the MIT license.\n */\n\n/**\n * @module flot.gauge\n */\n(function($) {\n\n\n    /**\n     * Gauge class\n     *\n     * @class Gauge\n     */\n    var Gauge = (function() {\n        /**\n         * context of canvas\n         *\n         * @property context\n         * @type Object\n         */\n        var context;\n        /**\n         * placeholder of canvas\n         *\n         * @property placeholder\n         * @type Object\n         */\n        var placeholder;\n        /**\n         * options of plot\n         *\n         * @property options\n         * @type Object\n         */\n        var options;\n        /**\n         * options of gauge\n         *\n         * @property gaugeOptions\n         * @type Object\n         */\n        var gaugeOptions;\n        /**\n         * data series\n         *\n         * @property series\n         * @type Array\n         */\n        var series;\n        /**\n         * logger\n         *\n         * @property logger\n         * @type Object\n         */\n        var logger;\n\n        /**\n         * constructor\n         *\n         * @class Gauge\n         * @constructor\n         * @param  {Object} gaugeOptions gauge options\n         */\n        var Gauge = function(plot, ctx) {\n            context = ctx;\n            placeholder = plot.getPlaceholder();\n            options = plot.getOptions();\n            gaugeOptions = options.series.gauges;\n            series = plot.getData();\n            logger = getLogger(gaugeOptions.debug);\n        }\n\n        /**\n         * calculate layout\n         *\n         * @method calculateLayout\n         * @return the calculated layout properties\n         */\n        Gauge.prototype.calculateLayout = function() {\n\n            var canvasWidth = placeholder.width();\n            var canvasHeight = placeholder.height();\n\n\n\n            // calculate cell size\n            var columns = Math.min(series.length, gaugeOptions.layout.columns);\n            var rows = Math.ceil(series.length / columns);\n\n\n\n            var margin = gaugeOptions.layout.margin;\n            var hMargin = gaugeOptions.layout.hMargin;\n            var vMargin = gaugeOptions.layout.vMargin;\n            var cellWidth = (canvasWidth - (margin * 2) - (hMargin * (columns - 1))) / columns;\n            var cellHeight = (canvasHeight - (margin * 2) - (vMargin * (rows - 1))) / rows;\n            if (gaugeOptions.layout.square) {\n                var cell = Math.min(cellWidth, cellHeight);\n                cellWidth = cell;\n                cellHeight = cell;\n            }\n\n\n\n            // calculate 'auto' values\n            calculateAutoValues(gaugeOptions, cellWidth);\n\n            // calculate maximum radius\n            var cellMargin = gaugeOptions.cell.margin;\n            var labelMargin = 0;\n            var labelFontSize = 0;\n            if (gaugeOptions.label.show) {\n                labelMargin = gaugeOptions.label.margin;\n                labelFontSize = gaugeOptions.label.font.size;\n            }\n            var valueMargin = 0;\n            var valueFontSize = 0;\n            if (gaugeOptions.value.show) {\n                valueMargin = gaugeOptions.value.margin;\n                valueFontSize = gaugeOptions.value.font.size;\n            }\n            var thresholdWidth = 0;\n            if (gaugeOptions.threshold.show) {\n                thresholdWidth = gaugeOptions.threshold.width;\n            }\n            var thresholdLabelMargin = 0;\n            var thresholdLabelFontSize = 0;\n            if (gaugeOptions.threshold.label.show) {\n                thresholdLabelMargin = gaugeOptions.threshold.label.margin;\n                thresholdLabelFontSize = gaugeOptions.threshold.label.font.size;\n            }\n\n            var maxRadiusH = (cellWidth / 2) - cellMargin - thresholdWidth - (thresholdLabelMargin * 2) - thresholdLabelFontSize;\n\n            var startAngle = gaugeOptions.gauge.startAngle;\n            var endAngle = gaugeOptions.gauge.endAngle;\n            var dAngle = (endAngle - startAngle) / 100;\n            var heightRatioV = -1;\n            for (var a = startAngle; a < endAngle; a += dAngle) {\n                heightRatioV = Math.max(heightRatioV, Math.sin(toRad(a)));\n            }\n            heightRatioV = Math.max(heightRatioV, Math.sin(toRad(endAngle)));\n            var outerRadiusV = (cellHeight - (cellMargin * 2) - (labelMargin * 2) - labelFontSize) / (1 + heightRatioV);\n            if (outerRadiusV * heightRatioV < valueMargin + (valueFontSize / 2)) {\n                outerRadiusV = cellHeight - (cellMargin * 2) - (labelMargin * 2) - labelFontSize - valueMargin - (valueFontSize / 2);\n            }\n            var maxRadiusV = outerRadiusV - (thresholdLabelMargin * 2) - thresholdLabelFontSize - thresholdWidth;\n\n            var radius = Math.min(maxRadiusH, maxRadiusV);\n\n\n            var width = gaugeOptions.gauge.width;\n            if (width >= radius) {\n                width = Math.max(3, radius / 3);\n            }\n\n\n            var outerRadius = (thresholdLabelMargin * 2) + thresholdLabelFontSize + thresholdWidth + radius;\n            var gaugeOuterHeight = Math.max(outerRadius * (1 + heightRatioV), outerRadius + valueMargin + (valueFontSize / 2));\n\n            return {\n                canvasWidth: canvasWidth,\n                canvasHeight: canvasHeight,\n                margin: margin,\n                hMargin: hMargin,\n                vMargin: vMargin,\n                columns: columns,\n                rows: rows,\n                cellWidth: cellWidth,\n                cellHeight: cellHeight,\n                cellMargin: cellMargin,\n                labelMargin: labelMargin,\n                labelFontSize: labelFontSize,\n                valueMargin: valueMargin,\n                valueFontSize: valueFontSize,\n                width: width,\n                radius: radius,\n                thresholdWidth: thresholdWidth,\n                thresholdLabelMargin: thresholdLabelMargin,\n                thresholdLabelFontSize: thresholdLabelFontSize,\n                gaugeOuterHeight: gaugeOuterHeight\n            };\n        }\n\n        /**\n         * calculate the values which are set as 'auto'\n         *\n         * @method calculateAutoValues\n         * @param  {Object} gaugeOptionsi the options of the gauge\n         * @param  {Number} cellWidth the width of cell\n         */\n        function calculateAutoValues(gaugeOptionsi, cellWidth) {\n\n            if (gaugeOptionsi.gauge.width === \"auto\") {\n                gaugeOptionsi.gauge.width = Math.max(5, cellWidth / 8);\n            }\n            if (gaugeOptionsi.label.margin === \"auto\") {\n                gaugeOptionsi.label.margin = Math.max(1, cellWidth / 20);\n            }\n            if (gaugeOptionsi.label.font.size === \"auto\") {\n                gaugeOptionsi.label.font.size = Math.max(5, cellWidth / 8);\n            }\n            if (gaugeOptionsi.value.margin === \"auto\") {\n                gaugeOptionsi.value.margin = Math.max(1, cellWidth / 30);\n            }\n            if (gaugeOptionsi.value.font.size === \"auto\") {\n                gaugeOptionsi.value.font.size = Math.max(5, cellWidth / 9);\n            }\n            if (gaugeOptionsi.threshold.width === \"auto\") {\n                gaugeOptionsi.threshold.width = Math.max(3, cellWidth / 100);\n            }\n            if (gaugeOptionsi.threshold.label.margin === \"auto\") {\n                gaugeOptionsi.threshold.label.margin = Math.max(3, cellWidth / 40);\n            }\n            if (gaugeOptionsi.threshold.label.font.size === \"auto\") {\n                gaugeOptionsi.threshold.label.font.size = Math.max(5, cellWidth / 15);\n            }\n\n        }\n        Gauge.prototype.calculateAutoValues = calculateAutoValues;\n\n        /**\n         * calculate the layout of the cell inside\n         *\n         * @method calculateCellLayout\n         * @param  {Object} gaugeOptionsi the options of the gauge\n         * @param  {Number} cellWidth the width of cell\n         * @param  {Number} i the index of the series\n         * @return the calculated cell layout properties\n         */\n        Gauge.prototype.calculateCellLayout = function(gaugeOptionsi, layout, i) {\n\n            // calculate top, left and center\n            var c = col(layout.columns, i);\n            var r = row(layout.columns, i);\n            var x = layout.margin + (layout.cellWidth + layout.hMargin) * c;\n            var y = layout.margin + (layout.cellHeight + layout.vMargin) * r;\n            var cx = x + (layout.cellWidth / 2);\n            var cy = y + layout.cellMargin + (layout.labelMargin * 2) + layout.labelFontSize + layout.thresholdWidth\n                        + layout.thresholdLabelFontSize + (layout.thresholdLabelMargin * 2) + layout.radius;\n            var blank = layout.cellHeight - (layout.cellMargin * 2) - (layout.labelMargin * 2) - layout.labelFontSize - layout.gaugeOuterHeight;\n            var offsetY = 0;\n            if (gaugeOptionsi.cell.vAlign === \"middle\") {\n                offsetY = (blank / 2);\n            } else if (gaugeOptionsi.cell.vAlign === \"bottom\") {\n                offsetY = blank;\n            }\n            cy += offsetY;\n\n            return {\n                col: c,\n                row: r,\n                x: x,\n                y: y,\n                offsetY: offsetY,\n                cellWidth: layout.cellWidth,\n                cellHeight: layout.cellHeight,\n                cellMargin: layout.cellMargin,\n                cx: cx,\n                cy: cy\n            }\n        }\n\n        /**\n         * draw the background of chart\n         *\n         * @method drawBackground\n         * @param  {Object} layout the layout properties\n         */\n        Gauge.prototype.drawBackground = function(layout) {\n\n            if (!gaugeOptions.frame.show) {\n                return;\n            }\n            context.save();\n            context.strokeStyle = options.grid.borderColor;\n            context.lineWidth = options.grid.borderWidth;\n            context.strokeRect(0, 0, layout.canvasWidth, layout.canvasHeight);\n            if (options.grid.backgroundColor) {\n                context.fillStyle = options.grid.backgroundColor;\n                context.fillRect(0, 0, layout.canvasWidth, layout.canvasHeight);\n            }\n            context.restore();\n        }\n\n        /**\n         * draw the background of cell\n         *\n         * @method drawCellBackground\n         * @param  {Object} gaugeOptionsi the options of the gauge\n         * @param  {Object} cellLayout the cell layout properties\n         */\n        Gauge.prototype.drawCellBackground = function(gaugeOptionsi, cellLayout) {\n\n            context.save();\n            if (gaugeOptionsi.cell.border && gaugeOptionsi.cell.border.show && gaugeOptionsi.cell.border.color && gaugeOptionsi.cell.border.width) {\n                context.strokeStyle = gaugeOptionsi.cell.border.color;\n                context.lineWidth = gaugeOptionsi.cell.border.width;\n                context.strokeRect(cellLayout.x, cellLayout.y, cellLayout.cellWidth, cellLayout.cellHeight);\n            }\n            if (gaugeOptionsi.cell.background && gaugeOptionsi.cell.background.color) {\n                context.fillStyle = gaugeOptionsi.cell.background.color;\n                context.fillRect(cellLayout.x, cellLayout.y, cellLayout.cellWidth, cellLayout.cellHeight);\n            }\n            context.restore();\n        }\n\n        /**\n         * draw the gauge\n         *\n         * @method drawGauge\n         * @param  {Object} gaugeOptionsi the options of the gauge\n         * @param  {Object} layout the layout properties\n         * @param  {Object} cellLayout the cell layout properties\n         * @param  {String} label the label of data\n         * @param  {Number} data the value of the gauge\n         */\n        Gauge.prototype.drawGauge = function(gaugeOptionsi, layout, cellLayout, label, data) {\n\n\n            var blur = gaugeOptionsi.gauge.shadow.show ? gaugeOptionsi.gauge.shadow.blur : 0;\n\n\n            // draw gauge frame\n            drawArcWithShadow(\n                cellLayout.cx, // center x\n                cellLayout.cy, // center y\n                layout.radius,\n                layout.width,\n                toRad(gaugeOptionsi.gauge.startAngle),\n                toRad(gaugeOptionsi.gauge.endAngle),\n                gaugeOptionsi.gauge.border.color,      // line color\n                gaugeOptionsi.gauge.border.width,      // line width\n                gaugeOptionsi.gauge.background.color,  // fill color\n                blur);\n\n            // draw gauge\n            var c1 = getColor(gaugeOptionsi, data);\n            var a2 = calculateAngle(gaugeOptionsi, layout, data);\n            drawArcWithShadow(\n                cellLayout.cx, // center x\n                cellLayout.cy, // center y\n                layout.radius - 1,\n                layout.width - 2,\n                toRad(gaugeOptionsi.gauge.startAngle),\n                toRad(a2),\n                c1,           // line color\n                1,            // line width\n                c1,           // fill color\n                blur);\n        }\n\n        /**\n         * decide the color of the data from the threshold options\n         *\n         * @method getColor\n         * @private\n         * @param  {Object} gaugeOptionsi the options of the gauge\n         * @param  {Number} data the value of the gauge\n         */\n        function getColor(gaugeOptionsi, data) {\n            var color;\n            for (var i = 0; i < gaugeOptionsi.threshold.values.length; i++) {\n                var threshold = gaugeOptionsi.threshold.values[i];\n                color = threshold.color;\n                if (data < threshold.value) {\n                    break;\n                }\n            }\n            return color;\n        }\n\n        /**\n         * calculate the angle of the data\n         *\n         * @method calculateAngle\n         * @private\n         * @param  {Object} gaugeOptionsi the options of the gauge\n         * @param  {Object} layout the layout properties\n         * @param  {Number} data the value of the gauge\n         */\n        function calculateAngle(gaugeOptionsi, layout, data) {\n            var a =\n                gaugeOptionsi.gauge.startAngle\n                    + (gaugeOptionsi.gauge.endAngle - gaugeOptionsi.gauge.startAngle)\n                        * ((data - gaugeOptionsi.gauge.min) / (gaugeOptionsi.gauge.max - gaugeOptionsi.gauge.min));\n\n            if (a < gaugeOptionsi.gauge.startAngle) {\n                a = gaugeOptionsi.gauge.startAngle;\n            } else if (a > gaugeOptionsi.gauge.endAngle) {\n                a = gaugeOptionsi.gauge.endAngle;\n            }\n            return a;\n        }\n\n        /**\n         * draw the arc of the threshold\n         *\n         * @method drawThreshold\n         * @param  {Object} gaugeOptionsi the options of the gauge\n         * @param  {Object} layout the layout properties\n         * @param  {Object} cellLayout the cell layout properties\n         */\n        Gauge.prototype.drawThreshold = function(gaugeOptionsi, layout, cellLayout) {\n\n            var a1 = gaugeOptionsi.gauge.startAngle;\n            for (var i = 0; i < gaugeOptionsi.threshold.values.length; i++) {\n                var threshold = gaugeOptionsi.threshold.values[i];\n                c1 = threshold.color;\n                a2 = calculateAngle(gaugeOptionsi, layout, threshold.value);\n                drawArc(\n                    context,\n                    cellLayout.cx, // center x\n                    cellLayout.cy, // center y\n                    layout.radius + layout.thresholdWidth,\n                    layout.thresholdWidth - 2,\n                    toRad(a1),\n                    toRad(a2),\n                    c1,           // line color\n                    1,            // line width\n                    c1);          // fill color\n                a1 = a2;\n            }\n        }\n\n        /**\n         * draw an arc with a shadow\n         *\n         * @method drawArcWithShadow\n         * @private\n         * @param  {Number} cx the x position of the center\n         * @param  {Number} cy the y position of the center\n         * @param  {Number} r the radius of an arc\n         * @param  {Number} w the width of an arc\n         * @param  {Number} rd1 the start angle of an arc in radians\n         * @param  {Number} rd2 the end angle of an arc in radians\n         * @param  {String} lc the color of a line\n         * @param  {Number} lw the widht of a line\n         * @param  {String} fc the fill color  of an arc\n         * @param  {Number} blur the shdow blur\n         */\n        function drawArcWithShadow(cx, cy, r, w, rd1, rd2, lc, lw, fc, blur) {\n            if (rd1 === rd2) {\n                return;\n            }\n            context.save();\n\n            drawArc(context, cx, cy, r, w, rd1, rd2, lc, lw, fc);\n\n            if (blur) {\n                drawArc(context, cx, cy, r, w, rd1, rd2);\n                context.clip();\n                context.shadowOffsetX = 0;\n                context.shadowOffsetY = 0;\n                context.shadowBlur = 10;\n                context.shadowColor = \"gray\";\n                drawArc(context, cx, cy, r + 1, w + 2, rd1, rd2, lc, 1);\n            }\n            context.restore();\n        }\n\n        /**\n         * draw the label of the gauge\n         *\n         * @method drawLable\n         * @param  {Object} gaugeOptionsi the options of the gauge\n         * @param  {Object} layout the layout properties\n         * @param  {Object} cellLayout the cell layout properties\n         * @param  {Number} i the index of the series\n         * @param  {Object} item the item of the series\n         */\n        Gauge.prototype.drawLable = function(gaugeOptionsi, layout, cellLayout, i, item) {\n\n            drawText(\n                cellLayout.cx,\n                cellLayout.y + cellLayout.cellMargin + layout.labelMargin + cellLayout.offsetY,\n                \"flotGagueLabel\" + i,\n                gaugeOptionsi.label.formatter ? gaugeOptionsi.label.formatter(item.label, item.data[0][1]) : text,\n                gaugeOptionsi.label);\n        }\n\n        /**\n         * draw the value of the gauge\n         *\n         * @method drawValue\n         * @param  {Object} gaugeOptionsi the options of the gauge\n         * @param  {Object} layout the layout properties\n         * @param  {Object} cellLayout the cell layout properties\n         * @param  {Number} i the index of the series\n         * @param  {Object} item the item of the series\n         */\n        Gauge.prototype.drawValue = function(gaugeOptionsi, layout, cellLayout, i, item) {\n\n            drawText(\n                cellLayout.cx,\n                cellLayout.cy - (gaugeOptionsi.value.font.size / 2),\n                \"flotGagueValue\" + i,\n                gaugeOptionsi.value.formatter ? gaugeOptionsi.value.formatter(item.label, item.data[0][1]) : text,\n                gaugeOptionsi.value);\n        }\n\n        /**\n         * draw the values of the threshold\n         *\n         * @method drawThresholdValues\n         * @param  {Object} gaugeOptionsi the options of the gauge\n         * @param  {Object} layout the layout properties\n         * @param  {Object} cellLayout the cell layout properties\n         * @param  {Number} i the index of the series\n         */\n        Gauge.prototype.drawThresholdValues = function(gaugeOptionsi, layout, cellLayout, i) {\n\n            // min, max\n            drawThresholdValue(gaugeOptionsi, layout, cellLayout, \"Min\" + i, gaugeOptionsi.gauge.min, gaugeOptionsi.gauge.startAngle);\n            drawThresholdValue(gaugeOptionsi, layout, cellLayout, \"Max\" + i, gaugeOptionsi.gauge.max, gaugeOptionsi.gauge.endAngle);\n            // threshold values\n            for (var j = 0; j < gaugeOptionsi.threshold.values.length; j++) {\n                var threshold = gaugeOptionsi.threshold.values[j];\n                if (threshold.value > gaugeOptionsi.gauge.min && threshold.value < gaugeOptionsi.gauge.max) {\n                    var a = calculateAngle(gaugeOptionsi, layout, threshold.value);\n                    drawThresholdValue(gaugeOptionsi, layout, cellLayout, i + \"_\" + j, threshold.value, a);\n                }\n            }\n        }\n\n        /**\n         * draw the value of the threshold\n         *\n         * @method drawThresholdValue\n         * @param  {Object} gaugeOptionsi the options of the gauge\n         * @param  {Object} layout the layout properties\n         * @param  {Object} cellLayout the cell layout properties\n         * @param  {Number} i the index of the series\n         * @param  {Number} value the value of the threshold\n         * @param  {Number} a the angle of the value drawn\n         */\n        function drawThresholdValue(gaugeOptionsi, layout, cellLayout, i, value, a) {\n            drawText(\n                cellLayout.cx\n                    + ((layout.thresholdLabelMargin + (layout.thresholdLabelFontSize / 2) + layout.radius)\n                        * Math.cos(toRad(a))),\n                cellLayout.cy\n                    + ((layout.thresholdLabelMargin + (layout.thresholdLabelFontSize / 2) + layout.radius)\n                        * Math.sin(toRad(a))),\n                \"flotGagueThresholdValue\" + i,\n                gaugeOptionsi.threshold.label.formatter ? gaugeOptionsi.threshold.label.formatter(value) : value,\n                gaugeOptionsi.threshold.label,\n                a);\n        }\n\n        /**\n         * draw a text\n         *\n         * the textOptions is assumed as follows:\n         *\n         *   textOptions: {\n         *       background: {\n         *           color: null,\n         *           opacity: 0\n         *       },\n         *       font: {\n         *           size: \"auto\"\n         *           family: \"\\\"ＭＳ ゴシック\\\",sans-serif\"\n         *       },\n         *       color: null\n         *   }\n         *\n         * @method drawText\n         * @private\n         * @param  {Number} x the x position of the text drawn (left top)\n         * @param  {Number} y the y position of the text drawn (left top)\n         * @param  {String} id the id of the dom element\n         * @param  {String} text the text drawn\n         * @param  {Object} textOptions the option of the text\n         * @param  {Number} [a] the angle of the value drawn\n         */\n        function drawText(x, y, id, text, textOptions, a) {\n            var span = $(placeholder).find(\"#\" + id);\n            var exists = span.length;\n            if (!exists) {\n                span = $(\"<span></span>\")\n                span.attr(\"id\", id);\n                span.attr(\"class\", \"flot-temp-elem\");\n                placeholder.append(span);\n            }\n\n            span.css(\"position\", \"absolute\");\n            span.css(\"top\", y + \"px\");\n            span.css(\"white-space\", \"nowrap\");\n\n            if (textOptions.font.size) {\n              span.css(\"font-size\", textOptions.font.size + \"px\");\n            }\n            if (textOptions.font.family) {\n              span.css(\"font-family\", textOptions.font.family);\n            }\n            if (textOptions.color) {\n              span.css(\"color\", textOptions.color);\n            }\n            if (textOptions.background.color) {\n              span.css(\"background-color\", textOptions.background.color);\n            }\n            if (textOptions.background.opacity) {\n              span.css(\"opacity\", textOptions.background.opacity);\n            }\n            span.text(text);\n            // after append, readjust the left position\n            span.css(\"left\", x + \"px\"); // for redraw, resetting the left position is needed here\n            span.css(\"left\", (parseInt(span.css(\"left\")) - (span.width()/ 2)) + \"px\");\n\n            // at last, set angle\n            if (!exists && a) {\n                span.css(\"top\", (parseInt(span.css(\"top\")) - (span.height()/ 2)) + \"px\");\n                span.css(\"transform\", \"rotate(\" + ((180 * a) + 90) + \"deg)\"); // not supported for ie8\n            }\n        }\n\n        return Gauge;\n    })();\n    /**\n     * get a instance of Logger\n     *\n     * @method  getLogger\n     * @for flot.gauge\n     * @private\n     * @param  {Object} debugOptions the options of debug\n     */\n    function getLogger(debugOptions) {\n        return typeof Logger !== \"undefined\" ? new Logger(debugOptions) : null;\n    }\n\n    /**\n     * calculate the index of columns for the specified data\n     *\n     * @method col\n     * @for flot.gauge\n     * @param  {Number} columns the number of columns\n     * @param  {Number} i       the index of the series\n     * @return the index of columns\n     */\n    function col(columns, i) {\n        return i % columns;\n    }\n\n    /**\n     * calculate the index of rows for the specified data\n     *\n     * @method row\n     * @for flot.gauge\n     * @param  {Number} columns the number of rows\n     * @param  {Number} i       the index of the series\n     * @return the index of rows\n     */\n    function row(columns, i) {\n        return Math.floor(i / columns);\n    }\n\n    /**\n     * calculate the angle in radians\n     *\n     * internally, use a number without PI (0 - 2).\n     * so, in this function, multiply PI\n     *\n     * @method toRad\n     * @for flot.gauge\n     * @param  {Number} a the number of angle without PI\n     * @return the angle in radians\n     */\n    function toRad(a) {\n        return a * Math.PI;\n    }\n\n    /**\n     * draw an arc\n     *\n     * @method drawArc\n     * @for flot.gauge\n     * @param  {Object} context the context of canvas\n     * @param  {Number} cx the x position of the center\n     * @param  {Number} cy the y position of the center\n     * @param  {Number} r the radius of an arc\n     * @param  {Number} w the width of an arc\n     * @param  {Number} rd1 the start angle of an arc in radians\n     * @param  {Number} rd2 the end angle of an arc in radians\n     * @param  {String} lc the color of a line\n     * @param  {Number} lw the widht of a line\n     * @param  {String} fc the fill color  of an arc\n     */\n    function drawArc(context, cx, cy, r, w, rd1, rd2, lc, lw, fc) {\n        if (rd1 === rd2) {\n            return;\n        }\n        var counterClockwise = false;\n        context.save();\n        context.beginPath();\n        context.arc(cx, cy, r, rd1, rd2, counterClockwise);\n        context.lineTo(cx + (r - w) * Math.cos(rd2),\n                       cy + (r - w) * Math.sin(rd2));\n        context.arc(cx, cy, r - w, rd2, rd1, !counterClockwise);\n        context.closePath();\n        if (lw) {\n            context.lineWidth = lw;\n        }\n        if (lc) {\n            context.strokeStyle = lc;\n            context.stroke();\n        }\n        if (fc) {\n            context.fillStyle = fc;\n            context.fill();\n        }\n        context.restore();\n    }\n\n    /**\n     * initialize plugin\n     *\n     * @method init\n     * @for flot.gauge\n     * @private\n     * @param  {Object} plot a instance of plot\n     */\n    function init (plot) {\n        // add processOptions hook\n        plot.hooks.processOptions.push(function(plot, options) {\n            var logger = getLogger(options.series.gauges.debug);\n\n\n\n\n            // turn 'grid' and 'legend' off\n            if (options.series.gauges.show) {\n                options.grid.show = false;\n                options.legend.show = false;\n            }\n\n            // sort threshold\n            var thresholds = options.series.gauges.threshold.values;\n\n            thresholds.sort(function(a, b) {\n                if (a.value < b.value) {\n                    return -1;\n                } else if (a.value > b.value) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n\n\n\n        });\n\n        // add draw hook\n        plot.hooks.draw.push(function(plot, context) {\n            var options = plot.getOptions();\n            var gaugeOptions = options.series.gauges;\n\n            var logger = getLogger(gaugeOptions.debug);\n\n\n            if (!gaugeOptions.show) {\n                return;\n            }\n\n            var series = plot.getData();\n\n            if (!series || !series.length) {\n                return; // if no series were passed\n            }\n\n            var gauge = new Gauge(plot, context);\n\n            // calculate layout\n            var layout = gauge.calculateLayout();\n\n            // debug layout\n            if (gaugeOptions.debug.layout) {\n\n            }\n\n            // draw background\n            gauge.drawBackground(layout)\n\n            // draw cells (label, gauge, value, threshold)\n            for (var i = 0; i < series.length; i++) {\n                var item = series[i];\n\n                var gaugeOptionsi = $.extend({}, gaugeOptions, item.gauges);\n                if (item.gauges) {\n                    // re-calculate 'auto' values\n                    gauge.calculateAutoValues(gaugeOptionsi, layout.cellWidth);\n                }\n\n                // calculate cell layout\n                var cellLayout = gauge.calculateCellLayout(gaugeOptionsi, layout, i);\n\n                // draw cell background\n                gauge.drawCellBackground(gaugeOptionsi, cellLayout)\n                // debug layout\n                if (gaugeOptionsi.debug.layout) {\n\n                }\n                // draw label\n                if (gaugeOptionsi.label.show) {\n                    gauge.drawLable(gaugeOptionsi, layout, cellLayout, i, item);\n                }\n                // draw gauge\n                gauge.drawGauge(gaugeOptionsi, layout, cellLayout, item.label, item.data[0][1]);\n                // draw threshold\n                if (gaugeOptionsi.threshold.show) {\n                    gauge.drawThreshold(gaugeOptionsi, layout, cellLayout);\n                }\n                if (gaugeOptionsi.threshold.label.show) {\n                    gauge.drawThresholdValues(gaugeOptionsi, layout, cellLayout, i)\n                }\n                // draw value\n                if (gaugeOptionsi.value.show) {\n                    gauge.drawValue(gaugeOptionsi, layout, cellLayout, i, item);\n                }\n            }\n        });\n    }\n\n    /**\n     * [defaults description]\n     *\n     * @property defaults\n     * @type {Object}\n     */\n    var defaults = {\n        series: {\n            gauges: {\n                debug: {\n                    log: false,\n                    layout: false,\n                    alert: false\n                },\n                show: false,\n                layout: {\n                    margin: 5,\n                    columns: 3,\n                    hMargin: 5,\n                    vMargin: 5,\n                    square: false\n                },\n                frame: {\n                    show: true\n                },\n                cell: {\n                    background: {\n                        color: null\n                    },\n                    border: {\n                        show: true,\n                        color: \"black\",\n                        width: 1\n                    },\n                    margin: 5,\n                    vAlign: \"middle\" // 'top' or 'middle' or 'bottom'\n                },\n                gauge: {\n                    width: \"auto\", // a specified number, or 'auto'\n                    startAngle: 0.9, // 0 - 2 factor of the radians\n                    endAngle: 2.1, // 0 - 2 factor of the radians\n                    min: 0,\n                    max: 100,\n                    background: {\n                        color: \"white\"\n                    },\n                    border: {\n                        color: \"lightgray\",\n                        width: 2\n                    },\n                    shadow: {\n                        show: true,\n                        blur: 5\n                    }\n                },\n                label: {\n                    show: true,\n                    margin: \"auto\", // a specified number, or 'auto'\n                    background: {\n                        color: null,\n                        opacity: 0\n                    },\n                    font: {\n                        size: \"auto\", // a specified number, or 'auto'\n                        family: \"sans-serif\"\n                    },\n                    color: null,\n                    formatter: function(label, value) {\n                        return label;\n                    }\n                },\n                value: {\n                    show: true,\n                    margin: \"auto\", // a specified number, or 'auto'\n                    background: {\n                        color: null,\n                        opacity: 0\n                    },\n                    font: {\n                        size: \"auto\", // a specified number, or 'auto'\n                        family: \"sans-serif\"\n                    },\n                    color: null,\n                    formatter: function(label, value) {\n                        return parseInt(value);\n                    }\n                },\n                threshold: {\n                    show: true,\n                    width: \"auto\", // a specified number, or 'auto'\n                    label: {\n                        show: true,\n                        margin: \"auto\", // a specified number, or 'auto'\n                        background: {\n                            color: null,\n                            opacity: 0\n                        },\n                        font: {\n                            size: \"auto\", // a specified number, or 'auto'\n                            family: \",sans-serif\"\n                        },\n                        color: null,\n                        formatter: function(value) {\n                            return value;\n                        }\n                    },\n                    values: [\n\n                    ]\n                }\n            }\n        }\n    };\n\n    // register the gauge plugin\n    $.plot.plugins.push({\n        init: init,\n        options: defaults,\n        name: \"gauge\",\n        version: \"1.1.0\"\n    });\n\n})(jQuery);\n\n","var path = 'public/app/plugins/panel/alertlist/module.html';\nvar html = \"<div class=panel-alert-list>\\n  <div class=panel-alert-list__no-alerts ng-show=ctrl.noAlertsMessage>\\n    {{ctrl.noAlertsMessage}}\\n  </div>\\n\\n  <section ng-if=\\\"ctrl.panel.show === 'current'\\\">\\n    <ol class=alert-rule-list>\\n      <li class=alert-rule-item ng-repeat=\\\"alert in ctrl.currentAlerts\\\">\\n        <div class=\\\"alert-rule-item__icon {{alert.stateModel.stateClass}}\\\">\\n          <i class={{alert.stateModel.iconClass}}></i>\\n        </div>\\n        <div class=alert-rule-item__body>\\n          <div class=alert-rule-item__header>\\n            <p class=alert-rule-item__name>\\n              <a href=\\\"{{alert.url}}?panelId={{alert.panelId}}&fullscreen&edit&tab=alert\\\">\\n                {{alert.name}}\\n              </a>\\n            </p>\\n            <div class=alert-rule-item__text>\\n              <span class={{alert.stateModel.stateClass}}>{{alert.stateModel.text}}</span>\\n              <span class=alert-rule-item__time>for {{alert.newStateDateAgo}}</span>\\n            </div>\\n          </div>\\n        </div>\\n      </li>\\n    </ol>\\n  </section>\\n\\n  <section ng-if=\\\"ctrl.panel.show === 'changes'\\\">\\n    <ol class=alert-rule-list>\\n      <li class=alert-rule-item ng-repeat=\\\"al in ctrl.alertHistory\\\">\\n        <div class=\\\"alert-rule-item__icon {{al.stateModel.stateClass}}\\\">\\n          <i class={{al.stateModel.iconClass}}></i>\\n        </div>\\n        <div class=alert-rule-item__body>\\n          <div class=alert-rule-item__header>\\n            <p class=alert-rule-item__name>{{al.alertName}}</p>\\n            <div class=alert-rule-item__text>\\n              <span class={{al.stateModel.stateClass}}>{{al.stateModel.text}}</span>\\n            </div>\\n          </div>\\n          <span class=alert-rule-item__info>{{al.info}}</span>\\n        </div>\\n        <div class=alert-rule-item__time>\\n          <span>{{al.time}}</span>\\n        </div>\\n      </li>\\n    </ol>\\n  </section>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/partials/valueSelectDropdown.html';\nvar html = \"<div class=variable-link-wrapper>\\n\\t<a ng-click=vm.show() class=variable-value-link>\\n\\t\\t{{vm.linkText}}\\n\\t\\t<span ng-repeat=\\\"tag in vm.selectedTags\\\" bs-tooltip=tag.valuesText data-placement=bottom>\\n\\t\\t\\t<span class=label-tag tag-color-from-name=tag.text>\\n\\t\\t\\t\\t&nbsp;&nbsp;<i class=\\\"fa fa-tag\\\"></i>&nbsp;\\n\\t\\t\\t\\t{{tag.text}}\\n\\t\\t\\t</span>\\n\\t\\t</span>\\n\\t\\t<i class=\\\"fa fa-caret-down\\\" style=font-size:12px></i>\\n\\t</a>\\n\\n\\t<input type=text class=gf-form-input style=display:none ng-keydown=vm.keyDown($event) ng-model=vm.search.query ng-change=vm.queryChanged()>\\n\\n\\t<div class=variable-value-dropdown ng-if=vm.dropdownVisible ng-class=\\\"{'multi': vm.variable.multi, 'single': !vm.variable.multi}\\\">\\n\\t\\t<div class=variable-options-wrapper>\\n\\t\\t\\t<div class=variable-options-column>\\n\\t\\t\\t\\t<a class=variable-options-column-header ng-if=vm.variable.multi ng-class=\\\"{'many-selected': vm.selectedValues.length > 1}\\\" bs-tooltip=\\\"'Clear selections'\\\" data-placement=top ng-click=vm.clearSelections()>\\n\\t\\t\\t\\t\\t<span class=variable-option-icon></span>\\n\\t\\t\\t\\t\\tSelected ({{vm.selectedValues.length}})\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t<a class=\\\"variable-option pointer\\\" ng-repeat=\\\"option in vm.search.options\\\" ng-class=\\\"{'selected': option.selected, 'highlighted': $index === vm.highlightIndex}\\\" ng-click=\\\"vm.selectValue(option, $event)\\\">\\n\\t\\t\\t\\t\\t<span class=variable-option-icon></span>\\n\\t\\t\\t\\t\\t<span>{{option.text}}</span>\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=variable-options-column ng-if=vm.tags.length>\\n\\t\\t\\t\\t<div class=\\\"variable-options-column-header text-center\\\">\\n\\t\\t\\t\\t\\tTags\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<a class=\\\"variable-option-tag pointer\\\" ng-repeat=\\\"tag in vm.tags\\\" ng-click=\\\"vm.selectTag(tag, $event)\\\" ng-class=\\\"{'selected': tag.selected}\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"fa fa-fw variable-option-icon\\\"></span>\\n\\t\\t\\t\\t\\t<span class=label-tag tag-color-from-name=tag.text>{{tag.text}}&nbsp;&nbsp;<i class=\\\"fa fa-tag\\\"></i>&nbsp;</span>\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import React, { FC } from 'react';\nimport { LdapUserInfo } from 'app/types';\n\ninterface Props {\n  info: LdapUserInfo;\n  showAttributeMapping?: boolean;\n}\n\nexport const LdapUserMappingInfo: FC<Props> = ({ info, showAttributeMapping }) => {\n  return (\n    <div className=\"gf-form-group\">\n      <div className=\"gf-form\">\n        <table className=\"filter-table form-inline\">\n          <thead>\n            <tr>\n              <th colSpan={2}>User information</th>\n              {showAttributeMapping && <th>LDAP attribute</th>}\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td className=\"width-16\">First name</td>\n              <td>{info.name.ldapValue}</td>\n              {showAttributeMapping && <td>{info.name.cfgAttrValue}</td>}\n            </tr>\n            <tr>\n              <td className=\"width-16\">Surname</td>\n              <td>{info.surname.ldapValue}</td>\n              {showAttributeMapping && <td>{info.surname.cfgAttrValue}</td>}\n            </tr>\n            <tr>\n              <td className=\"width-16\">Username</td>\n              <td>{info.login.ldapValue}</td>\n              {showAttributeMapping && <td>{info.login.cfgAttrValue}</td>}\n            </tr>\n            <tr>\n              <td className=\"width-16\">Email</td>\n              <td>{info.email.ldapValue}</td>\n              {showAttributeMapping && <td>{info.email.cfgAttrValue}</td>}\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { LdapPermissions } from 'app/types';\n\ninterface Props {\n  permissions: LdapPermissions;\n}\n\nexport const LdapUserPermissions: FC<Props> = ({ permissions }) => {\n  return (\n    <div className=\"gf-form-group\">\n      <div className=\"gf-form\">\n        <table className=\"filter-table form-inline\">\n          <thead>\n            <tr>\n              <th colSpan={1}>Permissions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td className=\"width-16\"> Grafana admin</td>\n              <td>\n                {permissions.isGrafanaAdmin ? (\n                  <>\n                    <i className=\"gicon gicon-shield\" /> Yes\n                  </>\n                ) : (\n                  'No'\n                )}\n              </td>\n            </tr>\n            <tr>\n              <td className=\"width-16\">Status</td>\n              <td>\n                {permissions.isDisabled ? (\n                  <>\n                    <i className=\"fa fa-fw fa-times\" /> Inactive\n                  </>\n                ) : (\n                  <>\n                    <i className=\"fa fa-fw fa-check\" /> Active\n                  </>\n                )}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { Tooltip } from '@grafana/ui';\nimport { LdapRole } from 'app/types';\n\ninterface Props {\n  groups: LdapRole[];\n  showAttributeMapping?: boolean;\n}\n\nexport const LdapUserGroups: FC<Props> = ({ groups, showAttributeMapping }) => {\n  const items = showAttributeMapping ? groups : groups.filter(item => item.orgRole);\n\n  return (\n    <div className=\"gf-form-group\">\n      <div className=\"gf-form\">\n        <table className=\"filter-table form-inline\">\n          <thead>\n            <tr>\n              {showAttributeMapping && <th>LDAP Group</th>}\n              <th>\n                Organization\n                <Tooltip placement=\"top\" content=\"Only the first match for an Organization will be used\" theme={'info'}>\n                  <span className=\"gf-form-help-icon\">\n                    <i className=\"fa fa-info-circle\" />\n                  </span>\n                </Tooltip>\n              </th>\n              <th>Role</th>\n            </tr>\n          </thead>\n          <tbody>\n            {items.map((group, index) => {\n              return (\n                <tr key={`${group.orgId}-${index}`}>\n                  {showAttributeMapping && (\n                    <>\n                      <td>{group.groupDN}</td>\n                      {!group.orgRole && (\n                        <>\n                          <td />\n                          <td>\n                            <span className=\"text-warning\">\n                              No match\n                              <Tooltip placement=\"top\" content=\"No matching groups found\" theme={'info'}>\n                                <span className=\"gf-form-help-icon\">\n                                  <i className=\"fa fa-info-circle\" />\n                                </span>\n                              </Tooltip>\n                            </span>\n                          </td>\n                        </>\n                      )}\n                    </>\n                  )}\n                  {group.orgName && (\n                    <>\n                      <td>{group.orgName}</td>\n                      <td>{group.orgRole}</td>\n                    </>\n                  )}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { Tooltip } from '@grafana/ui';\nimport { LdapTeam } from 'app/types';\n\ninterface Props {\n  teams: LdapTeam[];\n  showAttributeMapping?: boolean;\n}\n\nexport const LdapUserTeams: FC<Props> = ({ teams, showAttributeMapping }) => {\n  const items = showAttributeMapping ? teams : teams.filter(item => item.teamName);\n\n  return (\n    <div className=\"gf-form-group\">\n      <div className=\"gf-form\">\n        <table className=\"filter-table form-inline\">\n          <thead>\n            <tr>\n              {showAttributeMapping && <th>LDAP Group</th>}\n              <th>Organisation</th>\n              <th>Team</th>\n            </tr>\n          </thead>\n          <tbody>\n            {items.map((team, index) => {\n              return (\n                <tr key={`${team.teamName}-${index}`}>\n                  {showAttributeMapping && (\n                    <>\n                      <td>{team.groupDN}</td>\n                      {!team.orgName && (\n                        <>\n                          <td />\n                          <td>\n                            <div className=\"text-warning\">\n                              No match\n                              <Tooltip placement=\"top\" content=\"No matching teams found\" theme={'info'}>\n                                <span className=\"gf-form-help-icon\">\n                                  <i className=\"fa fa-info-circle\" />\n                                </span>\n                              </Tooltip>\n                            </div>\n                          </td>\n                        </>\n                      )}\n                    </>\n                  )}\n                  {team.orgName && (\n                    <>\n                      <td>{team.orgName}</td>\n                      <td>{team.teamName}</td>\n                    </>\n                  )}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { LdapUserMappingInfo } from './LdapUserMappingInfo';\nimport { LdapUserPermissions } from './LdapUserPermissions';\nimport { LdapUserGroups } from './LdapUserGroups';\nimport { LdapUserTeams } from './LdapUserTeams';\nimport { LdapUser } from 'app/types';\n\ninterface Props {\n  ldapUser: LdapUser;\n  showAttributeMapping?: boolean;\n}\n\nexport const LdapUserInfo: FC<Props> = ({ ldapUser, showAttributeMapping }) => {\n  return (\n    <>\n      <LdapUserMappingInfo info={ldapUser.info} showAttributeMapping={showAttributeMapping} />\n      <LdapUserPermissions permissions={ldapUser.permissions} />\n      {ldapUser.roles && ldapUser.roles.length > 0 && (\n        <LdapUserGroups groups={ldapUser.roles} showAttributeMapping={showAttributeMapping} />\n      )}\n\n      {ldapUser.teams && ldapUser.teams.length > 0 ? (\n        <LdapUserTeams teams={ldapUser.teams} showAttributeMapping={showAttributeMapping} />\n      ) : (\n        <div className=\"gf-form-group\">\n          <div className=\"gf-form\">\n            <table className=\"filter-table form-inline\">\n              <tbody>\n                <tr>\n                  <td>No teams found via LDAP</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import { MutableVector } from '../types/vector';\n\nexport class ArrayVector<T = any> implements MutableVector<T> {\n  buffer: T[];\n\n  constructor(buffer?: T[]) {\n    this.buffer = buffer ? buffer : [];\n  }\n\n  get length() {\n    return this.buffer.length;\n  }\n\n  add(value: T) {\n    this.buffer.push(value);\n  }\n\n  get(index: number): T {\n    return this.buffer[index];\n  }\n\n  set(index: number, value: T) {\n    this.buffer[index] = value;\n  }\n\n  reverse() {\n    this.buffer.reverse();\n  }\n\n  toArray(): T[] {\n    return this.buffer;\n  }\n\n  toJSON(): T[] {\n    return this.buffer;\n  }\n}\n","// Libraries\nimport isNumber from 'lodash/isNumber';\nimport isString from 'lodash/isString';\nimport isBoolean from 'lodash/isBoolean';\n\n// Types\nimport {\n  DataFrame,\n  Field,\n  FieldConfig,\n  TimeSeries,\n  FieldType,\n  TableData,\n  Column,\n  GraphSeriesXY,\n  TimeSeriesValue,\n  FieldDTO,\n  DataFrameDTO,\n} from '../types/index';\nimport { isDateTime } from '../datetime/moment_wrapper';\nimport { deprecationWarning } from '../utils/deprecationWarning';\nimport { ArrayVector } from '../vector/ArrayVector';\nimport { MutableDataFrame } from './MutableDataFrame';\nimport { SortedVector } from '../vector/SortedVector';\n\nfunction convertTableToDataFrame(table: TableData): DataFrame {\n  const fields = table.columns.map(c => {\n    const { text, ...disp } = c;\n    return {\n      name: text, // rename 'text' to the 'name' field\n      config: (disp || {}) as FieldConfig,\n      values: new ArrayVector(),\n      type: FieldType.other,\n    };\n  });\n\n  for (const row of table.rows) {\n    for (let i = 0; i < fields.length; i++) {\n      fields[i].values.buffer.push(row[i]);\n    }\n  }\n\n  for (const f of fields) {\n    const t = guessFieldTypeForField(f);\n    if (t) {\n      f.type = t;\n    }\n  }\n\n  return {\n    fields,\n    refId: table.refId,\n    meta: table.meta,\n    name: table.name,\n    length: table.rows.length,\n  };\n}\n\nfunction convertTimeSeriesToDataFrame(timeSeries: TimeSeries): DataFrame {\n  const fields = [\n    {\n      name: timeSeries.target || 'Value',\n      type: FieldType.number,\n      config: {\n        unit: timeSeries.unit,\n      },\n      values: new ArrayVector<TimeSeriesValue>(),\n    },\n    {\n      name: 'Time',\n      type: FieldType.time,\n      config: {\n        unit: 'dateTimeAsIso',\n      },\n      values: new ArrayVector<number>(),\n    },\n  ];\n\n  for (const point of timeSeries.datapoints) {\n    fields[0].values.buffer.push(point[0]);\n    fields[1].values.buffer.push(point[1]);\n  }\n\n  return {\n    name: timeSeries.target,\n    labels: timeSeries.tags,\n    refId: timeSeries.refId,\n    meta: timeSeries.meta,\n    fields,\n    length: timeSeries.datapoints.length,\n  };\n}\n\n/**\n * This is added temporarily while we convert the LogsModel\n * to DataFrame.  See: https://github.com/grafana/grafana/issues/18528\n */\nfunction convertGraphSeriesToDataFrame(graphSeries: GraphSeriesXY): DataFrame {\n  const x = new ArrayVector();\n  const y = new ArrayVector();\n\n  for (let i = 0; i < graphSeries.data.length; i++) {\n    const row = graphSeries.data[i];\n    x.buffer.push(row[1]);\n    y.buffer.push(row[0]);\n  }\n\n  return {\n    name: graphSeries.label,\n    fields: [\n      {\n        name: graphSeries.label || 'Value',\n        type: FieldType.number,\n        config: {},\n        values: x,\n      },\n      {\n        name: 'Time',\n        type: FieldType.time,\n        config: {\n          unit: 'dateTimeAsIso',\n        },\n        values: y,\n      },\n    ],\n    length: x.buffer.length,\n  };\n}\n\nfunction convertJSONDocumentDataToDataFrame(timeSeries: TimeSeries): DataFrame {\n  const fields = [\n    {\n      name: timeSeries.target,\n      type: FieldType.other,\n      config: {\n        unit: timeSeries.unit,\n        filterable: (timeSeries as any).filterable,\n      },\n      values: new ArrayVector(),\n    },\n  ];\n\n  for (const point of timeSeries.datapoints) {\n    fields[0].values.buffer.push(point);\n  }\n\n  return {\n    name: timeSeries.target,\n    labels: timeSeries.tags,\n    refId: timeSeries.target,\n    meta: { json: true },\n    fields,\n    length: timeSeries.datapoints.length,\n  };\n}\n\n// PapaParse Dynamic Typing regex:\n// https://github.com/mholt/PapaParse/blob/master/papaparse.js#L998\nconst NUMBER = /^\\s*-?(\\d*\\.?\\d+|\\d+\\.?\\d*)(e[-+]?\\d+)?\\s*$/i;\n\n/**\n * Given a value this will guess the best column type\n *\n * TODO: better Date/Time support!  Look for standard date strings?\n */\nexport function guessFieldTypeFromValue(v: any): FieldType {\n  if (isNumber(v)) {\n    return FieldType.number;\n  }\n\n  if (isString(v)) {\n    if (NUMBER.test(v)) {\n      return FieldType.number;\n    }\n\n    if (v === 'true' || v === 'TRUE' || v === 'True' || v === 'false' || v === 'FALSE' || v === 'False') {\n      return FieldType.boolean;\n    }\n\n    return FieldType.string;\n  }\n\n  if (isBoolean(v)) {\n    return FieldType.boolean;\n  }\n\n  if (v instanceof Date || isDateTime(v)) {\n    return FieldType.time;\n  }\n\n  return FieldType.other;\n}\n\n/**\n * Looks at the data to guess the column type.  This ignores any existing setting\n */\nexport function guessFieldTypeForField(field: Field): FieldType | undefined {\n  // 1. Use the column name to guess\n  if (field.name) {\n    const name = field.name.toLowerCase();\n    if (name === 'date' || name === 'time') {\n      return FieldType.time;\n    }\n  }\n\n  // 2. Check the first non-null value\n  for (let i = 0; i < field.values.length; i++) {\n    const v = field.values.get(i);\n    if (v !== null) {\n      return guessFieldTypeFromValue(v);\n    }\n  }\n\n  // Could not find anything\n  return undefined;\n}\n\n/**\n * @returns a copy of the series with the best guess for each field type\n * If the series already has field types defined, they will be used\n */\nexport const guessFieldTypes = (series: DataFrame): DataFrame => {\n  for (let i = 0; i < series.fields.length; i++) {\n    if (!series.fields[i].type) {\n      // Somethign is missing a type return a modified copy\n      return {\n        ...series,\n        fields: series.fields.map(field => {\n          if (field.type && field.type !== FieldType.other) {\n            return field;\n          }\n          // Calculate a reasonable schema value\n          return {\n            ...field,\n            type: guessFieldTypeForField(field) || FieldType.other,\n          };\n        }),\n      };\n    }\n  }\n  // No changes necessary\n  return series;\n};\n\nexport const isTableData = (data: any): data is DataFrame => data && data.hasOwnProperty('columns');\n\nexport const isDataFrame = (data: any): data is DataFrame => data && data.hasOwnProperty('fields');\n\nexport const toDataFrame = (data: any): DataFrame => {\n  if (data.hasOwnProperty('fields')) {\n    // @deprecated -- remove in 6.5\n    if (data.hasOwnProperty('rows')) {\n      const v = new MutableDataFrame(data as DataFrameDTO);\n      const rows = data.rows as any[][];\n      for (let i = 0; i < rows.length; i++) {\n        v.appendRow(rows[i]);\n      }\n      deprecationWarning('DataFrame', '.rows', 'columnar format');\n      return v;\n    }\n\n    // DataFrameDTO does not have length\n    if (data.hasOwnProperty('length')) {\n      return data as DataFrame;\n    }\n\n    // This will convert the array values into Vectors\n    return new MutableDataFrame(data as DataFrameDTO);\n  }\n\n  // Handle legacy docs/json type\n  if (data.hasOwnProperty('type') && data.type === 'docs') {\n    return convertJSONDocumentDataToDataFrame(data);\n  }\n\n  if (data.hasOwnProperty('datapoints')) {\n    return convertTimeSeriesToDataFrame(data);\n  }\n\n  if (data.hasOwnProperty('data')) {\n    return convertGraphSeriesToDataFrame(data);\n  }\n\n  if (data.hasOwnProperty('columns')) {\n    return convertTableToDataFrame(data);\n  }\n\n  console.warn('Can not convert', data);\n  throw new Error('Unsupported data format');\n};\n\nexport const toLegacyResponseData = (frame: DataFrame): TimeSeries | TableData => {\n  const { fields } = frame;\n\n  const rowCount = frame.length;\n  const rows: any[][] = [];\n\n  for (let i = 0; i < rowCount; i++) {\n    const row: any[] = [];\n    for (let j = 0; j < fields.length; j++) {\n      row.push(fields[j].values.get(i));\n    }\n    rows.push(row);\n  }\n\n  if (fields.length === 2) {\n    let type = fields[1].type;\n    if (!type) {\n      type = guessFieldTypeForField(fields[1]) || FieldType.other;\n    }\n    if (type === FieldType.time) {\n      return {\n        alias: fields[0].name || frame.name,\n        target: fields[0].name || frame.name,\n        datapoints: rows,\n        unit: fields[0].config ? fields[0].config.unit : undefined,\n        refId: frame.refId,\n        meta: frame.meta,\n      } as TimeSeries;\n    }\n  }\n\n  if (frame.meta && frame.meta.json) {\n    return {\n      alias: fields[0].name || frame.name,\n      target: fields[0].name || frame.name,\n      datapoints: fields[0].values.toArray(),\n      filterable: fields[0].config ? fields[0].config.filterable : undefined,\n      type: 'docs',\n    } as TimeSeries;\n  }\n\n  return {\n    columns: fields.map(f => {\n      const { name, config } = f;\n      if (config) {\n        // keep unit etc\n        const { ...column } = config;\n        (column as Column).text = name;\n        return column as Column;\n      }\n      return { text: name };\n    }),\n    type: 'table',\n    refId: frame.refId,\n    meta: frame.meta,\n    rows,\n  };\n};\n\nexport function sortDataFrame(data: DataFrame, sortIndex?: number, reverse = false): DataFrame {\n  const field = data.fields[sortIndex!];\n  if (!field) {\n    return data;\n  }\n\n  // Natural order\n  const index: number[] = [];\n  for (let i = 0; i < data.length; i++) {\n    index.push(i);\n  }\n  const values = field.values;\n\n  // Numeric Comparison\n  let compare = (a: number, b: number) => {\n    const vA = values.get(a);\n    const vB = values.get(b);\n    return vA - vB; // works for numbers!\n  };\n\n  // String Comparison\n  if (field.type === FieldType.string) {\n    compare = (a: number, b: number) => {\n      const vA: string = values.get(a);\n      const vB: string = values.get(b);\n      return vA.localeCompare(vB);\n    };\n  }\n\n  // Run the sort function\n  index.sort(compare);\n  if (reverse) {\n    index.reverse();\n  }\n\n  // Return a copy that maps sorted values\n  return {\n    ...data,\n    fields: data.fields.map(f => {\n      return {\n        ...f,\n        values: new SortedVector(f.values, index),\n      };\n    }),\n  };\n}\n\n/**\n * Returns a copy with all values reversed\n */\nexport function reverseDataFrame(data: DataFrame): DataFrame {\n  return {\n    ...data,\n    fields: data.fields.map(f => {\n      const copy = [...f.values.toArray()];\n      copy.reverse();\n      return {\n        ...f,\n        values: new ArrayVector(copy),\n      };\n    }),\n  };\n}\n\nexport const getTimeField = (series: DataFrame): { timeField?: Field; timeIndex?: number } => {\n  for (let i = 0; i < series.fields.length; i++) {\n    if (series.fields[i].type === FieldType.time) {\n      return {\n        timeField: series.fields[i],\n        timeIndex: i,\n      };\n    }\n  }\n  return {};\n};\n\n/**\n * Wrapper to get an array from each field value\n */\nexport function getDataFrameRow(data: DataFrame, row: number): any[] {\n  const values: any[] = [];\n  for (const field of data.fields) {\n    values.push(field.values.get(row));\n  }\n  return values;\n}\n\n/**\n * Returns a copy that does not include functions\n */\nexport function toDataFrameDTO(data: DataFrame): DataFrameDTO {\n  const fields: FieldDTO[] = data.fields.map(f => {\n    return {\n      name: f.name,\n      type: f.type,\n      config: f.config,\n      values: f.values.toArray(),\n    };\n  });\n\n  return {\n    fields,\n    refId: data.refId,\n    meta: data.meta,\n    name: data.name,\n    labels: data.labels,\n  };\n}\n","/* Flot plugin for stacking data sets rather than overlyaing them.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nThe plugin assumes the data is sorted on x (or y if stacking horizontally).\nFor line charts, it is assumed that if a line has an undefined gap (from a\nnull point), then the line above it should have the same gap - insert zeros\ninstead of \"null\" if you want another behaviour. This also holds for the start\nand end of the chart. Note that stacking a mix of positive and negative values\nin most instances doesn't make sense (so it looks weird).\n\nTwo or more series are stacked when their \"stack\" attribute is set to the same\nkey (which can be any number or string or just \"true\"). To specify the default\nstack, you can set the stack option like this:\n\n    series: {\n        stack: null/false, true, or a key (number/string)\n    }\n\nYou can also specify it for a single series, like this:\n\n    $.plot( $(\"#placeholder\"), [{\n        data: [ ... ],\n        stack: true\n    }])\n\nThe stacking order is determined by the order of the data series in the array\n(later series end up on top of the previous).\n\nInternally, the plugin modifies the datapoints in each series, adding an\noffset to the y value. For line series, extra data points are inserted through\ninterpolation. If there's a second y value, it's also adjusted (e.g for bar\ncharts or filled areas).\n\n*/\n\n(function ($) {\n    var options = {\n        series: { stack: null } // or number/string\n    };\n\n    function init(plot) {\n        function findMatchingSeries(s, allseries) {\n            var res = null;\n            for (var i = 0; i < allseries.length; ++i) {\n                if (s == allseries[i])\n                    break;\n\n                if (allseries[i].stack == s.stack)\n                    res = allseries[i];\n            }\n\n            return res;\n        }\n\n        function stackData(plot, s, datapoints) {\n            if (s.stack == null || s.stack === false)\n                return;\n\n            var other = findMatchingSeries(s, plot.getData());\n            if (!other)\n                return;\n\n            var ps = datapoints.pointsize,\n                points = datapoints.points,\n                otherps = other.datapoints.pointsize,\n                otherpoints = other.datapoints.points,\n                newpoints = [],\n                px, py, intery, qx, qy, bottom,\n                withlines = s.lines.show,\n                horizontal = s.bars.horizontal,\n                withbottom = ps > 2 && (horizontal ? datapoints.format[2].x : datapoints.format[2].y),\n                withsteps = withlines && s.lines.steps,\n                keyOffset = horizontal ? 1 : 0,\n                accumulateOffset = horizontal ? 0 : 1,\n                i = 0, j = 0, l, m;\n\n            while (true) {\n                if (i >= points.length && j >= otherpoints.length)\n                    break;\n\n                l = newpoints.length;\n\n                if (i < points.length && points[i] == null) {\n                    // copy gaps\n                    for (m = 0; m < ps; ++m)\n                        newpoints.push(points[i + m]);\n                    i += ps;\n                }\n                else if (i >= points.length) {\n                    // take the remaining points from the previous series\n                    for (m = 0; m < ps; ++m)\n                        newpoints.push(otherpoints[j + m]);\n                    if (withbottom)\n                        newpoints[l + 2] = otherpoints[j + accumulateOffset];\n                    j += otherps;\n                }\n                else if (j >= otherpoints.length) {\n                    // take the remaining points from the current series\n                    for (m = 0; m < ps; ++m)\n                        newpoints.push(points[i + m]);\n                    i += ps;\n                }\n                else if (j < otherpoints.length && otherpoints[j] == null) {\n                    // ignore point\n                    j += otherps;\n                }\n                else {\n                    // cases where we actually got two points\n                    px = points[i + keyOffset];\n                    py = points[i + accumulateOffset];\n                    qx = otherpoints[j + keyOffset];\n                    qy = otherpoints[j + accumulateOffset];\n                    bottom = 0;\n\n                    if (px == qx) {\n                        for (m = 0; m < ps; ++m)\n                            newpoints.push(points[i + m]);\n\n                        newpoints[l + accumulateOffset] += qy;\n                        bottom = qy;\n\n                        i += ps;\n                        j += otherps;\n                    }\n                    else if (px > qx) {\n                        // take the point from the previous series so that next series will correctly stack\n                        if (i == 0) {\n                            for (m = 0; m < ps; ++m)\n                                newpoints.push(otherpoints[j + m]);\n                            bottom = qy;\n                        }\n                        // we got past point below, might need to\n                        // insert interpolated extra point\n                        if (i > 0 && points[i - ps] != null) {\n                            intery = py + (points[i - ps + accumulateOffset] - py) * (qx - px) / (points[i - ps + keyOffset] - px);\n                            newpoints.push(qx);\n                            newpoints.push(intery + qy);\n                            for (m = 2; m < ps; ++m)\n                                newpoints.push(points[i + m]);\n                            bottom = qy;\n                        }\n\n                        j += otherps;\n                    }\n                    else { // px < qx\n                        for (m = 0; m < ps; ++m)\n                            newpoints.push(points[i + m]);\n\n                        // we might be able to interpolate a point below,\n                        // this can give us a better y\n                        if (j > 0 && otherpoints[j - otherps] != null)\n                            bottom = qy + (otherpoints[j - otherps + accumulateOffset] - qy) * (px - qx) / (otherpoints[j - otherps + keyOffset] - qx);\n\n                        newpoints[l + accumulateOffset] += bottom;\n\n                        i += ps;\n                    }\n\n                    fromgap = false;\n\n                    if (l != newpoints.length && withbottom)\n                        newpoints[l + 2] = bottom;\n                }\n\n                // maintain the line steps invariant\n                if (withsteps && l != newpoints.length && l > 0\n                    && newpoints[l] != null\n                    && newpoints[l] != newpoints[l - ps]\n                    && newpoints[l + 1] != newpoints[l - ps + 1]) {\n                    for (m = 0; m < ps; ++m)\n                        newpoints[l + ps + m] = newpoints[l + m];\n                    newpoints[l + 1] = newpoints[l - ps + 1];\n                }\n            }\n\n            datapoints.points = newpoints;\n        }\n\n        plot.hooks.processDatapoints.push(stackData);\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: 'stack',\n        version: '1.2'\n    });\n})(jQuery);\n","var path = 'public/app/features/datasources/partials/http_settings.html';\nvar html = \"<div class=gf-form-group>\\n\\t<h3 class=page-heading>HTTP</h3>\\n  <div class=gf-form-group>\\n    <div class=gf-form-inline>\\n      <div class=\\\"gf-form max-width-30\\\">\\n        <span class=\\\"gf-form-label width-10\\\">URL</span>\\n        <input class=\\\"gf-form-input gf-form-input--has-help-icon\\\" type=text ng-model=current.url placeholder={{suggestUrl}} bs-typeahead=getSuggestUrls min-length=0 ng-pattern=\\\"/^(ftp|http|https):\\\\/\\\\/(\\\\w+:{0,1}\\\\w*@)?(\\\\S+)(:[0-9]+)?(\\\\/|\\\\/([\\\\w#!:.?+=&%@!\\\\-\\\\/]))?$/\\\" required>\\n        <info-popover mode=right-absolute>\\n          <p>Specify a complete HTTP URL (for example http://your_server:8080)</p>\\n          <span ng-show=\\\"current.access === 'direct'\\\">\\n            Your access method is <em>Browser</em>, this means the URL\\n            needs to be accessible from the browser.\\n          </span>\\n          <span ng-show=\\\"current.access === 'proxy'\\\">\\n            Your access method is <em>Server</em>, this means the URL\\n            needs to be accessible from the grafana backend/server.\\n          </span>\\n        </info-popover>\\n      </div>\\n\\t\\t</div>\\n\\n\\t\\t<div class=gf-form-inline ng-if=showAccessOption>\\n\\t\\t\\t<div class=\\\"gf-form max-width-30\\\">\\n\\t\\t\\t\\t<span class=\\\"gf-form-label width-10\\\">Access</span>\\n\\t\\t\\t\\t<div class=\\\"gf-form-select-wrapper max-width-24\\\">\\n\\t\\t\\t\\t\\t<select class=gf-form-input ng-model=current.access ng-options=\\\"f.key as f.value for f in [{key: 'proxy', value: 'Server (Default)'}, { key: 'direct', value: 'Browser'}]\\\"></select>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t<label class=\\\"gf-form-label query-keyword pointer\\\" ng-click=toggleAccessHelp()>\\n\\t\\t\\t\\t\\tHelp&nbsp;\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-caret-down\\\" ng-show=showAccessHelp></i>\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-caret-right\\\" ng-hide=showAccessHelp>&nbsp;</i>\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"grafana-info-box m-t-2\\\" ng-show=showAccessHelp>\\n\\t\\t\\t<p>\\n\\t\\t\\tAccess mode controls how requests to the data source will be handled.\\n\\t\\t\\t<strong><i>Server</i></strong> should be the preferred way if nothing else stated.\\n\\t\\t\\t</p>\\n\\t\\t\\t<div class=alert-title>Server access mode (Default):</div>\\n\\t\\t\\t<p>\\n\\t\\t\\tAll requests will be made from the browser to Grafana backend/server which in turn will forward the requests to the data source\\n\\t\\t\\tand by that circumvent possible Cross-Origin Resource Sharing (CORS) requirements.\\n\\t\\t\\tThe URL needs to be accessible from the grafana backend/server if you select this access mode.\\n\\t\\t\\t</p>\\n\\t\\t\\t<div class=alert-title>Browser access mode:</div>\\n\\t\\t\\t<p>\\n\\t\\t\\tAll requests will be made from the browser directly to the data source and may be subject to\\n\\t\\t\\tCross-Origin Resource Sharing (CORS) requirements. The URL needs to be accessible from the browser if you select this\\n\\t\\t\\taccess mode.\\n\\t\\t</p></div>\\n\\n\\t\\t<div class=gf-form-inline ng-if=\\\"current.access=='proxy'\\\">\\n\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t<span class=\\\"gf-form-label width-10\\\">Whitelisted Cookies</span>\\n\\t\\t\\t\\t<bootstrap-tagsinput ng-model=current.jsonData.keepCookies width-class=\\\"width-20 gf-form-input--has-help-icon\\\" tagclass=\\\"label label-tag\\\" placeholder=\\\"Add Name\\\">\\n\\t\\t\\t\\t</bootstrap-tagsinput>\\n\\t\\t\\t\\t<info-popover mode=right-absolute>\\n\\t\\t\\t\\t\\tGrafana Proxy deletes forwarded cookies by default. Specify cookies by name that should be forwarded to the data source.\\n\\t\\t\\t\\t</info-popover>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<h3 class=page-heading>Auth</h3>\\n\\t<div class=gf-form-group>\\n\\t\\t<div class=gf-form-inline>\\n\\t\\t\\t<gf-form-checkbox class=gf-form label=\\\"Basic Auth\\\" checked=current.basicAuth label-class=width-13 switch-class=max-width-6></gf-form-checkbox>\\n\\t\\t\\t<gf-form-checkbox class=gf-form label=\\\"With Credentials\\\" tooltip=\\\"Whether credentials such as cookies or auth\\n\\t\\t\\t  headers should be sent with cross-site requests.\\\" checked=current.withCredentials label-class=width-13 switch-class=max-width-6></gf-form-checkbox>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form-inline>\\n\\t\\t\\t<gf-form-checkbox class=gf-form ng-if=\\\"current.access=='proxy'\\\" label=\\\"TLS Client Auth\\\" label-class=width-13 checked=current.jsonData.tlsAuth switch-class=max-width-6></gf-form-checkbox>\\n\\t\\t\\t<gf-form-checkbox class=gf-form ng-if=\\\"current.access=='proxy'\\\" label=\\\"With CA Cert\\\" tooltip=\\\"Needed for\\n\\t\\t\\t  verifing self-signed TLS Certs\\\" checked=current.jsonData.tlsAuthWithCACert label-class=width-13 switch-class=max-width-6></gf-form-checkbox>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form-inline>\\n\\t\\t\\t<gf-form-checkbox class=gf-form ng-if=\\\"current.access=='proxy'\\\" label=\\\"Skip TLS Verify\\\" label-class=width-13 checked=current.jsonData.tlsSkipVerify switch-class=max-width-6></gf-form-checkbox>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form-inline>\\n\\t\\t\\t<gf-form-checkbox class=gf-form ng-if=\\\"current.access=='proxy'\\\" label=\\\"Forward OAuth Identity\\\" label-class=width-13 tooltip=\\\"Forward the user's upstream OAuth identity to the datasource (Their access token gets passed along).\\\" checked=current.jsonData.oauthPassThru switch-class=max-width-6></gf-form-checkbox>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=gf-form-group ng-if=current.basicAuth>\\n\\t\\t<h6>Basic Auth Details</h6>\\n\\t\\t<div class=gf-form ng-if=current.basicAuth>\\n\\t\\t\\t<span class=\\\"gf-form-label width-10\\\">User</span>\\n\\t\\t\\t<input class=\\\"gf-form-input max-width-21\\\" type=text ng-model=current.basicAuthUser placeholder=user required>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n      <secret-form-field isconfigured=\\\"current.basicAuthPassword || current.secureJsonFields.basicAuthPassword\\\" value=\\\"current.secureJsonData.basicAuthPassword || ''\\\" on-reset=onBasicAuthPasswordReset on-change=onBasicAuthPasswordChange inputwidth=18 labelwidth=10 />\\n\\t\\t</div>\\n\\t</div>\\n\\n<datasource-tls-auth-settings current=current ng-if=\\\"(current.jsonData.tlsAuth || current.jsonData.tlsAuthWithCACert) && current.access=='proxy'\\\">\\n</datasource-tls-auth-settings>\\n</div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { EventEmitter } from 'eventemitter3';\n\nexport class Emitter {\n  private emitter: EventEmitter;\n\n  constructor() {\n    this.emitter = new EventEmitter();\n  }\n\n  emit(name: string, data?: any) {\n    this.emitter.emit(name, data);\n  }\n\n  on(name: string, handler: (payload?: any) => void, scope?: any) {\n    this.emitter.on(name, handler);\n\n    if (scope) {\n      const unbind = scope.$on('$destroy', () => {\n        this.emitter.off(name, handler);\n        unbind();\n      });\n    }\n  }\n\n  removeAllListeners(evt?: string) {\n    this.emitter.removeAllListeners(evt);\n  }\n\n  off(name: string, handler: (payload?: any) => void) {\n    this.emitter.off(name, handler);\n  }\n\n  getEventCount(): number {\n    return (this.emitter as any)._eventsCount;\n  }\n}\n","export type KeyValue<T = any> = { [s: string]: T };\n\nexport enum LoadingState {\n  NotStarted = 'NotStarted',\n  Loading = 'Loading',\n  Streaming = 'Streaming',\n  Done = 'Done',\n  Error = 'Error',\n}\n\nexport interface QueryResultMeta {\n  [key: string]: any;\n\n  // Match the result to the query\n  requestId?: string;\n\n  // Used in Explore for highlighting\n  searchWords?: string[];\n\n  // Used in Explore to show limit applied to search result\n  limit?: number;\n}\n\nexport interface QueryResultBase {\n  /**\n   * Matches the query target refId\n   */\n  refId?: string;\n\n  /**\n   * Used by some backend datasources to communicate back info about the execution (generated sql, timing)\n   */\n  meta?: QueryResultMeta;\n}\n\nexport interface Labels {\n  [key: string]: string;\n}\n\nexport interface Column {\n  text: string; // For a Column, the 'text' is the field name\n  filterable?: boolean;\n  unit?: string;\n}\n\nexport interface TableData extends QueryResultBase {\n  name?: string;\n  columns: Column[];\n  rows: any[][];\n  type?: string;\n}\n\nexport type TimeSeriesValue = number | null;\n\nexport type TimeSeriesPoints = TimeSeriesValue[][];\n\nexport interface TimeSeries extends QueryResultBase {\n  target: string;\n  datapoints: TimeSeriesPoints;\n  unit?: string;\n  tags?: Labels;\n}\n\nexport enum NullValueMode {\n  Null = 'null',\n  Ignore = 'connected',\n  AsZero = 'null as zero',\n}\n\nexport interface AnnotationEvent {\n  id?: string;\n  annotation?: any;\n  dashboardId?: number;\n  panelId?: number;\n  userId?: number;\n  login?: string;\n  email?: string;\n  avatarUrl?: string;\n  time?: number;\n  timeEnd?: number;\n  isRegion?: boolean;\n  title?: string;\n  text?: string;\n  type?: string;\n  tags?: string[];\n\n  // Currently used to merge annotations from alerts and dashboard\n  source?: any; // source.type === 'dashboard'\n}\n","import React, { useContext } from 'react';\nimport { LegendComponentProps, LegendItem } from './Legend';\nimport { InlineList } from '../List/InlineList';\nimport { List } from '../List/List';\nimport { css, cx } from 'emotion';\nimport { ThemeContext } from '../../themes/ThemeContext';\nimport { stylesFactory } from '../../themes';\nimport { GrafanaTheme } from '../../types';\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => ({\n  item: css`\n    padding-left: 10px;\n    display: flex;\n    font-size: ${theme.typography.size.sm};\n    white-space: nowrap;\n  `,\n  wrapper: css`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    width: 100%;\n  `,\n  section: css`\n    display: flex;\n  `,\n  sectionRight: css`\n    justify-content: flex-end;\n    flex-grow: 1;\n  `,\n}));\n\nexport const LegendList: React.FunctionComponent<LegendComponentProps> = ({\n  items,\n  itemRenderer,\n  placement,\n  className,\n}) => {\n  const theme = useContext(ThemeContext);\n  const styles = getStyles(theme);\n\n  const renderItem = (item: LegendItem, index: number) => {\n    return <span className={styles.item}>{itemRenderer ? itemRenderer(item, index) : item.label}</span>;\n  };\n\n  const getItemKey = (item: LegendItem) => `${item.label}`;\n\n  return placement === 'under' ? (\n    <div className={cx(styles.wrapper, className)}>\n      <div className={styles.section}>\n        <InlineList items={items.filter(item => item.yAxis === 1)} renderItem={renderItem} getItemKey={getItemKey} />\n      </div>\n      <div className={cx(styles.section, styles.sectionRight)}>\n        <InlineList items={items.filter(item => item.yAxis !== 1)} renderItem={renderItem} getItemKey={getItemKey} />\n      </div>\n    </div>\n  ) : (\n    <List items={items} renderItem={renderItem} getItemKey={getItemKey} className={className} />\n  );\n};\n\nLegendList.displayName = 'LegendList';\n","import { getFlotTickDecimals } from 'app/core/utils/ticks';\nimport _ from 'lodash';\nimport { getValueFormat, ValueFormatter } from '@grafana/ui';\nimport { stringToJsRegex, DecimalCount } from '@grafana/data';\n\nfunction matchSeriesOverride(aliasOrRegex: string, seriesAlias: string) {\n  if (!aliasOrRegex) {\n    return false;\n  }\n\n  if (aliasOrRegex[0] === '/') {\n    const regex = stringToJsRegex(aliasOrRegex);\n    return seriesAlias.match(regex) != null;\n  }\n\n  return aliasOrRegex === seriesAlias;\n}\n\nfunction translateFillOption(fill: number) {\n  return fill === 0 ? 0.001 : fill / 10;\n}\n\n/**\n * Calculate decimals for legend and update values for each series.\n * @param data series data\n * @param panel\n * @param height\n */\nexport function updateLegendValues(data: TimeSeries[], panel: any, height: number) {\n  for (let i = 0; i < data.length; i++) {\n    const series = data[i];\n    const yaxes = panel.yaxes;\n    const seriesYAxis = series.yaxis || 1;\n    const axis = yaxes[seriesYAxis - 1];\n    const formatter = getValueFormat(axis.format);\n\n    // decimal override\n    if (_.isNumber(panel.decimals)) {\n      series.updateLegendValues(formatter, panel.decimals, null);\n    } else if (_.isNumber(axis.decimals)) {\n      series.updateLegendValues(formatter, axis.decimals + 1, null);\n    } else {\n      // auto decimals\n      // legend and tooltip gets one more decimal precision\n      // than graph legend ticks\n      const { datamin, datamax } = getDataMinMax(data);\n      const { tickDecimals, scaledDecimals } = getFlotTickDecimals(datamin, datamax, axis, height);\n      const tickDecimalsPlusOne = (tickDecimals || -1) + 1;\n      series.updateLegendValues(formatter, tickDecimalsPlusOne, scaledDecimals + 2);\n    }\n  }\n}\n\nexport function getDataMinMax(data: TimeSeries[]) {\n  let datamin = null;\n  let datamax = null;\n\n  for (const series of data) {\n    if (datamax === null || datamax < series.stats.max) {\n      datamax = series.stats.max;\n    }\n    if (datamin === null || datamin > series.stats.min) {\n      datamin = series.stats.min;\n    }\n  }\n\n  return { datamin, datamax };\n}\n\n/**\n * @deprecated: This class should not be used in new panels\n *\n * Use DataFrame and helpers instead\n */\nexport default class TimeSeries {\n  datapoints: any;\n  id: string;\n  // Represents index of original data frame in the quey response\n  dataFrameIndex: number;\n  // Represents index of field in the data frame\n  fieldIndex: number;\n  label: string;\n  alias: string;\n  aliasEscaped: string;\n  color: string;\n  valueFormater: any;\n  stats: any;\n  legend: boolean;\n  hideTooltip: boolean;\n  allIsNull: boolean;\n  allIsZero: boolean;\n  decimals: number;\n  scaledDecimals: number;\n  hasMsResolution: boolean;\n  isOutsideRange: boolean;\n\n  lines: any;\n  dashes: any;\n  bars: any;\n  points: any;\n  yaxis: any;\n  zindex: any;\n  stack: any;\n  nullPointMode: any;\n  fillBelowTo: any;\n  transform: any;\n  flotpairs: any;\n  unit: any;\n\n  constructor(opts: any) {\n    this.datapoints = opts.datapoints;\n    this.label = opts.alias;\n    this.id = opts.alias;\n    this.alias = opts.alias;\n    this.aliasEscaped = _.escape(opts.alias);\n    this.color = opts.color;\n    this.bars = { fillColor: opts.color };\n    this.valueFormater = getValueFormat('none');\n    this.stats = {};\n    this.legend = true;\n    this.unit = opts.unit;\n    this.dataFrameIndex = opts.dataFrameIndex;\n    this.fieldIndex = opts.fieldIndex;\n    this.hasMsResolution = this.isMsResolutionNeeded();\n  }\n\n  applySeriesOverrides(overrides: any[]) {\n    this.lines = {};\n    this.dashes = {\n      dashLength: [],\n    };\n    this.points = {};\n    this.yaxis = 1;\n    this.zindex = 0;\n    this.nullPointMode = null;\n    delete this.stack;\n    delete this.bars.show;\n\n    for (let i = 0; i < overrides.length; i++) {\n      const override = overrides[i];\n      if (!matchSeriesOverride(override.alias, this.alias)) {\n        continue;\n      }\n      if (override.lines !== void 0) {\n        this.lines.show = override.lines;\n      }\n      if (override.dashes !== void 0) {\n        this.dashes.show = override.dashes;\n        this.lines.lineWidth = 0;\n      }\n      if (override.points !== void 0) {\n        this.points.show = override.points;\n      }\n      if (override.bars !== void 0) {\n        this.bars.show = override.bars;\n      }\n      if (override.fill !== void 0) {\n        this.lines.fill = translateFillOption(override.fill);\n      }\n      if (override.stack !== void 0) {\n        this.stack = override.stack;\n      }\n      if (override.linewidth !== void 0) {\n        this.lines.lineWidth = this.dashes.show ? 0 : override.linewidth;\n        this.dashes.lineWidth = override.linewidth;\n      }\n      if (override.dashLength !== void 0) {\n        this.dashes.dashLength[0] = override.dashLength;\n      }\n      if (override.spaceLength !== void 0) {\n        this.dashes.dashLength[1] = override.spaceLength;\n      }\n      if (override.nullPointMode !== void 0) {\n        this.nullPointMode = override.nullPointMode;\n      }\n      if (override.pointradius !== void 0) {\n        this.points.radius = override.pointradius;\n      }\n      if (override.steppedLine !== void 0) {\n        this.lines.steps = override.steppedLine;\n      }\n      if (override.zindex !== void 0) {\n        this.zindex = override.zindex;\n      }\n      if (override.fillBelowTo !== void 0) {\n        this.fillBelowTo = override.fillBelowTo;\n      }\n      if (override.color !== void 0) {\n        this.setColor(override.color);\n      }\n      if (override.transform !== void 0) {\n        this.transform = override.transform;\n      }\n      if (override.legend !== void 0) {\n        this.legend = override.legend;\n      }\n      if (override.hideTooltip !== void 0) {\n        this.hideTooltip = override.hideTooltip;\n      }\n\n      if (override.yaxis !== void 0) {\n        this.yaxis = override.yaxis;\n      }\n    }\n  }\n\n  getFlotPairs(fillStyle: string) {\n    const result = [];\n\n    this.stats.total = 0;\n    this.stats.max = -Number.MAX_VALUE;\n    this.stats.min = Number.MAX_VALUE;\n    this.stats.logmin = Number.MAX_VALUE;\n    this.stats.avg = null;\n    this.stats.current = null;\n    this.stats.first = null;\n    this.stats.delta = 0;\n    this.stats.diff = null;\n    this.stats.range = null;\n    this.stats.timeStep = Number.MAX_VALUE;\n    this.allIsNull = true;\n    this.allIsZero = true;\n\n    const ignoreNulls = fillStyle === 'connected';\n    const nullAsZero = fillStyle === 'null as zero';\n    let currentTime;\n    let currentValue;\n    let nonNulls = 0;\n    let previousTime;\n    let previousValue = 0;\n    let previousDeltaUp = true;\n\n    for (let i = 0; i < this.datapoints.length; i++) {\n      currentValue = this.datapoints[i][0];\n      currentTime = this.datapoints[i][1];\n\n      // Due to missing values we could have different timeStep all along the series\n      // so we have to find the minimum one (could occur with aggregators such as ZimSum)\n      if (previousTime !== undefined) {\n        const timeStep = currentTime - previousTime;\n        if (timeStep < this.stats.timeStep) {\n          this.stats.timeStep = timeStep;\n        }\n      }\n      previousTime = currentTime;\n\n      if (currentValue === null) {\n        if (ignoreNulls) {\n          continue;\n        }\n        if (nullAsZero) {\n          currentValue = 0;\n        }\n      }\n\n      if (currentValue !== null) {\n        if (_.isNumber(currentValue)) {\n          this.stats.total += currentValue;\n          this.allIsNull = false;\n          nonNulls++;\n        }\n\n        if (currentValue > this.stats.max) {\n          this.stats.max = currentValue;\n        }\n\n        if (currentValue < this.stats.min) {\n          this.stats.min = currentValue;\n        }\n\n        if (this.stats.first === null) {\n          this.stats.first = currentValue;\n        } else {\n          if (previousValue > currentValue) {\n            // counter reset\n            previousDeltaUp = false;\n            if (i === this.datapoints.length - 1) {\n              // reset on last\n              this.stats.delta += currentValue;\n            }\n          } else {\n            if (previousDeltaUp) {\n              this.stats.delta += currentValue - previousValue; // normal increment\n            } else {\n              this.stats.delta += currentValue; // account for counter reset\n            }\n            previousDeltaUp = true;\n          }\n        }\n        previousValue = currentValue;\n\n        if (currentValue < this.stats.logmin && currentValue > 0) {\n          this.stats.logmin = currentValue;\n        }\n\n        if (currentValue !== 0) {\n          this.allIsZero = false;\n        }\n      }\n\n      result.push([currentTime, currentValue]);\n    }\n\n    if (this.stats.max === -Number.MAX_VALUE) {\n      this.stats.max = null;\n    }\n    if (this.stats.min === Number.MAX_VALUE) {\n      this.stats.min = null;\n    }\n\n    if (result.length && !this.allIsNull) {\n      this.stats.avg = this.stats.total / nonNulls;\n      this.stats.current = result[result.length - 1][1];\n      if (this.stats.current === null && result.length > 1) {\n        this.stats.current = result[result.length - 2][1];\n      }\n    }\n    if (this.stats.max !== null && this.stats.min !== null) {\n      this.stats.range = this.stats.max - this.stats.min;\n    }\n    if (this.stats.current !== null && this.stats.first !== null) {\n      this.stats.diff = this.stats.current - this.stats.first;\n    }\n\n    this.stats.count = result.length;\n    return result;\n  }\n\n  updateLegendValues(formater: ValueFormatter, decimals: DecimalCount, scaledDecimals: DecimalCount) {\n    this.valueFormater = formater;\n    this.decimals = decimals;\n    this.scaledDecimals = scaledDecimals;\n  }\n\n  formatValue(value: number) {\n    if (!_.isFinite(value)) {\n      value = null; // Prevent NaN formatting\n    }\n    return this.valueFormater(value, this.decimals, this.scaledDecimals);\n  }\n\n  isMsResolutionNeeded() {\n    for (let i = 0; i < this.datapoints.length; i++) {\n      if (this.datapoints[i][1] !== null && this.datapoints[i][1] !== undefined) {\n        const timestamp = this.datapoints[i][1].toString();\n        if (timestamp.length === 13 && timestamp % 1000 !== 0) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  hideFromLegend(options: any) {\n    if (options.hideEmpty && this.allIsNull) {\n      return true;\n    }\n    // ignore series excluded via override\n    if (!this.legend) {\n      return true;\n    }\n\n    // ignore zero series\n    if (options.hideZero && this.allIsZero) {\n      return true;\n    }\n\n    return false;\n  }\n\n  setColor(color: string) {\n    this.color = color;\n    this.bars.fillColor = color;\n  }\n}\n","var path = 'public/app/features/admin/partials/admin_home.html';\nvar html = \"<page-header model=ctrl.navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\">\\n\\n  <div class=\\\"grafana-info-box span8\\\">\\n    Grafana is a multi-tenant system where most can be configured per organization. These\\n    admin pages are for server admins where you can manage orgs, & all users across all orgs.\\n  </div>\\n\\n</div>\\n\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/datasource/mssql/partials/config.html';\nvar html = \"\\n<h3 class=page-heading>MSSQL Connection</h3>\\n\\n<div class=gf-form-group>\\n\\t<div class=\\\"gf-form max-width-30\\\">\\n\\t\\t<span class=\\\"gf-form-label width-7\\\">Host</span>\\n\\t\\t<input type=text class=gf-form-input ng-model=ctrl.current.url placeholder=localhost:1433 bs-typeahead=\\\"{{['localhost', 'localhost:1433']}}\\\" required>\\n\\t</div>\\n\\n\\t<div class=\\\"gf-form max-width-30\\\">\\n\\t\\t<span class=\\\"gf-form-label width-7\\\">Database</span>\\n\\t\\t<input type=text class=gf-form-input ng-model=ctrl.current.database placeholder=\\\"database name\\\" required>\\n\\t</div>\\n\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=\\\"gf-form max-width-15\\\">\\n\\t\\t\\t<span class=\\\"gf-form-label width-7\\\">User</span>\\n\\t\\t\\t<input type=text class=gf-form-input ng-model=ctrl.current.user placeholder=user>\\n\\t\\t</div>\\n    <div class=gf-form>\\n      <secret-form-field isconfigured=ctrl.current.secureJsonFields.password value=ctrl.current.secureJsonData.password on-reset=ctrl.onPasswordReset on-change=ctrl.onPasswordChange inputwidth=9 />\\n    </div>\\n\\t</div>\\n\\n\\t<div class=gf-form>\\n\\t\\t<label class=\\\"gf-form-label width-7\\\">Encrypt</label>\\n\\t\\t<div class=\\\"gf-form-select-wrapper max-width-15 gf-form-select-wrapper--has-help-icon\\\">\\n\\t\\t\\t<select class=gf-form-input ng-model=ctrl.current.jsonData.encrypt ng-options=\\\"mode for mode in ['disable', 'false', 'true']\\\" ng-init=ctrl.current.jsonData.encrypt></select>\\n\\t\\t\\t<info-popover mode=right-absolute>\\n\\t\\t\\t\\tDetermines whether or to which extent a secure SSL TCP/IP connection will be negotiated with the server.\\n\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t<li><i>disable</i> - Data sent between client and server is not encrypted.</li>\\n\\t\\t\\t\\t\\t<li><i>false</i> - Data sent between client and server is not encrypted beyond the login packet. (default)</li>\\n\\t\\t\\t\\t\\t<li><i>true</i> - Data sent between client and server is encrypted.</li>\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\tIf you're using an older version of Microsoft SQL Server like 2008 and 2008R2 you may need to disable encryption to be able to connect.\\n\\t\\t\\t</info-popover>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<b>Connection limits</b>\\n\\n<div class=gf-form-group>\\n\\t<div class=\\\"gf-form max-width-15\\\">\\n\\t\\t<span class=\\\"gf-form-label width-7\\\">Max open</span>\\n\\t\\t<input type=number min=0 class=\\\"gf-form-input gf-form-input--has-help-icon\\\" ng-model=ctrl.current.jsonData.maxOpenConns placeholder=unlimited>\\n\\t\\t<info-popover mode=right-absolute>\\n\\t\\t\\tThe maximum number of open connections to the database. If <i>Max idle connections</i> is greater than 0 and the\\n\\t\\t\\t<i>Max open connections</i> is less than <i>Max idle connections</i>, then <i>Max idle connections</i> will be\\n\\t\\t\\treduced to match the <i>Max open connections</i> limit. If set to 0, there is no limit on the number of open\\n\\t\\t\\tconnections.\\n\\t\\t</info-popover>\\n\\t</div>\\n\\t<div class=\\\"gf-form max-width-15\\\">\\n\\t\\t<span class=\\\"gf-form-label width-7\\\">Max idle</span>\\n\\t\\t<input type=number min=0 class=\\\"gf-form-input gf-form-input--has-help-icon\\\" ng-model=ctrl.current.jsonData.maxIdleConns placeholder=2>\\n\\t\\t<info-popover mode=right-absolute>\\n\\t\\t\\tThe maximum number of connections in the idle connection pool. If <i>Max open connections</i> is greater than 0 but\\n\\t\\t\\tless than the <i>Max idle connections</i>, then the <i>Max idle connections</i> will be reduced to match the\\n\\t\\t\\t<i>Max open connections</i> limit. If set to 0, no idle connections are retained.\\n\\t\\t</info-popover>\\n\\t</div>\\n\\t<div class=\\\"gf-form max-width-15\\\">\\n\\t\\t<span class=\\\"gf-form-label width-7\\\">Max lifetime</span>\\n\\t\\t<input type=number min=0 class=\\\"gf-form-input gf-form-input--has-help-icon\\\" ng-model=ctrl.current.jsonData.connMaxLifetime placeholder=14400>\\n\\t\\t<info-popover mode=right-absolute>\\n\\t\\t\\tThe maximum amount of time in seconds a connection may be reused. If set to 0, connections are reused forever.\\n\\t\\t</info-popover>\\n\\t</div>\\n</div>\\n\\n<h3 class=page-heading>MSSQL details</h3>\\n\\n<div class=gf-form-group>\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=\\\"gf-form-label width-9\\\">Min time interval</span>\\n\\t\\t\\t<input type=text class=\\\"gf-form-input width-6 gf-form-input--has-help-icon\\\" ng-model=ctrl.current.jsonData.timeInterval spellcheck=false placeholder=1m ng-pattern=/^\\\\d+(ms|[Mwdhmsy])$/ >\\n\\t\\t\\t<info-popover mode=right-absolute>\\n\\t\\t\\t\\tA lower limit for the auto group by time interval. Recommended to be set to write frequency,\\n\\t\\t\\t\\tfor example <code>1m</code> if your data is written every minute.\\n\\t\\t\\t</info-popover>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<div class=gf-form-group>\\n\\t<div class=grafana-info-box>\\n\\t\\t<h5>User Permission</h5>\\n\\t\\t<p>\\n\\t\\t\\tThe database user should only be granted SELECT permissions on the specified database &amp; tables you want to query.\\n\\t\\t\\tGrafana does not validate that queries are safe so queries can contain any SQL statement. For example, statements\\n\\t\\t\\tlike <code>USE otherdb;</code> and <code>DROP TABLE user;</code> would be executed. To protect against this we\\n\\t\\t\\t<strong>Highly</strong> recommmend you create a specific MSSQL user with restricted permissions.\\n\\t\\t</p>\\n\\t</div>\\n</div>\\n\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/features/admin/partials/edit_org.html';\nvar html = \"<page-header model=navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\">\\n\\t<h3 class=page-sub-heading>Edit Organization</h3>\\n\\n\\t<form name=orgDetailsForm class=gf-form-group>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=\\\"gf-form-label width-10\\\">Name</span>\\n\\t\\t\\t<input type=text required ng-model=org.name class=\\\"gf-form-input max-width-14\\\">\\n\\t\\t</div>\\n\\n\\t\\t<div class=gf-form-button-row>\\n\\t\\t\\t<button type=submit class=\\\"btn btn-primary\\\" ng-click=update() ng-show=!createMode>Update</button>\\n\\t\\t</div>\\n\\t</form>\\n\\n\\t<h3 class=page-heading>Organization Users</h3>\\n\\n\\t<table class=filter-table>\\n\\t\\t<tr>\\n\\t\\t\\t<th>Username</th>\\n\\t\\t\\t<th>Email</th>\\n\\t\\t\\t<th>Role</th>\\n\\t\\t\\t<th></th>\\n\\t\\t</tr>\\n\\t\\t<tr ng-repeat=\\\"orgUser in orgUsers\\\">\\n\\t\\t\\t<td>{{orgUser.login}}</td>\\n\\t\\t\\t<td>{{orgUser.email}}</td>\\n\\t\\t\\t<td>\\n        <div class=gf-form>\\n          <span class=gf-form-select-wrapper>\\n              <select type=text ng-model=orgUser.role class=\\\"gf-form-input max-width-8\\\" ng-options=\\\"f for f in ['Viewer', 'Editor', 'Admin']\\\" ng-change=updateOrgUser(orgUser)>\\n              </select>\\n          </span>\\n        </div>\\n\\t\\t\\t</td>\\n\\t\\t\\t<td style=width:1%>\\n\\t\\t\\t\\t<a ng-click=removeOrgUser(orgUser) class=\\\"btn btn-danger btn-small\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-remove\\\"></i>\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</td>\\n\\t\\t</tr>\\n\\t</table>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { DashboardAcl } from './acl';\n\nexport interface MutableDashboard {\n  title: string;\n  meta: DashboardMeta;\n  destroy: () => void;\n}\n\nexport interface DashboardDTO {\n  redirectUri?: string;\n  dashboard: DashboardDataDTO;\n  meta: DashboardMeta;\n}\n\nexport interface DashboardMeta {\n  canSave?: boolean;\n  canEdit?: boolean;\n  canDelete?: boolean;\n  canShare?: boolean;\n  canStar?: boolean;\n  canAdmin?: boolean;\n  url?: string;\n  folderId?: number;\n  fullscreen?: boolean;\n  fromExplore?: boolean;\n  isEditing?: boolean;\n  canMakeEditable?: boolean;\n  submenuEnabled?: boolean;\n  provisioned?: boolean;\n  provisionedExternalId?: string;\n  focusPanelId?: number;\n  isStarred?: boolean;\n  showSettings?: boolean;\n  expires?: string;\n  isSnapshot?: boolean;\n  folderTitle?: string;\n  folderUrl?: string;\n  created?: string;\n}\n\nexport interface DashboardDataDTO {\n  title: string;\n}\n\nexport enum DashboardRouteInfo {\n  Home = 'home-dashboard',\n  New = 'new-dashboard',\n  Normal = 'normal-dashboard',\n  Scripted = 'scripted-dashboard',\n}\n\nexport enum DashboardInitPhase {\n  NotStarted = 'Not started',\n  Fetching = 'Fetching',\n  Services = 'Services',\n  Failed = 'Failed',\n  Completed = 'Completed',\n}\n\nexport interface DashboardInitError {\n  message: string;\n  error: any;\n}\n\nexport const KIOSK_MODE_TV = 'tv';\nexport type KioskUrlValue = 'tv' | '1' | true;\n\nexport interface DashboardState {\n  model: MutableDashboard | null;\n  initPhase: DashboardInitPhase;\n  isInitSlow: boolean;\n  initError?: DashboardInitError;\n  permissions: DashboardAcl[] | null;\n}\n","// based on http://www.paciellogroup.com/blog/2012/04/how-to-remove-css-outlines-in-an-accessible-manner/\nfunction outlineFixer() {\n  const d: any = document;\n\n  const styleElement = d.createElement('STYLE');\n  const domEvents = 'addEventListener' in d;\n\n  const addEventListener = (type: string, callback: { (): void; (): void }) => {\n    // Basic cross-browser event handling\n    if (domEvents) {\n      d.addEventListener(type, callback);\n    } else {\n      d.attachEvent('on' + type, callback);\n    }\n  };\n\n  const setCss = (cssText: string) => {\n    // Handle setting of <style> element contents in IE8\n    !!styleElement.styleSheet ? (styleElement.styleSheet.cssText = cssText) : (styleElement.innerHTML = cssText);\n  };\n\n  d.getElementsByTagName('HEAD')[0].appendChild(styleElement);\n\n  // Using mousedown instead of mouseover, so that previously focused elements don't lose focus ring on mouse move\n  addEventListener('mousedown', () => {\n    setCss(':focus{outline:0 !important}::-moz-focus-inner{border:0;}');\n  });\n\n  addEventListener('keydown', () => {\n    setCss('');\n  });\n}\n\noutlineFixer();\n","var path = 'public/app/plugins/datasource/cloudwatch/partials/config.html';\nvar html = \"<h3 class=page-heading>CloudWatch details</h3>\\n\\n<div class=\\\"gf-form-group max-width-30\\\">\\n  <div class=\\\"gf-form gf-form-select-wrapper\\\">\\n    <label class=\\\"gf-form-label width-13\\\">Auth Provider</label>\\n    <select class=\\\"gf-form-input gf-max-width-13\\\" ng-model=ctrl.current.jsonData.authType ng-options=\\\"f.value as f.name for f in ctrl.authTypes\\\"></select>\\n  </div>\\n\\n  <div class=gf-form ng-show='ctrl.current.jsonData.authType == \\\"credentials\\\"'>\\n    <label class=\\\"gf-form-label width-13\\\">Credentials profile name</label>\\n    <input type=text class=\\\"gf-form-input max-width-18 gf-form-input--has-help-icon\\\" ng-model=ctrl.current.database placeholder=default>\\n    <info-popover mode=right-absolute>\\n      Credentials profile name, as specified in ~/.aws/credentials, leave blank for default\\n    </info-popover>\\n  </div>\\n\\n  <div class=gf-form ng-show='ctrl.current.jsonData.authType == \\\"keys\\\"'>\\n    <label class=\\\"gf-form-label width-13\\\">Access key ID </label>\\n    <label class=\\\"gf-form-label width-13\\\" ng-show=ctrl.accessKeyExist>Configured</label>\\n    <a class=\\\"btn btn-secondary gf-form-btn\\\" type=submit ng-click=ctrl.resetAccessKey() ng-show=ctrl.accessKeyExist>Reset</a>\\n    <input type=text class=\\\"gf-form-input max-width-18\\\" ng-hide=ctrl.accessKeyExist ng-model=ctrl.current.secureJsonData.accessKey>\\n  </div>\\n\\n  <div class=gf-form ng-show='ctrl.current.jsonData.authType == \\\"keys\\\"'>\\n    <label class=\\\"gf-form-label width-13\\\">Secret access key</label>\\n    <label class=\\\"gf-form-label width-13\\\" ng-show=ctrl.secretKeyExist>Configured</label>\\n    <a class=\\\"btn btn-secondary gf-form-btn\\\" type=submit ng-click=ctrl.resetSecretKey() ng-show=ctrl.secretKeyExist>Reset</a>\\n    <input type=text class=\\\"gf-form-input max-width-18\\\" ng-hide=ctrl.secretKeyExist ng-model=ctrl.current.secureJsonData.secretKey>\\n  </div>\\n\\n  <div class=gf-form ng-show='ctrl.current.jsonData.authType == \\\"arn\\\"'>\\n    <label class=\\\"gf-form-label width-13\\\">Assume Role ARN</label>\\n    <input type=text class=\\\"gf-form-input max-width-18 gf-form-input--has-help-icon\\\" ng-model=ctrl.current.jsonData.assumeRoleArn placeholder=arn:aws:iam:*>\\n    <info-popover mode=right-absolute>\\n      ARN of Assume Role\\n    </info-popover>\\n  </div>\\n\\n  <div class=gf-form>\\n    <label class=\\\"gf-form-label width-13\\\">Default Region</label>\\n    <div class=\\\"gf-form-select-wrapper max-width-18 gf-form-select-wrapper--has-help-icon\\\">\\n      <select class=gf-form-input ng-model=ctrl.current.jsonData.defaultRegion ng-options=\\\"region for region in ctrl.regions\\\"></select>\\n      <info-popover mode=right-absolute>\\n        Specify the region, such as for US West (Oregon) use ` us-west-2 ` as the region.\\n      </info-popover>\\n    </div>\\n  </div>\\n  <div class=gf-form>\\n    <label class=\\\"gf-form-label width-13\\\">Custom Metrics</label>\\n    <input type=text class=\\\"gf-form-input max-width-18 gf-form-input--has-help-icon\\\" ng-model=ctrl.current.jsonData.customMetricsNamespaces placeholder=Namespace1,Namespace2>\\n    <info-popover mode=right-absolute>\\n      Namespaces of Custom Metrics\\n    </info-popover>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/panel/singlestat/mappings.html';\nvar html = \"<div class=editor-row>\\n  <div class=gf-form-group>\\n    <div class=gf-form>\\n        <span class=gf-form-label>\\n          Type\\n        </span>\\n        <div class=gf-form-select-wrapper>\\n          <select class=gf-form-input ng-model=ctrl.panel.mappingType ng-options=\\\"f.value as f.name for f in ctrl.panel.mappingTypes\\\" ng-change=ctrl.refresh()></select>\\n        </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=editor-row ng-if=\\\"ctrl.panel.mappingType==1\\\">\\n  <h5 class=section-heading>Set value mappings</h5>\\n  <div class=gf-form-group>\\n    <div class=gf-form ng-repeat=\\\"map in ctrl.panel.valueMaps\\\">\\n      <span class=gf-form-label>\\n        <i class=\\\"fa fa-remove pointer\\\" ng-click=ctrl.removeValueMap(map)></i>\\n      </span>\\n      <input type=text ng-model=map.value placeholder=value class=\\\"gf-form-input max-width-6\\\" ng-blur=ctrl.refresh()>\\n      <span class=gf-form-label>\\n        <i class=\\\"fa fa-arrow-right\\\"></i>\\n      </span>\\n      <input type=text placeholder=text ng-model=map.text class=\\\"gf-form-input max-width-8\\\" ng-blur=ctrl.refresh()>\\n    </div>\\n\\n    <div class=gf-form-button-row>\\n      <button class=\\\"btn btn-inverse\\\" ng-click=ctrl.addValueMap();>\\n        <i class=\\\"fa fa-plus\\\"></i>\\n        Add a value mapping\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n<div class=editor-row ng-if=\\\"ctrl.panel.mappingType==2\\\">\\n  <h5 class=section-heading>Set range mappings</h5>\\n  <div class=gf-form-group>\\n    <div class=gf-form ng-repeat=\\\"rangeMap in ctrl.panel.rangeMaps\\\">\\n        <span class=gf-form-label>\\n          <i class=\\\"fa fa-remove pointer\\\" ng-click=ctrl.removeRangeMap(rangeMap)></i>\\n        </span>\\n        <span class=gf-form-label>From</span>\\n        <input type=text ng-model=rangeMap.from class=\\\"gf-form-input max-width-6\\\" ng-blur=ctrl.refresh()>\\n        <span class=gf-form-label>To</span>\\n        <input type=text ng-model=rangeMap.to class=\\\"gf-form-input max-width-6\\\" ng-blur=ctrl.refresh()>\\n        <span class=gf-form-label>Text</span>\\n        <input type=text ng-model=rangeMap.text class=\\\"gf-form-input max-width-8\\\" ng-blur=ctrl.refresh()>\\n    </div>\\n\\n    <div class=gf-form-button-row>\\n      <button class=\\\"btn btn-inverse\\\" ng-click=ctrl.addRangeMap()>\\n        <i class=\\\"fa fa-plus\\\"></i>\\n        Add a range mapping\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { Plugin } from '@grafana/slate-react';\nimport { Editor as CoreEditor } from 'slate';\n\nfunction getIndent(text: string) {\n  let offset = text.length - text.trimLeft().length;\n  if (offset) {\n    let indent = text[0];\n    while (--offset) {\n      indent += text[0];\n    }\n    return indent;\n  }\n  return '';\n}\n\nexport default function NewlinePlugin(): Plugin {\n  return {\n    onKeyDown(event: KeyboardEvent, editor: CoreEditor, next: Function) {\n      const value = editor.value;\n\n      if (value.selection.isExpanded) {\n        return next();\n      }\n\n      if (event.key === 'Enter' && event.shiftKey) {\n        event.preventDefault();\n\n        const { startBlock } = value;\n        const currentLineText = startBlock.text;\n        const indent = getIndent(currentLineText);\n\n        return editor\n          .splitBlock()\n          .insertText(indent)\n          .focus();\n      }\n\n      return next();\n    },\n  };\n}\n","import { SelectableValue } from '../types/select';\n\nexport interface RegistryItem {\n  id: string; // Unique Key -- saved in configs\n  name: string; // Display Name, can change without breaking configs\n  description: string;\n  aliasIds?: string[]; // when the ID changes, we may want backwards compatibility ('current' => 'last')\n\n  /**\n   * Some extensions should not be user selectable\n   *  like: 'all' and 'any' matchers;\n   */\n  excludeFromPicker?: boolean;\n}\n\nexport interface RegistryItemWithOptions<TOptions = any> extends RegistryItem {\n  /**\n   * Convert the options to a string\n   */\n  getOptionsDisplayText?: (options: TOptions) => string;\n\n  /**\n   * Default options used if nothing else is specified\n   */\n  defaultOptions?: TOptions;\n}\n\ninterface RegistrySelectInfo {\n  options: Array<SelectableValue<string>>;\n  current: Array<SelectableValue<string>>;\n}\n\nexport class Registry<T extends RegistryItem> {\n  private ordered: T[] = [];\n  private byId = new Map<string, T>();\n  private initalized = false;\n\n  constructor(private init?: () => T[]) {}\n\n  getIfExists(id: string | undefined): T | undefined {\n    if (!this.initalized) {\n      if (this.init) {\n        for (const ext of this.init()) {\n          this.register(ext);\n        }\n      }\n      this.sort();\n      this.initalized = true;\n    }\n    if (id) {\n      return this.byId.get(id);\n    }\n    return undefined;\n  }\n\n  get(id: string): T {\n    const v = this.getIfExists(id);\n    if (!v) {\n      throw new Error('Undefined: ' + id);\n    }\n    return v;\n  }\n\n  selectOptions(current?: string[], filter?: (ext: T) => boolean): RegistrySelectInfo {\n    if (!this.initalized) {\n      this.getIfExists('xxx'); // will trigger init\n    }\n\n    const select = {\n      options: [],\n      current: [],\n    } as RegistrySelectInfo;\n\n    const currentIds: any = {};\n    if (current) {\n      for (const id of current) {\n        currentIds[id] = true;\n      }\n    }\n\n    for (const ext of this.ordered) {\n      if (ext.excludeFromPicker) {\n        continue;\n      }\n      if (filter && !filter(ext)) {\n        continue;\n      }\n\n      const option = {\n        value: ext.id,\n        label: ext.name,\n        description: ext.description,\n      };\n\n      select.options.push(option);\n      if (currentIds[ext.id]) {\n        select.current.push(option);\n      }\n    }\n    return select;\n  }\n\n  /**\n   * Return a list of values by ID, or all values if not specified\n   */\n  list(ids?: any[]): T[] {\n    if (ids) {\n      const found: T[] = [];\n      for (const id of ids) {\n        const v = this.getIfExists(id);\n        if (v) {\n          found.push(v);\n        }\n      }\n      return found;\n    }\n    if (!this.initalized) {\n      this.getIfExists('xxx'); // will trigger init\n    }\n    return [...this.ordered]; // copy of everythign just in case\n  }\n\n  register(ext: T) {\n    if (this.byId.has(ext.id)) {\n      throw new Error('Duplicate Key:' + ext.id);\n    }\n    this.byId.set(ext.id, ext);\n    this.ordered.push(ext);\n\n    if (ext.aliasIds) {\n      for (const alias of ext.aliasIds) {\n        if (!this.byId.has(alias)) {\n          this.byId.set(alias, ext);\n        }\n      }\n    }\n\n    if (this.initalized) {\n      this.sort();\n    }\n  }\n\n  private sort() {\n    // TODO sort the list\n  }\n}\n","export enum DashboardSearchHitType {\n  DashHitDB = 'dash-db',\n  DashHitHome = 'dash-home',\n  DashHitFolder = 'dash-folder',\n}\nexport interface DashboardSearchHit {\n  id: number;\n  uid: string;\n  title: string;\n  uri: string;\n  url: string;\n  slug: string;\n  type: DashboardSearchHitType;\n  tags: string[];\n  isStarred: boolean;\n  folderId: number;\n  folderUid: string;\n  folderTitle: string;\n  folderUrl: string;\n}\n","import { DataQuery } from '@grafana/ui';\nimport { DataSourceSrv } from '@grafana/runtime';\nimport { DataTransformerConfig } from '@grafana/data';\n\nexport const getDefaultCondition = () => ({\n  type: 'query',\n  query: { params: ['A', '5m', 'now'] },\n  reducer: { type: 'avg', params: [] as any[] },\n  evaluator: { type: 'gt', params: [null] as any[] },\n  operator: { type: 'and' },\n});\n\nexport const getAlertingValidationMessage = async (\n  transformations: DataTransformerConfig[],\n  targets: DataQuery[],\n  datasourceSrv: DataSourceSrv,\n  datasourceName: string\n): Promise<string> => {\n  if (targets.length === 0) {\n    return 'Could not find any metric queries';\n  }\n\n  if (transformations && transformations.length) {\n    return 'Transformations are not supported in alert queries';\n  }\n\n  let alertingNotSupported = 0;\n  let templateVariablesNotSupported = 0;\n\n  for (const target of targets) {\n    const dsName = target.datasource || datasourceName;\n    const ds = await datasourceSrv.get(dsName);\n    if (!ds.meta.alerting) {\n      alertingNotSupported++;\n    } else if (ds.targetContainsTemplate && ds.targetContainsTemplate(target)) {\n      templateVariablesNotSupported++;\n    }\n  }\n\n  if (alertingNotSupported === targets.length) {\n    return 'The datasource does not support alerting queries';\n  }\n\n  if (templateVariablesNotSupported === targets.length) {\n    return 'Template variables are not supported in alert queries';\n  }\n\n  return '';\n};\n","var path = 'public/app/plugins/datasource/graphite/partials/annotations.editor.html';\nvar html = \"<div class=gf-form-group>\\n  <div class=gf-form>\\n    <span class=\\\"gf-form-label width-12\\\">Graphite query</span>\\n    <input type=text class=gf-form-input ng-model=ctrl.annotation.target placeholder=\\\"Example: statsd.application.counters.*.count\\\">\\n  </div>\\n\\n\\t<h5 class=section-heading>Or</h5>\\n\\n  <div class=gf-form>\\n    <span class=\\\"gf-form-label width-12\\\">Graphite events tags</span>\\n    <input type=text class=gf-form-input ng-model=ctrl.annotation.tags placeholder=\\\"Example: event_tag_name\\\">\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { coreModule, appEvents, contextSrv } from 'app/core/core';\nimport { DashboardModel } from '../../state/DashboardModel';\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport angular, { ILocationService } from 'angular';\nimport config from 'app/core/config';\nimport { BackendSrv } from 'app/core/services/backend_srv';\nimport { DashboardSrv } from '../../services/DashboardSrv';\n\nexport class SettingsCtrl {\n  dashboard: DashboardModel;\n  isOpen: boolean;\n  viewId: string;\n  json: string;\n  alertCount: number;\n  canSaveAs: boolean;\n  canSave: boolean;\n  canDelete: boolean;\n  sections: any[];\n  hasUnsavedFolderChange: boolean;\n\n  /** @ngInject */\n  constructor(\n    private $scope: any,\n    private $route: any,\n    private $location: ILocationService,\n    private $rootScope: any,\n    private backendSrv: BackendSrv,\n    private dashboardSrv: DashboardSrv\n  ) {\n    // temp hack for annotations and variables editors\n    // that rely on inherited scope\n    $scope.dashboard = this.dashboard;\n\n    this.$scope.$on('$destroy', () => {\n      this.dashboard.updateSubmenuVisibility();\n      setTimeout(() => {\n        this.$rootScope.appEvent('dash-scroll', { restore: true });\n        this.dashboard.startRefresh();\n      });\n    });\n\n    this.canSaveAs = contextSrv.hasEditPermissionInFolders;\n    this.canSave = this.dashboard.meta.canSave;\n    this.canDelete = this.dashboard.meta.canSave;\n\n    this.buildSectionList();\n    this.onRouteUpdated();\n\n    this.$rootScope.onAppEvent('$routeUpdate', this.onRouteUpdated.bind(this), $scope);\n    this.$rootScope.appEvent('dash-scroll', { animate: false, pos: 0 });\n    this.$rootScope.onAppEvent('dashboard-saved', this.onPostSave.bind(this), $scope);\n  }\n\n  buildSectionList() {\n    this.sections = [];\n\n    if (this.dashboard.meta.canEdit) {\n      this.sections.push({\n        title: 'General',\n        id: 'settings',\n        icon: 'gicon gicon-preferences',\n      });\n      this.sections.push({\n        title: 'Annotations',\n        id: 'annotations',\n        icon: 'gicon gicon-annotation',\n      });\n      this.sections.push({\n        title: 'Variables',\n        id: 'templating',\n        icon: 'gicon gicon-variable',\n      });\n      this.sections.push({\n        title: 'Links',\n        id: 'links',\n        icon: 'gicon gicon-link',\n      });\n    }\n\n    if (this.dashboard.id && this.dashboard.meta.canSave) {\n      this.sections.push({\n        title: 'Versions',\n        id: 'versions',\n        icon: 'fa fa-fw fa-history',\n      });\n    }\n\n    if (this.dashboard.id && this.dashboard.meta.canAdmin) {\n      this.sections.push({\n        title: 'Permissions',\n        id: 'permissions',\n        icon: 'fa fa-fw fa-lock',\n      });\n    }\n\n    if (this.dashboard.meta.canMakeEditable) {\n      this.sections.push({\n        title: 'General',\n        icon: 'gicon gicon-preferences',\n        id: 'make_editable',\n      });\n    }\n\n    this.sections.push({\n      title: 'JSON Model',\n      id: 'dashboard_json',\n      icon: 'gicon gicon-json',\n    });\n\n    const params = this.$location.search();\n    const url = this.$location.path();\n\n    for (const section of this.sections) {\n      const sectionParams = _.defaults({ editview: section.id }, params);\n      section.url = config.appSubUrl + url + '?' + $.param(sectionParams);\n    }\n  }\n\n  onRouteUpdated() {\n    this.viewId = this.$location.search().editview;\n\n    if (this.viewId) {\n      this.json = angular.toJson(this.dashboard.getSaveModelClone(), true);\n    }\n\n    if (this.viewId === 'settings' && this.dashboard.meta.canMakeEditable) {\n      this.viewId = 'make_editable';\n    }\n\n    const currentSection: any = _.find(this.sections, { id: this.viewId } as any);\n    if (!currentSection) {\n      this.sections.unshift({\n        title: 'Not found',\n        id: '404',\n        icon: 'fa fa-fw fa-warning',\n      });\n      this.viewId = '404';\n    }\n  }\n\n  openSaveAsModal() {\n    this.dashboardSrv.showSaveAsModal();\n  }\n\n  saveDashboard() {\n    this.dashboardSrv.saveDashboard();\n  }\n\n  saveDashboardJson() {\n    this.dashboardSrv.saveJSONDashboard(this.json).then(() => {\n      this.$route.reload();\n    });\n  }\n\n  onPostSave() {\n    this.hasUnsavedFolderChange = false;\n  }\n\n  hideSettings() {\n    const urlParams = this.$location.search();\n    delete urlParams.editview;\n    setTimeout(() => {\n      this.$rootScope.$apply(() => {\n        this.$location.search(urlParams);\n      });\n    });\n  }\n\n  makeEditable() {\n    this.dashboard.editable = true;\n    this.dashboard.meta.canMakeEditable = false;\n    this.dashboard.meta.canEdit = true;\n    this.dashboard.meta.canSave = true;\n    this.canDelete = true;\n    this.viewId = 'settings';\n    this.buildSectionList();\n\n    const currentSection: any = _.find(this.sections, { id: this.viewId } as any);\n    this.$location.url(currentSection.url);\n  }\n\n  deleteDashboard() {\n    let confirmText = '';\n    let text2 = this.dashboard.title;\n\n    if (this.dashboard.meta.provisioned) {\n      appEvents.emit('confirm-modal', {\n        title: 'Cannot delete provisioned dashboard',\n        text: `\n          This dashboard is managed by Grafanas provisioning and cannot be deleted. Remove the dashboard from the\n          config file to delete it.\n        `,\n        text2: `\n          <i>See <a class=\"external-link\" href=\"http://docs.grafana.org/administration/provisioning/#dashboards\" target=\"_blank\">\n          documentation</a> for more information about provisioning.</i>\n          </br>\n          File path: ${this.dashboard.meta.provisionedExternalId}\n        `,\n        text2htmlBind: true,\n        icon: 'fa-trash',\n        noText: 'OK',\n      });\n      return;\n    }\n\n    const alerts = _.sumBy(this.dashboard.panels, panel => {\n      return panel.alert ? 1 : 0;\n    });\n\n    if (alerts > 0) {\n      confirmText = 'DELETE';\n      text2 = `This dashboard contains ${alerts} alerts. Deleting this dashboard will also delete those alerts`;\n    }\n\n    appEvents.emit('confirm-modal', {\n      title: 'Delete',\n      text: 'Do you want to delete this dashboard?',\n      text2: text2,\n      icon: 'fa-trash',\n      confirmText: confirmText,\n      yesText: 'Delete',\n      onConfirm: () => {\n        this.dashboard.meta.canSave = false;\n        this.deleteDashboardConfirmed();\n      },\n    });\n  }\n\n  deleteDashboardConfirmed() {\n    this.backendSrv.deleteDashboard(this.dashboard.uid, false).then(() => {\n      appEvents.emit('alert-success', ['Dashboard Deleted', this.dashboard.title + ' has been deleted']);\n      this.$location.url('/');\n    });\n  }\n\n  onFolderChange(folder: { id: number; title: string }) {\n    this.dashboard.meta.folderId = folder.id;\n    this.dashboard.meta.folderTitle = folder.title;\n    this.hasUnsavedFolderChange = true;\n  }\n\n  getFolder() {\n    return {\n      id: this.dashboard.meta.folderId,\n      title: this.dashboard.meta.folderTitle,\n      url: this.dashboard.meta.folderUrl,\n    };\n  }\n}\n\nexport function dashboardSettings() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/features/dashboard/components/DashboardSettings/template.html',\n    controller: SettingsCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    transclude: true,\n    scope: { dashboard: '=' },\n  };\n}\n\ncoreModule.directive('dashboardSettings', dashboardSettings);\n","// Libaries\nimport React, { PureComponent } from 'react';\n\n// Utils & Services\nimport { AngularComponent, getAngularLoader } from '@grafana/runtime';\n\n// Types\nimport { DashboardModel } from '../../state/DashboardModel';\n\nexport interface Props {\n  dashboard: DashboardModel | null;\n}\n\nexport class DashboardSettings extends PureComponent<Props> {\n  element: HTMLElement;\n  angularCmp: AngularComponent;\n\n  componentDidMount() {\n    const loader = getAngularLoader();\n\n    const template = '<dashboard-settings dashboard=\"dashboard\" class=\"dashboard-settings\" />';\n    const scopeProps = { dashboard: this.props.dashboard };\n\n    this.angularCmp = loader.load(this.element, scopeProps, template);\n  }\n\n  componentWillUnmount() {\n    if (this.angularCmp) {\n      this.angularCmp.destroy();\n    }\n  }\n\n  render() {\n    return <div className=\"panel-height-helper\" ref={element => (this.element = element)} />;\n  }\n}\n","import coreModule from 'app/core/core_module';\nimport { DashboardModel } from 'app/features/dashboard/state';\n\nexport class TimePickerCtrl {\n  panel: any;\n  dashboard: DashboardModel;\n\n  constructor() {\n    this.panel = this.dashboard.timepicker;\n    this.panel.refresh_intervals = this.panel.refresh_intervals || [\n      '5s',\n      '10s',\n      '30s',\n      '1m',\n      '5m',\n      '15m',\n      '30m',\n      '1h',\n      '2h',\n      '1d',\n    ];\n  }\n}\n\nconst template = `\n<div class=\"editor-row\">\n\t<h5 class=\"section-heading\">Time Options</h5>\n\n  <div class=\"gf-form-group\">\n\t\t<div class=\"gf-form\">\n\t\t\t<label class=\"gf-form-label width-10\">Timezone</label>\n\t\t\t<div class=\"gf-form-select-wrapper\">\n\t\t\t\t<select ng-model=\"ctrl.dashboard.timezone\" class='gf-form-input' ng-options=\"f.value as f.text for f in\n\t\t\t\t  [{value: '', text: 'Default'}, {value: 'browser', text: 'Local browser time'},{value: 'utc', text: 'UTC'}]\">\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"gf-form\">\n\t\t\t<span class=\"gf-form-label width-10\">Auto-refresh</span>\n\t\t\t<input type=\"text\" class=\"gf-form-input max-width-25\" ng-model=\"ctrl.panel.refresh_intervals\" array-join>\n\t\t</div>\n\t\t<div class=\"gf-form\">\n\t\t\t<span class=\"gf-form-label width-10\">Now delay now-</span>\n\t\t\t<input type=\"text\" class=\"gf-form-input max-width-25\" ng-model=\"ctrl.panel.nowDelay\"\n\t\t\t    placeholder=\"0m\"\n\t\t\t    valid-time-span\n\t\t\t    bs-tooltip=\"'Enter 1m to ignore the last minute (because it can contain incomplete metrics)'\"\n \t\t\t\t  data-placement=\"right\">\n\t\t</div>\n\n\t\t<gf-form-switch class=\"gf-form\" label=\"Hide time picker\" checked=\"ctrl.panel.hidden\" label-class=\"width-10\">\n\t\t</gf-form-switch>\n\t</div>\n</div>\n`;\n\nexport function TimePickerSettings() {\n  return {\n    restrict: 'E',\n    template: template,\n    controller: TimePickerCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      dashboard: '=',\n    },\n  };\n}\n\ncoreModule.directive('gfTimePickerSettings', TimePickerSettings);\n","export { SettingsCtrl } from './SettingsCtrl';\nexport { DashboardSettings } from './DashboardSettings';\nexport { TimePickerSettings } from './TimePickerSettings';\n","// This needs to be in its own file to avoid circular references\n\n// Builtin Predicates\n// not using 'any' and 'never' since they are reservered keywords\nexport enum MatcherID {\n  anyMatch = 'anyMatch', // checks children\n  allMatch = 'allMatch', // checks children\n  invertMatch = 'invertMatch', // checks child\n  alwaysMatch = 'alwaysMatch',\n  neverMatch = 'neverMatch',\n}\n\nexport enum FieldMatcherID {\n  // Specific Types\n  numeric = 'numeric',\n  time = 'time',\n\n  // With arguments\n  byType = 'byType',\n  byName = 'byName',\n  // byIndex = 'byIndex',\n  // byLabel = 'byLabel',\n}\n\n/**\n * Field name matchers\n */\nexport enum FrameMatcherID {\n  byName = 'byName',\n  byRefId = 'byRefId',\n  byIndex = 'byIndex',\n  byLabel = 'byLabel',\n}\n","export enum DataTransformerID {\n  //  join = 'join', // Pick a field and merge all series based on that field\n  append = 'append', // Merge all series together\n  //  rotate = 'rotate', // Columns to rows\n  reduce = 'reduce', // Run calculations on fields\n\n  filterFields = 'filterFields', // Pick some fields (keep all frames)\n  filterFieldsByName = 'filterFieldsByName', // Pick fields with name matching regex (keep all frames)\n  filterFrames = 'filterFrames', // Pick some frames (keep all fields)\n  noop = 'noop', // Does nothing to the dataframe\n}\n","import { Field, DataFrame } from '../../types/dataFrame';\nimport { MatcherID } from './ids';\nimport { getFieldMatcher, fieldMatchers, getFrameMatchers, frameMatchers } from '../matchers';\nimport { FieldMatcherInfo, MatcherConfig, FrameMatcherInfo } from '../../types/transformations';\n\nconst anyFieldMatcher: FieldMatcherInfo<MatcherConfig[]> = {\n  id: MatcherID.anyMatch,\n  name: 'Any',\n  description: 'Any child matches (OR)',\n  excludeFromPicker: true,\n  defaultOptions: [], // empty array\n\n  get: (options: MatcherConfig[]) => {\n    const children = options.map(option => {\n      return getFieldMatcher(option);\n    });\n    return (field: Field) => {\n      for (const child of children) {\n        if (child(field)) {\n          return true;\n        }\n      }\n      return false;\n    };\n  },\n\n  getOptionsDisplayText: (options: MatcherConfig[]) => {\n    let text = '';\n    for (const sub of options) {\n      if (text.length > 0) {\n        text += ' OR ';\n      }\n      const matcher = fieldMatchers.get(sub.id);\n      text += matcher.getOptionsDisplayText ? matcher.getOptionsDisplayText(sub) : matcher.name;\n    }\n    return text;\n  },\n};\n\nconst anyFrameMatcher: FrameMatcherInfo<MatcherConfig[]> = {\n  id: MatcherID.anyMatch,\n  name: 'Any',\n  description: 'Any child matches (OR)',\n  excludeFromPicker: true,\n  defaultOptions: [], // empty array\n\n  get: (options: MatcherConfig[]) => {\n    const children = options.map(option => {\n      return getFrameMatchers(option);\n    });\n    return (frame: DataFrame) => {\n      for (const child of children) {\n        if (child(frame)) {\n          return true;\n        }\n      }\n      return false;\n    };\n  },\n\n  getOptionsDisplayText: (options: MatcherConfig[]) => {\n    let text = '';\n    for (const sub of options) {\n      if (text.length > 0) {\n        text += ' OR ';\n      }\n      const matcher = frameMatchers.get(sub.id);\n      text += matcher.getOptionsDisplayText ? matcher.getOptionsDisplayText(sub) : matcher.name;\n    }\n    return text;\n  },\n};\n\nconst allFieldsMatcher: FieldMatcherInfo<MatcherConfig[]> = {\n  id: MatcherID.allMatch,\n  name: 'All',\n  description: 'Everything matches (AND)',\n  excludeFromPicker: true,\n  defaultOptions: [], // empty array\n\n  get: (options: MatcherConfig[]) => {\n    const children = options.map(option => {\n      return getFieldMatcher(option);\n    });\n    return (field: Field) => {\n      for (const child of children) {\n        if (!child(field)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  },\n\n  getOptionsDisplayText: (options: MatcherConfig[]) => {\n    let text = '';\n    for (const sub of options) {\n      if (text.length > 0) {\n        text += ' AND ';\n      }\n      const matcher = fieldMatchers.get(sub.id); // Ugho what about frame\n      text += matcher.getOptionsDisplayText ? matcher.getOptionsDisplayText(sub) : matcher.name;\n    }\n    return text;\n  },\n};\n\nconst allFramesMatcher: FrameMatcherInfo<MatcherConfig[]> = {\n  id: MatcherID.allMatch,\n  name: 'All',\n  description: 'Everything matches (AND)',\n  excludeFromPicker: true,\n  defaultOptions: [], // empty array\n\n  get: (options: MatcherConfig[]) => {\n    const children = options.map(option => {\n      return getFrameMatchers(option);\n    });\n    return (frame: DataFrame) => {\n      for (const child of children) {\n        if (!child(frame)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  },\n\n  getOptionsDisplayText: (options: MatcherConfig[]) => {\n    let text = '';\n    for (const sub of options) {\n      if (text.length > 0) {\n        text += ' AND ';\n      }\n      const matcher = frameMatchers.get(sub.id);\n      text += matcher.getOptionsDisplayText ? matcher.getOptionsDisplayText(sub) : matcher.name;\n    }\n    return text;\n  },\n};\n\nconst notFieldMatcher: FieldMatcherInfo<MatcherConfig> = {\n  id: MatcherID.invertMatch,\n  name: 'NOT',\n  description: 'Inverts other matchers',\n  excludeFromPicker: true,\n\n  get: (option: MatcherConfig) => {\n    const check = getFieldMatcher(option);\n    return (field: Field) => {\n      return !check(field);\n    };\n  },\n\n  getOptionsDisplayText: (options: MatcherConfig) => {\n    const matcher = fieldMatchers.get(options.id);\n    const text = matcher.getOptionsDisplayText ? matcher.getOptionsDisplayText(options.options) : matcher.name;\n    return 'NOT ' + text;\n  },\n};\n\nconst notFrameMatcher: FrameMatcherInfo<MatcherConfig> = {\n  id: MatcherID.invertMatch,\n  name: 'NOT',\n  description: 'Inverts other matchers',\n  excludeFromPicker: true,\n\n  get: (option: MatcherConfig) => {\n    const check = getFrameMatchers(option);\n    return (frame: DataFrame) => {\n      return !check(frame);\n    };\n  },\n\n  getOptionsDisplayText: (options: MatcherConfig) => {\n    const matcher = frameMatchers.get(options.id);\n    const text = matcher.getOptionsDisplayText ? matcher.getOptionsDisplayText(options.options) : matcher.name;\n    return 'NOT ' + text;\n  },\n};\n\nexport const alwaysFieldMatcher = (field: Field) => {\n  return true;\n};\n\nexport const alwaysFrameMatcher = (frame: DataFrame) => {\n  return true;\n};\n\nexport const neverFieldMatcher = (field: Field) => {\n  return false;\n};\n\nexport const neverFrameMatcher = (frame: DataFrame) => {\n  return false;\n};\n\nconst alwaysFieldMatcherInfo: FieldMatcherInfo = {\n  id: MatcherID.alwaysMatch,\n  name: 'All Fields',\n  description: 'Always Match',\n\n  get: (option: any) => {\n    return alwaysFieldMatcher;\n  },\n\n  getOptionsDisplayText: (options: any) => {\n    return 'Always';\n  },\n};\n\nconst alwaysFrameMatcherInfo: FrameMatcherInfo = {\n  id: MatcherID.alwaysMatch,\n  name: 'All Frames',\n  description: 'Always Match',\n\n  get: (option: any) => {\n    return alwaysFrameMatcher;\n  },\n\n  getOptionsDisplayText: (options: any) => {\n    return 'Always';\n  },\n};\n\nconst neverFieldMatcherInfo: FieldMatcherInfo = {\n  id: MatcherID.neverMatch,\n  name: 'No Fields',\n  description: 'Never Match',\n  excludeFromPicker: true,\n\n  get: (option: any) => {\n    return neverFieldMatcher;\n  },\n\n  getOptionsDisplayText: (options: any) => {\n    return 'Never';\n  },\n};\n\nconst neverFrameMatcherInfo: FrameMatcherInfo = {\n  id: MatcherID.neverMatch,\n  name: 'No Frames',\n  description: 'Never Match',\n\n  get: (option: any) => {\n    return neverFrameMatcher;\n  },\n\n  getOptionsDisplayText: (options: any) => {\n    return 'Never';\n  },\n};\n\nexport function getFieldPredicateMatchers(): FieldMatcherInfo[] {\n  return [anyFieldMatcher, allFieldsMatcher, notFieldMatcher, alwaysFieldMatcherInfo, neverFieldMatcherInfo];\n}\n\nexport function getFramePredicateMatchers(): FrameMatcherInfo[] {\n  return [anyFrameMatcher, allFramesMatcher, notFrameMatcher, alwaysFrameMatcherInfo, neverFrameMatcherInfo];\n}\n","import { Field, DataFrame } from '../../types/dataFrame';\nimport { FieldMatcherID, FrameMatcherID } from './ids';\nimport { FieldMatcherInfo, FrameMatcherInfo } from '../../types/transformations';\nimport { stringToJsRegex } from '../../text/string';\n\n// General Field matcher\nconst fieldNameMacher: FieldMatcherInfo<string> = {\n  id: FieldMatcherID.byName,\n  name: 'Field Name',\n  description: 'match the field name',\n  defaultOptions: '/.*/',\n\n  get: (pattern: string) => {\n    const regex = stringToJsRegex(pattern);\n    return (field: Field) => {\n      return regex.test(field.name);\n    };\n  },\n\n  getOptionsDisplayText: (pattern: string) => {\n    return `Field name: ${pattern}`;\n  },\n};\n\n// General Field matcher\nconst frameNameMacher: FrameMatcherInfo<string> = {\n  id: FrameMatcherID.byName,\n  name: 'Frame Name',\n  description: 'match the frame name',\n  defaultOptions: '/.*/',\n\n  get: (pattern: string) => {\n    const regex = stringToJsRegex(pattern);\n    return (frame: DataFrame) => {\n      return regex.test(frame.name || '');\n    };\n  },\n\n  getOptionsDisplayText: (pattern: string) => {\n    return `Frame name: ${pattern}`;\n  },\n};\n\n/**\n * Registry Initalization\n */\nexport function getFieldNameMatchers(): FieldMatcherInfo[] {\n  return [fieldNameMacher];\n}\n\nexport function getFrameNameMatchers(): FrameMatcherInfo[] {\n  return [frameNameMacher];\n}\n","import { Field, FieldType } from '../../types/dataFrame';\nimport { FieldMatcherID } from './ids';\nimport { FieldMatcherInfo } from '../../types/transformations';\n\n// General Field matcher\nconst fieldTypeMacher: FieldMatcherInfo<FieldType> = {\n  id: FieldMatcherID.byType,\n  name: 'Field Type',\n  description: 'match based on the field type',\n  defaultOptions: FieldType.number,\n\n  get: (type: FieldType) => {\n    return (field: Field) => {\n      return type === field.type;\n    };\n  },\n\n  getOptionsDisplayText: (type: FieldType) => {\n    return `Field type: ${type}`;\n  },\n};\n\n// Numeric Field matcher\n// This gets its own entry so it shows up in the dropdown\nconst numericMacher: FieldMatcherInfo = {\n  id: FieldMatcherID.numeric,\n  name: 'Numeric Fields',\n  description: 'Fields with type number',\n\n  get: () => {\n    return fieldTypeMacher.get(FieldType.number);\n  },\n\n  getOptionsDisplayText: () => {\n    return 'Numeric Fields';\n  },\n};\n\n// Time Field matcher\nconst timeMacher: FieldMatcherInfo = {\n  id: FieldMatcherID.time,\n  name: 'Time Fields',\n  description: 'Fields with type time',\n\n  get: () => {\n    return fieldTypeMacher.get(FieldType.time);\n  },\n\n  getOptionsDisplayText: () => {\n    return 'Time Fields';\n  },\n};\n\n/**\n * Registry Initalization\n */\nexport function getFieldTypeMatchers(): FieldMatcherInfo[] {\n  return [fieldTypeMacher, numericMacher, timeMacher];\n}\n","import { DataFrame } from '../../types/dataFrame';\nimport { FrameMatcherID } from './ids';\nimport { FrameMatcherInfo } from '../../types/transformations';\n\n// General Field matcher\nconst refIdMacher: FrameMatcherInfo<string> = {\n  id: FrameMatcherID.byRefId,\n  name: 'Query refId',\n  description: 'match the refId',\n  defaultOptions: 'A',\n\n  get: (pattern: string) => {\n    return (frame: DataFrame) => {\n      return pattern === frame.refId;\n    };\n  },\n\n  getOptionsDisplayText: (pattern: string) => {\n    return `RefID: ${pattern}`;\n  },\n};\n\nexport function getRefIdMatchers(): FrameMatcherInfo[] {\n  return [refIdMacher];\n}\n","// Load the Buildtin matchers\nimport { getFieldPredicateMatchers, getFramePredicateMatchers } from './matchers/predicates';\nimport { getFieldNameMatchers, getFrameNameMatchers } from './matchers/nameMatcher';\nimport { getFieldTypeMatchers } from './matchers/fieldTypeMatcher';\nimport { getRefIdMatchers } from './matchers/refIdMatcher';\nimport {\n  FieldMatcherInfo,\n  MatcherConfig,\n  FrameMatcherInfo,\n  FieldMatcher,\n  FrameMatcher,\n} from '../types/transformations';\nimport { Registry } from '../utils/Registry';\n\nexport const fieldMatchers = new Registry<FieldMatcherInfo>(() => {\n  return [\n    ...getFieldPredicateMatchers(), // Predicates\n    ...getFieldTypeMatchers(), // by type\n    ...getFieldNameMatchers(), // by name\n  ];\n});\n\nexport const frameMatchers = new Registry<FrameMatcherInfo>(() => {\n  return [\n    ...getFramePredicateMatchers(), // Predicates\n    ...getFrameNameMatchers(), // by name\n    ...getRefIdMatchers(), // by query refId\n  ];\n});\n\nexport function getFieldMatcher(config: MatcherConfig): FieldMatcher {\n  const info = fieldMatchers.get(config.id);\n  if (!info) {\n    throw new Error('Unknown Matcher: ' + config.id);\n  }\n  return info.get(config.options);\n}\n\nexport function getFrameMatchers(config: MatcherConfig): FrameMatcher {\n  const info = frameMatchers.get(config.id);\n  if (!info) {\n    throw new Error('Unknown Matcher: ' + config.id);\n  }\n  return info.get(config.options);\n}\n","// Libraries\nimport isNumber from 'lodash/isNumber';\n\nimport { NullValueMode, Field } from '../types/index';\nimport { Registry, RegistryItem } from '../utils/Registry';\n\nexport enum ReducerID {\n  sum = 'sum',\n  max = 'max',\n  min = 'min',\n  logmin = 'logmin',\n  mean = 'mean',\n  last = 'last',\n  first = 'first',\n  count = 'count',\n  range = 'range',\n  diff = 'diff',\n  delta = 'delta',\n  step = 'step',\n\n  firstNotNull = 'firstNotNull',\n  lastNotNull = 'lastNotNull',\n\n  changeCount = 'changeCount',\n  distinctCount = 'distinctCount',\n\n  allIsZero = 'allIsZero',\n  allIsNull = 'allIsNull',\n}\n\nexport interface FieldCalcs {\n  [key: string]: any;\n}\n\n// Internal function\ntype FieldReducer = (field: Field, ignoreNulls: boolean, nullAsZero: boolean) => FieldCalcs;\n\nexport interface FieldReducerInfo extends RegistryItem {\n  // Internal details\n  emptyInputResult?: any; // typically null, but some things like 'count' & 'sum' should be zero\n  standard: boolean; // The most common stats can all be calculated in a single pass\n  reduce?: FieldReducer;\n}\n\ninterface ReduceFieldOptions {\n  field: Field;\n  reducers: string[]; // The stats to calculate\n}\n\n/**\n * @returns an object with a key for each selected stat\n */\nexport function reduceField(options: ReduceFieldOptions): FieldCalcs {\n  const { field, reducers } = options;\n\n  if (!field || !reducers || reducers.length < 1) {\n    return {};\n  }\n\n  if (field.calcs) {\n    // Find the values we need to calculate\n    const missing: string[] = [];\n    for (const s of reducers) {\n      if (!field.calcs.hasOwnProperty(s)) {\n        missing.push(s);\n      }\n    }\n    if (missing.length < 1) {\n      return {\n        ...field.calcs,\n      };\n    }\n  }\n\n  const queue = fieldReducers.list(reducers);\n\n  // Return early for empty series\n  // This lets the concrete implementations assume at least one row\n  const data = field.values;\n  if (data.length < 1) {\n    const calcs = { ...field.calcs } as FieldCalcs;\n    for (const reducer of queue) {\n      calcs[reducer.id] = reducer.emptyInputResult !== null ? reducer.emptyInputResult : null;\n    }\n    return (field.calcs = calcs);\n  }\n\n  const { nullValueMode } = field.config;\n  const ignoreNulls = nullValueMode === NullValueMode.Ignore;\n  const nullAsZero = nullValueMode === NullValueMode.AsZero;\n\n  // Avoid calculating all the standard stats if possible\n  if (queue.length === 1 && queue[0].reduce) {\n    const values = queue[0].reduce(field, ignoreNulls, nullAsZero);\n    field.calcs = {\n      ...field.calcs,\n      ...values,\n    };\n    return values;\n  }\n\n  // For now everything can use the standard stats\n  let values = doStandardCalcs(field, ignoreNulls, nullAsZero);\n\n  for (const reducer of queue) {\n    if (!values.hasOwnProperty(reducer.id) && reducer.reduce) {\n      values = {\n        ...values,\n        ...reducer.reduce(field, ignoreNulls, nullAsZero),\n      };\n    }\n  }\n\n  field.calcs = {\n    ...field.calcs,\n    ...values,\n  };\n\n  return values;\n}\n\n// ------------------------------------------------------------------------------\n//\n//  No Exported symbols below here.\n//\n// ------------------------------------------------------------------------------\n\nexport const fieldReducers = new Registry<FieldReducerInfo>(() => [\n  {\n    id: ReducerID.lastNotNull,\n    name: 'Last (not null)',\n    description: 'Last non-null value',\n    standard: true,\n    aliasIds: ['current'],\n    reduce: calculateLastNotNull,\n  },\n  {\n    id: ReducerID.last,\n    name: 'Last',\n    description: 'Last Value',\n    standard: true,\n    reduce: calculateLast,\n  },\n  { id: ReducerID.first, name: 'First', description: 'First Value', standard: true, reduce: calculateFirst },\n  {\n    id: ReducerID.firstNotNull,\n    name: 'First (not null)',\n    description: 'First non-null value',\n    standard: true,\n    reduce: calculateFirstNotNull,\n  },\n  { id: ReducerID.min, name: 'Min', description: 'Minimum Value', standard: true },\n  { id: ReducerID.max, name: 'Max', description: 'Maximum Value', standard: true },\n  { id: ReducerID.mean, name: 'Mean', description: 'Average Value', standard: true, aliasIds: ['avg'] },\n  {\n    id: ReducerID.sum,\n    name: 'Total',\n    description: 'The sum of all values',\n    emptyInputResult: 0,\n    standard: true,\n    aliasIds: ['total'],\n  },\n  {\n    id: ReducerID.count,\n    name: 'Count',\n    description: 'Number of values in response',\n    emptyInputResult: 0,\n    standard: true,\n  },\n  {\n    id: ReducerID.range,\n    name: 'Range',\n    description: 'Difference between minimum and maximum values',\n    standard: true,\n  },\n  {\n    id: ReducerID.delta,\n    name: 'Delta',\n    description: 'Cumulative change in value',\n    standard: true,\n  },\n  {\n    id: ReducerID.step,\n    name: 'Step',\n    description: 'Minimum interval between values',\n    standard: true,\n  },\n  {\n    id: ReducerID.diff,\n    name: 'Difference',\n    description: 'Difference between first and last values',\n    standard: true,\n  },\n  {\n    id: ReducerID.logmin,\n    name: 'Min (above zero)',\n    description: 'Used for log min scale',\n    standard: true,\n  },\n  {\n    id: ReducerID.allIsZero,\n    name: 'All Zeros',\n    description: 'All values are zero',\n    emptyInputResult: false,\n    standard: true,\n  },\n  {\n    id: ReducerID.allIsNull,\n    name: 'All Nulls',\n    description: 'All values are null',\n    emptyInputResult: true,\n    standard: true,\n  },\n  {\n    id: ReducerID.changeCount,\n    name: 'Change Count',\n    description: 'Number of times the value changes',\n    standard: false,\n    reduce: calculateChangeCount,\n  },\n  {\n    id: ReducerID.distinctCount,\n    name: 'Distinct Count',\n    description: 'Number of distinct values',\n    standard: false,\n    reduce: calculateDistinctCount,\n  },\n]);\n\nfunction doStandardCalcs(field: Field, ignoreNulls: boolean, nullAsZero: boolean): FieldCalcs {\n  const calcs = {\n    sum: 0,\n    max: -Number.MAX_VALUE,\n    min: Number.MAX_VALUE,\n    logmin: Number.MAX_VALUE,\n    mean: null,\n    last: null,\n    first: null,\n    lastNotNull: null,\n    firstNotNull: null,\n    count: 0,\n    nonNullCount: 0,\n    allIsNull: true,\n    allIsZero: true,\n    range: null,\n    diff: null,\n    delta: 0,\n    step: Number.MAX_VALUE,\n\n    // Just used for calcutations -- not exposed as a stat\n    previousDeltaUp: true,\n  } as FieldCalcs;\n\n  const data = field.values;\n  calcs.count = data.length;\n\n  for (let i = 0; i < data.length; i++) {\n    let currentValue = data.get(i);\n\n    if (i === 0) {\n      calcs.first = currentValue;\n    }\n\n    calcs.last = currentValue;\n\n    if (currentValue === null) {\n      if (ignoreNulls) {\n        continue;\n      }\n      if (nullAsZero) {\n        currentValue = 0;\n      }\n    }\n\n    if (currentValue !== null && currentValue !== undefined) {\n      const isFirst = calcs.firstNotNull === null;\n      if (isFirst) {\n        calcs.firstNotNull = currentValue;\n      }\n\n      if (isNumber(currentValue)) {\n        calcs.sum += currentValue;\n        calcs.allIsNull = false;\n        calcs.nonNullCount++;\n\n        if (!isFirst) {\n          const step = currentValue - calcs.lastNotNull!;\n          if (calcs.step > step) {\n            calcs.step = step; // the minimum interval\n          }\n\n          if (calcs.lastNotNull! > currentValue) {\n            // counter reset\n            calcs.previousDeltaUp = false;\n            if (i === data.length - 1) {\n              // reset on last\n              calcs.delta += currentValue;\n            }\n          } else {\n            if (calcs.previousDeltaUp) {\n              calcs.delta += step; // normal increment\n            } else {\n              calcs.delta += currentValue; // account for counter reset\n            }\n            calcs.previousDeltaUp = true;\n          }\n        }\n\n        if (currentValue > calcs.max) {\n          calcs.max = currentValue;\n        }\n\n        if (currentValue < calcs.min) {\n          calcs.min = currentValue;\n        }\n\n        if (currentValue < calcs.logmin && currentValue > 0) {\n          calcs.logmin = currentValue;\n        }\n      }\n\n      if (currentValue !== 0) {\n        calcs.allIsZero = false;\n      }\n\n      calcs.lastNotNull = currentValue;\n    }\n  }\n\n  if (calcs.max === -Number.MAX_VALUE) {\n    calcs.max = null;\n  }\n\n  if (calcs.min === Number.MAX_VALUE) {\n    calcs.min = null;\n  }\n\n  if (calcs.step === Number.MAX_VALUE) {\n    calcs.step = null;\n  }\n\n  if (calcs.nonNullCount > 0) {\n    calcs.mean = calcs.sum! / calcs.nonNullCount;\n  }\n\n  if (calcs.allIsNull) {\n    calcs.allIsZero = false;\n  }\n\n  if (calcs.max !== null && calcs.min !== null) {\n    calcs.range = calcs.max - calcs.min;\n  }\n\n  if (isNumber(calcs.firstNotNull) && isNumber(calcs.lastNotNull)) {\n    calcs.diff = calcs.lastNotNull - calcs.firstNotNull;\n  }\n\n  return calcs;\n}\n\nfunction calculateFirst(field: Field, ignoreNulls: boolean, nullAsZero: boolean): FieldCalcs {\n  return { first: field.values.get(0) };\n}\n\nfunction calculateFirstNotNull(field: Field, ignoreNulls: boolean, nullAsZero: boolean): FieldCalcs {\n  const data = field.values;\n  for (let idx = 0; idx < data.length; idx++) {\n    const v = data.get(idx);\n    if (v != null && v !== undefined) {\n      return { firstNotNull: v };\n    }\n  }\n  return { firstNotNull: null };\n}\n\nfunction calculateLast(field: Field, ignoreNulls: boolean, nullAsZero: boolean): FieldCalcs {\n  const data = field.values;\n  return { last: data.get(data.length - 1) };\n}\n\nfunction calculateLastNotNull(field: Field, ignoreNulls: boolean, nullAsZero: boolean): FieldCalcs {\n  const data = field.values;\n  let idx = data.length - 1;\n  while (idx >= 0) {\n    const v = data.get(idx--);\n    if (v != null && v !== undefined) {\n      return { lastNotNull: v };\n    }\n  }\n  return { lastNotNull: null };\n}\n\nfunction calculateChangeCount(field: Field, ignoreNulls: boolean, nullAsZero: boolean): FieldCalcs {\n  const data = field.values;\n  let count = 0;\n  let first = true;\n  let last: any = null;\n  for (let i = 0; i < data.length; i++) {\n    let currentValue = data.get(i);\n    if (currentValue === null) {\n      if (ignoreNulls) {\n        continue;\n      }\n      if (nullAsZero) {\n        currentValue = 0;\n      }\n    }\n    if (!first && last !== currentValue) {\n      count++;\n    }\n    first = false;\n    last = currentValue;\n  }\n\n  return { changeCount: count };\n}\n\nfunction calculateDistinctCount(field: Field, ignoreNulls: boolean, nullAsZero: boolean): FieldCalcs {\n  const data = field.values;\n  const distinct = new Set<any>();\n  for (let i = 0; i < data.length; i++) {\n    let currentValue = data.get(i);\n    if (currentValue === null) {\n      if (ignoreNulls) {\n        continue;\n      }\n      if (nullAsZero) {\n        currentValue = 0;\n      }\n    }\n    distinct.add(currentValue);\n  }\n  return { distinctCount: distinct.size };\n}\n","import { DataFrame } from '../../types/dataFrame';\nimport { DataTransformerID } from './ids';\nimport { MutableDataFrame } from '../../dataframe/MutableDataFrame';\nimport { DataTransformerInfo } from '../../types/transformations';\n\nexport interface AppendOptions {}\n\nexport const appendTransformer: DataTransformerInfo<AppendOptions> = {\n  id: DataTransformerID.append,\n  name: 'Append',\n  description: 'Append values into a single DataFrame.  This uses the name as the key',\n  defaultOptions: {},\n\n  /**\n   * Return a modified copy of the series.  If the transform is not or should not\n   * be applied, just return the input series\n   */\n  transformer: (options: AppendOptions) => {\n    return (data: DataFrame[]) => {\n      if (data.length < 2) {\n        return data;\n      }\n\n      // Add the first row\n      const processed = new MutableDataFrame();\n      for (const f of data[0].fields) {\n        processed.addField({\n          ...f,\n          values: [...f.values.toArray()],\n        });\n      }\n\n      for (let i = 1; i < data.length; i++) {\n        const frame = data[i];\n        const startLength = frame.length;\n        for (let j = 0; j < frame.fields.length; j++) {\n          const src = frame.fields[j];\n          let vals = processed.values[src.name];\n          if (!vals) {\n            vals = processed.addField(\n              {\n                ...src,\n                values: [],\n              },\n              startLength\n            ).values;\n          }\n\n          // Add each row\n          for (let k = 0; k < frame.length; k++) {\n            vals.add(src.values.get(k));\n          }\n        }\n        processed.validate();\n      }\n      return [processed];\n    };\n  },\n};\n","import { DataTransformerID } from './ids';\nimport { MatcherConfig, DataTransformerInfo } from '../../types/transformations';\nimport { ReducerID, fieldReducers, reduceField } from '../fieldReducer';\nimport { alwaysFieldMatcher } from '../matchers/predicates';\nimport { DataFrame, Field, FieldType } from '../../types/dataFrame';\nimport { ArrayVector } from '../../vector/ArrayVector';\nimport { KeyValue } from '../../types/data';\nimport { guessFieldTypeForField } from '../../dataframe/processDataFrame';\nimport { getFieldMatcher } from '../matchers';\n\nexport interface ReduceTransformerOptions {\n  reducers: ReducerID[];\n  fields?: MatcherConfig; // Assume all fields\n}\n\nexport const reduceTransformer: DataTransformerInfo<ReduceTransformerOptions> = {\n  id: DataTransformerID.reduce,\n  name: 'Reducer',\n  description: 'Return a DataFrame with the reduction results',\n  defaultOptions: {\n    reducers: [ReducerID.min, ReducerID.max, ReducerID.mean, ReducerID.last],\n  },\n\n  /**\n   * Return a modified copy of the series.  If the transform is not or should not\n   * be applied, just return the input series\n   */\n  transformer: (options: ReduceTransformerOptions) => {\n    const matcher = options.fields ? getFieldMatcher(options.fields) : alwaysFieldMatcher;\n    const calculators = options.reducers && options.reducers.length ? fieldReducers.list(options.reducers) : [];\n    const reducers = calculators.map(c => c.id);\n\n    return (data: DataFrame[]) => {\n      const processed: DataFrame[] = [];\n      for (const series of data) {\n        const values: ArrayVector[] = [];\n        const fields: Field[] = [];\n        const byId: KeyValue<ArrayVector> = {};\n        values.push(new ArrayVector()); // The name\n        fields.push({\n          name: 'Field',\n          type: FieldType.string,\n          values: values[0],\n          config: {},\n        });\n        for (const info of calculators) {\n          const vals = new ArrayVector();\n          byId[info.id] = vals;\n          values.push(vals);\n          fields.push({\n            name: info.id,\n            type: FieldType.other, // UNKNOWN until after we call the functions\n            values: values[values.length - 1],\n            config: {\n              title: info.name,\n              // UNIT from original field?\n            },\n          });\n        }\n        for (let i = 0; i < series.fields.length; i++) {\n          const field = series.fields[i];\n          if (matcher(field)) {\n            const results = reduceField({\n              field,\n              reducers,\n            });\n            // Update the name list\n            values[0].buffer.push(field.name);\n            for (const info of calculators) {\n              const v = results[info.id];\n              byId[info.id].buffer.push(v);\n            }\n          }\n        }\n        for (const f of fields) {\n          const t = guessFieldTypeForField(f);\n          if (t) {\n            f.type = t;\n          }\n        }\n        processed.push({\n          ...series, // Same properties, different fields\n          fields,\n          length: values[0].length,\n        });\n      }\n      return processed;\n    };\n  },\n};\n","import { DataTransformerID } from './ids';\nimport { DataFrame } from '../../types/dataFrame';\nimport { DataTransformerInfo } from '../../types/transformations';\n\nexport interface NoopTransformerOptions {\n  include?: string;\n  exclude?: string;\n}\n\nexport const noopTransformer: DataTransformerInfo<NoopTransformerOptions> = {\n  id: DataTransformerID.noop,\n  name: 'noop',\n  description: 'No-operation transformer',\n  defaultOptions: {},\n\n  /**\n   * Return a modified copy of the series.  If the transform is not or should not\n   * be applied, just return the input series\n   */\n  transformer: (options: NoopTransformerOptions) => {\n    return (data: DataFrame[]) => data;\n  },\n};\n","import { noopTransformer } from './noop';\nimport { DataFrame, Field } from '../../types/dataFrame';\nimport { DataTransformerID } from './ids';\nimport { DataTransformerInfo, MatcherConfig } from '../../types/transformations';\nimport { FieldMatcherID } from '../matchers/ids';\nimport { getFieldMatcher, getFrameMatchers } from '../matchers';\n\nexport interface FilterOptions {\n  include?: MatcherConfig;\n  exclude?: MatcherConfig;\n}\n\nexport const filterFieldsTransformer: DataTransformerInfo<FilterOptions> = {\n  id: DataTransformerID.filterFields,\n  name: 'Filter Fields',\n  description: 'select a subset of fields',\n  defaultOptions: {\n    include: { id: FieldMatcherID.numeric },\n  },\n\n  /**\n   * Return a modified copy of the series.  If the transform is not or should not\n   * be applied, just return the input series\n   */\n  transformer: (options: FilterOptions) => {\n    if (!options.include && !options.exclude) {\n      return noopTransformer.transformer({});\n    }\n\n    const include = options.include ? getFieldMatcher(options.include) : null;\n    const exclude = options.exclude ? getFieldMatcher(options.exclude) : null;\n\n    return (data: DataFrame[]) => {\n      const processed: DataFrame[] = [];\n      for (const series of data) {\n        // Find the matching field indexes\n        const fields: Field[] = [];\n        for (let i = 0; i < series.fields.length; i++) {\n          const field = series.fields[i];\n          if (exclude) {\n            if (exclude(field)) {\n              continue;\n            }\n            if (!include) {\n              fields.push(field);\n            }\n          }\n          if (include && include(field)) {\n            fields.push(field);\n          }\n        }\n\n        if (!fields.length) {\n          continue;\n        }\n        const copy = {\n          ...series, // all the other properties\n          fields, // but a different set of fields\n        };\n        processed.push(copy);\n      }\n      return processed;\n    };\n  },\n};\n\nexport const filterFramesTransformer: DataTransformerInfo<FilterOptions> = {\n  id: DataTransformerID.filterFrames,\n  name: 'Filter Frames',\n  description: 'select a subset of frames',\n  defaultOptions: {},\n\n  /**\n   * Return a modified copy of the series.  If the transform is not or should not\n   * be applied, just return the input series\n   */\n  transformer: (options: FilterOptions) => {\n    if (!options.include && !options.exclude) {\n      return noopTransformer.transformer({});\n    }\n\n    const include = options.include ? getFrameMatchers(options.include) : null;\n    const exclude = options.exclude ? getFrameMatchers(options.exclude) : null;\n\n    return (data: DataFrame[]) => {\n      const processed: DataFrame[] = [];\n      for (const series of data) {\n        if (exclude) {\n          if (exclude(series)) {\n            continue;\n          }\n          if (!include) {\n            processed.push(series);\n          }\n        }\n        if (include && include(series)) {\n          processed.push(series);\n        }\n      }\n      return processed;\n    };\n  },\n};\n","import { DataTransformerID } from './ids';\nimport { filterFieldsTransformer, FilterOptions } from './filter';\nimport { DataTransformerInfo } from '../../types/transformations';\nimport { FieldMatcherID } from '../matchers/ids';\n\nexport interface FilterFieldsByNameTransformerOptions {\n  include?: string;\n  exclude?: string;\n}\n\nexport const filterFieldsByNameTransformer: DataTransformerInfo<FilterFieldsByNameTransformerOptions> = {\n  id: DataTransformerID.filterFieldsByName,\n  name: 'Filter fields by name',\n  description: 'select a subset of fields',\n  defaultOptions: {},\n\n  /**\n   * Return a modified copy of the series.  If the transform is not or should not\n   * be applied, just return the input series\n   */\n  transformer: (options: FilterFieldsByNameTransformerOptions) => {\n    const filterOptions: FilterOptions = {};\n    if (options.include) {\n      filterOptions.include = {\n        id: FieldMatcherID.byName,\n        options: options.include,\n      };\n    }\n    if (options.exclude) {\n      filterOptions.exclude = {\n        id: FieldMatcherID.byName,\n        options: options.exclude,\n      };\n    }\n\n    return filterFieldsTransformer.transformer(filterOptions);\n  },\n};\n","import { DataFrame } from '../types/dataFrame';\nimport { Registry } from '../utils/Registry';\n// Initalize the Registry\n\nimport { appendTransformer, AppendOptions } from './transformers/append';\nimport { reduceTransformer, ReduceTransformerOptions } from './transformers/reduce';\nimport { filterFieldsTransformer, filterFramesTransformer } from './transformers/filter';\nimport { filterFieldsByNameTransformer, FilterFieldsByNameTransformerOptions } from './transformers/filterByName';\nimport { noopTransformer } from './transformers/noop';\nimport { DataTransformerInfo, DataTransformerConfig } from '../types/transformations';\n\n/**\n * Apply configured transformations to the input data\n */\nexport function transformDataFrame(options: DataTransformerConfig[], data: DataFrame[]): DataFrame[] {\n  let processed = data;\n  for (const config of options) {\n    const info = transformersRegistry.get(config.id);\n    const transformer = info.transformer(config.options);\n    const after = transformer(processed);\n\n    // Add a key to the metadata if the data changed\n    if (after && after !== processed) {\n      for (const series of after) {\n        if (!series.meta) {\n          series.meta = {};\n        }\n        if (!series.meta.transformations) {\n          series.meta.transformations = [info.id];\n        } else {\n          series.meta.transformations = [...series.meta.transformations, info.id];\n        }\n      }\n      processed = after;\n    }\n  }\n  return processed;\n}\n\n/**\n * Registry of transformation options that can be driven by\n * stored configuration files.\n */\nclass TransformerRegistry extends Registry<DataTransformerInfo> {\n  // ------------------------------------------------------------\n  // Nacent options for more functional programming\n  // The API to these functions should change to match the actual\n  // needs of people trying to use it.\n  //  filterFields|Frames is left off since it is likely easier to\n  //  support with `frames.filter( f => {...} )`\n  // ------------------------------------------------------------\n\n  append(data: DataFrame[], options?: AppendOptions): DataFrame | undefined {\n    return appendTransformer.transformer(options || appendTransformer.defaultOptions)(data)[0];\n  }\n\n  reduce(data: DataFrame[], options: ReduceTransformerOptions): DataFrame[] {\n    return reduceTransformer.transformer(options)(data);\n  }\n}\n\nexport const transformersRegistry = new TransformerRegistry(() => [\n  noopTransformer,\n  filterFieldsTransformer,\n  filterFieldsByNameTransformer,\n  filterFramesTransformer,\n  appendTransformer,\n  reduceTransformer,\n]);\n\nexport { ReduceTransformerOptions, FilterFieldsByNameTransformerOptions };\n","export * from './matchers/ids';\nexport * from './transformers/ids';\nexport * from './matchers';\nexport * from './transformers';\nexport * from './fieldReducer';\nexport { FilterFieldsByNameTransformerOptions } from './transformers/filterByName';\nexport { ReduceTransformerOptions } from './transformers/reduce';\n","var path = 'public/app/plugins/datasource/loki/partials/annotations.editor.html';\nvar html = \"<loki-annotations-query-editor expr=ctrl.annotation.expr on-change=ctrl.onQueryChange datasource=ctrl.datasource />\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { updateLocation } from './location';\nimport { updateNavIndex, UpdateNavIndexAction } from './navModel';\nimport { notifyApp, clearAppNotification } from './appNotification';\n\nexport { updateLocation, updateNavIndex, UpdateNavIndexAction, notifyApp, clearAppNotification };\n","var path = 'public/app/plugins/datasource/opentsdb/partials/config.html';\nvar html = \"<datasource-http-settings current=ctrl.current suggest-url=http://localhost:4242></datasource-http-settings>\\n\\n<h5>OpenTSDB settings</h5>\\n<div class=gf-form>\\n  <span class=\\\"gf-form-label width-7\\\">\\n    Version\\n  </span>\\n  <span class=gf-form-select-wrapper>\\n    <select class=\\\"gf-form-input gf-size-auto\\\" ng-model=ctrl.current.jsonData.tsdbVersion ng-options=\\\"v.value as v.name for v in ctrl.tsdbVersions\\\"></select>\\n  </span>\\n</div>\\n<div class=gf-form>\\n  <span class=\\\"gf-form-label width-7\\\">\\n    Resolution\\n  </span>\\n  <span class=gf-form-select-wrapper>\\n    <select class=\\\"gf-form-input gf-size-auto\\\" ng-model=ctrl.current.jsonData.tsdbResolution ng-options=\\\"v.value as v.name for v in ctrl.tsdbResolutions\\\"></select>\\n  </span>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import {\n  TimeRange,\n  TIME_FORMAT,\n  RawTimeRange,\n  TimeZone,\n  rangeUtil,\n  dateMath,\n  isDateTime,\n  dateTime,\n  DateTime,\n  dateTimeForTimeZone,\n} from '@grafana/data';\n\nexport const rawToTimeRange = (raw: RawTimeRange, timeZone?: TimeZone): TimeRange => {\n  const from = stringToDateTimeType(raw.from, false, timeZone);\n  const to = stringToDateTimeType(raw.to, true, timeZone);\n\n  return { from, to, raw };\n};\n\nexport const stringToDateTimeType = (value: string | DateTime, roundUp?: boolean, timeZone?: TimeZone): DateTime => {\n  if (isDateTime(value)) {\n    return value;\n  }\n\n  if (value.indexOf('now') !== -1) {\n    if (!dateMath.isValid(value)) {\n      return dateTime();\n    }\n\n    const parsed = dateMath.parse(value, roundUp, timeZone);\n    return parsed || dateTime();\n  }\n\n  return dateTimeForTimeZone(timeZone, value, TIME_FORMAT);\n};\n\nexport const mapTimeRangeToRangeString = (timeRange: RawTimeRange): string => {\n  return rangeUtil.describeTimeRange(timeRange);\n};\n\nexport const isValidTimeString = (text: string) => dateMath.isValid(text);\n","import React, { PureComponent } from 'react';\nimport Calendar from 'react-calendar/dist/entry.nostyle';\nimport { TimeFragment, TimeZone, TIME_FORMAT } from '@grafana/data';\nimport { DateTime, dateTime, toUtc } from '@grafana/data';\nimport { stringToDateTimeType } from './time';\n\nexport interface Props {\n  value: TimeFragment;\n  roundup?: boolean;\n  timeZone?: TimeZone;\n  onChange: (value: DateTime) => void;\n}\n\nexport class TimePickerCalendar extends PureComponent<Props> {\n  onCalendarChange = (date: Date | Date[]) => {\n    const { onChange, timeZone } = this.props;\n\n    if (Array.isArray(date)) {\n      return;\n    }\n\n    let newDate = dateTime(date);\n\n    if (timeZone === 'utc') {\n      newDate = toUtc(newDate.format(TIME_FORMAT));\n    }\n\n    onChange(newDate);\n  };\n\n  onDrilldown = (props: any) => {\n    // this is to prevent clickout side wrapper from triggering when drilling down\n    if (window.event) {\n      // @ts-ignore\n      window.event.stopPropagation();\n    }\n  };\n\n  render() {\n    const { value, roundup, timeZone } = this.props;\n    let date = stringToDateTimeType(value, roundup, timeZone);\n\n    if (!date.isValid()) {\n      date = dateTime();\n    }\n\n    return (\n      <Calendar\n        value={date.toDate()}\n        next2Label={null}\n        prev2Label={null}\n        className=\"time-picker-calendar\"\n        tileClassName=\"time-picker-calendar-tile\"\n        onChange={this.onCalendarChange}\n        onDrillDown={this.onDrilldown}\n        nextLabel={<span className=\"fa fa-angle-right\" />}\n        prevLabel={<span className=\"fa fa-angle-left\" />}\n      />\n    );\n  }\n}\n","import React, { PureComponent, ChangeEvent } from 'react';\nimport { TimeFragment, TIME_FORMAT, TimeZone, isDateTime } from '@grafana/data';\nimport { Input } from '../Input/Input';\nimport { stringToDateTimeType, isValidTimeString } from './time';\n\nexport interface Props {\n  value: TimeFragment;\n  roundup?: boolean;\n  timeZone?: TimeZone;\n  onChange: (value: string, isValid: boolean) => void;\n  tabIndex?: number;\n}\n\nexport class TimePickerInput extends PureComponent<Props> {\n  isValid = (value: string) => {\n    const { timeZone, roundup } = this.props;\n\n    if (value.indexOf('now') !== -1) {\n      const isValid = isValidTimeString(value);\n      return isValid;\n    }\n\n    const parsed = stringToDateTimeType(value, roundup, timeZone);\n    const isValid = parsed.isValid();\n    return isValid;\n  };\n\n  onChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { onChange } = this.props;\n    const value = event.target.value;\n\n    onChange(value, this.isValid(value));\n  };\n\n  valueToString = (value: TimeFragment) => {\n    if (isDateTime(value)) {\n      return value.format(TIME_FORMAT);\n    } else {\n      return value;\n    }\n  };\n\n  render() {\n    const { value, tabIndex } = this.props;\n    const valueString = this.valueToString(value);\n    const error = !this.isValid(valueString);\n\n    return (\n      <Input\n        type=\"text\"\n        onChange={this.onChange}\n        onBlur={this.onChange}\n        hideErrorMessage={true}\n        value={valueString}\n        className={`time-picker-input${error ? '-error' : ''}`}\n        tabIndex={tabIndex}\n      />\n    );\n  }\n}\n","// Libraries\nimport React, { Component } from 'react';\n\n// Components\nimport { TimePickerCalendar } from './TimePickerCalendar';\nimport { TimePickerInput } from './TimePickerInput';\nimport { rawToTimeRange } from './time';\n\n// Types\nimport { DateTime, TimeRange, TimeZone } from '@grafana/data';\n\nexport interface Props {\n  value: TimeRange;\n  timeZone?: TimeZone;\n  onChange: (timeRange: TimeRange) => void;\n}\n\nexport interface State {\n  from: DateTime | string;\n  to: DateTime | string;\n  isFromInputValid: boolean;\n  isToInputValid: boolean;\n}\n\nexport class TimePickerPopover extends Component<Props, State> {\n  static popoverClassName = 'time-picker-popover';\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      from: props.value.raw.from,\n      to: props.value.raw.to,\n      isFromInputValid: true,\n      isToInputValid: true,\n    };\n  }\n\n  onFromInputChanged = (value: string, valid: boolean) => {\n    this.setState({ from: value, isFromInputValid: valid });\n  };\n\n  onToInputChanged = (value: string, valid: boolean) => {\n    this.setState({ to: value, isToInputValid: valid });\n  };\n\n  onFromCalendarChanged = (value: DateTime) => {\n    this.setState({ from: value });\n  };\n\n  onToCalendarChanged = (value: DateTime) => {\n    value.set('h', 23);\n    value.set('m', 59);\n    value.set('s', 59);\n    this.setState({ to: value });\n  };\n\n  onApplyClick = () => {\n    const { onChange, timeZone } = this.props;\n    const { from, to } = this.state;\n\n    onChange(rawToTimeRange({ from, to }, timeZone));\n  };\n\n  render() {\n    const { timeZone } = this.props;\n    const { isFromInputValid, isToInputValid, from, to } = this.state;\n\n    const isValid = isFromInputValid && isToInputValid;\n\n    return (\n      <div className={TimePickerPopover.popoverClassName}>\n        <div className=\"time-picker-popover-body\">\n          <div className=\"time-picker-popover-body-custom-ranges\">\n            <div className=\"time-picker-popover-body-custom-ranges-input\">\n              <div className=\"gf-form\">\n                <label className=\"gf-form-label\">From</label>\n                <TimePickerInput\n                  roundup={false}\n                  timeZone={timeZone}\n                  value={from}\n                  onChange={this.onFromInputChanged}\n                  tabIndex={1}\n                />\n              </div>\n            </div>\n            <div className=\"time-picker-popover-body-custom-ranges-calendar\">\n              <TimePickerCalendar\n                timeZone={timeZone}\n                roundup={false}\n                value={from}\n                onChange={this.onFromCalendarChanged}\n              />\n            </div>\n          </div>\n          <div className=\"time-picker-popover-body-custom-ranges\">\n            <div className=\"time-picker-popover-body-custom-ranges-input\">\n              <div className=\"gf-form\">\n                <label className=\"gf-form-label\">To</label>\n                <TimePickerInput\n                  roundup={true}\n                  timeZone={timeZone}\n                  value={to}\n                  onChange={this.onToInputChanged}\n                  tabIndex={2}\n                />\n              </div>\n            </div>\n            <div className=\"time-picker-popover-body-custom-ranges-calendar\">\n              <TimePickerCalendar roundup={true} timeZone={timeZone} value={to} onChange={this.onToCalendarChanged} />\n            </div>\n          </div>\n        </div>\n        <div className=\"time-picker-popover-footer\">\n          <button type=\"submit\" className=\"btn btn-success\" disabled={!isValid} onClick={this.onApplyClick}>\n            Apply\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","// Libraries\nimport React, { PureComponent, createRef } from 'react';\n\n// Components\nimport { ButtonSelect } from '../Select/ButtonSelect';\nimport { Tooltip } from '../Tooltip/Tooltip';\nimport { TimePickerPopover } from './TimePickerPopover';\nimport { ClickOutsideWrapper } from '../ClickOutsideWrapper/ClickOutsideWrapper';\n\n// Utils & Services\nimport { isDateTime, DateTime } from '@grafana/data';\nimport { rangeUtil } from '@grafana/data';\nimport { rawToTimeRange } from './time';\n\n// Types\nimport { TimeRange, TimeOption, TimeZone, TIME_FORMAT, SelectableValue } from '@grafana/data';\nimport { dateMath } from '@grafana/data';\n\nexport interface Props {\n  value: TimeRange;\n  selectOptions: TimeOption[];\n  timeZone?: TimeZone;\n  onChange: (timeRange: TimeRange) => void;\n  onMoveBackward: () => void;\n  onMoveForward: () => void;\n  onZoom: () => void;\n}\n\nexport const defaultSelectOptions: TimeOption[] = [\n  { from: 'now-5m', to: 'now', display: 'Last 5 minutes', section: 3 },\n  { from: 'now-15m', to: 'now', display: 'Last 15 minutes', section: 3 },\n  { from: 'now-30m', to: 'now', display: 'Last 30 minutes', section: 3 },\n  { from: 'now-1h', to: 'now', display: 'Last 1 hour', section: 3 },\n  { from: 'now-3h', to: 'now', display: 'Last 3 hours', section: 3 },\n  { from: 'now-6h', to: 'now', display: 'Last 6 hours', section: 3 },\n  { from: 'now-12h', to: 'now', display: 'Last 12 hours', section: 3 },\n  { from: 'now-24h', to: 'now', display: 'Last 24 hours', section: 3 },\n  { from: 'now-2d', to: 'now', display: 'Last 2 days', section: 3 },\n  { from: 'now-7d', to: 'now', display: 'Last 7 days', section: 3 },\n  { from: 'now-30d', to: 'now', display: 'Last 30 days', section: 3 },\n  { from: 'now-90d', to: 'now', display: 'Last 90 days', section: 3 },\n  { from: 'now-6M', to: 'now', display: 'Last 6 months', section: 3 },\n  { from: 'now-1y', to: 'now', display: 'Last 1 year', section: 3 },\n  { from: 'now-2y', to: 'now', display: 'Last 2 years', section: 3 },\n  { from: 'now-5y', to: 'now', display: 'Last 5 years', section: 3 },\n  { from: 'now-1d/d', to: 'now-1d/d', display: 'Yesterday', section: 3 },\n  { from: 'now-2d/d', to: 'now-2d/d', display: 'Day before yesterday', section: 3 },\n  { from: 'now-7d/d', to: 'now-7d/d', display: 'This day last week', section: 3 },\n  { from: 'now-1w/w', to: 'now-1w/w', display: 'Previous week', section: 3 },\n  { from: 'now-1M/M', to: 'now-1M/M', display: 'Previous month', section: 3 },\n  { from: 'now-1y/y', to: 'now-1y/y', display: 'Previous year', section: 3 },\n  { from: 'now/d', to: 'now/d', display: 'Today', section: 3 },\n  { from: 'now/d', to: 'now', display: 'Today so far', section: 3 },\n  { from: 'now/w', to: 'now/w', display: 'This week', section: 3 },\n  { from: 'now/w', to: 'now', display: 'This week so far', section: 3 },\n  { from: 'now/M', to: 'now/M', display: 'This month', section: 3 },\n  { from: 'now/M', to: 'now', display: 'This month so far', section: 3 },\n  { from: 'now/y', to: 'now/y', display: 'This year', section: 3 },\n  { from: 'now/y', to: 'now', display: 'This year so far', section: 3 },\n];\n\nconst defaultZoomOutTooltip = () => {\n  return (\n    <>\n      Time range zoom out <br /> CTRL+Z\n    </>\n  );\n};\n\nexport interface State {\n  isCustomOpen: boolean;\n}\nexport class TimePicker extends PureComponent<Props, State> {\n  pickerTriggerRef = createRef<HTMLDivElement>();\n\n  state: State = {\n    isCustomOpen: false,\n  };\n\n  mapTimeOptionsToSelectableValues = (selectOptions: TimeOption[]) => {\n    const options = selectOptions.map(timeOption => {\n      return {\n        label: timeOption.display,\n        value: timeOption,\n      };\n    });\n\n    options.unshift({\n      label: 'Custom time range',\n      value: { from: 'custom', to: 'custom', display: 'Custom', section: 1 },\n    });\n\n    return options;\n  };\n\n  onSelectChanged = (item: SelectableValue<TimeOption>) => {\n    const { onChange, timeZone } = this.props;\n\n    if (item.value && item.value.from === 'custom') {\n      // this is to prevent the ClickOutsideWrapper from directly closing the popover\n      setTimeout(() => {\n        this.setState({ isCustomOpen: true });\n      }, 1);\n      return;\n    }\n\n    if (item.value) {\n      onChange(rawToTimeRange({ from: item.value.from, to: item.value.to }, timeZone));\n    }\n  };\n\n  onCustomChange = (timeRange: TimeRange) => {\n    const { onChange } = this.props;\n    onChange(timeRange);\n    this.setState({ isCustomOpen: false });\n  };\n\n  onCloseCustom = () => {\n    this.setState({ isCustomOpen: false });\n  };\n\n  render() {\n    const { selectOptions: selectTimeOptions, value, onMoveBackward, onMoveForward, onZoom, timeZone } = this.props;\n    const { isCustomOpen } = this.state;\n    const options = this.mapTimeOptionsToSelectableValues(selectTimeOptions);\n    const currentOption = options.find(item => isTimeOptionEqualToTimeRange(item.value, value));\n\n    const isUTC = timeZone === 'utc';\n\n    const adjustedTime = (time: DateTime) => (isUTC ? time.utc() : time.local()) || null;\n    const adjustedTimeRange = {\n      to: dateMath.isMathString(value.raw.to) ? value.raw.to : adjustedTime(value.to),\n      from: dateMath.isMathString(value.raw.from) ? value.raw.from : adjustedTime(value.from),\n    };\n    const rangeString = rangeUtil.describeTimeRange(adjustedTimeRange);\n\n    const label = (\n      <>\n        {isCustomOpen && <span>Custom time range</span>}\n        {!isCustomOpen && <span>{rangeString}</span>}\n        {isUTC && <span className=\"time-picker-utc\">UTC</span>}\n      </>\n    );\n    const isAbsolute = isDateTime(value.raw.to);\n\n    return (\n      <div className=\"time-picker\" ref={this.pickerTriggerRef}>\n        <div className=\"time-picker-buttons\">\n          {isAbsolute && (\n            <button className=\"btn navbar-button navbar-button--tight\" onClick={onMoveBackward}>\n              <i className=\"fa fa-chevron-left\" />\n            </button>\n          )}\n          <ButtonSelect\n            className=\"time-picker-button-select\"\n            value={currentOption}\n            label={label}\n            options={options}\n            maxMenuHeight={600}\n            onChange={this.onSelectChanged}\n            iconClass={'fa fa-clock-o fa-fw'}\n            tooltipContent={<TimePickerTooltipContent timeRange={value} />}\n          />\n          {isAbsolute && (\n            <button className=\"btn navbar-button navbar-button--tight\" onClick={onMoveForward}>\n              <i className=\"fa fa-chevron-right\" />\n            </button>\n          )}\n\n          <Tooltip content={defaultZoomOutTooltip} placement=\"bottom\">\n            <button className=\"btn navbar-button navbar-button--zoom\" onClick={onZoom}>\n              <i className=\"fa fa-search-minus\" />\n            </button>\n          </Tooltip>\n\n          {isCustomOpen && (\n            <ClickOutsideWrapper onClick={this.onCloseCustom}>\n              <TimePickerPopover value={value} timeZone={timeZone} onChange={this.onCustomChange} />\n            </ClickOutsideWrapper>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst TimePickerTooltipContent = ({ timeRange }: { timeRange: TimeRange }) => (\n  <>\n    {timeRange.from.format(TIME_FORMAT)}\n    <div className=\"text-center\">to</div>\n    {timeRange.to.format(TIME_FORMAT)}\n  </>\n);\n\nfunction isTimeOptionEqualToTimeRange(option: TimeOption, range: TimeRange): boolean {\n  return range.raw.from === option.from && range.raw.to === option.to;\n}\n","var path = 'public/app/features/folders/partials/create_folder.html';\nvar html = \"<page-header model=ctrl.navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\" ng-cloak>\\n\\n\\t<h3 class=page-sub-heading>New Dashboard Folder</h3>\\n\\n  <form name=ctrl.saveForm ng-submit=ctrl.create() novalidate>\\n\\t\\t<div class=gf-form-inline>\\n\\t\\t\\t<div class=\\\"gf-form gf-form--grow\\\">\\n\\t\\t\\t\\t<label class=\\\"gf-form-label width-10\\\">Name</label>\\n\\t\\t\\t\\t<input type=text class=gf-form-input ng-model=ctrl.title give-focus=true ng-change=ctrl.titleChanged() ng-model-options=\\\"{ debounce: 400 }\\\" ng-class=\\\"{'validation-error': ctrl.nameExists || !ctrl.dash.title}\\\">\\n\\t\\t\\t\\t<label class=\\\"gf-form-label text-success\\\" ng-if=\\\"ctrl.titleTouched && !ctrl.hasValidationError\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-check\\\"></i>\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<div class=gf-form-inline ng-if=ctrl.hasValidationError>\\n\\t\\t\\t<div class=\\\"gf-form offset-width-10 gf-form--grow\\\">\\n\\t\\t\\t\\t<label class=\\\"gf-form-label text-warning gf-form-label--grow\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-warning\\\"></i>\\n\\t\\t\\t\\t\\t{{ctrl.validationError}}\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<div class=gf-form-button-row>\\n\\t\\t\\t<button type=submit class=\\\"btn btn-primary width-12\\\" ng-disabled=\\\"!ctrl.titleTouched || ctrl.hasValidationError\\\">\\n\\t\\t\\t\\tCreate\\n\\t\\t\\t</button>\\n\\t\\t</div>\\n\\t</form>\\n\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/features/manage-dashboards/components/MoveToFolderModal/template.html';\nvar html = \"<div class=modal-body>\\n  <div class=modal-header>\\n    <h2 class=modal-header-title>\\n\\t\\t\\t<i class=\\\"gicon gicon-folder-new\\\"></i>\\n      <span class=p-l-1>Choose Dashboard Folder</span>\\n    </h2>\\n\\n    <a class=modal-header-close ng-click=ctrl.dismiss();>\\n      <i class=\\\"fa fa-remove\\\"></i>\\n    </a>\\n  </div>\\n\\n  <form name=ctrl.saveForm ng-submit=ctrl.save() class=\\\"modal-content folder-modal\\\" novalidate>\\n    <p>Move the {{ctrl.dashboards.length}} selected dashboards to the following folder:</p>\\n\\n    <div class=p-t-2>\\n      <div class=gf-form>\\n          <folder-picker on-load=ctrl.onFolderChange($folder) on-change=ctrl.onFolderChange($folder) enter-folder-creation=ctrl.onEnterFolderCreation() exit-folder-creation=ctrl.onExitFolderCreation() enable-create-new=true label-class=width-7>\\n          </folder-picker>\\n      </div>\\n    </div>\\n    <div class=\\\"gf-form-button-row text-center\\\">\\n      <button type=submit class=\\\"btn btn-primary\\\" ng-disabled=\\\"ctrl.saveForm.$invalid || !ctrl.isValidFolderSelection\\\">Move</button>\\n      <a class=btn-text ng-click=ctrl.dismiss();>Cancel</a>\\n    </div>\\n  </form>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","/* Flot plugin for selecting regions of a plot.\n\nCopyright (c) 2007-2013 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nThe plugin supports these options:\n\nselection: {\n\tmode: null or \"x\" or \"y\" or \"xy\",\n\tcolor: color,\n\tshape: \"round\" or \"miter\" or \"bevel\",\n\tminSize: number of pixels\n}\n\nSelection support is enabled by setting the mode to one of \"x\", \"y\" or \"xy\".\nIn \"x\" mode, the user will only be able to specify the x range, similarly for\n\"y\" mode. For \"xy\", the selection becomes a rectangle where both ranges can be\nspecified. \"color\" is color of the selection (if you need to change the color\nlater on, you can get to it with plot.getOptions().selection.color). \"shape\"\nis the shape of the corners of the selection.\n\n\"minSize\" is the minimum size a selection can be in pixels. This value can\nbe customized to determine the smallest size a selection can be and still\nhave the selection rectangle be displayed. When customizing this value, the\nfact that it refers to pixels, not axis units must be taken into account.\nThus, for example, if there is a bar graph in time mode with BarWidth set to 1\nminute, setting \"minSize\" to 1 will not make the minimum selection size 1\nminute, but rather 1 pixel. Note also that setting \"minSize\" to 0 will prevent\n\"plotunselected\" events from being fired when the user clicks the mouse without\ndragging.\n\nWhen selection support is enabled, a \"plotselected\" event will be emitted on\nthe DOM element you passed into the plot function. The event handler gets a\nparameter with the ranges selected on the axes, like this:\n\n\tplaceholder.bind( \"plotselected\", function( event, ranges ) {\n\t\talert(\"You selected \" + ranges.xaxis.from + \" to \" + ranges.xaxis.to)\n\t\t// similar for yaxis - with multiple axes, the extra ones are in\n\t\t// x2axis, x3axis, ...\n\t});\n\nThe \"plotselected\" event is only fired when the user has finished making the\nselection. A \"plotselecting\" event is fired during the process with the same\nparameters as the \"plotselected\" event, in case you want to know what's\nhappening while it's happening,\n\nA \"plotunselected\" event with no arguments is emitted when the user clicks the\nmouse to remove the selection. As stated above, setting \"minSize\" to 0 will\ndestroy this behavior.\n\nThe plugin allso adds the following methods to the plot object:\n\n- setSelection( ranges, preventEvent )\n\n  Set the selection rectangle. The passed in ranges is on the same form as\n  returned in the \"plotselected\" event. If the selection mode is \"x\", you\n  should put in either an xaxis range, if the mode is \"y\" you need to put in\n  an yaxis range and both xaxis and yaxis if the selection mode is \"xy\", like\n  this:\n\n\tsetSelection({ xaxis: { from: 0, to: 10 }, yaxis: { from: 40, to: 60 } });\n\n  setSelection will trigger the \"plotselected\" event when called. If you don't\n  want that to happen, e.g. if you're inside a \"plotselected\" handler, pass\n  true as the second parameter. If you are using multiple axes, you can\n  specify the ranges on any of those, e.g. as x2axis/x3axis/... instead of\n  xaxis, the plugin picks the first one it sees.\n\n- clearSelection( preventEvent )\n\n  Clear the selection rectangle. Pass in true to avoid getting a\n  \"plotunselected\" event.\n\n- getSelection()\n\n  Returns the current selection in the same format as the \"plotselected\"\n  event. If there's currently no selection, the function returns null.\n\n*/\n\n(function ($) {\n    function init(plot) {\n        var selection = {\n                first: { x: -1, y: -1}, second: { x: -1, y: -1},\n                show: false,\n                active: false\n            };\n\n        // FIXME: The drag handling implemented here should be\n        // abstracted out, there's some similar code from a library in\n        // the navigation plugin, this should be massaged a bit to fit\n        // the Flot cases here better and reused. Doing this would\n        // make this plugin much slimmer.\n        var savedhandlers = {};\n\n        var mouseUpHandler = null;\n\n        function onMouseMove(e) {\n            if (selection.active) {\n                updateSelection(e);\n\n                plot.getPlaceholder().trigger(\"plotselecting\", [ getSelection() ]);\n            }\n        }\n\n        function onMouseDown(e) {\n            if (e.which != 1)  // only accept left-click\n                return;\n\n            // cancel out any text selections\n            document.body.focus();\n\n            // prevent text selection and drag in old-school browsers\n            if (document.onselectstart !== undefined && savedhandlers.onselectstart == null) {\n                savedhandlers.onselectstart = document.onselectstart;\n                document.onselectstart = function () { return false; };\n            }\n            if (document.ondrag !== undefined && savedhandlers.ondrag == null) {\n                savedhandlers.ondrag = document.ondrag;\n                document.ondrag = function () { return false; };\n            }\n\n            setSelectionPos(selection.first, e);\n\n            selection.active = true;\n\n            // this is a bit silly, but we have to use a closure to be\n            // able to whack the same handler again\n            mouseUpHandler = function (e) { onMouseUp(e); };\n\n            $(document).one(\"mouseup\", mouseUpHandler);\n        }\n\n        function onMouseUp(e) {\n            mouseUpHandler = null;\n\n            // revert drag stuff for old-school browsers\n            if (document.onselectstart !== undefined)\n                document.onselectstart = savedhandlers.onselectstart;\n            if (document.ondrag !== undefined)\n                document.ondrag = savedhandlers.ondrag;\n\n            // no more dragging\n            selection.active = false;\n            updateSelection(e);\n\n            if (selectionIsSane())\n                triggerSelectedEvent(e);\n            else {\n                // this counts as a clear\n                plot.getPlaceholder().trigger(\"plotunselected\", [ ]);\n                plot.getPlaceholder().trigger(\"plotselecting\", [ null ]);\n            }\n\n            setTimeout(function() {\n              plot.isSelecting = false;\n            }, 10);\n\n            return false;\n        }\n\n        function getSelection() {\n            if (!selectionIsSane())\n                return null;\n\n            if (!selection.show) return null;\n\n            var r = {}, c1 = selection.first, c2 = selection.second;\n            var axes = plot.getAxes();\n            // look if no axis is used\n            var noAxisInUse = true;\n            $.each(axes, function (name, axis) {\n              if (axis.used) {\n                anyUsed = false;\n              }\n            })\n\n            $.each(axes, function (name, axis) {\n                if (axis.used || noAxisInUse) {\n                    var p1 = axis.c2p(c1[axis.direction]), p2 = axis.c2p(c2[axis.direction]);\n                    r[name] = { from: Math.min(p1, p2), to: Math.max(p1, p2) };\n                }\n            });\n            return r;\n        }\n\n        function triggerSelectedEvent(event) {\n            var r = getSelection();\n\n            // Add ctrlKey and metaKey to event\n            r.ctrlKey = event.ctrlKey;\n            r.metaKey = event.metaKey;\n\n            plot.getPlaceholder().trigger(\"plotselected\", [ r ]);\n\n            // backwards-compat stuff, to be removed in future\n            if (r.xaxis && r.yaxis)\n                plot.getPlaceholder().trigger(\"selected\", [ { x1: r.xaxis.from, y1: r.yaxis.from, x2: r.xaxis.to, y2: r.yaxis.to } ]);\n        }\n\n        function clamp(min, value, max) {\n            return value < min ? min: (value > max ? max: value);\n        }\n\n        function setSelectionPos(pos, e) {\n            var o = plot.getOptions();\n            var offset = plot.getPlaceholder().offset();\n            var plotOffset = plot.getPlotOffset();\n            pos.x = clamp(0, e.pageX - offset.left - plotOffset.left, plot.width());\n            pos.y = clamp(0, e.pageY - offset.top - plotOffset.top, plot.height());\n\n            if (o.selection.mode == \"y\")\n                pos.x = pos == selection.first ? 0 : plot.width();\n\n            if (o.selection.mode == \"x\")\n                pos.y = pos == selection.first ? 0 : plot.height();\n        }\n\n        function updateSelection(pos) {\n            if (pos.pageX == null)\n                return;\n\n            setSelectionPos(selection.second, pos);\n            if (selectionIsSane()) {\n                plot.isSelecting = true;\n                selection.show = true;\n                plot.triggerRedrawOverlay();\n            }\n            else\n                clearSelection(true);\n        }\n\n        function clearSelection(preventEvent) {\n            if (selection.show) {\n                selection.show = false;\n                plot.triggerRedrawOverlay();\n                if (!preventEvent)\n                    plot.getPlaceholder().trigger(\"plotunselected\", [ ]);\n            }\n        }\n\n        // function taken from markings support in Flot\n        function extractRange(ranges, coord) {\n            var axis, from, to, key, axes = plot.getAxes();\n\n            for (var k in axes) {\n                axis = axes[k];\n                if (axis.direction == coord) {\n                    key = coord + axis.n + \"axis\";\n                    if (!ranges[key] && axis.n == 1)\n                        key = coord + \"axis\"; // support x1axis as xaxis\n                    if (ranges[key]) {\n                        from = ranges[key].from;\n                        to = ranges[key].to;\n                        break;\n                    }\n                }\n            }\n\n            // backwards-compat stuff - to be removed in future\n            if (!ranges[key]) {\n                axis = coord == \"x\" ? plot.getXAxes()[0] : plot.getYAxes()[0];\n                from = ranges[coord + \"1\"];\n                to = ranges[coord + \"2\"];\n            }\n\n            // auto-reverse as an added bonus\n            if (from != null && to != null && from > to) {\n                var tmp = from;\n                from = to;\n                to = tmp;\n            }\n\n            return { from: from, to: to, axis: axis };\n        }\n\n        function setSelection(ranges, preventEvent) {\n            var axis, range, o = plot.getOptions();\n\n            if (o.selection.mode == \"y\") {\n                selection.first.x = 0;\n                selection.second.x = plot.width();\n            }\n            else {\n                range = extractRange(ranges, \"x\");\n\n                selection.first.x = range.axis.p2c(range.from);\n                selection.second.x = range.axis.p2c(range.to);\n            }\n\n            if (o.selection.mode == \"x\") {\n                selection.first.y = 0;\n                selection.second.y = plot.height();\n            }\n            else {\n                range = extractRange(ranges, \"y\");\n\n                selection.first.y = range.axis.p2c(range.from);\n                selection.second.y = range.axis.p2c(range.to);\n            }\n\n            selection.show = true;\n            plot.triggerRedrawOverlay();\n            if (!preventEvent && selectionIsSane())\n                triggerSelectedEvent();\n        }\n\n        function selectionIsSane() {\n            var minSize = plot.getOptions().selection.minSize;\n            return Math.abs(selection.second.x - selection.first.x) >= minSize &&\n                Math.abs(selection.second.y - selection.first.y) >= minSize;\n        }\n\n        plot.clearSelection = clearSelection;\n        plot.setSelection = setSelection;\n        plot.getSelection = getSelection;\n\n        plot.hooks.bindEvents.push(function(plot, eventHolder) {\n            var o = plot.getOptions();\n            if (o.selection.mode != null) {\n                eventHolder.mousemove(onMouseMove);\n                eventHolder.mousedown(onMouseDown);\n            }\n        });\n\n\n        plot.hooks.drawOverlay.push(function (plot, ctx) {\n            // draw selection\n            if (selection.show && selectionIsSane()) {\n                var plotOffset = plot.getPlotOffset();\n                var o = plot.getOptions();\n\n                ctx.save();\n                ctx.translate(plotOffset.left, plotOffset.top);\n\n                var c = $.color.parse(o.selection.color);\n\n                ctx.strokeStyle = c.scale('a', 0.8).toString();\n                ctx.lineWidth = 1;\n                ctx.lineJoin = o.selection.shape;\n                ctx.fillStyle = c.scale('a', 0.4).toString();\n\n                var x = Math.min(selection.first.x, selection.second.x) + 0.5,\n                    y = Math.min(selection.first.y, selection.second.y) + 0.5,\n                    w = Math.abs(selection.second.x - selection.first.x) - 1,\n                    h = Math.abs(selection.second.y - selection.first.y) - 1;\n\n                ctx.fillRect(x, y, w, h);\n                ctx.strokeRect(x, y, w, h);\n\n                ctx.restore();\n            }\n        });\n\n        plot.hooks.shutdown.push(function (plot, eventHolder) {\n            eventHolder.unbind(\"mousemove\", onMouseMove);\n            eventHolder.unbind(\"mousedown\", onMouseDown);\n\n            if (mouseUpHandler)\n                $(document).unbind(\"mouseup\", mouseUpHandler);\n        });\n\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: {\n            selection: {\n                mode: null, // one of null, \"x\", \"y\" or \"xy\"\n                color: \"#e8cfac\",\n                shape: \"round\", // one of \"round\", \"miter\", or \"bevel\"\n                minSize: 5 // minimum number of pixels\n            }\n        },\n        name: 'selection',\n        version: '1.1'\n    });\n})(jQuery);\n","import React, { PureComponent } from 'react';\nimport { Select } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport { dashboardPermissionLevels, DashboardAcl, PermissionLevel } from 'app/types/acl';\nimport { FolderInfo } from 'app/types';\n\nconst setClassNameHelper = (inherited: boolean) => {\n  return inherited ? 'gf-form-disabled' : '';\n};\n\nfunction ItemAvatar({ item }: { item: DashboardAcl }) {\n  if (item.userAvatarUrl) {\n    return <img className=\"filter-table__avatar\" src={item.userAvatarUrl} />;\n  }\n  if (item.teamAvatarUrl) {\n    return <img className=\"filter-table__avatar\" src={item.teamAvatarUrl} />;\n  }\n  if (item.role === 'Editor') {\n    return <i style={{ width: '25px', height: '25px' }} className=\"gicon gicon-editor\" />;\n  }\n\n  return <i style={{ width: '25px', height: '25px' }} className=\"gicon gicon-viewer\" />;\n}\n\nfunction ItemDescription({ item }: { item: DashboardAcl }) {\n  if (item.userId) {\n    return <span className=\"filter-table__weak-italic\">(User)</span>;\n  }\n  if (item.teamId) {\n    return <span className=\"filter-table__weak-italic\">(Team)</span>;\n  }\n  return <span className=\"filter-table__weak-italic\">(Role)</span>;\n}\n\ninterface Props {\n  item: DashboardAcl;\n  onRemoveItem: (item: DashboardAcl) => void;\n  onPermissionChanged: (item: DashboardAcl, level: PermissionLevel) => void;\n  folderInfo?: FolderInfo;\n}\n\nexport default class PermissionsListItem extends PureComponent<Props> {\n  onPermissionChanged = (option: SelectableValue<PermissionLevel>) => {\n    this.props.onPermissionChanged(this.props.item, option.value);\n  };\n\n  onRemoveItem = () => {\n    this.props.onRemoveItem(this.props.item);\n  };\n\n  render() {\n    const { item, folderInfo } = this.props;\n    const inheritedFromRoot = item.dashboardId === -1 && !item.inherited;\n    const currentPermissionLevel = dashboardPermissionLevels.find(dp => dp.value === item.permission);\n\n    return (\n      <tr className={setClassNameHelper(item.inherited)}>\n        <td style={{ width: '1%' }}>\n          <ItemAvatar item={item} />\n        </td>\n        <td style={{ width: '90%' }}>\n          {item.name} <ItemDescription item={item} />\n        </td>\n        <td>\n          {item.inherited && folderInfo && (\n            <em className=\"muted no-wrap\">\n              Inherited from folder{' '}\n              <a className=\"text-link\" href={`${folderInfo.url}/permissions`}>\n                {folderInfo.title}\n              </a>{' '}\n            </em>\n          )}\n          {inheritedFromRoot && <em className=\"muted no-wrap\">Default Permission</em>}\n        </td>\n        <td className=\"query-keyword\">Can</td>\n        <td>\n          <div className=\"gf-form\">\n            <Select\n              isSearchable={false}\n              options={dashboardPermissionLevels}\n              onChange={this.onPermissionChanged}\n              isDisabled={item.inherited}\n              className=\"gf-form-select-box__control--menu-right\"\n              value={currentPermissionLevel}\n            />\n          </div>\n        </td>\n        <td>\n          {!item.inherited ? (\n            <a className=\"btn btn-danger btn-small\" onClick={this.onRemoveItem}>\n              <i className=\"fa fa-remove\" />\n            </a>\n          ) : (\n            <button className=\"btn btn-inverse btn-small\">\n              <i className=\"fa fa-lock\" />\n            </button>\n          )}\n        </td>\n      </tr>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Select } from '@grafana/ui';\nimport { dashboardPermissionLevels } from 'app/types/acl';\n\nexport interface Props {\n  item: any;\n}\n\nexport default class DisabledPermissionListItem extends Component<Props, any> {\n  render() {\n    const { item } = this.props;\n    const currentPermissionLevel = dashboardPermissionLevels.find(dp => dp.value === item.permission);\n\n    return (\n      <tr className=\"gf-form-disabled\">\n        <td style={{ width: '1%' }}>\n          <i style={{ width: '25px', height: '25px' }} className=\"gicon gicon-shield\" />\n        </td>\n        <td style={{ width: '90%' }}>\n          {item.name}\n          <span className=\"filter-table__weak-italic\"> (Role)</span>\n        </td>\n        <td />\n        <td className=\"query-keyword\">Can</td>\n        <td>\n          <div className=\"gf-form\">\n            <Select\n              options={dashboardPermissionLevels}\n              onChange={() => {}}\n              isDisabled={true}\n              className=\"gf-form-select-box__control--menu-right\"\n              value={currentPermissionLevel}\n            />\n          </div>\n        </td>\n        <td>\n          <button className=\"btn btn-inverse btn-small\">\n            <i className=\"fa fa-lock\" />\n          </button>\n        </td>\n      </tr>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PermissionsListItem from './PermissionListItem';\nimport DisabledPermissionsListItem from './DisabledPermissionListItem';\nimport { FolderInfo } from 'app/types';\nimport { DashboardAcl } from 'app/types/acl';\n\nexport interface Props {\n  items: DashboardAcl[];\n  onRemoveItem: (item: DashboardAcl) => void;\n  onPermissionChanged: any;\n  isFetching: boolean;\n  folderInfo?: FolderInfo;\n}\n\nclass PermissionList extends PureComponent<Props> {\n  render() {\n    const { items, onRemoveItem, onPermissionChanged, isFetching, folderInfo } = this.props;\n\n    return (\n      <table className=\"filter-table gf-form-group\">\n        <tbody>\n          <DisabledPermissionsListItem\n            key={0}\n            item={{\n              name: 'Admin',\n              permission: 4,\n              icon: 'fa fa-fw fa-street-view',\n            }}\n          />\n          {items.map((item, idx) => {\n            return (\n              <PermissionsListItem\n                key={idx + 1}\n                item={item}\n                onRemoveItem={onRemoveItem}\n                onPermissionChanged={onPermissionChanged}\n                folderInfo={folderInfo}\n              />\n            );\n          })}\n          {isFetching === true && items.length < 1 ? (\n            <tr>\n              <td colSpan={4}>\n                <em>Loading permissions...</em>\n              </td>\n            </tr>\n          ) : null}\n\n          {isFetching === false && items.length < 1 ? (\n            <tr>\n              <td colSpan={4}>\n                <em>No permissions are set. Will only be accessible by admins.</em>\n              </td>\n            </tr>\n          ) : null}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default PermissionList;\n","import _ from 'lodash';\nimport { QueryPartDef, QueryPart } from 'app/core/components/query_part/query_part';\n\nconst alertQueryDef = new QueryPartDef({\n  type: 'query',\n  params: [\n    { name: 'queryRefId', type: 'string', dynamicLookup: true },\n    {\n      name: 'from',\n      type: 'string',\n      options: ['10s', '1m', '5m', '10m', '15m', '1h', '24h', '48h'],\n    },\n    { name: 'to', type: 'string', options: ['now', 'now-1m', 'now-5m', 'now-10m', 'now-1h'] },\n  ],\n  defaultParams: ['#A', '15m', 'now', 'avg'],\n});\n\nconst conditionTypes = [{ text: 'Query', value: 'query' }];\n\nconst alertStateSortScore = {\n  alerting: 1,\n  no_data: 2,\n  pending: 3,\n  ok: 4,\n  paused: 5,\n};\n\nconst evalFunctions = [\n  { text: 'IS ABOVE', value: 'gt' },\n  { text: 'IS BELOW', value: 'lt' },\n  { text: 'IS OUTSIDE RANGE', value: 'outside_range' },\n  { text: 'IS WITHIN RANGE', value: 'within_range' },\n  { text: 'HAS NO VALUE', value: 'no_value' },\n];\n\nconst evalOperators = [{ text: 'OR', value: 'or' }, { text: 'AND', value: 'and' }];\n\nconst reducerTypes = [\n  { text: 'avg()', value: 'avg' },\n  { text: 'min()', value: 'min' },\n  { text: 'max()', value: 'max' },\n  { text: 'sum()', value: 'sum' },\n  { text: 'count()', value: 'count' },\n  { text: 'last()', value: 'last' },\n  { text: 'median()', value: 'median' },\n  { text: 'diff()', value: 'diff' },\n  { text: 'percent_diff()', value: 'percent_diff' },\n  { text: 'count_non_null()', value: 'count_non_null' },\n];\n\nconst noDataModes = [\n  { text: 'Alerting', value: 'alerting' },\n  { text: 'No Data', value: 'no_data' },\n  { text: 'Keep Last State', value: 'keep_state' },\n  { text: 'Ok', value: 'ok' },\n];\n\nconst executionErrorModes = [{ text: 'Alerting', value: 'alerting' }, { text: 'Keep Last State', value: 'keep_state' }];\n\nfunction createReducerPart(model: any) {\n  const def = new QueryPartDef({ type: model.type, defaultParams: [] });\n  return new QueryPart(model, def);\n}\n\nfunction getStateDisplayModel(state: string) {\n  switch (state) {\n    case 'ok': {\n      return {\n        text: 'OK',\n        iconClass: 'icon-gf icon-gf-online',\n        stateClass: 'alert-state-ok',\n      };\n    }\n    case 'alerting': {\n      return {\n        text: 'ALERTING',\n        iconClass: 'icon-gf icon-gf-critical',\n        stateClass: 'alert-state-critical',\n      };\n    }\n    case 'no_data': {\n      return {\n        text: 'NO DATA',\n        iconClass: 'fa fa-question',\n        stateClass: 'alert-state-warning',\n      };\n    }\n    case 'paused': {\n      return {\n        text: 'PAUSED',\n        iconClass: 'fa fa-pause',\n        stateClass: 'alert-state-paused',\n      };\n    }\n    case 'pending': {\n      return {\n        text: 'PENDING',\n        iconClass: 'fa fa-exclamation',\n        stateClass: 'alert-state-warning',\n      };\n    }\n    case 'unknown': {\n      return {\n        text: 'UNKNOWN',\n        iconClass: 'fa fa-question',\n        stateClass: 'alert-state-paused',\n      };\n    }\n  }\n\n  throw { message: 'Unknown alert state' };\n}\n\nfunction joinEvalMatches(matches: any, separator: string) {\n  return _.reduce(\n    matches,\n    (res, ev) => {\n      if (ev.metric !== undefined && ev.value !== undefined) {\n        res.push(ev.metric + '=' + ev.value);\n      }\n\n      // For backwards compatibility . Should be be able to remove this after ~2017-06-01\n      if (ev.Metric !== undefined && ev.Value !== undefined) {\n        res.push(ev.Metric + '=' + ev.Value);\n      }\n\n      return res;\n    },\n    []\n  ).join(separator);\n}\n\nfunction getAlertAnnotationInfo(ah: any) {\n  // backward compatibility, can be removed in grafana 5.x\n  // old way stored evalMatches in data property directly,\n  // new way stores it in evalMatches property on new data object\n\n  if (_.isArray(ah.data)) {\n    return joinEvalMatches(ah.data, ', ');\n  } else if (_.isArray(ah.data.evalMatches)) {\n    return joinEvalMatches(ah.data.evalMatches, ', ');\n  }\n\n  if (ah.data.error) {\n    return 'Error: ' + ah.data.error;\n  }\n\n  return '';\n}\n\nexport default {\n  alertQueryDef: alertQueryDef,\n  getStateDisplayModel: getStateDisplayModel,\n  conditionTypes: conditionTypes,\n  evalFunctions: evalFunctions,\n  evalOperators: evalOperators,\n  noDataModes: noDataModes,\n  executionErrorModes: executionErrorModes,\n  reducerTypes: reducerTypes,\n  createReducerPart: createReducerPart,\n  getAlertAnnotationInfo: getAlertAnnotationInfo,\n  alertStateSortScore: alertStateSortScore,\n};\n","import React, { FormEvent } from 'react';\nimport classNames from 'classnames';\nimport appEvents from 'app/core/app_events';\nimport { NavModel, NavModelItem, NavModelBreadcrumb } from '@grafana/data';\n\nexport interface Props {\n  model: NavModel;\n}\n\nconst SelectNav = ({ main, customCss }: { main: NavModelItem; customCss: string }) => {\n  const defaultSelectedItem = main.children.find(navItem => {\n    return navItem.active === true;\n  });\n\n  const gotoUrl = (evt: FormEvent) => {\n    const element = evt.target as HTMLSelectElement;\n    const url = element.options[element.selectedIndex].value;\n    appEvents.emit('location-change', { href: url });\n  };\n\n  return (\n    <div className={`gf-form-select-wrapper width-20 ${customCss}`}>\n      <label className={`gf-form-select-icon ${defaultSelectedItem.icon}`} htmlFor=\"page-header-select-nav\" />\n      {/* Label to make it clickable */}\n      <select\n        className=\"gf-select-nav gf-form-input\"\n        value={defaultSelectedItem.url}\n        onChange={gotoUrl}\n        id=\"page-header-select-nav\"\n      >\n        {main.children.map((navItem: NavModelItem) => {\n          if (navItem.hideFromTabs) {\n            // TODO: Rename hideFromTabs => hideFromNav\n            return null;\n          }\n          return (\n            <option key={navItem.url} value={navItem.url}>\n              {navItem.text}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n};\n\nconst Tabs = ({ main, customCss }: { main: NavModelItem; customCss: string }) => {\n  return (\n    <ul className={`gf-tabs ${customCss}`}>\n      {main.children.map((tab, idx) => {\n        if (tab.hideFromTabs) {\n          return null;\n        }\n\n        const tabClasses = classNames({\n          'gf-tabs-link': true,\n          active: tab.active,\n        });\n\n        return (\n          <li className=\"gf-tabs-item\" key={tab.url}>\n            <a className={tabClasses} target={tab.target} href={tab.url}>\n              <i className={tab.icon} />\n              {tab.text}\n            </a>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nconst Navigation = ({ main }: { main: NavModelItem }) => {\n  return (\n    <nav>\n      <SelectNav customCss=\"page-header__select-nav\" main={main} />\n      <Tabs customCss=\"page-header__tabs\" main={main} />\n    </nav>\n  );\n};\n\nexport default class PageHeader extends React.Component<Props, any> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  shouldComponentUpdate() {\n    //Hack to re-render on changed props from angular with the @observer decorator\n    return true;\n  }\n\n  renderTitle(title: string, breadcrumbs: NavModelBreadcrumb[]) {\n    if (!title && (!breadcrumbs || breadcrumbs.length === 0)) {\n      return null;\n    }\n\n    if (!breadcrumbs || breadcrumbs.length === 0) {\n      return <h1 className=\"page-header__title\">{title}</h1>;\n    }\n\n    const breadcrumbsResult = [];\n    for (const bc of breadcrumbs) {\n      if (bc.url) {\n        breadcrumbsResult.push(\n          <a className=\"text-link\" key={breadcrumbsResult.length} href={bc.url}>\n            {bc.title}\n          </a>\n        );\n      } else {\n        breadcrumbsResult.push(<span key={breadcrumbsResult.length}> / {bc.title}</span>);\n      }\n    }\n    breadcrumbsResult.push(<span key={breadcrumbs.length + 1}> / {title}</span>);\n\n    return <h1 className=\"page-header__title\">{breadcrumbsResult}</h1>;\n  }\n\n  renderHeaderTitle(main: NavModelItem) {\n    return (\n      <div className=\"page-header__inner\">\n        <span className=\"page-header__logo\">\n          {main.icon && <i className={`page-header__icon ${main.icon}`} />}\n          {main.img && <img className=\"page-header__img\" src={main.img} />}\n        </span>\n\n        <div className=\"page-header__info-block\">\n          {this.renderTitle(main.text, main.breadcrumbs)}\n          {main.subTitle && <div className=\"page-header__sub-title\">{main.subTitle}</div>}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { model } = this.props;\n\n    if (!model) {\n      return null;\n    }\n\n    const main = model.main;\n\n    return (\n      <div className=\"page-header-canvas\">\n        <div className=\"page-container\">\n          <div className=\"page-header\">\n            {this.renderHeaderTitle(main)}\n            {main.children && <Navigation main={main} />}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Observable } from 'rxjs';\nimport { DataQuery, PanelData, DataSourceApi } from '@grafana/ui';\nimport { QueryRunnerOptions } from 'app/features/dashboard/state/PanelQueryRunner';\nimport { DashboardQuery, SHARED_DASHBODARD_QUERY } from './types';\nimport { getDashboardSrv } from 'app/features/dashboard/services/DashboardSrv';\nimport { LoadingState, DefaultTimeRange } from '@grafana/data';\n\nexport function isSharedDashboardQuery(datasource: string | DataSourceApi) {\n  if (!datasource) {\n    // default datasource\n    return false;\n  }\n  if (datasource === SHARED_DASHBODARD_QUERY) {\n    return true;\n  }\n  const ds = datasource as DataSourceApi;\n  return ds.meta && ds.meta.name === SHARED_DASHBODARD_QUERY;\n}\n\nexport function runSharedRequest(options: QueryRunnerOptions): Observable<PanelData> {\n  return new Observable<PanelData>(subscriber => {\n    const dashboard = getDashboardSrv().getCurrent();\n    const listenToPanelId = getPanelIdFromQuery(options.queries);\n\n    if (!listenToPanelId) {\n      subscriber.next(getQueryError('Missing panel reference ID'));\n      return null;\n    }\n\n    const currentPanel = dashboard.getPanelById(options.panelId);\n    const listenToPanel = dashboard.getPanelById(listenToPanelId);\n\n    if (!listenToPanel) {\n      subscriber.next(getQueryError('Unknown Panel: ' + listenToPanelId));\n      return null;\n    }\n\n    const listenToRunner = listenToPanel.getQueryRunner();\n    const subscription = listenToRunner.getData(false).subscribe({\n      next: (data: PanelData) => {\n        console.log('got data from other panel', data);\n        subscriber.next(data);\n      },\n    });\n\n    // If we are in fullscreen the other panel will not execute any queries\n    // So we have to trigger it from here\n    if (currentPanel.fullscreen) {\n      const { datasource, targets } = listenToPanel;\n      const modified = {\n        ...options,\n        datasource,\n        panelId: listenToPanelId,\n        queries: targets,\n      };\n      listenToRunner.run(modified);\n    }\n\n    return () => {\n      console.log('runSharedRequest unsubscribe');\n      subscription.unsubscribe();\n    };\n  });\n}\n\nfunction getPanelIdFromQuery(queries: DataQuery[]): number | undefined {\n  if (!queries || !queries.length) {\n    return undefined;\n  }\n  return (queries[0] as DashboardQuery).panelId;\n}\n\nfunction getQueryError(msg: string): PanelData {\n  return {\n    state: LoadingState.Error,\n    series: [],\n    error: { message: msg },\n    timeRange: DefaultTimeRange,\n  };\n}\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Types\nimport { Select, DataQuery, DataQueryError, PanelData } from '@grafana/ui';\nimport { DataFrame, SelectableValue } from '@grafana/data';\nimport { DashboardQuery } from './types';\nimport config from 'app/core/config';\nimport { css } from 'emotion';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport { PanelModel } from 'app/features/dashboard/state';\nimport { SHARED_DASHBODARD_QUERY } from './types';\nimport { getDashboardSrv } from 'app/features/dashboard/services/DashboardSrv';\nimport { filterPanelDataToQuery } from 'app/features/dashboard/panel_editor/QueryEditorRow';\n\ntype ResultInfo = {\n  img: string; // The Datasource\n  refId: string;\n  query: string; // As text\n  data: DataFrame[];\n  error?: DataQueryError;\n};\n\nfunction getQueryDisplayText(query: DataQuery): string {\n  return JSON.stringify(query);\n}\n\ninterface Props {\n  panel: PanelModel;\n  panelData: PanelData;\n  onChange: (query: DashboardQuery) => void;\n}\n\ntype State = {\n  defaultDatasource: string;\n  results: ResultInfo[];\n};\n\nexport class DashboardQueryEditor extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      defaultDatasource: '',\n      results: [],\n    };\n  }\n\n  getQuery(): DashboardQuery {\n    const { panel } = this.props;\n    return panel.targets[0] as DashboardQuery;\n  }\n\n  async componentDidMount() {\n    this.componentDidUpdate(null);\n  }\n\n  async componentDidUpdate(prevProps: Props) {\n    const { panelData } = this.props;\n\n    if (!prevProps || prevProps.panelData !== panelData) {\n      const query = this.props.panel.targets[0] as DashboardQuery;\n      const defaultDS = await getDatasourceSrv().get(null);\n      const dashboard = getDashboardSrv().getCurrent();\n      const panel = dashboard.getPanelById(query.panelId);\n\n      if (!panel) {\n        this.setState({ defaultDatasource: defaultDS.name });\n        return;\n      }\n\n      const mainDS = await getDatasourceSrv().get(panel.datasource);\n      const info: ResultInfo[] = [];\n\n      for (const query of panel.targets) {\n        const ds = query.datasource ? await getDatasourceSrv().get(query.datasource) : mainDS;\n        const fmt = ds.getQueryDisplayText ? ds.getQueryDisplayText : getQueryDisplayText;\n\n        const qData = filterPanelDataToQuery(panelData, query.refId);\n        const queryData = qData ? qData : panelData;\n\n        info.push({\n          refId: query.refId,\n          query: fmt(query),\n          img: ds.meta.info.logos.small,\n          data: queryData.series,\n          error: queryData.error,\n        });\n      }\n\n      this.setState({ defaultDatasource: defaultDS.name, results: info });\n    }\n  }\n\n  onPanelChanged = (id: number) => {\n    const { onChange } = this.props;\n    const query = this.getQuery();\n    query.panelId = id;\n    onChange(query);\n\n    // Update the\n    this.props.panel.refresh();\n  };\n\n  renderQueryData(editURL: string) {\n    const { results } = this.state;\n\n    return (\n      <div>\n        {results.map((target, index) => {\n          return (\n            <div className=\"query-editor-row__header\" key={index}>\n              <div className=\"query-editor-row__ref-id\">\n                <img src={target.img} width={16} className={css({ marginRight: '8px' })} />\n                {target.refId}:\n              </div>\n              <div className=\"query-editor-row__collapsed-text\">\n                <a href={editURL}>\n                  {target.query}\n                  &nbsp;\n                  <i className=\"fa fa-external-link\" />\n                </a>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  getPanelDescription = (panel: PanelModel): string => {\n    const { defaultDatasource } = this.state;\n    const dsname = panel.datasource ? panel.datasource : defaultDatasource;\n\n    if (panel.targets.length === 1) {\n      return '1 query to ' + dsname;\n    }\n\n    return panel.targets.length + ' queries to ' + dsname;\n  };\n\n  render() {\n    const dashboard = getDashboardSrv().getCurrent();\n    const query = this.getQuery();\n\n    let selected: SelectableValue<number>;\n    const panels: Array<SelectableValue<number>> = [];\n\n    for (const panel of dashboard.panels) {\n      const plugin = config.panels[panel.type];\n      if (!plugin) {\n        continue;\n      }\n\n      if (panel.targets && panel.datasource !== SHARED_DASHBODARD_QUERY) {\n        const item = {\n          value: panel.id,\n          label: panel.title ? panel.title : 'Panel ' + panel.id,\n          description: this.getPanelDescription(panel),\n          imgUrl: plugin.info.logos.small,\n        };\n\n        panels.push(item);\n\n        if (query.panelId === panel.id) {\n          selected = item;\n        }\n      }\n    }\n\n    if (panels.length < 1) {\n      return (\n        <div className={css({ padding: '10px' })}>\n          This dashboard does not have other panels. Add queries to other panels and try again\n        </div>\n      );\n    }\n\n    // Same as current URL, but different panelId\n    const editURL = `d/${dashboard.uid}/${dashboard.title}?&fullscreen&edit&panelId=${query.panelId}`;\n\n    return (\n      <div>\n        <div className=\"gf-form\">\n          <div className=\"gf-form-label\">Use results from panel</div>\n          <Select\n            placeholder=\"Choose Panel\"\n            isSearchable={true}\n            options={panels}\n            value={selected}\n            onChange={item => this.onPanelChanged(item.value)}\n          />\n        </div>\n        <div className={css({ padding: '16px' })}>{query.panelId && this.renderQueryData(editURL)}</div>\n      </div>\n    );\n  }\n}\n","export { isSharedDashboardQuery, runSharedRequest } from './runSharedRequest';\nexport { DashboardQueryEditor } from './DashboardQueryEditor';\nexport { SHARED_DASHBODARD_QUERY } from './types';\n","/* Pretty handling of time axes.\n\nCopyright (c) 2007-2013 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nSet axis.mode to \"time\" to enable. See the section \"Time series data\" in\nAPI.txt for details.\n\n*/\n\n(function($) {\n\n\tvar options = {\n\t\txaxis: {\n\t\t\ttimezone: null,\t\t// \"browser\" for local to the client or timezone for timezone-js\n\t\t\ttimeformat: null,\t// format string to use\n\t\t\ttwelveHourClock: false,\t// 12 or 24 time in time mode\n\t\t\tmonthNames: null\t// list of names of months\n\t\t}\n\t};\n\n\t// round to nearby lower multiple of base\n\n\tfunction floorInBase(n, base) {\n\t\treturn base * Math.floor(n / base);\n\t}\n\n\t// Returns a string with the date d formatted according to fmt.\n\t// A subset of the Open Group's strftime format is supported.\n\n\tfunction formatDate(d, fmt, monthNames, dayNames) {\n\n\t\tif (typeof d.strftime == \"function\") {\n\t\t\treturn d.strftime(fmt);\n\t\t}\n\n\t\tvar leftPad = function(n, pad) {\n\t\t\tn = \"\" + n;\n\t\t\tpad = \"\" + (pad == null ? \"0\" : pad);\n\t\t\treturn n.length == 1 ? pad + n : n;\n\t\t};\n\n\t\tvar r = [];\n\t\tvar escape = false;\n\t\tvar hours = d.getHours();\n\t\tvar isAM = hours < 12;\n\n\t\tif (monthNames == null) {\n\t\t\tmonthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\t}\n\n\t\tif (dayNames == null) {\n\t\t\tdayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\t\t}\n\n\t\tvar hours12;\n\n\t\tif (hours > 12) {\n\t\t\thours12 = hours - 12;\n\t\t} else if (hours == 0) {\n\t\t\thours12 = 12;\n\t\t} else {\n\t\t\thours12 = hours;\n\t\t}\n\n\t\tfor (var i = 0; i < fmt.length; ++i) {\n\n\t\t\tvar c = fmt.charAt(i);\n\n\t\t\tif (escape) {\n\t\t\t\tswitch (c) {\n\t\t\t\t\tcase 'a': c = \"\" + dayNames[d.getDay()]; break;\n\t\t\t\t\tcase 'b': c = \"\" + monthNames[d.getMonth()]; break;\n\t\t\t\t\tcase 'd': c = leftPad(d.getDate(), \"\"); break;\n\t\t\t\t\tcase 'e': c = leftPad(d.getDate(), \" \"); break;\n\t\t\t\t\tcase 'h':\t// For back-compat with 0.7; remove in 1.0\n\t\t\t\t\tcase 'H': c = leftPad(hours); break;\n\t\t\t\t\tcase 'I': c = leftPad(hours12); break;\n\t\t\t\t\tcase 'l': c = leftPad(hours12, \" \"); break;\n\t\t\t\t\tcase 'm': c = leftPad(d.getMonth() + 1, \"\"); break;\n\t\t\t\t\tcase 'M': c = leftPad(d.getMinutes()); break;\n\t\t\t\t\t// quarters not in Open Group's strftime specification\n\t\t\t\t\tcase 'q':\n\t\t\t\t\t\tc = \"\" + (Math.floor(d.getMonth() / 3) + 1); break;\n\t\t\t\t\tcase 'S': c = leftPad(d.getSeconds()); break;\n\t\t\t\t\tcase 'y': c = leftPad(d.getFullYear() % 100); break;\n\t\t\t\t\tcase 'Y': c = \"\" + d.getFullYear(); break;\n\t\t\t\t\tcase 'p': c = (isAM) ? (\"\" + \"am\") : (\"\" + \"pm\"); break;\n\t\t\t\t\tcase 'P': c = (isAM) ? (\"\" + \"AM\") : (\"\" + \"PM\"); break;\n\t\t\t\t\tcase 'w': c = \"\" + d.getDay(); break;\n\t\t\t\t}\n\t\t\t\tr.push(c);\n\t\t\t\tescape = false;\n\t\t\t} else {\n\t\t\t\tif (c == \"%\") {\n\t\t\t\t\tescape = true;\n\t\t\t\t} else {\n\t\t\t\t\tr.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn r.join(\"\");\n\t}\n\n\t// To have a consistent view of time-based data independent of which time\n\t// zone the client happens to be in we need a date-like object independent\n\t// of time zones.  This is done through a wrapper that only calls the UTC\n\t// versions of the accessor methods.\n\n\tfunction makeUtcWrapper(d) {\n\n\t\tfunction addProxyMethod(sourceObj, sourceMethod, targetObj, targetMethod) {\n\t\t\tsourceObj[sourceMethod] = function() {\n\t\t\t\treturn targetObj[targetMethod].apply(targetObj, arguments);\n\t\t\t};\n\t\t};\n\n\t\tvar utc = {\n\t\t\tdate: d\n\t\t};\n\n\t\t// support strftime, if found\n\n\t\tif (d.strftime != undefined) {\n\t\t\taddProxyMethod(utc, \"strftime\", d, \"strftime\");\n\t\t}\n\n\t\taddProxyMethod(utc, \"getTime\", d, \"getTime\");\n\t\taddProxyMethod(utc, \"setTime\", d, \"setTime\");\n\n\t\tvar props = [\"Date\", \"Day\", \"FullYear\", \"Hours\", \"Milliseconds\", \"Minutes\", \"Month\", \"Seconds\"];\n\n\t\tfor (var p = 0; p < props.length; p++) {\n\t\t\taddProxyMethod(utc, \"get\" + props[p], d, \"getUTC\" + props[p]);\n\t\t\taddProxyMethod(utc, \"set\" + props[p], d, \"setUTC\" + props[p]);\n\t\t}\n\n\t\treturn utc;\n\t};\n\n\t// select time zone strategy.  This returns a date-like object tied to the\n\t// desired timezone\n\n\tfunction dateGenerator(ts, opts) {\n\t\tif (opts.timezone == \"browser\") {\n\t\t\treturn new Date(ts);\n\t\t} else if (!opts.timezone || opts.timezone == \"utc\") {\n\t\t\treturn makeUtcWrapper(new Date(ts));\n\t\t} else if (typeof timezoneJS != \"undefined\" && typeof timezoneJS.Date != \"undefined\") {\n\t\t\tvar d = new timezoneJS.Date();\n\t\t\t// timezone-js is fickle, so be sure to set the time zone before\n\t\t\t// setting the time.\n\t\t\td.setTimezone(opts.timezone);\n\t\t\td.setTime(ts);\n\t\t\treturn d;\n\t\t} else {\n\t\t\treturn makeUtcWrapper(new Date(ts));\n\t\t}\n\t}\n\n\t// map of app. size of time units in milliseconds\n\n\tvar timeUnitSize = {\n\t\t\"second\": 1000,\n\t\t\"minute\": 60 * 1000,\n\t\t\"hour\": 60 * 60 * 1000,\n\t\t\"day\": 24 * 60 * 60 * 1000,\n\t\t\"month\": 30 * 24 * 60 * 60 * 1000,\n\t\t\"quarter\": 3 * 30 * 24 * 60 * 60 * 1000,\n\t\t\"year\": 365.2425 * 24 * 60 * 60 * 1000\n\t};\n\n\t// the allowed tick sizes, after 1 year we use\n\t// an integer algorithm\n\n\tvar baseSpec = [\n\t\t[1, \"second\"], [2, \"second\"], [5, \"second\"], [10, \"second\"],\n\t\t[30, \"second\"],\n\t\t[1, \"minute\"], [2, \"minute\"], [5, \"minute\"], [10, \"minute\"],\n\t\t[30, \"minute\"],\n\t\t[1, \"hour\"], [2, \"hour\"], [4, \"hour\"],\n\t\t[8, \"hour\"], [12, \"hour\"],\n\t\t[1, \"day\"], [2, \"day\"], [3, \"day\"],\n\t\t[0.25, \"month\"], [0.5, \"month\"], [1, \"month\"],\n\t\t[2, \"month\"]\n\t];\n\n\t// we don't know which variant(s) we'll need yet, but generating both is\n\t// cheap\n\n\tvar specMonths = baseSpec.concat([[3, \"month\"], [6, \"month\"],\n\t\t[1, \"year\"]]);\n\tvar specQuarters = baseSpec.concat([[1, \"quarter\"], [2, \"quarter\"],\n\t\t[1, \"year\"]]);\n\n\tfunction init(plot) {\n\t\tplot.hooks.processOptions.push(function (plot, options) {\n\t\t\t$.each(plot.getAxes(), function(axisName, axis) {\n\n\t\t\t\tvar opts = axis.options;\n\n\t\t\t\tif (opts.mode == \"time\") {\n\t\t\t\t\taxis.tickGenerator = function(axis) {\n\n\t\t\t\t\t\tvar ticks = [];\n\t\t\t\t\t\tvar d = dateGenerator(axis.min, opts);\n\t\t\t\t\t\tvar minSize = 0;\n\n\t\t\t\t\t\t// make quarter use a possibility if quarters are\n\t\t\t\t\t\t// mentioned in either of these options\n\n\t\t\t\t\t\tvar spec = (opts.tickSize && opts.tickSize[1] ===\n\t\t\t\t\t\t\t\"quarter\") ||\n\t\t\t\t\t\t\t(opts.minTickSize && opts.minTickSize[1] ===\n\t\t\t\t\t\t\t\"quarter\") ? specQuarters : specMonths;\n\n\t\t\t\t\t\tif (opts.minTickSize != null) {\n\t\t\t\t\t\t\tif (typeof opts.tickSize == \"number\") {\n\t\t\t\t\t\t\t\tminSize = opts.tickSize;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tminSize = opts.minTickSize[0] * timeUnitSize[opts.minTickSize[1]];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (var i = 0; i < spec.length - 1; ++i) {\n\t\t\t\t\t\t\tif (axis.delta < (spec[i][0] * timeUnitSize[spec[i][1]]\n\t\t\t\t\t\t\t\t\t\t\t  + spec[i + 1][0] * timeUnitSize[spec[i + 1][1]]) / 2\n\t\t\t\t\t\t\t\t&& spec[i][0] * timeUnitSize[spec[i][1]] >= minSize) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar size = spec[i][0];\n\t\t\t\t\t\tvar unit = spec[i][1];\n\n\t\t\t\t\t\t// special-case the possibility of several years\n\n\t\t\t\t\t\tif (unit == \"year\") {\n\n\t\t\t\t\t\t\t// if given a minTickSize in years, just use it,\n\t\t\t\t\t\t\t// ensuring that it's an integer\n\n\t\t\t\t\t\t\tif (opts.minTickSize != null && opts.minTickSize[1] == \"year\") {\n\t\t\t\t\t\t\t\tsize = Math.floor(opts.minTickSize[0]);\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tvar magn = Math.pow(10, Math.floor(Math.log(axis.delta / timeUnitSize.year) / Math.LN10));\n\t\t\t\t\t\t\t\tvar norm = (axis.delta / timeUnitSize.year) / magn;\n\n\t\t\t\t\t\t\t\tif (norm < 1.5) {\n\t\t\t\t\t\t\t\t\tsize = 1;\n\t\t\t\t\t\t\t\t} else if (norm < 3) {\n\t\t\t\t\t\t\t\t\tsize = 2;\n\t\t\t\t\t\t\t\t} else if (norm < 7.5) {\n\t\t\t\t\t\t\t\t\tsize = 5;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsize = 10;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tsize *= magn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// minimum size for years is 1\n\n\t\t\t\t\t\t\tif (size < 1) {\n\t\t\t\t\t\t\t\tsize = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taxis.tickSize = opts.tickSize || [size, unit];\n\t\t\t\t\t\tvar tickSize = axis.tickSize[0];\n\t\t\t\t\t\tunit = axis.tickSize[1];\n\n\t\t\t\t\t\tvar step = tickSize * timeUnitSize[unit];\n\n\t\t\t\t\t\tif (unit == \"second\") {\n\t\t\t\t\t\t\td.setSeconds(floorInBase(d.getSeconds(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"minute\") {\n\t\t\t\t\t\t\td.setMinutes(floorInBase(d.getMinutes(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"hour\") {\n\t\t\t\t\t\t\td.setHours(floorInBase(d.getHours(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"month\") {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"quarter\") {\n\t\t\t\t\t\t\td.setMonth(3 * floorInBase(d.getMonth() / 3,\n\t\t\t\t\t\t\t\ttickSize));\n\t\t\t\t\t\t} else if (unit == \"year\") {\n\t\t\t\t\t\t\td.setFullYear(floorInBase(d.getFullYear(), tickSize));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// reset smaller components\n\n\t\t\t\t\t\td.setMilliseconds(0);\n\n\t\t\t\t\t\tif (step >= timeUnitSize.minute) {\n\t\t\t\t\t\t\td.setSeconds(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.hour) {\n\t\t\t\t\t\t\td.setMinutes(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.day) {\n\t\t\t\t\t\t\td.setHours(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.day * 4) {\n\t\t\t\t\t\t\td.setDate(1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.month * 2) {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), 3));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.quarter * 2) {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), 6));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.year) {\n\t\t\t\t\t\t\td.setMonth(0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar carry = 0;\n\t\t\t\t\t\tvar v = Number.NaN;\n\t\t\t\t\t\tvar prev;\n\n\t\t\t\t\t\tdo {\n\n\t\t\t\t\t\t\tprev = v;\n\t\t\t\t\t\t\tv = d.getTime();\n\t\t\t\t\t\t\tticks.push(v);\n\n\t\t\t\t\t\t\tif (unit == \"month\" || unit == \"quarter\") {\n\t\t\t\t\t\t\t\tif (tickSize < 1) {\n\n\t\t\t\t\t\t\t\t\t// a bit complicated - we'll divide the\n\t\t\t\t\t\t\t\t\t// month/quarter up but we need to take\n\t\t\t\t\t\t\t\t\t// care of fractions so we don't end up in\n\t\t\t\t\t\t\t\t\t// the middle of a day\n\n\t\t\t\t\t\t\t\t\td.setDate(1);\n\t\t\t\t\t\t\t\t\tvar start = d.getTime();\n\t\t\t\t\t\t\t\t\td.setMonth(d.getMonth() +\n\t\t\t\t\t\t\t\t\t\t(unit == \"quarter\" ? 3 : 1));\n\t\t\t\t\t\t\t\t\tvar end = d.getTime();\n\t\t\t\t\t\t\t\t\td.setTime(v + carry * timeUnitSize.hour + (end - start) * tickSize);\n\t\t\t\t\t\t\t\t\tcarry = d.getHours();\n\t\t\t\t\t\t\t\t\td.setHours(0);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\td.setMonth(d.getMonth() +\n\t\t\t\t\t\t\t\t\t\ttickSize * (unit == \"quarter\" ? 3 : 1));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (unit == \"year\") {\n\t\t\t\t\t\t\t\td.setFullYear(d.getFullYear() + tickSize);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\td.setTime(v + step);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} while (v < axis.max && v != prev);\n\n\t\t\t\t\t\treturn ticks;\n\t\t\t\t\t};\n\n\t\t\t\t\taxis.tickFormatter = function (v, axis) {\n\n\t\t\t\t\t\tvar d = dateGenerator(v, axis.options);\n\n\t\t\t\t\t\t// first check global format\n\n\t\t\t\t\t\tif (opts.timeformat != null) {\n\t\t\t\t\t\t\treturn formatDate(d, opts.timeformat, opts.monthNames, opts.dayNames);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// possibly use quarters if quarters are mentioned in\n\t\t\t\t\t\t// any of these places\n\n\t\t\t\t\t\tvar useQuarters = (axis.options.tickSize &&\n\t\t\t\t\t\t\t\taxis.options.tickSize[1] == \"quarter\") ||\n\t\t\t\t\t\t\t(axis.options.minTickSize &&\n\t\t\t\t\t\t\t\taxis.options.minTickSize[1] == \"quarter\");\n\n\t\t\t\t\t\tvar t = axis.tickSize[0] * timeUnitSize[axis.tickSize[1]];\n\t\t\t\t\t\tvar span = axis.max - axis.min;\n\t\t\t\t\t\tvar suffix = (opts.twelveHourClock) ? \" %p\" : \"\";\n\t\t\t\t\t\tvar hourCode = (opts.twelveHourClock) ? \"%I\" : \"%H\";\n\t\t\t\t\t\tvar fmt;\n\n\t\t\t\t\t\tif (t < timeUnitSize.minute) {\n\t\t\t\t\t\t\tfmt = hourCode + \":%M:%S\" + suffix;\n\t\t\t\t\t\t} else if (t < timeUnitSize.day) {\n\t\t\t\t\t\t\tif (span < 2 * timeUnitSize.day) {\n\t\t\t\t\t\t\t\tfmt = hourCode + \":%M\" + suffix;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"%b %d \" + hourCode + \":%M\" + suffix;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (t < timeUnitSize.month) {\n\t\t\t\t\t\t\tfmt = \"%b %d\";\n\t\t\t\t\t\t} else if ((useQuarters && t < timeUnitSize.quarter) ||\n\t\t\t\t\t\t\t(!useQuarters && t < timeUnitSize.year)) {\n\t\t\t\t\t\t\tif (span < timeUnitSize.year) {\n\t\t\t\t\t\t\t\tfmt = \"%b\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"%b %Y\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (useQuarters && t < timeUnitSize.year) {\n\t\t\t\t\t\t\tif (span < timeUnitSize.year) {\n\t\t\t\t\t\t\t\tfmt = \"Q%q\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"Q%q %Y\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfmt = \"%Y\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar rt = formatDate(d, fmt, opts.monthNames, opts.dayNames);\n\n\t\t\t\t\t\treturn rt;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t$.plot.plugins.push({\n\t\tinit: init,\n\t\toptions: options,\n\t\tname: 'time',\n\t\tversion: '1.0'\n\t});\n\n\t// Time-axis support used to be in Flot core, which exposed the\n\t// formatDate function on the plot object.  Various plugins depend\n\t// on the function, so we need to re-expose it here.\n\n\t$.plot.formatDate = formatDate;\n\n})(jQuery);\n","import _ from 'lodash';\nimport { assignModelProperties } from 'app/core/utils/model_utils';\n\n/*\n * This regex matches 3 types of variable reference with an optional format specifier\n * \\$(\\w+)                          $var1\n * \\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]    [[var2]] or [[var2:fmt2]]\n * \\${(\\w+)(?::(\\w+))?}             ${var3} or ${var3:fmt3}\n */\nexport const variableRegex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^\\}]+))?(?::(\\w+))?}/g;\n\n// Helper function since lastIndex is not reset\nexport const variableRegexExec = (variableString: string) => {\n  variableRegex.lastIndex = 0;\n  return variableRegex.exec(variableString);\n};\n\nexport interface Variable {\n  setValue(option: any): any;\n  updateOptions(): any;\n  dependsOn(variable: any): any;\n  setValueFromUrl(urlValue: any): any;\n  getValueForUrl(): any;\n  getSaveModel(): any;\n}\n\nexport type CtorType = new (...args: any[]) => {};\n\nexport interface VariableTypes {\n  [key: string]: {\n    name: string;\n    ctor: CtorType;\n    description: string;\n    supportsMulti?: boolean;\n  };\n}\n\nexport let variableTypes: VariableTypes = {};\nexport { assignModelProperties };\n\nexport function containsVariable(...args: any[]) {\n  const variableName = args[args.length - 1];\n  args[0] = _.isString(args[0]) ? args[0] : Object['values'](args[0]).join(' ');\n  const variableString = args.slice(0, -1).join(' ');\n  const matches = variableString.match(variableRegex);\n  const isMatchingVariable =\n    matches !== null\n      ? matches.find(match => {\n          const varMatch = variableRegexExec(match);\n          return varMatch !== null && varMatch.indexOf(variableName) > -1;\n        })\n      : false;\n\n  return !!isMatchingVariable;\n}\n","import { getBackendSrv } from '@grafana/runtime';\nimport { AlertRuleDTO, StoreState } from 'app/types';\nimport { ThunkAction } from 'redux-thunk';\n\nexport enum ActionTypes {\n  LoadAlertRules = 'LOAD_ALERT_RULES',\n  LoadedAlertRules = 'LOADED_ALERT_RULES',\n  SetSearchQuery = 'SET_ALERT_SEARCH_QUERY',\n}\n\nexport interface LoadAlertRulesAction {\n  type: ActionTypes.LoadAlertRules;\n}\n\nexport interface LoadedAlertRulesAction {\n  type: ActionTypes.LoadedAlertRules;\n  payload: AlertRuleDTO[];\n}\n\nexport interface SetSearchQueryAction {\n  type: ActionTypes.SetSearchQuery;\n  payload: string;\n}\n\nexport const loadAlertRules = (): LoadAlertRulesAction => ({\n  type: ActionTypes.LoadAlertRules,\n});\n\nexport const loadedAlertRules = (rules: AlertRuleDTO[]): LoadedAlertRulesAction => ({\n  type: ActionTypes.LoadedAlertRules,\n  payload: rules,\n});\n\nexport const setSearchQuery = (query: string): SetSearchQueryAction => ({\n  type: ActionTypes.SetSearchQuery,\n  payload: query,\n});\n\nexport type Action = LoadAlertRulesAction | LoadedAlertRulesAction | SetSearchQueryAction;\n\ntype ThunkResult<R> = ThunkAction<R, StoreState, undefined, Action>;\n\nexport function getAlertRulesAsync(options: { state: string }): ThunkResult<void> {\n  return async dispatch => {\n    dispatch(loadAlertRules());\n    const rules: AlertRuleDTO[] = await getBackendSrv().get('/api/alerts', options);\n    dispatch(loadedAlertRules(rules));\n  };\n}\n\nexport function togglePauseAlertRule(id: number, options: { paused: boolean }): ThunkResult<void> {\n  return async (dispatch, getState) => {\n    await getBackendSrv().post(`/api/alerts/${id}/pause`, options);\n    const stateFilter = getState().location.query.state || 'all';\n    dispatch(getAlertRulesAsync({ state: stateFilter.toString() }));\n  };\n}\n","var path = 'public/app/features/playlist/partials/playlist_search.html';\nvar html = \"<div class=playlist-search-field-wrapper>\\n  <span style=position:relative>\\n    <input type=text placeholder=\\\"Find dashboards by name\\\" tabindex=1 ng-keydown=ctrl.keyDown($event) ng-model=ctrl.query.query ng-model-options=\\\"{ debounce: 500 }\\\" spellcheck=false ng-change=ctrl.searchDashboards() />\\n\\t\\t<div class=playlist-search-switches>\\n\\t\\t\\t<i class=\\\"fa fa-filter\\\"></i>\\n\\t\\t\\t<a class=pointer href=\\\"javascript:void 0;\\\" ng-click=ctrl.showStarred() tabindex=2>\\n\\t\\t\\t\\t<i class=\\\"fa fa-remove\\\" ng-show=ctrl.query.starred></i>\\n\\t\\t\\t\\tstarred\\n\\t\\t\\t</a> |\\n\\t\\t\\t<a class=pointer href=\\\"javascript:void 0;\\\" ng-click=ctrl.getTags() tabindex=3>\\n\\t\\t\\t\\t<i class=\\\"fa fa-remove\\\" ng-show=ctrl.tagsMode></i>\\n\\t\\t\\t\\ttags\\n\\t\\t\\t</a>\\n\\t\\t\\t<span ng-if=ctrl.query.tag.length>\\n\\t\\t\\t\\t|\\n\\t\\t\\t\\t<span ng-repeat=\\\"tagName in ctrl.query.tag\\\">\\n\\t\\t\\t\\t\\t<a ng-click=\\\"ctrl.removeTag(tagName, $event)\\\" tag-color-from-name=ctrl.tagName class=\\\"label label-tag\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-remove\\\"></i>\\n\\t\\t\\t\\t\\t\\t{{tagName}}\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</span>\\n\\t\\t</div>\\n\\t</span>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import React, { createRef } from 'react';\nimport * as PopperJS from 'popper.js';\nimport { Popover } from './Popover';\nimport { PopoverController, UsingPopperProps } from './PopoverController';\n\nexport interface TooltipProps extends UsingPopperProps {\n  theme?: 'info' | 'error';\n}\n\nexport interface PopoverContentProps {\n  updatePopperPosition?: () => void;\n}\n\nexport type PopoverContent = string | React.ReactElement<any> | ((props: PopoverContentProps) => JSX.Element);\n\nexport const Tooltip = ({ children, theme, ...controllerProps }: TooltipProps) => {\n  const tooltipTriggerRef = createRef<PopperJS.ReferenceObject>();\n  const popperBackgroundClassName = 'popper__background' + (theme ? ' popper__background--' + theme : '');\n\n  return (\n    <PopoverController {...controllerProps}>\n      {(showPopper, hidePopper, popperProps) => {\n        {\n          /* Override internal 'show' state if passed in as prop */\n        }\n        const payloadProps = {\n          ...popperProps,\n          show: controllerProps.show !== undefined ? controllerProps.show : popperProps.show,\n        };\n        return (\n          <>\n            {tooltipTriggerRef.current && (\n              <Popover\n                {...payloadProps}\n                onMouseEnter={showPopper}\n                onMouseLeave={hidePopper}\n                referenceElement={tooltipTriggerRef.current}\n                wrapperClassName=\"popper\"\n                className={popperBackgroundClassName}\n                renderArrow={({ arrowProps, placement }) => (\n                  <div className=\"popper__arrow\" data-placement={placement} {...arrowProps} />\n                )}\n              />\n            )}\n            {React.cloneElement(children, {\n              ref: tooltipTriggerRef,\n              onMouseEnter: showPopper,\n              onMouseLeave: hidePopper,\n            })}\n          </>\n        );\n      }}\n    </PopoverController>\n  );\n};\n","import { ThunkAction } from 'redux-thunk';\nimport config from '../../../core/config';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport { LayoutMode } from 'app/core/components/LayoutSelector/LayoutSelector';\nimport { updateLocation, updateNavIndex, UpdateNavIndexAction } from 'app/core/actions';\nimport { buildNavModel } from './navModel';\nimport { DataSourceSettings, DataSourcePluginMeta } from '@grafana/ui';\nimport { StoreState } from 'app/types';\nimport { LocationUpdate } from '@grafana/runtime';\nimport { actionCreatorFactory } from 'app/core/redux';\nimport { ActionOf, noPayloadActionCreatorFactory } from 'app/core/redux/actionCreatorFactory';\nimport { getPluginSettings } from 'app/features/plugins/PluginSettingsCache';\nimport { importDataSourcePlugin } from 'app/features/plugins/plugin_loader';\n\nexport const dataSourceLoaded = actionCreatorFactory<DataSourceSettings>('LOAD_DATA_SOURCE').create();\n\nexport const dataSourcesLoaded = actionCreatorFactory<DataSourceSettings[]>('LOAD_DATA_SOURCES').create();\n\nexport const dataSourceMetaLoaded = actionCreatorFactory<DataSourcePluginMeta>('LOAD_DATA_SOURCE_META').create();\n\nexport const dataSourceTypesLoad = noPayloadActionCreatorFactory('LOAD_DATA_SOURCE_TYPES').create();\n\nexport const dataSourceTypesLoaded = actionCreatorFactory<DataSourcePluginMeta[]>('LOADED_DATA_SOURCE_TYPES').create();\n\nexport const setDataSourcesSearchQuery = actionCreatorFactory<string>('SET_DATA_SOURCES_SEARCH_QUERY').create();\n\nexport const setDataSourcesLayoutMode = actionCreatorFactory<LayoutMode>('SET_DATA_SOURCES_LAYOUT_MODE').create();\n\nexport const setDataSourceTypeSearchQuery = actionCreatorFactory<string>('SET_DATA_SOURCE_TYPE_SEARCH_QUERY').create();\n\nexport const setDataSourceName = actionCreatorFactory<string>('SET_DATA_SOURCE_NAME').create();\n\nexport const setIsDefault = actionCreatorFactory<boolean>('SET_IS_DEFAULT').create();\n\nexport type Action =\n  | UpdateNavIndexAction\n  | ActionOf<DataSourceSettings>\n  | ActionOf<DataSourceSettings[]>\n  | ActionOf<DataSourcePluginMeta>\n  | ActionOf<DataSourcePluginMeta[]>\n  | ActionOf<LocationUpdate>;\n\ntype ThunkResult<R> = ThunkAction<R, StoreState, undefined, Action>;\n\nexport function loadDataSources(): ThunkResult<void> {\n  return async dispatch => {\n    const response = await getBackendSrv().get('/api/datasources');\n    dispatch(dataSourcesLoaded(response));\n  };\n}\n\nexport function loadDataSource(id: number): ThunkResult<void> {\n  return async dispatch => {\n    const dataSource = await getBackendSrv().get(`/api/datasources/${id}`);\n    const pluginInfo = (await getPluginSettings(dataSource.type)) as DataSourcePluginMeta;\n    const plugin = await importDataSourcePlugin(pluginInfo);\n\n    dispatch(dataSourceLoaded(dataSource));\n    dispatch(dataSourceMetaLoaded(pluginInfo));\n    dispatch(updateNavIndex(buildNavModel(dataSource, plugin)));\n  };\n}\n\nexport function addDataSource(plugin: DataSourcePluginMeta): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    await dispatch(loadDataSources());\n\n    const dataSources = getStore().dataSources.dataSources;\n\n    const newInstance = {\n      name: plugin.name,\n      type: plugin.id,\n      access: 'proxy',\n      isDefault: dataSources.length === 0,\n    };\n\n    if (nameExits(dataSources, newInstance.name)) {\n      newInstance.name = findNewName(dataSources, newInstance.name);\n    }\n\n    const result = await getBackendSrv().post('/api/datasources', newInstance);\n    dispatch(updateLocation({ path: `/datasources/edit/${result.id}` }));\n  };\n}\n\nexport function loadDataSourceTypes(): ThunkResult<void> {\n  return async dispatch => {\n    dispatch(dataSourceTypesLoad());\n    const result = await getBackendSrv().get('/api/plugins', { enabled: 1, type: 'datasource' });\n    dispatch(dataSourceTypesLoaded(result as DataSourcePluginMeta[]));\n  };\n}\n\nexport function updateDataSource(dataSource: DataSourceSettings): ThunkResult<void> {\n  return async dispatch => {\n    await getBackendSrv().put(`/api/datasources/${dataSource.id}`, dataSource);\n    await updateFrontendSettings();\n    return dispatch(loadDataSource(dataSource.id));\n  };\n}\n\nexport function deleteDataSource(): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const dataSource = getStore().dataSources.dataSource;\n    await getBackendSrv().delete(`/api/datasources/${dataSource.id}`);\n    await updateFrontendSettings();\n    dispatch(updateLocation({ path: '/datasources' }));\n  };\n}\n\ninterface ItemWithName {\n  name: string;\n}\n\nexport function nameExits(dataSources: ItemWithName[], name: string) {\n  return (\n    dataSources.filter(dataSource => {\n      return dataSource.name.toLowerCase() === name.toLowerCase();\n    }).length > 0\n  );\n}\n\nexport function findNewName(dataSources: ItemWithName[], name: string) {\n  // Need to loop through current data sources to make sure\n  // the name doesn't exist\n  while (nameExits(dataSources, name)) {\n    // If there's a duplicate name that doesn't end with '-x'\n    // we can add -1 to the name and be done.\n    if (!nameHasSuffix(name)) {\n      name = `${name}-1`;\n    } else {\n      // if there's a duplicate name that ends with '-x'\n      // we can try to increment the last digit until the name is unique\n\n      // remove the 'x' part and replace it with the new number\n      name = `${getNewName(name)}${incrementLastDigit(getLastDigit(name))}`;\n    }\n  }\n\n  return name;\n}\n\nfunction updateFrontendSettings() {\n  return getBackendSrv()\n    .get('/api/frontend/settings')\n    .then(settings => {\n      config.datasources = settings.datasources;\n      config.defaultDatasource = settings.defaultDatasource;\n      getDatasourceSrv().init();\n    });\n}\n\nfunction nameHasSuffix(name: string) {\n  return name.endsWith('-', name.length - 1);\n}\n\nfunction getLastDigit(name: string) {\n  return parseInt(name.slice(-1), 10);\n}\n\nfunction incrementLastDigit(digit: number) {\n  return isNaN(digit) ? 1 : digit + 1;\n}\n\nfunction getNewName(name: string) {\n  return name.slice(0, name.length - 1);\n}\n","const TOKEN_MARK = 'prism-token';\n\nexport default TOKEN_MARK;\n","import { DateTime } from '../datetime/moment_wrapper';\n\nexport interface RawTimeRange {\n  from: DateTime | string;\n  to: DateTime | string;\n}\n\nexport interface TimeRange {\n  from: DateTime;\n  to: DateTime;\n  raw: RawTimeRange;\n}\n\nexport interface AbsoluteTimeRange {\n  from: number;\n  to: number;\n}\n\nexport interface IntervalValues {\n  interval: string; // 10s,5m\n  intervalMs: number;\n}\n\nexport type TimeZoneUtc = 'utc';\nexport type TimeZoneBrowser = 'browser';\nexport type TimeZone = TimeZoneBrowser | TimeZoneUtc | string;\n\nexport const DefaultTimeZone: TimeZone = 'browser';\n\nexport interface TimeOption {\n  from: string;\n  to: string;\n  display: string;\n  section: number;\n}\n\nexport interface TimeOptions {\n  [key: string]: TimeOption[];\n}\n\nexport type TimeFragment = string | DateTime;\n\nexport const TIME_FORMAT = 'YYYY-MM-DD HH:mm:ss';\n\nexport const DefaultTimeRange: TimeRange = {\n  from: {} as DateTime,\n  to: {} as DateTime,\n  raw: { from: '6h', to: 'now' },\n};\n","import { getBackendSrv } from 'app/core/services/backend_srv';\nimport { StoreState } from 'app/types';\nimport { ThunkAction } from 'redux-thunk';\nimport { FolderDTO, FolderState } from 'app/types';\nimport {\n  DashboardAcl,\n  DashboardAclDTO,\n  PermissionLevel,\n  DashboardAclUpdateDTO,\n  NewDashboardAclItem,\n} from 'app/types/acl';\n\nimport { updateNavIndex, updateLocation } from 'app/core/actions';\nimport { buildNavModel } from './navModel';\nimport appEvents from 'app/core/app_events';\n\nexport enum ActionTypes {\n  LoadFolder = 'LOAD_FOLDER',\n  SetFolderTitle = 'SET_FOLDER_TITLE',\n  SaveFolder = 'SAVE_FOLDER',\n  LoadFolderPermissions = 'LOAD_FOLDER_PERMISSONS',\n}\n\nexport interface LoadFolderAction {\n  type: ActionTypes.LoadFolder;\n  payload: FolderDTO;\n}\n\nexport interface SetFolderTitleAction {\n  type: ActionTypes.SetFolderTitle;\n  payload: string;\n}\n\nexport interface LoadFolderPermissionsAction {\n  type: ActionTypes.LoadFolderPermissions;\n  payload: DashboardAcl[];\n}\n\nexport type Action = LoadFolderAction | SetFolderTitleAction | LoadFolderPermissionsAction;\n\ntype ThunkResult<R> = ThunkAction<R, StoreState, undefined, any>;\n\nexport const loadFolder = (folder: FolderDTO): LoadFolderAction => ({\n  type: ActionTypes.LoadFolder,\n  payload: folder,\n});\n\nexport const setFolderTitle = (newTitle: string): SetFolderTitleAction => ({\n  type: ActionTypes.SetFolderTitle,\n  payload: newTitle,\n});\n\nexport const loadFolderPermissions = (items: DashboardAclDTO[]): LoadFolderPermissionsAction => ({\n  type: ActionTypes.LoadFolderPermissions,\n  payload: items,\n});\n\nexport function getFolderByUid(uid: string): ThunkResult<void> {\n  return async dispatch => {\n    const folder = await getBackendSrv().getFolderByUid(uid);\n    dispatch(loadFolder(folder));\n    dispatch(updateNavIndex(buildNavModel(folder)));\n  };\n}\n\nexport function saveFolder(folder: FolderState): ThunkResult<void> {\n  return async dispatch => {\n    const res = await getBackendSrv().put(`/api/folders/${folder.uid}`, {\n      title: folder.title,\n      version: folder.version,\n    });\n\n    // this should be redux action at some point\n    appEvents.emit('alert-success', ['Folder saved']);\n\n    dispatch(updateLocation({ path: `${res.url}/settings` }));\n  };\n}\n\nexport function deleteFolder(uid: string): ThunkResult<void> {\n  return async dispatch => {\n    await getBackendSrv().deleteFolder(uid, true);\n    dispatch(updateLocation({ path: `dashboards` }));\n  };\n}\n\nexport function getFolderPermissions(uid: string): ThunkResult<void> {\n  return async dispatch => {\n    const permissions = await getBackendSrv().get(`/api/folders/${uid}/permissions`);\n    dispatch(loadFolderPermissions(permissions));\n  };\n}\n\nfunction toUpdateItem(item: DashboardAcl): DashboardAclUpdateDTO {\n  return {\n    userId: item.userId,\n    teamId: item.teamId,\n    role: item.role,\n    permission: item.permission,\n  };\n}\n\nexport function updateFolderPermission(itemToUpdate: DashboardAcl, level: PermissionLevel): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const folder = getStore().folder;\n    const itemsToUpdate = [];\n\n    for (const item of folder.permissions) {\n      if (item.inherited) {\n        continue;\n      }\n\n      const updated = toUpdateItem(item);\n\n      // if this is the item we want to update, update it's permission\n      if (itemToUpdate === item) {\n        updated.permission = level;\n      }\n\n      itemsToUpdate.push(updated);\n    }\n\n    await getBackendSrv().post(`/api/folders/${folder.uid}/permissions`, { items: itemsToUpdate });\n    await dispatch(getFolderPermissions(folder.uid));\n  };\n}\n\nexport function removeFolderPermission(itemToDelete: DashboardAcl): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const folder = getStore().folder;\n    const itemsToUpdate = [];\n\n    for (const item of folder.permissions) {\n      if (item.inherited || item === itemToDelete) {\n        continue;\n      }\n      itemsToUpdate.push(toUpdateItem(item));\n    }\n\n    await getBackendSrv().post(`/api/folders/${folder.uid}/permissions`, { items: itemsToUpdate });\n    await dispatch(getFolderPermissions(folder.uid));\n  };\n}\n\nexport function addFolderPermission(newItem: NewDashboardAclItem): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const folder = getStore().folder;\n    const itemsToUpdate = [];\n\n    for (const item of folder.permissions) {\n      if (item.inherited) {\n        continue;\n      }\n      itemsToUpdate.push(toUpdateItem(item));\n    }\n\n    itemsToUpdate.push({\n      userId: newItem.userId,\n      teamId: newItem.teamId,\n      role: newItem.role,\n      permission: newItem.permission,\n    });\n\n    await getBackendSrv().post(`/api/folders/${folder.uid}/permissions`, { items: itemsToUpdate });\n    await dispatch(getFolderPermissions(folder.uid));\n  };\n}\n","import kbn from 'app/core/utils/kbn';\nimport _ from 'lodash';\nimport { variableRegex } from 'app/features/templating/variable';\nimport { TimeRange, ScopedVars } from '@grafana/data';\n\nfunction luceneEscape(value: string) {\n  return value.replace(/([\\!\\*\\+\\-\\=<>\\s\\&\\|\\(\\)\\[\\]\\{\\}\\^\\~\\?\\:\\\\/\"])/g, '\\\\$1');\n}\n\ninterface FieldAccessorCache {\n  [key: string]: (obj: any) => any;\n}\n\nexport class TemplateSrv {\n  variables: any[];\n\n  private regex = variableRegex;\n  private index: any = {};\n  private grafanaVariables: any = {};\n  private builtIns: any = {};\n  private timeRange: TimeRange = null;\n  private fieldAccessorCache: FieldAccessorCache = {};\n\n  constructor() {\n    this.builtIns['__interval'] = { text: '1s', value: '1s' };\n    this.builtIns['__interval_ms'] = { text: '100', value: '100' };\n    this.variables = [];\n  }\n\n  init(variables: any, timeRange?: TimeRange) {\n    this.variables = variables;\n    this.timeRange = timeRange;\n    this.updateIndex();\n  }\n\n  getBuiltInIntervalValue() {\n    return this.builtIns.__interval.value;\n  }\n\n  updateIndex() {\n    const existsOrEmpty = (value: any) => value || value === '';\n\n    this.index = this.variables.reduce((acc, currentValue) => {\n      if (currentValue.current && (currentValue.current.isNone || existsOrEmpty(currentValue.current.value))) {\n        acc[currentValue.name] = currentValue;\n      }\n      return acc;\n    }, {});\n\n    if (this.timeRange) {\n      const from = this.timeRange.from.valueOf().toString();\n      const to = this.timeRange.to.valueOf().toString();\n\n      this.index = {\n        ...this.index,\n        ['__from']: {\n          current: { value: from, text: from },\n        },\n        ['__to']: {\n          current: { value: to, text: to },\n        },\n      };\n    }\n  }\n\n  updateTimeRange(timeRange: TimeRange) {\n    this.timeRange = timeRange;\n    this.updateIndex();\n  }\n\n  variableInitialized(variable: any) {\n    this.index[variable.name] = variable;\n  }\n\n  getAdhocFilters(datasourceName: string) {\n    let filters: any = [];\n\n    if (this.variables) {\n      for (let i = 0; i < this.variables.length; i++) {\n        const variable = this.variables[i];\n        if (variable.type !== 'adhoc') {\n          continue;\n        }\n\n        // null is the \"default\" datasource\n        if (variable.datasource === null || variable.datasource === datasourceName) {\n          filters = filters.concat(variable.filters);\n        } else if (variable.datasource.indexOf('$') === 0) {\n          if (this.replace(variable.datasource) === datasourceName) {\n            filters = filters.concat(variable.filters);\n          }\n        }\n      }\n    }\n\n    return filters;\n  }\n\n  luceneFormat(value: any) {\n    if (typeof value === 'string') {\n      return luceneEscape(value);\n    }\n    if (value instanceof Array && value.length === 0) {\n      return '__empty__';\n    }\n    const quotedValues = _.map(value, val => {\n      return '\"' + luceneEscape(val) + '\"';\n    });\n    return '(' + quotedValues.join(' OR ') + ')';\n  }\n\n  // encode string according to RFC 3986; in contrast to encodeURIComponent()\n  // also the sub-delims \"!\", \"'\", \"(\", \")\" and \"*\" are encoded;\n  // unicode handling uses UTF-8 as in ECMA-262.\n  encodeURIComponentStrict(str: string) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, c => {\n      return (\n        '%' +\n        c\n          .charCodeAt(0)\n          .toString(16)\n          .toUpperCase()\n      );\n    });\n  }\n\n  formatValue(value: any, format: any, variable: any) {\n    // for some scopedVars there is no variable\n    variable = variable || {};\n\n    if (typeof format === 'function') {\n      return format(value, variable, this.formatValue);\n    }\n\n    switch (format) {\n      case 'regex': {\n        if (typeof value === 'string') {\n          return kbn.regexEscape(value);\n        }\n\n        const escapedValues = _.map(value, kbn.regexEscape);\n        if (escapedValues.length === 1) {\n          return escapedValues[0];\n        }\n        return '(' + escapedValues.join('|') + ')';\n      }\n      case 'lucene': {\n        return this.luceneFormat(value);\n      }\n      case 'pipe': {\n        if (typeof value === 'string') {\n          return value;\n        }\n        return value.join('|');\n      }\n      case 'distributed': {\n        if (typeof value === 'string') {\n          return value;\n        }\n        return this.distributeVariable(value, variable.name);\n      }\n      case 'csv': {\n        if (_.isArray(value)) {\n          return value.join(',');\n        }\n        return value;\n      }\n      case 'json': {\n        return JSON.stringify(value);\n      }\n      case 'percentencode': {\n        // like glob, but url escaped\n        if (_.isArray(value)) {\n          return this.encodeURIComponentStrict('{' + value.join(',') + '}');\n        }\n        return this.encodeURIComponentStrict(value);\n      }\n      default: {\n        if (_.isArray(value) && value.length > 1) {\n          return '{' + value.join(',') + '}';\n        }\n        return value;\n      }\n    }\n  }\n\n  setGrafanaVariable(name: string, value: any) {\n    this.grafanaVariables[name] = value;\n  }\n\n  getVariableName(expression: string) {\n    this.regex.lastIndex = 0;\n    const match = this.regex.exec(expression);\n    if (!match) {\n      return null;\n    }\n    const variableName = match.slice(1).find(match => match !== undefined);\n    return variableName;\n  }\n\n  variableExists(expression: string) {\n    const name = this.getVariableName(expression);\n    return name && this.index[name] !== void 0;\n  }\n\n  highlightVariablesAsHtml(str: string) {\n    if (!str || !_.isString(str)) {\n      return str;\n    }\n\n    str = _.escape(str);\n    this.regex.lastIndex = 0;\n    return str.replace(this.regex, (match, var1, var2, fmt2, var3) => {\n      if (this.index[var1 || var2 || var3] || this.builtIns[var1 || var2 || var3]) {\n        return '<span class=\"template-variable\">' + match + '</span>';\n      }\n      return match;\n    });\n  }\n\n  getAllValue(variable: any) {\n    if (variable.allValue) {\n      return variable.allValue;\n    }\n    const values = [];\n    for (let i = 1; i < variable.options.length; i++) {\n      values.push(variable.options[i].value);\n    }\n    return values;\n  }\n\n  getFieldAccessor(fieldPath: string) {\n    const accessor = this.fieldAccessorCache[fieldPath];\n    if (accessor) {\n      return accessor;\n    }\n\n    return (this.fieldAccessorCache[fieldPath] = _.property(fieldPath));\n  }\n\n  getVariableValue(variableName: string, fieldPath: string | undefined, scopedVars: ScopedVars) {\n    const scopedVar = scopedVars[variableName];\n    if (!scopedVar) {\n      return null;\n    }\n\n    if (fieldPath) {\n      return this.getFieldAccessor(fieldPath)(scopedVar.value);\n    }\n\n    return scopedVar.value;\n  }\n\n  replace(target: string, scopedVars?: ScopedVars, format?: string | Function): any {\n    if (!target) {\n      return target;\n    }\n\n    this.regex.lastIndex = 0;\n\n    return target.replace(this.regex, (match, var1, var2, fmt2, var3, fieldPath, fmt3) => {\n      const variableName = var1 || var2 || var3;\n      const variable = this.index[variableName];\n      const fmt = fmt2 || fmt3 || format;\n\n      if (scopedVars) {\n        const value = this.getVariableValue(variableName, fieldPath, scopedVars);\n        if (value !== null && value !== undefined) {\n          return this.formatValue(value, fmt, variable);\n        }\n      }\n\n      if (!variable) {\n        return match;\n      }\n\n      const systemValue = this.grafanaVariables[variable.current.value];\n      if (systemValue) {\n        return this.formatValue(systemValue, fmt, variable);\n      }\n\n      let value = variable.current.value;\n      if (this.isAllValue(value)) {\n        value = this.getAllValue(variable);\n        // skip formatting of custom all values\n        if (variable.allValue) {\n          return this.replace(value);\n        }\n      }\n\n      const res = this.formatValue(value, fmt, variable);\n      return res;\n    });\n  }\n\n  isAllValue(value: any) {\n    return value === '$__all' || (Array.isArray(value) && value[0] === '$__all');\n  }\n\n  replaceWithText(target: string, scopedVars: ScopedVars) {\n    if (!target) {\n      return target;\n    }\n\n    let variable;\n    this.regex.lastIndex = 0;\n\n    return target.replace(this.regex, (match: any, var1: any, var2: any, fmt2: any, var3: any) => {\n      if (scopedVars) {\n        const option = scopedVars[var1 || var2 || var3];\n        if (option) {\n          return option.text;\n        }\n      }\n\n      variable = this.index[var1 || var2 || var3];\n      if (!variable) {\n        return match;\n      }\n\n      const value = this.grafanaVariables[variable.current.value];\n\n      return typeof value === 'string' ? value : variable.current.text;\n    });\n  }\n\n  fillVariableValuesForUrl(params: any, scopedVars?: ScopedVars) {\n    _.each(this.variables, variable => {\n      if (scopedVars && scopedVars[variable.name] !== void 0) {\n        if (scopedVars[variable.name].skipUrlSync) {\n          return;\n        }\n        params['var-' + variable.name] = scopedVars[variable.name].value;\n      } else {\n        if (variable.skipUrlSync) {\n          return;\n        }\n        params['var-' + variable.name] = variable.getValueForUrl();\n      }\n    });\n  }\n\n  distributeVariable(value: any, variable: any) {\n    value = _.map(value, (val: any, index: number) => {\n      if (index !== 0) {\n        return variable + '=' + val;\n      } else {\n        return val;\n      }\n    });\n    return value.join(',');\n  }\n}\n\nexport default new TemplateSrv();\n","var path = 'public/app/plugins/datasource/prometheus/partials/config.html';\nvar html = \"<datasource-http-settings current=ctrl.current suggest-url=http://localhost:9090>\\n</datasource-http-settings>\\n\\n<div class=gf-form-group>\\n  <div class=gf-form-inline>\\n    <div class=gf-form>\\n      <span class=\\\"gf-form-label width-8\\\">Scrape interval</span>\\n      <input type=text class=\\\"gf-form-input width-8 gf-form-input--has-help-icon\\\" ng-model=ctrl.current.jsonData.timeInterval spellcheck=false placeholder=15s ng-pattern=/^\\\\d+[Mwdhmsy]$/ >\\n      <info-popover mode=right-absolute>\\n        Set this to your global scrape interval defined in your Prometheus config file. This will be used as a lower limit for the\\n        Prometheus step query parameter.\\n      </info-popover>\\n    </div>\\n  </div>\\n\\n  <div class=gf-form-inline>\\n    <div class=gf-form>\\n      <span class=\\\"gf-form-label width-8\\\">Query timeout</span>\\n      <input type=text class=\\\"gf-form-input width-8 gf-form-input--has-help-icon\\\" ng-model=ctrl.current.jsonData.queryTimeout spellcheck=false placeholder=60s ng-pattern=/^\\\\d+[Mwdhmsy]$/ >\\n      <info-popover mode=right-absolute>\\n        Set the Prometheus query timeout.\\n      </info-popover>\\n    </div>\\n  </div>\\n\\n  <div class=gf-form>\\n    <label class=\\\"gf-form-label width-8\\\">HTTP Method</label>\\n    <div class=\\\"gf-form-select-wrapper width-8 gf-form-select-wrapper--has-help-icon\\\">\\n      <select class=gf-form-input ng-model=ctrl.current.jsonData.httpMethod ng-options=\\\"method for method in ['GET', 'POST']\\\"></select>\\n      <info-popover mode=right-absolute>\\n        Specify the HTTP Method to query Prometheus. (POST is only available in Prometheus >= v2.1.0)\\n      </info-popover>\\n    </div>\\n  </div>\\n</div>\\n\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { colors, getFlotPairs, getColorFromHexRgbOrName, getDisplayProcessor } from '@grafana/ui';\nimport {\n  NullValueMode,\n  reduceField,\n  FieldType,\n  DisplayValue,\n  GraphSeriesXY,\n  getTimeField,\n  DataFrame,\n} from '@grafana/data';\n\nimport { SeriesOptions, GraphOptions } from './types';\nimport { GraphLegendEditorLegendOptions } from './GraphLegendEditor';\n\nexport const getGraphSeriesModel = (\n  dataFrames: DataFrame[],\n  seriesOptions: SeriesOptions,\n  graphOptions: GraphOptions,\n  legendOptions: GraphLegendEditorLegendOptions\n) => {\n  const graphs: GraphSeriesXY[] = [];\n\n  const displayProcessor = getDisplayProcessor({\n    config: {\n      decimals: legendOptions.decimals,\n    },\n  });\n\n  for (const series of dataFrames) {\n    const { timeField } = getTimeField(series);\n    if (!timeField) {\n      continue;\n    }\n\n    for (const field of series.fields) {\n      if (field.type !== FieldType.number) {\n        continue;\n      }\n\n      // Use external calculator just to make sure it works :)\n      const points = getFlotPairs({\n        xField: timeField,\n        yField: field,\n        nullValueMode: NullValueMode.Null,\n      });\n\n      if (points.length > 0) {\n        const seriesStats = reduceField({ field, reducers: legendOptions.stats });\n        let statsDisplayValues: DisplayValue[];\n\n        if (legendOptions.stats) {\n          statsDisplayValues = legendOptions.stats.map<DisplayValue>(stat => {\n            const statDisplayValue = displayProcessor(seriesStats[stat]);\n\n            return {\n              ...statDisplayValue,\n              text: statDisplayValue.text,\n              title: stat,\n            };\n          });\n        }\n\n        const seriesColor =\n          seriesOptions[field.name] && seriesOptions[field.name].color\n            ? getColorFromHexRgbOrName(seriesOptions[field.name].color)\n            : colors[graphs.length % colors.length];\n\n        graphs.push({\n          label: field.name,\n          data: points,\n          color: seriesColor,\n          info: statsDisplayValues,\n          isVisible: true,\n          yAxis: {\n            index: (seriesOptions[field.name] && seriesOptions[field.name].yAxis) || 1,\n          },\n        });\n      }\n    }\n  }\n\n  return graphs;\n};\n","var path = 'public/app/features/templating/partials/editor.html';\nvar html = \"<div ng-controller=VariableEditorCtrl ng-init=init()>\\n  <div class=page-action-bar>\\n    <h3 class=dashboard-settings__header>\\n      <a ng-click=\\\"setMode('list')\\\">Variables</a>\\n      <span ng-show=\\\"mode === 'new'\\\">&gt; New</span>\\n      <span ng-show=\\\"mode === 'edit'\\\">&gt; Edit</span>\\n    </h3>\\n\\n    <div class=page-action-bar__spacer></div>\\n    <a type=button class=\\\"btn btn-primary\\\" ng-click=\\\"setMode('new');\\\" ng-if=\\\"variables.length > 0\\\" ng-hide=\\\"mode === 'edit' || mode === 'new'\\\">\\n\\t\\t\\tNew\\n\\t  </a>\\n  </div>\\n\\n  <div ng-if=\\\"mode === 'list'\\\">\\n    <div ng-if=\\\"variables.length === 0\\\">\\n        <empty-list-cta on-click=setNewMode title=emptyListCta.title infobox=emptyListCta.infoBox infoboxtitle=emptyListCta.infoBoxTitle buttontitle=emptyListCta.buttonTitle buttonicon=emptyListCta.buttonIcon />\\n    </div>\\n\\n    <div ng-if=variables.length>\\n      <table class=\\\"filter-table filter-table--hover\\\">\\n        <thead>\\n          <tr>\\n            <th>Variable</th>\\n            <th>Definition</th>\\n            <th colspan=5></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr ng-repeat=\\\"variable in variables\\\">\\n            <td style=width:1%>\\n              <span ng-click=edit(variable) class=\\\"pointer template-variable\\\"> ${{ variable.name }} </span>\\n            </td>\\n            <td style=max-width:200px ng-click=edit(variable) class=\\\"pointer max-width\\\">\\n              {{ variable.definition ? variable.definition : variable.query }}\\n            </td>\\n            <td style=width:1%>\\n              <i ng-click=_.move(variables,$index,$index-1) ng-hide=$first class=\\\"pointer fa fa-arrow-up\\\"></i>\\n            </td>\\n            <td style=width:1%>\\n              <i ng-click=_.move(variables,$index,$index+1) ng-hide=$last class=\\\"pointer fa fa-arrow-down\\\"></i>\\n            </td>\\n            <td style=width:1%>\\n              <a ng-click=duplicate(variable) class=\\\"btn btn-inverse btn-small\\\">\\n                Duplicate\\n              </a>\\n            </td>\\n            <td style=width:1%>\\n              <a ng-click=removeVariable(variable) class=\\\"btn btn-danger btn-small\\\">\\n                <i class=\\\"fa fa-remove\\\"></i>\\n              </a>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n\\n  <form ng-if=\\\"mode === 'edit' || mode === 'new'\\\" name=ctrl.form>\\n    <h5 class=section-heading>General</h5>\\n    <div class=gf-form-group>\\n      <div class=gf-form-inline>\\n        <div class=\\\"gf-form max-width-19\\\">\\n          <span class=\\\"gf-form-label width-6\\\">Name</span>\\n          <input type=text class=gf-form-input name=name placeholder=name ng-model=current.name required ng-pattern=namePattern />\\n        </div>\\n        <div class=\\\"gf-form max-width-19\\\">\\n          <span class=\\\"gf-form-label width-6\\\">\\n            Type\\n            <info-popover mode=right-normal>\\n              {{ variableTypes[current.type].description }}\\n            </info-popover>\\n          </span>\\n          <div class=\\\"gf-form-select-wrapper max-width-17\\\">\\n            <select class=gf-form-input ng-model=current.type ng-options=\\\"k as v.name for (k, v) in variableTypes\\\" ng-change=typeChanged()></select>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=gf-form ng-show=ctrl.form.name.$error.pattern>\\n        <span class=\\\"gf-form-label gf-form-label--error\\\">Template names cannot begin with '__', that's reserved for Grafana's global variables</span>\\n      </div>\\n\\n      <div class=gf-form-inline>\\n        <div class=\\\"gf-form max-width-19\\\">\\n          <span class=\\\"gf-form-label width-6\\\">Label</span>\\n          <input type=text class=gf-form-input ng-model=current.label placeholder=\\\"optional display name\\\"/>\\n        </div>\\n        <div class=\\\"gf-form max-width-19\\\">\\n          <span class=\\\"gf-form-label width-6\\\">Hide</span>\\n          <div class=\\\"gf-form-select-wrapper max-width-15\\\">\\n            <select class=gf-form-input ng-model=current.hide ng-options=\\\"f.value as f.text for f in hideOptions\\\"></select>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div ng-if=\\\"current.type === 'interval'\\\" class=gf-form-group>\\n      <h5 class=section-heading>Interval Options</h5>\\n\\n      <div class=gf-form>\\n        <span class=\\\"gf-form-label width-9\\\">Values</span>\\n        <input type=text class=gf-form-input ng-model=current.query placeholder=1m,10m,1h,6h,1d,7d ng-model-onblur ng-change=runQuery() required/>\\n      </div>\\n\\n      <div class=gf-form-inline>\\n        <gf-form-switch class=gf-form label=\\\"Auto Option\\\" label-class=width-9 checked=current.auto on-change=runQuery()>\\n        </gf-form-switch>\\n\\n        <div class=gf-form>\\n          <span class=\\\"gf-form-label width-9\\\" ng-show=current.auto>\\n            Step count <tip>How many times should the current time range be divided to calculate the value</tip>\\n          </span>\\n          <div class=\\\"gf-form-select-wrapper max-width-10\\\" ng-show=current.auto>\\n            <select class=gf-form-input ng-model=current.auto_count ng-options=\\\"f for f in [1,2,3,4,5,10,20,30,40,50,100,200,300,400,500]\\\" ng-change=runQuery()></select>\\n          </div>\\n        </div>\\n        <div class=gf-form>\\n          <span class=gf-form-label ng-show=current.auto>\\n            Min interval <tip>The calculated value will not go below this threshold</tip>\\n          </span>\\n          <input type=text class=\\\"gf-form-input max-width-10\\\" ng-show=current.auto ng-model=current.auto_min ng-change=runQuery() placeholder=10s />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div ng-if=\\\"current.type === 'custom'\\\" class=gf-form-group>\\n      <h5 class=section-heading>Custom Options</h5>\\n      <div class=gf-form>\\n        <span class=\\\"gf-form-label width-14\\\">Values separated by comma</span>\\n        <input type=text class=gf-form-input ng-model=current.query ng-blur=runQuery() placeholder=\\\"1, 10, 20, myvalue, escaped\\\\,value\\\" required/>\\n      </div>\\n    </div>\\n\\n    <div ng-if=\\\"current.type === 'constant'\\\" class=gf-form-group>\\n      <h5 class=section-heading>Constant options</h5>\\n      <div class=gf-form>\\n        <span class=gf-form-label>Value</span>\\n        <input type=text class=gf-form-input ng-model=current.query ng-blur=runQuery() placeholder=\\\"your metric prefix\\\"/>\\n      </div>\\n    </div>\\n\\n    <div ng-if=\\\"current.type === 'textbox'\\\" class=gf-form-group>\\n      <h5 class=section-heading>Text options</h5>\\n      <div class=gf-form>\\n        <span class=gf-form-label>Default value</span>\\n        <input type=text class=gf-form-input ng-model=current.query ng-blur=runQuery() placeholder=\\\"default value, if any\\\"/>\\n      </div>\\n    </div>\\n\\n    <div ng-if=\\\"current.type === 'query'\\\" class=gf-form-group>\\n      <h5 class=section-heading>Query Options</h5>\\n\\n      <div class=gf-form-inline>\\n        <div class=\\\"gf-form max-width-21\\\">\\n          <span class=\\\"gf-form-label width-10\\\">Data source</span>\\n          <div class=\\\"gf-form-select-wrapper max-width-14\\\">\\n            <select class=gf-form-input ng-model=current.datasource ng-options=\\\"f.value as f.name for f in datasources\\\" ng-change=datasourceChanged() required>\\n              <option value=\\\"\\\" ng-if=false></option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"gf-form max-width-22\\\">\\n          <span class=\\\"gf-form-label width-10\\\">\\n            Refresh\\n            <info-popover mode=right-normal>\\n              When to update the values of this variable.\\n            </info-popover>\\n          </span>\\n          <div class=\\\"gf-form-select-wrapper width-15\\\">\\n            <select class=gf-form-input ng-model=current.refresh ng-options=\\\"f.value as f.text for f in refreshOptions\\\"></select>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <rebuild-on-change property=currentDatasource>\\n        <variable-query-editor-loader> </variable-query-editor-loader>\\n      </rebuild-on-change>\\n\\n      <div class=gf-form>\\n        <span class=\\\"gf-form-label width-10\\\">\\n          Regex\\n          <info-popover mode=right-normal>\\n            Optional, if you want to extract part of a series name or metric node segment.\\n          </info-popover>\\n        </span>\\n        <input type=text class=gf-form-input ng-model=current.regex placeholder=/.*-(.*)-.*/ ng-model-onblur ng-change=runQuery() />\\n      </div>\\n      <div class=\\\"gf-form max-width-21\\\">\\n        <span class=\\\"gf-form-label width-10\\\">\\n          Sort\\n          <info-popover mode=right-normal>\\n            How to sort the values of this variable.\\n          </info-popover>\\n        </span>\\n        <div class=\\\"gf-form-select-wrapper max-width-14\\\">\\n          <select class=gf-form-input ng-model=current.sort ng-options=\\\"f.value as f.text for f in sortOptions\\\" ng-change=runQuery()></select>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div ng-show=\\\"current.type === 'datasource'\\\" class=gf-form-group>\\n      <h5 class=section-heading>Data source options</h5>\\n\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-12\\\">Type</label>\\n        <div class=\\\"gf-form-select-wrapper max-width-18\\\">\\n          <select class=gf-form-input ng-model=current.query ng-options=\\\"f.value as f.text for f in datasourceTypes\\\" ng-change=runQuery()></select>\\n        </div>\\n      </div>\\n\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-12\\\">\\n          Instance name filter\\n          <info-popover mode=right-normal>\\n            Regex filter for which data source instances to choose from in the variable value dropdown. Leave empty for\\n            all.\\n            <br/><br/>\\n            Example: <code>/^prod/</code>\\n          </info-popover>\\n        </label>\\n        <input type=text class=\\\"gf-form-input max-width-18\\\" ng-model=current.regex placeholder=/.*-(.*)-.*/ ng-model-onblur ng-change=runQuery() />\\n      </div>\\n    </div>\\n\\n    <div ng-if=\\\"current.type === 'adhoc'\\\" class=gf-form-group>\\n      <h5 class=section-heading>Options</h5>\\n      <div class=\\\"gf-form max-width-21\\\">\\n        <span class=\\\"gf-form-label width-8\\\">Data source</span>\\n        <div class=\\\"gf-form-select-wrapper max-width-14\\\">\\n          <select class=gf-form-input ng-model=current.datasource ng-options=\\\"f.value as f.name for f in datasources\\\" required ng-change=validate()>\\n            <option value=\\\"\\\" ng-if=false></option>\\n          </select>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"section gf-form-group\\\" ng-show=variableTypes[current.type].supportsMulti>\\n      <h5 class=section-heading>Selection Options</h5>\\n      <div class=section>\\n        <gf-form-switch class=gf-form label=Multi-value label-class=width-10 tooltip=\\\"Enables multiple values to be selected at the same time\\\" checked=current.multi on-change=runQuery()>\\n        </gf-form-switch>\\n        <gf-form-switch class=gf-form label=\\\"Include All option\\\" label-class=width-10 checked=current.includeAll on-change=runQuery()>\\n        </gf-form-switch>\\n      </div>\\n      <div class=gf-form ng-if=current.includeAll>\\n        <span class=\\\"gf-form-label width-10\\\">Custom all value</span>\\n        <input type=text class=\\\"gf-form-input max-width-15\\\" ng-model=current.allValue placeholder=\\\"blank = auto\\\"/>\\n      </div>\\n    </div>\\n\\n    <div class=gf-form-group ng-if=\\\"current.type === 'query'\\\">\\n      <h5>Value groups/tags (Experimental feature)</h5>\\n      <gf-form-switch class=gf-form label=Enabled label-class=width-10 checked=current.useTags on-change=runQuery()>\\n      </gf-form-switch>\\n      <div class=\\\"gf-form last\\\" ng-if=current.useTags>\\n        <span class=\\\"gf-form-label width-10\\\">Tags query</span>\\n        <input type=text class=gf-form-input ng-model=current.tagsQuery placeholder=\\\"metric name or tags query\\\" ng-model-onblur/>\\n      </div>\\n      <div class=gf-form ng-if=current.useTags>\\n        <li class=\\\"gf-form-label width-10\\\">Tag values query</li>\\n        <input type=text class=gf-form-input ng-model=current.tagValuesQuery placeholder=apps.$tag.* ng-model-onblur/>\\n      </div>\\n    </div>\\n\\n    <div class=gf-form-group ng-show=current.options.length>\\n      <h5>Preview of values</h5>\\n      <div class=gf-form-inline>\\n        <div class=gf-form ng-repeat=\\\"option in current.options | limitTo: optionsLimit\\\">\\n          <span class=gf-form-label>{{ option.text }}</span>\\n        </div>\\n        <div class=gf-form ng-if=\\\"current.options.length > optionsLimit\\\">\\n          <a class=\\\"gf-form-label btn-secondary\\\" ng-click=showMoreOptions()>Show more</a>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"alert alert-info gf-form-group\\\" ng-if=infoText>\\n      {{ infoText }}\\n    </div>\\n\\n    <div class=\\\"gf-form-button-row p-y-0\\\">\\n      <button type=submit class=\\\"btn btn-primary\\\" ng-show=\\\"mode === 'edit'\\\" ng-click=update();>Update</button>\\n      <button type=submit class=\\\"btn btn-primary\\\" ng-show=\\\"mode === 'new'\\\" ng-click=add();>Add</button>\\n    </div>\\n  </form>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","export enum MappingType {\n  ValueToText = 1,\n  RangeToText = 2,\n}\n\ninterface BaseMap {\n  id: number;\n  operator: string;\n  text: string;\n  type: MappingType;\n}\n\nexport type ValueMapping = ValueMap | RangeMap;\n\nexport interface ValueMap extends BaseMap {\n  value: string;\n}\n\nexport interface RangeMap extends BaseMap {\n  from: string;\n  to: string;\n}\n","var path = 'public/app/features/admin/partials/styleguide.html';\nvar html = \"<page-header model=ctrl.navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\">\\n\\n\\t<h3 class=page-heading>Buttons</h3>\\n\\n\\t<div class=tab-pane>\\n\\t\\t<div ng-repeat=\\\"variant in ctrl.buttonVariants\\\" class=row>\\n\\t\\t\\t<div ng-repeat=\\\"btnSize in ctrl.buttonSizes\\\" class=\\\"style-guide-button-list p-a-2 col-md-4\\\">\\n\\t\\t\\t\\t<button ng-repeat=\\\"buttonName in ctrl.buttonNames\\\" class=\\\"btn btn{{variant}}{{buttonName}} {{btnSize}}\\\">\\n\\t\\t\\t\\t\\tbtn{{variant}}{{buttonName}}\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<h3 class=page-heading>Forms</h3>\\n\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<label class=gf-form-label>Label</label>\\n\\t\\t\\t<input type=text class=gf-form-input />\\n\\t\\t</div>\\n\\t</div>\\n\\n</div>\\n\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","export enum MetricKind {\n  METRIC_KIND_UNSPECIFIED = 'METRIC_KIND_UNSPECIFIED',\n  GAUGE = 'GAUGE',\n  DELTA = 'DELTA',\n  CUMULATIVE = 'CUMULATIVE',\n}\n\nexport enum ValueTypes {\n  VALUE_TYPE_UNSPECIFIED = 'VALUE_TYPE_UNSPECIFIED',\n  BOOL = 'BOOL',\n  INT64 = 'INT64',\n  DOUBLE = 'DOUBLE',\n  STRING = 'STRING',\n  DISTRIBUTION = 'DISTRIBUTION',\n  MONEY = 'MONEY',\n}\n\nexport const alignOptions = [\n  {\n    text: 'delta',\n    value: 'ALIGN_DELTA',\n    valueTypes: [ValueTypes.INT64, ValueTypes.DOUBLE, ValueTypes.MONEY, ValueTypes.DISTRIBUTION],\n    metricKinds: [MetricKind.CUMULATIVE, MetricKind.DELTA],\n  },\n  {\n    text: 'rate',\n    value: 'ALIGN_RATE',\n    valueTypes: [ValueTypes.INT64, ValueTypes.DOUBLE, ValueTypes.MONEY],\n    metricKinds: [MetricKind.CUMULATIVE, MetricKind.DELTA],\n  },\n  {\n    text: 'interpolate',\n    value: 'ALIGN_INTERPOLATE',\n    valueTypes: [ValueTypes.INT64, ValueTypes.DOUBLE, ValueTypes.MONEY],\n    metricKinds: [MetricKind.GAUGE],\n  },\n  {\n    text: 'next older',\n    value: 'ALIGN_NEXT_OLDER',\n    valueTypes: [\n      ValueTypes.INT64,\n      ValueTypes.DOUBLE,\n      ValueTypes.MONEY,\n      ValueTypes.DISTRIBUTION,\n      ValueTypes.STRING,\n      ValueTypes.VALUE_TYPE_UNSPECIFIED,\n      ValueTypes.BOOL,\n    ],\n    metricKinds: [MetricKind.GAUGE],\n  },\n  {\n    text: 'min',\n    value: 'ALIGN_MIN',\n    valueTypes: [ValueTypes.INT64, ValueTypes.DOUBLE, ValueTypes.MONEY],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA],\n  },\n  {\n    text: 'max',\n    value: 'ALIGN_MAX',\n    valueTypes: [ValueTypes.INT64, ValueTypes.DOUBLE, ValueTypes.MONEY],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA],\n  },\n  {\n    text: 'mean',\n    value: 'ALIGN_MEAN',\n    valueTypes: [ValueTypes.INT64, ValueTypes.DOUBLE, ValueTypes.MONEY],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA],\n  },\n  {\n    text: 'count',\n    value: 'ALIGN_COUNT',\n    valueTypes: [ValueTypes.INT64, ValueTypes.DOUBLE, ValueTypes.MONEY, ValueTypes.BOOL],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA],\n  },\n  {\n    text: 'sum',\n    value: 'ALIGN_SUM',\n    valueTypes: [ValueTypes.INT64, ValueTypes.DOUBLE, ValueTypes.MONEY, ValueTypes.DISTRIBUTION],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA],\n  },\n  {\n    text: 'stddev',\n    value: 'ALIGN_STDDEV',\n    valueTypes: [ValueTypes.INT64, ValueTypes.DOUBLE, ValueTypes.MONEY],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA],\n  },\n  {\n    text: 'count true',\n    value: 'ALIGN_COUNT_TRUE',\n    valueTypes: [ValueTypes.BOOL],\n    metricKinds: [MetricKind.GAUGE],\n  },\n  {\n    text: 'count false',\n    value: 'ALIGN_COUNT_FALSE',\n    valueTypes: [ValueTypes.BOOL],\n    metricKinds: [MetricKind.GAUGE],\n  },\n  {\n    text: 'fraction true',\n    value: 'ALIGN_FRACTION_TRUE',\n    valueTypes: [ValueTypes.BOOL],\n    metricKinds: [MetricKind.GAUGE],\n  },\n  {\n    text: 'percentile 99',\n    value: 'ALIGN_PERCENTILE_99',\n    valueTypes: [ValueTypes.DISTRIBUTION],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA],\n  },\n  {\n    text: 'percentile 95',\n    value: 'ALIGN_PERCENTILE_95',\n    valueTypes: [ValueTypes.DISTRIBUTION],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA],\n  },\n  {\n    text: 'percentile 50',\n    value: 'ALIGN_PERCENTILE_50',\n    valueTypes: [ValueTypes.DISTRIBUTION],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA],\n  },\n  {\n    text: 'percentile 05',\n    value: 'ALIGN_PERCENTILE_05',\n    valueTypes: [ValueTypes.DISTRIBUTION],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA],\n  },\n  {\n    text: 'percent change',\n    value: 'ALIGN_PERCENT_CHANGE',\n    valueTypes: [ValueTypes.INT64, ValueTypes.DOUBLE, ValueTypes.MONEY],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA],\n  },\n];\n\nexport const aggOptions = [\n  {\n    text: 'none',\n    value: 'REDUCE_NONE',\n    valueTypes: [\n      ValueTypes.INT64,\n      ValueTypes.DOUBLE,\n      ValueTypes.MONEY,\n      ValueTypes.DISTRIBUTION,\n      ValueTypes.BOOL,\n      ValueTypes.STRING,\n    ],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA, MetricKind.CUMULATIVE, MetricKind.METRIC_KIND_UNSPECIFIED],\n  },\n  {\n    text: 'mean',\n    value: 'REDUCE_MEAN',\n    valueTypes: [ValueTypes.INT64, ValueTypes.DOUBLE, ValueTypes.MONEY, ValueTypes.DISTRIBUTION],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA],\n  },\n  {\n    text: 'min',\n    value: 'REDUCE_MIN',\n    valueTypes: [ValueTypes.INT64, ValueTypes.DOUBLE, ValueTypes.MONEY],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA, MetricKind.CUMULATIVE, MetricKind.METRIC_KIND_UNSPECIFIED],\n  },\n  {\n    text: 'max',\n    value: 'REDUCE_MAX',\n    valueTypes: [ValueTypes.INT64, ValueTypes.DOUBLE, ValueTypes.MONEY],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA, MetricKind.CUMULATIVE, MetricKind.METRIC_KIND_UNSPECIFIED],\n  },\n  {\n    text: 'sum',\n    value: 'REDUCE_SUM',\n    valueTypes: [ValueTypes.INT64, ValueTypes.DOUBLE, ValueTypes.MONEY, ValueTypes.DISTRIBUTION],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA, MetricKind.CUMULATIVE, MetricKind.METRIC_KIND_UNSPECIFIED],\n  },\n  {\n    text: 'std. dev.',\n    value: 'REDUCE_STDDEV',\n    valueTypes: [ValueTypes.INT64, ValueTypes.DOUBLE, ValueTypes.MONEY, ValueTypes.DISTRIBUTION],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA, MetricKind.CUMULATIVE, MetricKind.METRIC_KIND_UNSPECIFIED],\n  },\n  {\n    text: 'count',\n    value: 'REDUCE_COUNT',\n    valueTypes: [\n      ValueTypes.INT64,\n      ValueTypes.DOUBLE,\n      ValueTypes.MONEY,\n      ValueTypes.DISTRIBUTION,\n      ValueTypes.BOOL,\n      ValueTypes.STRING,\n    ],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA, MetricKind.CUMULATIVE],\n  },\n  {\n    text: 'count true',\n    value: 'REDUCE_COUNT_TRUE',\n    valueTypes: [ValueTypes.BOOL],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA],\n  },\n  {\n    text: 'count false',\n    value: 'REDUCE_COUNT_FALSE',\n    valueTypes: [ValueTypes.BOOL],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA],\n  },\n  {\n    text: '99th percentile',\n    value: 'REDUCE_PERCENTILE_99',\n    valueTypes: [ValueTypes.INT64, ValueTypes.DOUBLE, ValueTypes.MONEY, ValueTypes.DISTRIBUTION],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA, MetricKind.CUMULATIVE],\n  },\n  {\n    text: '95th percentile',\n    value: 'REDUCE_PERCENTILE_95',\n    valueTypes: [ValueTypes.INT64, ValueTypes.DOUBLE, ValueTypes.MONEY, ValueTypes.DISTRIBUTION],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA, MetricKind.CUMULATIVE],\n  },\n  {\n    text: '50th percentile',\n    value: 'REDUCE_PERCENTILE_50',\n    valueTypes: [ValueTypes.INT64, ValueTypes.DOUBLE, ValueTypes.MONEY, ValueTypes.DISTRIBUTION],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA, MetricKind.CUMULATIVE],\n  },\n  {\n    text: '5th percentile',\n    value: 'REDUCE_PERCENTILE_05',\n    valueTypes: [ValueTypes.INT64, ValueTypes.DOUBLE, ValueTypes.MONEY, ValueTypes.DISTRIBUTION],\n    metricKinds: [MetricKind.GAUGE, MetricKind.DELTA, MetricKind.CUMULATIVE],\n  },\n];\n\nexport const alignmentPeriods = [\n  { text: 'grafana auto', value: 'grafana-auto' },\n  { text: 'stackdriver auto', value: 'stackdriver-auto' },\n  { text: '1m', value: '+60s' },\n  { text: '2m', value: '+120s' },\n  { text: '5m', value: '+300s' },\n  { text: '10m', value: '+600s' },\n  { text: '30m', value: '+1800s' },\n  { text: '1h', value: '+3600s' },\n  { text: '3h', value: '+7200s' },\n  { text: '6h', value: '+21600s' },\n  { text: '1d', value: '+86400s' },\n  { text: '3d', value: '+259200s' },\n  { text: '1w', value: '+604800s' },\n];\n\nexport const stackdriverUnitMappings = {\n  bit: 'bits',\n  By: 'bytes',\n  s: 's',\n  min: 'm',\n  h: 'h',\n  d: 'd',\n  us: 'µs',\n  ms: 'ms',\n  ns: 'ns',\n  percent: 'percent',\n  MiBy: 'mbytes',\n  'By/s': 'Bps',\n  GBy: 'decgbytes',\n};\n","var path = 'public/app/plugins/panel/pluginlist/editor.html';\nvar html = \"<div class=gf-form-group>\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=\\\"gf-form-label width-10\\\">Mode</span>\\n\\t\\t\\t<div class=\\\"gf-form-select-wrapper max-width-10\\\">\\n\\t\\t\\t\\t<select class=gf-form-input ng-model=ctrl.panel.mode ng-options=\\\"f for f in ctrl.modes\\\" ng-change=ctrl.refresh()></select>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form ng-show=\\\"ctrl.panel.mode === 'recently viewed'\\\">\\n\\t\\t\\t<span class=gf-form-label>\\n\\t\\t\\t\\t<i class=\\\"grafana-tip fa fa-question-circle ng-scope\\\" bs-tooltip=\\\"'WARNING: This list will be cleared when clearing browser cache'\\\" data-original-title=\\\"\\\" title=\\\"\\\"></i>\\n\\t\\t\\t</span>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=gf-form-inline ng-if=\\\"ctrl.panel.mode === 'search'\\\">\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=\\\"gf-form-label width-10\\\">Search options</span>\\n\\t\\t\\t<span class=gf-form-label>Query</span>\\n\\n\\t\\t\\t<input type=text class=gf-form-input placeholder=\\\"title query\\\" ng-model=ctrl.panel.query ng-change=ctrl.refresh() ng-model-onblur>\\n\\n\\t\\t</div>\\n\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=gf-form-label>Tags</span>\\n\\n\\t\\t\\t<bootstrap-tagsinput ng-model=ctrl.panel.tags tagclass=\\\"label label-tag\\\" placeholder=\\\"add tags\\\" on-tags-updated=ctrl.refresh()>\\n\\t\\t\\t</bootstrap-tagsinput>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=\\\"gf-form-label width-10\\\">Limit number to</span>\\n\\t\\t\\t<input class=gf-form-input type=number ng-model=ctrl.panel.limit ng-model-onblur ng-change=ctrl.refresh()>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/partials/signup_invited.html';\nvar html = \"<page-header model=navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\">\\n\\t<h3 class=page-sub-heading>Hello {{greeting}}.</h3>\\n\\n\\t<div class=\\\"modal-tagline p-b-2\\\">\\n\\t\\t<em>{{invitedBy}}</em> has invited you to join Grafana and the organization <span class=highlight-word>{{contextSrv.user.orgName}}</span><br>Please complete the following and choose a password to accept your invitation and continue:\\n\\t</div>\\n\\n\\t<form name=inviteForm class=\\\"login-form gf-form-group\\\">\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=\\\"gf-form-label width-7\\\">Email</span>\\n\\t\\t\\t<input type=email name=email class=\\\"gf-form-input max-width-21\\\" required ng-model=formModel.email placeholder=Email>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=\\\"gf-form-label width-7\\\">Name</span>\\n\\t\\t\\t<input type=text name=name class=\\\"gf-form-input max-width-21\\\" ng-model=formModel.name placeholder=\\\"Name (optional)\\\">\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=\\\"gf-form-label width-7\\\">Username</span>\\n\\t\\t\\t<input type=text name=username class=\\\"gf-form-input max-width-21\\\" required ng-model=formModel.username placeholder=Username>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=\\\"gf-form-label width-7\\\">Password</span>\\n\\t\\t\\t<input type=password name=password class=\\\"gf-form-input max-width-21\\\" required ng-model=formModel.password id=inputPassword placeholder=password>\\n\\t\\t</div>\\n\\n\\t\\t<div class=gf-form-button-row>\\n\\t\\t\\t<button type=submit class=\\\"btn btn-primary\\\" ng-click=submit(); ng-disable=!inviteForm.$valid>\\n\\t\\t\\t\\tSign Up\\n\\t\\t\\t</button>\\n\\t\\t</div>\\n\\t</form>\\n</div>\\n\\n\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/datasource/stackdriver/partials/query.editor.html';\nvar html = \"<query-editor-row query-ctrl=ctrl has-text-edit-mode=false>\\n  <stackdriver-query-editor target=ctrl.target events=ctrl.panelCtrl.events datasource=ctrl.datasource template-srv=ctrl.templateSrv on-query-change=(ctrl.onQueryChange) on-execute-query=(ctrl.onExecuteQuery)></stackdriver-query-editor>\\n</query-editor-row>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/datasource/mysql/partials/config.html';\nvar html = \"<h3 class=page-heading>MySQL Connection</h3>\\n\\n<div class=gf-form-group>\\n\\t<div class=\\\"gf-form max-width-30\\\">\\n\\t\\t<span class=\\\"gf-form-label width-7\\\">Host</span>\\n\\t\\t<input type=text class=gf-form-input ng-model=ctrl.current.url placeholder=localhost:3306 bs-typeahead=\\\"{{['localhost:3306', 'localhost:3307']}}\\\" required>\\n\\t</div>\\n\\n\\t<div class=\\\"gf-form max-width-30\\\">\\n\\t\\t<span class=\\\"gf-form-label width-7\\\">Database</span>\\n\\t\\t<input type=text class=gf-form-input ng-model=ctrl.current.database placeholder=\\\"database name\\\" required>\\n\\t</div>\\n\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=\\\"gf-form max-width-15\\\">\\n\\t\\t\\t<span class=\\\"gf-form-label width-7\\\">User</span>\\n\\t\\t\\t<input type=text class=gf-form-input ng-model=ctrl.current.user placeholder=user>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n      <secret-form-field isconfigured=ctrl.current.secureJsonFields.password value=ctrl.current.secureJsonData.password on-reset=ctrl.onPasswordReset on-change=ctrl.onPasswordChange inputwidth=9 />\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=gf-form-group>\\n\\t\\t<div class=gf-form-inline>\\n\\t\\t\\t<gf-form-checkbox class=gf-form label=\\\"TLS Client Auth\\\" label-class=width-10 checked=ctrl.current.jsonData.tlsAuth switch-class=max-width-6></gf-form-checkbox>\\n\\t\\t\\t<gf-form-checkbox class=gf-form label=\\\"With CA Cert\\\" tooltip=\\\"Needed for\\n\\t\\t\\t\\tverifing self-signed TLS Certs\\\" checked=ctrl.current.jsonData.tlsAuthWithCACert label-class=width-11 switch-class=max-width-6></gf-form-checkbox>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form-inline>\\n\\t\\t\\t<gf-form-checkbox class=gf-form label=\\\"Skip TLS Verify\\\" label-class=width-10 checked=ctrl.current.jsonData.tlsSkipVerify switch-class=max-width-6></gf-form-checkbox>\\n\\t\\t</div>\\n\\t</div>\\n\\n<datasource-tls-auth-settings current=ctrl.current ng-if=\\\"(ctrl.current.jsonData.tlsAuth || ctrl.current.jsonData.tlsAuthWithCACert)\\\">\\n</datasource-tls-auth-settings>\\n\\n<b>Connection limits</b>\\n\\n<div class=gf-form-group>\\n\\t<div class=\\\"gf-form max-width-15\\\">\\n\\t\\t<span class=\\\"gf-form-label width-7\\\">Max open</span>\\n\\t\\t<input type=number min=0 class=\\\"gf-form-input gf-form-input--has-help-icon\\\" ng-model=ctrl.current.jsonData.maxOpenConns placeholder=unlimited>\\n\\t\\t<info-popover mode=right-absolute>\\n\\t\\t\\tThe maximum number of open connections to the database. If <i>Max idle connections</i> is greater than 0 and the\\n\\t\\t\\t<i>Max open connections</i> is less than <i>Max idle connections</i>, then <i>Max idle connections</i> will be\\n\\t\\t\\treduced to match the <i>Max open connections</i> limit. If set to 0, there is no limit on the number of open\\n\\t\\t\\tconnections.\\n\\t\\t</info-popover>\\n\\t</div>\\n\\t<div class=\\\"gf-form max-width-15\\\">\\n\\t\\t<span class=\\\"gf-form-label width-7\\\">Max idle</span>\\n\\t\\t<input type=number min=0 class=\\\"gf-form-input gf-form-input--has-help-icon\\\" ng-model=ctrl.current.jsonData.maxIdleConns placeholder=2>\\n\\t\\t<info-popover mode=right-absolute>\\n\\t\\t\\tThe maximum number of connections in the idle connection pool. If <i>Max open connections</i> is greater than 0 but\\n\\t\\t\\tless than the <i>Max idle connections</i>, then the <i>Max idle connections</i> will be reduced to match the\\n\\t\\t\\t<i>Max open connections</i> limit. If set to 0, no idle connections are retained.\\n\\t\\t</info-popover>\\n\\t</div>\\n\\t<div class=\\\"gf-form max-width-15\\\">\\n\\t\\t<span class=\\\"gf-form-label width-7\\\">Max lifetime</span>\\n\\t\\t<input type=number min=0 class=\\\"gf-form-input gf-form-input--has-help-icon\\\" ng-model=ctrl.current.jsonData.connMaxLifetime placeholder=14400>\\n\\t\\t<info-popover mode=right-absolute>\\n\\t\\t\\tThe maximum amount of time in seconds a connection may be reused. If set to 0, connections are reused forever.<br/><br/>\\n\\t\\t\\tThis should always be lower than configured <a href=https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_wait_timeout target=_blank>wait_timeout</a> in MySQL.\\n\\t\\t</info-popover>\\n\\t</div>\\n</div>\\n\\n<h3 class=page-heading>MySQL details</h3>\\n\\n<div class=gf-form-group>\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=\\\"gf-form-label width-9\\\">Min time interval</span>\\n\\t\\t\\t<input type=text class=\\\"gf-form-input width-6 gf-form-input--has-help-icon\\\" ng-model=ctrl.current.jsonData.timeInterval spellcheck=false placeholder=1m ng-pattern=/^\\\\d+(ms|[Mwdhmsy])$/ >\\n\\t\\t\\t<info-popover mode=right-absolute>\\n\\t\\t\\t\\tA lower limit for the auto group by time interval. Recommended to be set to write frequency,\\n\\t\\t\\t\\tfor example <code>1m</code> if your data is written every minute.\\n\\t\\t\\t</info-popover>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<div class=gf-form-group>\\n\\t<div class=grafana-info-box>\\n\\t\\t<h5>User Permission</h5>\\n\\t\\t<p>\\n\\t\\t\\tThe database user should only be granted SELECT permissions on the specified database &amp; tables you want to query.\\n\\t\\t\\tGrafana does not validate that queries are safe so queries can contain any SQL statement. For example, statements\\n\\t\\t\\tlike <code>USE otherdb;</code> and <code>DROP TABLE user;</code> would be executed. To protect against this we\\n\\t\\t\\t<strong>Highly</strong> recommmend you create a specific MySQL user with restricted permissions.\\n\\n\\t\\t\\tCheckout the <a class=external-link target=_blank href=http://docs.grafana.org/features/datasources/mysql/ >MySQL Data Source Docs</a> for more information.\\n\\t\\t</p>\\n\\t</div>\\n</div>\\n</div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { Vector } from '../types/vector';\nimport { DataFrame } from '../types/dataFrame';\n\n/**\n * This abstraction will present the contents of a DataFrame as if\n * it were a well typed javascript object Vector.\n *\n * NOTE: The contents of the object returned from `view.get(index)`\n * are optimized for use in a loop.  All calls return the same object\n * but the index has changed.\n *\n * For example, the three objects:\n *   const first = view.get(0);\n *   const second = view.get(1);\n *   const third = view.get(2);\n * will point to the contents at index 2\n *\n * If you need three different objects, consider something like:\n *   const first = { ... view.get(0) };\n *   const second = { ... view.get(1) };\n *   const third = { ... view.get(2) };\n */\nexport class DataFrameView<T = any> implements Vector<T> {\n  private index = 0;\n  private obj: T;\n\n  constructor(private data: DataFrame) {\n    const obj = ({} as unknown) as T;\n    for (let i = 0; i < data.fields.length; i++) {\n      const field = data.fields[i];\n      const getter = () => {\n        return field.values.get(this.index);\n      };\n      if (!(obj as any).hasOwnProperty(field.name)) {\n        Object.defineProperty(obj, field.name, {\n          enumerable: true, // Shows up as enumerable property\n          get: getter,\n        });\n      }\n      Object.defineProperty(obj, i, {\n        enumerable: false, // Don't enumerate array index\n        get: getter,\n      });\n    }\n    this.obj = obj;\n  }\n\n  get dataFrame() {\n    return this.data;\n  }\n\n  get length() {\n    return this.data.length;\n  }\n\n  get(idx: number) {\n    this.index = idx;\n    return this.obj;\n  }\n\n  toArray(): T[] {\n    const arr: T[] = [];\n    for (let i = 0; i < this.data.length; i++) {\n      arr.push({ ...this.get(i) });\n    }\n    return arr;\n  }\n\n  toJSON(): T[] {\n    return this.toArray();\n  }\n\n  forEachRow(iterator: (row: T) => void) {\n    for (let i = 0; i < this.data.length; i++) {\n      iterator(this.get(i));\n    }\n  }\n}\n","import { Field, DataFrame, FieldType, guessFieldTypeForField } from '../index';\n\ninterface FieldWithIndex extends Field {\n  index: number;\n}\n\nexport class FieldCache {\n  fields: FieldWithIndex[] = [];\n\n  private fieldByName: { [key: string]: FieldWithIndex } = {};\n  private fieldByType: { [key: string]: FieldWithIndex[] } = {};\n\n  constructor(data: DataFrame) {\n    this.fields = data.fields.map((field, idx) => ({\n      ...field,\n      index: idx,\n    }));\n\n    for (let i = 0; i < data.fields.length; i++) {\n      const field = data.fields[i];\n      // Make sure it has a type\n      if (field.type === FieldType.other) {\n        const t = guessFieldTypeForField(field);\n        if (t) {\n          field.type = t;\n        }\n      }\n      if (!this.fieldByType[field.type]) {\n        this.fieldByType[field.type] = [];\n      }\n      this.fieldByType[field.type].push({\n        ...field,\n        index: i,\n      });\n\n      if (this.fieldByName[field.name]) {\n        console.warn('Duplicate field names in DataFrame: ', field.name);\n      } else {\n        this.fieldByName[field.name] = { ...field, index: i };\n      }\n    }\n  }\n\n  getFields(type?: FieldType): FieldWithIndex[] {\n    if (!type) {\n      return [...this.fields]; // All fields\n    }\n    const fields = this.fieldByType[type];\n    if (fields) {\n      return [...fields];\n    }\n    return [];\n  }\n\n  hasFieldOfType(type: FieldType): boolean {\n    const types = this.fieldByType[type];\n    return types && types.length > 0;\n  }\n\n  getFirstFieldOfType(type: FieldType): FieldWithIndex | undefined {\n    const arr = this.fieldByType[type];\n    if (arr && arr.length > 0) {\n      return arr[0];\n    }\n    return undefined;\n  }\n\n  hasFieldNamed(name: string): boolean {\n    return !!this.fieldByName[name];\n  }\n\n  /**\n   * Returns the first field with the given name.\n   */\n  getFieldByName(name: string): FieldWithIndex | undefined {\n    return this.fieldByName[name];\n  }\n}\n","import { MutableDataFrame } from './MutableDataFrame';\nimport { CircularVector } from '../vector/CircularVector';\n\ninterface CircularOptions {\n  append?: 'head' | 'tail';\n  capacity?: number;\n}\n\n/**\n * This dataframe can have values constantly added, and will never\n * exceed the given capacity\n */\nexport class CircularDataFrame<T = any> extends MutableDataFrame<T> {\n  constructor(options: CircularOptions) {\n    super(undefined, (buffer?: any[]) => {\n      return new CircularVector({\n        ...options,\n        buffer,\n      });\n    });\n  }\n}\n","export * from './DataFrameView';\nexport * from './FieldCache';\nexport * from './CircularDataFrame';\nexport * from './MutableDataFrame';\nexport * from './processDataFrame';\n","/* Javascript plotting library for jQuery, version 0.8.3.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\n*/\n\n// first an inline dependency, jquery.colorhelpers.js, we inline it here\n// for convenience\n\n/* Plugin for jQuery for working with colors.\n *\n * Version 1.1.\n *\n * Inspiration from jQuery color animation plugin by John Resig.\n *\n * Released under the MIT license by Ole Laursen, October 2009.\n *\n * Examples:\n *\n *   $.color.parse(\"#fff\").scale('rgb', 0.25).add('a', -0.5).toString()\n *   var c = $.color.extract($(\"#mydiv\"), 'background-color');\n *   console.log(c.r, c.g, c.b, c.a);\n *   $.color.make(100, 50, 25, 0.4).toString() // returns \"rgba(100,50,25,0.4)\"\n *\n * Note that .scale() and .add() return the same modified object\n * instead of making a new one.\n *\n * V. 1.1: Fix error handling so e.g. parsing an empty string does\n * produce a color rather than just crashing.\n */\n(function($){$.color={};$.color.make=function(r,g,b,a){var o={};o.r=r||0;o.g=g||0;o.b=b||0;o.a=a!=null?a:1;o.add=function(c,d){for(var i=0;i<c.length;++i)o[c.charAt(i)]+=d;return o.normalize()};o.scale=function(c,f){for(var i=0;i<c.length;++i)o[c.charAt(i)]*=f;return o.normalize()};o.toString=function(){if(o.a>=1){return\"rgb(\"+[o.r,o.g,o.b].join(\",\")+\")\"}else{return\"rgba(\"+[o.r,o.g,o.b,o.a].join(\",\")+\")\"}};o.normalize=function(){function clamp(min,value,max){return value<min?min:value>max?max:value}o.r=clamp(0,parseInt(o.r),255);o.g=clamp(0,parseInt(o.g),255);o.b=clamp(0,parseInt(o.b),255);o.a=clamp(0,o.a,1);return o};o.clone=function(){return $.color.make(o.r,o.b,o.g,o.a)};return o.normalize()};$.color.extract=function(elem,css){var c;do{c=elem.css(css).toLowerCase();if(c!=\"\"&&c!=\"transparent\")break;elem=elem.parent()}while(elem.length&&!$.nodeName(elem.get(0),\"body\"));if(c==\"rgba(0, 0, 0, 0)\")c=\"transparent\";return $.color.parse(c)};$.color.parse=function(str){var res,m=$.color.make;if(res=/rgb\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10));if(res=/rgba\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10),parseFloat(res[4]));if(res=/rgb\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55);if(res=/rgba\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55,parseFloat(res[4]));if(res=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(str))return m(parseInt(res[1],16),parseInt(res[2],16),parseInt(res[3],16));if(res=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(str))return m(parseInt(res[1]+res[1],16),parseInt(res[2]+res[2],16),parseInt(res[3]+res[3],16));var name=$.trim(str).toLowerCase();if(name==\"transparent\")return m(255,255,255,0);else{res=lookupColors[name]||[0,0,0];return m(res[0],res[1],res[2])}};var lookupColors={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0]}})(jQuery);\n\n// the actual Flot code\n(function($) {\n\n\t// Cache the prototype hasOwnProperty for faster access\n\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    // A shim to provide 'detach' to jQuery versions prior to 1.4.  Using a DOM\n    // operation produces the same effect as detach, i.e. removing the element\n    // without touching its jQuery data.\n\n    // Do not merge this into Flot 0.9, since it requires jQuery 1.4.4+.\n\n    if (!$.fn.detach) {\n        $.fn.detach = function() {\n            return this.each(function() {\n                if (this.parentNode) {\n                    this.parentNode.removeChild( this );\n                }\n            });\n        };\n    }\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// The Canvas object is a wrapper around an HTML5 <canvas> tag.\n\t//\n\t// @constructor\n\t// @param {string} cls List of classes to apply to the canvas.\n\t// @param {element} container Element onto which to append the canvas.\n\t//\n\t// Requiring a container is a little iffy, but unfortunately canvas\n\t// operations don't work unless the canvas is attached to the DOM.\n\n\tfunction Canvas(cls, container) {\n\n\t\tvar element = container.children(\".\" + cls)[0];\n\n\t\tif (element == null) {\n\n\t\t\telement = document.createElement(\"canvas\");\n\t\t\telement.className = cls;\n\n\t\t\t$(element).css({ direction: \"ltr\", position: \"absolute\", left: 0, top: 0 })\n\t\t\t\t.appendTo(container);\n\n\t\t\t// If HTML5 Canvas isn't available, fall back to [Ex|Flash]canvas\n\n\t\t\tif (!element.getContext) {\n\t\t\t\tif (window.G_vmlCanvasManager) {\n\t\t\t\t\telement = window.G_vmlCanvasManager.initElement(element);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.element = element;\n\n\t\tvar context = this.context = element.getContext(\"2d\");\n\n\t\t// Determine the screen's ratio of physical to device-independent\n\t\t// pixels.  This is the ratio between the canvas width that the browser\n\t\t// advertises and the number of pixels actually present in that space.\n\n\t\t// The iPhone 4, for example, has a device-independent width of 320px,\n\t\t// but its screen is actually 640px wide.  It therefore has a pixel\n\t\t// ratio of 2, while most normal devices have a ratio of 1.\n\n\t\tvar devicePixelRatio = window.devicePixelRatio || 1,\n\t\t\tbackingStoreRatio =\n\t\t\t\tcontext.webkitBackingStorePixelRatio ||\n\t\t\t\tcontext.mozBackingStorePixelRatio ||\n\t\t\t\tcontext.msBackingStorePixelRatio ||\n\t\t\t\tcontext.oBackingStorePixelRatio ||\n\t\t\t\tcontext.backingStorePixelRatio || 1;\n\n\t\tthis.pixelRatio = devicePixelRatio / backingStoreRatio;\n\n\t\t// Size the canvas to match the internal dimensions of its container\n\n\t\tthis.resize(container.width(), container.height());\n\n\t\t// Collection of HTML div layers for text overlaid onto the canvas\n\n\t\tthis.textContainer = null;\n\t\tthis.text = {};\n\n\t\t// Cache of text fragments and metrics, so we can avoid expensively\n\t\t// re-calculating them when the plot is re-rendered in a loop.\n\n\t\tthis._textCache = {};\n\t\tthis._textSizeCache = window.flotTextSizeCache = window.flotTextSizeCache || {};\n\t}\n\n\t// Resizes the canvas to the given dimensions.\n\t//\n\t// @param {number} width New width of the canvas, in pixels.\n\t// @param {number} width New height of the canvas, in pixels.\n\n\tCanvas.prototype.resize = function(width, height) {\n\n\t\tif (width <= 0 || height <= 0) {\n\t\t\tthrow new Error(\"Invalid dimensions for plot, width = \" + width + \", height = \" + height);\n\t\t}\n\n\t\tvar element = this.element,\n\t\t\tcontext = this.context,\n\t\t\tpixelRatio = this.pixelRatio;\n\n\t\t// Resize the canvas, increasing its density based on the display's\n\t\t// pixel ratio; basically giving it more pixels without increasing the\n\t\t// size of its element, to take advantage of the fact that retina\n\t\t// displays have that many more pixels in the same advertised space.\n\n\t\t// Resizing should reset the state (excanvas seems to be buggy though)\n\n\t\tif (this.width != width) {\n\t\t\telement.width = width * pixelRatio;\n\t\t\telement.style.width = width + \"px\";\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tif (this.height != height) {\n\t\t\telement.height = height * pixelRatio;\n\t\t\telement.style.height = height + \"px\";\n\t\t\tthis.height = height;\n\t\t}\n\n\t\t// Save the context, so we can reset in case we get replotted.  The\n\t\t// restore ensure that we're really back at the initial state, and\n\t\t// should be safe even if we haven't saved the initial state yet.\n\n\t\tcontext.restore();\n\t\tcontext.save();\n\n\t\t// Scale the coordinate space to match the display density; so even though we\n\t\t// may have twice as many pixels, we still want lines and other drawing to\n\t\t// appear at the same size; the extra pixels will just make them crisper.\n\n\t\tcontext.scale(pixelRatio, pixelRatio);\n\t};\n\n\t// Clears the entire canvas area, not including any overlaid HTML text\n\n\tCanvas.prototype.clear = function() {\n\t\tthis.context.clearRect(0, 0, this.width, this.height);\n\t};\n\n\t// Finishes rendering the canvas, including managing the text overlay.\n\n\tCanvas.prototype.render = function() {\n\n\t\tvar cache = this._textCache;\n\n\t\t// For each text layer, add elements marked as active that haven't\n\t\t// already been rendered, and remove those that are no longer active.\n\n\t\tfor (var layerKey in cache) {\n\t\t\tif (hasOwnProperty.call(cache, layerKey)) {\n\n\t\t\t\tvar layer = this.getTextLayer(layerKey),\n\t\t\t\t\tlayerCache = cache[layerKey];\n\n\t\t\t\tlayer.hide();\n\n\t\t\t\tfor (var styleKey in layerCache) {\n\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\n\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\n\t\t\t\t\t\tfor (var key in styleCache) {\n\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\n\n\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\n\n\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\t\t\t\t\tif (position.active) {\n\t\t\t\t\t\t\t\t\t\tif (!position.rendered) {\n\t\t\t\t\t\t\t\t\t\t\tlayer.append(position.element);\n\t\t\t\t\t\t\t\t\t\t\tposition.rendered = true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tpositions.splice(i--, 1);\n\t\t\t\t\t\t\t\t\t\tif (position.rendered) {\n\t\t\t\t\t\t\t\t\t\t\tposition.element.detach();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (positions.length == 0) {\n\t\t\t\t\t\t\t\t\tdelete styleCache[key];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlayer.show();\n\t\t\t}\n\t\t}\n\t};\n\n\t// Creates (if necessary) and returns the text overlay container.\n\t//\n\t// @param {string} classes String of space-separated CSS classes used to\n\t//     uniquely identify the text layer.\n\t// @return {object} The jQuery-wrapped text-layer div.\n\n\tCanvas.prototype.getTextLayer = function(classes) {\n\n\t\tvar layer = this.text[classes];\n\n\t\t// Create the text layer if it doesn't exist\n\n\t\tif (layer == null) {\n\n\t\t\t// Create the text layer container, if it doesn't exist\n\n\t\t\tif (this.textContainer == null) {\n\t\t\t\tthis.textContainer = $(\"<div class='flot-text flot-temp-elem'></div>\")\n\t\t\t\t\t.css({\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\t'font-size': \"smaller\",\n\t\t\t\t\t\tcolor: \"#545454\"\n\t\t\t\t\t})\n\t\t\t\t\t.insertAfter(this.element);\n\t\t\t}\n\n\t\t\tlayer = this.text[classes] = $(\"<div></div>\")\n\t\t\t\t.addClass(classes)\n\t\t\t\t.css({\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tbottom: 0,\n\t\t\t\t\tright: 0\n\t\t\t\t})\n\t\t\t\t.appendTo(this.textContainer);\n\t\t}\n\n\t\treturn layer;\n\t};\n\n\t// Creates (if necessary) and returns a text info object.\n\t//\n\t// The object looks like this:\n\t//\n\t// {\n\t//     width: Width of the text's wrapper div.\n\t//     height: Height of the text's wrapper div.\n\t//     element: The jQuery-wrapped HTML div containing the text.\n\t//     positions: Array of positions at which this text is drawn.\n\t// }\n\t//\n\t// The positions array contains objects that look like this:\n\t//\n\t// {\n\t//     active: Flag indicating whether the text should be visible.\n\t//     rendered: Flag indicating whether the text is currently visible.\n\t//     element: The jQuery-wrapped HTML div containing the text.\n\t//     x: X coordinate at which to draw the text.\n\t//     y: Y coordinate at which to draw the text.\n\t// }\n\t//\n\t// Each position after the first receives a clone of the original element.\n\t//\n\t// The idea is that that the width, height, and general 'identity' of the\n\t// text is constant no matter where it is placed; the placements are a\n\t// secondary property.\n\t//\n\t// Canvas maintains a cache of recently-used text info objects; getTextInfo\n\t// either returns the cached element or creates a new entry.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {string} text Text string to retrieve info for.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which to rotate the text, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\t// @param {number=} width Maximum width of the text before it wraps.\n\t// @return {object} a text info object.\n\n\tCanvas.prototype.getTextInfo = function(layer, text, font, angle, width) {\n\n\t\tvar textStyle, layerCache, styleCache, info;\n\n\t\t// Cast the value to a string, in case we were given a number or such\n\n\t\ttext = \"\" + text;\n\n\t\t// If the font is a font-spec object, generate a CSS font definition\n\n\t\tif (typeof font === \"object\") {\n\t\t\ttextStyle = font.style + \" \" + font.variant + \" \" + font.weight + \" \" + font.size + \"px/\" + font.lineHeight + \"px \" + font.family;\n\t\t} else {\n\t\t\ttextStyle = font;\n\t\t}\n\n\t\t// Retrieve (or create) the cache for the text's layer and styles\n\n\t\tlayerCache = this._textCache[layer];\n\n\t\tif (layerCache == null) {\n\t\t\tlayerCache = this._textCache[layer] = {};\n\t\t}\n\n\t\tstyleCache = layerCache[textStyle];\n\n\t\tif (styleCache == null) {\n\t\t\tstyleCache = layerCache[textStyle] = {};\n\t\t}\n\n\t\tinfo = styleCache[text];\n\n\t\t// If we can't find a matching element in our cache, create a new one\n\n\t\tif (info == null) {\n\n\t\t\tvar element = $(\"<div></div>\").html(text)\n\t\t\t\t.css({\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t'max-width': width,\n\t\t\t\t\ttop: -9999\n\t\t\t\t})\n\t\t\t\t.appendTo(this.getTextLayer(layer));\n\n\t\t\tif (typeof font === \"object\") {\n\t\t\t\telement.css({\n\t\t\t\t\tfont: textStyle,\n\t\t\t\t\tcolor: font.color\n\t\t\t\t});\n\t\t\t} else if (typeof font === \"string\") {\n\t\t\t\telement.addClass(font);\n\t\t\t}\n\n      info = styleCache[text] = { element: element, positions: [] };\n\n      var size = this._textSizeCache[text];\n\t\t\tif (size) {\n        info.width = size.width;\n        info.height = size.height;\n\t\t\t} else {\n        info.width = element.outerWidth(true);\n        info.height = element.outerHeight(true);\n        this._textSizeCache[text] = { width: info.width, height: info.height };\n\t\t\t}\n\t\t\telement.detach();\n\t\t}\n\n\t\treturn info;\n\t};\n\n\t// Adds a text string to the canvas text overlay.\n\t//\n\t// The text isn't drawn immediately; it is marked as rendering, which will\n\t// result in its addition to the canvas on the next render pass.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {number} x X coordinate at which to draw the text.\n\t// @param {number} y Y coordinate at which to draw the text.\n\t// @param {string} text Text string to draw.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which to rotate the text, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\t// @param {number=} width Maximum width of the text before it wraps.\n\t// @param {string=} halign Horizontal alignment of the text; either \"left\",\n\t//     \"center\" or \"right\".\n\t// @param {string=} valign Vertical alignment of the text; either \"top\",\n\t//     \"middle\" or \"bottom\".\n\n\tCanvas.prototype.addText = function(layer, x, y, text, font, angle, width, halign, valign) {\n\n\t\tvar info = this.getTextInfo(layer, text, font, angle, width),\n\t\t\tpositions = info.positions;\n\n\t\t// Tweak the div's position to match the text's alignment\n\n\t\tif (halign == \"center\") {\n\t\t\tx -= info.width / 2;\n\t\t} else if (halign == \"right\") {\n\t\t\tx -= info.width;\n\t\t}\n\n\t\tif (valign == \"middle\") {\n\t\t\ty -= info.height / 2;\n\t\t} else if (valign == \"bottom\") {\n\t\t\ty -= info.height;\n\t\t}\n\n\t\t// Determine whether this text already exists at this position.\n\t\t// If so, mark it for inclusion in the next render pass.\n\n\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\tif (position.x == x && position.y == y) {\n\t\t\t\tposition.active = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// If the text doesn't exist at this position, create a new entry\n\n\t\t// For the very first position we'll re-use the original element,\n\t\t// while for subsequent ones we'll clone it.\n\n\t\tposition = {\n\t\t\tactive: true,\n\t\t\trendered: false,\n\t\t\telement: positions.length ? info.element.clone() : info.element,\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\n\t\tpositions.push(position);\n\n\t\t// Move the element to its final position within the container\n\n\t\tposition.element.css({\n\t\t\ttop: Math.round(y),\n\t\t\tleft: Math.round(x),\n\t\t\t'text-align': halign\t// In case the text wraps\n\t\t});\n\t};\n\n\t// Removes one or more text strings from the canvas text overlay.\n\t//\n\t// If no parameters are given, all text within the layer is removed.\n\t//\n\t// Note that the text is not immediately removed; it is simply marked as\n\t// inactive, which will result in its removal on the next render pass.\n\t// This avoids the performance penalty for 'clear and redraw' behavior,\n\t// where we potentially get rid of all text on a layer, but will likely\n\t// add back most or all of it later, as when redrawing axes, for example.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {number=} x X coordinate of the text.\n\t// @param {number=} y Y coordinate of the text.\n\t// @param {string=} text Text string to remove.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which the text is rotated, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\n\tCanvas.prototype.removeText = function(layer, x, y, text, font, angle) {\n\t\tif (text == null) {\n\t\t\tvar layerCache = this._textCache[layer];\n\t\t\tif (layerCache != null) {\n\t\t\t\tfor (var styleKey in layerCache) {\n\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\n\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\n\t\t\t\t\t\tfor (var key in styleCache) {\n\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\n\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\n\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\t\t\t\t\tposition.active = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tvar positions = this.getTextInfo(layer, text, font, angle).positions;\n\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\tif (position.x == x && position.y == y) {\n\t\t\t\t\tposition.active = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// The top-level container for the entire plot.\n\n    function Plot(placeholder, data_, options_, plugins) {\n        // data is on the form:\n        //   [ series1, series2 ... ]\n        // where series is either just the data as [ [x1, y1], [x2, y2], ... ]\n        // or { data: [ [x1, y1], [x2, y2], ... ], label: \"some label\", ... }\n\n        var series = [],\n            options = {\n                // the color theme used for graphs\n                colors: [\"#edc240\", \"#afd8f8\", \"#cb4b4b\", \"#4da74d\", \"#9440ed\"],\n                legend: {\n                    show: true,\n                    noColumns: 1, // number of colums in legend table\n                    labelFormatter: null, // fn: string -> string\n                    labelBoxBorderColor: \"#ccc\", // border color for the little label boxes\n                    container: null, // container (as jQuery object) to put legend in, null means default on top of graph\n                    position: \"ne\", // position of default legend container within plot\n                    margin: 5, // distance from grid edge to default legend container within plot\n                    backgroundColor: null, // null means auto-detect\n                    backgroundOpacity: 0.85, // set to 0 to avoid background\n                    sorted: null    // default to no legend sorting\n                },\n                xaxis: {\n                    show: null, // null = auto-detect, true = always, false = never\n                    position: \"bottom\", // or \"top\"\n                    mode: null, // null or \"time\"\n                    font: null, // null (derived from CSS in placeholder) or object like { size: 11, lineHeight: 13, style: \"italic\", weight: \"bold\", family: \"sans-serif\", variant: \"small-caps\" }\n                    color: null, // base color, labels, ticks\n                    tickColor: null, // possibly different color of ticks, e.g. \"rgba(0,0,0,0.15)\"\n                    transform: null, // null or f: number -> number to transform axis\n                    inverseTransform: null, // if transform is set, this should be the inverse function\n                    min: null, // min. value to show, null means set automatically\n                    max: null, // max. value to show, null means set automatically\n                    autoscaleMargin: null, // margin in % to add if auto-setting min/max\n                    ticks: null, // either [1, 3] or [[1, \"a\"], 3] or (fn: axis info -> ticks) or app. number of ticks for auto-ticks\n                    tickFormatter: null, // fn: number -> string\n                    labelWidth: null, // size of tick labels in pixels\n                    labelHeight: null,\n                    reserveSpace: null, // whether to reserve space even if axis isn't shown\n                    tickLength: null, // size in pixels of ticks, or \"full\" for whole line\n                    alignTicksWithAxis: null, // axis number or null for no sync\n                    tickDecimals: null, // no. of decimals, null means auto\n                    tickSize: null, // number or [number, \"unit\"]\n                    minTickSize: null // number or [number, \"unit\"]\n                },\n                yaxis: {\n                    autoscaleMargin: 0.02,\n                    position: \"left\" // or \"right\"\n                },\n                xaxes: [],\n                yaxes: [],\n                series: {\n                    points: {\n                        show: false,\n                        radius: 3,\n                        lineWidth: 2, // in pixels\n                        fill: true,\n                        fillColor: \"#ffffff\",\n                        symbol: \"circle\" // or callback\n                    },\n                    lines: {\n                        // we don't put in show: false so we can see\n                        // whether lines were actively disabled\n                        lineWidth: 2, // in pixels\n                        fill: false,\n                        fillColor: null,\n                        steps: false\n                        // Omit 'zero', so we can later default its value to\n                        // match that of the 'fill' option.\n                    },\n                    bars: {\n                        show: false,\n                        lineWidth: 2, // in pixels\n                        barWidth: 1, // in units of the x axis\n                        fill: true,\n                        fillColor: null,\n                        align: \"left\", // \"left\", \"right\", or \"center\"\n                        horizontal: false,\n                        zero: true\n                    },\n                    shadowSize: 3,\n                    highlightColor: null\n                },\n                grid: {\n                    show: true,\n                    aboveData: false,\n                    color: \"#545454\", // primary color used for outline and labels\n                    backgroundColor: null, // null for transparent, else color\n                    borderColor: null, // set if different from the grid color\n                    tickColor: null, // color for the ticks, e.g. \"rgba(0,0,0,0.15)\"\n                    margin: 0, // distance from the canvas edge to the grid\n                    labelMargin: 5, // in pixels\n                    eventSectionHeight: 0, // space for event section\n                    axisMargin: 8, // in pixels\n                    borderWidth: 2, // in pixels\n                    minBorderMargin: null, // in pixels, null means taken from points radius\n                    markings: null, // array of ranges or fn: axes -> array of ranges\n                    markingsColor: \"#f4f4f4\",\n                    markingsLineWidth: 2,\n                    // interactive stuff\n                    clickable: false,\n                    hoverable: false,\n                    autoHighlight: true, // highlight in case mouse is near\n                    mouseActiveRadius: 10 // how far the mouse can be away to activate an item\n                },\n                interaction: {\n                    redrawOverlayInterval: 1000/60 // time between updates, -1 means in same flow\n                },\n                hooks: {}\n            },\n        surface = null,     // the canvas for the plot itself\n        overlay = null,     // canvas for interactive stuff on top of plot\n        eventHolder = null, // jQuery object that events should be bound to\n        ctx = null, octx = null,\n        xaxes = [], yaxes = [],\n        plotOffset = { left: 0, right: 0, top: 0, bottom: 0},\n        plotWidth = 0, plotHeight = 0,\n        hooks = {\n            processOptions: [],\n            processRawData: [],\n            processDatapoints: [],\n            processOffset: [],\n            processRange: [],\n            drawBackground: [],\n            drawSeries: [],\n            draw: [],\n            bindEvents: [],\n            drawOverlay: [],\n            shutdown: []\n        },\n        plot = this;\n\n        // public functions\n        plot.setData = setData;\n        plot.setupGrid = setupGrid;\n        plot.draw = draw;\n        plot.getPlaceholder = function() { return placeholder; };\n        plot.getCanvas = function() { return surface.element; };\n        plot.getPlotOffset = function() { return plotOffset; };\n        plot.width = function () { return plotWidth; };\n        plot.height = function () { return plotHeight; };\n        plot.offset = function () {\n            var o = eventHolder.offset();\n            o.left += plotOffset.left;\n            o.top += plotOffset.top;\n            return o;\n        };\n        plot.getData = function () { return series; };\n        plot.getAxes = function () {\n            var res = {}, i;\n            $.each(xaxes.concat(yaxes), function (_, axis) {\n                if (axis)\n                    res[axis.direction + (axis.n != 1 ? axis.n : \"\") + \"axis\"] = axis;\n            });\n            return res;\n        };\n        plot.getXAxes = function () { return xaxes; };\n        plot.getYAxes = function () { return yaxes; };\n        plot.c2p = canvasToAxisCoords;\n        plot.p2c = axisToCanvasCoords;\n        plot.getOptions = function () { return options; };\n        plot.highlight = highlight;\n        plot.unhighlight = unhighlight;\n        plot.triggerRedrawOverlay = triggerRedrawOverlay;\n        plot.pointOffset = function(point) {\n            return {\n                left: parseInt(xaxes[axisNumber(point, \"x\") - 1].p2c(+point.x) + plotOffset.left, 10),\n                top: parseInt(yaxes[axisNumber(point, \"y\") - 1].p2c(+point.y) + plotOffset.top, 10)\n            };\n        };\n        plot.shutdown = shutdown;\n        plot.destroy = function () {\n            shutdown();\n            placeholder.removeData(\"plot\").empty();\n\n            series = [];\n            options = null;\n            surface = null;\n            overlay = null;\n            eventHolder = null;\n            ctx = null;\n            octx = null;\n            xaxes = [];\n            yaxes = [];\n            hooks = null;\n            highlights = [];\n            plot = null;\n        };\n        plot.resize = function () {\n        \tvar width = placeholder.width(),\n        \t\theight = placeholder.height();\n            surface.resize(width, height);\n            overlay.resize(width, height);\n        };\n\n        // public attributes\n        plot.hooks = hooks;\n\n        // initialize\n        initPlugins(plot);\n        parseOptions(options_);\n        setupCanvases();\n        setData(data_);\n        setupGrid();\n        draw();\n        bindEvents();\n\n\n        function executeHooks(hook, args) {\n            args = [plot].concat(args);\n            for (var i = 0; i < hook.length; ++i)\n                hook[i].apply(this, args);\n        }\n\n        function initPlugins() {\n\n            // References to key classes, allowing plugins to modify them\n\n            var classes = {\n                Canvas: Canvas\n            };\n\n            for (var i = 0; i < plugins.length; ++i) {\n                var p = plugins[i];\n                p.init(plot, classes);\n                if (p.options)\n                    $.extend(true, options, p.options);\n            }\n        }\n\n        function parseOptions(opts) {\n\n            $.extend(true, options, opts);\n\n            // $.extend merges arrays, rather than replacing them.  When less\n            // colors are provided than the size of the default palette, we\n            // end up with those colors plus the remaining defaults, which is\n            // not expected behavior; avoid it by replacing them here.\n\n            if (opts && opts.colors) {\n            \toptions.colors = opts.colors;\n            }\n\n            if (options.xaxis.color == null)\n                options.xaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n            if (options.yaxis.color == null)\n                options.yaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\n            if (options.xaxis.tickColor == null) // grid.tickColor for back-compatibility\n                options.xaxis.tickColor = options.grid.tickColor || options.xaxis.color;\n            if (options.yaxis.tickColor == null) // grid.tickColor for back-compatibility\n                options.yaxis.tickColor = options.grid.tickColor || options.yaxis.color;\n\n            if (options.grid.borderColor == null)\n                options.grid.borderColor = options.grid.color;\n            if (options.grid.tickColor == null)\n                options.grid.tickColor = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\n            // Fill in defaults for axis options, including any unspecified\n            // font-spec fields, if a font-spec was provided.\n\n            // If no x/y axis options were provided, create one of each anyway,\n            // since the rest of the code assumes that they exist.\n\n            var i, axisOptions, axisCount,\n                fontSize = placeholder.css(\"font-size\"),\n                fontSizeDefault = fontSize ? +fontSize.replace(\"px\", \"\") : 13,\n                fontDefaults = {\n                    style: placeholder.css(\"font-style\"),\n                    size: Math.round(0.8 * fontSizeDefault),\n                    variant: placeholder.css(\"font-variant\"),\n                    weight: placeholder.css(\"font-weight\"),\n                    family: placeholder.css(\"font-family\")\n                };\n\n            axisCount = options.xaxes.length || 1;\n            for (i = 0; i < axisCount; ++i) {\n\n                axisOptions = options.xaxes[i];\n                if (axisOptions && !axisOptions.tickColor) {\n                    axisOptions.tickColor = axisOptions.color;\n                }\n\n                axisOptions = $.extend(true, {}, options.xaxis, axisOptions);\n                options.xaxes[i] = axisOptions;\n\n                if (axisOptions.font) {\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n                    if (!axisOptions.font.color) {\n                        axisOptions.font.color = axisOptions.color;\n                    }\n                    if (!axisOptions.font.lineHeight) {\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n                    }\n                }\n            }\n\n            axisCount = options.yaxes.length || 1;\n            for (i = 0; i < axisCount; ++i) {\n\n                axisOptions = options.yaxes[i];\n                if (axisOptions && !axisOptions.tickColor) {\n                    axisOptions.tickColor = axisOptions.color;\n                }\n\n                axisOptions = $.extend(true, {}, options.yaxis, axisOptions);\n                options.yaxes[i] = axisOptions;\n\n                if (axisOptions.font) {\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n                    if (!axisOptions.font.color) {\n                        axisOptions.font.color = axisOptions.color;\n                    }\n                    if (!axisOptions.font.lineHeight) {\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n                    }\n                }\n            }\n\n            // backwards compatibility, to be removed in future\n            if (options.xaxis.noTicks && options.xaxis.ticks == null)\n                options.xaxis.ticks = options.xaxis.noTicks;\n            if (options.yaxis.noTicks && options.yaxis.ticks == null)\n                options.yaxis.ticks = options.yaxis.noTicks;\n            if (options.x2axis) {\n                options.xaxes[1] = $.extend(true, {}, options.xaxis, options.x2axis);\n                options.xaxes[1].position = \"top\";\n                // Override the inherit to allow the axis to auto-scale\n                if (options.x2axis.min == null) {\n                    options.xaxes[1].min = null;\n                }\n                if (options.x2axis.max == null) {\n                    options.xaxes[1].max = null;\n                }\n            }\n            if (options.y2axis) {\n                options.yaxes[1] = $.extend(true, {}, options.yaxis, options.y2axis);\n                options.yaxes[1].position = \"right\";\n                // Override the inherit to allow the axis to auto-scale\n                if (options.y2axis.min == null) {\n                    options.yaxes[1].min = null;\n                }\n                if (options.y2axis.max == null) {\n                    options.yaxes[1].max = null;\n                }\n            }\n            if (options.grid.coloredAreas)\n                options.grid.markings = options.grid.coloredAreas;\n            if (options.grid.coloredAreasColor)\n                options.grid.markingsColor = options.grid.coloredAreasColor;\n            if (options.lines)\n                $.extend(true, options.series.lines, options.lines);\n            if (options.points)\n                $.extend(true, options.series.points, options.points);\n            if (options.bars)\n                $.extend(true, options.series.bars, options.bars);\n            if (options.shadowSize != null)\n                options.series.shadowSize = options.shadowSize;\n            if (options.highlightColor != null)\n                options.series.highlightColor = options.highlightColor;\n\n            // save options on axes for future reference\n            for (i = 0; i < options.xaxes.length; ++i)\n                getOrCreateAxis(xaxes, i + 1).options = options.xaxes[i];\n            for (i = 0; i < options.yaxes.length; ++i)\n                getOrCreateAxis(yaxes, i + 1).options = options.yaxes[i];\n\n            // add hooks from options\n            for (var n in hooks)\n                if (options.hooks[n] && options.hooks[n].length)\n                    hooks[n] = hooks[n].concat(options.hooks[n]);\n\n            executeHooks(hooks.processOptions, [options]);\n        }\n\n        function setData(d) {\n            series = parseData(d);\n            fillInSeriesOptions();\n            processData();\n        }\n\n        function parseData(d) {\n            var res = [];\n            for (var i = 0; i < d.length; ++i) {\n                var s = $.extend(true, {}, options.series);\n\n                if (d[i].data != null) {\n                    s.data = d[i].data; // move the data instead of deep-copy\n                    delete d[i].data;\n\n                    $.extend(true, s, d[i]);\n\n                    d[i].data = s.data;\n                }\n                else\n                    s.data = d[i];\n                res.push(s);\n            }\n\n            return res;\n        }\n\n        function axisNumber(obj, coord) {\n            var a = obj[coord + \"axis\"];\n            if (typeof a == \"object\") // if we got a real axis, extract number\n                a = a.n;\n            if (typeof a != \"number\")\n                a = 1; // default to first axis\n            return a;\n        }\n\n        function allAxes() {\n            // return flat array without annoying null entries\n            return $.grep(xaxes.concat(yaxes), function (a) { return a; });\n        }\n\n        function canvasToAxisCoords(pos) {\n            // return an object with x/y corresponding to all used axes\n            var res = {}, i, axis;\n            for (i = 0; i < xaxes.length; ++i) {\n                axis = xaxes[i];\n                if (axis)\n                    res[\"x\" + axis.n] = axis.c2p(pos.left);\n            }\n\n            for (i = 0; i < yaxes.length; ++i) {\n                axis = yaxes[i];\n                if (axis)\n                    res[\"y\" + axis.n] = axis.c2p(pos.top);\n            }\n\n            if (res.x1 !== undefined)\n                res.x = res.x1;\n            if (res.y1 !== undefined)\n                res.y = res.y1;\n\n            return res;\n        }\n\n        function axisToCanvasCoords(pos) {\n            // get canvas coords from the first pair of x/y found in pos\n            var res = {}, i, axis, key;\n\n            for (i = 0; i < xaxes.length; ++i) {\n                axis = xaxes[i];\n                if (axis && axis.used) {\n                    key = \"x\" + axis.n;\n                    if (pos[key] == null && axis.n == 1)\n                        key = \"x\";\n\n                    if (pos[key] != null) {\n                        res.left = axis.p2c(pos[key]);\n                        break;\n                    }\n                }\n            }\n\n            for (i = 0; i < yaxes.length; ++i) {\n                axis = yaxes[i];\n                if (axis && axis.used) {\n                    key = \"y\" + axis.n;\n                    if (pos[key] == null && axis.n == 1)\n                        key = \"y\";\n\n                    if (pos[key] != null) {\n                        res.top = axis.p2c(pos[key]);\n                        break;\n                    }\n                }\n            }\n\n            return res;\n        }\n\n        function getOrCreateAxis(axes, number) {\n            if (!axes[number - 1])\n                axes[number - 1] = {\n                    n: number, // save the number for future reference\n                    direction: axes == xaxes ? \"x\" : \"y\",\n                    options: $.extend(true, {}, axes == xaxes ? options.xaxis : options.yaxis)\n                };\n\n            return axes[number - 1];\n        }\n\n        function fillInSeriesOptions() {\n\n            var neededColors = series.length, maxIndex = -1, i;\n\n            // Subtract the number of series that already have fixed colors or\n            // color indexes from the number that we still need to generate.\n\n            for (i = 0; i < series.length; ++i) {\n                var sc = series[i].color;\n                if (sc != null) {\n                    neededColors--;\n                    if (typeof sc == \"number\" && sc > maxIndex) {\n                        maxIndex = sc;\n                    }\n                }\n            }\n\n            // If any of the series have fixed color indexes, then we need to\n            // generate at least as many colors as the highest index.\n\n            if (neededColors <= maxIndex) {\n                neededColors = maxIndex + 1;\n            }\n\n            // Generate all the colors, using first the option colors and then\n            // variations on those colors once they're exhausted.\n\n            var c, colors = [], colorPool = options.colors,\n                colorPoolSize = colorPool.length, variation = 0;\n\n            for (i = 0; i < neededColors; i++) {\n\n                c = $.color.parse(colorPool[i % colorPoolSize] || \"#666\");\n\n                // Each time we exhaust the colors in the pool we adjust\n                // a scaling factor used to produce more variations on\n                // those colors. The factor alternates negative/positive\n                // to produce lighter/darker colors.\n\n                // Reset the variation after every few cycles, or else\n                // it will end up producing only white or black colors.\n\n                if (i % colorPoolSize == 0 && i) {\n                    if (variation >= 0) {\n                        if (variation < 0.5) {\n                            variation = -variation - 0.2;\n                        } else variation = 0;\n                    } else variation = -variation;\n                }\n\n                colors[i] = c.scale('rgb', 1 + variation);\n            }\n\n            // Finalize the series options, filling in their colors\n\n            var colori = 0, s;\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                // assign colors\n                if (s.color == null) {\n                    s.color = colors[colori].toString();\n                    ++colori;\n                }\n                else if (typeof s.color == \"number\")\n                    s.color = colors[s.color].toString();\n\n                // turn on lines automatically in case nothing is set\n                if (s.lines.show == null) {\n                    var v, show = true;\n                    for (v in s)\n                        if (s[v] && s[v].show) {\n                            show = false;\n                            break;\n                        }\n                    if (show)\n                        s.lines.show = true;\n                }\n\n                // If nothing was provided for lines.zero, default it to match\n                // lines.fill, since areas by default should extend to zero.\n\n                if (s.lines.zero == null) {\n                    s.lines.zero = !!s.lines.fill;\n                }\n\n                // setup axes\n                s.xaxis = getOrCreateAxis(xaxes, axisNumber(s, \"x\"));\n                s.yaxis = getOrCreateAxis(yaxes, axisNumber(s, \"y\"));\n            }\n        }\n\n        function processData() {\n            var topSentry = Number.POSITIVE_INFINITY,\n                bottomSentry = Number.NEGATIVE_INFINITY,\n                fakeInfinity = Number.MAX_VALUE,\n                i, j, k, m, length,\n                s, points, ps, x, y, axis, val, f, p,\n                data, format;\n\n            function updateAxis(axis, min, max) {\n                if (min < axis.datamin && min != -fakeInfinity)\n                    axis.datamin = min;\n                if (max > axis.datamax && max != fakeInfinity)\n                    axis.datamax = max;\n            }\n\n            $.each(allAxes(), function (_, axis) {\n                // init axis\n                axis.datamin = topSentry;\n                axis.datamax = bottomSentry;\n                axis.used = false;\n            });\n\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                s.datapoints = { points: [] };\n\n                executeHooks(hooks.processRawData, [ s, s.data, s.datapoints ]);\n            }\n\n            // first pass: clean and copy data\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                data = s.data;\n                format = s.datapoints.format;\n\n                if (!format) {\n                    format = [];\n                    // find out how to copy\n                    format.push({ x: true, number: true, required: true });\n                    format.push({ y: true, number: true, required: true });\n\n                    if (s.stack || s.bars.show || (s.lines.show && s.lines.fill)) {\n                        var autoscale = !!((s.bars.show && s.bars.zero) || (s.lines.show && s.lines.zero));\n                        format.push({ y: true, number: true, required: false, defaultValue: 0, autoscale: autoscale });\n                        if (s.bars.horizontal) {\n                            delete format[format.length - 1].y;\n                            format[format.length - 1].x = true;\n                        }\n                    }\n\n                    s.datapoints.format = format;\n                }\n\n                if (s.datapoints.pointsize != null)\n                    continue; // already filled in\n\n                s.datapoints.pointsize = format.length;\n\n                ps = s.datapoints.pointsize;\n                points = s.datapoints.points;\n\n                var insertSteps = s.lines.show && s.lines.steps;\n                s.xaxis.used = s.yaxis.used = true;\n\n                for (j = k = 0; j < data.length; ++j, k += ps) {\n                    p = data[j];\n\n                    var nullify = p == null;\n                    if (!nullify) {\n                        for (m = 0; m < ps; ++m) {\n                            val = p[m];\n                            f = format[m];\n\n                            if (f) {\n                                if (f.number && val != null) {\n                                    val = +val; // convert to number\n                                    if (isNaN(val))\n                                        val = null;\n                                    else if (val == Infinity)\n                                        val = fakeInfinity;\n                                    else if (val == -Infinity)\n                                        val = -fakeInfinity;\n                                }\n\n                                if (val == null) {\n                                    if (f.required)\n                                        nullify = true;\n\n                                    if (f.defaultValue != null)\n                                        val = f.defaultValue;\n                                }\n                            }\n\n                            points[k + m] = val;\n                        }\n                    }\n\n                    if (nullify) {\n                        for (m = 0; m < ps; ++m) {\n                            val = points[k + m];\n                            if (val != null) {\n                                f = format[m];\n                                // extract min/max info\n                                if (f.autoscale !== false) {\n                                    if (f.x) {\n                                        updateAxis(s.xaxis, val, val);\n                                    }\n                                    if (f.y) {\n                                        updateAxis(s.yaxis, val, val);\n                                    }\n                                }\n                            }\n                            points[k + m] = null;\n                        }\n                    }\n\n                    if (insertSteps && k > 0 && (!nullify || points[k - ps] != null)) {\n                        // copy the point to make room for a middle point\n                        for (m = 0; m < ps; ++m)\n                            points[k + ps + m] = points[k + m];\n\n                        // middle point has same y\n                        points[k + 1] = points[k - ps + 1] || 0;\n\n                        // if series has null values, let's give the last !null value a nice step\n                        if(nullify)\n                        \tpoints[k] = p[0];\n\n                        // we've added a point, better reflect that\n                        k += ps;\n                    }\n                }\n            }\n\n            // give the hooks a chance to run\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                points = s.datapoints.points;\n                ps = s.datapoints.pointsize;\n\n                // grafana\n                if (s.transform === 'negative-Y') {\n                  for (j = 0; j < points.length; j += ps) {\n                    if (points[j] == null)\n                        continue;\n\n                      val = points[j + 1];\n                      points[j + 1] = -val;\n                  }\n                }\n\n                executeHooks(hooks.processDatapoints, [ s, s.datapoints]);\n            }\n\n            // second pass: find datamax/datamin for auto-scaling\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                points = s.datapoints.points;\n                ps = s.datapoints.pointsize;\n                format = s.datapoints.format;\n\n                var xmin = topSentry, ymin = topSentry,\n                    xmax = bottomSentry, ymax = bottomSentry;\n\n                for (j = 0; j < points.length; j += ps) {\n                    if (points[j] == null)\n                        continue;\n\n                    for (m = 0; m < ps; ++m) {\n                        val = points[j + m];\n                        f = format[m];\n                        if (!f || f.autoscale === false || val == fakeInfinity || val == -fakeInfinity)\n                            continue;\n\n                        if (f.x) {\n                            if (val < xmin)\n                                xmin = val;\n                            if (val > xmax)\n                                xmax = val;\n                        }\n                        if (f.y) {\n                            if (val < ymin)\n                                ymin = val;\n                            if (val > ymax)\n                                ymax = val;\n                        }\n                    }\n                }\n\n                if (s.bars.show) {\n                    // make sure we got room for the bar on the dancing floor\n                    var delta;\n\n                    switch (s.bars.align) {\n                        case \"left\":\n                            delta = 0;\n                            break;\n                        case \"right\":\n                            delta = -s.bars.barWidth;\n                            break;\n                        default:\n                            delta = -s.bars.barWidth / 2;\n                    }\n\n                    if (s.bars.horizontal) {\n                        ymin += delta;\n                        ymax += delta + s.bars.barWidth;\n                    }\n                    else {\n                        xmin += delta;\n                        xmax += delta + s.bars.barWidth;\n                    }\n                }\n\n                updateAxis(s.xaxis, xmin, xmax);\n                updateAxis(s.yaxis, ymin, ymax);\n            }\n\n            $.each(allAxes(), function (_, axis) {\n                if (axis.datamin == topSentry)\n                    axis.datamin = null;\n                if (axis.datamax == bottomSentry)\n                    axis.datamax = null;\n            });\n        }\n\n        function setupCanvases() {\n            // Make sure the placeholder is clear of everything except canvases\n            // from a previous plot in this container that we'll try to re-use.\n\n            placeholder.find(\".flot-temp-elem\").remove();\n\n            if (placeholder.css(\"position\") == 'static')\n                placeholder.css(\"position\", \"relative\"); // for positioning labels and overlay\n\n            surface = new Canvas(\"flot-base\", placeholder);\n            overlay = new Canvas(\"flot-overlay\", placeholder); // overlay canvas for interactive features\n\n            ctx = surface.context;\n            octx = overlay.context;\n\n            // define which element we're listening for events on\n            eventHolder = $(overlay.element).unbind();\n\n            // If we're re-using a plot object, shut down the old one\n\n            var existing = placeholder.data(\"plot\");\n\n            if (existing) {\n                existing.shutdown();\n                overlay.clear();\n            }\n\n            // save in case we get replotted\n            placeholder.data(\"plot\", plot);\n        }\n\n        function bindEvents() {\n            // bind events\n            if (options.grid.hoverable) {\n                eventHolder.mousemove(onMouseMove);\n\n                // Use bind, rather than .mouseleave, because we officially\n                // still support jQuery 1.2.6, which doesn't define a shortcut\n                // for mouseenter or mouseleave.  This was a bug/oversight that\n                // was fixed somewhere around 1.3.x.  We can return to using\n                // .mouseleave when we drop support for 1.2.6.\n\n                eventHolder.bind(\"mouseleave\", onMouseLeave);\n            }\n\n            if (options.grid.clickable)\n                eventHolder.click(onClick);\n\n            executeHooks(hooks.bindEvents, [eventHolder]);\n        }\n\n        function shutdown() {\n            if (redrawTimeout)\n                clearTimeout(redrawTimeout);\n\n            eventHolder.unbind(\"mousemove\", onMouseMove);\n            eventHolder.unbind(\"mouseleave\", onMouseLeave);\n            eventHolder.unbind(\"click\", onClick);\n\n            executeHooks(hooks.shutdown, [eventHolder]);\n        }\n\n        function setTransformationHelpers(axis) {\n            // set helper functions on the axis, assumes plot area\n            // has been computed already\n\n            function identity(x) { return x; }\n\n            var s, m, t = axis.options.transform || identity,\n                it = axis.options.inverseTransform;\n\n            // precompute how much the axis is scaling a point\n            // in canvas space\n            if (axis.direction == \"x\") {\n                s = axis.scale = plotWidth / Math.abs(t(axis.max) - t(axis.min));\n                m = Math.min(t(axis.max), t(axis.min));\n            }\n            else {\n                s = axis.scale = plotHeight / Math.abs(t(axis.max) - t(axis.min));\n                s = -s;\n                m = Math.max(t(axis.max), t(axis.min));\n            }\n\n            // data point to canvas coordinate\n            if (t == identity) // slight optimization\n                axis.p2c = function (p) { return (p - m) * s; };\n            else\n                axis.p2c = function (p) { return (t(p) - m) * s; };\n            // canvas coordinate to data point\n            if (!it)\n                axis.c2p = function (c) { return m + c / s; };\n            else\n                axis.c2p = function (c) { return it(m + c / s); };\n        }\n\n        function measureTickLabels(axis) {\n\n            var opts = axis.options,\n                ticks = axis.ticks || [],\n                labelWidth = opts.labelWidth || 0,\n                labelHeight = opts.labelHeight || 0,\n                maxWidth = labelWidth || (axis.direction == \"x\" ? Math.floor(surface.width / (ticks.length || 1)) : null),\n                legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n                layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n                font = opts.font || \"flot-tick-label tickLabel\";\n\n            for (var i = 0; i < ticks.length; ++i) {\n\n                var t = ticks[i];\n\n                if (!t.label)\n                    continue;\n\n                var info = surface.getTextInfo(layer, t.label, font, null, maxWidth);\n\n                /// Grafana fix, add +1 to label width\n                labelWidth = Math.max(labelWidth, info.width + 1);\n                labelHeight = Math.max(labelHeight, info.height);\n            }\n\n            axis.labelWidth = opts.labelWidth || labelWidth;\n            axis.labelHeight = opts.labelHeight || labelHeight;\n        }\n\n        function allocateAxisBoxFirstPhase(axis) {\n            // find the bounding box of the axis by looking at label\n            // widths/heights and ticks, make room by diminishing the\n            // plotOffset; this first phase only looks at one\n            // dimension per axis, the other dimension depends on the\n            // other axes so will have to wait\n\n            var lw = axis.labelWidth,\n                lh = axis.labelHeight,\n                pos = axis.options.position,\n                isXAxis = axis.direction === \"x\",\n                tickLength = axis.options.tickLength,\n                axisMargin = options.grid.axisMargin,\n                padding = options.grid.labelMargin,\n                eventSectionPadding = options.grid.eventSectionHeight,\n                innermost = true,\n                outermost = true,\n                first = true,\n                found = false;\n\n            // Determine the axis's position in its direction and on its side\n\n            $.each(isXAxis ? xaxes : yaxes, function(i, a) {\n                if (a && (a.show || a.reserveSpace)) {\n                    if (a === axis) {\n                        found = true;\n                    } else if (a.options.position === pos) {\n                        if (found) {\n                            outermost = false;\n                        } else {\n                            innermost = false;\n                        }\n                    }\n                    if (!found) {\n                        first = false;\n                    }\n                }\n            });\n\n            // The outermost axis on each side has no margin\n\n            if (outermost) {\n                axisMargin = 0;\n            }\n\n            // The ticks for the first axis in each direction stretch across\n\n            if (tickLength == null) {\n                tickLength = first ? \"full\" : 5;\n            }\n\n            if (!isNaN(+tickLength))\n                padding += +tickLength;\n\n            if (isXAxis) {\n                // Add space for event section\n                lh += padding;\n                lh += eventSectionPadding;\n\n                if (pos == \"bottom\") {\n                    plotOffset.bottom += lh + axisMargin;\n                    axis.box = { top: surface.height - plotOffset.bottom, height: lh };\n                }\n                else {\n                    axis.box = { top: plotOffset.top + axisMargin, height: lh };\n                    plotOffset.top += lh + axisMargin;\n                }\n            }\n            else {\n                lw += padding;\n\n                if (pos == \"left\") {\n                    axis.box = { left: plotOffset.left + axisMargin, width: lw };\n                    plotOffset.left += lw + axisMargin;\n                }\n                else {\n                    plotOffset.right += lw + axisMargin;\n                    axis.box = { left: surface.width - plotOffset.right, width: lw };\n                }\n            }\n\n             // save for future reference\n            axis.position = pos;\n            axis.tickLength = tickLength;\n            axis.box.padding = padding;\n            axis.box.eventSectionPadding = eventSectionPadding;\n            axis.innermost = innermost;\n        }\n\n        function allocateAxisBoxSecondPhase(axis) {\n            // now that all axis boxes have been placed in one\n            // dimension, we can set the remaining dimension coordinates\n            if (axis.direction == \"x\") {\n                axis.box.left = plotOffset.left - axis.labelWidth / 2;\n                axis.box.width = surface.width - plotOffset.left - plotOffset.right + axis.labelWidth;\n            }\n            else {\n                axis.box.top = plotOffset.top - axis.labelHeight / 2;\n                axis.box.height = surface.height - plotOffset.bottom - plotOffset.top + axis.labelHeight;\n            }\n        }\n\n        function adjustLayoutForThingsStickingOut() {\n            // possibly adjust plot offset to ensure everything stays\n            // inside the canvas and isn't clipped off\n\n            var minMargin = options.grid.minBorderMargin,\n                axis, i;\n\n            // check stuff from the plot (FIXME: this should just read\n            // a value from the series, otherwise it's impossible to\n            // customize)\n            if (minMargin == null) {\n                minMargin = 0;\n                for (i = 0; i < series.length; ++i)\n                    minMargin = Math.max(minMargin, 2 * (series[i].points.radius + series[i].points.lineWidth/2));\n            }\n\n            var margins = {\n                left: minMargin,\n                right: minMargin,\n                top: minMargin,\n                bottom: minMargin\n            };\n\n            // check axis labels, note we don't check the actual\n            // labels but instead use the overall width/height to not\n            // jump as much around with replots\n            $.each(allAxes(), function (_, axis) {\n                if (axis.reserveSpace && axis.ticks && axis.ticks.length) {\n                    if (axis.direction === \"x\") {\n                        margins.left = Math.max(margins.left, axis.labelWidth / 2);\n                        margins.right = Math.max(margins.right, axis.labelWidth / 2);\n                    } else {\n                        margins.bottom = Math.max(margins.bottom, axis.labelHeight / 2);\n                        margins.top = Math.max(margins.top, axis.labelHeight / 2);\n                    }\n                }\n            });\n\n            plotOffset.left = Math.ceil(Math.max(margins.left, plotOffset.left));\n            plotOffset.right = Math.ceil(Math.max(margins.right, plotOffset.right));\n            plotOffset.top = Math.ceil(Math.max(margins.top, plotOffset.top));\n            plotOffset.bottom = Math.ceil(Math.max(margins.bottom, plotOffset.bottom));\n        }\n\n        function setupGrid() {\n            var i, axes = allAxes(), showGrid = options.grid.show;\n\n            // Initialize the plot's offset from the edge of the canvas\n\n            for (var a in plotOffset) {\n                var margin = options.grid.margin || 0;\n                plotOffset[a] = typeof margin == \"number\" ? margin : margin[a] || 0;\n            }\n\n            executeHooks(hooks.processOffset, [plotOffset]);\n\n            // If the grid is visible, add its border width to the offset\n\n            for (var a in plotOffset) {\n                if(typeof(options.grid.borderWidth) == \"object\") {\n                    plotOffset[a] += showGrid ? options.grid.borderWidth[a] : 0;\n                }\n                else {\n                    plotOffset[a] += showGrid ? options.grid.borderWidth : 0;\n                }\n            }\n\n            $.each(axes, function (_, axis) {\n                var axisOpts = axis.options;\n                axis.show = axisOpts.show == null ? axis.used : axisOpts.show;\n                axis.reserveSpace = axisOpts.reserveSpace == null ? axis.show : axisOpts.reserveSpace;\n                setRange(axis);\n            });\n\n            executeHooks(hooks.processRange, []);\n\n            if (showGrid) {\n\n                var allocatedAxes = $.grep(axes, function (axis) {\n                    return axis.show || axis.reserveSpace;\n                });\n\n                var snaped = false;\n                for (var i = 0; i < 2; i++) {\n                    $.each(allocatedAxes, function (_, axis) {\n                        // make the ticks\n                        setupTickGeneration(axis);\n                        setTicks(axis);\n                        snaped = snapRangeToTicks(axis, axis.ticks) || snaped;\n                        // find labelWidth/Height for axis\n                        measureTickLabels(axis);\n                    });\n\n                    if (snaped && hooks.processRange.length > 0) {\n                        executeHooks(hooks.processRange, []);\n                        snaped = false;\n                    } else {\n                        break;\n                    }\n                }\n\n                // with all dimensions calculated, we can compute the\n                // axis bounding boxes, start from the outside\n                // (reverse order)\n                for (i = allocatedAxes.length - 1; i >= 0; --i)\n                    allocateAxisBoxFirstPhase(allocatedAxes[i]);\n\n                // make sure we've got enough space for things that\n                // might stick out\n                adjustLayoutForThingsStickingOut();\n\n                $.each(allocatedAxes, function (_, axis) {\n                    allocateAxisBoxSecondPhase(axis);\n                });\n            }\n\n\n            plotWidth = surface.width - plotOffset.left - plotOffset.right;\n            plotHeight = surface.height - plotOffset.bottom - plotOffset.top;\n\n            // now we got the proper plot dimensions, we can compute the scaling\n            $.each(axes, function (_, axis) {\n                setTransformationHelpers(axis);\n            });\n\n            if (showGrid) {\n                drawAxisLabels();\n            }\n\n            insertLegend();\n        }\n\n        function setRange(axis) {\n            var opts = axis.options,\n                min = +(opts.min != null ? opts.min : axis.datamin),\n                max = +(opts.max != null ? opts.max : axis.datamax),\n                delta = max - min;\n\n            if (delta == 0.0) {\n                // Grafana fix: wide Y min and max using increased wideFactor\n                // when all series values are the same\n                var wideFactor = 0.25;\n                var widen = Math.abs(max == 0 ? 1 : max * wideFactor);\n\n                if (opts.min == null) {\n                  min -= widen;\n                }\n                // always widen max if we couldn't widen min to ensure we\n                // don't fall into min == max which doesn't work\n                if (opts.max == null || opts.min != null) {\n                  max += widen;\n                }\n            }\n            else {\n                // consider autoscaling\n                var margin = opts.autoscaleMargin;\n                if (margin != null) {\n                    if (opts.min == null) {\n                        min -= delta * margin;\n                        // make sure we don't go below zero if all values\n                        // are positive\n                        if (min < 0 && axis.datamin != null && axis.datamin >= 0)\n                            min = 0;\n                    }\n                    if (opts.max == null) {\n                        max += delta * margin;\n                        if (max > 0 && axis.datamax != null && axis.datamax <= 0)\n                            max = 0;\n                    }\n                }\n            }\n            axis.min = min;\n            axis.max = max;\n        }\n\n        // grafana change\n        function getSignificantDigitCount(n) {\n          //remove decimal and make positive\n          n = Math.abs(String(n).replace(\".\", \"\"));\n          if (n == 0) {\n            return 0;\n          }\n\n          // kill the 0s at the end of n\n          while (n != 0 && n % 10 == 0) {\n            n /= 10;\n          }\n\n          // get number of digits\n          return Math.floor(Math.log(n) / Math.LN10) + 1;\n        }\n\n        function setupTickGeneration(axis) {\n            var opts = axis.options;\n\n            // estimate number of ticks\n            var noTicks;\n            if (typeof opts.ticks == \"number\" && opts.ticks > 0)\n                noTicks = opts.ticks;\n            else\n                // heuristic based on the model a*sqrt(x) fitted to\n                // some data points that seemed reasonable\n                noTicks = 0.3 * Math.sqrt(axis.direction == \"x\" ? surface.width : surface.height);\n\n            var delta = (axis.max - axis.min) / noTicks,\n                dec = -Math.floor(Math.log(delta) / Math.LN10),\n                maxDec = opts.tickDecimals;\n\n            if (maxDec != null && dec > maxDec) {\n                dec = maxDec;\n            }\n\n            var magn = Math.pow(10, -dec),\n                norm = delta / magn, // norm is between 1.0 and 10.0\n                size;\n\n            if (norm < 1.5) {\n                size = 1;\n            } else if (norm < 3) {\n                size = 2;\n                // special case for 2.5, requires an extra decimal\n                if (norm > 2.25 && (maxDec == null || dec + 1 <= maxDec)) {\n                    size = 2.5;\n                    ++dec;\n                }\n            } else if (norm < 7.5) {\n                size = 5;\n            } else {\n                size = 10;\n            }\n\n            size *= magn;\n\n            if (opts.minTickSize != null && size < opts.minTickSize) {\n                size = opts.minTickSize;\n            }\n\n            axis.delta = delta;\n            axis.tickDecimals = Math.max(0, maxDec != null ? maxDec : dec);\n            axis.tickSize = opts.tickSize || size;\n\n            // grafana addition\n            if (opts.tickDecimals === null || opts.tickDecimals === undefined) {\n              axis.scaledDecimals = axis.tickDecimals + dec;\n            }\n\n            // Time mode was moved to a plug-in in 0.8, and since so many people use it\n            // we'll add an especially friendly reminder to make sure they included it.\n\n            if (opts.mode == \"time\" && !axis.tickGenerator) {\n                throw new Error(\"Time mode requires the flot.time plugin.\");\n            }\n\n            // Flot supports base-10 axes; any other mode else is handled by a plug-in,\n            // like flot.time.js.\n\n            if (!axis.tickGenerator) {\n\n                axis.tickGenerator = function (axis) {\n\n                    var ticks = [],\n                        start = floorInBase(axis.min, axis.tickSize),\n                        i = 0,\n                        v = Number.NaN,\n                        prev;\n\n                    do {\n                        prev = v;\n                        v = start + i * axis.tickSize;\n                        ticks.push(v);\n                        ++i;\n                    } while (v < axis.max && v != prev);\n                    return ticks;\n                };\n\n\t\t\t\taxis.tickFormatter = function (value, axis) {\n\n\t\t\t\t\tvar factor = axis.tickDecimals ? Math.pow(10, axis.tickDecimals) : 1;\n\t\t\t\t\tvar formatted = \"\" + Math.round(value * factor) / factor;\n\n\t\t\t\t\t// If tickDecimals was specified, ensure that we have exactly that\n\t\t\t\t\t// much precision; otherwise default to the value's own precision.\n\n\t\t\t\t\tif (axis.tickDecimals != null) {\n\t\t\t\t\t\tvar decimal = formatted.indexOf(\".\");\n\t\t\t\t\t\tvar precision = decimal == -1 ? 0 : formatted.length - decimal - 1;\n\t\t\t\t\t\tif (precision < axis.tickDecimals) {\n\t\t\t\t\t\t\treturn (precision ? formatted : formatted + \".\") + (\"\" + factor).substr(1, axis.tickDecimals - precision);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n                    return formatted;\n                };\n            }\n\n            if ($.isFunction(opts.tickFormatter))\n                axis.tickFormatter = function (v, axis) { return \"\" + opts.tickFormatter(v, axis); };\n\n            if (opts.alignTicksWithAxis != null) {\n                var otherAxis = (axis.direction == \"x\" ? xaxes : yaxes)[opts.alignTicksWithAxis - 1];\n                if (otherAxis && otherAxis.used && otherAxis != axis) {\n                    // consider snapping min/max to outermost nice ticks\n                    var niceTicks = axis.tickGenerator(axis);\n                    if (niceTicks.length > 0) {\n                        if (opts.min == null)\n                            axis.min = Math.min(axis.min, niceTicks[0]);\n                        if (opts.max == null && niceTicks.length > 1)\n                            axis.max = Math.max(axis.max, niceTicks[niceTicks.length - 1]);\n                    }\n\n                    axis.tickGenerator = function (axis) {\n                        // copy ticks, scaled to this axis\n                        var ticks = [], v, i;\n                        for (i = 0; i < otherAxis.ticks.length; ++i) {\n                            v = (otherAxis.ticks[i].v - otherAxis.min) / (otherAxis.max - otherAxis.min);\n                            v = axis.min + v * (axis.max - axis.min);\n                            ticks.push(v);\n                        }\n                        return ticks;\n                    };\n\n                    // we might need an extra decimal since forced\n                    // ticks don't necessarily fit naturally\n                    if (!axis.mode && opts.tickDecimals == null) {\n                        var extraDec = Math.max(0, -Math.floor(Math.log(axis.delta) / Math.LN10) + 1),\n                            ts = axis.tickGenerator(axis);\n\n                        // only proceed if the tick interval rounded\n                        // with an extra decimal doesn't give us a\n                        // zero at end\n                        if (!(ts.length > 1 && /\\..*0$/.test((ts[1] - ts[0]).toFixed(extraDec))))\n                            axis.tickDecimals = extraDec;\n                    }\n                }\n            }\n        }\n\n        function setTicks(axis) {\n            var oticks = axis.options.ticks, ticks = [];\n            if (oticks == null || (typeof oticks == \"number\" && oticks > 0))\n                ticks = axis.tickGenerator(axis);\n            else if (oticks) {\n                if ($.isFunction(oticks))\n                    // generate the ticks\n                    ticks = oticks(axis);\n                else\n                    ticks = oticks;\n            }\n\n            // clean up/labelify the supplied ticks, copy them over\n            var i, v;\n            axis.ticks = [];\n            for (i = 0; i < ticks.length; ++i) {\n                var label = null;\n                var t = ticks[i];\n                if (typeof t == \"object\") {\n                    v = +t[0];\n                    if (t.length > 1)\n                        label = t[1];\n                }\n                else\n                    v = +t;\n                if (label == null)\n                    label = axis.tickFormatter(v, axis);\n                if (!isNaN(v))\n                    axis.ticks.push({ v: v, label: label });\n            }\n        }\n\n        function snapRangeToTicks(axis, ticks) {\n            var changed = false;\n            if (axis.options.autoscaleMargin && ticks.length > 0) {\n                // snap to ticks\n                if (axis.options.min == null) {\n                    axis.min = Math.min(axis.min, ticks[0].v);\n                    changed = true;\n                }\n                if (axis.options.max == null && ticks.length > 1) {\n                    axis.max = Math.max(axis.max, ticks[ticks.length - 1].v);\n                    changed = true;\n                }\n            }\n            return changed;\n        }\n\n        function draw() {\n\n            surface.clear();\n\n            executeHooks(hooks.drawBackground, [ctx]);\n\n            var grid = options.grid;\n\n            // draw background, if any\n            if (grid.show && grid.backgroundColor)\n                drawBackground();\n\n            if (grid.show && !grid.aboveData) {\n                drawGrid();\n            }\n\n            for (var i = 0; i < series.length; ++i) {\n                executeHooks(hooks.drawSeries, [ctx, series[i]]);\n                drawSeries(series[i]);\n            }\n\n            executeHooks(hooks.draw, [ctx]);\n\n            if (grid.show && grid.aboveData) {\n                drawGrid();\n            }\n\n            surface.render();\n\n            // A draw implies that either the axes or data have changed, so we\n            // should probably update the overlay highlights as well.\n\n            triggerRedrawOverlay();\n        }\n\n        function extractRange(ranges, coord) {\n            var axis, from, to, key, axes = allAxes();\n\n            for (var i = 0; i < axes.length; ++i) {\n                axis = axes[i];\n                if (axis.direction == coord) {\n                    key = coord + axis.n + \"axis\";\n                    if (!ranges[key] && axis.n == 1)\n                        key = coord + \"axis\"; // support x1axis as xaxis\n                    if (ranges[key]) {\n                        from = ranges[key].from;\n                        to = ranges[key].to;\n                        break;\n                    }\n                }\n            }\n\n            // backwards-compat stuff - to be removed in future\n            if (!ranges[key]) {\n                axis = coord == \"x\" ? xaxes[0] : yaxes[0];\n                from = ranges[coord + \"1\"];\n                to = ranges[coord + \"2\"];\n            }\n\n            // auto-reverse as an added bonus\n            if (from != null && to != null && from > to) {\n                var tmp = from;\n                from = to;\n                to = tmp;\n            }\n\n            return { from: from, to: to, axis: axis };\n        }\n\n        function drawBackground() {\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            ctx.fillStyle = getColorOrGradient(options.grid.backgroundColor, plotHeight, 0, \"rgba(255, 255, 255, 0)\");\n            ctx.fillRect(0, 0, plotWidth, plotHeight);\n            ctx.restore();\n        }\n\n        function drawGrid() {\n            var i, axes, bw, bc;\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            // draw markings\n            var markings = options.grid.markings;\n            if (markings) {\n                if ($.isFunction(markings)) {\n                    axes = plot.getAxes();\n                    // xmin etc. is backwards compatibility, to be\n                    // removed in the future\n                    axes.xmin = axes.xaxis.min;\n                    axes.xmax = axes.xaxis.max;\n                    axes.ymin = axes.yaxis.min;\n                    axes.ymax = axes.yaxis.max;\n\n                    markings = markings(axes);\n                }\n\n                for (i = 0; i < markings.length; ++i) {\n                    var m = markings[i],\n                        xrange = extractRange(m, \"x\"),\n                        yrange = extractRange(m, \"y\");\n\n                    // fill in missing\n                    if (xrange.from == null)\n                        xrange.from = xrange.axis.min;\n                    if (xrange.to == null)\n                        xrange.to = xrange.axis.max;\n                    if (yrange.from == null)\n                        yrange.from = yrange.axis.min;\n                    if (yrange.to == null)\n                        yrange.to = yrange.axis.max;\n\n                    // clip\n                    if (xrange.to < xrange.axis.min || xrange.from > xrange.axis.max ||\n                        yrange.to < yrange.axis.min || yrange.from > yrange.axis.max)\n                        continue;\n\n                    xrange.from = Math.max(xrange.from, xrange.axis.min);\n                    xrange.to = Math.min(xrange.to, xrange.axis.max);\n                    yrange.from = Math.max(yrange.from, yrange.axis.min);\n                    yrange.to = Math.min(yrange.to, yrange.axis.max);\n\n                    var xequal = xrange.from === xrange.to,\n                        yequal = yrange.from === yrange.to;\n\n                    if (xequal && yequal) {\n                        continue;\n                    }\n\n                    // then draw\n                    xrange.from = Math.floor(xrange.axis.p2c(xrange.from));\n                    xrange.to = Math.floor(xrange.axis.p2c(xrange.to));\n                    yrange.from = Math.floor(yrange.axis.p2c(yrange.from));\n                    yrange.to = Math.floor(yrange.axis.p2c(yrange.to));\n\n                    if (xequal || yequal) {\n                        var lineWidth = m.lineWidth || options.grid.markingsLineWidth,\n                            subPixel = lineWidth % 2 ? 0.5 : 0;\n                        ctx.beginPath();\n                        ctx.strokeStyle = m.color || options.grid.markingsColor;\n                        ctx.lineWidth = lineWidth;\n                        if (xequal) {\n                            ctx.moveTo(xrange.to + subPixel, yrange.from);\n                            ctx.lineTo(xrange.to + subPixel, yrange.to);\n                        } else {\n                            ctx.moveTo(xrange.from, yrange.to + subPixel);\n                            ctx.lineTo(xrange.to, yrange.to + subPixel);\n                        }\n                        ctx.stroke();\n                    } else {\n                        ctx.fillStyle = m.color || options.grid.markingsColor;\n                        ctx.fillRect(xrange.from, yrange.to,\n                                     xrange.to - xrange.from,\n                                     yrange.from - yrange.to);\n                    }\n                }\n            }\n\n            // draw the ticks\n            axes = allAxes();\n            bw = options.grid.borderWidth;\n\n            for (var j = 0; j < axes.length; ++j) {\n                var axis = axes[j], box = axis.box,\n                    t = axis.tickLength, x, y, xoff, yoff;\n                if (!axis.show || axis.ticks.length == 0)\n                    continue;\n\n                ctx.lineWidth = 1;\n\n                // find the edges\n                if (axis.direction == \"x\") {\n                    x = 0;\n                    if (t == \"full\")\n                        y = (axis.position == \"top\" ? 0 : plotHeight);\n                    else\n                        y = box.top - plotOffset.top + (axis.position == \"top\" ? box.height : 0);\n                }\n                else {\n                    y = 0;\n                    if (t == \"full\")\n                        x = (axis.position == \"left\" ? 0 : plotWidth);\n                    else\n                        x = box.left - plotOffset.left + (axis.position == \"left\" ? box.width : 0);\n                }\n\n                // draw tick bar\n                if (!axis.innermost) {\n                    ctx.strokeStyle = axis.options.color;\n                    ctx.beginPath();\n                    xoff = yoff = 0;\n                    if (axis.direction == \"x\")\n                        xoff = plotWidth + 1;\n                    else\n                        yoff = plotHeight + 1;\n\n                    if (ctx.lineWidth == 1) {\n                        if (axis.direction == \"x\") {\n                            y = Math.floor(y) + 0.5;\n                        } else {\n                            x = Math.floor(x) + 0.5;\n                        }\n                    }\n\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(x + xoff, y + yoff);\n                    ctx.stroke();\n                }\n\n                // draw ticks\n\n                ctx.strokeStyle = axis.options.tickColor;\n\n                ctx.beginPath();\n                for (i = 0; i < axis.ticks.length; ++i) {\n                    var v = axis.ticks[i].v;\n\n                    xoff = yoff = 0;\n\n                    if (isNaN(v) || v < axis.min || v > axis.max\n                        // skip those lying on the axes if we got a border\n                        || (t == \"full\"\n                            && ((typeof bw == \"object\" && bw[axis.position] > 0) || bw > 0)\n                            && (v == axis.min || v == axis.max)))\n                        continue;\n\n                    if (axis.direction == \"x\") {\n                        x = axis.p2c(v);\n                        yoff = t == \"full\" ? -plotHeight : t;\n\n                        if (axis.position == \"top\")\n                            yoff = -yoff;\n                    }\n                    else {\n                        y = axis.p2c(v);\n                        xoff = t == \"full\" ? -plotWidth : t;\n\n                        if (axis.position == \"left\")\n                            xoff = -xoff;\n                    }\n\n                    if (ctx.lineWidth == 1) {\n                        if (axis.direction == \"x\")\n                            x = Math.floor(x) + 0.5;\n                        else\n                            y = Math.floor(y) + 0.5;\n                    }\n\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(x + xoff, y + yoff);\n                }\n\n                ctx.stroke();\n            }\n\n\n            // draw border\n            if (bw) {\n                // If either borderWidth or borderColor is an object, then draw the border\n                // line by line instead of as one rectangle\n                bc = options.grid.borderColor;\n                if(typeof bw == \"object\" || typeof bc == \"object\") {\n                    if (typeof bw !== \"object\") {\n                        bw = {top: bw, right: bw, bottom: bw, left: bw};\n                    }\n                    if (typeof bc !== \"object\") {\n                        bc = {top: bc, right: bc, bottom: bc, left: bc};\n                    }\n\n                    if (bw.top > 0) {\n                        ctx.strokeStyle = bc.top;\n                        ctx.lineWidth = bw.top;\n                        ctx.beginPath();\n                        ctx.moveTo(0 - bw.left, 0 - bw.top/2);\n                        ctx.lineTo(plotWidth, 0 - bw.top/2);\n                        ctx.stroke();\n                    }\n\n                    if (bw.right > 0) {\n                        ctx.strokeStyle = bc.right;\n                        ctx.lineWidth = bw.right;\n                        ctx.beginPath();\n                        ctx.moveTo(plotWidth + bw.right / 2, 0 - bw.top);\n                        ctx.lineTo(plotWidth + bw.right / 2, plotHeight);\n                        ctx.stroke();\n                    }\n\n                    if (bw.bottom > 0) {\n                        ctx.strokeStyle = bc.bottom;\n                        ctx.lineWidth = bw.bottom;\n                        ctx.beginPath();\n                        ctx.moveTo(plotWidth + bw.right, plotHeight + bw.bottom / 2);\n                        ctx.lineTo(0, plotHeight + bw.bottom / 2);\n                        ctx.stroke();\n                    }\n\n                    if (bw.left > 0) {\n                        ctx.strokeStyle = bc.left;\n                        ctx.lineWidth = bw.left;\n                        ctx.beginPath();\n                        ctx.moveTo(0 - bw.left/2, plotHeight + bw.bottom);\n                        ctx.lineTo(0- bw.left/2, 0);\n                        ctx.stroke();\n                    }\n                }\n                else {\n                    ctx.lineWidth = bw;\n                    ctx.strokeStyle = options.grid.borderColor;\n                    ctx.strokeRect(-bw/2, -bw/2, plotWidth + bw, plotHeight + bw);\n                }\n            }\n\n            ctx.restore();\n        }\n\n        function drawAxisLabels() {\n\n            $.each(allAxes(), function (_, axis) {\n                var box = axis.box,\n                    legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n                    layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n                    font = axis.options.font || \"flot-tick-label tickLabel\",\n                    tick, x, y, halign, valign;\n\n                // Remove text before checking for axis.show and ticks.length;\n                // otherwise plugins, like flot-tickrotor, that draw their own\n                // tick labels will end up with both theirs and the defaults.\n\n                surface.removeText(layer);\n\n                if (!axis.show || axis.ticks.length == 0)\n                    return;\n\n                for (var i = 0; i < axis.ticks.length; ++i) {\n\n                    tick = axis.ticks[i];\n                    if (!tick.label || tick.v < axis.min || tick.v > axis.max)\n                        continue;\n\n                    if (axis.direction == \"x\") {\n                        halign = \"center\";\n                        x = plotOffset.left + axis.p2c(tick.v);\n                        if (axis.position == \"bottom\") {\n                            y = box.top + box.padding + box.eventSectionPadding;\n                        } else {\n                            y = box.top + box.height - box.padding;\n                            valign = \"bottom\";\n                        }\n                    } else {\n                        valign = \"middle\";\n                        y = plotOffset.top + axis.p2c(tick.v);\n                        if (axis.position == \"left\") {\n                            x = box.left + box.width - box.padding;\n                            halign = \"right\";\n                        } else {\n                            x = box.left + box.padding;\n                        }\n                    }\n\n                    surface.addText(layer, x, y, tick.label, font, null, null, halign, valign);\n                }\n            });\n        }\n\n        function drawOrphanedPoints(series) {\n            /* Filters series data for points with no neighbors before or after\n             * and plots single 0.5 radius points for them so that they are displayed.\n             */\n            var abandonedPoints = [];\n            var beforeX = null;\n            var afterX = null;\n            var datapoints = series.datapoints;\n            // find any points with no neighbors before or after\n            var emptyPoints = [];\n            for (var j = 0; j < datapoints.pointsize - 2; j++) {\n                emptyPoints.push(0);\n            }\n            for (var i = 0; i < datapoints.points.length; i += datapoints.pointsize) {\n                var x = datapoints.points[i], y = datapoints.points[i + 1];\n                if (i === datapoints.points.length - datapoints.pointsize) {\n                    afterX = null;\n                } else {\n                    afterX = datapoints.points[i + datapoints.pointsize];\n                }\n                if (x !== null && y !== null && beforeX === null && afterX === null) {\n                    abandonedPoints.push(x);\n                    abandonedPoints.push(y);\n                    abandonedPoints.push.apply(abandonedPoints, emptyPoints);\n                }\n                beforeX = x;\n\n            }\n            var olddatapoints = datapoints.points\n            datapoints.points = abandonedPoints;\n\n            series.points.radius = series.lines.lineWidth/2;\n            // plot the orphan points with a radius of lineWidth/2\n            drawSeriesPoints(series);\n            // reset old info\n            datapoints.points = olddatapoints;\n        }\n\n        function drawSeries(series) {\n            if (series.lines.show) {\n                drawSeriesLines(series);\n                if (!series.points.show && !series.bars.show) {\n                    // not necessary if user wants points displayed for everything\n                    drawOrphanedPoints(series);\n                }\n            }\n            if (series.bars.show)\n                drawSeriesBars(series);\n            if (series.points.show)\n                drawSeriesPoints(series);\n        }\n\n        function drawSeriesLines(series) {\n            function plotLine(datapoints, xoffset, yoffset, axisx, axisy) {\n                var points = datapoints.points,\n                    ps = datapoints.pointsize,\n                    prevx = null, prevy = null;\n\n                ctx.beginPath();\n                for (var i = ps; i < points.length; i += ps) {\n                    var x1 = points[i - ps], y1 = points[i - ps + 1],\n                        x2 = points[i], y2 = points[i + 1];\n\n                    if (x1 == null || x2 == null)\n                        continue;\n\n                    // clip with ymin\n                    if (y1 <= y2 && y1 < axisy.min) {\n                        if (y2 < axisy.min)\n                            continue;   // line segment is outside\n                        // compute new intersection point\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.min;\n                    }\n                    else if (y2 <= y1 && y2 < axisy.min) {\n                        if (y1 < axisy.min)\n                            continue;\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.min;\n                    }\n\n                    // clip with ymax\n                    if (y1 >= y2 && y1 > axisy.max) {\n                        if (y2 > axisy.max)\n                            continue;\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.max;\n                    }\n                    else if (y2 >= y1 && y2 > axisy.max) {\n                        if (y1 > axisy.max)\n                            continue;\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.max;\n                    }\n\n                    // clip with xmin\n                    if (x1 <= x2 && x1 < axisx.min) {\n                        if (x2 < axisx.min)\n                            continue;\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.min;\n                    }\n                    else if (x2 <= x1 && x2 < axisx.min) {\n                        if (x1 < axisx.min)\n                            continue;\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.min;\n                    }\n\n                    // clip with xmax\n                    if (x1 >= x2 && x1 > axisx.max) {\n                        if (x2 > axisx.max)\n                            continue;\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.max;\n                    }\n                    else if (x2 >= x1 && x2 > axisx.max) {\n                        if (x1 > axisx.max)\n                            continue;\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.max;\n                    }\n\n                    if (x1 != prevx || y1 != prevy)\n                        ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);\n\n                    prevx = x2;\n                    prevy = y2;\n                    ctx.lineTo(axisx.p2c(x2) + xoffset, axisy.p2c(y2) + yoffset);\n                }\n                ctx.stroke();\n            }\n\n            function plotLineArea(datapoints, axisx, axisy) {\n                var points = datapoints.points,\n                    ps = datapoints.pointsize,\n                    bottom = Math.min(Math.max(0, axisy.min), axisy.max),\n                    i = 0, top, areaOpen = false,\n                    ypos = 1, segmentStart = 0, segmentEnd = 0;\n\n                // we process each segment in two turns, first forward\n                // direction to sketch out top, then once we hit the\n                // end we go backwards to sketch the bottom\n                while (true) {\n                    if (ps > 0 && i > points.length + ps)\n                        break;\n\n                    i += ps; // ps is negative if going backwards\n\n                    var x1 = points[i - ps],\n                        y1 = points[i - ps + ypos],\n                        x2 = points[i], y2 = points[i + ypos];\n\n                    if (areaOpen) {\n                        if (ps > 0 && x1 != null && x2 == null) {\n                            // at turning point\n                            segmentEnd = i;\n                            ps = -ps;\n                            ypos = 2;\n                            continue;\n                        }\n\n                        if (ps < 0 && i == segmentStart + ps) {\n                            // done with the reverse sweep\n                            ctx.fill();\n                            areaOpen = false;\n                            ps = -ps;\n                            ypos = 1;\n                            i = segmentStart = segmentEnd + ps;\n                            continue;\n                        }\n                    }\n\n                    if (x1 == null || x2 == null)\n                        continue;\n\n                    // clip x values\n\n                    // clip with xmin\n                    if (x1 <= x2 && x1 < axisx.min) {\n                        if (x2 < axisx.min)\n                            continue;\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.min;\n                    }\n                    else if (x2 <= x1 && x2 < axisx.min) {\n                        if (x1 < axisx.min)\n                            continue;\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.min;\n                    }\n\n                    // clip with xmax\n                    if (x1 >= x2 && x1 > axisx.max) {\n                        if (x2 > axisx.max)\n                            continue;\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.max;\n                    }\n                    else if (x2 >= x1 && x2 > axisx.max) {\n                        if (x1 > axisx.max)\n                            continue;\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.max;\n                    }\n\n                    if (!areaOpen) {\n                        // open area\n                        ctx.beginPath();\n                        ctx.moveTo(axisx.p2c(x1), axisy.p2c(bottom));\n                        areaOpen = true;\n                    }\n\n                    // now first check the case where both is outside\n                    if (y1 >= axisy.max && y2 >= axisy.max) {\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.max));\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.max));\n                        continue;\n                    }\n                    else if (y1 <= axisy.min && y2 <= axisy.min) {\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.min));\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.min));\n                        continue;\n                    }\n\n                    // else it's a bit more complicated, there might\n                    // be a flat maxed out rectangle first, then a\n                    // triangular cutout or reverse; to find these\n                    // keep track of the current x values\n                    var x1old = x1, x2old = x2;\n\n                    // clip the y values, without shortcutting, we\n                    // go through all cases in turn\n\n                    // clip with ymin\n                    if (y1 <= y2 && y1 < axisy.min && y2 >= axisy.min) {\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.min;\n                    }\n                    else if (y2 <= y1 && y2 < axisy.min && y1 >= axisy.min) {\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.min;\n                    }\n\n                    // clip with ymax\n                    if (y1 >= y2 && y1 > axisy.max && y2 <= axisy.max) {\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.max;\n                    }\n                    else if (y2 >= y1 && y2 > axisy.max && y1 <= axisy.max) {\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.max;\n                    }\n\n                    // if the x value was changed we got a rectangle\n                    // to fill\n                    if (x1 != x1old) {\n                        ctx.lineTo(axisx.p2c(x1old), axisy.p2c(y1));\n                        // it goes to (x1, y1), but we fill that below\n                    }\n\n                    // fill triangular section, this sometimes result\n                    // in redundant points if (x1, y1) hasn't changed\n                    // from previous line to, but we just ignore that\n                    ctx.lineTo(axisx.p2c(x1), axisy.p2c(y1));\n                    ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n\n                    // fill the other rectangle if it's there\n                    if (x2 != x2old) {\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n                        ctx.lineTo(axisx.p2c(x2old), axisy.p2c(y2));\n                    }\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n            ctx.lineJoin = \"round\";\n\n            var lw = series.lines.lineWidth,\n                sw = series.shadowSize;\n            // FIXME: consider another form of shadow when filling is turned on\n            if (lw > 0 && sw > 0) {\n                // draw shadow as a thick and thin line with transparency\n                ctx.lineWidth = sw;\n                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n                // position shadow at angle from the mid of line\n                var angle = Math.PI/18;\n                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/2), Math.cos(angle) * (lw/2 + sw/2), series.xaxis, series.yaxis);\n                ctx.lineWidth = sw/2;\n                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/4), Math.cos(angle) * (lw/2 + sw/4), series.xaxis, series.yaxis);\n            }\n\n            ctx.lineWidth = lw;\n            ctx.strokeStyle = series.color;\n            var fillStyle = getFillStyle(series.lines, series.color, 0, plotHeight);\n            if (fillStyle) {\n                ctx.fillStyle = fillStyle;\n                plotLineArea(series.datapoints, series.xaxis, series.yaxis);\n            }\n\n            if (lw > 0)\n                plotLine(series.datapoints, 0, 0, series.xaxis, series.yaxis);\n            ctx.restore();\n        }\n\n        function drawSeriesPoints(series) {\n            function plotPoints(datapoints, radius, fillStyle, offset, shadow, axisx, axisy, symbol) {\n                var points = datapoints.points, ps = datapoints.pointsize;\n\n                for (var i = 0; i < points.length; i += ps) {\n                    var x = points[i], y = points[i + 1];\n                    if (x == null || x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n                        continue;\n\n                    ctx.beginPath();\n                    x = axisx.p2c(x);\n                    y = axisy.p2c(y) + offset;\n                    if (symbol == \"circle\")\n                        ctx.arc(x, y, radius, 0, shadow ? Math.PI : Math.PI * 2, false);\n                    else\n                        symbol(ctx, x, y, radius, shadow);\n                    ctx.closePath();\n\n                    if (fillStyle) {\n                        ctx.fillStyle = fillStyle;\n                        ctx.fill();\n                    }\n                    ctx.stroke();\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            var lw = series.points.lineWidth,\n                sw = series.shadowSize,\n                radius = series.points.radius,\n                symbol = series.points.symbol;\n\n            // If the user sets the line width to 0, we change it to a very\n            // small value. A line width of 0 seems to force the default of 1.\n            // Doing the conditional here allows the shadow setting to still be\n            // optional even with a lineWidth of 0.\n\n            if( lw == 0 )\n                lw = 0.0001;\n\n            if (lw > 0 && sw > 0) {\n                // draw shadow in two steps\n                var w = sw / 2;\n                ctx.lineWidth = w;\n                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n                plotPoints(series.datapoints, radius, null, w + w/2, true,\n                           series.xaxis, series.yaxis, symbol);\n\n                ctx.strokeStyle = \"rgba(0,0,0,0.2)\";\n                plotPoints(series.datapoints, radius, null, w/2, true,\n                           series.xaxis, series.yaxis, symbol);\n            }\n\n            ctx.lineWidth = lw;\n            ctx.strokeStyle = series.color;\n            plotPoints(series.datapoints, radius,\n                       getFillStyle(series.points, series.color), 0, false,\n                       series.xaxis, series.yaxis, symbol);\n            ctx.restore();\n        }\n\n        function drawBar(x, y, b, barLeft, barRight, fillStyleCallback, axisx, axisy, c, horizontal, lineWidth) {\n            var left, right, bottom, top,\n                drawLeft, drawRight, drawTop, drawBottom,\n                tmp;\n\n            // in horizontal mode, we start the bar from the left\n            // instead of from the bottom so it appears to be\n            // horizontal rather than vertical\n            if (horizontal) {\n                drawBottom = drawRight = drawTop = true;\n                drawLeft = false;\n                left = b;\n                right = x;\n                top = y + barLeft;\n                bottom = y + barRight;\n\n                // account for negative bars\n                if (right < left) {\n                    tmp = right;\n                    right = left;\n                    left = tmp;\n                    drawLeft = true;\n                    drawRight = false;\n                }\n            }\n            else {\n                drawLeft = drawRight = drawTop = true;\n                drawBottom = false;\n                left = x + barLeft;\n                right = x + barRight;\n                bottom = b;\n                top = y;\n\n                // account for negative bars\n                if (top < bottom) {\n                    tmp = top;\n                    top = bottom;\n                    bottom = tmp;\n                    drawBottom = true;\n                    drawTop = false;\n                }\n            }\n\n            // clip\n            if (right < axisx.min || left > axisx.max ||\n                top < axisy.min || bottom > axisy.max)\n                return;\n\n            if (left < axisx.min) {\n                left = axisx.min;\n                drawLeft = false;\n            }\n\n            if (right > axisx.max) {\n                right = axisx.max;\n                drawRight = false;\n            }\n\n            if (bottom < axisy.min) {\n                bottom = axisy.min;\n                drawBottom = false;\n            }\n\n            if (top > axisy.max) {\n                top = axisy.max;\n                drawTop = false;\n            }\n\n            left = axisx.p2c(left);\n            bottom = axisy.p2c(bottom);\n            right = axisx.p2c(right);\n            top = axisy.p2c(top);\n\n            // fill the bar\n            if (fillStyleCallback) {\n                c.fillStyle = fillStyleCallback(bottom, top);\n                c.fillRect(left, top, right - left, bottom - top)\n            }\n\n            // draw outline\n            if (lineWidth > 0 && (drawLeft || drawRight || drawTop || drawBottom)) {\n                c.beginPath();\n\n                // FIXME: inline moveTo is buggy with excanvas\n                c.moveTo(left, bottom);\n                if (drawLeft)\n                    c.lineTo(left, top);\n                else\n                    c.moveTo(left, top);\n                if (drawTop)\n                    c.lineTo(right, top);\n                else\n                    c.moveTo(right, top);\n                if (drawRight)\n                    c.lineTo(right, bottom);\n                else\n                    c.moveTo(right, bottom);\n                if (drawBottom)\n                    c.lineTo(left, bottom);\n                else\n                    c.moveTo(left, bottom);\n                c.stroke();\n            }\n        }\n\n        function drawSeriesBars(series) {\n            function plotBars(datapoints, barLeft, barRight, fillStyleCallback, axisx, axisy) {\n                var points = datapoints.points, ps = datapoints.pointsize;\n\n                for (var i = 0; i < points.length; i += ps) {\n                    if (points[i] == null)\n                        continue;\n                    drawBar(points[i], points[i + 1], points[i + 2], barLeft, barRight, fillStyleCallback, axisx, axisy, ctx, series.bars.horizontal, series.bars.lineWidth);\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            // FIXME: figure out a way to add shadows (for instance along the right edge)\n            ctx.lineWidth = series.bars.lineWidth;\n            ctx.strokeStyle = series.color;\n\n            var barLeft;\n\n            switch (series.bars.align) {\n                case \"left\":\n                    barLeft = 0;\n                    break;\n                case \"right\":\n                    barLeft = -series.bars.barWidth;\n                    break;\n                default:\n                    barLeft = -series.bars.barWidth / 2;\n            }\n\n            var fillStyleCallback = series.bars.fill ? function (bottom, top) { return getFillStyle(series.bars, series.color, bottom, top); } : null;\n            plotBars(series.datapoints, barLeft, barLeft + series.bars.barWidth, fillStyleCallback, series.xaxis, series.yaxis);\n            ctx.restore();\n        }\n\n        function getFillStyle(filloptions, seriesColor, bottom, top) {\n            var fill = filloptions.fill;\n            if (!fill)\n                return null;\n\n            if (filloptions.fillColor)\n                return getColorOrGradient(filloptions.fillColor, bottom, top, seriesColor);\n\n            var c = $.color.parse(seriesColor);\n            c.a = typeof fill == \"number\" ? fill : 0.4;\n            c.normalize();\n            return c.toString();\n        }\n\n        function insertLegend() {\n\n            if (options.legend.container != null) {\n                $(options.legend.container).html(\"\");\n            } else {\n                placeholder.find(\".legend\").remove();\n            }\n\n            if (!options.legend.show) {\n                return;\n            }\n\n            var fragments = [], entries = [], rowStarted = false,\n                lf = options.legend.labelFormatter, s, label;\n\n            // Build a list of legend entries, with each having a label and a color\n\n            for (var i = 0; i < series.length; ++i) {\n                s = series[i];\n                if (s.label) {\n                    label = lf ? lf(s.label, s) : s.label;\n                    if (label) {\n                        entries.push({\n                            label: label,\n                            color: s.color\n                        });\n                    }\n                }\n            }\n\n            // Sort the legend using either the default or a custom comparator\n\n            if (options.legend.sorted) {\n                if ($.isFunction(options.legend.sorted)) {\n                    entries.sort(options.legend.sorted);\n                } else if (options.legend.sorted == \"reverse\") {\n                \tentries.reverse();\n                } else {\n                    var ascending = options.legend.sorted != \"descending\";\n                    entries.sort(function(a, b) {\n                        return a.label == b.label ? 0 : (\n                            (a.label < b.label) != ascending ? 1 : -1   // Logical XOR\n                        );\n                    });\n                }\n            }\n\n            // Generate markup for the list of entries, in their final order\n\n            for (var i = 0; i < entries.length; ++i) {\n\n                var entry = entries[i];\n\n                if (i % options.legend.noColumns == 0) {\n                    if (rowStarted)\n                        fragments.push('</tr>');\n                    fragments.push('<tr>');\n                    rowStarted = true;\n                }\n\n                fragments.push(\n                    '<td class=\"legendColorBox\"><div style=\"border:1px solid ' + options.legend.labelBoxBorderColor + ';padding:1px\"><div style=\"width:4px;height:0;border:5px solid ' + entry.color + ';overflow:hidden\"></div></div></td>' +\n                    '<td class=\"legendLabel\">' + entry.label + '</td>'\n                );\n            }\n\n            if (rowStarted)\n                fragments.push('</tr>');\n\n            if (fragments.length == 0)\n                return;\n\n            var table = '<table style=\"font-size:smaller;color:' + options.grid.color + '\">' + fragments.join(\"\") + '</table>';\n            if (options.legend.container != null)\n                $(options.legend.container).html(table);\n            else {\n                var pos = \"\",\n                    p = options.legend.position,\n                    m = options.legend.margin;\n                if (m[0] == null)\n                    m = [m, m];\n                if (p.charAt(0) == \"n\")\n                    pos += 'top:' + (m[1] + plotOffset.top) + 'px;';\n                else if (p.charAt(0) == \"s\")\n                    pos += 'bottom:' + (m[1] + plotOffset.bottom) + 'px;';\n                if (p.charAt(1) == \"e\")\n                    pos += 'right:' + (m[0] + plotOffset.right) + 'px;';\n                else if (p.charAt(1) == \"w\")\n                    pos += 'left:' + (m[0] + plotOffset.left) + 'px;';\n                var legend = $('<div class=\"legend\">' + table.replace('style=\"', 'style=\"position:absolute;' + pos +';') + '</div>').appendTo(placeholder);\n                if (options.legend.backgroundOpacity != 0.0) {\n                    // put in the transparent background\n                    // separately to avoid blended labels and\n                    // label boxes\n                    var c = options.legend.backgroundColor;\n                    if (c == null) {\n                        c = options.grid.backgroundColor;\n                        if (c && typeof c == \"string\")\n                            c = $.color.parse(c);\n                        else\n                            c = $.color.extract(legend, 'background-color');\n                        c.a = 1;\n                        c = c.toString();\n                    }\n                    var div = legend.children();\n                    $('<div style=\"position:absolute;width:' + div.width() + 'px;height:' + div.height() + 'px;' + pos +'background-color:' + c + ';\"> </div>').prependTo(legend).css('opacity', options.legend.backgroundOpacity);\n                }\n            }\n        }\n\n\n        // interactive features\n\n        var highlights = [],\n            redrawTimeout = null;\n\n        // returns the data item the mouse is over, or null if none is found\n        function findNearbyItem(mouseX, mouseY, seriesFilter) {\n            var maxDistance = options.grid.mouseActiveRadius,\n                smallestDistance = maxDistance * maxDistance + 1,\n                item = null, foundPoint = false, i, j, ps;\n\n            for (i = series.length - 1; i >= 0; --i) {\n                if (!seriesFilter(series[i]))\n                    continue;\n\n                var s = series[i],\n                    axisx = s.xaxis,\n                    axisy = s.yaxis,\n                    points = s.datapoints.points,\n                    mx = axisx.c2p(mouseX), // precompute some stuff to make the loop faster\n                    my = axisy.c2p(mouseY),\n                    maxx = maxDistance / axisx.scale,\n                    maxy = maxDistance / axisy.scale;\n\n                ps = s.datapoints.pointsize;\n                // with inverse transforms, we can't use the maxx/maxy\n                // optimization, sadly\n                if (axisx.options.inverseTransform)\n                    maxx = Number.MAX_VALUE;\n                if (axisy.options.inverseTransform)\n                    maxy = Number.MAX_VALUE;\n\n                if (s.lines.show || s.points.show) {\n                    for (j = 0; j < points.length; j += ps) {\n                        var x = points[j], y = points[j + 1];\n                        if (x == null)\n                            continue;\n\n                        // For points and lines, the cursor must be within a\n                        // certain distance to the data point\n                        if (x - mx > maxx || x - mx < -maxx ||\n                            y - my > maxy || y - my < -maxy)\n                            continue;\n\n                        // We have to calculate distances in pixels, not in\n                        // data units, because the scales of the axes may be different\n                        var dx = Math.abs(axisx.p2c(x) - mouseX),\n                            dy = Math.abs(axisy.p2c(y) - mouseY),\n                            dist = dx * dx + dy * dy; // we save the sqrt\n\n                        // use <= to ensure last point takes precedence\n                        // (last generally means on top of)\n                        if (dist < smallestDistance) {\n                            smallestDistance = dist;\n                            item = [i, j / ps];\n                        }\n                    }\n                }\n\n                if (s.bars.show && !item) { // no other point can be nearby\n\n                    var barLeft, barRight;\n\n                    switch (s.bars.align) {\n                        case \"left\":\n                            barLeft = 0;\n                            break;\n                        case \"right\":\n                            barLeft = -s.bars.barWidth;\n                            break;\n                        default:\n                            barLeft = -s.bars.barWidth / 2;\n                    }\n\n                    barRight = barLeft + s.bars.barWidth;\n\n                    for (j = 0; j < points.length; j += ps) {\n                        var x = points[j], y = points[j + 1], b = points[j + 2];\n                        if (x == null)\n                            continue;\n\n                        // for a bar graph, the cursor must be inside the bar\n                        if (series[i].bars.horizontal ?\n                            (mx <= Math.max(b, x) && mx >= Math.min(b, x) &&\n                             my >= y + barLeft && my <= y + barRight) :\n                            (mx >= x + barLeft && mx <= x + barRight &&\n                             my >= Math.min(b, y) && my <= Math.max(b, y)))\n                                item = [i, j / ps];\n                    }\n                }\n            }\n\n            if (item) {\n                i = item[0];\n                j = item[1];\n                ps = series[i].datapoints.pointsize;\n\n                return { datapoint: series[i].datapoints.points.slice(j * ps, (j + 1) * ps),\n                         dataIndex: j,\n                         series: series[i],\n                         seriesIndex: i };\n            }\n\n            return null;\n        }\n\n        function onMouseMove(e) {\n            if (options.grid.hoverable)\n                triggerClickHoverEvent(\"plothover\", e,\n                                       function (s) { return s[\"hoverable\"] != false; });\n        }\n\n        function onMouseLeave(e) {\n            if (options.grid.hoverable)\n                triggerClickHoverEvent(\"plothover\", e,\n                                       function (s) { return false; });\n        }\n\n        function onClick(e) {\n          if (plot.isSelecting) {\n            return;\n          }\n\n          triggerClickHoverEvent(\"plotclick\", e, function (s) { return s[\"clickable\"] != false; });\n        }\n\n        // trigger click or hover event (they send the same parameters\n        // so we share their code)\n        function triggerClickHoverEvent(eventname, event, seriesFilter) {\n            var offset = eventHolder.offset(),\n                canvasX = event.pageX - offset.left - plotOffset.left,\n                canvasY = event.pageY - offset.top - plotOffset.top,\n            pos = canvasToAxisCoords({ left: canvasX, top: canvasY });\n\n            pos.pageX = event.pageX;\n            pos.pageY = event.pageY;\n\n            // Add ctrlKey and metaKey to event\n            pos.ctrlKey = event.ctrlKey;\n            pos.metaKey = event.metaKey;\n\n            var item = findNearbyItem(canvasX, canvasY, seriesFilter);\n\n            if (item) {\n                // fill in mouse pos for any listeners out there\n                item.pageX = parseInt(item.series.xaxis.p2c(item.datapoint[0]) + offset.left + plotOffset.left, 10);\n                item.pageY = parseInt(item.series.yaxis.p2c(item.datapoint[1]) + offset.top + plotOffset.top, 10);\n            }\n\n            if (options.grid.autoHighlight) {\n                // clear auto-highlights\n                for (var i = 0; i < highlights.length; ++i) {\n                    var h = highlights[i];\n                    if (h.auto == eventname &&\n                        !(item && h.series == item.series &&\n                          h.point[0] == item.datapoint[0] &&\n                          h.point[1] == item.datapoint[1]))\n                        unhighlight(h.series, h.point);\n                }\n\n                if (item)\n                    highlight(item.series, item.datapoint, eventname);\n            }\n\n            placeholder.trigger(eventname, [ pos, item ]);\n        }\n\n        function triggerRedrawOverlay() {\n            var t = options.interaction.redrawOverlayInterval;\n            if (t == -1) {      // skip event queue\n                drawOverlay();\n                return;\n            }\n\n            if (!redrawTimeout)\n                redrawTimeout = setTimeout(drawOverlay, t);\n        }\n\n        function drawOverlay() {\n            redrawTimeout = null;\n\n            // draw highlights\n            octx.save();\n            overlay.clear();\n            octx.translate(plotOffset.left, plotOffset.top);\n\n            var i, hi;\n            for (i = 0; i < highlights.length; ++i) {\n                hi = highlights[i];\n\n                if (hi.series.bars.show)\n                    drawBarHighlight(hi.series, hi.point);\n                else\n                    drawPointHighlight(hi.series, hi.point);\n            }\n            octx.restore();\n\n            executeHooks(hooks.drawOverlay, [octx]);\n        }\n\n        function highlight(s, point, auto) {\n            if (typeof s == \"number\")\n                s = series[s];\n\n            if (typeof point == \"number\") {\n                var ps = s.datapoints.pointsize;\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n            }\n\n            var i = indexOfHighlight(s, point);\n            if (i == -1) {\n                highlights.push({ series: s, point: point, auto: auto });\n\n                triggerRedrawOverlay();\n            }\n            else if (!auto)\n                highlights[i].auto = false;\n        }\n\n        function unhighlight(s, point) {\n            if (s == null && point == null) {\n                highlights = [];\n                triggerRedrawOverlay();\n                return;\n            }\n\n            if (typeof s == \"number\")\n                s = series[s];\n\n            if (typeof point == \"number\") {\n                var ps = s.datapoints.pointsize;\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n            }\n\n            var i = indexOfHighlight(s, point);\n            if (i != -1) {\n                highlights.splice(i, 1);\n\n                triggerRedrawOverlay();\n            }\n        }\n\n        function indexOfHighlight(s, p) {\n            for (var i = 0; i < highlights.length; ++i) {\n                var h = highlights[i];\n                if (h.series == s && h.point[0] == p[0]\n                    && h.point[1] == p[1])\n                    return i;\n            }\n            return -1;\n        }\n\n        function drawPointHighlight(series, point) {\n            var x = point[0], y = point[1],\n                axisx = series.xaxis, axisy = series.yaxis,\n                highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString();\n\n            if (x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n                return;\n\n            var pointRadius = series.points.radius + series.points.lineWidth / 2;\n            octx.lineWidth = pointRadius;\n            octx.strokeStyle = highlightColor;\n            var radius = 1.5 * pointRadius;\n            x = axisx.p2c(x);\n            y = axisy.p2c(y);\n\n            octx.beginPath();\n            if (series.points.symbol == \"circle\")\n                octx.arc(x, y, radius, 0, 2 * Math.PI, false);\n            else\n                series.points.symbol(octx, x, y, radius, false);\n            octx.closePath();\n            octx.stroke();\n        }\n\n        function drawBarHighlight(series, point) {\n            var highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString(),\n                fillStyle = highlightColor,\n                barLeft;\n\n            switch (series.bars.align) {\n                case \"left\":\n                    barLeft = 0;\n                    break;\n                case \"right\":\n                    barLeft = -series.bars.barWidth;\n                    break;\n                default:\n                    barLeft = -series.bars.barWidth / 2;\n            }\n\n            octx.lineWidth = series.bars.lineWidth;\n            octx.strokeStyle = highlightColor;\n\n            drawBar(point[0], point[1], point[2] || 0, barLeft, barLeft + series.bars.barWidth,\n                    function () { return fillStyle; }, series.xaxis, series.yaxis, octx, series.bars.horizontal, series.bars.lineWidth);\n        }\n\n        function getColorOrGradient(spec, bottom, top, defaultColor) {\n            if (typeof spec == \"string\")\n                return spec;\n            else {\n                // assume this is a gradient spec; IE currently only\n                // supports a simple vertical gradient properly, so that's\n                // what we support too\n                var gradient = ctx.createLinearGradient(0, top, 0, bottom);\n\n                for (var i = 0, l = spec.colors.length; i < l; ++i) {\n                    var c = spec.colors[i];\n                    if (typeof c != \"string\") {\n                        var co = $.color.parse(defaultColor);\n                        if (c.brightness != null)\n                            co = co.scale('rgb', c.brightness);\n                        if (c.opacity != null)\n                            co.a *= c.opacity;\n                        c = co.toString();\n                    }\n                    gradient.addColorStop(i / (l - 1), c);\n                }\n\n                return gradient;\n            }\n        }\n    }\n\n    // Add the plot function to the top level of the jQuery object\n\n    $.plot = function(placeholder, data, options) {\n        //var t0 = new Date();\n        var plot = new Plot($(placeholder), data, options, $.plot.plugins);\n        //(window.console ? console.log : alert)(\"time used (msecs): \" + ((new Date()).getTime() - t0.getTime()));\n        return plot;\n    };\n\n    $.plot.version = \"0.8.3\";\n\n    $.plot.plugins = [];\n\n    // Also add the plot function as a chainable property\n\n    $.fn.plot = function(data, options) {\n        return this.each(function() {\n            $.plot(this, data, options);\n        });\n    };\n\n    // round to nearby lower multiple of base\n    function floorInBase(n, base) {\n        return base * Math.floor(n / base);\n    }\n\n})(jQuery);\n","import flatten from 'lodash/flatten';\nimport { GrafanaThemeType } from '../types/theme';\nimport tinycolor from 'tinycolor2';\n\ntype Hue = 'green' | 'yellow' | 'red' | 'blue' | 'orange' | 'purple';\n\nexport type Color =\n  | 'green'\n  | 'dark-green'\n  | 'semi-dark-green'\n  | 'light-green'\n  | 'super-light-green'\n  | 'yellow'\n  | 'dark-yellow'\n  | 'semi-dark-yellow'\n  | 'light-yellow'\n  | 'super-light-yellow'\n  | 'red'\n  | 'dark-red'\n  | 'semi-dark-red'\n  | 'light-red'\n  | 'super-light-red'\n  | 'blue'\n  | 'dark-blue'\n  | 'semi-dark-blue'\n  | 'light-blue'\n  | 'super-light-blue'\n  | 'orange'\n  | 'dark-orange'\n  | 'semi-dark-orange'\n  | 'light-orange'\n  | 'super-light-orange'\n  | 'purple'\n  | 'dark-purple'\n  | 'semi-dark-purple'\n  | 'light-purple'\n  | 'super-light-purple';\n\ntype ThemeVariants = {\n  dark: string;\n  light: string;\n};\n\nexport type ColorDefinition = {\n  hue: Hue;\n  isPrimary?: boolean;\n  name: Color;\n  variants: ThemeVariants;\n};\n\nlet colorsPaletteInstance: Map<Hue, ColorDefinition[]>;\n\nconst buildColorDefinition = (\n  hue: Hue,\n  name: Color,\n  [light, dark]: string[],\n  isPrimary?: boolean\n): ColorDefinition => ({\n  hue,\n  name,\n  variants: {\n    light,\n    dark,\n  },\n  isPrimary: !!isPrimary,\n});\n\nexport const getColorDefinitionByName = (name: Color): ColorDefinition => {\n  return flatten(Array.from(getNamedColorPalette().values())).filter(definition => definition.name === name)[0];\n};\n\nexport const getColorDefinition = (hex: string, theme: GrafanaThemeType): ColorDefinition | undefined => {\n  return flatten(Array.from(getNamedColorPalette().values())).filter(\n    definition => definition.variants[theme] === hex\n  )[0];\n};\n\nconst isHex = (color: string) => {\n  const hexRegex = /^((0x){0,1}|#{0,1})([0-9A-F]{8}|[0-9A-F]{6}|[0-9A-F]{3})$/gi;\n  return hexRegex.test(color);\n};\n\nexport const getColorName = (color?: string, theme?: GrafanaThemeType): Color | undefined => {\n  if (!color) {\n    return undefined;\n  }\n\n  if (color.indexOf('rgb') > -1) {\n    return undefined;\n  }\n  if (isHex(color)) {\n    const definition = getColorDefinition(color, theme || GrafanaThemeType.Dark);\n    return definition ? definition.name : undefined;\n  }\n\n  return color as Color;\n};\n\nexport const getColorByName = (colorName: string) => {\n  const definition = flatten(Array.from(getNamedColorPalette().values())).filter(\n    definition => definition.name === colorName\n  );\n  return definition.length > 0 ? definition[0] : undefined;\n};\n\nexport const getColorFromHexRgbOrName = (color: string, theme?: GrafanaThemeType): string => {\n  if (color.indexOf('rgb') > -1 || isHex(color)) {\n    return color;\n  }\n\n  const colorDefinition = getColorByName(color);\n\n  if (!colorDefinition) {\n    return new tinycolor(color).toHexString();\n  }\n\n  return theme ? colorDefinition.variants[theme] : colorDefinition.variants.dark;\n};\n\nexport const getColorForTheme = (color: ColorDefinition, theme?: GrafanaThemeType) => {\n  return theme ? color.variants[theme] : color.variants.dark;\n};\n\nconst buildNamedColorsPalette = () => {\n  const palette = new Map<Hue, ColorDefinition[]>();\n\n  const BasicGreen = buildColorDefinition('green', 'green', ['#56A64B', '#73BF69'], true);\n  const DarkGreen = buildColorDefinition('green', 'dark-green', ['#19730E', '#37872D']);\n  const SemiDarkGreen = buildColorDefinition('green', 'semi-dark-green', ['#37872D', '#56A64B']);\n  const LightGreen = buildColorDefinition('green', 'light-green', ['#73BF69', '#96D98D']);\n  const SuperLightGreen = buildColorDefinition('green', 'super-light-green', ['#96D98D', '#C8F2C2']);\n\n  const BasicYellow = buildColorDefinition('yellow', 'yellow', ['#F2CC0C', '#FADE2A'], true);\n  const DarkYellow = buildColorDefinition('yellow', 'dark-yellow', ['#CC9D00', '#E0B400']);\n  const SemiDarkYellow = buildColorDefinition('yellow', 'semi-dark-yellow', ['#E0B400', '#F2CC0C']);\n  const LightYellow = buildColorDefinition('yellow', 'light-yellow', ['#FADE2A', '#FFEE52']);\n  const SuperLightYellow = buildColorDefinition('yellow', 'super-light-yellow', ['#FFEE52', '#FFF899']);\n\n  const BasicRed = buildColorDefinition('red', 'red', ['#E02F44', '#F2495C'], true);\n  const DarkRed = buildColorDefinition('red', 'dark-red', ['#AD0317', '#C4162A']);\n  const SemiDarkRed = buildColorDefinition('red', 'semi-dark-red', ['#C4162A', '#E02F44']);\n  const LightRed = buildColorDefinition('red', 'light-red', ['#F2495C', '#FF7383']);\n  const SuperLightRed = buildColorDefinition('red', 'super-light-red', ['#FF7383', '#FFA6B0']);\n\n  const BasicBlue = buildColorDefinition('blue', 'blue', ['#3274D9', '#5794F2'], true);\n  const DarkBlue = buildColorDefinition('blue', 'dark-blue', ['#1250B0', '#1F60C4']);\n  const SemiDarkBlue = buildColorDefinition('blue', 'semi-dark-blue', ['#1F60C4', '#3274D9']);\n  const LightBlue = buildColorDefinition('blue', 'light-blue', ['#5794F2', '#8AB8FF']);\n  const SuperLightBlue = buildColorDefinition('blue', 'super-light-blue', ['#8AB8FF', '#C0D8FF']);\n\n  const BasicOrange = buildColorDefinition('orange', 'orange', ['#FF780A', '#FF9830'], true);\n  const DarkOrange = buildColorDefinition('orange', 'dark-orange', ['#E55400', '#FA6400']);\n  const SemiDarkOrange = buildColorDefinition('orange', 'semi-dark-orange', ['#FA6400', '#FF780A']);\n  const LightOrange = buildColorDefinition('orange', 'light-orange', ['#FF9830', '#FFB357']);\n  const SuperLightOrange = buildColorDefinition('orange', 'super-light-orange', ['#FFB357', '#FFCB7D']);\n\n  const BasicPurple = buildColorDefinition('purple', 'purple', ['#A352CC', '#B877D9'], true);\n  const DarkPurple = buildColorDefinition('purple', 'dark-purple', ['#7C2EA3', '#8F3BB8']);\n  const SemiDarkPurple = buildColorDefinition('purple', 'semi-dark-purple', ['#8F3BB8', '#A352CC']);\n  const LightPurple = buildColorDefinition('purple', 'light-purple', ['#B877D9', '#CA95E5']);\n  const SuperLightPurple = buildColorDefinition('purple', 'super-light-purple', ['#CA95E5', '#DEB6F2']);\n\n  const greens = [BasicGreen, DarkGreen, SemiDarkGreen, LightGreen, SuperLightGreen];\n  const yellows = [BasicYellow, DarkYellow, SemiDarkYellow, LightYellow, SuperLightYellow];\n  const reds = [BasicRed, DarkRed, SemiDarkRed, LightRed, SuperLightRed];\n  const blues = [BasicBlue, DarkBlue, SemiDarkBlue, LightBlue, SuperLightBlue];\n  const oranges = [BasicOrange, DarkOrange, SemiDarkOrange, LightOrange, SuperLightOrange];\n  const purples = [BasicPurple, DarkPurple, SemiDarkPurple, LightPurple, SuperLightPurple];\n\n  palette.set('green', greens);\n  palette.set('yellow', yellows);\n  palette.set('red', reds);\n  palette.set('blue', blues);\n  palette.set('orange', oranges);\n  palette.set('purple', purples);\n\n  return palette;\n};\n\nexport const getNamedColorPalette = () => {\n  if (colorsPaletteInstance) {\n    return colorsPaletteInstance;\n  }\n\n  colorsPaletteInstance = buildNamedColorsPalette();\n  return colorsPaletteInstance;\n};\n","import React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport { SelectableValue } from '@grafana/data';\nimport { css } from 'emotion';\nimport { Tooltip } from '../Tooltip/Tooltip';\nimport { ButtonSelect } from '../Select/ButtonSelect';\nimport memoizeOne from 'memoize-one';\nimport { GrafanaTheme } from '../../types';\nimport { withTheme } from '../../themes';\n\nexport const offOption = { label: 'Off', value: '' };\nexport const liveOption = { label: 'Live', value: 'LIVE' };\nexport const defaultIntervals = ['5s', '10s', '30s', '1m', '5m', '15m', '30m', '1h', '2h', '1d'];\nexport const isLive = (refreshInterval: string): boolean => refreshInterval === liveOption.value;\n\nconst getStyles = memoizeOne((theme: GrafanaTheme) => {\n  return {\n    selectButton: css`\n      label: selectButton;\n      .select-button-value {\n        color: ${theme.colors.orange};\n      }\n    `,\n  };\n});\n\nexport interface Props {\n  intervals?: string[];\n  onRefresh?: () => any;\n  onIntervalChanged: (interval: string) => void;\n  value?: string;\n  tooltip?: string;\n  hasLiveOption?: boolean;\n  // You can supply your own refresh button element. In that case onRefresh and tooltip are ignored.\n  refreshButton?: React.ReactNode;\n  buttonSelectClassName?: string;\n  theme: GrafanaTheme;\n}\n\nexport class RefreshPickerBase extends PureComponent<Props> {\n  // Make it exported as static properties to be easier to access. The global exports need to be accessed by direct\n  // import of this source file which won't work if this was installed as package.\n  static offOption = offOption;\n  static liveOption = liveOption;\n\n  constructor(props: Props) {\n    super(props);\n  }\n\n  intervalsToOptions = (intervals: string[] | undefined): Array<SelectableValue<string>> => {\n    const intervalsOrDefault = intervals || defaultIntervals;\n    const options = intervalsOrDefault\n      .filter(str => str !== '')\n      .map(interval => ({ label: interval, value: interval }));\n\n    if (this.props.hasLiveOption) {\n      options.unshift(liveOption);\n    }\n\n    options.unshift(offOption);\n    return options;\n  };\n\n  onChangeSelect = (item: SelectableValue<string>) => {\n    const { onIntervalChanged } = this.props;\n    if (onIntervalChanged) {\n      // @ts-ignore\n      onIntervalChanged(item.value);\n    }\n  };\n\n  render() {\n    const { onRefresh, intervals, tooltip, value, refreshButton, buttonSelectClassName, theme } = this.props;\n    const options = this.intervalsToOptions(intervals);\n    const currentValue = value || '';\n    const selectedValue = options.find(item => item.value === currentValue) || offOption;\n    const styles = getStyles(theme);\n\n    const cssClasses = classNames({\n      'refresh-picker': true,\n      'refresh-picker--off': selectedValue.label === offOption.label,\n      'refresh-picker--live': selectedValue === liveOption,\n    });\n\n    return (\n      <div className={cssClasses}>\n        <div className=\"refresh-picker-buttons\">\n          {refreshButton ? (\n            refreshButton\n          ) : (\n            <Tooltip placement=\"top\" content={tooltip!}>\n              <button\n                className=\"btn btn--radius-right-0 navbar-button navbar-button--border-right-0\"\n                onClick={onRefresh!}\n              >\n                <i className=\"fa fa-refresh\" />\n              </button>\n            </Tooltip>\n          )}\n          <ButtonSelect\n            className={classNames('navbar-button--attached', styles.selectButton, buttonSelectClassName)}\n            value={selectedValue}\n            label={selectedValue.label}\n            options={options}\n            onChange={this.onChangeSelect}\n            maxMenuHeight={380}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const RefreshPicker = withTheme<\n  Props,\n  {\n    offOption: typeof RefreshPickerBase.offOption;\n    liveOption: typeof RefreshPickerBase.liveOption;\n  }\n>(RefreshPickerBase);\n","var path = 'public/app/plugins/panel/singlestat/module.html';\nvar html = \"<div class=singlestat-panel>\\n\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/panel/text/editor.html';\nvar html = \"<div class=gf-form-inline>\\n\\t<div class=gf-form>\\n\\t\\t<span class=gf-form-label>Mode</span>\\n\\t\\t<span class=gf-form-select-wrapper>\\n\\t\\t\\t<select class=gf-form-input ng-model=ctrl.panel.mode ng-options=\\\"f for f in ['html','markdown']\\\"></select>\\n\\t\\t</span>\\n\\t</div>\\n</div>\\n\\n<div class=gf-form-inline>\\n\\t<div class=\\\"gf-form gf-form--grow\\\">\\n\\t\\t<code-editor content=ctrl.panel.content on-change=ctrl.render() data-mode=markdown data-max-lines=20>\\n\\t\\t</code-editor>\\n\\t</div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/datasource/mysql/partials/annotations.editor.html';\nvar html = \"\\n<div class=gf-form-group>\\n  <div class=gf-form-inline>\\n\\t\\t<div class=\\\"gf-form gf-form--grow\\\">\\n\\t\\t\\t<textarea rows=10 class=gf-form-input ng-model=ctrl.annotation.rawQuery spellcheck=false placeholder=\\\"query expression\\\" data-min-length=0 data-items=100 ng-model-onblur ng-change=ctrl.panelCtrl.refresh()></textarea>\\n\\t\\t</div>\\n\\t</div>\\n\\n  <div class=gf-form-inline>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label query-keyword\\\" ng-click=\\\"ctrl.showHelp = !ctrl.showHelp\\\">\\n        Show Help\\n        <i class=\\\"fa fa-caret-down\\\" ng-show=ctrl.showHelp></i>\\n        <i class=\\\"fa fa-caret-right\\\" ng-hide=ctrl.showHelp></i>\\n      </label>\\n\\t\\t</div>\\n  </div>\\n\\n  <div class=gf-form ng-show=ctrl.showHelp>\\n\\t\\t<pre class=\\\"gf-form-pre alert alert-info\\\"><h6>Annotation Query Format</h6>\\nAn annotation is an event that is overlaid on top of graphs. The query can have up to three columns per row, the <i>time</i> or <i>time_sec</i> column is mandatory. Annotation rendering is expensive so it is important to limit the number of rows returned.\\n\\n- column with alias: <b>time</b> or <i>time_sec</i> for the annotation event time. Use epoch time or any native date data type.\\n- column with alias: <b>text</b> for the annotation text\\n- column with alias: <b>tags</b> for annotation tags. This is a comma separated string of tags e.g. 'tag1,tag2'\\n\\n\\nMacros:\\n- $__time(column) -&gt; UNIX_TIMESTAMP(column) as time (or as time_sec)\\n- $__timeEpoch(column) -&gt; UNIX_TIMESTAMP(column) as time (or as time_sec)\\n- $__timeFilter(column) -&gt; column BETWEEN FROM_UNIXTIME(1492750877) AND FROM_UNIXTIME(1492750877)\\n- $__unixEpochFilter(column) -&gt;  time_unix_epoch &gt; 1492750877 AND time_unix_epoch &lt; 1492750877\\n- $__unixEpochNanoFilter(column) -&gt;  column &gt;= 1494410783152415214 AND column &lt;= 1494497183142514872\\n\\nOr build your own conditionals using these macros which just return the values:\\n- $__timeFrom() -&gt; FROM_UNIXTIME(1492750877)\\n- $__timeTo() -&gt;  FROM_UNIXTIME(1492750877)\\n- $__unixEpochFrom() -&gt;  1492750877\\n- $__unixEpochTo() -&gt;  1492750877\\n- $__unixEpochNanoFrom() -&gt;  1494410783152415214\\n- $__unixEpochNanoTo() -&gt;  1494497183142514872\\n\\t\\t</pre>\\n\\t</div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","export enum OrgRole {\n  Viewer = 'Viewer',\n  Editor = 'Editor',\n  Admin = 'Admin',\n}\n\nexport interface DashboardAclDTO {\n  id?: number;\n  dashboardId?: number;\n  userId?: number;\n  userLogin?: string;\n  userEmail?: string;\n  teamId?: number;\n  team?: string;\n  permission?: PermissionLevel;\n  role?: OrgRole;\n  icon?: string;\n  inherited?: boolean;\n}\n\nexport interface DashboardAclUpdateDTO {\n  userId: number;\n  teamId: number;\n  role: OrgRole;\n  permission: PermissionLevel;\n}\n\nexport interface DashboardAcl {\n  id?: number;\n  dashboardId?: number;\n  userId?: number;\n  userLogin?: string;\n  userEmail?: string;\n  teamId?: number;\n  team?: string;\n  permission?: PermissionLevel;\n  role?: OrgRole;\n  icon?: string;\n  name?: string;\n  inherited?: boolean;\n  sortRank?: number;\n  userAvatarUrl?: string;\n  teamAvatarUrl?: string;\n}\n\nexport interface DashboardPermissionInfo {\n  value: PermissionLevel;\n  label: string;\n  description: string;\n}\n\nexport interface NewDashboardAclItem {\n  teamId: number;\n  userId: number;\n  role?: OrgRole;\n  permission: PermissionLevel;\n  type: AclTarget;\n}\n\nexport enum PermissionLevel {\n  View = 1,\n  Edit = 2,\n  Admin = 4,\n}\n\nexport enum DataSourcePermissionLevel {\n  Query = 1,\n  Admin = 2,\n}\n\nexport enum AclTarget {\n  Team = 'Team',\n  User = 'User',\n  Viewer = 'Viewer',\n  Editor = 'Editor',\n}\n\nexport interface AclTargetInfo {\n  value: AclTarget;\n  text: string;\n}\n\nexport const dataSourceAclLevels = [\n  { value: DataSourcePermissionLevel.Query, label: 'Query', description: 'Can query data source.' },\n];\n\nexport const dashboardAclTargets: AclTargetInfo[] = [\n  { value: AclTarget.Team, text: 'Team' },\n  { value: AclTarget.User, text: 'User' },\n  { value: AclTarget.Viewer, text: 'Everyone With Viewer Role' },\n  { value: AclTarget.Editor, text: 'Everyone With Editor Role' },\n];\n\nexport const dashboardPermissionLevels: DashboardPermissionInfo[] = [\n  { value: PermissionLevel.View, label: 'View', description: 'Can view dashboards.' },\n  { value: PermissionLevel.Edit, label: 'Edit', description: 'Can add, edit and delete dashboards.' },\n  {\n    value: PermissionLevel.Admin,\n    label: 'Admin',\n    description: 'Can add/remove permissions and can add, edit and delete dashboards.',\n  },\n];\n\nexport enum TeamPermissionLevel {\n  Member = 0,\n  Admin = 4,\n}\n\nexport interface TeamPermissionInfo {\n  value: TeamPermissionLevel;\n  label: string;\n  description: string;\n}\n\nexport const teamsPermissionLevels: TeamPermissionInfo[] = [\n  { value: TeamPermissionLevel.Member, label: 'Member', description: 'Is team member' },\n  {\n    value: TeamPermissionLevel.Admin,\n    label: 'Admin',\n    description: 'Can add/remove permissions, members and delete team.',\n  },\n];\n","var path = 'public/app/plugins/datasource/grafana-azure-monitor-datasource/partials/query.editor.html';\nvar html = \"<query-editor-row query-ctrl=ctrl can-collapse=false has-text-edit-mode=\\\"ctrl.target.queryType === 'Application Insights'\\\">\\n  <div class=gf-form-inline>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label query-keyword width-9\\\">Service</label>\\n      <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n        <select class=\\\"gf-form-input service-dropdown\\\" ng-model=ctrl.target.queryType ng-options=\\\"f as f for f in ['Application Insights', 'Azure Monitor', 'Azure Log Analytics']\\\" ng-change=ctrl.onQueryTypeChange()></select>\\n      </div>\\n    </div>\\n    <div class=gf-form ng-if=\\\"ctrl.target.queryType === 'Azure Monitor' || ctrl.target.queryType === 'Azure Log Analytics'\\\">\\n      <label class=\\\"gf-form-label query-keyword width-9\\\">Subscription</label>\\n      <gf-form-dropdown model=ctrl.target.subscription allow-custom=true lookup-text=true get-options=ctrl.getSubscriptions() on-change=ctrl.onSubscriptionChange() css-class=min-width-12>\\n      </gf-form-dropdown>\\n    </div>\\n    <div class=\\\"gf-form gf-form--grow\\\">\\n      <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n    </div>\\n  </div>\\n  <div ng-if=\\\"ctrl.target.queryType === 'Azure Monitor'\\\">\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-9\\\">Resource Group</label>\\n        <gf-form-dropdown model=ctrl.target.azureMonitor.resourceGroup allow-custom=true lookup-text=true get-options=ctrl.getResourceGroups($query) on-change=ctrl.onResourceGroupChange() css-class=min-width-12>\\n        </gf-form-dropdown>\\n      </div>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-9\\\">Namespace</label>\\n        <gf-form-dropdown model=ctrl.target.azureMonitor.metricDefinition allow-custom=true lookup-text=true get-options=ctrl.getMetricDefinitions($query) on-change=ctrl.onMetricDefinitionChange() css-class=min-width-20>\\n        </gf-form-dropdown>\\n      </div>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-9\\\">Resource Name</label>\\n        <gf-form-dropdown model=ctrl.target.azureMonitor.resourceName allow-custom=true lookup-text=true get-options=ctrl.getResourceNames($query) on-change=ctrl.onResourceNameChange() css-class=min-width-12>\\n        </gf-form-dropdown>\\n      </div>\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n    </div>\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-9\\\">Metric Namespace</label>\\n        <gf-form-dropdown model=ctrl.target.azureMonitor.metricNamespace allow-custom=true lookup-text=true get-options=ctrl.getMetricNamespaces($query) on-change=ctrl.onMetricNamespacesChange() css-class=min-width-12>\\n        </gf-form-dropdown>\\n      </div>\\n      <div class=gf-form>        \\n        <label class=\\\"gf-form-label query-keyword width-9\\\">Metric</label>\\n        <gf-form-dropdown model=ctrl.target.azureMonitor.metricName allow-custom=true lookup-text=true get-options=ctrl.getMetricNames($query) on-change=ctrl.onMetricNameChange() css-class=min-width-12>\\n        </gf-form-dropdown>\\n      </div>\\n      <div class=\\\"gf-form gf-form--grow aggregation-dropdown-wrapper\\\">\\n        <label class=\\\"gf-form-label query-keyword width-9\\\">Aggregation</label>\\n        <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n          <select class=\\\"gf-form-input width-11\\\" ng-model=ctrl.target.azureMonitor.aggregation ng-options=\\\"f as f for f in ctrl.target.azureMonitor.aggOptions\\\" ng-change=ctrl.refresh()></select>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=gf-form-inline>      \\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-9\\\">Time Grain</label>\\n        <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent timegrainunit-dropdown-wrapper\\\">\\n          <select class=gf-form-input ng-model=ctrl.target.azureMonitor.timeGrain ng-options=\\\"f.value as f.text for f in ctrl.target.azureMonitor.timeGrains\\\" ng-change=ctrl.refresh()></select>\\n        </div>\\n      </div>\\n      <div class=gf-form ng-show=\\\"ctrl.target.azureMonitor.timeGrain.trim() === 'auto'\\\">\\n        <label class=gf-form-label>Auto Interval</label>\\n        <label class=gf-form-label>{{ctrl.getAutoInterval()}}</label>\\n      </div>\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n    </div>\\n    <div class=gf-form-inline ng-show=\\\"ctrl.target.azureMonitor.dimensions.length > 0\\\">\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-9\\\">Dimension</label>\\n        <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n          <select class=\\\"gf-form-input min-width-12\\\" ng-model=ctrl.target.azureMonitor.dimension ng-options=\\\"f.value as f.text for f in ctrl.target.azureMonitor.dimensions\\\" ng-change=ctrl.refresh()></select>\\n        </div>\\n      </div>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-3\\\">eq</label>\\n        <input type=text class=\\\"gf-form-input width-17\\\" ng-model=ctrl.target.azureMonitor.dimensionFilter spellcheck=false placeholder=auto ng-blur=ctrl.refresh()>\\n      </div>\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n    </div>\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-9\\\">Legend Format</label>\\n        <input type=text class=\\\"gf-form-input width-30\\\" ng-model=ctrl.target.azureMonitor.alias spellcheck=false placeholder=\\\"alias patterns (see help for more info)\\\" ng-blur=ctrl.refresh()>\\n      </div>\\n\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div ng-if=\\\"ctrl.target.queryType === 'Azure Log Analytics'\\\">\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-9\\\">Workspace</label>\\n        <gf-form-dropdown model=ctrl.target.azureLogAnalytics.workspace allow-custom=true lookup-text=true get-options=ctrl.workspaces on-change=ctrl.refresh() css-class=min-width-12>\\n        </gf-form-dropdown>\\n        <div class=gf-form>\\n          <div class=width-1></div>\\n        </div>\\n        <div class=gf-form>\\n          <button class=\\\"btn btn-primary width-10\\\" ng-click=ctrl.refresh()>Run</button>\\n        </div>\\n        <div class=gf-form>\\n          <label class=gf-form-label>(Run Query: Shift+Enter, Trigger Suggestion: Ctrl+Space)</label>\\n        </div>\\n        <div class=\\\"gf-form gf-form--grow\\\">\\n          <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"gf-form gf-form--grow\\\">\\n      <kusto-editor class=\\\"gf-form gf-form--grow\\\" query=ctrl.target.azureLogAnalytics.query change=ctrl.onLogAnalyticsQueryChange execute=ctrl.onLogAnalyticsQueryExecute variables=ctrl.templateVariables getschema=ctrl.getAzureLogAnalyticsSchema />\\n    </div>\\n\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-7\\\">Format As</label>\\n        <div class=gf-form-select-wrapper>\\n          <select class=\\\"gf-form-input gf-size-auto\\\" ng-model=ctrl.target.azureLogAnalytics.resultFormat ng-options=\\\"f.value as f.text for f in ctrl.resultFormats\\\" ng-change=ctrl.refresh()></select>\\n        </div>\\n      </div>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword\\\" ng-click=\\\"ctrl.showHelp = !ctrl.showHelp\\\">\\n          Show Help\\n          <i class=\\\"fa fa-caret-down\\\" ng-show=ctrl.showHelp></i>\\n          <i class=\\\"fa fa-caret-right\\\" ng-hide=ctrl.showHelp></i>\\n        </label>\\n      </div>\\n      <div class=gf-form ng-show=ctrl.lastQuery>\\n        <label class=\\\"gf-form-label query-keyword\\\" ng-click=\\\"ctrl.showLastQuery = !ctrl.showLastQuery\\\">\\n          Raw Query\\n          <i class=\\\"fa fa-caret-down\\\" ng-show=ctrl.showLastQuery></i>\\n          <i class=\\\"fa fa-caret-right\\\" ng-hide=ctrl.showLastQuery></i>\\n        </label>\\n      </div>\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n    </div>\\n\\n    <div class=gf-form ng-show=ctrl.showLastQuery>\\n      <pre class=gf-form-pre>{{ctrl.lastQuery}}</pre>\\n    </div>\\n    <div class=gf-form ng-show=ctrl.showHelp>\\n      <pre class=\\\"gf-form-pre alert alert-info\\\">\\n    Format as Table:\\n    - return any set of columns\\n\\n    Format as Time series:\\n    - Requires a column of type datetime\\n    - returns the first column with a numeric datatype as the value\\n    - (Optional: returns the first column with type string to represent the series name. If no column is found the column name of the value column is used as series name)\\n\\n    Example Time Series Query:\\n\\n    AzureActivity\\n    | where $__timeFilter()\\n    | summarize count() by Category, bin(TimeGenerated, 60min)\\n    | order by TimeGenerated asc\\n\\n    Macros:\\n    - $__timeFilter() -&gt; TimeGenerated &ge; datetime(2018-06-05T18:09:58.907Z) and TimeGenerated &le; datetime(2018-06-05T20:09:58.907Z)\\n    - $__timeFilter(datetimeColumn) -&gt;  datetimeColumn  &ge; datetime(2018-06-05T18:09:58.907Z) and datetimeColumn &le; datetime(2018-06-05T20:09:58.907Z)\\n    - $__escapeMulti($myTemplateVar) -&gt; $myTemplateVar should be a multi-value template variables that contains illegal characters\\n    - $__contains(aColumn, $myTemplateVar) -&gt; aColumn in ($myTemplateVar)\\n      If using the All option, then check the Include All Option checkbox and in the Custom all value field type in: all. If All is chosen -&gt; 1 == 1\\n\\n    Or build your own conditionals using these built-in variables which just return the values:\\n    - $__timeFrom -&gt;  datetime(2018-06-05T18:09:58.907Z)\\n    - $__timeTo -&gt; datetime(2018-06-05T20:09:58.907Z)\\n    - $__interval -&gt; 5m\\n\\n    Examples:\\n    - ¡ where $__timeFilter\\n    - | where TimeGenerated &ge; $__timeFrom and TimeGenerated &le; $__timeTo\\n    - | summarize count() by Category, bin(TimeGenerated, $__interval)\\n      </pre>\\n    </div>\\n\\n  </div>\\n\\n  <div ng-if=\\\"ctrl.target.queryType === 'Application Insights'\\\">\\n    <div ng-show=!ctrl.target.appInsights.rawQuery>\\n      <div class=gf-form-inline>\\n        <div class=gf-form>\\n          <label class=\\\"gf-form-label query-keyword width-9\\\">Metric</label>\\n          <gf-form-dropdown model=ctrl.target.appInsights.metricName allow-custom=true lookup-text=true get-options=ctrl.getAppInsightsMetricNames($query) on-change=ctrl.onAppInsightsMetricNameChange() css-class=min-width-20>\\n          </gf-form-dropdown>\\n        </div>\\n        <div class=gf-form>\\n          <label class=\\\"gf-form-label query-keyword width-9\\\">Aggregation</label>\\n          <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n            <select class=gf-form-input ng-model=ctrl.target.appInsights.aggregation ng-options=\\\"f as f for f in ctrl.target.appInsights.aggOptions\\\" ng-change=ctrl.refresh()></select>\\n          </div>\\n        </div>\\n        <div class=\\\"gf-form gf-form--grow\\\">\\n          <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n        </div>\\n      </div>\\n      <div class=gf-form-inline>\\n        <div class=gf-form>\\n          <label class=\\\"gf-form-label query-keyword width-9\\\">Group By</label>\\n          <gf-form-dropdown allow-custom=true ng-hide=\\\"ctrl.target.appInsights.groupBy !== 'none'\\\" model=ctrl.target.appInsights.groupBy lookup-text=true get-options=ctrl.getAppInsightsGroupBySegments($query) on-change=ctrl.refresh() css-class=min-width-20>\\n          </gf-form-dropdown>\\n          <label class=\\\"gf-form-label min-width-20 pointer\\\" ng-hide=\\\"ctrl.target.appInsights.groupBy === 'none'\\\" ng-click=ctrl.resetAppInsightsGroupBy()>{{ctrl.target.appInsights.groupBy}}\\n            <i class=\\\"fa fa-remove\\\"></i>\\n          </label>\\n        </div>\\n        <div class=gf-form-inline>\\n          <div class=gf-form>\\n            <label class=\\\"gf-form-label query-keyword width-9\\\">Filter</label>\\n            <input type=text class=\\\"gf-form-input width-17\\\" ng-model=ctrl.target.appInsights.filter spellcheck=false placeholder=\\\"your/groupby eq 'a_value'\\\" ng-blur=ctrl.refresh()>\\n          </div>\\n        </div>\\n        <div class=\\\"gf-form gf-form--grow\\\">\\n          <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n        </div>\\n      </div>\\n\\n      <div class=gf-form-inline>\\n        <div class=gf-form>\\n          <label class=\\\"gf-form-label query-keyword width-9\\\">Time Grain</label>\\n          <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n            <select class=gf-form-input ng-model=ctrl.target.appInsights.timeGrainType ng-options=\\\"f as f for f in ['auto', 'none', 'specific']\\\" ng-change=ctrl.updateTimeGrainType()></select>\\n          </div>\\n        </div>\\n        <div class=gf-form ng-hide=\\\"ctrl.target.appInsights.timeGrainType === 'auto' || ctrl.target.appInsights.timeGrainType === 'none'\\\">\\n          <input type=text class=\\\"gf-form-input width-3\\\" ng-model=ctrl.target.appInsights.timeGrain spellcheck=false placeholder=\\\"\\\" ng-blur=ctrl.refresh()>\\n        </div>\\n        <div class=gf-form ng-hide=\\\"ctrl.target.appInsights.timeGrainType === 'auto' || ctrl.target.appInsights.timeGrainType === 'none'\\\">\\n          <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent timegrainunit-dropdown-wrapper\\\">\\n            <select class=gf-form-input ng-model=ctrl.target.appInsights.timeGrainUnit ng-options=\\\"f as f for f in ['minute', 'hour', 'day', 'month', 'year']\\\" ng-change=ctrl.refresh()></select>\\n          </div>\\n        </div>\\n        <div class=gf-form ng-hide=\\\"ctrl.target.appInsights.timeGrainType !== 'auto'\\\">\\n          <label class=gf-form-label>Auto Interval</label>\\n          <label class=gf-form-label>{{ctrl.getAppInsightsAutoInterval()}}</label>\\n        </div>\\n        <div class=\\\"gf-form gf-form--grow\\\">\\n          <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n        </div>\\n      </div>\\n      <div class=gf-form-inline>\\n        <div class=gf-form>\\n          <label class=\\\"gf-form-label query-keyword width-9\\\">Legend Format</label>\\n          <input type=text class=\\\"gf-form-input width-30\\\" ng-model=ctrl.target.appInsights.alias spellcheck=false placeholder=\\\"alias patterns (see help for more info)\\\" ng-blur=ctrl.refresh()>\\n        </div>\\n\\n        <div class=\\\"gf-form gf-form--grow\\\">\\n          <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n    <div ng-show=ctrl.target.appInsights.rawQuery>\\n      <!-- <div class=\\\"gf-form\\\">\\n        <textarea rows=\\\"3\\\" class=\\\"gf-form-input\\\" ng-model=\\\"ctrl.target.appInsights.rawQueryString\\\" spellcheck=\\\"false\\\"\\n          placeholder=\\\"Application Insights Query\\\" ng-model-onblur ng-change=\\\"ctrl.refresh()\\\"></textarea>\\n      </div> -->\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <kusto-editor class=\\\"gf-form gf-form--grow\\\" query=ctrl.target.appInsights.rawQueryString placeholder=\\\"'Application Insights Query'\\\" change=ctrl.onAppInsightsQueryChange execute=ctrl.onAppInsightsQueryExecute variables=ctrl.templateVariables getschema=ctrl.getAppInsightsQuerySchema />\\n      </div>\\n      <div class=gf-form-inline>\\n        <div class=gf-form>\\n          <label class=\\\"gf-form-label query-keyword width-9\\\">X-axis</label>\\n          <gf-form-dropdown model=ctrl.target.appInsights.xaxis allow-custom=true placeholder=\\\"eg. 'timestamp'\\\" get-options=ctrl.getAppInsightsColumns($query) on-change=ctrl.onAppInsightsColumnChange() css-class=min-width-20>\\n          </gf-form-dropdown>\\n        </div>\\n        <div class=gf-form>\\n          <label class=\\\"gf-form-label query-keyword width-9\\\">Y-axis(es)</label>\\n          <gf-form-dropdown model=ctrl.target.appInsights.yaxis allow-custom=true get-options=ctrl.getAppInsightsColumns($query) on-change=ctrl.onAppInsightsColumnChange() css-class=min-width-20>\\n          </gf-form-dropdown>\\n        </div>\\n        <div class=\\\"gf-form gf-form--grow\\\">\\n          <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n        </div>\\n      </div>\\n      <div class=gf-form-inline>\\n        <div class=gf-form>\\n          <label class=\\\"gf-form-label query-keyword width-9\\\">Split On</label>\\n          <gf-form-dropdown model=ctrl.target.appInsights.spliton allow-custom=true get-options=ctrl.getAppInsightsColumns($query) on-change=ctrl.onAppInsightsColumnChange() css-class=min-width-20>\\n          </gf-form-dropdown>\\n        </div>\\n        <div class=\\\"gf-form gf-form--grow\\\">\\n          <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=gf-form ng-show=ctrl.lastQueryError>\\n    <pre class=\\\"gf-form-pre alert alert-error\\\">{{ctrl.lastQueryError}}</pre>\\n  </div>\\n</query-editor-row>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { store } from '../../store/store';\n\nexport function connectWithStore(WrappedComponent: any, ...args: any[]) {\n  const ConnectedWrappedComponent = (connect as any)(...args)(WrappedComponent);\n\n  return (props: any) => {\n    return <ConnectedWrappedComponent {...props} store={store} />;\n  };\n}\n","import _ from 'lodash';\nimport { sanitize, escapeHtml } from 'app/core/utils/text';\nimport { renderMarkdown } from '@grafana/data';\n\nimport config from 'app/core/config';\nimport { profiler } from 'app/core/core';\nimport { Emitter } from 'app/core/core';\nimport getFactors from 'app/core/utils/factors';\nimport {\n  duplicatePanel,\n  removePanel,\n  copyPanel as copyPanelUtil,\n  editPanelJson as editPanelJsonUtil,\n  sharePanel as sharePanelUtil,\n  calculateInnerPanelHeight,\n} from 'app/features/dashboard/utils/panel';\n\nimport { GRID_COLUMN_COUNT } from 'app/core/constants';\nimport { auto } from 'angular';\nimport { TemplateSrv } from '../templating/template_srv';\nimport { PanelPluginMeta } from '@grafana/ui/src/types/panel';\nimport { getPanelLinksSupplier } from './panellinks/linkSuppliers';\n\nexport class PanelCtrl {\n  panel: any;\n  error: any;\n  dashboard: any;\n  pluginName: string;\n  pluginId: string;\n  editorTabs: any;\n  $scope: any;\n  $injector: auto.IInjectorService;\n  $location: any;\n  $timeout: any;\n  inspector: any;\n  editModeInitiated: boolean;\n  height: any;\n  containerHeight: any;\n  events: Emitter;\n  loading: boolean;\n  timing: any;\n  maxPanelsPerRowOptions: number[];\n\n  constructor($scope: any, $injector: auto.IInjectorService) {\n    this.$injector = $injector;\n    this.$location = $injector.get('$location');\n    this.$scope = $scope;\n    this.$timeout = $injector.get('$timeout');\n    this.editorTabs = [];\n    this.events = this.panel.events;\n    this.timing = {}; // not used but here to not break plugins\n\n    const plugin = config.panels[this.panel.type];\n    if (plugin) {\n      this.pluginId = plugin.id;\n      this.pluginName = plugin.name;\n    }\n\n    $scope.$on('component-did-mount', () => this.panelDidMount());\n  }\n\n  panelDidMount() {\n    this.events.emit('component-did-mount');\n    this.dashboard.panelInitialized(this.panel);\n  }\n\n  renderingCompleted() {\n    profiler.renderingCompleted();\n  }\n\n  refresh() {\n    this.panel.refresh();\n  }\n\n  publishAppEvent(evtName: string, evt: any) {\n    this.$scope.$root.appEvent(evtName, evt);\n  }\n\n  changeView(fullscreen: boolean, edit: boolean) {\n    this.publishAppEvent('panel-change-view', {\n      fullscreen,\n      edit,\n      panelId: this.panel.id,\n    });\n  }\n\n  viewPanel() {\n    this.changeView(true, false);\n  }\n\n  editPanel() {\n    this.changeView(true, true);\n  }\n\n  exitFullscreen() {\n    this.changeView(false, false);\n  }\n\n  initEditMode() {\n    if (!this.editModeInitiated) {\n      this.editModeInitiated = true;\n      this.events.emit('init-edit-mode', null);\n      this.maxPanelsPerRowOptions = getFactors(GRID_COLUMN_COUNT);\n    }\n  }\n\n  addEditorTab(title: string, directiveFn: any, index?: number, icon?: any) {\n    const editorTab = { title, directiveFn, icon };\n\n    if (_.isString(directiveFn)) {\n      editorTab.directiveFn = () => {\n        return { templateUrl: directiveFn };\n      };\n    }\n\n    if (index) {\n      this.editorTabs.splice(index, 0, editorTab);\n    } else {\n      this.editorTabs.push(editorTab);\n    }\n  }\n\n  async getMenu() {\n    const menu = [];\n    menu.push({\n      text: 'View',\n      click: 'ctrl.viewPanel();',\n      icon: 'gicon gicon-viewer',\n      shortcut: 'v',\n    });\n\n    if (this.dashboard.meta.canEdit) {\n      menu.push({\n        text: 'Edit',\n        click: 'ctrl.editPanel();',\n        role: 'Editor',\n        icon: 'gicon gicon-editor',\n        shortcut: 'e',\n      });\n    }\n\n    menu.push({\n      text: 'Share',\n      click: 'ctrl.sharePanel();',\n      icon: 'fa fa-fw fa-share',\n      shortcut: 'p s',\n    });\n\n    // Additional items from sub-class\n    menu.push(...(await this.getAdditionalMenuItems()));\n\n    const extendedMenu = this.getExtendedMenu();\n    menu.push({\n      text: 'More ...',\n      click: '',\n      icon: 'fa fa-fw fa-cube',\n      submenu: extendedMenu,\n    });\n\n    if (this.dashboard.meta.canEdit) {\n      menu.push({ divider: true, role: 'Editor' });\n      menu.push({\n        text: 'Remove',\n        click: 'ctrl.removePanel();',\n        role: 'Editor',\n        icon: 'fa fa-fw fa-trash',\n        shortcut: 'p r',\n      });\n    }\n\n    return menu;\n  }\n\n  getExtendedMenu() {\n    const menu = [];\n    if (!this.panel.fullscreen && this.dashboard.meta.canEdit) {\n      menu.push({\n        text: 'Duplicate',\n        click: 'ctrl.duplicate()',\n        role: 'Editor',\n        shortcut: 'p d',\n      });\n\n      menu.push({\n        text: 'Copy',\n        click: 'ctrl.copyPanel()',\n        role: 'Editor',\n      });\n    }\n\n    menu.push({\n      text: 'Panel JSON',\n      click: 'ctrl.editPanelJson(); dismiss();',\n    });\n\n    this.events.emit('init-panel-actions', menu);\n    return menu;\n  }\n\n  // Override in sub-class to add items before extended menu\n  async getAdditionalMenuItems(): Promise<any[]> {\n    return [];\n  }\n\n  otherPanelInFullscreenMode() {\n    return this.dashboard.meta.fullscreen && !this.panel.fullscreen;\n  }\n\n  calculatePanelHeight(containerHeight: number) {\n    this.containerHeight = containerHeight;\n    this.height = calculateInnerPanelHeight(this.panel, containerHeight);\n  }\n\n  render(payload?: any) {\n    this.events.emit('render', payload);\n  }\n\n  duplicate() {\n    duplicatePanel(this.dashboard, this.panel);\n  }\n\n  removePanel() {\n    removePanel(this.dashboard, this.panel, true);\n  }\n\n  editPanelJson() {\n    editPanelJsonUtil(this.dashboard, this.panel);\n  }\n\n  copyPanel() {\n    copyPanelUtil(this.panel);\n  }\n\n  sharePanel() {\n    sharePanelUtil(this.dashboard, this.panel);\n  }\n\n  getInfoMode() {\n    if (this.error) {\n      return 'error';\n    }\n    if (!!this.panel.description) {\n      return 'info';\n    }\n    if (this.panel.links && this.panel.links.length) {\n      return 'links';\n    }\n    return '';\n  }\n\n  getInfoContent(options: { mode: string }) {\n    const { panel } = this;\n    let markdown = panel.description || '';\n\n    if (options.mode === 'tooltip') {\n      markdown = this.error || panel.description || '';\n    }\n\n    const templateSrv: TemplateSrv = this.$injector.get('templateSrv');\n    const interpolatedMarkdown = templateSrv.replace(markdown, panel.scopedVars);\n    let html = '<div class=\"markdown-html panel-info-content\">';\n\n    const md = renderMarkdown(interpolatedMarkdown);\n    html += config.disableSanitizeHtml ? md : sanitize(md);\n\n    if (panel.links && panel.links.length > 0) {\n      const interpolatedLinks = getPanelLinksSupplier(panel).getLinks();\n\n      html += '<ul class=\"panel-info-corner-links\">';\n      for (const link of interpolatedLinks) {\n        html +=\n          '<li><a class=\"panel-menu-link\" href=\"' +\n          escapeHtml(link.href) +\n          '\" target=\"' +\n          escapeHtml(link.target) +\n          '\">' +\n          escapeHtml(link.title) +\n          '</a></li>';\n      }\n      html += '</ul>';\n    }\n\n    html += '</div>';\n\n    return html;\n  }\n\n  // overriden from react\n  onPluginTypeChange = (plugin: PanelPluginMeta) => {};\n}\n","import React, { FC } from 'react';\nimport { AlertBox } from 'app/core/components/AlertBox/AlertBox';\nimport { AppNotificationSeverity, LdapConnectionInfo, LdapServerInfo } from 'app/types';\n\ninterface Props {\n  ldapConnectionInfo: LdapConnectionInfo;\n}\n\nexport const LdapConnectionStatus: FC<Props> = ({ ldapConnectionInfo }) => {\n  return (\n    <>\n      <h3 className=\"page-heading\">LDAP Connection</h3>\n      <div className=\"gf-form-group\">\n        <div className=\"gf-form\">\n          <table className=\"filter-table form-inline\">\n            <thead>\n              <tr>\n                <th>Host</th>\n                <th colSpan={2}>Port</th>\n              </tr>\n            </thead>\n            <tbody>\n              {ldapConnectionInfo &&\n                ldapConnectionInfo.map((serverInfo, index) => (\n                  <tr key={index}>\n                    <td>{serverInfo.host}</td>\n                    <td>{serverInfo.port}</td>\n                    <td>\n                      {serverInfo.available ? (\n                        <i className=\"fa fa-fw fa-check pull-right\" />\n                      ) : (\n                        <i className=\"fa fa-fw fa-exclamation-triangle pull-right\" />\n                      )}\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n        <div className=\"gf-form-group\">\n          <LdapErrorBox ldapConnectionInfo={ldapConnectionInfo} />\n        </div>\n      </div>\n    </>\n  );\n};\n\ninterface LdapConnectionErrorProps {\n  ldapConnectionInfo: LdapConnectionInfo;\n}\n\nexport const LdapErrorBox: FC<LdapConnectionErrorProps> = ({ ldapConnectionInfo }) => {\n  const hasError = ldapConnectionInfo.some(info => info.error);\n  if (!hasError) {\n    return null;\n  }\n\n  const connectionErrors: LdapServerInfo[] = [];\n  ldapConnectionInfo.forEach(info => {\n    if (info.error) {\n      connectionErrors.push(info);\n    }\n  });\n\n  const errorElements = connectionErrors.map((info, index) => (\n    <div key={index}>\n      <span style={{ fontWeight: 500 }}>\n        {info.host}:{info.port}\n        <br />\n      </span>\n      <span>{info.error}</span>\n      {index !== connectionErrors.length - 1 && (\n        <>\n          <br />\n          <br />\n        </>\n      )}\n    </div>\n  ));\n\n  return <AlertBox title=\"Connection error\" severity={AppNotificationSeverity.Error} body={errorElements} />;\n};\n","const TAG_COLORS = [\n  '#E24D42',\n  '#1F78C1',\n  '#BA43A9',\n  '#705DA0',\n  '#466803',\n  '#508642',\n  '#447EBC',\n  '#C15C17',\n  '#890F02',\n  '#757575',\n  '#0A437C',\n  '#6D1F62',\n  '#584477',\n  '#629E51',\n  '#2F4F4F',\n  '#BF1B00',\n  '#806EB7',\n  '#8a2eb8',\n  '#699e00',\n  '#000000',\n  '#3F6833',\n  '#2F575E',\n  '#99440A',\n  '#E0752D',\n  '#0E4AB4',\n  '#58140C',\n  '#052B51',\n  '#511749',\n  '#3F2B5B',\n];\n\nconst TAG_BORDER_COLORS = [\n  '#FF7368',\n  '#459EE7',\n  '#E069CF',\n  '#9683C6',\n  '#6C8E29',\n  '#76AC68',\n  '#6AA4E2',\n  '#E7823D',\n  '#AF3528',\n  '#9B9B9B',\n  '#3069A2',\n  '#934588',\n  '#7E6A9D',\n  '#88C477',\n  '#557575',\n  '#E54126',\n  '#A694DD',\n  '#B054DE',\n  '#8FC426',\n  '#262626',\n  '#658E59',\n  '#557D84',\n  '#BF6A30',\n  '#FF9B53',\n  '#3470DA',\n  '#7E3A32',\n  '#2B5177',\n  '#773D6F',\n  '#655181',\n];\n\n/**\n * Returns tag badge background and border colors based on hashed tag name.\n * @param name tag name\n */\nexport function getTagColorsFromName(name: string): { color: string; borderColor: string } {\n  const hash = djb2(name.toLowerCase());\n  const color = TAG_COLORS[Math.abs(hash % TAG_COLORS.length)];\n  const borderColor = TAG_BORDER_COLORS[Math.abs(hash % TAG_BORDER_COLORS.length)];\n  return { color, borderColor };\n}\n\nfunction djb2(str: string) {\n  let hash = 5381;\n  for (let i = 0; i < str.length; i++) {\n    hash = (hash << 5) + hash + str.charCodeAt(i); /* hash * 33 + c */\n  }\n  return hash;\n}\n\nexport default {\n  getTagColorsFromName,\n};\n","import { PureComponent } from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface Props {\n  className?: string;\n  root?: HTMLElement;\n}\n\nexport class Portal extends PureComponent<Props> {\n  node: HTMLElement = document.createElement('div');\n  portalRoot: HTMLElement;\n\n  constructor(props: Props) {\n    super(props);\n    const { className, root = document.body } = this.props;\n\n    if (className) {\n      this.node.classList.add(className);\n    }\n\n    this.portalRoot = root;\n    this.portalRoot.appendChild(this.node);\n  }\n\n  componentWillUnmount() {\n    this.portalRoot.removeChild(this.node);\n  }\n\n  render() {\n    return ReactDOM.createPortal(this.props.children, this.node);\n  }\n}\n","/* Flot plugin for showing crosshairs when the mouse hovers over the plot.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nThe plugin supports these options:\n\n\tcrosshair: {\n\t\tmode: null or \"x\" or \"y\" or \"xy\"\n\t\tcolor: color\n\t\tlineWidth: number\n\t}\n\nSet the mode to one of \"x\", \"y\" or \"xy\". The \"x\" mode enables a vertical\ncrosshair that lets you trace the values on the x axis, \"y\" enables a\nhorizontal crosshair and \"xy\" enables them both. \"color\" is the color of the\ncrosshair (default is \"rgba(170, 0, 0, 0.80)\"), \"lineWidth\" is the width of\nthe drawn lines (default is 1).\n\nThe plugin also adds four public methods:\n\n  - setCrosshair( pos )\n\n    Set the position of the crosshair. Note that this is cleared if the user\n    moves the mouse. \"pos\" is in coordinates of the plot and should be on the\n    form { x: xpos, y: ypos } (you can use x2/x3/... if you're using multiple\n    axes), which is coincidentally the same format as what you get from a\n    \"plothover\" event. If \"pos\" is null, the crosshair is cleared.\n\n  - clearCrosshair()\n\n    Clear the crosshair.\n\n  - lockCrosshair(pos)\n\n    Cause the crosshair to lock to the current location, no longer updating if\n    the user moves the mouse. Optionally supply a position (passed on to\n    setCrosshair()) to move it to.\n\n    Example usage:\n\n\tvar myFlot = $.plot( $(\"#graph\"), ..., { crosshair: { mode: \"x\" } } };\n\t$(\"#graph\").bind( \"plothover\", function ( evt, position, item ) {\n\t\tif ( item ) {\n\t\t\t// Lock the crosshair to the data point being hovered\n\t\t\tmyFlot.lockCrosshair({\n\t\t\t\tx: item.datapoint[ 0 ],\n\t\t\t\ty: item.datapoint[ 1 ]\n\t\t\t});\n\t\t} else {\n\t\t\t// Return normal crosshair operation\n\t\t\tmyFlot.unlockCrosshair();\n\t\t}\n\t});\n\n  - unlockCrosshair()\n\n    Free the crosshair to move again after locking it.\n*/\n\n(function ($) {\n    var options = {\n        crosshair: {\n            mode: null, // one of null, \"x\", \"y\" or \"xy\",\n            color: \"rgba(170, 0, 0, 0.80)\",\n            lineWidth: 1\n        }\n    };\n    \n    function init(plot) {\n        // position of crosshair in pixels\n        var crosshair = { x: -1, y: -1, locked: false };\n\n        plot.setCrosshair = function setCrosshair(pos) {\n            if (!pos)\n                crosshair.x = -1;\n            else {\n                var o = plot.p2c(pos);\n                crosshair.x = Math.max(0, Math.min(o.left, plot.width()));\n                crosshair.y = Math.max(0, Math.min(o.top, plot.height()));\n            }\n            \n            plot.triggerRedrawOverlay();\n        };\n        \n        plot.clearCrosshair = plot.setCrosshair; // passes null for pos\n        \n        plot.lockCrosshair = function lockCrosshair(pos) {\n            if (pos)\n                plot.setCrosshair(pos);\n            crosshair.locked = true;\n        };\n\n        plot.unlockCrosshair = function unlockCrosshair() {\n            crosshair.locked = false;\n        };\n\n        function onMouseOut(e) {\n            if (crosshair.locked)\n                return;\n\n            if (crosshair.x != -1) {\n                crosshair.x = -1;\n                plot.triggerRedrawOverlay();\n            }\n        }\n\n        function onMouseMove(e) {\n            if (crosshair.locked)\n                return;\n                \n            if (plot.getSelection && plot.getSelection()) {\n                crosshair.x = -1; // hide the crosshair while selecting\n                return;\n            }\n                \n            var offset = plot.offset();\n            crosshair.x = Math.max(0, Math.min(e.pageX - offset.left, plot.width()));\n            crosshair.y = Math.max(0, Math.min(e.pageY - offset.top, plot.height()));\n            plot.triggerRedrawOverlay();\n        }\n        \n        plot.hooks.bindEvents.push(function (plot, eventHolder) {\n            if (!plot.getOptions().crosshair.mode)\n                return;\n\n            eventHolder.mouseout(onMouseOut);\n            eventHolder.mousemove(onMouseMove);\n        });\n\n        plot.hooks.drawOverlay.push(function (plot, ctx) {\n            var c = plot.getOptions().crosshair;\n            if (!c.mode)\n                return;\n\n            var plotOffset = plot.getPlotOffset();\n            \n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            if (crosshair.x != -1) {\n                var adj = plot.getOptions().crosshair.lineWidth % 2 ? 0.5 : 0;\n\n                ctx.strokeStyle = c.color;\n                ctx.lineWidth = c.lineWidth;\n                ctx.lineJoin = \"round\";\n\n                ctx.beginPath();\n                if (c.mode.indexOf(\"x\") != -1) {\n                    var drawX = Math.floor(crosshair.x) + adj;\n                    ctx.moveTo(drawX, 0);\n                    ctx.lineTo(drawX, plot.height());\n                }\n                if (c.mode.indexOf(\"y\") != -1) {\n                    var drawY = Math.floor(crosshair.y) + adj;\n                    ctx.moveTo(0, drawY);\n                    ctx.lineTo(plot.width(), drawY);\n                }\n                ctx.stroke();\n            }\n            ctx.restore();\n        });\n\n        plot.hooks.shutdown.push(function (plot, eventHolder) {\n            eventHolder.unbind(\"mouseout\", onMouseOut);\n            eventHolder.unbind(\"mousemove\", onMouseMove);\n        });\n    }\n    \n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: 'crosshair',\n        version: '1.0'\n    });\n})(jQuery);\n","import React, { CSSProperties, FC } from 'react';\nimport Transition from 'react-transition-group/Transition';\n\ninterface Style {\n  transition?: string;\n  overflow?: string;\n}\n\n// When animating using max-height we need to use a static value.\n// If this is not enough, pass in <SlideDown maxHeight=\"....\nconst defaultMaxHeight = '200px';\nconst defaultDuration = 200;\n\nexport const defaultStyle: Style = {\n  transition: `max-height ${defaultDuration}ms ease-in-out`,\n  overflow: 'hidden',\n};\n\nexport interface Props {\n  children: React.ReactNode;\n  in: boolean;\n  maxHeight?: number;\n  style?: CSSProperties;\n}\n\nexport const SlideDown: FC<Props> = ({ children, in: inProp, maxHeight = defaultMaxHeight, style = defaultStyle }) => {\n  // There are 4 main states a Transition can be in:\n  // ENTERING, ENTERED, EXITING, EXITED\n  // https://reactcommunity.or[g/react-transition-group/\n  const transitionStyles: { [str: string]: CSSProperties } = {\n    exited: { maxHeight: 0 },\n    entering: { maxHeight: maxHeight },\n    entered: { maxHeight: 'unset', overflow: 'visible' },\n    exiting: { maxHeight: 0 },\n  };\n\n  return (\n    <Transition in={inProp} timeout={defaultDuration}>\n      {state => (\n        <div\n          style={{\n            ...style,\n            ...transitionStyles[state],\n          }}\n        >\n          {children}\n        </div>\n      )}\n    </Transition>\n  );\n};\n","import { ActionOf, ActionCreator } from './actionCreatorFactory';\nimport { Reducer } from 'redux';\n\nexport type Mapper<State, Payload> = (state: State, action: ActionOf<Payload>) => State;\n\nexport interface MapperConfig<State, Payload> {\n  filter: ActionCreator<Payload>;\n  mapper: Mapper<State, Payload>;\n}\n\nexport interface AddMapper<State> {\n  addMapper: <Payload>(config: MapperConfig<State, Payload>) => CreateReducer<State>;\n}\n\nexport interface CreateReducer<State> extends AddMapper<State> {\n  create: () => Reducer<State, ActionOf<any>>;\n}\n\nexport const reducerFactory = <State>(initialState: State): AddMapper<State> => {\n  const allMappers: { [key: string]: Mapper<State, any> } = {};\n\n  const addMapper = <Payload>(config: MapperConfig<State, Payload>): CreateReducer<State> => {\n    if (allMappers[config.filter.type]) {\n      throw new Error(`There is already a mapper defined with the type ${config.filter.type}`);\n    }\n\n    allMappers[config.filter.type] = config.mapper;\n\n    return instance;\n  };\n\n  const create = (): Reducer<State, ActionOf<any>> => (state: State = initialState, action: ActionOf<any>): State => {\n    const mapper = allMappers[action.type];\n\n    if (mapper) {\n      return mapper(state, action);\n    }\n\n    return state;\n  };\n\n  const instance: CreateReducer<State> = { addMapper, create };\n\n  return instance;\n};\n","export * from './actionCreatorFactory';\nexport * from './reducerFactory';\n","var path = 'public/app/features/alerting/partials/notifications_list.html';\nvar html = \"<page-header model=ctrl.navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\">\\n\\n  <div ng-if=ctrl.notifications.length>\\n    <div class=page-action-bar>\\n      <div class=page-action-bar__spacer>\\n      </div>\\n\\n      <a href=alerting/notification/new class=\\\"btn btn-primary\\\">\\n        New channel\\n      </a>\\n    </div>\\n\\n    <table class=\\\"filter-table filter-table--hover\\\">\\n      <thead>\\n        <th style=min-width:200px>\\n          <strong>Name</strong>\\n        </th>\\n        <th style=min-width:100px>Type</th>\\n        <th style=width:1%></th>\\n      </thead>\\n      <tbody>\\n        <tr ng-repeat=\\\"notification in ctrl.notifications\\\">\\n          <td class=link-td>\\n            <a href=alerting/notification/{{notification.id}}/edit>\\n              {{notification.name}}\\n            </a>\\n          </td>\\n          <td class=link-td>\\n            <a href=alerting/notification/{{notification.id}}/edit>\\n              {{notification.type}}\\n            </a>\\n          </td>\\n          <td class=text-right>\\n            <span class=\\\"btn btn-secondary btn-small\\\" ng-show=\\\"notification.isDefault == true\\\">\\n              default\\n            </span>\\n            <a ng-click=ctrl.deleteNotification(notification.id) class=\\\"btn btn-danger btn-small\\\">\\n              <i class=\\\"fa fa-remove\\\"></i>\\n            </a>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n  <div ng-if=\\\"ctrl.notifications.length === 0\\\">\\n    <empty-list-cta title=\\\"'There are no notification channels defined yet'\\\" buttonicon=\\\"'gicon gicon-alert-notification-channel'\\\" buttonlink=\\\"'alerting/notification/new'\\\" buttontitle=\\\"'Add channel'\\\" protip=\\\"'You can include images in your alert notifications.'\\\" protiplink=\\\"'http://docs.grafana.org/alerting/notifications/'\\\" protiplinktitle=\\\"'Learn more'\\\" protiptarget=\\\"'_blank'\\\"/>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import marked, { MarkedOptions } from 'marked';\n\nconst defaultMarkedOptions: MarkedOptions = {\n  renderer: new marked.Renderer(),\n  pedantic: false,\n  gfm: true,\n  tables: true,\n  sanitize: true,\n  smartLists: true,\n  smartypants: false,\n  xhtml: false,\n};\n\nexport function setMarkdownOptions(optionsOverride?: MarkedOptions) {\n  marked.setOptions({ ...defaultMarkedOptions, ...optionsOverride });\n}\n\nexport function renderMarkdown(str?: string): string {\n  return marked(str || '');\n}\n","export interface TextMatch {\n  text: string;\n  start: number;\n  length: number;\n  end: number;\n}\n\n/**\n * Adapt findMatchesInText for react-highlight-words findChunks handler.\n * See https://github.com/bvaughn/react-highlight-words#props\n */\nexport function findHighlightChunksInText({\n  searchWords,\n  textToHighlight,\n}: {\n  searchWords: string[];\n  textToHighlight: string;\n}) {\n  return searchWords.reduce((acc: any, term: string) => [...acc, ...findMatchesInText(textToHighlight, term)], []);\n}\n\nconst cleanNeedle = (needle: string): string => {\n  return needle.replace(/[[{(][\\w,.-?:*+]+$/, '');\n};\n\n/**\n * Returns a list of substring regexp matches.\n */\nexport function findMatchesInText(haystack: string, needle: string): TextMatch[] {\n  // Empty search can send re.exec() into infinite loop, exit early\n  if (!haystack || !needle) {\n    return [];\n  }\n  const matches: TextMatch[] = [];\n  const { cleaned, flags } = parseFlags(cleanNeedle(needle));\n  let regexp: RegExp;\n  try {\n    regexp = new RegExp(`(?:${cleaned})`, flags);\n  } catch (error) {\n    return matches;\n  }\n  haystack.replace(regexp, (substring, ...rest) => {\n    if (substring) {\n      const offset = rest[rest.length - 2];\n      matches.push({\n        text: substring,\n        start: offset,\n        length: substring.length,\n        end: offset + substring.length,\n      });\n    }\n    return '';\n  });\n  return matches;\n}\n\nconst CLEAR_FLAG = '-';\nconst FLAGS_REGEXP = /\\(\\?([ims-]+)\\)/g;\n\n/**\n * Converts any mode modifers in the text to the Javascript equivalent flag\n */\nexport function parseFlags(text: string): { cleaned: string; flags: string } {\n  const flags: Set<string> = new Set(['g']);\n\n  const cleaned = text.replace(FLAGS_REGEXP, (str, group) => {\n    const clearAll = group.startsWith(CLEAR_FLAG);\n\n    for (let i = 0; i < group.length; ++i) {\n      const flag = group.charAt(i);\n      if (clearAll || group.charAt(i - 1) === CLEAR_FLAG) {\n        flags.delete(flag);\n      } else if (flag !== CLEAR_FLAG) {\n        flags.add(flag);\n      }\n    }\n    return ''; // Remove flag from text\n  });\n\n  return {\n    cleaned: cleaned,\n    flags: Array.from(flags).join(''),\n  };\n}\n","export * from './string';\nexport * from './markdown';\nexport * from './text';\n","import React from 'react';\nimport { Mark, Node, Decoration } from 'slate';\nimport { Editor } from '@grafana/slate-react';\nimport { Record } from 'immutable';\n\nimport TOKEN_MARK from './TOKEN_MARK';\n\nexport interface OptionsFormat {\n  // Determine which node should be highlighted\n  onlyIn?: (node: Node) => boolean;\n  // Returns the syntax for a node that should be highlighted\n  getSyntax?: (node: Node) => string;\n  // Render a highlighting mark in a highlighted node\n  renderMark?: ({ mark, children }: { mark: Mark; children: React.ReactNode }) => void | React.ReactNode;\n}\n\n/**\n * Default filter for code blocks\n */\nfunction defaultOnlyIn(node: Node): boolean {\n  return node.object === 'block' && node.type === 'code_block';\n}\n\n/**\n * Default getter for syntax\n */\nfunction defaultGetSyntax(node: Node): string {\n  return 'javascript';\n}\n\n/**\n * Default rendering for decorations\n */\nfunction defaultRenderDecoration(\n  props: { children: React.ReactNode; decoration: Decoration },\n  editor: Editor,\n  next: () => any\n): void | React.ReactNode {\n  const { decoration } = props;\n  if (decoration.type !== TOKEN_MARK) {\n    return next();\n  }\n\n  const className = decoration.data.get('className');\n  return <span className={className}>{props.children}</span>;\n}\n\n/**\n * The plugin options\n */\nclass Options\n  extends Record({\n    onlyIn: defaultOnlyIn,\n    getSyntax: defaultGetSyntax,\n    renderDecoration: defaultRenderDecoration,\n  })\n  implements OptionsFormat {\n  readonly onlyIn!: (node: Node) => boolean;\n  readonly getSyntax!: (node: Node) => string;\n  readonly renderDecoration!: (\n    {\n      decoration,\n      children,\n    }: {\n      decoration: Decoration;\n      children: React.ReactNode;\n    },\n    editor: Editor,\n    next: () => any\n  ) => void | React.ReactNode;\n\n  constructor(props: OptionsFormat) {\n    super(props);\n  }\n}\n\nexport default Options;\n","import Prism from 'prismjs';\nimport { Block, Text, Decoration } from 'slate';\nimport { Plugin } from '@grafana/slate-react';\nimport Options, { OptionsFormat } from './options';\nimport TOKEN_MARK from './TOKEN_MARK';\n\n/**\n * A Slate plugin to highlight code syntax.\n */\nexport function SlatePrism(optsParam: OptionsFormat = {}): Plugin {\n  const opts: Options = new Options(optsParam);\n\n  return {\n    decorateNode: (node, editor, next) => {\n      if (!opts.onlyIn(node)) {\n        return next();\n      }\n      return decorateNode(opts, Block.create(node as Block));\n    },\n\n    renderDecoration: (props, editor, next) =>\n      opts.renderDecoration(\n        {\n          children: props.children,\n          decoration: props.decoration,\n        },\n        editor as any,\n        next\n      ),\n  };\n}\n\n/**\n * Returns the decoration for a node\n */\nfunction decorateNode(opts: Options, block: Block) {\n  const grammarName = opts.getSyntax(block);\n  const grammar = Prism.languages[grammarName];\n  if (!grammar) {\n    // Grammar not loaded\n    return [];\n  }\n\n  // Tokenize the whole block text\n  const texts = block.getTexts();\n  const blockText = texts.map(text => text && text.getText()).join('\\n');\n  const tokens = Prism.tokenize(blockText, grammar);\n\n  // The list of decorations to return\n  const decorations: Decoration[] = [];\n  let textStart = 0;\n  let textEnd = 0;\n\n  texts.forEach(text => {\n    textEnd = textStart + text!.getText().length;\n\n    let offset = 0;\n    function processToken(token: string | Prism.Token, accu?: string | number) {\n      if (typeof token === 'string') {\n        if (accu) {\n          const decoration = createDecoration({\n            text: text!,\n            textStart,\n            textEnd,\n            start: offset,\n            end: offset + token.length,\n            className: `prism-token token ${accu}`,\n            block,\n          });\n          if (decoration) {\n            decorations.push(decoration);\n          }\n        }\n        offset += token.length;\n      } else {\n        accu = `${accu} ${token.type} ${token.alias || ''}`;\n\n        if (typeof token.content === 'string') {\n          const decoration = createDecoration({\n            text: text!,\n            textStart,\n            textEnd,\n            start: offset,\n            end: offset + token.content.length,\n            className: `prism-token token ${accu}`,\n            block,\n          });\n          if (decoration) {\n            decorations.push(decoration);\n          }\n\n          offset += token.content.length;\n        } else {\n          // When using token.content instead of token.matchedStr, token can be deep\n          for (let i = 0; i < token.content.length; i += 1) {\n            // @ts-ignore\n            processToken(token.content[i], accu);\n          }\n        }\n      }\n    }\n\n    tokens.forEach(processToken);\n    textStart = textEnd + 1; // account for added `\\n`\n  });\n\n  return decorations;\n}\n\n/**\n * Return a decoration range for the given text.\n */\nfunction createDecoration({\n  text,\n  textStart,\n  textEnd,\n  start,\n  end,\n  className,\n  block,\n}: {\n  text: Text; // The text being decorated\n  textStart: number; // Its start position in the whole text\n  textEnd: number; // Its end position in the whole text\n  start: number; // The position in the whole text where the token starts\n  end: number; // The position in the whole text where the token ends\n  className: string; // The prism token classname\n  block: Block;\n}): Decoration | null {\n  if (start >= textEnd || end <= textStart) {\n    // Ignore, the token is not in the text\n    return null;\n  }\n\n  // Shrink to this text boundaries\n  start = Math.max(start, textStart);\n  end = Math.min(end, textEnd);\n\n  // Now shift offsets to be relative to this text\n  start -= textStart;\n  end -= textStart;\n\n  const myDec = block.createDecoration({\n    object: 'decoration',\n    anchor: {\n      key: text.key,\n      offset: start,\n      object: 'point',\n    },\n    focus: {\n      key: text.key,\n      offset: end,\n      object: 'point',\n    },\n    type: TOKEN_MARK,\n    data: { className },\n  });\n\n  return myDec;\n}\n","export { SlatePrism } from './slate-prism';\n","var path = 'public/app/features/dashboard/components/ShareModal/template.html';\nvar html = \"<div class=modal-body ng-controller=ShareModalCtrl ng-init=init()>\\n  <div class=modal-header>\\n    <h2 class=modal-header-title>\\n      <i class=\\\"fa fa-share-square-o\\\"></i>\\n      <span class=p-l-1>{{ modalTitle }}</span>\\n    </h2>\\n\\n    <ul class=gf-tabs>\\n      <li class=gf-tabs-item ng-repeat=\\\"tab in tabs\\\">\\n        <a class=gf-tabs-link ng-click=\\\"editor.index = $index\\\" ng-class=\\\"{active: editor.index === $index}\\\">\\n          {{::tab.title}}\\n        </a>\\n      </li>\\n    </ul>\\n\\n    <a class=modal-header-close ng-click=dismiss();>\\n      <i class=\\\"fa fa-remove\\\"></i>\\n    </a>\\n  </div>\\n\\n  <div class=modal-content ng-repeat=\\\"tab in tabs\\\" ng-if=\\\"editor.index == $index\\\">\\n    <div ng-include src=tab.src class=share-modal-body></div>\\n  </div>\\n</div>\\n\\n<script type=text/ng-template id=shareEmbed.html>\\n  <div class=\\\"share-modal-header\\\">\\n  \\t<div class=\\\"share-modal-big-icon\\\">\\n  \\t\\t<i class=\\\"fa fa-code\\\"></i>\\n  \\t</div>\\n  \\t<div class=\\\"share-modal-content\\\">\\n  \\t\\t<div ng-include src=\\\"'shareLinkOptions.html'\\\"></div>\\n\\n       <p class=\\\"share-modal-info-text\\\">\\n  \\t\\t The html code below can be pasted and included in another web page. Unless anonymous access\\n  \\t\\t is enabled, the user viewing that page need to be signed into grafana for the graph to load.\\n       </p>\\n\\n       <div class=\\\"gf-form-group gf-form--grow\\\">\\n  \\t\\t\\t<div class=\\\"gf-form\\\">\\n  \\t\\t\\t\\t<textarea rows=\\\"5\\\" data-share-panel-url class=\\\"gf-form-input\\\" ng-model='iframeHtml'></textarea>\\n  \\t\\t\\t</div>\\n  \\t\\t</div>\\n\\n  \\t</div>\\n  </div>\\n</script>\\n\\n<script type=text/ng-template id=shareExport.html>\\n  <dash-export-modal dismiss=\\\"dismiss()\\\"></dash-export-modal>\\n</script>\\n\\n<script type=text/ng-template id=shareLinkOptions.html>\\n  <div class=\\\"gf-form-group\\\">\\n  \\t<gf-form-switch class=\\\"gf-form\\\"\\n  \\t\\tlabel=\\\"Current time range\\\" label-class=\\\"width-12\\\" switch-class=\\\"max-width-6\\\"\\n  \\t\\tchecked=\\\"options.forCurrent\\\" on-change=\\\"buildUrl()\\\">\\n  \\t</gf-form-switch>\\n  \\t<gf-form-switch class=\\\"gf-form\\\"\\n  \\t\\tlabel=\\\"Template variables\\\" label-class=\\\"width-12\\\" switch-class=\\\"max-width-6\\\"\\n  \\t\\tchecked=\\\"options.includeTemplateVars\\\" on-change=\\\"buildUrl()\\\">\\n  \\t</gf-form-switch>\\n  \\t<div class=\\\"gf-form\\\">\\n  \\t\\t<span class=\\\"gf-form-label width-12\\\">Theme</span>\\n  \\t\\t<div class=\\\"gf-form-select-wrapper width-10\\\">\\n  \\t\\t\\t<select class=\\\"gf-form-input\\\" ng-model=\\\"options.theme\\\" ng-options=\\\"f as f for f in ['current', 'dark', 'light']\\\" ng-change=\\\"buildUrl()\\\"></select>\\n  \\t\\t</div>\\n  \\t</div>\\n  </div>\\n</script>\\n\\n<script type=text/ng-template id=shareLink.html>\\n  <div class=\\\"share-modal-header\\\">\\n  \\t<div class=\\\"share-modal-big-icon\\\">\\n  \\t\\t<i class=\\\"gicon gicon-link\\\"></i>\\n  \\t</div>\\n  \\t<div class=\\\"share-modal-content\\\">\\n  \\t\\t<p class=\\\"share-modal-info-text\\\">\\n  \\t\\t\\tCreate a direct link to this dashboard or panel, customized with the options below.\\n  \\t\\t</p>\\n  \\t\\t<div ng-include src=\\\"'shareLinkOptions.html'\\\"></div>\\n  \\t\\t<div>\\n  \\t\\t\\t<div class=\\\"gf-form-group\\\">\\n  \\t\\t\\t\\t<div class=\\\"gf-form-inline\\\">\\n  \\t\\t\\t\\t\\t<div class=\\\"gf-form gf-form--grow\\\">\\n  \\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" data-share-panel-url class=\\\"gf-form-input\\\" ng-model=\\\"shareUrl\\\">\\n  \\t\\t\\t\\t\\t</div>\\n  \\t\\t\\t\\t\\t<div class=\\\"gf-form\\\">\\n  \\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-inverse\\\" clipboard-button=\\\"getShareUrl()\\\">Copy</button>\\n  \\t\\t\\t\\t\\t</div>\\n  \\t\\t\\t\\t</div>\\n  \\t\\t\\t</div>\\n  \\t\\t</div>\\n  \\t\\t<div class=\\\"gf-form\\\" ng-show=\\\"modeSharePanel\\\">\\n  \\t\\t\\t<a href=\\\"{{imageUrl}}\\\" target=\\\"_blank\\\" aria-label=\\\"Link to rendered image\\\"><i class=\\\"fa fa-camera\\\"></i> Direct link rendered image</a>\\n  \\t\\t</div>\\n  \\t</div>\\n</script>\\n\\n<script type=text/ng-template id=shareSnapshot.html>\\n  \\t<div class=\\\"ng-cloak\\\" ng-cloak ng-controller=\\\"ShareSnapshotCtrl\\\" ng-init=\\\"init()\\\">\\n  \\t\\t<div class=\\\"share-modal-header\\\">\\n  \\t\\t\\t<div class=\\\"share-modal-big-icon\\\">\\n  \\t\\t\\t\\t<i ng-if=\\\"loading\\\" class=\\\"fa fa-spinner fa-spin\\\"></i>\\n  \\t\\t\\t\\t<i ng-if=\\\"!loading\\\" class=\\\"gicon gicon-snapshots\\\"></i>\\n  \\t\\t\\t</div>\\n        <div class=\\\"share-modal-content\\\">\\n          <div ng-if=\\\"step === 1\\\">\\n            <p class=\\\"share-modal-info-text\\\">\\n              A snapshot is an instant way to share an interactive dashboard publicly.\\n              When created, we <strong>strip sensitive data</strong> like queries (metric, template and annotation) and panel links,\\n              leaving only the visible metric data and series names embedded into your dashboard.\\n            </p>\\n            <p class=\\\"share-modal-info-text\\\">\\n              Keep in mind, your <strong>snapshot can be viewed by anyone</strong> that has the link and can reach the URL.\\n              Share wisely.\\n            </p>\\n          </div>\\n\\n  \\t\\t\\t\\t<div class=\\\"share-modal-header\\\" ng-if=\\\"step === 3\\\">\\n  \\t\\t\\t\\t\\t<p class=\\\"share-modal-info-text\\\">\\n  \\t\\t\\t\\t\\t\\tThe snapshot has now been deleted. If it you have already accessed it once, It might take up to an hour before it is removed from\\n  \\t\\t\\t\\t\\t\\tbrowser caches or CDN caches.\\n  \\t\\t\\t\\t\\t</p>\\n  \\t\\t\\t\\t</div>\\n\\n  \\t\\t\\t\\t<div class=\\\"gf-form-group share-modal-options\\\">\\n  \\t\\t\\t\\t\\t<div class=\\\"gf-form\\\" ng-if=\\\"step === 1\\\">\\n  \\t\\t\\t\\t\\t\\t<span class=\\\"gf-form-label width-12\\\">Snapshot name</span>\\n  \\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" ng-model=\\\"snapshot.name\\\" class=\\\"gf-form-input max-width-15\\\">\\n  \\t\\t\\t\\t\\t</div>\\n  \\t\\t\\t\\t\\t<div class=\\\"gf-form\\\" ng-if=\\\"step === 1\\\">\\n  \\t\\t\\t\\t\\t\\t<span class=\\\"gf-form-label width-12\\\">Expire</span>\\n  \\t\\t\\t\\t\\t\\t<div class=\\\"gf-form-select-wrapper max-width-15\\\">\\n  \\t\\t\\t\\t\\t\\t\\t<select class=\\\"gf-form-input\\\" ng-model=\\\"snapshot.expires\\\" ng-options=\\\"f.value as f.text for f in expireOptions\\\"></select>\\n  \\t\\t\\t\\t\\t\\t</div>\\n  \\t\\t\\t\\t\\t</div>\\n\\n  \\t\\t\\t\\t\\t<div class=\\\"gf-form\\\" ng-if=\\\"step === 2\\\" style=\\\"margin-top: 40px\\\">\\n  \\t\\t\\t\\t\\t\\t<div class=\\\"gf-form-row\\\">\\n  \\t\\t\\t\\t\\t\\t\\t<a href=\\\"{{snapshotUrl}}\\\" class=\\\"large share-modal-link\\\" target=\\\"_blank\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-external-link-square\\\"></i>\\n  \\t\\t\\t\\t\\t\\t\\t\\t{{snapshotUrl}}\\n  \\t\\t\\t\\t\\t\\t\\t</a>\\n  \\t\\t\\t\\t\\t\\t\\t<br>\\n  \\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-inverse\\\" clipboard-button=\\\"getSnapshotUrl()\\\">Copy Link</button>\\n  \\t\\t\\t\\t\\t\\t</div>\\n  \\t\\t\\t\\t\\t</div>\\n  \\t\\t\\t\\t</div>\\n\\n  \\t\\t\\t\\t<div ng-if=\\\"step === 1\\\">\\n  \\t\\t\\t\\t\\t<p class=\\\"share-modal-info-text\\\">\\n  \\t\\t\\t\\t\\t\\tYou may need to configure the timeout value if it takes a long time to collect your dashboard's metrics.\\n  \\t\\t\\t\\t\\t</p>\\n  \\t\\t\\t\\t</div>\\n\\n  \\t\\t\\t\\t<div class=\\\"gf-form-group share-modal-options\\\">\\n  \\t\\t\\t\\t\\t<div class=\\\"gf-form\\\" ng-if=\\\"step === 1\\\">\\n  \\t\\t\\t\\t\\t\\t<span class=\\\"gf-form-label width-12\\\">Timeout (seconds)</span>\\n  \\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" ng-model=\\\"snapshot.timeoutSeconds\\\" class=\\\"gf-form-input max-width-15\\\">\\n  \\t\\t\\t\\t\\t</div>\\n  \\t\\t\\t\\t</div>\\n\\n  \\t\\t\\t\\t<div ng-if=\\\"step === 1\\\" class=\\\"gf-form-button-row\\\">\\n  \\t\\t\\t\\t\\t<button class=\\\"btn gf-form-btn width-10 btn-primary\\\" ng-click=\\\"createSnapshot()\\\" ng-disabled=\\\"loading\\\">\\n  \\t\\t\\t\\t\\t\\tLocal Snapshot\\n  \\t\\t\\t\\t\\t</button>\\n  \\t\\t\\t\\t\\t<button class=\\\"btn gf-form-btn width-16 btn-secondary\\\" ng-if=\\\"externalEnabled\\\" ng-click=\\\"createSnapshot(true)\\\" ng-disabled=\\\"loading\\\">\\n  \\t\\t\\t\\t\\t\\t{{sharingButtonText}}\\n  \\t\\t\\t\\t\\t</button>\\n  \\t\\t\\t\\t\\t<a class=\\\"btn btn-link\\\" ng-click=\\\"dismiss()\\\">Cancel</a>\\n  \\t\\t\\t\\t</div>\\n\\n  \\t\\t\\t\\t<div class=\\\"pull-right\\\" ng-if=\\\"step === 2\\\" style=\\\"padding: 5px\\\">\\n  \\t\\t\\t\\t\\tDid you make a mistake? <a class=\\\"pointer\\\" ng-click=\\\"deleteSnapshot()\\\" target=\\\"_blank\\\">delete snapshot.</a>\\n  \\t\\t\\t\\t</div>\\n  \\t\\t\\t</div>\\n  \\t\\t</div>\\n  \\t</div>\\n\\n  </div>\\n</script>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","export default function resetSelectStyles() {\n  return {\n    clearIndicator: () => ({}),\n    container: () => ({}),\n    control: () => ({}),\n    dropdownIndicator: () => ({}),\n    group: () => ({}),\n    groupHeading: () => ({}),\n    indicatorsContainer: () => ({}),\n    indicatorSeparator: () => ({}),\n    input: () => ({}),\n    loadingIndicator: () => ({}),\n    loadingMessage: () => ({}),\n    menu: () => ({}),\n    menuList: ({ maxHeight }: { maxHeight: number }) => ({\n      maxHeight,\n    }),\n    multiValue: () => ({}),\n    multiValueLabel: () => ({}),\n    multiValueRemove: () => ({}),\n    noOptionsMessage: () => ({}),\n    option: () => ({}),\n    placeholder: () => ({}),\n    singleValue: () => ({}),\n    valueContainer: () => ({}),\n  };\n}\n","var path = 'public/app/plugins/datasource/cloudwatch/partials/annotations.editor.html';\nvar html = \"<cloudwatch-query-parameter target=ctrl.annotation datasource=ctrl.datasource></cloudwatch-query-parameter>\\n\\n<div class=editor-row style=\\\"padding:2rem 0\\\">\\n\\t<div class=section>\\n\\t\\t<h5>Prefix matching</h5>\\n\\t\\t<div class=gf-form-inline>\\n\\t\\t\\t<gf-form-switch class=gf-form label=Enable checked=ctrl.annotation.prefixMatching switch-class=max-width-6></gf-form-switch>\\n\\t\\t\\t<div class=gf-form ng-if=ctrl.annotation.prefixMatching>\\n\\t\\t\\t\\t<span class=gf-form-label>Action</span>\\n\\t\\t\\t\\t<input type=text class=gf-form-input ng-model=ctrl.annotation.actionPrefix>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=gf-form ng-if=ctrl.annotation.prefixMatching>\\n\\t\\t\\t\\t<span class=gf-form-label>Alarm Name</span>\\n\\t\\t\\t\\t<input type=text class=gf-form-input ng-model=ctrl.annotation.alarmNamePrefix>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import React from 'react';\n\n// Ignoring because I couldn't get @types/react-select work wih Torkel's fork\n// @ts-ignore\nimport { components } from '@torkelo/react-select';\nimport { OptionProps } from 'react-select/lib/components/Option';\n\n// https://github.com/JedWatson/react-select/issues/3038\nexport interface ExtendedOptionProps extends OptionProps<any> {\n  data: {\n    description?: string;\n    imgUrl?: string;\n  };\n}\n\nexport const SelectOption = (props: ExtendedOptionProps) => {\n  const { children, isSelected, data } = props;\n\n  return (\n    <components.Option {...props}>\n      <div className=\"gf-form-select-box__desc-option\">\n        {data.imgUrl && <img className=\"gf-form-select-box__desc-option__img\" src={data.imgUrl} />}\n        <div className=\"gf-form-select-box__desc-option__body\">\n          <div>{children}</div>\n          {data.description && <div className=\"gf-form-select-box__desc-option__desc\">{data.description}</div>}\n        </div>\n        {isSelected && <i className=\"fa fa-check\" aria-hidden=\"true\" />}\n      </div>\n    </components.Option>\n  );\n};\n\n// was not able to type this without typescript error\nexport const SingleValue = (props: any) => {\n  const { children, data } = props;\n\n  return (\n    <components.SingleValue {...props}>\n      <div className=\"gf-form-select-box__img-value\">\n        {data.imgUrl && <img className=\"gf-form-select-box__desc-option__img\" src={data.imgUrl} />}\n        {children}\n      </div>\n    </components.SingleValue>\n  );\n};\n\nexport default SelectOption;\n","import React, { PureComponent } from 'react';\nimport { GroupProps } from 'react-select/lib/components/Group';\n\ninterface ExtendedGroupProps extends GroupProps<any> {\n  data: {\n    label: string;\n    expanded: boolean;\n    options: any[];\n  };\n}\n\ninterface State {\n  expanded: boolean;\n}\n\nexport default class SelectOptionGroup extends PureComponent<ExtendedGroupProps, State> {\n  state = {\n    expanded: false,\n  };\n\n  componentDidMount() {\n    if (this.props.data.expanded) {\n      this.setState({ expanded: true });\n    } else if (this.props.selectProps && this.props.selectProps.value) {\n      const { value } = this.props.selectProps.value;\n\n      if (value && this.props.options.some(option => option.value === value)) {\n        this.setState({ expanded: true });\n      }\n    }\n  }\n\n  componentDidUpdate(nextProps: ExtendedGroupProps) {\n    if (nextProps.selectProps.inputValue !== '') {\n      this.setState({ expanded: true });\n    }\n  }\n\n  onToggleChildren = () => {\n    this.setState(prevState => ({\n      expanded: !prevState.expanded,\n    }));\n  };\n\n  render() {\n    const { children, label } = this.props;\n    const { expanded } = this.state;\n\n    return (\n      <div className=\"gf-form-select-box__option-group\">\n        <div className=\"gf-form-select-box__option-group__header\" onClick={this.onToggleChildren}>\n          <span className=\"flex-grow-1\">{label}</span>\n          <i className={`fa ${expanded ? 'fa-caret-left' : 'fa-caret-down'}`} />{' '}\n        </div>\n        {expanded && children}\n      </div>\n    );\n  }\n}\n","// Libraries\nimport classNames from 'classnames';\nimport React, { PureComponent } from 'react';\n\n// Ignoring because I couldn't get @types/react-select work wih Torkel's fork\n// @ts-ignore\nimport { default as ReactSelect } from '@torkelo/react-select';\n// @ts-ignore\nimport { default as ReactAsyncSelect } from '@torkelo/react-select/lib/Async';\n// @ts-ignore\nimport { components } from '@torkelo/react-select';\n\n// Components\nimport { SelectOption, SingleValue } from './SelectOption';\nimport SelectOptionGroup from './SelectOptionGroup';\nimport IndicatorsContainer from './IndicatorsContainer';\nimport NoOptionsMessage from './NoOptionsMessage';\nimport resetSelectStyles from './resetSelectStyles';\nimport { CustomScrollbar } from '../CustomScrollbar/CustomScrollbar';\nimport { PopoverContent } from '../Tooltip/Tooltip';\nimport { Tooltip } from '../Tooltip/Tooltip';\nimport { SelectableValue } from '@grafana/data';\n\nexport interface CommonProps<T> {\n  defaultValue?: any;\n  getOptionLabel?: (item: SelectableValue<T>) => string;\n  getOptionValue?: (item: SelectableValue<T>) => string;\n  onChange: (item: SelectableValue<T>) => {} | void;\n  placeholder?: string;\n  width?: number;\n  value?: SelectableValue<T>;\n  className?: string;\n  isDisabled?: boolean;\n  isSearchable?: boolean;\n  isClearable?: boolean;\n  autoFocus?: boolean;\n  openMenuOnFocus?: boolean;\n  onBlur?: () => void;\n  maxMenuHeight?: number;\n  isLoading?: boolean;\n  noOptionsMessage?: () => string;\n  isMulti?: boolean;\n  backspaceRemovesValue?: boolean;\n  isOpen?: boolean;\n  components?: any;\n  tooltipContent?: PopoverContent;\n  onOpenMenu?: () => void;\n  onCloseMenu?: () => void;\n  tabSelectsValue?: boolean;\n}\n\nexport interface SelectProps<T> extends CommonProps<T> {\n  options: Array<SelectableValue<T>>;\n}\n\ninterface AsyncProps<T> extends CommonProps<T> {\n  defaultOptions: boolean;\n  loadOptions: (query: string) => Promise<Array<SelectableValue<T>>>;\n  loadingMessage?: () => string;\n}\n\nexport const MenuList = (props: any) => {\n  return (\n    <components.MenuList {...props}>\n      <CustomScrollbar autoHide={false} autoHeightMax=\"inherit\">\n        {props.children}\n      </CustomScrollbar>\n    </components.MenuList>\n  );\n};\n\nexport class Select<T> extends PureComponent<SelectProps<T>> {\n  static defaultProps: Partial<SelectProps<any>> = {\n    className: '',\n    isDisabled: false,\n    isSearchable: true,\n    isClearable: false,\n    isMulti: false,\n    openMenuOnFocus: false,\n    autoFocus: false,\n    isLoading: false,\n    backspaceRemovesValue: true,\n    maxMenuHeight: 300,\n    tabSelectsValue: true,\n    components: {\n      Option: SelectOption,\n      SingleValue,\n      IndicatorsContainer,\n      MenuList,\n      Group: SelectOptionGroup,\n    },\n  };\n\n  render() {\n    const {\n      defaultValue,\n      getOptionLabel,\n      getOptionValue,\n      onChange,\n      options,\n      placeholder,\n      width,\n      value,\n      className,\n      isDisabled,\n      isLoading,\n      isSearchable,\n      isClearable,\n      backspaceRemovesValue,\n      isMulti,\n      autoFocus,\n      openMenuOnFocus,\n      onBlur,\n      maxMenuHeight,\n      noOptionsMessage,\n      isOpen,\n      components,\n      tooltipContent,\n      tabSelectsValue,\n      onCloseMenu,\n      onOpenMenu,\n    } = this.props;\n\n    let widthClass = '';\n    if (width) {\n      widthClass = 'width-' + width;\n    }\n\n    const selectClassNames = classNames('gf-form-input', 'gf-form-input--form-dropdown', widthClass, className);\n    const selectComponents = { ...Select.defaultProps.components, ...components };\n\n    return (\n      <WrapInTooltip onCloseMenu={onCloseMenu} onOpenMenu={onOpenMenu} tooltipContent={tooltipContent} isOpen={isOpen}>\n        {(onOpenMenuInternal, onCloseMenuInternal) => {\n          return (\n            <ReactSelect\n              classNamePrefix=\"gf-form-select-box\"\n              className={selectClassNames}\n              components={selectComponents}\n              defaultValue={defaultValue}\n              value={value}\n              getOptionLabel={getOptionLabel}\n              getOptionValue={getOptionValue}\n              menuShouldScrollIntoView={false}\n              isSearchable={isSearchable}\n              onChange={onChange}\n              options={options}\n              placeholder={placeholder || 'Choose'}\n              styles={resetSelectStyles()}\n              isDisabled={isDisabled}\n              isLoading={isLoading}\n              isClearable={isClearable}\n              autoFocus={autoFocus}\n              onBlur={onBlur}\n              openMenuOnFocus={openMenuOnFocus}\n              maxMenuHeight={maxMenuHeight}\n              noOptionsMessage={noOptionsMessage}\n              isMulti={isMulti}\n              backspaceRemovesValue={backspaceRemovesValue}\n              menuIsOpen={isOpen}\n              onMenuOpen={onOpenMenuInternal}\n              onMenuClose={onCloseMenuInternal}\n              tabSelectsValue={tabSelectsValue}\n            />\n          );\n        }}\n      </WrapInTooltip>\n    );\n  }\n}\n\nexport class AsyncSelect<T> extends PureComponent<AsyncProps<T>> {\n  static defaultProps: Partial<AsyncProps<any>> = {\n    className: '',\n    components: {},\n    loadingMessage: () => 'Loading...',\n    isDisabled: false,\n    isClearable: false,\n    isMulti: false,\n    isSearchable: true,\n    backspaceRemovesValue: true,\n    autoFocus: false,\n    openMenuOnFocus: false,\n    maxMenuHeight: 300,\n  };\n\n  render() {\n    const {\n      defaultValue,\n      getOptionLabel,\n      getOptionValue,\n      onChange,\n      placeholder,\n      width,\n      value,\n      className,\n      loadOptions,\n      defaultOptions,\n      isLoading,\n      loadingMessage,\n      noOptionsMessage,\n      isDisabled,\n      isSearchable,\n      isClearable,\n      backspaceRemovesValue,\n      autoFocus,\n      onBlur,\n      openMenuOnFocus,\n      maxMenuHeight,\n      isMulti,\n      tooltipContent,\n      onCloseMenu,\n      onOpenMenu,\n      isOpen,\n    } = this.props;\n\n    let widthClass = '';\n    if (width) {\n      widthClass = 'width-' + width;\n    }\n\n    const selectClassNames = classNames('gf-form-input', 'gf-form-input--form-dropdown', widthClass, className);\n\n    return (\n      <WrapInTooltip onCloseMenu={onCloseMenu} onOpenMenu={onOpenMenu} tooltipContent={tooltipContent} isOpen={isOpen}>\n        {(onOpenMenuInternal, onCloseMenuInternal) => {\n          return (\n            <ReactAsyncSelect\n              classNamePrefix=\"gf-form-select-box\"\n              className={selectClassNames}\n              components={{\n                Option: SelectOption,\n                SingleValue,\n                IndicatorsContainer,\n                NoOptionsMessage,\n              }}\n              defaultValue={defaultValue}\n              value={value}\n              getOptionLabel={getOptionLabel}\n              getOptionValue={getOptionValue}\n              menuShouldScrollIntoView={false}\n              onChange={onChange}\n              loadOptions={loadOptions}\n              isLoading={isLoading}\n              defaultOptions={defaultOptions}\n              placeholder={placeholder || 'Choose'}\n              styles={resetSelectStyles()}\n              loadingMessage={loadingMessage}\n              noOptionsMessage={noOptionsMessage}\n              isDisabled={isDisabled}\n              isSearchable={isSearchable}\n              isClearable={isClearable}\n              autoFocus={autoFocus}\n              onBlur={onBlur}\n              openMenuOnFocus={openMenuOnFocus}\n              maxMenuHeight={maxMenuHeight}\n              isMulti={isMulti}\n              backspaceRemovesValue={backspaceRemovesValue}\n            />\n          );\n        }}\n      </WrapInTooltip>\n    );\n  }\n}\n\nexport interface TooltipWrapperProps {\n  children: (onOpenMenu: () => void, onCloseMenu: () => void) => React.ReactNode;\n  onOpenMenu?: () => void;\n  onCloseMenu?: () => void;\n  isOpen?: boolean;\n  tooltipContent?: PopoverContent;\n}\n\nexport interface TooltipWrapperState {\n  isOpenInternal: boolean;\n}\n\nexport class WrapInTooltip extends PureComponent<TooltipWrapperProps, TooltipWrapperState> {\n  state: TooltipWrapperState = {\n    isOpenInternal: false,\n  };\n\n  onOpenMenu = () => {\n    const { onOpenMenu } = this.props;\n    if (onOpenMenu) {\n      onOpenMenu();\n    }\n    this.setState({ isOpenInternal: true });\n  };\n\n  onCloseMenu = () => {\n    const { onCloseMenu } = this.props;\n    if (onCloseMenu) {\n      onCloseMenu();\n    }\n    this.setState({ isOpenInternal: false });\n  };\n\n  render() {\n    const { children, isOpen, tooltipContent } = this.props;\n    const { isOpenInternal } = this.state;\n\n    let showTooltip: boolean | undefined = undefined;\n\n    if (isOpenInternal || isOpen) {\n      showTooltip = false;\n    }\n\n    if (tooltipContent) {\n      return (\n        <Tooltip show={showTooltip} content={tooltipContent} placement=\"bottom\">\n          <div>\n            {/* div needed for tooltip */}\n            {children(this.onOpenMenu, this.onCloseMenu)}\n          </div>\n        </Tooltip>\n      );\n    } else {\n      return <div>{children(this.onOpenMenu, this.onCloseMenu)}</div>;\n    }\n  }\n}\n\nexport default Select;\n","import React, { forwardRef } from 'react';\n\nconst specialChars = ['(', '[', '{', '}', ']', ')', '|', '*', '+', '-', '.', '?', '<', '>', '#', '&', '^', '$'];\n\nexport const escapeStringForRegex = (value: string) => {\n  if (!value) {\n    return value;\n  }\n\n  const newValue = specialChars.reduce(\n    (escaped, currentChar) => escaped.replace(currentChar, '\\\\' + currentChar),\n    value\n  );\n\n  return newValue;\n};\n\nexport const unEscapeStringFromRegex = (value: string) => {\n  if (!value) {\n    return value;\n  }\n\n  const newValue = specialChars.reduce(\n    (escaped, currentChar) => escaped.replace('\\\\' + currentChar, currentChar),\n    value\n  );\n\n  return newValue;\n};\n\nexport interface Props {\n  value: string | undefined;\n  placeholder?: string;\n  labelClassName?: string;\n  inputClassName?: string;\n  onChange: (value: string) => void;\n}\n\nexport const FilterInput = forwardRef<HTMLInputElement, Props>((props, ref) => (\n  <label className={props.labelClassName}>\n    <input\n      ref={ref}\n      type=\"text\"\n      className={props.inputClassName}\n      value={unEscapeStringFromRegex(props.value)}\n      onChange={event => props.onChange(escapeStringForRegex(event.target.value))}\n      placeholder={props.placeholder ? props.placeholder : null}\n    />\n    <i className=\"gf-form-input-icon fa fa-search\" />\n  </label>\n));\n","var path = 'public/app/core/components/manage_dashboards/manage_dashboards.html';\nvar html = \"<div class=dashboard-list>\\n  <div class=\\\"page-action-bar page-action-bar--narrow\\\" ng-hide=\\\"ctrl.folderId && !ctrl.hasFilters && ctrl.sections.length === 0\\\">\\n    <label class=\\\"gf-form gf-form--grow gf-form--has-input-icon\\\">\\n      <input type=text class=\\\"gf-form-input max-width-30\\\" placeholder=\\\"Find Dashboard by name\\\" tabindex=1 give-focus=true ng-model=ctrl.query.query ng-model-options=\\\"{ debounce: 500 }\\\" spellcheck=false ng-change=ctrl.onQueryChange() />\\n      <i class=\\\"gf-form-input-icon fa fa-search\\\"></i>\\n    </label>\\n    <div class=page-action-bar__spacer></div>\\n    <a class=\\\"btn btn-primary\\\" ng-href={{ctrl.createDashboardUrl()}} ng-if=\\\"ctrl.hasEditPermissionInFolders || ctrl.canSave\\\">\\n      New Dashboard\\n    </a>\\n    <a class=\\\"btn btn-inverse\\\" href=dashboards/folder/new ng-if=\\\"!ctrl.folderId && ctrl.isEditor\\\">\\n      New Folder\\n    </a>\\n    <a class=\\\"btn btn-inverse\\\" href={{ctrl.importDashboardUrl()}} ng-if=\\\"ctrl.hasEditPermissionInFolders || ctrl.canSave\\\">\\n      Import\\n    </a>\\n  </div>\\n\\n  <div class=\\\"page-action-bar page-action-bar--narrow\\\" ng-show=ctrl.hasFilters>\\n    <div class=gf-form-inline>\\n      <div class=gf-form ng-show=\\\"ctrl.query.tag.length > 0\\\">\\n        <label class=\\\"gf-form-label width-4\\\">\\n          Tags\\n        </label>\\n        <div class=\\\"gf-form-input gf-form-input--plaintext\\\" ng-show=\\\"ctrl.query.tag.length > 0\\\">\\n          <span ng-repeat=\\\"tagName in ctrl.query.tag\\\">\\n            <a ng-click=\\\"ctrl.removeTag(tagName, $event)\\\" tag-color-from-name=tagName class=\\\"tag label label-tag\\\">\\n              <i class=\\\"fa fa-remove\\\"></i>&nbsp;{{tagName}}\\n            </a>\\n          </span>\\n        </div>\\n      </div>\\n      <div class=gf-form ng-show=ctrl.query.starred>\\n        <label class=gf-form-label>\\n          <a class=pointer ng-click=ctrl.removeStarred()>\\n            <i class=\\\"fa fa-fw fa-check\\\"></i> Starred\\n          </a>\\n        </label>\\n      </div>\\n      <div class=gf-form>\\n        <label class=gf-form-label>\\n          <a class=pointer ng-click=ctrl.clearFilters() bs-tooltip=\\\"'Clear current search query and filters'\\\">\\n            <i class=\\\"fa fa-remove\\\"></i>&nbsp;Clear\\n          </a>\\n        </label>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=search-results ng-show=\\\"ctrl.hasFilters && ctrl.sections.length === 0\\\">\\n    <em class=muted>\\n      No dashboards matching your query were found.\\n    </em>\\n  </div>\\n\\n\\t<div class=search-results ng-show=\\\"!ctrl.folderId && !ctrl.hasFilters && ctrl.sections.length === 0\\\">\\n    <em class=muted>\\n        No dashboards found.\\n    </em>\\n  </div>\\n\\n  <div class=search-results ng-show=\\\"ctrl.sections.length > 0\\\">\\n    <div class=search-results-filter-row>\\n      <gf-form-checkbox on-change=ctrl.onSelectAllChanged() checked=ctrl.selectAllChecked switch-class=gf-form-checkbox--transparent />\\n      <div class=search-results-filter-row__filters>\\n        <div class=gf-form-select-wrapper ng-show=\\\"!(ctrl.canMove || ctrl.canDelete)\\\">\\n          <select class=\\\"search-results-filter-row__filters-item gf-form-input\\\" ng-model=ctrl.selectedStarredFilter ng-options=\\\"t.text disable when t.disabled for t in ctrl.starredFilterOptions\\\" ng-change=ctrl.onStarredFilterChange() />\\n        </div>\\n        <div class=gf-form-select-wrapper ng-show=\\\"!(ctrl.canMove || ctrl.canDelete)\\\">\\n          <select class=\\\"search-results-filter-row__filters-item gf-form-input\\\" ng-model=ctrl.selectedTagFilter ng-options=\\\"t.term disable when t.disabled for t in ctrl.tagFilterOptions\\\" ng-change=ctrl.onTagFilterChange() />\\n        </div>\\n        <div class=gf-form-button-row ng-show=\\\"ctrl.canMove || ctrl.canDelete\\\">\\n          <button type=button class=\\\"btn gf-form-button btn-inverse\\\" ng-disabled=!ctrl.canMove ng-click=ctrl.moveTo() bs-tooltip=\\\"ctrl.canMove ? '' : 'Select a dashboard to move (cannot move folders)'\\\" data-placement=bottom>\\n          <i class=\\\"fa fa-exchange\\\"></i>&nbsp;&nbsp;Move\\n          </button>\\n          <button type=button class=\\\"btn gf-form-button btn-danger\\\" ng-click=ctrl.delete() ng-disabled=!ctrl.canDelete>\\n            <i class=\\\"fa fa-trash\\\"></i>&nbsp;&nbsp;Delete\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=search-results-container>\\n      <dashboard-search-results results=ctrl.sections editable=true on-selection-changed=ctrl.selectionChanged() on-tag-selected=ctrl.filterByTag($tag) />\\n    </div>\\n  </div>\\n\\n</div>\\n\\n<div ng-if=\\\"ctrl.canSave && ctrl.folderId && !ctrl.hasFilters && ctrl.sections.length === 0\\\">\\n  <empty-list-cta title=\\\"'This folder doesn\\\\'t have any dashboards yet'\\\" buttonicon=\\\"'gicon gicon-dashboard-new'\\\" buttonlink=\\\"'dashboard/new?folderId={{ctrl.folderId}}'\\\" buttontitle=\\\"'Create Dashboard'\\\" protip=\\\"'Add/move dashboards to your folder at ->'\\\" protiplink=\\\"'dashboards'\\\" protiplinktitle=\\\"'Manage dashboards'\\\" protiptarget=\\\"\\\"/>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import React from 'react';\n\n// Ignoring because I couldn't get @types/react-select work wih Torkel's fork\n// @ts-ignore\nimport { components } from '@torkelo/react-select';\n// @ts-ignore\nimport { OptionProps } from '@torkelo/react-select/lib/components/Option';\n\nexport interface Props {\n  children: Element;\n}\n\nexport const NoOptionsMessage = (props: OptionProps<any>) => {\n  const { children } = props;\n  return (\n    <components.Option {...props}>\n      <div className=\"gf-form-select-box__desc-option\">\n        <div className=\"gf-form-select-box__desc-option__body\">{children}</div>\n      </div>\n    </components.Option>\n  );\n};\n\nexport default NoOptionsMessage;\n","import { Vector } from '../types/vector';\n\nexport function vectorToArray<T>(v: Vector<T>): T[] {\n  const arr: T[] = [];\n  for (let i = 0; i < v.length; i++) {\n    arr[i] = v.get(i);\n  }\n  return arr;\n}\n","var path = 'public/app/features/teams/partials/create_team.html';\nvar html = \"<page-header model=ctrl.navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\" ng-cloak>\\n\\t<h3 class=page-sub-heading>New Team</h3>\\n\\n\\t<form name=ctrl.saveForm class=gf-form-group ng-submit=ctrl.create()>\\n\\t\\t<div class=\\\"gf-form max-width-30\\\">\\n\\t\\t\\t<span class=\\\"gf-form-label width-10\\\">Name</span>\\n\\t\\t\\t<input type=text required ng-model=ctrl.name class=\\\"gf-form-input max-width-22\\\" give-focus=true>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"gf-form max-width-30\\\">\\n\\t\\t\\t<span class=\\\"gf-form-label width-10\\\">\\n\\t\\t\\t\\tEmail\\n\\t\\t\\t\\t<info-popover mode=right-normal>\\n\\t\\t\\t\\t\\tThis is optional and is primarily used for allowing custom team avatars.\\n\\t\\t\\t\\t</info-popover>\\n\\t\\t\\t</span>\\n\\t\\t\\t<input class=\\\"gf-form-input max-width-22\\\" type=email ng-model=ctrl.email placeholder=email@test.com>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form-button-row>\\n\\t\\t\\t<button type=submit class=\\\"btn btn-primary\\\">\\n\\t\\t\\t\\tCreate\\n\\t\\t\\t</button>\\n\\t\\t</div>\\n\\t</form>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { isBoolean, isNumber, sortedUniq, sortedIndexOf, unescape as htmlUnescaped } from 'lodash';\nimport { saveAs } from 'file-saver';\nimport { isNullOrUndefined } from 'util';\nimport { dateTime, TimeZone, TableData } from '@grafana/data';\n\nconst DEFAULT_DATETIME_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\nconst POINT_TIME_INDEX = 1;\nconst POINT_VALUE_INDEX = 0;\n\nconst END_COLUMN = ';';\nconst END_ROW = '\\r\\n';\nconst QUOTE = '\"';\nconst EXPORT_FILENAME = 'grafana_data_export.csv';\n\ninterface SeriesListToCsvColumnsOptions {\n  dateTimeFormat: string;\n  excel: boolean;\n  timezone: TimeZone;\n}\n\ntype SeriesList = Array<{\n  datapoints: any;\n  alias: any;\n}>;\n\nconst defaultOptions: SeriesListToCsvColumnsOptions = {\n  dateTimeFormat: DEFAULT_DATETIME_FORMAT,\n  excel: false,\n  timezone: '',\n};\n\nfunction csvEscaped(text: string) {\n  if (!text) {\n    return text;\n  }\n\n  return text\n    .split(QUOTE)\n    .join(QUOTE + QUOTE)\n    .replace(/^([-+=@])/, \"'$1\")\n    .replace(/\\s+$/, '');\n}\n\nconst domParser = new DOMParser();\nfunction htmlDecoded(text: string) {\n  if (!text) {\n    return text;\n  }\n\n  const regexp = /&[^;]+;/g;\n  function htmlDecoded(value: string) {\n    const parsedDom = domParser.parseFromString(value, 'text/html');\n    return parsedDom.body.textContent;\n  }\n  return text.replace(regexp, htmlDecoded).replace(regexp, htmlDecoded);\n}\n\nfunction formatSpecialHeader(useExcelHeader: boolean) {\n  return useExcelHeader ? `sep=${END_COLUMN}${END_ROW}` : '';\n}\n\nfunction formatRow(row: any[], addEndRowDelimiter = true) {\n  let text = '';\n  for (let i = 0; i < row.length; i += 1) {\n    if (isBoolean(row[i]) || isNumber(row[i]) || isNullOrUndefined(row[i])) {\n      text += row[i];\n    } else {\n      text += `${QUOTE}${csvEscaped(htmlUnescaped(htmlDecoded(row[i])))}${QUOTE}`;\n    }\n\n    if (i < row.length - 1) {\n      text += END_COLUMN;\n    }\n  }\n  return addEndRowDelimiter ? text + END_ROW : text;\n}\n\nexport function convertSeriesListToCsv(seriesList: SeriesList, options: Partial<SeriesListToCsvColumnsOptions>) {\n  const { dateTimeFormat, excel, timezone } = { ...defaultOptions, ...options };\n  let text = formatSpecialHeader(excel) + formatRow(['Series', 'Time', 'Value']);\n  for (let seriesIndex = 0; seriesIndex < seriesList.length; seriesIndex += 1) {\n    for (let i = 0; i < seriesList[seriesIndex].datapoints.length; i += 1) {\n      text += formatRow(\n        [\n          seriesList[seriesIndex].alias,\n          timezone === 'utc'\n            ? dateTime(seriesList[seriesIndex].datapoints[i][POINT_TIME_INDEX])\n                .utc()\n                .format(dateTimeFormat)\n            : dateTime(seriesList[seriesIndex].datapoints[i][POINT_TIME_INDEX]).format(dateTimeFormat),\n          seriesList[seriesIndex].datapoints[i][POINT_VALUE_INDEX],\n        ],\n        i < seriesList[seriesIndex].datapoints.length - 1 || seriesIndex < seriesList.length - 1\n      );\n    }\n  }\n  return text;\n}\n\nexport function exportSeriesListToCsv(seriesList: SeriesList, options: Partial<SeriesListToCsvColumnsOptions>) {\n  const text = convertSeriesListToCsv(seriesList, options);\n  saveSaveBlob(text, EXPORT_FILENAME);\n}\n\nexport function convertSeriesListToCsvColumns(seriesList: SeriesList, options: Partial<SeriesListToCsvColumnsOptions>) {\n  const { dateTimeFormat, excel, timezone } = { ...defaultOptions, ...options };\n  // add header\n  let text =\n    formatSpecialHeader(excel) +\n    formatRow(\n      ['Time'].concat(\n        seriesList.map(val => {\n          return val.alias;\n        })\n      )\n    );\n  // process data\n  const extendedDatapointsList = mergeSeriesByTime(seriesList);\n\n  // make text\n  for (let i = 0; i < extendedDatapointsList[0].length; i += 1) {\n    const timestamp =\n      timezone === 'utc'\n        ? dateTime(extendedDatapointsList[0][i][POINT_TIME_INDEX])\n            .utc()\n            .format(dateTimeFormat)\n        : dateTime(extendedDatapointsList[0][i][POINT_TIME_INDEX]).format(dateTimeFormat);\n\n    text += formatRow(\n      [timestamp].concat(\n        extendedDatapointsList.map(datapoints => {\n          return datapoints[i][POINT_VALUE_INDEX];\n        })\n      ),\n      i < extendedDatapointsList[0].length - 1\n    );\n  }\n\n  return text;\n}\n\n/**\n * Collect all unique timestamps from series list and use it to fill\n * missing points by null.\n */\nfunction mergeSeriesByTime(seriesList: SeriesList) {\n  let timestamps = [];\n  for (let i = 0; i < seriesList.length; i++) {\n    const seriesPoints = seriesList[i].datapoints;\n    for (let j = 0; j < seriesPoints.length; j++) {\n      timestamps.push(seriesPoints[j][POINT_TIME_INDEX]);\n    }\n  }\n  timestamps = sortedUniq(timestamps.sort());\n\n  const result = [];\n  for (let i = 0; i < seriesList.length; i++) {\n    const seriesPoints = seriesList[i].datapoints;\n    const seriesTimestamps = seriesPoints.map((p: any) => p[POINT_TIME_INDEX]);\n    const extendedDatapoints = [];\n    for (let j = 0; j < timestamps.length; j++) {\n      const timestamp = timestamps[j];\n      const pointIndex = sortedIndexOf(seriesTimestamps, timestamp);\n      if (pointIndex !== -1) {\n        extendedDatapoints.push(seriesPoints[pointIndex]);\n      } else {\n        extendedDatapoints.push([null, timestamp]);\n      }\n    }\n    result.push(extendedDatapoints);\n  }\n  return result;\n}\n\nexport function exportSeriesListToCsvColumns(seriesList: SeriesList, options: Partial<SeriesListToCsvColumnsOptions>) {\n  const text = convertSeriesListToCsvColumns(seriesList, options);\n  saveSaveBlob(text, EXPORT_FILENAME);\n}\n\nexport function convertTableDataToCsv(table: TableData, excel = false) {\n  let text = formatSpecialHeader(excel);\n  // add headline\n  text += formatRow(table.columns.map((val: any) => val.title || val.text));\n  // process data\n  for (let i = 0; i < table.rows.length; i += 1) {\n    text += formatRow(table.rows[i], i < table.rows.length - 1);\n  }\n  return text;\n}\n\nexport function exportTableDataToCsv(table: TableData, excel = false) {\n  const text = convertTableDataToCsv(table, excel);\n  saveSaveBlob(text, EXPORT_FILENAME);\n}\n\nexport function saveSaveBlob(payload: any, fname: string) {\n  const blob = new Blob([payload], { type: 'text/csv;charset=utf-8;header=present;' });\n  saveAs(blob, fname);\n}\n","import React, { useContext } from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport { getTheme } from './getTheme';\nimport { GrafanaThemeType, Themeable } from '../types/theme';\n\ntype Omit<T, K> = Pick<T, Exclude<keyof T, K>>;\ntype Subtract<T, K> = Omit<T, keyof K>;\n\n// Use Grafana Dark theme by default\nexport const ThemeContext = React.createContext(getTheme(GrafanaThemeType.Dark));\n\nexport const withTheme = <P extends Themeable, S extends {} = {}>(Component: React.ComponentType<P>) => {\n  const WithTheme: React.FunctionComponent<Subtract<P, Themeable>> = props => {\n    // @ts-ignore\n    return <ThemeContext.Consumer>{theme => <Component {...props} theme={theme} />}</ThemeContext.Consumer>;\n  };\n\n  WithTheme.displayName = `WithTheme(${Component.displayName})`;\n  hoistNonReactStatics(WithTheme, Component);\n  type Hoisted = typeof WithTheme & S;\n  return WithTheme as Hoisted;\n};\n\nexport function useTheme() {\n  return useContext(ThemeContext);\n}\n","export * from './teams';\nexport * from './alerting';\nexport * from './location';\nexport * from './folders';\nexport * from './dashboard';\nexport * from './acl';\nexport * from './apiKeys';\nexport * from './user';\nexport * from './datasources';\nexport * from './plugins';\nexport * from './organization';\nexport * from './appNotifications';\nexport * from './search';\nexport * from './explore';\nexport * from './store';\nexport * from './ldap';\n","export * from './panel';\nexport * from './plugin';\nexport * from './app';\nexport * from './datasource';\nexport * from './theme';\nexport * from './input';\n","import _ from 'lodash';\nimport { TimeSrv } from 'app/features/dashboard/services/TimeSrv';\nimport templateSrv, { TemplateSrv } from 'app/features/templating/template_srv';\nimport coreModule from 'app/core/core_module';\nimport { appendQueryToUrl, toUrlParams } from 'app/core/utils/url';\nimport { VariableSuggestion, VariableOrigin, DataLinkBuiltInVars } from '@grafana/ui';\nimport { DataLink, KeyValue, deprecationWarning, LinkModel, DataFrame, ScopedVars } from '@grafana/data';\n\nconst timeRangeVars = [\n  {\n    value: `${DataLinkBuiltInVars.keepTime}`,\n    label: 'Time range',\n    documentation: 'Adds current time range',\n    origin: VariableOrigin.BuiltIn,\n  },\n  {\n    value: `${DataLinkBuiltInVars.timeRangeFrom}`,\n    label: 'Time range: from',\n    documentation: \"Adds current time range's from value\",\n    origin: VariableOrigin.BuiltIn,\n  },\n  {\n    value: `${DataLinkBuiltInVars.timeRangeTo}`,\n    label: 'Time range: to',\n    documentation: \"Adds current time range's to value\",\n    origin: VariableOrigin.BuiltIn,\n  },\n];\n\nconst fieldVars = [\n  {\n    value: `${DataLinkBuiltInVars.fieldName}`,\n    label: 'Name',\n    documentation: 'Field name of the clicked datapoint (in ms epoch)',\n    origin: VariableOrigin.Field,\n  },\n];\n\nconst valueVars = [\n  {\n    value: `${DataLinkBuiltInVars.valueNumeric}`,\n    label: 'Numeric',\n    documentation: 'Numeric representation of selected value',\n    origin: VariableOrigin.Value,\n  },\n  {\n    value: `${DataLinkBuiltInVars.valueText}`,\n    label: 'Text',\n    documentation: 'Text representation of selected value',\n    origin: VariableOrigin.Value,\n  },\n  {\n    value: `${DataLinkBuiltInVars.valueRaw}`,\n    label: 'Raw',\n    documentation: 'Raw value',\n    origin: VariableOrigin.Value,\n  },\n];\n\nconst buildLabelPath = (label: string) => {\n  return label.indexOf('.') > -1 ? `[\"${label}\"]` : `.${label}`;\n};\n\nexport const getPanelLinksVariableSuggestions = (): VariableSuggestion[] => [\n  ...templateSrv.variables.map(variable => ({\n    value: variable.name as string,\n    label: variable.name,\n    origin: VariableOrigin.Template,\n  })),\n  {\n    value: `${DataLinkBuiltInVars.includeVars}`,\n    label: 'All variables',\n    documentation: 'Adds current variables',\n    origin: VariableOrigin.Template,\n  },\n  ...timeRangeVars,\n];\n\nconst getSeriesVars = (dataFrames: DataFrame[]) => {\n  const labels = _.chain(dataFrames.map(df => Object.keys(df.labels || {})))\n    .flatten()\n    .uniq()\n    .value();\n\n  return [\n    {\n      value: `${DataLinkBuiltInVars.seriesName}`,\n      label: 'Name',\n      documentation: 'Name of the series',\n      origin: VariableOrigin.Series,\n    },\n    ...labels.map(label => ({\n      value: `__series.labels${buildLabelPath(label)}`,\n      label: `labels.${label}`,\n      documentation: `${label} label value`,\n      origin: VariableOrigin.Series,\n    })),\n  ];\n};\nexport const getDataLinksVariableSuggestions = (dataFrames: DataFrame[]): VariableSuggestion[] => {\n  const seriesVars = getSeriesVars(dataFrames);\n  const valueTimeVar = {\n    value: `${DataLinkBuiltInVars.valueTime}`,\n    label: 'Time',\n    documentation: 'Time value of the clicked datapoint (in ms epoch)',\n    origin: VariableOrigin.Value,\n  };\n\n  return [...seriesVars, ...fieldVars, ...valueVars, valueTimeVar, ...getPanelLinksVariableSuggestions()];\n};\n\nexport const getCalculationValueDataLinksVariableSuggestions = (dataFrames: DataFrame[]): VariableSuggestion[] => {\n  const seriesVars = getSeriesVars(dataFrames);\n  const valueCalcVar = {\n    value: `${DataLinkBuiltInVars.valueCalc}`,\n    label: 'Calculation name',\n    documentation: 'Name of the calculation the value is a result of',\n    origin: VariableOrigin.Value,\n  };\n  return [...seriesVars, ...fieldVars, ...valueVars, valueCalcVar, ...getPanelLinksVariableSuggestions()];\n};\n\nexport interface LinkService {\n  getDataLinkUIModel: <T>(link: DataLink, scopedVars: ScopedVars, origin: T) => LinkModel<T>;\n}\n\nexport class LinkSrv implements LinkService {\n  /** @ngInject */\n  constructor(private templateSrv: TemplateSrv, private timeSrv: TimeSrv) {}\n\n  getLinkUrl(link: any) {\n    const url = this.templateSrv.replace(link.url || '');\n    const params: { [key: string]: any } = {};\n\n    if (link.keepTime) {\n      const range = this.timeSrv.timeRangeForUrl();\n      params['from'] = range.from;\n      params['to'] = range.to;\n    }\n\n    if (link.includeVars) {\n      this.templateSrv.fillVariableValuesForUrl(params);\n    }\n\n    return appendQueryToUrl(url, toUrlParams(params));\n  }\n\n  getAnchorInfo(link: any) {\n    const info: any = {};\n    info.href = this.getLinkUrl(link);\n    info.title = this.templateSrv.replace(link.title || '');\n    return info;\n  }\n\n  getDataLinkUIModel = <T>(link: DataLink, scopedVars: ScopedVars, origin: T) => {\n    const params: KeyValue = {};\n    const timeRangeUrl = toUrlParams(this.timeSrv.timeRangeForUrl());\n\n    const info: LinkModel<T> = {\n      href: link.url.replace(/\\s|\\n/g, ''),\n      title: this.templateSrv.replace(link.title || '', scopedVars),\n      target: link.targetBlank ? '_blank' : '_self',\n      origin,\n    };\n    this.templateSrv.fillVariableValuesForUrl(params, scopedVars);\n\n    const variablesQuery = toUrlParams(params);\n    info.href = this.templateSrv.replace(info.href, {\n      ...scopedVars,\n      [DataLinkBuiltInVars.keepTime]: {\n        text: timeRangeUrl,\n        value: timeRangeUrl,\n      },\n      [DataLinkBuiltInVars.includeVars]: {\n        text: variablesQuery,\n        value: variablesQuery,\n      },\n    });\n\n    return info;\n  };\n\n  /**\n   * getPanelLinkAnchorInfo method is left for plugins compatibility reasons\n   *\n   * @deprecated Drilldown links should be generated using getDataLinkUIModel method\n   */\n  getPanelLinkAnchorInfo(link: DataLink, scopedVars: ScopedVars) {\n    deprecationWarning('link_srv.ts', 'getPanelLinkAnchorInfo', 'getDataLinkUIModel');\n    return this.getDataLinkUIModel(link, scopedVars, {});\n  }\n}\n\nlet singleton: LinkService;\n\nexport function setLinkSrv(srv: LinkService) {\n  singleton = srv;\n}\n\nexport function getLinkSrv(): LinkService {\n  return singleton;\n}\n\ncoreModule.service('linkSrv', LinkSrv);\n","import { getBackendSrv } from '@grafana/runtime';\nimport { dateTime } from '@grafana/data';\nimport { LdapUser, LdapConnectionInfo, UserSession, SyncInfo, User } from 'app/types';\n\nexport interface ServerStat {\n  name: string;\n  value: number;\n}\n\nexport const getServerStats = async (): Promise<ServerStat[]> => {\n  try {\n    const res = await getBackendSrv().get('api/admin/stats');\n    return [\n      { name: 'Total users', value: res.users },\n      { name: 'Total admins', value: res.admins },\n      { name: 'Total editors', value: res.editors },\n      { name: 'Total viewers', value: res.viewers },\n      { name: 'Active users (seen last 30 days)', value: res.activeUsers },\n      { name: 'Active admins (seen last 30 days)', value: res.activeAdmins },\n      { name: 'Active editors (seen last 30 days)', value: res.activeEditors },\n      { name: 'Active viewers (seen last 30 days)', value: res.activeViewers },\n      { name: 'Active sessions', value: res.activeSessions },\n      { name: 'Total dashboards', value: res.dashboards },\n      { name: 'Total orgs', value: res.orgs },\n      { name: 'Total playlists', value: res.playlists },\n      { name: 'Total snapshots', value: res.snapshots },\n      { name: 'Total dashboard tags', value: res.tags },\n      { name: 'Total starred dashboards', value: res.stars },\n      { name: 'Total alerts', value: res.alerts },\n    ];\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getLdapState = async (): Promise<LdapConnectionInfo> => {\n  return await getBackendSrv().get(`/api/admin/ldap/status`);\n};\n\nexport const getLdapSyncStatus = async (): Promise<SyncInfo> => {\n  return await getBackendSrv().get(`/api/admin/ldap-sync-status`);\n};\n\nexport const syncLdapUser = async (userId: number) => {\n  return await getBackendSrv().post(`/api/admin/ldap/sync/${userId}`);\n};\n\nexport const getUserInfo = async (username: string): Promise<LdapUser> => {\n  const response = await getBackendSrv().get(`/api/admin/ldap/${username}`);\n  const { name, surname, email, login, isGrafanaAdmin, isDisabled, roles, teams } = response;\n  return {\n    info: { name, surname, email, login },\n    permissions: { isGrafanaAdmin, isDisabled },\n    roles,\n    teams,\n  };\n};\n\nexport const getUser = async (id: number): Promise<User> => {\n  return await getBackendSrv().get('/api/users/' + id);\n};\n\nexport const getUserSessions = async (id: number) => {\n  const sessions = await getBackendSrv().get('/api/admin/users/' + id + '/auth-tokens');\n  sessions.reverse();\n\n  return sessions.map((session: UserSession) => {\n    return {\n      id: session.id,\n      isActive: session.isActive,\n      seenAt: dateTime(session.seenAt).fromNow(),\n      createdAt: dateTime(session.createdAt).format('MMMM DD, YYYY'),\n      clientIp: session.clientIp,\n      browser: session.browser,\n      browserVersion: session.browserVersion,\n      os: session.os,\n      osVersion: session.osVersion,\n      device: session.device,\n    };\n  });\n};\n\nexport const revokeUserSession = async (tokenId: number, userId: number) => {\n  return await getBackendSrv().post(`/api/admin/users/${userId}/revoke-auth-token`, {\n    authTokenId: tokenId,\n  });\n};\n\nexport const revokeAllUserSessions = async (userId: number) => {\n  return await getBackendSrv().post(`/api/admin/users/${userId}/logout`);\n};\n","var path = 'public/app/plugins/app/example-app/legacy/config.html';\nvar html = \"<h2>Example Application</h2>\\n\\n<p>\\nAngular based config:\\n</p>\\n\\n<div class=gf-form>\\n  <div class=gf-form-group>\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <span class=gf-form-label>json Data property</span>\\n        <input type=text class=gf-form-input ng-model=ctrl.appModel.jsonData.customText>\\n      </div>\\n      <div class=gf-form>\\n        <gf-form-checkbox class=gf-form label=\\\"Custom Value\\\" checked=ctrl.appModel.jsonData.customCheckbox switch-class=max-width-6></gf-form-checkbox>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import _ from 'lodash';\nimport $ from 'jquery';\nimport coreModule from '../core_module';\n\n/** @ngInject */\nexport function dropdownTypeahead($compile: any) {\n  const inputTemplate =\n    '<input type=\"text\"' +\n    ' class=\"gf-form-input input-medium tight-form-input\"' +\n    ' spellcheck=\"false\" style=\"display:none\"></input>';\n\n  const buttonTemplate =\n    '<a class=\"gf-form-label tight-form-func dropdown-toggle\"' +\n    ' tabindex=\"1\" gf-dropdown=\"menuItems\" data-toggle=\"dropdown\"' +\n    ' ><i class=\"fa fa-plus\"></i></a>';\n\n  return {\n    scope: {\n      menuItems: '=dropdownTypeahead',\n      dropdownTypeaheadOnSelect: '&dropdownTypeaheadOnSelect',\n      model: '=ngModel',\n    },\n    link: ($scope: any, elem: any, attrs: any) => {\n      const $input = $(inputTemplate);\n      const $button = $(buttonTemplate);\n      $input.appendTo(elem);\n      $button.appendTo(elem);\n\n      if (attrs.linkText) {\n        $button.html(attrs.linkText);\n      }\n\n      if (attrs.ngModel) {\n        $scope.$watch('model', (newValue: any) => {\n          _.each($scope.menuItems, item => {\n            _.each(item.submenu, subItem => {\n              if (subItem.value === newValue) {\n                $button.html(subItem.text);\n              }\n            });\n          });\n        });\n      }\n\n      const typeaheadValues = _.reduce(\n        $scope.menuItems,\n        (memo, value, index) => {\n          if (!value.submenu) {\n            value.click = 'menuItemSelected(' + index + ')';\n            memo.push(value.text);\n          } else {\n            _.each(value.submenu, (item, subIndex) => {\n              item.click = 'menuItemSelected(' + index + ',' + subIndex + ')';\n              memo.push(value.text + ' ' + item.text);\n            });\n          }\n          return memo;\n        },\n        []\n      );\n\n      const closeDropdownMenu = () => {\n        $input.hide();\n        $input.val('');\n        $button.show();\n        $button.focus();\n        elem.removeClass('open');\n      };\n\n      $scope.menuItemSelected = (index: number, subIndex: number) => {\n        const menuItem = $scope.menuItems[index];\n        const payload: any = { $item: menuItem };\n        if (menuItem.submenu && subIndex !== void 0) {\n          payload.$subItem = menuItem.submenu[subIndex];\n        }\n        $scope.dropdownTypeaheadOnSelect(payload);\n        closeDropdownMenu();\n      };\n\n      $input.attr('data-provide', 'typeahead');\n      $input.typeahead({\n        source: typeaheadValues,\n        minLength: 1,\n        items: 10,\n        updater: (value: string) => {\n          const result: any = {};\n          _.each($scope.menuItems, menuItem => {\n            _.each(menuItem.submenu, submenuItem => {\n              if (value === menuItem.text + ' ' + submenuItem.text) {\n                result.$subItem = submenuItem;\n                result.$item = menuItem;\n              }\n            });\n          });\n\n          if (result.$item) {\n            $scope.$apply(() => {\n              $scope.dropdownTypeaheadOnSelect(result);\n            });\n          }\n\n          $input.trigger('blur');\n          return '';\n        },\n      });\n\n      $button.click(() => {\n        $button.hide();\n        $input.show();\n        $input.focus();\n      });\n\n      $input.keyup(() => {\n        elem.toggleClass('open', $input.val() === '');\n      });\n\n      elem.mousedown((evt: Event) => {\n        evt.preventDefault();\n      });\n\n      $input.blur(() => {\n        $input.hide();\n        $input.val('');\n        $button.show();\n        $button.focus();\n        // clicking the function dropdown menu won't\n        // work if you remove class at once\n        setTimeout(() => {\n          elem.removeClass('open');\n        }, 200);\n      });\n\n      $compile(elem.contents())($scope);\n    },\n  };\n}\n\n/** @ngInject */\nexport function dropdownTypeahead2($compile: any) {\n  const inputTemplate =\n    '<input type=\"text\"' + ' class=\"gf-form-input\"' + ' spellcheck=\"false\" style=\"display:none\"></input>';\n\n  const buttonTemplate =\n    '<a class=\"{{buttonTemplateClass}} dropdown-toggle\"' +\n    ' tabindex=\"1\" gf-dropdown=\"menuItems\" data-toggle=\"dropdown\"' +\n    ' ><i class=\"fa fa-plus\"></i></a>';\n\n  return {\n    scope: {\n      menuItems: '=dropdownTypeahead2',\n      dropdownTypeaheadOnSelect: '&dropdownTypeaheadOnSelect',\n      model: '=ngModel',\n      buttonTemplateClass: '@',\n    },\n    link: ($scope: any, elem: any, attrs: any) => {\n      const $input = $(inputTemplate);\n\n      if (!$scope.buttonTemplateClass) {\n        $scope.buttonTemplateClass = 'gf-form-input';\n      }\n\n      const $button = $(buttonTemplate);\n      const timeoutId = {\n        blur: null as any,\n      };\n      $input.appendTo(elem);\n      $button.appendTo(elem);\n\n      if (attrs.linkText) {\n        $button.html(attrs.linkText);\n      }\n\n      if (attrs.ngModel) {\n        $scope.$watch('model', (newValue: any) => {\n          _.each($scope.menuItems, item => {\n            _.each(item.submenu, subItem => {\n              if (subItem.value === newValue) {\n                $button.html(subItem.text);\n              }\n            });\n          });\n        });\n      }\n\n      const typeaheadValues = _.reduce(\n        $scope.menuItems,\n        (memo, value, index) => {\n          if (!value.submenu) {\n            value.click = 'menuItemSelected(' + index + ')';\n            memo.push(value.text);\n          } else {\n            _.each(value.submenu, (item, subIndex) => {\n              item.click = 'menuItemSelected(' + index + ',' + subIndex + ')';\n              memo.push(value.text + ' ' + item.text);\n            });\n          }\n          return memo;\n        },\n        []\n      );\n\n      const closeDropdownMenu = () => {\n        $input.hide();\n        $input.val('');\n        $button.show();\n        $button.focus();\n        elem.removeClass('open');\n      };\n\n      $scope.menuItemSelected = (index: number, subIndex: number) => {\n        const menuItem = $scope.menuItems[index];\n        const payload: any = { $item: menuItem };\n        if (menuItem.submenu && subIndex !== void 0) {\n          payload.$subItem = menuItem.submenu[subIndex];\n        }\n        $scope.dropdownTypeaheadOnSelect(payload);\n        closeDropdownMenu();\n      };\n\n      $input.attr('data-provide', 'typeahead');\n      $input.typeahead({\n        source: typeaheadValues,\n        minLength: 1,\n        items: 10,\n        updater: (value: string) => {\n          const result: any = {};\n          _.each($scope.menuItems, menuItem => {\n            _.each(menuItem.submenu, submenuItem => {\n              if (value === menuItem.text + ' ' + submenuItem.text) {\n                result.$subItem = submenuItem;\n                result.$item = menuItem;\n              }\n            });\n          });\n\n          if (result.$item) {\n            $scope.$apply(() => {\n              $scope.dropdownTypeaheadOnSelect(result);\n            });\n          }\n\n          $input.trigger('blur');\n          return '';\n        },\n      });\n\n      $button.click(() => {\n        $button.hide();\n        $input.show();\n        $input.focus();\n      });\n\n      $input.keyup(() => {\n        elem.toggleClass('open', $input.val() === '');\n      });\n\n      elem.mousedown((evt: Event) => {\n        evt.preventDefault();\n        timeoutId.blur = null;\n      });\n\n      $input.blur(() => {\n        timeoutId.blur = setTimeout(() => {\n          closeDropdownMenu();\n        }, 1);\n      });\n\n      $compile(elem.contents())($scope);\n    },\n  };\n}\n\ncoreModule.directive('dropdownTypeahead', dropdownTypeahead);\ncoreModule.directive('dropdownTypeahead2', dropdownTypeahead2);\n","import coreModule from '../core_module';\n\n/** @ngInject */\nexport function autofillEventFix($compile: any) {\n  return {\n    link: ($scope: any, elem: any) => {\n      const input = elem[0];\n      const dispatchChangeEvent = () => {\n        const event = new Event('change');\n        return input.dispatchEvent(event);\n      };\n      const onAnimationStart = ({ animationName }: AnimationEvent) => {\n        switch (animationName) {\n          case 'onAutoFillStart':\n            return dispatchChangeEvent();\n          case 'onAutoFillCancel':\n            return dispatchChangeEvent();\n        }\n        return null;\n      };\n\n      // const onChange = (evt: Event) => console.log(evt);\n\n      input.addEventListener('animationstart', onAnimationStart);\n      // input.addEventListener('change', onChange);\n\n      $scope.$on('$destroy', () => {\n        input.removeEventListener('animationstart', onAnimationStart);\n        // input.removeEventListener('change', onChange);\n      });\n    },\n  };\n}\n\ncoreModule.directive('autofillEventFix', autofillEventFix);\n","import _ from 'lodash';\nimport $ from 'jquery';\nimport coreModule from '../core_module';\nimport { TemplateSrv } from 'app/features/templating/template_srv';\n\n/** @ngInject */\nexport function metricSegment($compile: any, $sce: any, templateSrv: TemplateSrv) {\n  const inputTemplate =\n    '<input type=\"text\" data-provide=\"typeahead\" ' +\n    ' class=\"gf-form-input input-medium\"' +\n    ' spellcheck=\"false\" style=\"display:none\"></input>';\n\n  const linkTemplate =\n    '<a class=\"gf-form-label\" ng-class=\"segment.cssClass\" ' +\n    'tabindex=\"1\" give-focus=\"segment.focus\" ng-bind-html=\"segment.html\"></a>';\n\n  const selectTemplate =\n    '<a class=\"gf-form-input gf-form-input--dropdown\" ng-class=\"segment.cssClass\" ' +\n    'tabindex=\"1\" give-focus=\"segment.focus\" ng-bind-html=\"segment.html\"></a>';\n\n  return {\n    scope: {\n      segment: '=',\n      getOptions: '&',\n      onChange: '&',\n      debounce: '@',\n    },\n    link: ($scope: any, elem: any) => {\n      const $input = $(inputTemplate);\n      const segment = $scope.segment;\n      const $button = $(segment.selectMode ? selectTemplate : linkTemplate);\n      let options = null;\n      let cancelBlur: any = null;\n      let linkMode = true;\n      const debounceLookup = $scope.debounce;\n\n      $input.appendTo(elem);\n      $button.appendTo(elem);\n\n      $scope.updateVariableValue = (value: string) => {\n        if (value === '' || segment.value === value) {\n          return;\n        }\n\n        $scope.$apply(() => {\n          const selected: any = _.find($scope.altSegments, { value: value });\n          if (selected) {\n            segment.value = selected.value;\n            segment.html = selected.html || $sce.trustAsHtml(templateSrv.highlightVariablesAsHtml(selected.value));\n            segment.fake = false;\n            segment.expandable = selected.expandable;\n\n            if (selected.type) {\n              segment.type = selected.type;\n            }\n          } else if (segment.custom !== 'false') {\n            segment.value = value;\n            segment.html = $sce.trustAsHtml(templateSrv.highlightVariablesAsHtml(value));\n            segment.expandable = true;\n            segment.fake = false;\n          }\n\n          $scope.onChange();\n        });\n      };\n\n      $scope.switchToLink = (fromClick: boolean) => {\n        if (linkMode && !fromClick) {\n          return;\n        }\n\n        clearTimeout(cancelBlur);\n        cancelBlur = null;\n        linkMode = true;\n        $input.hide();\n        $button.show();\n        $scope.updateVariableValue($input.val());\n      };\n\n      $scope.inputBlur = () => {\n        // happens long before the click event on the typeahead options\n        // need to have long delay because the blur\n        cancelBlur = setTimeout($scope.switchToLink, 200);\n      };\n\n      $scope.source = (query: string, callback: any) => {\n        $scope.$apply(() => {\n          $scope.getOptions({ $query: query }).then((altSegments: any) => {\n            $scope.altSegments = altSegments;\n            options = _.map($scope.altSegments, alt => {\n              return _.escape(alt.value);\n            });\n\n            // add custom values\n            if (segment.custom !== 'false') {\n              if (!segment.fake && _.indexOf(options, segment.value) === -1) {\n                options.unshift(_.escape(segment.value));\n              }\n            }\n\n            callback(options);\n          });\n        });\n      };\n\n      $scope.updater = (value: string) => {\n        value = _.unescape(value);\n        if (value === segment.value) {\n          clearTimeout(cancelBlur);\n          $input.focus();\n          return value;\n        }\n\n        $input.val(value);\n        $scope.switchToLink(true);\n\n        return value;\n      };\n\n      $scope.matcher = function(item: string) {\n        if (linkMode) {\n          return false;\n        }\n        let str = this.query;\n        if (str[0] === '/') {\n          str = str.substring(1);\n        }\n        if (str[str.length - 1] === '/') {\n          str = str.substring(0, str.length - 1);\n        }\n        try {\n          return item.toLowerCase().match(str.toLowerCase());\n        } catch (e) {\n          return false;\n        }\n      };\n\n      $input.attr('data-provide', 'typeahead');\n      $input.typeahead({\n        source: $scope.source,\n        minLength: 0,\n        items: 10000,\n        updater: $scope.updater,\n        matcher: $scope.matcher,\n      });\n\n      const typeahead = $input.data('typeahead');\n      typeahead.lookup = function() {\n        this.query = this.$element.val() || '';\n        const items = this.source(this.query, $.proxy(this.process, this));\n        return items ? this.process(items) : items;\n      };\n\n      if (debounceLookup) {\n        typeahead.lookup = _.debounce(typeahead.lookup, 500, { leading: true });\n      }\n\n      $button.keydown(evt => {\n        // trigger typeahead on down arrow or enter key\n        if (evt.keyCode === 40 || evt.keyCode === 13) {\n          $button.click();\n        }\n      });\n\n      $button.click(() => {\n        options = null;\n        $input.css('width', Math.max($button.width(), 80) + 16 + 'px');\n\n        $button.hide();\n        $input.show();\n        $input.focus();\n\n        linkMode = false;\n\n        const typeahead = $input.data('typeahead');\n        if (typeahead) {\n          $input.val('');\n          typeahead.lookup();\n        }\n      });\n\n      $input.blur($scope.inputBlur);\n\n      $compile(elem.contents())($scope);\n    },\n  };\n}\n\n/** @ngInject */\nexport function metricSegmentModel(uiSegmentSrv: any, $q: any) {\n  return {\n    template:\n      '<metric-segment segment=\"segment\" get-options=\"getOptionsInternal()\" on-change=\"onSegmentChange()\"></metric-segment>',\n    restrict: 'E',\n    scope: {\n      property: '=',\n      options: '=',\n      getOptions: '&',\n      onChange: '&',\n    },\n    link: {\n      pre: function postLink($scope: any, elem: any, attrs: any) {\n        let cachedOptions: any;\n\n        $scope.valueToSegment = (value: any) => {\n          const option: any = _.find($scope.options, { value: value });\n          const segment = {\n            cssClass: attrs.cssClass,\n            custom: attrs.custom,\n            value: option ? option.text : value,\n            selectMode: attrs.selectMode,\n          };\n\n          return uiSegmentSrv.newSegment(segment);\n        };\n\n        $scope.getOptionsInternal = () => {\n          if ($scope.options) {\n            cachedOptions = $scope.options;\n            return $q.when(\n              _.map($scope.options, option => {\n                return { value: option.text };\n              })\n            );\n          } else {\n            return $scope.getOptions().then((options: any) => {\n              cachedOptions = options;\n              return _.map(options, option => {\n                if (option.html) {\n                  return option;\n                }\n                return { value: option.text };\n              });\n            });\n          }\n        };\n\n        $scope.onSegmentChange = () => {\n          if (cachedOptions) {\n            const option: any = _.find(cachedOptions, { text: $scope.segment.value });\n            if (option && option.value !== $scope.property) {\n              $scope.property = option.value;\n            } else if (attrs.custom !== 'false') {\n              $scope.property = $scope.segment.value;\n            }\n          } else {\n            $scope.property = $scope.segment.value;\n          }\n\n          // needs to call this after digest so\n          // property is synced with outerscope\n          $scope.$$postDigest(() => {\n            $scope.$apply(() => {\n              $scope.onChange();\n            });\n          });\n        };\n\n        $scope.segment = $scope.valueToSegment($scope.property);\n      },\n    },\n  };\n}\n\ncoreModule.directive('metricSegment', metricSegment);\ncoreModule.directive('metricSegmentModel', metricSegmentModel);\n","import angular from 'angular';\nimport Clipboard from 'clipboard';\nimport coreModule from '../core_module';\nimport kbn from 'app/core/utils/kbn';\nimport { appEvents } from 'app/core/core';\n\n/** @ngInject */\nfunction tip($compile: any) {\n  return {\n    restrict: 'E',\n    link: (scope: any, elem: any, attrs: any) => {\n      let _t =\n        '<i class=\"grafana-tip fa fa-' +\n        (attrs.icon || 'question-circle') +\n        '\" bs-tooltip=\"\\'' +\n        kbn.addslashes(elem.text()) +\n        '\\'\"></i>';\n      _t = _t.replace(/{/g, '\\\\{').replace(/}/g, '\\\\}');\n      elem.replaceWith($compile(angular.element(_t))(scope));\n    },\n  };\n}\n\nfunction clipboardButton() {\n  return {\n    scope: {\n      getText: '&clipboardButton',\n    },\n    link: (scope: any, elem: any) => {\n      scope.clipboard = new Clipboard(elem[0], {\n        text: () => {\n          return scope.getText();\n        },\n      });\n\n      scope.clipboard.on('success', () => {\n        appEvents.emit('alert-success', ['Content copied to clipboard']);\n      });\n\n      scope.$on('$destroy', () => {\n        if (scope.clipboard) {\n          scope.clipboard.destroy();\n        }\n      });\n    },\n  };\n}\n\n/** @ngInject */\nfunction compile($compile: any) {\n  return {\n    restrict: 'A',\n    link: (scope: any, element: any, attrs: any) => {\n      scope.$watch(\n        (scope: any) => {\n          return scope.$eval(attrs.compile);\n        },\n        (value: any) => {\n          element.html(value);\n          $compile(element.contents())(scope);\n        }\n      );\n    },\n  };\n}\n\nfunction watchChange() {\n  return {\n    scope: { onchange: '&watchChange' },\n    link: (scope: any, element: any) => {\n      element.on('input', () => {\n        scope.$apply(() => {\n          scope.onchange({ inputValue: element.val() });\n        });\n      });\n    },\n  };\n}\n\n/** @ngInject */\nfunction editorOptBool($compile: any) {\n  return {\n    restrict: 'E',\n    link: (scope: any, elem: any, attrs: any) => {\n      const ngchange = attrs.change ? ' ng-change=\"' + attrs.change + '\"' : '';\n      const tip = attrs.tip ? ' <tip>' + attrs.tip + '</tip>' : '';\n      const showIf = attrs.showIf ? ' ng-show=\"' + attrs.showIf + '\" ' : '';\n\n      const template =\n        '<div class=\"editor-option gf-form-checkbox text-center\"' +\n        showIf +\n        '>' +\n        ' <label for=\"' +\n        attrs.model +\n        '\" class=\"small\">' +\n        attrs.text +\n        tip +\n        '</label>' +\n        '<input class=\"cr1\" id=\"' +\n        attrs.model +\n        '\" type=\"checkbox\" ' +\n        '       ng-model=\"' +\n        attrs.model +\n        '\"' +\n        ngchange +\n        '       ng-checked=\"' +\n        attrs.model +\n        '\"></input>' +\n        ' <label for=\"' +\n        attrs.model +\n        '\" class=\"cr1\"></label>';\n      elem.replaceWith($compile(angular.element(template))(scope));\n    },\n  };\n}\n\n/** @ngInject */\nfunction editorCheckbox($compile: any, $interpolate: any) {\n  return {\n    restrict: 'E',\n    link: (scope: any, elem: any, attrs: any) => {\n      const text = $interpolate(attrs.text)(scope);\n      const model = $interpolate(attrs.model)(scope);\n      const ngchange = attrs.change ? ' ng-change=\"' + attrs.change + '\"' : '';\n      const tip = attrs.tip ? ' <tip>' + attrs.tip + '</tip>' : '';\n      const label = '<label for=\"' + scope.$id + model + '\" class=\"checkbox-label\">' + text + tip + '</label>';\n\n      let template =\n        '<input class=\"cr1\" id=\"' +\n        scope.$id +\n        model +\n        '\" type=\"checkbox\" ' +\n        '       ng-model=\"' +\n        model +\n        '\"' +\n        ngchange +\n        '       ng-checked=\"' +\n        model +\n        '\"></input>' +\n        ' <label for=\"' +\n        scope.$id +\n        model +\n        '\" class=\"cr1\"></label>';\n\n      template = template + label;\n      elem.addClass('gf-form-checkbox');\n      elem.html($compile(angular.element(template))(scope));\n    },\n  };\n}\n\n/** @ngInject */\nfunction gfDropdown($parse: any, $compile: any, $timeout: any) {\n  function buildTemplate(items: any, placement?: any) {\n    const upclass = placement === 'top' ? 'dropup' : '';\n    const ul = ['<ul class=\"dropdown-menu ' + upclass + '\" role=\"menu\" aria-labelledby=\"drop1\">', '</ul>'];\n\n    for (let index = 0; index < items.length; index++) {\n      const item = items[index];\n\n      if (item.divider) {\n        ul.splice(index + 1, 0, '<li class=\"divider\"></li>');\n        continue;\n      }\n\n      let li =\n        '<li' +\n        (item.submenu && item.submenu.length ? ' class=\"dropdown-submenu\"' : '') +\n        '>' +\n        '<a tabindex=\"-1\" ng-href=\"' +\n        (item.href || '') +\n        '\"' +\n        (item.click ? ' ng-click=\"' + item.click + '\"' : '') +\n        (item.target ? ' target=\"' + item.target + '\"' : '') +\n        (item.method ? ' data-method=\"' + item.method + '\"' : '') +\n        '>' +\n        (item.text || '') +\n        '</a>';\n\n      if (item.submenu && item.submenu.length) {\n        li += buildTemplate(item.submenu).join('\\n');\n      }\n\n      li += '</li>';\n      ul.splice(index + 1, 0, li);\n    }\n\n    return ul;\n  }\n\n  return {\n    restrict: 'EA',\n    scope: true,\n    link: function postLink(scope: any, iElement: any, iAttrs: any) {\n      const getter = $parse(iAttrs.gfDropdown),\n        items = getter(scope);\n      $timeout(() => {\n        const placement = iElement.data('placement');\n        const dropdown = angular.element(buildTemplate(items, placement).join(''));\n        dropdown.insertAfter(iElement);\n        $compile(iElement.next('ul.dropdown-menu'))(scope);\n      });\n\n      iElement.addClass('dropdown-toggle').attr('data-toggle', 'dropdown');\n    },\n  };\n}\n\ncoreModule.directive('tip', tip);\ncoreModule.directive('clipboardButton', clipboardButton);\ncoreModule.directive('compile', compile);\ncoreModule.directive('watchChange', watchChange);\ncoreModule.directive('editorOptBool', editorOptBool);\ncoreModule.directive('editorCheckbox', editorCheckbox);\ncoreModule.directive('gfDropdown', gfDropdown);\n","import coreModule from '../core_module';\nimport { rangeUtil } from '@grafana/data';\n\nfunction ngModelOnBlur() {\n  return {\n    restrict: 'A',\n    priority: 1,\n    require: 'ngModel',\n    link: (scope: any, elm: any, attr: any, ngModelCtrl: any) => {\n      if (attr.type === 'radio' || attr.type === 'checkbox') {\n        return;\n      }\n\n      elm.off('input keydown change');\n      elm.bind('blur', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(elm.val());\n        });\n      });\n    },\n  };\n}\n\nfunction emptyToNull() {\n  return {\n    restrict: 'A',\n    require: 'ngModel',\n    link: (scope: any, elm: any, attrs: any, ctrl: any) => {\n      ctrl.$parsers.push((viewValue: any) => {\n        if (viewValue === '') {\n          return null;\n        }\n        return viewValue;\n      });\n    },\n  };\n}\n\nfunction validTimeSpan() {\n  return {\n    require: 'ngModel',\n    link: (scope: any, elm: any, attrs: any, ctrl: any) => {\n      ctrl.$validators.integer = (modelValue: any, viewValue: any) => {\n        if (ctrl.$isEmpty(modelValue)) {\n          return true;\n        }\n        if (viewValue.indexOf('$') === 0 || viewValue.indexOf('+$') === 0) {\n          return true; // allow template variable\n        }\n        const info = rangeUtil.describeTextRange(viewValue);\n        return info.invalid !== true;\n      };\n    },\n  };\n}\n\ncoreModule.directive('ngModelOnblur', ngModelOnBlur);\ncoreModule.directive('emptyToNull', emptyToNull);\ncoreModule.directive('validTimeSpan', validTimeSpan);\n","import angular from 'angular';\nimport $ from 'jquery';\nimport coreModule from '../core_module';\nimport tags from 'app/core/utils/tags';\nimport 'vendor/tagsinput/bootstrap-tagsinput.js';\n\nfunction setColor(name: string, element: JQuery) {\n  const { color, borderColor } = tags.getTagColorsFromName(name);\n  element.css('background-color', color);\n  element.css('border-color', borderColor);\n}\n\nfunction tagColorFromName() {\n  return {\n    scope: { tagColorFromName: '=' },\n    link: (scope: any, element: any) => {\n      setColor(scope.tagColorFromName, element);\n    },\n  };\n}\n\nfunction bootstrapTagsinput() {\n  function getItemProperty(scope: any, property: any) {\n    if (!property) {\n      return undefined;\n    }\n\n    if (angular.isFunction(scope.$parent[property])) {\n      return scope.$parent[property];\n    }\n\n    return (item: any) => {\n      return item[property];\n    };\n  }\n\n  return {\n    restrict: 'EA',\n    scope: {\n      model: '=ngModel',\n      onTagsUpdated: '&',\n    },\n    template: '<select multiple></select>',\n    replace: false,\n    link: function(scope: any, element: any, attrs: any) {\n      if (!angular.isArray(scope.model)) {\n        scope.model = [];\n      }\n\n      const select = $('select', element);\n\n      if (attrs.placeholder) {\n        select.attr('placeholder', attrs.placeholder);\n      }\n\n      select.tagsinput({\n        typeahead: {\n          source: angular.isFunction(scope.$parent[attrs.typeaheadSource])\n            ? scope.$parent[attrs.typeaheadSource]\n            : null,\n        },\n        widthClass: attrs.widthClass,\n        itemValue: getItemProperty(scope, attrs.itemvalue),\n        itemText: getItemProperty(scope, attrs.itemtext),\n        tagClass: angular.isFunction(scope.$parent[attrs.tagclass])\n          ? scope.$parent[attrs.tagclass]\n          : () => {\n              return attrs.tagclass;\n            },\n      });\n\n      select.on('itemAdded', (event: any) => {\n        if (scope.model.indexOf(event.item) === -1) {\n          scope.model.push(event.item);\n          if (scope.onTagsUpdated) {\n            scope.onTagsUpdated();\n          }\n        }\n        const tagElement = select\n          .next()\n          .children('span')\n          .filter(() => {\n            return $(this).text() === event.item;\n          });\n        setColor(event.item, tagElement);\n      });\n\n      select.on('itemRemoved', (event: any) => {\n        const idx = scope.model.indexOf(event.item);\n        if (idx !== -1) {\n          scope.model.splice(idx, 1);\n          if (scope.onTagsUpdated) {\n            scope.onTagsUpdated();\n          }\n        }\n      });\n\n      scope.$watch(\n        'model',\n        () => {\n          if (!angular.isArray(scope.model)) {\n            scope.model = [];\n          }\n\n          select.tagsinput('removeAll');\n\n          for (let i = 0; i < scope.model.length; i++) {\n            select.tagsinput('add', scope.model[i]);\n          }\n        },\n        true\n      );\n    },\n  };\n}\n\ncoreModule.directive('tagColorFromName', tagColorFromName);\ncoreModule.directive('bootstrapTagsinput', bootstrapTagsinput);\n","import angular from 'angular';\nimport _ from 'lodash';\nimport coreModule from '../core_module';\n\nexport class ValueSelectDropdownCtrl {\n  dropdownVisible: any;\n  highlightIndex: any;\n  linkText: any;\n  oldVariableText: any;\n  options: any;\n  search: any;\n  selectedTags: any;\n  selectedValues: any;\n  tags: any;\n  variable: any;\n\n  hide: any;\n  onUpdated: any;\n\n  /** @ngInject */\n  constructor(private $q: any) {}\n\n  show() {\n    this.oldVariableText = this.variable.current.text;\n    this.highlightIndex = -1;\n\n    this.options = this.variable.options;\n    this.selectedValues = _.filter(this.options, { selected: true });\n\n    this.tags = _.map(this.variable.tags, value => {\n      let tag = { text: value, selected: false };\n      _.each(this.variable.current.tags, tagObj => {\n        if (tagObj.text === value) {\n          tag = tagObj;\n        }\n      });\n      return tag;\n    });\n\n    this.search = {\n      query: '',\n      options: this.options.slice(0, Math.min(this.options.length, 1000)),\n    };\n\n    this.dropdownVisible = true;\n  }\n\n  updateLinkText() {\n    const current = this.variable.current;\n\n    if (current.tags && current.tags.length) {\n      // filer out values that are in selected tags\n      const selectedAndNotInTag = _.filter(this.variable.options, option => {\n        if (!option.selected) {\n          return false;\n        }\n        for (let i = 0; i < current.tags.length; i++) {\n          const tag = current.tags[i];\n          if (_.indexOf(tag.values, option.value) !== -1) {\n            return false;\n          }\n        }\n        return true;\n      });\n\n      // convert values to text\n      const currentTexts = _.map(selectedAndNotInTag, 'text');\n\n      // join texts\n      this.linkText = currentTexts.join(' + ');\n      if (this.linkText.length > 0) {\n        this.linkText += ' + ';\n      }\n    } else {\n      this.linkText = this.variable.current.text;\n    }\n  }\n\n  clearSelections() {\n    this.selectedValues = _.filter(this.options, { selected: true });\n\n    if (this.selectedValues.length) {\n      _.each(this.options, option => {\n        option.selected = false;\n      });\n    } else {\n      _.each(this.search.options, option => {\n        option.selected = true;\n      });\n    }\n    this.selectionsChanged(false);\n  }\n\n  selectTag(tag: any) {\n    tag.selected = !tag.selected;\n    let tagValuesPromise;\n    if (!tag.values) {\n      tagValuesPromise = this.variable.getValuesForTag(tag.text);\n    } else {\n      tagValuesPromise = this.$q.when(tag.values);\n    }\n\n    return tagValuesPromise.then((values: any) => {\n      tag.values = values;\n      tag.valuesText = values.join(' + ');\n      _.each(this.options, option => {\n        if (_.indexOf(tag.values, option.value) !== -1) {\n          option.selected = tag.selected;\n        }\n      });\n\n      this.selectionsChanged(false);\n    });\n  }\n\n  keyDown(evt: any) {\n    if (evt.keyCode === 27) {\n      this.hide();\n    }\n    if (evt.keyCode === 40) {\n      this.moveHighlight(1);\n    }\n    if (evt.keyCode === 38) {\n      this.moveHighlight(-1);\n    }\n    if (evt.keyCode === 13) {\n      if (this.search.options.length === 0) {\n        this.commitChanges();\n      } else {\n        this.selectValue(this.search.options[this.highlightIndex], {}, true, false);\n      }\n    }\n    if (evt.keyCode === 32) {\n      this.selectValue(this.search.options[this.highlightIndex], {}, false, false);\n    }\n  }\n\n  moveHighlight(direction: number) {\n    this.highlightIndex = (this.highlightIndex + direction) % this.search.options.length;\n  }\n\n  selectValue(option: any, event: any, commitChange?: boolean, excludeOthers?: boolean) {\n    if (!option) {\n      return;\n    }\n\n    option.selected = this.variable.multi ? !option.selected : true;\n\n    commitChange = commitChange || false;\n    excludeOthers = excludeOthers || false;\n\n    const setAllExceptCurrentTo = (newValue: any) => {\n      _.each(this.options, other => {\n        if (option !== other) {\n          other.selected = newValue;\n        }\n      });\n    };\n\n    // commit action (enter key), should not deselect it\n    if (commitChange) {\n      option.selected = true;\n    }\n\n    if (option.text === 'All' || excludeOthers) {\n      setAllExceptCurrentTo(false);\n      commitChange = true;\n    } else if (!this.variable.multi) {\n      setAllExceptCurrentTo(false);\n      commitChange = true;\n    } else if (event.ctrlKey || event.metaKey || event.shiftKey) {\n      commitChange = true;\n      setAllExceptCurrentTo(false);\n    }\n\n    this.selectionsChanged(commitChange);\n  }\n\n  selectionsChanged(commitChange: boolean) {\n    this.selectedValues = _.filter(this.options, { selected: true });\n\n    if (this.selectedValues.length > 1) {\n      if (this.selectedValues[0].text === 'All') {\n        this.selectedValues[0].selected = false;\n        this.selectedValues = this.selectedValues.slice(1, this.selectedValues.length);\n      }\n    }\n\n    // validate selected tags\n    _.each(this.tags, tag => {\n      if (tag.selected) {\n        _.each(tag.values, value => {\n          if (!_.find(this.selectedValues, { value: value })) {\n            tag.selected = false;\n          }\n        });\n      }\n    });\n\n    this.selectedTags = _.filter(this.tags, { selected: true });\n    this.variable.current.value = _.map(this.selectedValues, 'value');\n    this.variable.current.text = _.map(this.selectedValues, 'text').join(' + ');\n    this.variable.current.tags = this.selectedTags;\n\n    if (!this.variable.multi) {\n      this.variable.current.value = this.selectedValues[0].value;\n    }\n\n    if (commitChange) {\n      this.commitChanges();\n    }\n  }\n\n  commitChanges() {\n    // if we have a search query and no options use that\n    if (this.search.options.length === 0 && this.search.query.length > 0) {\n      this.variable.current = { text: this.search.query, value: this.search.query };\n    } else if (this.selectedValues.length === 0) {\n      // make sure one option is selected\n      this.options[0].selected = true;\n      this.selectionsChanged(false);\n    }\n\n    this.dropdownVisible = false;\n    this.updateLinkText();\n\n    if (this.variable.current.text !== this.oldVariableText) {\n      this.onUpdated();\n    }\n  }\n\n  queryChanged() {\n    this.highlightIndex = -1;\n    this.search.options = _.filter(this.options, option => {\n      return option.text.toLowerCase().indexOf(this.search.query.toLowerCase()) !== -1;\n    });\n\n    this.search.options = this.search.options.slice(0, Math.min(this.search.options.length, 1000));\n  }\n\n  init() {\n    this.selectedTags = this.variable.current.tags || [];\n    this.updateLinkText();\n  }\n}\n\n/** @ngInject */\nexport function valueSelectDropdown($compile: any, $window: any, $timeout: any, $rootScope: any) {\n  return {\n    scope: { dashboard: '=', variable: '=', onUpdated: '&' },\n    templateUrl: 'public/app/partials/valueSelectDropdown.html',\n    controller: 'ValueSelectDropdownCtrl',\n    controllerAs: 'vm',\n    bindToController: true,\n    link: (scope: any, elem: any) => {\n      const bodyEl = angular.element($window.document.body);\n      const linkEl = elem.find('.variable-value-link');\n      const inputEl = elem.find('input');\n\n      function openDropdown() {\n        inputEl.css('width', Math.max(linkEl.width(), 80) + 'px');\n\n        inputEl.show();\n        linkEl.hide();\n\n        inputEl.focus();\n        $timeout(\n          () => {\n            bodyEl.on('click', bodyOnClick);\n          },\n          0,\n          false\n        );\n      }\n\n      function switchToLink() {\n        inputEl.hide();\n        linkEl.show();\n        bodyEl.off('click', bodyOnClick);\n      }\n\n      function bodyOnClick(e: any) {\n        if (elem.has(e.target).length === 0) {\n          scope.$apply(() => {\n            scope.vm.commitChanges();\n          });\n        }\n      }\n\n      scope.$watch('vm.dropdownVisible', (newValue: any) => {\n        if (newValue) {\n          openDropdown();\n        } else {\n          switchToLink();\n        }\n      });\n\n      scope.vm.dashboard.on(\n        'template-variable-value-updated',\n        () => {\n          scope.vm.updateLinkText();\n        },\n        scope\n      );\n\n      scope.vm.init();\n    },\n  };\n}\n\ncoreModule.controller('ValueSelectDropdownCtrl', ValueSelectDropdownCtrl);\ncoreModule.directive('valueSelectDropdown', valueSelectDropdown);\n","import $ from 'jquery';\nimport coreModule from '../core_module';\n\nfunction getBlockNodes(nodes: any[]) {\n  let node = nodes[0];\n  const endNode = nodes[nodes.length - 1];\n  let blockNodes: any[];\n  node = node.nextSibling;\n\n  for (let i = 1; node !== endNode && node; i++) {\n    if (blockNodes || nodes[i] !== node) {\n      if (!blockNodes) {\n        blockNodes = $([].slice.call(nodes, 0, i)) as any;\n      }\n      blockNodes.push(node);\n    }\n    node = node.nextSibling;\n  }\n\n  return blockNodes || nodes;\n}\n\n/** @ngInject */\nfunction rebuildOnChange($animate: any) {\n  return {\n    multiElement: true,\n    terminal: true,\n    transclude: true,\n    priority: 600,\n    restrict: 'E',\n    link: (scope: any, elem: any, attrs: any, ctrl: any, transclude: any) => {\n      let block: any, childScope: any, previousElements: any;\n\n      function cleanUp() {\n        if (previousElements) {\n          previousElements.remove();\n          previousElements = null;\n        }\n        if (childScope) {\n          childScope.$destroy();\n          childScope = null;\n        }\n        if (block) {\n          previousElements = getBlockNodes(block.clone);\n          $animate.leave(previousElements).then(() => {\n            previousElements = null;\n          });\n          block = null;\n        }\n      }\n\n      scope.$watch(attrs.property, function rebuildOnChangeAction(value: any, oldValue: any) {\n        if (childScope && value !== oldValue) {\n          cleanUp();\n        }\n\n        if (!childScope && (value || attrs.showNull)) {\n          transclude((clone: any, newScope: any) => {\n            childScope = newScope;\n            clone[clone.length++] = document.createComment(' end rebuild on change ');\n            block = { clone: clone };\n            $animate.enter(clone, elem.parent(), elem);\n          });\n        } else {\n          cleanUp();\n        }\n      });\n    },\n  };\n}\n\ncoreModule.directive('rebuildOnChange', rebuildOnChange);\n","import coreModule from '../core_module';\n\ncoreModule.directive('giveFocus', () => {\n  return (scope: any, element: any, attrs: any) => {\n    element.click((e: any) => {\n      e.stopPropagation();\n    });\n\n    scope.$watch(\n      attrs.giveFocus,\n      (newValue: any) => {\n        if (!newValue) {\n          return;\n        }\n        setTimeout(() => {\n          element.focus();\n          const domEl: any = element[0];\n          if (domEl.setSelectionRange) {\n            const pos = element.val().length * 2;\n            domEl.setSelectionRange(pos, pos);\n          }\n        }, 200);\n      },\n      true\n    );\n  };\n});\n\nexport default {};\n","import angular from 'angular';\nimport coreModule from '../core_module';\n\nexport class DeltaCtrl {\n  observer: any;\n\n  /** @ngInject */\n  constructor(private $rootScope: any) {\n    const waitForCompile = (mutations: any) => {\n      if (mutations.length === 1) {\n        this.$rootScope.appEvent('json-diff-ready');\n      }\n    };\n\n    this.observer = new MutationObserver(waitForCompile);\n\n    const observerConfig = {\n      attributes: true,\n      attributeFilter: ['class'],\n      characterData: false,\n      childList: true,\n      subtree: false,\n    };\n\n    this.observer.observe(angular.element('.delta-html')[0], observerConfig);\n  }\n\n  $onDestroy() {\n    this.observer.disconnect();\n  }\n}\n\nexport function delta() {\n  return {\n    controller: DeltaCtrl,\n    replace: false,\n    restrict: 'A',\n  };\n}\ncoreModule.directive('diffDelta', delta);\n\n// Link to JSON line number\nexport class LinkJSONCtrl {\n  /** @ngInject */\n  constructor(private $scope: any, private $rootScope: any, private $anchorScroll: any) {}\n\n  goToLine(line: number) {\n    let unbind: () => void;\n\n    const scroll = () => {\n      this.$anchorScroll(`l${line}`);\n      unbind();\n    };\n\n    this.$scope.switchView().then(() => {\n      unbind = this.$rootScope.$on('json-diff-ready', scroll.bind(this));\n    });\n  }\n}\n\nexport function linkJson() {\n  return {\n    controller: LinkJSONCtrl,\n    controllerAs: 'ctrl',\n    replace: true,\n    restrict: 'E',\n    scope: {\n      line: '@lineDisplay',\n      link: '@lineLink',\n      switchView: '&',\n    },\n    template: `<a class=\"diff-linenum btn btn-inverse btn-small\" ng-click=\"ctrl.goToLine(link)\">Line {{ line }}</a>`,\n  };\n}\ncoreModule.directive('diffLinkJson', linkJson);\n","import $ from 'jquery';\nimport angular from 'angular';\nimport _ from 'lodash';\n\nconst $win = $(window);\n\n$.fn.place_tt = (() => {\n  const defaults = {\n    offset: 5,\n  };\n\n  return function(this: any, x: number, y: number, opts: any) {\n    opts = $.extend(true, {}, defaults, opts);\n\n    return this.each(() => {\n      const $tooltip = $(this);\n      let width, height;\n\n      $tooltip.addClass('grafana-tooltip');\n\n      $('#tooltip').remove();\n      $tooltip.appendTo(document.body);\n\n      if (opts.compile) {\n        angular\n          .element(document)\n          .injector()\n          .invoke([\n            '$compile',\n            '$rootScope',\n            ($compile, $rootScope) => {\n              const tmpScope = $rootScope.$new(true);\n              _.extend(tmpScope, opts.scopeData);\n\n              $compile($tooltip)(tmpScope);\n              tmpScope.$digest();\n              tmpScope.$destroy();\n            },\n          ]);\n      }\n\n      width = $tooltip.outerWidth(true);\n      height = $tooltip.outerHeight(true);\n\n      $tooltip.css('left', x + opts.offset + width > $win.width() ? x - opts.offset - width : x + opts.offset);\n      $tooltip.css('top', y + opts.offset + height > $win.height() ? y - opts.offset - height : y + opts.offset);\n    });\n  };\n})();\n","import coreModule from 'app/core/core_module';\nimport { JsonExplorer } from '@grafana/ui';\n\ncoreModule.directive('jsonTree', [\n  function jsonTreeDirective() {\n    return {\n      restrict: 'E',\n      scope: {\n        object: '=',\n        startExpanded: '@',\n        rootName: '@',\n      },\n      link: (scope: any, elem) => {\n        let expansionLevel = scope.startExpanded;\n        if (scope.startExpanded === 'true') {\n          expansionLevel = 2;\n        } else if (scope.startExpanded === 'false') {\n          expansionLevel = 1;\n        }\n        const jsonObject = { [scope.rootName]: scope.object };\n        const jsonExp = new JsonExplorer(jsonObject, expansionLevel, {\n          animateOpen: true,\n        });\n        const html = jsonExp.render(true);\n        elem.append(html);\n      },\n    };\n  },\n]);\n","/**\n * codeEditor directive based on Ace code editor\n * https://github.com/ajaxorg/ace\n *\n * Basic usage:\n * <code-editor content=\"ctrl.target.query\" on-change=\"ctrl.panelCtrl.refresh()\"\n *  data-mode=\"sql\" data-show-gutter>\n * </code-editor>\n *\n * Params:\n * content:      Editor content.\n * onChange:     Function called on content change (invoked on editor blur, ctrl+enter, not on every change).\n * getCompleter: Function returned external completer. Completer is an object implemented getCompletions() method,\n *               see Prometheus Data Source implementation for details.\n *\n * Some Ace editor options available via data-* attributes:\n * data-mode               - Language mode (text, sql, javascript, etc.). Default is 'text'.\n * data-theme              - Editor theme (eg 'solarized_dark').\n * data-max-lines          - Max editor height in lines. Editor grows automatically from 1 to maxLines.\n * data-show-gutter        - Show gutter (contains line numbers and additional info).\n * data-tab-size           - Tab size, default is 2.\n * data-behaviours-enabled - Specifies whether to use behaviors or not. \"Behaviors\" in this case is the auto-pairing of\n *                           special characters, like quotation marks, parenthesis, or brackets.\n * data-snippets-enabled   - Specifies whether to use snippets or not. \"Snippets\" are small pieces of code that can be\n *                           inserted via the completion box.\n *\n * Keybindings:\n * Ctrl-Enter (Command-Enter): run onChange() function\n */\n\nimport coreModule from 'app/core/core_module';\nimport config from 'app/core/config';\n\nconst DEFAULT_THEME_DARK = 'ace/theme/grafana-dark';\nconst DEFAULT_THEME_LIGHT = 'ace/theme/textmate';\nconst DEFAULT_MODE = 'text';\nconst DEFAULT_MAX_LINES = 10;\nconst DEFAULT_TAB_SIZE = 2;\nconst DEFAULT_BEHAVIORS = true;\nconst DEFAULT_SNIPPETS = true;\n\nconst editorTemplate = `<div></div>`;\n\nasync function link(scope: any, elem: any, attrs: any) {\n  // Options\n  const langMode = attrs.mode || DEFAULT_MODE;\n  const maxLines = attrs.maxLines || DEFAULT_MAX_LINES;\n  const showGutter = attrs.showGutter !== undefined;\n  const tabSize = attrs.tabSize || DEFAULT_TAB_SIZE;\n  const behavioursEnabled = attrs.behavioursEnabled ? attrs.behavioursEnabled === 'true' : DEFAULT_BEHAVIORS;\n  const snippetsEnabled = attrs.snippetsEnabled ? attrs.snippetsEnabled === 'true' : DEFAULT_SNIPPETS;\n\n  // Initialize editor\n  const aceElem = elem.get(0);\n  const { default: ace } = await import(/* webpackChunkName: \"brace\" */ 'brace');\n  await import('brace/ext/language_tools');\n  await import('brace/theme/textmate');\n  await import('brace/mode/text');\n  await import('brace/snippets/text');\n  await import('brace/mode/sql');\n  await import('brace/snippets/sql');\n  await import('brace/mode/sqlserver');\n  await import('brace/snippets/sqlserver');\n  await import('brace/mode/markdown');\n  await import('brace/snippets/markdown');\n  await import('brace/mode/json');\n  await import('brace/snippets/json');\n\n  // @ts-ignore\n  await import('./theme-grafana-dark');\n\n  const codeEditor = ace.edit(aceElem);\n  const editorSession = codeEditor.getSession();\n\n  const editorOptions = {\n    maxLines: maxLines,\n    showGutter: showGutter,\n    tabSize: tabSize,\n    behavioursEnabled: behavioursEnabled,\n    highlightActiveLine: false,\n    showPrintMargin: false,\n    autoScrollEditorIntoView: true, // this is needed if editor is inside scrollable page\n  };\n\n  // Set options\n  codeEditor.setOptions(editorOptions);\n  // disable depreacation warning\n  codeEditor.$blockScrolling = Infinity;\n  // Padding hacks\n  (codeEditor.renderer as any).setScrollMargin(10, 10);\n  codeEditor.renderer.setPadding(10);\n\n  setThemeMode();\n  setLangMode(langMode);\n  setEditorContent(scope.content);\n\n  // Add classes\n  elem.addClass('gf-code-editor');\n  const textarea = elem.find('textarea');\n  textarea.addClass('gf-form-input');\n\n  if (scope.codeEditorFocus) {\n    setTimeout(() => {\n      textarea.focus();\n      const domEl = textarea[0];\n      if (domEl.setSelectionRange) {\n        const pos = textarea.val().length * 2;\n        domEl.setSelectionRange(pos, pos);\n      }\n    }, 100);\n  }\n\n  // Event handlers\n  editorSession.on('change', e => {\n    scope.$apply(() => {\n      const newValue = codeEditor.getValue();\n      scope.content = newValue;\n    });\n  });\n\n  // Sync with outer scope - update editor content if model has been changed from outside of directive.\n  scope.$watch('content', (newValue: any, oldValue: any) => {\n    const editorValue = codeEditor.getValue();\n    if (newValue !== editorValue && newValue !== oldValue) {\n      scope.$$postDigest(() => {\n        setEditorContent(newValue);\n      });\n    }\n  });\n\n  codeEditor.on('blur', () => {\n    scope.onChange();\n  });\n\n  scope.$on('$destroy', () => {\n    codeEditor.destroy();\n  });\n\n  // Keybindings\n  codeEditor.commands.addCommand({\n    name: 'executeQuery',\n    bindKey: { win: 'Ctrl-Enter', mac: 'Command-Enter' },\n    exec: () => {\n      scope.onChange();\n    },\n  });\n\n  function setLangMode(lang: string) {\n    ace.acequire('ace/ext/language_tools');\n    codeEditor.setOptions({\n      enableBasicAutocompletion: true,\n      enableLiveAutocompletion: true,\n      enableSnippets: snippetsEnabled,\n    });\n\n    if (scope.getCompleter()) {\n      // make copy of array as ace seems to share completers array between instances\n      const anyEditor = codeEditor as any;\n      anyEditor.completers = anyEditor.completers.slice();\n      anyEditor.completers.push(scope.getCompleter());\n    }\n\n    const aceModeName = `ace/mode/${lang}`;\n    editorSession.setMode(aceModeName);\n  }\n\n  function setThemeMode() {\n    let theme = DEFAULT_THEME_DARK;\n    if (config.bootData.user.lightTheme) {\n      theme = DEFAULT_THEME_LIGHT;\n    }\n\n    codeEditor.setTheme(theme);\n  }\n\n  function setEditorContent(value: string) {\n    codeEditor.setValue(value);\n    codeEditor.clearSelection();\n  }\n}\n\nexport function codeEditorDirective() {\n  return {\n    restrict: 'E',\n    template: editorTemplate,\n    scope: {\n      content: '=',\n      datasource: '=',\n      codeEditorFocus: '<',\n      onChange: '&',\n      getCompleter: '&',\n    },\n    link: link,\n  };\n}\n\ncoreModule.directive('codeEditor', codeEditorDirective);\n","/**\n * Wrapper for the new ngReact <color-picker> directive for backward compatibility.\n * Allows remaining <spectrum-picker> untouched in outdated plugins.\n * Technically, it's just a wrapper for react component with two-way data binding support.\n */\nimport coreModule from '../../core_module';\n\n/** @ngInject */\nexport function spectrumPicker() {\n  return {\n    restrict: 'E',\n    require: 'ngModel',\n    scope: true,\n    replace: true,\n    template: '<color-picker color=\"ngModel.$viewValue\" onChange=\"onColorChange\"></color-picker>',\n    link: (scope: any, element: any, attrs: any, ngModel: any) => {\n      scope.ngModel = ngModel;\n      scope.onColorChange = (color: string) => {\n        ngModel.$setViewValue(color);\n      };\n    },\n  };\n}\ncoreModule.directive('spectrumPicker', spectrumPicker);\n","import _ from 'lodash';\n// @ts-ignore\nimport { IQService } from 'angular';\n\nimport coreModule from 'app/core/core_module';\nimport impressionSrv from 'app/core/services/impression_srv';\nimport store from 'app/core/store';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { BackendSrv } from './backend_srv';\nimport { Section } from '../components/manage_dashboards/manage_dashboards';\nimport { DashboardSearchHit } from 'app/types/search';\n\ninterface Sections {\n  [key: string]: Partial<Section>;\n}\n\nexport class SearchSrv {\n  recentIsOpen: boolean;\n  starredIsOpen: boolean;\n\n  /** @ngInject */\n  constructor(private backendSrv: BackendSrv, private $q: IQService) {\n    this.recentIsOpen = store.getBool('search.sections.recent', true);\n    this.starredIsOpen = store.getBool('search.sections.starred', true);\n  }\n\n  private getRecentDashboards(sections: Sections) {\n    return this.queryForRecentDashboards().then((result: any[]) => {\n      if (result.length > 0) {\n        sections['recent'] = {\n          title: 'Recent',\n          icon: 'fa fa-clock-o',\n          score: -1,\n          removable: true,\n          expanded: this.recentIsOpen,\n          toggle: this.toggleRecent.bind(this),\n          items: result,\n        };\n      }\n    });\n  }\n\n  private queryForRecentDashboards(): Promise<DashboardSearchHit[]> {\n    const dashIds: number[] = _.take(impressionSrv.getDashboardOpened(), 30);\n    if (dashIds.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    return this.backendSrv.search({ dashboardIds: dashIds }).then(result => {\n      return dashIds\n        .map(orderId => {\n          return _.find(result, { id: orderId });\n        })\n        .filter(hit => hit && !hit.isStarred);\n    });\n  }\n\n  private toggleRecent(section: Section) {\n    this.recentIsOpen = section.expanded = !section.expanded;\n    store.set('search.sections.recent', this.recentIsOpen);\n\n    if (!section.expanded || section.items.length) {\n      return Promise.resolve(section);\n    }\n\n    return this.queryForRecentDashboards().then(result => {\n      section.items = result;\n      return Promise.resolve(section);\n    });\n  }\n\n  private toggleStarred(section: Section) {\n    this.starredIsOpen = section.expanded = !section.expanded;\n    store.set('search.sections.starred', this.starredIsOpen);\n    return Promise.resolve(section);\n  }\n\n  private getStarred(sections: Sections) {\n    if (!contextSrv.isSignedIn) {\n      return Promise.resolve();\n    }\n\n    return this.backendSrv.search({ starred: true, limit: 30 }).then(result => {\n      if (result.length > 0) {\n        sections['starred'] = {\n          title: 'Starred',\n          icon: 'fa fa-star-o',\n          score: -2,\n          expanded: this.starredIsOpen,\n          toggle: this.toggleStarred.bind(this),\n          items: result,\n        };\n      }\n    });\n  }\n\n  search(options: any) {\n    const sections: any = {};\n    const promises = [];\n    const query = _.clone(options);\n    const hasFilters =\n      options.query ||\n      (options.tag && options.tag.length > 0) ||\n      options.starred ||\n      (options.folderIds && options.folderIds.length > 0);\n\n    if (!options.skipRecent && !hasFilters) {\n      promises.push(this.getRecentDashboards(sections));\n    }\n\n    if (!options.skipStarred && !hasFilters) {\n      promises.push(this.getStarred(sections));\n    }\n\n    query.folderIds = query.folderIds || [];\n    if (!hasFilters) {\n      query.folderIds = [0];\n    }\n\n    promises.push(\n      this.backendSrv.search(query).then(results => {\n        return this.handleSearchResult(sections, results);\n      })\n    );\n\n    return this.$q.all(promises).then(() => {\n      return _.sortBy(_.values(sections), 'score');\n    });\n  }\n\n  private handleSearchResult(sections: Sections, results: DashboardSearchHit[]): any {\n    if (results.length === 0) {\n      return sections;\n    }\n\n    // create folder index\n    for (const hit of results) {\n      if (hit.type === 'dash-folder') {\n        sections[hit.id] = {\n          id: hit.id,\n          uid: hit.uid,\n          title: hit.title,\n          expanded: false,\n          items: [],\n          toggle: this.toggleFolder.bind(this),\n          url: hit.url,\n          icon: 'fa fa-folder',\n          score: _.keys(sections).length,\n        };\n      }\n    }\n\n    for (const hit of results) {\n      if (hit.type === 'dash-folder') {\n        continue;\n      }\n\n      let section = sections[hit.folderId || 0];\n      if (!section) {\n        if (hit.folderId) {\n          section = {\n            id: hit.folderId,\n            uid: hit.folderUid,\n            title: hit.folderTitle,\n            url: hit.folderUrl,\n            items: [],\n            icon: 'fa fa-folder-open',\n            toggle: this.toggleFolder.bind(this),\n            score: _.keys(sections).length,\n          };\n        } else {\n          section = {\n            id: 0,\n            title: 'General',\n            items: [],\n            icon: 'fa fa-folder-open',\n            toggle: this.toggleFolder.bind(this),\n            score: _.keys(sections).length,\n          };\n        }\n        // add section\n        sections[hit.folderId || 0] = section;\n      }\n\n      section.expanded = true;\n      section.items.push(hit);\n    }\n  }\n\n  private toggleFolder(section: Section) {\n    section.expanded = !section.expanded;\n    section.icon = section.expanded ? 'fa fa-folder-open' : 'fa fa-folder';\n\n    if (section.items.length) {\n      return Promise.resolve(section);\n    }\n\n    const query = {\n      folderIds: [section.id],\n    };\n\n    return this.backendSrv.search(query).then(results => {\n      section.items = results;\n      return Promise.resolve(section);\n    });\n  }\n\n  getDashboardTags() {\n    return this.backendSrv.get('/api/dashboards/tags');\n  }\n}\n\ncoreModule.service('searchSrv', SearchSrv);\n","//\n// This is using ng-react with this PR applied https://github.com/ngReact/ngReact/pull/199\n//\n\n// # ngReact\n// ### Use React Components inside of your Angular applications\n//\n// Composed of\n// - reactComponent (generic directive for delegating off to React Components)\n// - reactDirective (factory for creating specific directives that correspond to reactComponent directives)\n\nimport { kebabCase } from 'lodash';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport angular, { auto } from 'angular';\n\n// get a react component from name (components can be an angular injectable e.g. value, factory or\n// available on window\nfunction getReactComponent(name: string, $injector: auto.IInjectorService) {\n  // if name is a function assume it is component and return it\n  if (angular.isFunction(name)) {\n    return name;\n  }\n\n  // a React component name must be specified\n  if (!name) {\n    throw new Error('ReactComponent name attribute must be specified');\n  }\n\n  // ensure the specified React component is accessible, and fail fast if it's not\n  let reactComponent;\n  try {\n    reactComponent = $injector.get(name);\n  } catch (e) {}\n\n  if (!reactComponent) {\n    try {\n      reactComponent = name.split('.').reduce((current, namePart) => {\n        // @ts-ignore\n        return current[namePart];\n      }, window);\n    } catch (e) {}\n  }\n\n  if (!reactComponent) {\n    throw Error('Cannot find react component ' + name);\n  }\n\n  return reactComponent;\n}\n\n// wraps a function with scope.$apply, if already applied just return\nfunction applied(fn: any, scope: any) {\n  if (fn.wrappedInApply) {\n    return fn;\n  }\n  //tslint:disable-next-line:only-arrow-functions\n  const wrapped: any = function() {\n    const args = arguments;\n    const phase = scope.$root.$$phase;\n    if (phase === '$apply' || phase === '$digest') {\n      return fn.apply(null, args);\n    } else {\n      return scope.$apply(() => {\n        return fn.apply(null, args);\n      });\n    }\n  };\n  wrapped.wrappedInApply = true;\n  return wrapped;\n}\n\n/**\n * wraps functions on obj in scope.$apply\n *\n * keeps backwards compatibility, as if propsConfig is not passed, it will\n * work as before, wrapping all functions and won't wrap only when specified.\n *\n * @version 0.4.1\n * @param obj react component props\n * @param scope current scope\n * @param propsConfig configuration object for all properties\n * @returns {Object} props with the functions wrapped in scope.$apply\n */\nfunction applyFunctions(obj: any, scope: any, propsConfig?: any): object {\n  return Object.keys(obj || {}).reduce((prev, key) => {\n    const value = obj[key];\n    const config = (propsConfig || {})[key] || {};\n    /**\n     * wrap functions in a function that ensures they are scope.$applied\n     * ensures that when function is called from a React component\n     * the Angular digest cycle is run\n     */\n    // @ts-ignore\n    prev[key] = angular.isFunction(value) && config.wrapApply !== false ? applied(value, scope) : value;\n\n    return prev;\n  }, {});\n}\n\n/**\n *\n * @param watchDepth (value of HTML watch-depth attribute)\n * @param scope (angular scope)\n *\n * Uses the watchDepth attribute to determine how to watch props on scope.\n * If watchDepth attribute is NOT reference or collection, watchDepth defaults to deep watching by value\n */\nfunction watchProps(watchDepth: string, scope: any, watchExpressions: any[], listener: any) {\n  const supportsWatchCollection = angular.isFunction(scope.$watchCollection);\n  const supportsWatchGroup = angular.isFunction(scope.$watchGroup);\n\n  const watchGroupExpressions = [];\n\n  for (const expr of watchExpressions) {\n    const actualExpr = getPropExpression(expr);\n    const exprWatchDepth = getPropWatchDepth(watchDepth, expr);\n\n    // ignore empty expressions & expressions with functions\n    if (!actualExpr || actualExpr.match(/\\(.*\\)/) || exprWatchDepth === 'one-time') {\n      continue;\n    }\n\n    if (exprWatchDepth === 'collection' && supportsWatchCollection) {\n      scope.$watchCollection(actualExpr, listener);\n    } else if (exprWatchDepth === 'reference' && supportsWatchGroup) {\n      watchGroupExpressions.push(actualExpr);\n    } else {\n      scope.$watch(actualExpr, listener, exprWatchDepth !== 'reference');\n    }\n  }\n\n  if (watchDepth === 'one-time') {\n    listener();\n  }\n\n  if (watchGroupExpressions.length) {\n    scope.$watchGroup(watchGroupExpressions, listener);\n  }\n}\n\n// render React component, with scope[attrs.props] being passed in as the component props\nfunction renderComponent(component: any, props: object, scope: any, elem: Element[]) {\n  scope.$evalAsync(() => {\n    ReactDOM.render(React.createElement(component, props), elem[0]);\n  });\n}\n\n// get prop name from prop (string or array)\nfunction getPropName(prop: any) {\n  return Array.isArray(prop) ? prop[0] : prop;\n}\n\n// get prop name from prop (string or array)\nfunction getPropConfig(prop: any) {\n  return Array.isArray(prop) ? prop[1] : {};\n}\n\n// get prop expression from prop (string or array)\nfunction getPropExpression(prop: any) {\n  return Array.isArray(prop) ? prop[0] : prop;\n}\n\n/**\n * Finds the normalized attribute knowing that React props accept any type of capitalization and it also handles\n * kabab case attributes which can be used in case the attribute would also be a standard html attribute and would be\n * evaluated by the browser as such.\n * @param attrs All attributes of the component.\n * @param propName Name of the prop that react component expects.\n */\nfunction findAttribute(attrs: string, propName: string): string {\n  const index = Object.keys(attrs).find(attr => {\n    return attr.toLowerCase() === propName.toLowerCase() || attr.toLowerCase() === kebabCase(propName);\n  });\n  // @ts-ignore\n  return attrs[index];\n}\n\n// get watch depth of prop (string or array)\nfunction getPropWatchDepth(defaultWatch: string, prop: string | any[]) {\n  const customWatchDepth = Array.isArray(prop) && angular.isObject(prop[1]) && prop[1].watchDepth;\n  return customWatchDepth || defaultWatch;\n}\n\n// # reactComponent\n// Directive that allows React components to be used in Angular templates.\n//\n// Usage:\n//     <react-component name=\"Hello\" props=\"name\"/>\n//\n// This requires that there exists an injectable or globally available 'Hello' React component.\n// The 'props' attribute is optional and is passed to the component.\n//\n// The following would would create and register the component:\n//\n//     var module = angular.module('ace.react.components');\n//     module.value('Hello', React.createClass({\n//         render: function() {\n//             return <div>Hello {this.props.name}</div>;\n//         }\n//     }));\n//\nconst reactComponent = ($injector: any): any => {\n  return {\n    restrict: 'E',\n    replace: true,\n    link: function(scope: any, elem: Element[], attrs: any) {\n      const reactComponent = getReactComponent(attrs.name, $injector);\n\n      const renderMyComponent = () => {\n        const scopeProps = scope.$eval(attrs.props);\n        const props = applyFunctions(scopeProps, scope);\n\n        renderComponent(reactComponent, props, scope, elem);\n      };\n\n      // If there are props, re-render when they change\n      attrs.props ? watchProps(attrs.watchDepth, scope, [attrs.props], renderMyComponent) : renderMyComponent();\n\n      // cleanup when scope is destroyed\n      scope.$on('$destroy', () => {\n        if (!attrs.onScopeDestroy) {\n          ReactDOM.unmountComponentAtNode(elem[0]);\n        } else {\n          scope.$eval(attrs.onScopeDestroy, {\n            unmountComponent: ReactDOM.unmountComponentAtNode.bind(this, elem[0]),\n          });\n        }\n      });\n    },\n  };\n};\n\n// # reactDirective\n// Factory function to create directives for React components.\n//\n// With a component like this:\n//\n//     var module = angular.module('ace.react.components');\n//     module.value('Hello', React.createClass({\n//         render: function() {\n//             return <div>Hello {this.props.name}</div>;\n//         }\n//     }));\n//\n// A directive can be created and registered with:\n//\n//     module.directive('hello', function(reactDirective) {\n//         return reactDirective('Hello', ['name']);\n//     });\n//\n// Where the first argument is the injectable or globally accessible name of the React component\n// and the second argument is an array of property names to be watched and passed to the React component\n// as props.\n//\n// This directive can then be used like this:\n//\n//     <hello name=\"name\"/>\n//\nconst reactDirective = ($injector: auto.IInjectorService) => {\n  return (reactComponentName: string, props: string[], conf: any, injectableProps: any) => {\n    const directive = {\n      restrict: 'E',\n      replace: true,\n      link: function(scope: any, elem: Element[], attrs: any) {\n        const reactComponent = getReactComponent(reactComponentName, $injector);\n\n        // if props is not defined, fall back to use the React component's propTypes if present\n        props = props || Object.keys(reactComponent.propTypes || {});\n\n        // for each of the properties, get their scope value and set it to scope.props\n        const renderMyComponent = () => {\n          let scopeProps: any = {};\n          const config: any = {};\n\n          props.forEach(prop => {\n            const propName = getPropName(prop);\n            scopeProps[propName] = scope.$eval(findAttribute(attrs, propName));\n            config[propName] = getPropConfig(prop);\n          });\n\n          scopeProps = applyFunctions(scopeProps, scope, config);\n          scopeProps = angular.extend({}, scopeProps, injectableProps);\n          renderComponent(reactComponent, scopeProps, scope, elem);\n        };\n\n        // watch each property name and trigger an update whenever something changes,\n        // to update scope.props with new values\n        const propExpressions = props.map(prop => {\n          return Array.isArray(prop)\n            ? [findAttribute(attrs, prop[0]), getPropConfig(prop)]\n            : findAttribute(attrs, prop);\n        });\n\n        // If we don't have any props, then our watch statement won't fire.\n        props.length ? watchProps(attrs.watchDepth, scope, propExpressions, renderMyComponent) : renderMyComponent();\n\n        // cleanup when scope is destroyed\n        scope.$on('$destroy', () => {\n          if (!attrs.onScopeDestroy) {\n            ReactDOM.unmountComponentAtNode(elem[0]);\n          } else {\n            scope.$eval(attrs.onScopeDestroy, {\n              unmountComponent: ReactDOM.unmountComponentAtNode.bind(this, elem[0]),\n            });\n          }\n        });\n      },\n    };\n    return angular.extend(directive, conf);\n  };\n};\n\nconst ngModule = angular.module('react', []);\nngModule.directive('reactComponent', ['$injector', reactComponent]);\nngModule.factory('reactDirective', ['$injector', reactDirective]);\n","import _, { debounce } from 'lodash';\nimport coreModule from '../../core_module';\nimport { SearchSrv } from 'app/core/services/search_srv';\nimport { contextSrv } from 'app/core/services/context_srv';\n\nimport appEvents from 'app/core/app_events';\nimport { parse, SearchParserOptions, SearchParserResult } from 'search-query-parser';\nimport { getDashboardSrv } from 'app/features/dashboard/services/DashboardSrv';\n\nexport interface SearchQuery {\n  query: string;\n  parsedQuery: SearchParserResult;\n  tags: string[];\n  starred: boolean;\n}\n\nclass SearchQueryParser {\n  config: SearchParserOptions;\n  constructor(config: SearchParserOptions) {\n    this.config = config;\n  }\n\n  parse(query: string) {\n    const parsedQuery = parse(query, this.config);\n\n    if (typeof parsedQuery === 'string') {\n      return {\n        text: parsedQuery,\n      } as SearchParserResult;\n    }\n\n    return parsedQuery;\n  }\n}\n\ninterface SelectedIndicies {\n  dashboardIndex?: number;\n  folderIndex?: number;\n}\n\ninterface OpenSearchParams {\n  query?: string;\n}\n\nexport class SearchCtrl {\n  isOpen: boolean;\n  query: SearchQuery;\n  giveSearchFocus: boolean;\n  selectedIndex: number;\n  results: any;\n  currentSearchId: number;\n  showImport: boolean;\n  dismiss: any;\n  ignoreClose: any;\n  isLoading: boolean;\n  initialFolderFilterTitle: string;\n  isEditor: string;\n  hasEditPermissionInFolders: boolean;\n  queryParser: SearchQueryParser;\n\n  /** @ngInject */\n  constructor($scope: any, private $location: any, private $timeout: any, private searchSrv: SearchSrv) {\n    appEvents.on('show-dash-search', this.openSearch.bind(this), $scope);\n    appEvents.on('hide-dash-search', this.closeSearch.bind(this), $scope);\n    appEvents.on('search-query', debounce(this.search.bind(this), 500), $scope);\n\n    this.initialFolderFilterTitle = 'All';\n    this.isEditor = contextSrv.isEditor;\n    this.hasEditPermissionInFolders = contextSrv.hasEditPermissionInFolders;\n    this.onQueryChange = this.onQueryChange.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.query = {\n      query: '',\n      parsedQuery: { text: '' },\n      tags: [],\n      starred: false,\n    };\n\n    this.queryParser = new SearchQueryParser({\n      keywords: ['folder'],\n    });\n  }\n\n  closeSearch() {\n    this.isOpen = this.ignoreClose;\n  }\n\n  onQueryChange(query: SearchQuery | string) {\n    if (typeof query === 'string') {\n      this.query = {\n        ...this.query,\n        parsedQuery: this.queryParser.parse(query),\n        query: query,\n      };\n    } else {\n      this.query = query;\n    }\n    appEvents.emit('search-query');\n  }\n\n  openSearch(payload: OpenSearchParams = {}) {\n    if (this.isOpen) {\n      this.closeSearch();\n      return;\n    }\n\n    this.isOpen = true;\n    this.giveSearchFocus = true;\n    this.selectedIndex = -1;\n    this.results = [];\n    this.query = {\n      query: payload.query ? `${payload.query} ` : '',\n      parsedQuery: this.queryParser.parse(payload.query),\n      tags: [],\n      starred: false,\n    };\n\n    this.currentSearchId = 0;\n    this.ignoreClose = true;\n    this.isLoading = true;\n\n    this.$timeout(() => {\n      this.ignoreClose = false;\n      this.giveSearchFocus = true;\n      this.search();\n    }, 100);\n  }\n\n  onKeyDown(evt: KeyboardEvent) {\n    if (evt.keyCode === 27) {\n      this.closeSearch();\n    }\n    if (evt.keyCode === 40) {\n      this.moveSelection(1);\n    }\n    if (evt.keyCode === 38) {\n      this.moveSelection(-1);\n    }\n    if (evt.keyCode === 13) {\n      const flattenedResult = this.getFlattenedResultForNavigation();\n      const currentItem = flattenedResult[this.selectedIndex];\n\n      if (currentItem) {\n        if (currentItem.dashboardIndex !== undefined) {\n          const selectedDash = this.results[currentItem.folderIndex].items[currentItem.dashboardIndex];\n\n          if (selectedDash) {\n            this.$location.search({});\n            this.$location.path(selectedDash.url);\n            this.closeSearch();\n          }\n        } else {\n          const selectedFolder = this.results[currentItem.folderIndex];\n\n          if (selectedFolder) {\n            selectedFolder.toggle(selectedFolder);\n          }\n        }\n      }\n    }\n  }\n\n  onFilterboxClick() {\n    this.giveSearchFocus = false;\n    this.preventClose();\n  }\n\n  preventClose() {\n    this.ignoreClose = true;\n\n    this.$timeout(() => {\n      this.ignoreClose = false;\n    }, 100);\n  }\n\n  moveSelection(direction: number) {\n    if (this.results.length === 0) {\n      return;\n    }\n\n    const flattenedResult = this.getFlattenedResultForNavigation();\n    const currentItem = flattenedResult[this.selectedIndex];\n\n    if (currentItem) {\n      if (currentItem.dashboardIndex !== undefined) {\n        this.results[currentItem.folderIndex].items[currentItem.dashboardIndex].selected = false;\n      } else {\n        this.results[currentItem.folderIndex].selected = false;\n      }\n    }\n\n    if (direction === 0) {\n      this.selectedIndex = -1;\n      return;\n    }\n\n    const max = flattenedResult.length;\n    const newIndex = (this.selectedIndex + direction) % max;\n    this.selectedIndex = newIndex < 0 ? newIndex + max : newIndex;\n    const selectedItem = flattenedResult[this.selectedIndex];\n\n    if (selectedItem.dashboardIndex === undefined && this.results[selectedItem.folderIndex].id === 0) {\n      this.moveSelection(direction);\n      return;\n    }\n\n    if (selectedItem.dashboardIndex !== undefined) {\n      if (!this.results[selectedItem.folderIndex].expanded) {\n        this.moveSelection(direction);\n        return;\n      }\n\n      this.results[selectedItem.folderIndex].items[selectedItem.dashboardIndex].selected = true;\n      return;\n    }\n\n    if (this.results[selectedItem.folderIndex].hideHeader) {\n      this.moveSelection(direction);\n      return;\n    }\n\n    this.results[selectedItem.folderIndex].selected = true;\n  }\n\n  searchDashboards(folderContext?: string) {\n    this.currentSearchId = this.currentSearchId + 1;\n    const localSearchId = this.currentSearchId;\n    const folderIds = [];\n\n    const { parsedQuery } = this.query;\n\n    if (folderContext === 'current') {\n      folderIds.push(getDashboardSrv().getCurrent().meta.folderId);\n    }\n\n    const query = {\n      ...this.query,\n      query: parsedQuery.text,\n      tag: this.query.tags,\n      folderIds,\n    };\n\n    return this.searchSrv\n      .search({\n        ...query,\n      })\n      .then(results => {\n        if (localSearchId < this.currentSearchId) {\n          return;\n        }\n        this.results = results || [];\n        this.isLoading = false;\n        this.moveSelection(1);\n      });\n  }\n\n  queryHasNoFilters() {\n    const query = this.query;\n    return query.query === '' && query.starred === false && query.tags.length === 0;\n  }\n\n  filterByTag(tag: string) {\n    if (_.indexOf(this.query.tags, tag) === -1) {\n      this.query.tags.push(tag);\n      this.search();\n    }\n  }\n\n  removeTag(tag: string, evt: any) {\n    this.query.tags = _.without(this.query.tags, tag);\n    this.search();\n    this.giveSearchFocus = true;\n    evt.stopPropagation();\n    evt.preventDefault();\n  }\n\n  getTags = () => {\n    return this.searchSrv.getDashboardTags();\n  };\n\n  onTagFiltersChanged = (tags: string[]) => {\n    this.query.tags = tags;\n    this.search();\n  };\n\n  clearSearchFilter() {\n    this.query.query = '';\n    this.query.tags = [];\n    this.search();\n  }\n\n  showStarred() {\n    this.query.starred = !this.query.starred;\n    this.giveSearchFocus = true;\n    this.search();\n  }\n\n  search() {\n    this.showImport = false;\n    this.selectedIndex = -1;\n    this.searchDashboards(this.query.parsedQuery['folder']);\n  }\n\n  folderExpanding() {\n    this.moveSelection(0);\n  }\n\n  private getFlattenedResultForNavigation(): SelectedIndicies[] {\n    let folderIndex = 0;\n\n    return _.flatMap(this.results, (s: any) => {\n      let result: SelectedIndicies[] = [];\n\n      result.push({\n        folderIndex: folderIndex,\n      });\n\n      let dashboardIndex = 0;\n\n      result = result.concat(\n        _.map(s.items || [], i => {\n          return {\n            folderIndex: folderIndex,\n            dashboardIndex: dashboardIndex++,\n          };\n        })\n      );\n\n      folderIndex++;\n      return result;\n    });\n  }\n}\n\nexport function searchDirective() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/core/components/search/search.html',\n    controller: SearchCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {},\n  };\n}\n\ncoreModule.directive('dashboardSearch', searchDirective);\n","import _ from 'lodash';\nimport coreModule from 'app/core/core_module';\n// @ts-ignore\nimport Drop from 'tether-drop';\n\nexport function infoPopover() {\n  return {\n    restrict: 'E',\n    template: '<i class=\"fa fa-info-circle\"></i>',\n    transclude: true,\n    link: (scope: any, elem: any, attrs: any, ctrl: any, transclude: any) => {\n      const offset = attrs.offset || '0 -10px';\n      const position = attrs.position || 'right middle';\n      let classes = 'drop-help drop-hide-out-of-bounds';\n      const openOn = 'hover';\n\n      elem.addClass('gf-form-help-icon');\n\n      if (attrs.wide) {\n        classes += ' drop-wide';\n      }\n\n      if (attrs.mode) {\n        elem.addClass('gf-form-help-icon--' + attrs.mode);\n      }\n\n      transclude((clone: any, newScope: any) => {\n        const content = document.createElement('div');\n        content.className = 'markdown-html';\n\n        _.each(clone, node => {\n          content.appendChild(node);\n        });\n\n        const dropOptions = {\n          target: elem[0],\n          content: content,\n          position: position,\n          classes: classes,\n          openOn: openOn,\n          hoverOpenDelay: 400,\n          tetherOptions: {\n            offset: offset,\n            constraints: [\n              {\n                to: 'window',\n                attachment: 'together',\n                pin: true,\n              },\n            ],\n          },\n        };\n\n        // Create drop in next digest after directive content is rendered.\n        scope.$applyAsync(() => {\n          const drop = new Drop(dropOptions);\n\n          const unbind = scope.$on('$destroy', () => {\n            drop.destroy();\n            unbind();\n          });\n        });\n      });\n    },\n  };\n}\n\ncoreModule.directive('infoPopover', infoPopover);\n","import _ from 'lodash';\nimport coreModule from '../core_module';\n\nexport function arrayJoin() {\n  'use strict';\n\n  return {\n    restrict: 'A',\n    require: 'ngModel',\n    link: (scope: any, element: any, attr: any, ngModel: any) => {\n      function split_array(text: string) {\n        return (text || '').split(',');\n      }\n\n      function join_array(text: string) {\n        if (_.isArray(text)) {\n          return ((text || '') as any).join(',');\n        } else {\n          return text;\n        }\n      }\n\n      ngModel.$parsers.push(split_array);\n      ngModel.$formatters.push(join_array);\n    },\n  };\n}\n\ncoreModule.directive('arrayJoin', arrayJoin);\n","import _ from 'lodash';\nimport config from 'app/core/config';\n\nimport { Observable } from 'rxjs';\n\nexport class LiveSrv {\n  conn: any;\n  observers: any;\n  initPromise: any;\n\n  constructor() {\n    this.observers = {};\n  }\n\n  getWebSocketUrl() {\n    const l = window.location;\n    return (l.protocol === 'https:' ? 'wss://' : 'ws://') + l.host + config.appSubUrl + '/ws';\n  }\n\n  getConnection() {\n    if (this.initPromise) {\n      return this.initPromise;\n    }\n\n    if (this.conn && this.conn.readyState === 1) {\n      return Promise.resolve(this.conn);\n    }\n\n    this.initPromise = new Promise((resolve, reject) => {\n      console.log('Live: connecting...');\n      this.conn = new WebSocket(this.getWebSocketUrl());\n\n      this.conn.onclose = (evt: any) => {\n        console.log('Live: websocket onclose', evt);\n        reject({ message: 'Connection closed' });\n\n        this.initPromise = null;\n        setTimeout(this.reconnect.bind(this), 2000);\n      };\n\n      this.conn.onmessage = (evt: any) => {\n        this.handleMessage(evt.data);\n      };\n\n      this.conn.onerror = (evt: any) => {\n        this.initPromise = null;\n        reject({ message: 'Connection error' });\n        console.log('Live: websocket error', evt);\n      };\n\n      this.conn.onopen = (evt: any) => {\n        console.log('opened');\n        this.initPromise = null;\n        resolve(this.conn);\n      };\n    });\n\n    return this.initPromise;\n  }\n\n  handleMessage(message: any) {\n    message = JSON.parse(message);\n\n    if (!message.stream) {\n      console.log('Error: stream message without stream!', message);\n      return;\n    }\n\n    const observer = this.observers[message.stream];\n    if (!observer) {\n      this.removeObserver(message.stream, null);\n      return;\n    }\n\n    observer.next(message);\n  }\n\n  reconnect() {\n    // no need to reconnect if no one cares\n    if (_.keys(this.observers).length === 0) {\n      return;\n    }\n\n    console.log('LiveSrv: Reconnecting');\n\n    this.getConnection().then((conn: any) => {\n      _.each(this.observers, (value, key) => {\n        this.send({ action: 'subscribe', stream: key });\n      });\n    });\n  }\n\n  send(data: any) {\n    this.conn.send(JSON.stringify(data));\n  }\n\n  addObserver(stream: any, observer: any) {\n    this.observers[stream] = observer;\n\n    this.getConnection().then((conn: any) => {\n      this.send({ action: 'subscribe', stream: stream });\n    });\n  }\n\n  removeObserver(stream: any, observer: any) {\n    console.log('unsubscribe', stream);\n    delete this.observers[stream];\n\n    this.getConnection().then((conn: any) => {\n      this.send({ action: 'unsubscribe', stream: stream });\n    });\n  }\n\n  subscribe(streamName: string) {\n    console.log('LiveSrv.subscribe: ' + streamName);\n\n    return Observable.create((observer: any) => {\n      this.addObserver(streamName, observer);\n\n      return () => {\n        this.removeObserver(streamName, observer);\n      };\n    });\n\n    // return this.init().then(() =>  {\n    //   this.send({action: 'subscribe', stream: name});\n    // });\n  }\n}\n\nconst instance = new LiveSrv();\nexport { instance as liveSrv };\n","import store from 'app/core/store';\nimport coreModule from 'app/core/core_module';\n\nconst template = `\n<div class=\"layout-selector\">\n  <button ng-click=\"ctrl.listView()\" ng-class=\"{active: ctrl.mode === 'list'}\">\n    <i class=\"fa fa-list\"></i>\n  </button>\n  <button ng-click=\"ctrl.gridView()\" ng-class=\"{active: ctrl.mode === 'grid'}\">\n    <i class=\"fa fa-th\"></i>\n  </button>\n</div>\n`;\n\nexport class LayoutSelectorCtrl {\n  mode: string;\n\n  /** @ngInject */\n  constructor(private $rootScope: any) {\n    this.mode = store.get('grafana.list.layout.mode') || 'grid';\n  }\n\n  listView() {\n    this.mode = 'list';\n    store.set('grafana.list.layout.mode', 'list');\n    this.$rootScope.appEvent('layout-mode-changed', 'list');\n  }\n\n  gridView() {\n    this.mode = 'grid';\n    store.set('grafana.list.layout.mode', 'grid');\n    this.$rootScope.appEvent('layout-mode-changed', 'grid');\n  }\n}\n\n/** @ngInject */\nexport function layoutSelector() {\n  return {\n    restrict: 'E',\n    controller: LayoutSelectorCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {},\n    template: template,\n  };\n}\n\n/** @ngInject */\nexport function layoutMode($rootScope: any) {\n  return {\n    restrict: 'A',\n    scope: {},\n    link: (scope: any, elem: any) => {\n      const layout = store.get('grafana.list.layout.mode') || 'grid';\n      let className = 'card-list-layout-' + layout;\n      elem.addClass(className);\n\n      $rootScope.onAppEvent(\n        'layout-mode-changed',\n        (evt: any, newLayout: any) => {\n          elem.removeClass(className);\n          className = 'card-list-layout-' + newLayout;\n          elem.addClass(className);\n        },\n        scope\n      );\n    },\n  };\n}\n\ncoreModule.directive('layoutSelector', layoutSelector);\ncoreModule.directive('layoutMode', layoutMode);\n","import coreModule from 'app/core/core_module';\n\nconst template = `\n<label for=\"check-{{ctrl.id}}\" class=\"gf-form-switch-container\">\n  <div class=\"gf-form-label {{ctrl.labelClass}}\" ng-show=\"ctrl.label\">\n    {{ctrl.label}}\n    <info-popover mode=\"right-normal\" ng-if=\"ctrl.tooltip\" position=\"top center\">\n      {{ctrl.tooltip}}\n    </info-popover>\n  </div>\n  <div class=\"gf-form-switch {{ctrl.switchClass}}\" ng-if=\"ctrl.show\">\n    <input id=\"check-{{ctrl.id}}\" type=\"checkbox\" ng-model=\"ctrl.checked\" ng-change=\"ctrl.internalOnChange()\">\n    <span class=\"gf-form-switch__slider\"></span>\n  </div>\n</label>\n`;\n\nconst checkboxTemplate = `\n<label for=\"check-{{ctrl.id}}\" class=\"gf-form-switch-container\">\n   <div class=\"gf-form-label {{ctrl.labelClass}}\" ng-show=\"ctrl.label\">\n    {{ctrl.label}}\n    <info-popover mode=\"right-normal\" ng-if=\"ctrl.tooltip\" position=\"top center\">\n      {{ctrl.tooltip}}\n    </info-popover>\n  </div>\n  <div class=\"gf-form-checkbox {{ctrl.switchClass}}\" ng-if=\"ctrl.show\">\n    <input id=\"check-{{ctrl.id}}\" type=\"checkbox\" ng-model=\"ctrl.checked\" ng-change=\"ctrl.internalOnChange()\">\n    <span class=\"gf-form-switch__checkbox\"></span>\n  </div>\n</label>\n`;\n\nexport class SwitchCtrl {\n  onChange: any;\n  checked: any;\n  show: any;\n  id: any;\n  label: string;\n\n  /** @ngInject */\n  constructor($scope: any, private $timeout: any) {\n    this.show = true;\n    this.id = $scope.$id;\n  }\n\n  internalOnChange() {\n    return this.$timeout(() => {\n      return this.onChange();\n    });\n  }\n}\n\nexport function switchDirective() {\n  return {\n    restrict: 'E',\n    controller: SwitchCtrl,\n    controllerAs: 'ctrl',\n    bindToController: true,\n    scope: {\n      checked: '=',\n      label: '@',\n      labelClass: '@',\n      tooltip: '@',\n      switchClass: '@',\n      onChange: '&',\n    },\n    template: template,\n  };\n}\n\nexport function checkboxDirective() {\n  return {\n    restrict: 'E',\n    controller: SwitchCtrl,\n    controllerAs: 'ctrl',\n    bindToController: true,\n    scope: {\n      checked: '=',\n      label: '@',\n      labelClass: '@',\n      tooltip: '@',\n      switchClass: '@',\n      onChange: '&',\n    },\n    template: checkboxTemplate,\n  };\n}\n\ncoreModule.directive('gfFormSwitch', switchDirective);\ncoreModule.directive('gfFormCheckbox', checkboxDirective);\n","import coreModule from 'app/core/core_module';\nimport { BackendSrv } from '../services/backend_srv';\n\nconst template = `\n<select class=\"gf-form-input\" ng-model=\"ctrl.model\" ng-options=\"f.value as f.text for f in ctrl.options\"></select>\n`;\n\nexport class DashboardSelectorCtrl {\n  model: any;\n  options: any;\n\n  /** @ngInject */\n  constructor(private backendSrv: BackendSrv) {}\n\n  $onInit() {\n    this.options = [{ value: 0, text: 'Default' }];\n\n    return this.backendSrv.search({ starred: true }).then(res => {\n      res.forEach(dash => {\n        this.options.push({ value: dash.id, text: dash.title });\n      });\n    });\n  }\n}\n\nexport function dashboardSelector() {\n  return {\n    restrict: 'E',\n    controller: DashboardSelectorCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    template: template,\n    scope: {\n      model: '=',\n    },\n  };\n}\n\ncoreModule.directive('dashboardSelector', dashboardSelector);\n","import _ from 'lodash';\nimport $ from 'jquery';\nimport coreModule from 'app/core/core_module';\n\nconst template = `\n<div class=\"dropdown cascade-open\">\n<a ng-click=\"showActionsMenu()\" class=\"query-part-name pointer dropdown-toggle\" data-toggle=\"dropdown\">{{part.def.type}}</a>\n<span>(</span><span class=\"query-part-parameters\"></span><span>)</span>\n<ul class=\"dropdown-menu\">\n  <li ng-repeat=\"action in partActions\">\n    <a ng-click=\"triggerPartAction(action)\">{{action.text}}</a>\n  </li>\n</ul>\n`;\n\n/** @ngInject */\nexport function queryPartEditorDirective(templateSrv: any) {\n  const paramTemplate = '<input type=\"text\" class=\"hide input-mini tight-form-func-param\"></input>';\n\n  return {\n    restrict: 'E',\n    template: template,\n    scope: {\n      part: '=',\n      handleEvent: '&',\n      debounce: '@',\n    },\n    link: function postLink($scope: any, elem: any) {\n      const part = $scope.part;\n      const partDef = part.def;\n      const $paramsContainer = elem.find('.query-part-parameters');\n      const debounceLookup = $scope.debounce;\n\n      $scope.partActions = [];\n\n      function clickFuncParam(this: any, paramIndex: number) {\n        /*jshint validthis:true */\n        const $link = $(this);\n        const $input = $link.next();\n\n        $input.val(part.params[paramIndex]);\n        $input.css('width', $link.width() + 16 + 'px');\n\n        $link.hide();\n        $input.show();\n        $input.focus();\n        $input.select();\n\n        const typeahead = $input.data('typeahead');\n        if (typeahead) {\n          $input.val('');\n          typeahead.lookup();\n        }\n      }\n\n      function inputBlur(this: any, paramIndex: number) {\n        /*jshint validthis:true */\n        const $input = $(this);\n        const $link = $input.prev();\n        const newValue = $input.val();\n\n        if (newValue !== '' || part.def.params[paramIndex].optional) {\n          $link.html(templateSrv.highlightVariablesAsHtml(newValue));\n\n          part.updateParam($input.val(), paramIndex);\n          $scope.$apply(() => {\n            $scope.handleEvent({ $event: { name: 'part-param-changed' } });\n          });\n        }\n\n        $input.hide();\n        $link.show();\n      }\n\n      function inputKeyPress(this: any, paramIndex: number, e: any) {\n        /*jshint validthis:true */\n        if (e.which === 13) {\n          inputBlur.call(this, paramIndex);\n        }\n      }\n\n      function inputKeyDown(this: any) {\n        /*jshint validthis:true */\n        this.style.width = (3 + this.value.length) * 8 + 'px';\n      }\n\n      function addTypeahead($input: JQuery, param: any, paramIndex: number) {\n        if (!param.options && !param.dynamicLookup) {\n          return;\n        }\n\n        const typeaheadSource = (query: string, callback: any) => {\n          if (param.options) {\n            let options = param.options;\n            if (param.type === 'int') {\n              options = _.map(options, val => {\n                return val.toString();\n              });\n            }\n            return options;\n          }\n\n          $scope.$apply(() => {\n            $scope.handleEvent({ $event: { name: 'get-param-options' } }).then((result: any) => {\n              const dynamicOptions = _.map(result, op => {\n                return _.escape(op.value);\n              });\n              callback(dynamicOptions);\n            });\n          });\n        };\n\n        $input.attr('data-provide', 'typeahead');\n\n        $input.typeahead({\n          source: typeaheadSource,\n          minLength: 0,\n          items: 1000,\n          updater: (value: string) => {\n            value = _.unescape(value);\n            setTimeout(() => {\n              inputBlur.call($input[0], paramIndex);\n            }, 0);\n            return value;\n          },\n        });\n\n        const typeahead = $input.data('typeahead');\n        typeahead.lookup = function() {\n          this.query = this.$element.val() || '';\n          const items = this.source(this.query, $.proxy(this.process, this));\n          return items ? this.process(items) : items;\n        };\n\n        if (debounceLookup) {\n          typeahead.lookup = _.debounce(typeahead.lookup, 500, { leading: true });\n        }\n      }\n\n      $scope.showActionsMenu = () => {\n        $scope.handleEvent({ $event: { name: 'get-part-actions' } }).then((res: any) => {\n          $scope.partActions = res;\n        });\n      };\n\n      $scope.triggerPartAction = (action: string) => {\n        $scope.handleEvent({ $event: { name: 'action', action: action } });\n      };\n\n      function addElementsAndCompile() {\n        _.each(partDef.params, (param: any, index: number) => {\n          if (param.optional && part.params.length <= index) {\n            return;\n          }\n\n          if (index > 0) {\n            $('<span>, </span>').appendTo($paramsContainer);\n          }\n\n          const paramValue = templateSrv.highlightVariablesAsHtml(part.params[index]);\n          const $paramLink = $('<a class=\"graphite-func-param-link pointer\">' + paramValue + '</a>');\n          const $input = $(paramTemplate);\n\n          $paramLink.appendTo($paramsContainer);\n          $input.appendTo($paramsContainer);\n\n          $input.blur(_.partial(inputBlur, index));\n          $input.keyup(inputKeyDown);\n          $input.keypress(_.partial(inputKeyPress, index));\n          $paramLink.click(_.partial(clickFuncParam, index));\n\n          addTypeahead($input, param, index);\n        });\n      }\n\n      function relink() {\n        $paramsContainer.empty();\n        addElementsAndCompile();\n      }\n\n      relink();\n    },\n  };\n}\n\ncoreModule.directive('queryPartEditor', queryPartEditorDirective);\n","import _ from 'lodash';\nimport $ from 'jquery';\nimport coreModule from 'app/core/core_module';\n\nconst template = `\n<div class=\"dropdown cascade-open\">\n<a ng-click=\"showActionsMenu()\" class=\"query-part-name pointer dropdown-toggle\" data-toggle=\"dropdown\">{{part.label}}</a>\n<span>{{part.def.wrapOpen}}</span><span class=\"query-part-parameters\"></span><span>{{part.def.wrapClose}}</span>\n<ul class=\"dropdown-menu\">\n  <li ng-repeat=\"action in partActions\">\n    <a ng-click=\"triggerPartAction(action)\">{{action.text}}</a>\n  </li>\n</ul>\n`;\n\n/** @ngInject */\nexport function sqlPartEditorDirective(templateSrv: any) {\n  const paramTemplate = '<input type=\"text\" class=\"hide input-mini\"></input>';\n\n  return {\n    restrict: 'E',\n    template: template,\n    scope: {\n      part: '=',\n      handleEvent: '&',\n      debounce: '@',\n    },\n    link: function postLink($scope: any, elem: any) {\n      const part = $scope.part;\n      const partDef = part.def;\n      const $paramsContainer = elem.find('.query-part-parameters');\n      const debounceLookup = $scope.debounce;\n      let cancelBlur: any = null;\n\n      $scope.partActions = [];\n\n      function clickFuncParam(this: any, paramIndex: number) {\n        /*jshint validthis:true */\n        const $link = $(this);\n        const $input = $link.next();\n\n        $input.val(part.params[paramIndex]);\n        $input.css('width', $link.width() + 16 + 'px');\n\n        $link.hide();\n        $input.show();\n        $input.focus();\n        $input.select();\n\n        const typeahead = $input.data('typeahead');\n        if (typeahead) {\n          $input.val('');\n          typeahead.lookup();\n        }\n      }\n\n      function inputBlur($input: JQuery, paramIndex: number) {\n        cancelBlur = setTimeout(() => {\n          switchToLink($input, paramIndex);\n        }, 200);\n      }\n\n      function switchToLink($input: JQuery, paramIndex: number) {\n        /*jshint validthis:true */\n        const $link = $input.prev();\n        const newValue = $input.val();\n\n        if (newValue !== '' || part.def.params[paramIndex].optional) {\n          $link.html(templateSrv.highlightVariablesAsHtml(newValue));\n\n          part.updateParam($input.val(), paramIndex);\n          $scope.$apply(() => {\n            $scope.handleEvent({ $event: { name: 'part-param-changed' } });\n          });\n        }\n\n        $input.hide();\n        $link.show();\n      }\n\n      function inputKeyPress(this: any, paramIndex: number, e: any) {\n        /*jshint validthis:true */\n        if (e.which === 13) {\n          switchToLink($(this), paramIndex);\n        }\n      }\n\n      function inputKeyDown(this: any) {\n        /*jshint validthis:true */\n        this.style.width = (3 + this.value.length) * 8 + 'px';\n      }\n\n      function addTypeahead($input: JQuery, param: any, paramIndex: number) {\n        if (!param.options && !param.dynamicLookup) {\n          return;\n        }\n\n        const typeaheadSource = (query: string, callback: any) => {\n          if (param.options) {\n            let options = param.options;\n            if (param.type === 'int') {\n              options = _.map(options, val => {\n                return val.toString();\n              });\n            }\n            return options;\n          }\n\n          $scope.$apply(() => {\n            $scope.handleEvent({ $event: { name: 'get-param-options', param: param } }).then((result: any) => {\n              const dynamicOptions = _.map(result, op => {\n                return _.escape(op.value);\n              });\n\n              // add current value to dropdown if it's not in dynamicOptions\n              if (_.indexOf(dynamicOptions, part.params[paramIndex]) === -1) {\n                dynamicOptions.unshift(_.escape(part.params[paramIndex]));\n              }\n\n              callback(dynamicOptions);\n            });\n          });\n        };\n\n        $input.attr('data-provide', 'typeahead');\n\n        $input.typeahead({\n          source: typeaheadSource,\n          minLength: 0,\n          items: 1000,\n          updater: (value: string) => {\n            value = _.unescape(value);\n            if (value === part.params[paramIndex]) {\n              clearTimeout(cancelBlur);\n              $input.focus();\n              return value;\n            }\n            return value;\n          },\n        });\n\n        const typeahead = $input.data('typeahead');\n        typeahead.lookup = function() {\n          this.query = this.$element.val() || '';\n          const items = this.source(this.query, $.proxy(this.process, this));\n          return items ? this.process(items) : items;\n        };\n\n        if (debounceLookup) {\n          typeahead.lookup = _.debounce(typeahead.lookup, 500, { leading: true });\n        }\n      }\n\n      $scope.showActionsMenu = () => {\n        $scope.handleEvent({ $event: { name: 'get-part-actions' } }).then((res: any) => {\n          $scope.partActions = res;\n        });\n      };\n\n      $scope.triggerPartAction = (action: string) => {\n        $scope.handleEvent({ $event: { name: 'action', action: action } });\n      };\n\n      function addElementsAndCompile() {\n        _.each(partDef.params, (param: any, index: number) => {\n          if (param.optional && part.params.length <= index) {\n            return;\n          }\n\n          if (index > 0) {\n            $('<span>' + partDef.separator + '</span>').appendTo($paramsContainer);\n          }\n\n          const paramValue = templateSrv.highlightVariablesAsHtml(part.params[index]);\n          const $paramLink = $('<a class=\"graphite-func-param-link pointer\">' + paramValue + '</a>');\n          const $input = $(paramTemplate);\n\n          $paramLink.appendTo($paramsContainer);\n          $input.appendTo($paramsContainer);\n\n          $input.blur(_.partial(inputBlur, $input, index));\n          $input.keyup(inputKeyDown);\n          $input.keypress(_.partial(inputKeyPress, index));\n          $paramLink.click(_.partial(clickFuncParam, index));\n\n          addTypeahead($input, param, index);\n        });\n      }\n\n      function relink() {\n        $paramsContainer.empty();\n        addElementsAndCompile();\n      }\n\n      relink();\n    },\n  };\n}\n\ncoreModule.directive('sqlPartEditor', sqlPartEditorDirective);\n","import _ from 'lodash';\nimport coreModule from '../../core_module';\nimport { ISCEService, IQService } from 'angular';\n\nfunction typeaheadMatcher(this: any, item: string) {\n  let str = this.query;\n  if (str === '') {\n    return true;\n  }\n  if (str[0] === '/') {\n    str = str.substring(1);\n  }\n  if (str[str.length - 1] === '/') {\n    str = str.substring(0, str.length - 1);\n  }\n  return item.toLowerCase().match(str.toLowerCase());\n}\n\nexport class FormDropdownCtrl {\n  inputElement: JQLite;\n  linkElement: JQLite;\n  model: any;\n  display: any;\n  text: any;\n  options: any;\n  cssClass: any;\n  cssClasses: any;\n  allowCustom: any;\n  labelMode: boolean;\n  linkMode: boolean;\n  cancelBlur: any;\n  onChange: any;\n  getOptions: any;\n  optionCache: any;\n  lookupText: boolean;\n  placeholder: any;\n  startOpen: any;\n  debounce: number;\n\n  /** @ngInject */\n  constructor(\n    private $scope: any,\n    $element: JQLite,\n    private $sce: ISCEService,\n    private templateSrv: any,\n    private $q: IQService\n  ) {\n    this.inputElement = $element.find('input').first();\n    this.linkElement = $element.find('a').first();\n    this.linkMode = true;\n    this.cancelBlur = null;\n\n    // listen to model changes\n    $scope.$watch('ctrl.model', this.modelChanged.bind(this));\n\n    if (this.labelMode) {\n      this.cssClasses = 'gf-form-label ' + this.cssClass;\n    } else {\n      this.cssClasses = 'gf-form-input gf-form-input--dropdown ' + this.cssClass;\n    }\n\n    if (this.placeholder) {\n      this.inputElement.attr('placeholder', this.placeholder);\n    }\n\n    this.inputElement.attr('data-provide', 'typeahead');\n    this.inputElement.typeahead({\n      source: this.typeaheadSource.bind(this),\n      minLength: 0,\n      items: 10000,\n      updater: this.typeaheadUpdater.bind(this),\n      matcher: typeaheadMatcher,\n    });\n\n    // modify typeahead lookup\n    // this = typeahead\n    const typeahead = this.inputElement.data('typeahead');\n    typeahead.lookup = function() {\n      this.query = this.$element.val() || '';\n      this.source(this.query, this.process.bind(this));\n    };\n\n    if (this.debounce) {\n      typeahead.lookup = _.debounce(typeahead.lookup, 500, { leading: true });\n    }\n\n    this.linkElement.keydown(evt => {\n      // trigger typeahead on down arrow or enter key\n      if (evt.keyCode === 40 || evt.keyCode === 13) {\n        this.linkElement.click();\n      }\n    });\n\n    this.inputElement.keydown(evt => {\n      if (evt.keyCode === 13) {\n        setTimeout(() => {\n          this.inputElement.blur();\n        }, 300);\n      }\n    });\n\n    this.inputElement.blur(this.inputBlur.bind(this));\n\n    if (this.startOpen) {\n      setTimeout(this.open.bind(this), 0);\n    }\n  }\n\n  getOptionsInternal(query: string) {\n    const result = this.getOptions({ $query: query });\n    if (this.isPromiseLike(result)) {\n      return result;\n    }\n    return this.$q.when(result);\n  }\n\n  isPromiseLike(obj: any) {\n    return obj && typeof obj.then === 'function';\n  }\n\n  modelChanged() {\n    if (_.isObject(this.model)) {\n      this.updateDisplay((this.model as any).text);\n    } else {\n      // if we have text use it\n      if (this.lookupText) {\n        this.getOptionsInternal('').then((options: any) => {\n          const item: any = _.find(options, { value: this.model });\n          this.updateDisplay(item ? item.text : this.model);\n        });\n      } else {\n        this.updateDisplay(this.model);\n      }\n    }\n  }\n\n  typeaheadSource(query: string, callback: (res: any) => void) {\n    this.getOptionsInternal(query).then((options: any) => {\n      this.optionCache = options;\n\n      // extract texts\n      const optionTexts = _.map(options, (op: any) => {\n        return _.escape(op.text);\n      });\n\n      // add custom values\n      if (this.allowCustom && this.text !== '') {\n        if (_.indexOf(optionTexts, this.text) === -1) {\n          optionTexts.unshift(this.text);\n        }\n      }\n\n      callback(optionTexts);\n    });\n  }\n\n  typeaheadUpdater(text: string) {\n    if (text === this.text) {\n      clearTimeout(this.cancelBlur);\n      this.inputElement.focus();\n      return text;\n    }\n\n    this.inputElement.val(text);\n    this.switchToLink(true);\n    return text;\n  }\n\n  switchToLink(fromClick: boolean) {\n    if (this.linkMode && !fromClick) {\n      return;\n    }\n\n    clearTimeout(this.cancelBlur);\n    this.cancelBlur = null;\n    this.linkMode = true;\n    this.inputElement.hide();\n    this.linkElement.show();\n    this.updateValue(this.inputElement.val());\n  }\n\n  inputBlur() {\n    // happens long before the click event on the typeahead options\n    // need to have long delay because the blur\n    this.cancelBlur = setTimeout(this.switchToLink.bind(this), 200);\n  }\n\n  updateValue(text: string) {\n    text = _.unescape(text);\n\n    if (text === '' || this.text === text) {\n      return;\n    }\n\n    this.$scope.$apply(() => {\n      const option: any = _.find(this.optionCache, { text: text });\n\n      if (option) {\n        if (_.isObject(this.model)) {\n          this.model = option;\n        } else {\n          this.model = option.value;\n        }\n        this.text = option.text;\n      } else if (this.allowCustom) {\n        if (_.isObject(this.model)) {\n          (this.model as any).text = (this.model as any).value = text;\n        } else {\n          this.model = text;\n        }\n        this.text = text;\n      }\n\n      // needs to call this after digest so\n      // property is synced with outerscope\n      this.$scope.$$postDigest(() => {\n        this.$scope.$apply(() => {\n          this.onChange({ $option: option });\n        });\n      });\n    });\n  }\n\n  updateDisplay(text: string) {\n    this.text = text;\n    this.display = this.$sce.trustAsHtml(this.templateSrv.highlightVariablesAsHtml(text));\n  }\n\n  open() {\n    this.inputElement.css('width', Math.max(this.linkElement.width(), 80) + 16 + 'px');\n\n    this.inputElement.show();\n    this.inputElement.focus();\n\n    this.linkElement.hide();\n    this.linkMode = false;\n\n    const typeahead = this.inputElement.data('typeahead');\n    if (typeahead) {\n      this.inputElement.val('');\n      typeahead.lookup();\n    }\n  }\n}\n\nconst template = `\n<input type=\"text\"\n  data-provide=\"typeahead\"\n  class=\"gf-form-input\"\n  spellcheck=\"false\"\n  style=\"display:none\">\n</input>\n<a ng-class=\"ctrl.cssClasses\"\n   tabindex=\"1\"\n   ng-click=\"ctrl.open()\"\n   give-focus=\"ctrl.focus\"\n   ng-bind-html=\"ctrl.display || '&nbsp;'\">\n</a>\n`;\n\nexport function formDropdownDirective() {\n  return {\n    restrict: 'E',\n    template: template,\n    controller: FormDropdownCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      model: '=',\n      getOptions: '&',\n      onChange: '&',\n      cssClass: '@',\n      allowCustom: '@',\n      labelMode: '@',\n      lookupText: '@',\n      placeholder: '@',\n      startOpen: '@',\n      debounce: '@',\n    },\n  };\n}\n\ncoreModule.directive('gfFormDropdown', formDropdownDirective);\n","import angular from 'angular';\nimport coreModule from '../core_module';\n\nexport class JsonEditorCtrl {\n  /** @ngInject */\n  constructor($scope: any) {\n    $scope.json = angular.toJson($scope.model.object, true);\n    $scope.canUpdate = $scope.model.updateHandler !== void 0 && $scope.model.canUpdate;\n    $scope.canCopy = $scope.model.enableCopy;\n\n    $scope.update = () => {\n      const newObject = angular.fromJson($scope.json);\n      $scope.model.updateHandler(newObject, $scope.model.object);\n    };\n\n    $scope.getContentForClipboard = () => $scope.json;\n  }\n}\n\ncoreModule.controller('JsonEditorCtrl', JsonEditorCtrl);\n","import coreModule from '../core_module';\nimport config from 'app/core/config';\n\nexport class InvitedCtrl {\n  /** @ngInject */\n  constructor($scope: any, $routeParams: any, contextSrv: any, backendSrv: any) {\n    contextSrv.sidemenu = false;\n    $scope.formModel = {};\n\n    $scope.navModel = {\n      main: {\n        icon: 'gicon gicon-branding',\n        text: 'Invite',\n        subTitle: 'Register your Grafana account',\n        breadcrumbs: [{ title: 'Login', url: 'login' }],\n      },\n    };\n\n    $scope.init = () => {\n      backendSrv.get('/api/user/invite/' + $routeParams.code).then((invite: any) => {\n        $scope.formModel.name = invite.name;\n        $scope.formModel.email = invite.email;\n        $scope.formModel.username = invite.email;\n        $scope.formModel.inviteCode = $routeParams.code;\n\n        $scope.greeting = invite.name || invite.email || invite.username;\n        $scope.invitedBy = invite.invitedBy;\n      });\n    };\n\n    $scope.submit = () => {\n      if (!$scope.inviteForm.$valid) {\n        return;\n      }\n\n      backendSrv.post('/api/user/invite/complete', $scope.formModel).then(() => {\n        window.location.href = config.appSubUrl + '/';\n      });\n    };\n\n    $scope.init();\n  }\n}\n\ncoreModule.controller('InvitedCtrl', InvitedCtrl);\n","import config from 'app/core/config';\nimport coreModule from '../core_module';\n\nexport class SignUpCtrl {\n  /** @ngInject */\n  constructor(private $scope: any, private backendSrv: any, $location: any, contextSrv: any) {\n    contextSrv.sidemenu = false;\n    $scope.ctrl = this;\n\n    $scope.formModel = {};\n\n    const params = $location.search();\n\n    // validate email is semi ok\n    if (params.email && !params.email.match(/^\\S+@\\S+$/)) {\n      console.log('invalid email');\n      return;\n    }\n\n    $scope.formModel.orgName = params.email;\n    $scope.formModel.email = params.email;\n    $scope.formModel.username = params.email;\n    $scope.formModel.code = params.code;\n\n    $scope.verifyEmailEnabled = false;\n    $scope.autoAssignOrg = false;\n\n    $scope.navModel = {\n      main: {\n        icon: 'gicon gicon-branding',\n        text: 'Sign Up',\n        subTitle: 'Register your Grafana account',\n        breadcrumbs: [{ title: 'Login', url: 'login' }],\n      },\n    };\n\n    backendSrv.get('/api/user/signup/options').then((options: any) => {\n      $scope.verifyEmailEnabled = options.verifyEmailEnabled;\n      $scope.autoAssignOrg = options.autoAssignOrg;\n    });\n  }\n\n  submit() {\n    if (!this.$scope.signUpForm.$valid) {\n      return;\n    }\n\n    this.backendSrv.post('/api/user/signup/step2', this.$scope.formModel).then((rsp: any) => {\n      if (rsp.code === 'redirect-to-select-org') {\n        window.location.href = config.appSubUrl + '/profile/select-org?signup=1';\n      } else {\n        window.location.href = config.appSubUrl + '/';\n      }\n    });\n  }\n}\n\ncoreModule.controller('SignUpCtrl', SignUpCtrl);\n","import coreModule from '../core_module';\nimport config from 'app/core/config';\nimport { BackendSrv } from '../services/backend_srv';\n\nexport class ResetPasswordCtrl {\n  /** @ngInject */\n  constructor($scope: any, backendSrv: BackendSrv, $location: any) {\n    $scope.formModel = {};\n    $scope.mode = 'send';\n    $scope.ldapEnabled = config.ldapEnabled;\n    $scope.authProxyEnabled = config.authProxyEnabled;\n    $scope.disableLoginForm = config.disableLoginForm;\n\n    const params = $location.search();\n    if (params.code) {\n      $scope.mode = 'reset';\n      $scope.formModel.code = params.code;\n    }\n\n    $scope.navModel = {\n      main: {\n        icon: 'gicon gicon-branding',\n        text: 'Reset Password',\n        subTitle: 'Reset your Grafana password',\n        breadcrumbs: [{ title: 'Login', url: 'login' }],\n      },\n    };\n\n    $scope.sendResetEmail = () => {\n      if (!$scope.sendResetForm.$valid) {\n        return;\n      }\n      backendSrv.post('/api/user/password/send-reset-email', $scope.formModel).then(() => {\n        $scope.mode = 'email-sent';\n      });\n    };\n\n    $scope.submitReset = () => {\n      if (!$scope.resetForm.$valid) {\n        return;\n      }\n\n      if ($scope.formModel.newPassword !== $scope.formModel.confirmPassword) {\n        $scope.appEvent('alert-warning', ['New passwords do not match', '']);\n        return;\n      }\n\n      backendSrv.post('/api/user/password/reset', $scope.formModel).then(() => {\n        $location.path('login');\n      });\n    };\n  }\n}\n\ncoreModule.controller('ResetPasswordCtrl', ResetPasswordCtrl);\n","import config from 'app/core/config';\nimport coreModule from '../core_module';\nimport appEvents from 'app/core/app_events';\n\nexport class ErrorCtrl {\n  /** @ngInject */\n  constructor($scope: any, contextSrv: any, navModelSrv: any) {\n    $scope.navModel = navModelSrv.getNotFoundNav();\n    $scope.appSubUrl = config.appSubUrl;\n\n    if (!contextSrv.isSignedIn) {\n      appEvents.emit('toggle-sidemenu-hidden');\n    }\n\n    $scope.$on('destroy', () => {\n      if (!contextSrv.isSignedIn) {\n        appEvents.emit('toggle-sidemenu-hidden');\n      }\n    });\n  }\n}\n\ncoreModule.controller('ErrorCtrl', ErrorCtrl);\n","import './json_editor_ctrl';\nimport './invited_ctrl';\nimport './signup_ctrl';\nimport './reset_password_ctrl';\nimport './error_ctrl';\n","import coreModule from 'app/core/core_module';\n\nexport class AlertSrv {\n  constructor() {}\n\n  set() {\n    console.log('old depricated alert srv being used');\n  }\n}\n\n// this is just added to not break old plugins that might be using it\ncoreModule.service('alertSrv', AlertSrv);\n","import coreModule from 'app/core/core_module';\nimport appEvents from 'app/core/app_events';\n\nexport class UtilSrv {\n  modalScope: any;\n\n  /** @ngInject */\n  constructor(private $rootScope: any, private $modal: any) {}\n\n  init() {\n    appEvents.on('show-modal', this.showModal.bind(this), this.$rootScope);\n    appEvents.on('hide-modal', this.hideModal.bind(this), this.$rootScope);\n    appEvents.on('confirm-modal', this.showConfirmModal.bind(this), this.$rootScope);\n  }\n\n  hideModal() {\n    if (this.modalScope && this.modalScope.dismiss) {\n      this.modalScope.dismiss();\n    }\n  }\n\n  showModal(options: any) {\n    if (this.modalScope && this.modalScope.dismiss) {\n      this.modalScope.dismiss();\n    }\n\n    this.modalScope = options.scope;\n\n    if (options.model) {\n      this.modalScope = this.$rootScope.$new();\n      this.modalScope.model = options.model;\n    } else if (!this.modalScope) {\n      this.modalScope = this.$rootScope.$new();\n    }\n\n    const modal = this.$modal({\n      modalClass: options.modalClass,\n      template: options.src,\n      templateHtml: options.templateHtml,\n      persist: false,\n      show: false,\n      scope: this.modalScope,\n      keyboard: false,\n      backdrop: options.backdrop,\n    });\n\n    Promise.resolve(modal).then(modalEl => {\n      modalEl.modal('show');\n    });\n  }\n\n  showConfirmModal(payload: any) {\n    const scope = this.$rootScope.$new();\n\n    scope.updateConfirmText = (value: any) => {\n      scope.confirmTextValid = payload.confirmText.toLowerCase() === value.toLowerCase();\n    };\n\n    scope.title = payload.title;\n    scope.text = payload.text;\n    scope.text2 = payload.text2;\n    scope.text2htmlBind = payload.text2htmlBind;\n    scope.confirmText = payload.confirmText;\n\n    scope.onConfirm = payload.onConfirm;\n    scope.onAltAction = payload.onAltAction;\n    scope.altActionText = payload.altActionText;\n    scope.icon = payload.icon || 'fa-check';\n    scope.yesText = payload.yesText || 'Yes';\n    scope.noText = payload.noText || 'Cancel';\n    scope.confirmTextValid = scope.confirmText ? false : true;\n\n    appEvents.emit('show-modal', {\n      src: 'public/app/partials/confirm_modal.html',\n      scope: scope,\n      modalClass: 'confirm-modal',\n    });\n  }\n}\n\ncoreModule.service('utilSrv', UtilSrv);\n","import _ from 'lodash';\nimport coreModule from 'app/core/core_module';\nimport { ITimeoutService } from 'angular';\n\n// This service really just tracks a list of $timeout promises to give us a\n// method for canceling them all when we need to\nexport class Timer {\n  timers: Array<angular.IPromise<any>> = [];\n\n  /** @ngInject */\n  constructor(private $timeout: ITimeoutService) {}\n\n  register(promise: angular.IPromise<any>) {\n    this.timers.push(promise);\n    return promise;\n  }\n\n  cancel(promise: angular.IPromise<any>) {\n    this.timers = _.without(this.timers, promise);\n    this.$timeout.cancel(promise);\n  }\n\n  cancelAll() {\n    _.each(this.timers, t => {\n      this.$timeout.cancel(t);\n    });\n    this.timers = [];\n  }\n}\n\ncoreModule.service('timer', Timer);\n","import $ from 'jquery';\nimport coreModule from 'app/core/core_module';\nimport config from 'app/core/config';\n\nexport class Analytics {\n  /** @ngInject */\n  constructor(private $rootScope: any, private $location: any) {}\n\n  gaInit() {\n    $.ajax({\n      url: 'https://www.google-analytics.com/analytics.js',\n      dataType: 'script',\n      cache: true,\n    });\n    const ga = ((window as any).ga =\n      (window as any).ga ||\n      //tslint:disable-next-line:only-arrow-functions\n      function() {\n        (ga.q = ga.q || []).push(arguments);\n      });\n    ga.l = +new Date();\n    ga('create', (config as any).googleAnalyticsId, 'auto');\n    ga('set', 'anonymizeIp', true);\n    return ga;\n  }\n\n  init() {\n    this.$rootScope.$on('$viewContentLoaded', () => {\n      const track = { page: this.$location.url() };\n      const ga = (window as any).ga || this.gaInit();\n      ga('set', track);\n      ga('send', 'pageview');\n    });\n  }\n}\n\n/** @ngInject */\nfunction startAnalytics(googleAnalyticsSrv: Analytics) {\n  if ((config as any).googleAnalyticsId) {\n    googleAnalyticsSrv.init();\n  }\n}\n\ncoreModule.service('googleAnalyticsSrv', Analytics).run(startAnalytics);\n","import _ from 'lodash';\nimport coreModule from 'app/core/core_module';\n// @ts-ignore\nimport Drop from 'tether-drop';\n\n/** @ngInject */\nfunction popoverSrv(this: any, $compile: any, $rootScope: any, $timeout: any) {\n  let openDrop: any = null;\n\n  this.close = () => {\n    if (openDrop) {\n      openDrop.close();\n    }\n  };\n\n  this.show = (options: any) => {\n    if (openDrop) {\n      openDrop.close();\n      openDrop = null;\n    }\n\n    const scope = _.extend($rootScope.$new(true), options.model);\n    let drop: any;\n\n    const cleanUp = () => {\n      setTimeout(() => {\n        scope.$destroy();\n\n        if (drop.tether) {\n          drop.destroy();\n        }\n\n        if (options.onClose) {\n          options.onClose();\n        }\n      });\n\n      openDrop = null;\n    };\n\n    scope.dismiss = () => {\n      drop.close();\n    };\n\n    const contentElement = document.createElement('div');\n    contentElement.innerHTML = options.template;\n\n    $compile(contentElement)(scope);\n\n    $timeout(() => {\n      drop = new Drop({\n        target: options.element,\n        content: contentElement,\n        position: options.position,\n        classes: options.classNames || 'drop-popover',\n        openOn: options.openOn,\n        hoverCloseDelay: 200,\n        tetherOptions: {\n          constraints: [{ to: 'scrollParent', attachment: 'together' }],\n        },\n      });\n\n      drop.on('close', () => {\n        cleanUp();\n      });\n\n      openDrop = drop;\n      openDrop.open();\n    }, 100);\n\n    // return close function\n    return () => {\n      if (drop) {\n        drop.close();\n      }\n    };\n  };\n}\n\ncoreModule.service('popoverSrv', popoverSrv);\n","import _ from 'lodash';\nimport coreModule from '../core_module';\n\n/** @ngInject */\nexport function uiSegmentSrv(this: any, $sce: any, templateSrv: any) {\n  const self = this;\n\n  class MetricSegment {\n    value: string;\n    html: any;\n    type: any;\n    expandable: boolean;\n    text: string;\n    cssClass: string;\n    fake: boolean;\n    custom: boolean;\n    selectMode: any;\n\n    constructor(options: any) {\n      if (options === '*' || options.value === '*') {\n        this.value = '*';\n        this.html = $sce.trustAsHtml('<i class=\"fa fa-asterisk\"><i>');\n        this.type = options.type;\n        this.expandable = true;\n        return;\n      }\n\n      if (_.isString(options)) {\n        this.value = options;\n        this.html = $sce.trustAsHtml(templateSrv.highlightVariablesAsHtml(this.value));\n        return;\n      }\n\n      // temp hack to work around legacy inconsistency in segment model\n      this.text = options.value;\n\n      this.cssClass = options.cssClass;\n      this.custom = options.custom;\n      this.type = options.type;\n      this.fake = options.fake;\n      this.value = options.value;\n      this.selectMode = options.selectMode;\n      this.type = options.type;\n      this.expandable = options.expandable;\n      this.html = options.html || $sce.trustAsHtml(templateSrv.highlightVariablesAsHtml(this.value));\n    }\n  }\n\n  this.getSegmentForValue = function(value: string, fallbackText: string) {\n    if (value) {\n      return this.newSegment(value);\n    } else {\n      return this.newSegment({ value: fallbackText, fake: true });\n    }\n  };\n\n  this.newSelectMeasurement = () => {\n    return new MetricSegment({ value: 'select measurement', fake: true });\n  };\n\n  this.newFake = (text: string, type: string, cssClass: string) => {\n    return new MetricSegment({ value: text, fake: true, type: type, cssClass: cssClass });\n  };\n\n  this.newSegment = (options: any) => {\n    return new MetricSegment(options);\n  };\n\n  this.newKey = (key: string) => {\n    return new MetricSegment({ value: key, type: 'key', cssClass: 'query-segment-key' });\n  };\n\n  this.newKeyValue = (value: string) => {\n    return new MetricSegment({ value: value, type: 'value', cssClass: 'query-segment-value' });\n  };\n\n  this.newCondition = (condition: string) => {\n    return new MetricSegment({ value: condition, type: 'condition', cssClass: 'query-keyword' });\n  };\n\n  this.newOperator = (op: string) => {\n    return new MetricSegment({ value: op, type: 'operator', cssClass: 'query-segment-operator' });\n  };\n\n  this.newOperators = (ops: string[]) => {\n    return _.map(ops, op => {\n      return new MetricSegment({ value: op, type: 'operator', cssClass: 'query-segment-operator' });\n    });\n  };\n\n  this.transformToSegments = (addTemplateVars: boolean, variableTypeFilter: string) => {\n    return (results: any[]) => {\n      const segments = _.map(results, segment => {\n        return self.newSegment({ value: segment.text, expandable: segment.expandable });\n      });\n\n      if (addTemplateVars) {\n        _.each(templateSrv.variables, variable => {\n          if (variableTypeFilter === void 0 || variableTypeFilter === variable.type) {\n            segments.unshift(self.newSegment({ type: 'value', value: '$' + variable.name, expandable: true }));\n          }\n        });\n      }\n\n      return segments;\n    };\n  };\n\n  this.newSelectMetric = () => {\n    return new MetricSegment({ value: 'select metric', fake: true });\n  };\n\n  this.newPlusButton = () => {\n    return new MetricSegment({\n      fake: true,\n      html: '<i class=\"fa fa-plus \"></i>',\n      type: 'plus-button',\n      cssClass: 'query-part',\n    });\n  };\n}\n\ncoreModule.service('uiSegmentSrv', uiSegmentSrv);\n","import angular from 'angular';\nimport coreModule from '../core_module';\n\nclass DynamicDirectiveSrv {\n  /** @ngInject */\n  constructor(private $compile: angular.ICompileService) {}\n\n  addDirective(element: any, name: string, scope: any) {\n    const child = angular.element(document.createElement(name));\n    this.$compile(child)(scope);\n\n    element.empty();\n    element.append(child);\n  }\n\n  link(scope: any, elem: JQLite, attrs: any, options: any) {\n    const directiveInfo = options.directive(scope);\n    if (!directiveInfo || !directiveInfo.fn) {\n      elem.empty();\n      return;\n    }\n\n    if (!directiveInfo.fn.registered) {\n      coreModule.directive(attrs.$normalize(directiveInfo.name), directiveInfo.fn);\n      directiveInfo.fn.registered = true;\n    }\n\n    this.addDirective(elem, directiveInfo.name, scope);\n  }\n\n  create(options: any) {\n    const directiveDef = {\n      restrict: 'E',\n      scope: options.scope,\n      link: (scope: any, elem: JQLite, attrs: any) => {\n        if (options.watchPath) {\n          let childScope: any = null;\n          scope.$watch(options.watchPath, () => {\n            if (childScope) {\n              childScope.$destroy();\n            }\n            childScope = scope.$new();\n            this.link(childScope, elem, attrs, options);\n          });\n        } else {\n          this.link(scope, elem, attrs, options);\n        }\n      },\n    };\n\n    return directiveDef;\n  }\n}\n\ncoreModule.service('dynamicDirectiveSrv', DynamicDirectiveSrv);\n","import coreModule from 'app/core/core_module';\nimport appEvents from 'app/core/app_events';\nimport { store } from 'app/store/store';\nimport locationUtil from 'app/core/utils/location_util';\nimport { updateLocation } from 'app/core/actions';\nimport { ITimeoutService, ILocationService, IWindowService, IRootScopeService } from 'angular';\n\n// Services that handles angular -> redux store sync & other react <-> angular sync\nexport class BridgeSrv {\n  private fullPageReloadRoutes: string[];\n\n  /** @ngInject */\n  constructor(\n    private $location: ILocationService,\n    private $timeout: ITimeoutService,\n    private $window: IWindowService,\n    private $rootScope: IRootScopeService,\n    private $route: any\n  ) {\n    this.fullPageReloadRoutes = ['/logout'];\n  }\n\n  init() {\n    this.$rootScope.$on('$routeUpdate', (evt, data) => {\n      const angularUrl = this.$location.url();\n      const state = store.getState();\n      if (state.location.url !== angularUrl) {\n        store.dispatch(\n          updateLocation({\n            path: this.$location.path(),\n            query: this.$location.search(),\n            routeParams: this.$route.current.params,\n          })\n        );\n      }\n    });\n\n    this.$rootScope.$on('$routeChangeSuccess', (evt, data) => {\n      store.dispatch(\n        updateLocation({\n          path: this.$location.path(),\n          query: this.$location.search(),\n          routeParams: this.$route.current.params,\n        })\n      );\n    });\n\n    // Listen for changes in redux location -> update angular location\n    store.subscribe(() => {\n      const state = store.getState();\n      const angularUrl = this.$location.url();\n      const url = locationUtil.stripBaseFromUrl(state.location.url);\n      if (angularUrl !== url) {\n        this.$timeout(() => {\n          this.$location.url(url);\n          // some state changes should not trigger new browser history\n          if (state.location.replace) {\n            this.$location.replace();\n          }\n        });\n        console.log('store updating angular $location.url', url);\n      }\n    });\n\n    appEvents.on('location-change', (payload: any) => {\n      const urlWithoutBase = locationUtil.stripBaseFromUrl(payload.href);\n      if (this.fullPageReloadRoutes.indexOf(urlWithoutBase) > -1) {\n        this.$window.location.href = payload.href;\n        return;\n      }\n\n      this.$timeout(() => {\n        // A hack to use timeout when we're changing things (in this case the url) from outside of Angular.\n        this.$location.url(urlWithoutBase);\n      });\n    });\n  }\n}\n\ncoreModule.service('bridgeSrv', BridgeSrv);\n","import './alert_srv';\nimport './util_srv';\nimport './context_srv';\nimport './timer';\nimport './analytics';\nimport './popover_srv';\nimport './segment_srv';\nimport './backend_srv';\nimport './dynamic_directive_srv';\nimport './bridge_srv';\n","import _ from 'lodash';\nimport angular from 'angular';\nimport coreModule from '../core_module';\nimport { TemplateSrv } from 'app/features/templating/template_srv';\nimport { dateTime } from '@grafana/data';\n\ncoreModule.filter('stringSort', () => {\n  return (input: any) => {\n    return input.sort();\n  };\n});\n\ncoreModule.filter('slice', () => {\n  return (arr: any[], start: any, end: any) => {\n    if (!_.isUndefined(arr)) {\n      return arr.slice(start, end);\n    }\n    return arr;\n  };\n});\n\ncoreModule.filter('stringify', () => {\n  return (arr: any[]) => {\n    if (_.isObject(arr) && !_.isArray(arr)) {\n      return angular.toJson(arr);\n    } else {\n      return _.isNull(arr) ? null : arr.toString();\n    }\n  };\n});\n\ncoreModule.filter('moment', () => {\n  return (date: string, mode: string) => {\n    switch (mode) {\n      case 'ago':\n        return dateTime(date).fromNow();\n    }\n    return dateTime(date).fromNow();\n  };\n});\n\n/** @ngInject */\nfunction interpolateTemplateVars(templateSrv: TemplateSrv) {\n  const filterFunc: any = (text: string, scope: any) => {\n    let scopedVars;\n    if (scope.ctrl) {\n      scopedVars = (scope.ctrl.panel || scope.ctrl.row).scopedVars;\n    } else {\n      scopedVars = scope.row.scopedVars;\n    }\n\n    return templateSrv.replaceWithText(text, scopedVars);\n  };\n\n  filterFunc.$stateful = true;\n  return filterFunc;\n}\n\ncoreModule.filter('interpolateTemplateVars', interpolateTemplateVars);\nexport default {};\n","import coreModule from '../../core_module';\nimport appEvents from 'app/core/app_events';\n\nexport class HelpCtrl {\n  tabIndex: any;\n  shortcuts: any;\n\n  /** @ngInject */\n  constructor() {\n    this.tabIndex = 0;\n    this.shortcuts = {\n      Global: [\n        { keys: ['g', 'h'], description: 'Go to Home Dashboard' },\n        { keys: ['g', 'p'], description: 'Go to Profile' },\n        { keys: ['s', 'o'], description: 'Open search' },\n        { keys: ['esc'], description: 'Exit edit/setting views' },\n      ],\n      Dashboard: [\n        { keys: ['mod+s'], description: 'Save dashboard' },\n        { keys: ['d', 'r'], description: 'Refresh all panels' },\n        { keys: ['d', 's'], description: 'Dashboard settings' },\n        { keys: ['d', 'v'], description: 'Toggle in-active / view mode' },\n        { keys: ['d', 'k'], description: 'Toggle kiosk mode (hides top nav)' },\n        { keys: ['d', 'E'], description: 'Expand all rows' },\n        { keys: ['d', 'C'], description: 'Collapse all rows' },\n        { keys: ['d', 'a'], description: 'Toggle auto fit panels (experimental feature)' },\n        { keys: ['mod+o'], description: 'Toggle shared graph crosshair' },\n        { keys: ['d', 'l'], description: 'Toggle all panel legends' },\n      ],\n      'Focused Panel': [\n        { keys: ['e'], description: 'Toggle panel edit view' },\n        { keys: ['v'], description: 'Toggle panel fullscreen view' },\n        { keys: ['p', 's'], description: 'Open Panel Share Modal' },\n        { keys: ['p', 'd'], description: 'Duplicate Panel' },\n        { keys: ['p', 'r'], description: 'Remove Panel' },\n        { keys: ['p', 'l'], description: 'Toggle panel legend' },\n      ],\n      'Time Range': [\n        { keys: ['t', 'z'], description: 'Zoom out time range' },\n        {\n          keys: ['t', '<i class=\"fa fa-long-arrow-left\"></i>'],\n          description: 'Move time range back',\n        },\n        {\n          keys: ['t', '<i class=\"fa fa-long-arrow-right\"></i>'],\n          description: 'Move time range forward',\n        },\n      ],\n    };\n  }\n\n  dismiss() {\n    appEvents.emit('hide-modal');\n  }\n}\n\nexport function helpModal() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/core/components/help/help.html',\n    controller: HelpCtrl,\n    bindToController: true,\n    transclude: true,\n    controllerAs: 'ctrl',\n    scope: {},\n  };\n}\n\ncoreModule.directive('helpModal', helpModal);\n","import $ from 'jquery';\n// @ts-ignore\nimport baron from 'baron';\nimport coreModule from 'app/core/core_module';\n\nconst scrollBarHTML = `\n<div class=\"baron__track\">\n  <div class=\"baron__bar\"></div>\n</div>\n`;\n\nconst scrollRootClass = 'baron baron__root';\nconst scrollerClass = 'baron__scroller';\n\nexport function geminiScrollbar() {\n  return {\n    restrict: 'A',\n    link: (scope: any, elem: any, attrs: any) => {\n      let scrollRoot = elem.parent();\n      const scroller = elem;\n\n      console.log('scroll');\n      if (attrs.grafanaScrollbar && attrs.grafanaScrollbar === 'scrollonroot') {\n        scrollRoot = scroller;\n      }\n\n      scrollRoot.addClass(scrollRootClass);\n      $(scrollBarHTML).appendTo(scrollRoot);\n      elem.addClass(scrollerClass);\n\n      const scrollParams = {\n        root: scrollRoot[0],\n        scroller: scroller[0],\n        bar: '.baron__bar',\n        barOnCls: '_scrollbar',\n        scrollingCls: '_scrolling',\n        track: '.baron__track',\n        direction: 'v',\n      };\n\n      const scrollbar = baron(scrollParams);\n\n      scope.$on('$destroy', () => {\n        scrollbar.dispose();\n      });\n    },\n  };\n}\n\ncoreModule.directive('grafanaScrollbar', geminiScrollbar);\n","import coreModule from 'app/core/core_module';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport config from 'app/core/config';\nimport { BackendSrv } from '../services/backend_srv';\n\nconst template = `\n<div class=\"modal-body\">\n\t<div class=\"modal-header\">\n\t\t<h2 class=\"modal-header-title\">\n\t\t\t<i class=\"fa fa-random\"></i>\n\t\t\t<span class=\"p-l-1\">Switch Organization</span>\n\t\t</h2>\n\n\t\t<a class=\"modal-header-close\" ng-click=\"ctrl.dismiss();\">\n\t\t\t<i class=\"fa fa-remove\"></i>\n\t\t</a>\n\t</div>\n\n  <div class=\"modal-content modal-content--has-scroll\" grafana-scrollbar>\n    <table class=\"filter-table form-inline\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t<th>Role</th>\n\t\t\t\t\t<th></th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<tr ng-repeat=\"org in ctrl.orgs\">\n\t\t\t\t\t<td>{{org.name}}</td>\n\t\t\t\t\t<td>{{org.role}}</td>\n\t\t\t\t\t<td class=\"text-right\">\n\t\t\t\t\t\t<span class=\"btn btn-primary btn-small\" ng-show=\"org.orgId === ctrl.currentOrgId\">\n\t\t\t\t\t\t\tCurrent\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<a ng-click=\"ctrl.setUsingOrg(org)\" class=\"btn btn-inverse btn-small\" ng-show=\"org.orgId !== ctrl.currentOrgId\">\n\t\t\t\t\t\t\tSwitch to\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>`;\n\nexport class OrgSwitchCtrl {\n  orgs: any[];\n  currentOrgId: any;\n\n  /** @ngInject */\n  constructor(private backendSrv: BackendSrv) {\n    this.currentOrgId = contextSrv.user.orgId;\n    this.getUserOrgs();\n  }\n\n  getUserOrgs() {\n    this.backendSrv.get('/api/user/orgs').then((orgs: any) => {\n      this.orgs = orgs;\n    });\n  }\n\n  setUsingOrg(org: any) {\n    return this.backendSrv.post('/api/user/using/' + org.orgId).then(() => {\n      this.setWindowLocation(config.appSubUrl + (config.appSubUrl.endsWith('/') ? '' : '/') + '?orgId=' + org.orgId);\n    });\n  }\n\n  setWindowLocation(href: string) {\n    window.location.href = href;\n  }\n}\n\nexport function orgSwitcher() {\n  return {\n    restrict: 'E',\n    template: template,\n    controller: OrgSwitchCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: { dismiss: '&' },\n  };\n}\n\ncoreModule.directive('orgSwitcher', orgSwitcher);\n","import React from 'react';\nimport _ from 'lodash';\n\nimport { Select } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport { Variable } from 'app/types/templates';\n\nexport interface Props {\n  onChange: (value: string) => void;\n  options: Array<SelectableValue<string>>;\n  isSearchable: boolean;\n  value: string;\n  placeholder?: string;\n  className?: string;\n  variables?: Variable[];\n}\n\ninterface State {\n  options: Array<SelectableValue<string>>;\n}\n\nexport class MetricSelect extends React.Component<Props, State> {\n  static defaultProps: Partial<Props> = {\n    variables: [],\n    options: [],\n    isSearchable: true,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { options: [] };\n  }\n\n  componentDidMount() {\n    this.setState({ options: this.buildOptions(this.props) });\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.options.length > 0 || nextProps.variables.length) {\n      this.setState({ options: this.buildOptions(nextProps) });\n    }\n  }\n\n  shouldComponentUpdate(nextProps: Props) {\n    const nextOptions = this.buildOptions(nextProps);\n    return nextProps.value !== this.props.value || !_.isEqual(nextOptions, this.state.options);\n  }\n\n  buildOptions({ variables = [], options }: Props) {\n    return variables.length > 0 ? [this.getVariablesGroup(), ...options] : options;\n  }\n\n  getVariablesGroup() {\n    return {\n      label: 'Template Variables',\n      options: this.props.variables.map(v => ({\n        label: `$${v.name}`,\n        value: `$${v.name}`,\n      })),\n    };\n  }\n\n  getSelectedOption() {\n    const { options } = this.state;\n    const allOptions = options.every(o => o.options) ? _.flatten(options.map(o => o.options)) : options;\n    return allOptions.find(option => option.value === this.props.value);\n  }\n\n  render() {\n    const { placeholder, className, isSearchable, onChange } = this.props;\n    const { options } = this.state;\n    const selectedOption = this.getSelectedOption();\n\n    return (\n      <Select\n        className={className}\n        isMulti={false}\n        isClearable={false}\n        backspaceRemovesValue={false}\n        onChange={item => onChange(item.value)}\n        options={options}\n        isSearchable={isSearchable}\n        maxMenuHeight={500}\n        placeholder={placeholder}\n        noOptionsMessage={() => 'No options found'}\n        value={selectedOption}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport _ from 'lodash';\n\nimport StackdriverDatasource from '../datasource';\nimport appEvents from 'app/core/app_events';\nimport { MetricDescriptor } from '../types';\nimport { MetricSelect } from 'app/core/components/Select/MetricSelect';\nimport { TemplateSrv } from 'app/features/templating/template_srv';\n\nexport interface Props {\n  onChange: (metricDescriptor: MetricDescriptor) => void;\n  templateSrv: TemplateSrv;\n  datasource: StackdriverDatasource;\n  defaultProject: string;\n  metricType: string;\n  children?: (renderProps: any) => JSX.Element;\n}\n\ninterface State {\n  metricDescriptors: MetricDescriptor[];\n  metrics: any[];\n  services: any[];\n  service: string;\n  metric: string;\n  metricDescriptor: MetricDescriptor;\n  defaultProject: string;\n}\n\nexport class Metrics extends React.Component<Props, State> {\n  state: State = {\n    metricDescriptors: [],\n    metrics: [],\n    services: [],\n    service: '',\n    metric: '',\n    metricDescriptor: null,\n    defaultProject: '',\n  };\n\n  constructor(props: Props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.setState({ defaultProject: this.props.defaultProject }, () => {\n      this.getCurrentProject()\n        .then(this.loadMetricDescriptors.bind(this))\n        .then(this.initializeServiceAndMetrics.bind(this));\n    });\n  }\n\n  async getCurrentProject() {\n    return new Promise(async (resolve, reject) => {\n      try {\n        if (!this.state.defaultProject || this.state.defaultProject === 'loading project...') {\n          const defaultProject = await this.props.datasource.getDefaultProject();\n          this.setState({ defaultProject });\n        }\n        resolve(this.state.defaultProject);\n      } catch (error) {\n        appEvents.emit('ds-request-error', error);\n        reject();\n      }\n    });\n  }\n\n  async loadMetricDescriptors() {\n    if (this.state.defaultProject !== 'loading project...') {\n      const metricDescriptors = await this.props.datasource.getMetricTypes(this.state.defaultProject);\n      this.setState({ metricDescriptors });\n      return metricDescriptors;\n    } else {\n      return [];\n    }\n  }\n\n  async initializeServiceAndMetrics() {\n    const { metricDescriptors } = this.state;\n    const services = this.getServicesList(metricDescriptors);\n    const metrics = this.getMetricsList(metricDescriptors);\n    const service = metrics.length > 0 ? metrics[0].service : '';\n    const metricDescriptor = this.getSelectedMetricDescriptor(this.props.metricType);\n    this.setState({ metricDescriptors, services, metrics, service: service, metricDescriptor });\n  }\n\n  getSelectedMetricDescriptor(metricType: string) {\n    return this.state.metricDescriptors.find(md => md.type === this.props.templateSrv.replace(metricType));\n  }\n\n  getMetricsList(metricDescriptors: MetricDescriptor[]) {\n    const selectedMetricDescriptor = this.getSelectedMetricDescriptor(this.props.metricType);\n    if (!selectedMetricDescriptor) {\n      return [];\n    }\n    const metricsByService = metricDescriptors\n      .filter(m => m.service === selectedMetricDescriptor.service)\n      .map(m => ({\n        service: m.service,\n        value: m.type,\n        label: m.displayName,\n        description: m.description,\n      }));\n    return metricsByService;\n  }\n\n  onServiceChange = (service: any) => {\n    const { metricDescriptors } = this.state;\n    const { templateSrv, metricType } = this.props;\n\n    const metrics = metricDescriptors\n      .filter(m => m.service === templateSrv.replace(service))\n      .map(m => ({\n        service: m.service,\n        value: m.type,\n        label: m.displayName,\n        description: m.description,\n      }));\n\n    this.setState({ service, metrics });\n\n    if (metrics.length > 0 && !metrics.some(m => m.value === templateSrv.replace(metricType))) {\n      this.onMetricTypeChange(metrics[0].value);\n    }\n  };\n\n  onMetricTypeChange = (value: any) => {\n    const metricDescriptor = this.getSelectedMetricDescriptor(value);\n    this.setState({ metricDescriptor });\n    this.props.onChange({ ...metricDescriptor, type: value });\n  };\n\n  getServicesList(metricDescriptors: MetricDescriptor[]) {\n    const services = metricDescriptors.map(m => ({\n      value: m.service,\n      label: _.startCase(m.serviceShortName),\n    }));\n\n    return services.length > 0 ? _.uniqBy(services, s => s.value) : [];\n  }\n\n  getTemplateVariablesGroup() {\n    return {\n      label: 'Template Variables',\n      options: this.props.templateSrv.variables.map(v => ({\n        label: `$${v.name}`,\n        value: `$${v.name}`,\n      })),\n    };\n  }\n\n  render() {\n    const { services, service, metrics } = this.state;\n    const { metricType, templateSrv } = this.props;\n\n    return (\n      <>\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <span className=\"gf-form-label width-9 query-keyword\">Service</span>\n            <MetricSelect\n              onChange={this.onServiceChange}\n              value={service}\n              options={services}\n              isSearchable={false}\n              placeholder=\"Select Services\"\n              className=\"width-15\"\n            />\n          </div>\n          <div className=\"gf-form gf-form--grow\">\n            <div className=\"gf-form-label gf-form-label--grow\" />\n          </div>\n        </div>\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <span className=\"gf-form-label width-9 query-keyword\">Metric</span>\n            <MetricSelect\n              onChange={this.onMetricTypeChange}\n              value={metricType}\n              variables={templateSrv.variables}\n              options={[\n                {\n                  label: 'Metrics',\n                  expanded: true,\n                  options: metrics,\n                },\n              ]}\n              placeholder=\"Select Metric\"\n              className=\"width-26\"\n            />\n          </div>\n          <div className=\"gf-form gf-form--grow\">\n            <div className=\"gf-form-label gf-form-label--grow\" />\n          </div>\n        </div>\n        {this.props.children(this.state.metricDescriptor)}\n      </>\n    );\n  }\n}\n","import { Segment } from './types';\n\nexport const DefaultRemoveFilterValue = '-- remove filter --';\nexport const DefaultFilterValue = 'select value';\n\nexport class FilterSegments {\n  filterSegments: any[];\n  removeSegment: any;\n\n  constructor(\n    private uiSegmentSrv: any,\n    private filters: string[],\n    private getFilterKeysFunc: (arg0: any, arg1: string) => any,\n    private getFilterValuesFunc: (arg0: any) => any\n  ) {}\n\n  buildSegmentModel() {\n    this.removeSegment = this.uiSegmentSrv.newSegment({ fake: true, value: DefaultRemoveFilterValue });\n\n    this.filterSegments = [];\n    this.filters.forEach((f, index) => {\n      switch (index % 4) {\n        case 0:\n          this.filterSegments.push(this.uiSegmentSrv.newKey(f));\n          break;\n        case 1:\n          this.filterSegments.push(this.uiSegmentSrv.newOperator(f));\n          break;\n        case 2:\n          this.filterSegments.push(this.uiSegmentSrv.newKeyValue(f));\n          break;\n        case 3:\n          this.filterSegments.push(this.uiSegmentSrv.newCondition(f));\n          break;\n      }\n    });\n    this.ensurePlusButton(this.filterSegments);\n  }\n\n  async getFilters(segment: { type: any; value?: any }, index: number, hasNoFilterKeys: boolean) {\n    if (segment.type === 'condition') {\n      return [this.uiSegmentSrv.newSegment('AND')];\n    }\n\n    if (segment.type === 'operator') {\n      return this.uiSegmentSrv.newOperators(['=', '!=', '=~', '!=~']);\n    }\n\n    if (segment.type === 'key' || segment.type === 'plus-button') {\n      if (hasNoFilterKeys && segment.value && segment.value !== DefaultRemoveFilterValue) {\n        this.removeSegment.value = DefaultRemoveFilterValue;\n        return Promise.resolve([this.removeSegment]);\n      } else {\n        return this.getFilterKeysFunc(segment, DefaultRemoveFilterValue);\n      }\n    }\n\n    if (segment.type === 'value') {\n      const filterValues = this.getFilterValuesFunc(index);\n\n      if (filterValues.length > 0) {\n        return this.getValuesForFilterKey(filterValues);\n      }\n    }\n\n    return [];\n  }\n\n  getValuesForFilterKey(labels: any[]) {\n    const filterValues = labels.map(l => {\n      return this.uiSegmentSrv.newSegment({\n        value: `${l}`,\n        expandable: false,\n      });\n    });\n\n    return filterValues;\n  }\n\n  addNewFilterSegments(segment: Segment, index: number) {\n    if (index > 2) {\n      this.filterSegments.splice(index, 0, this.uiSegmentSrv.newCondition('AND'));\n    }\n    segment.type = 'key';\n    this.filterSegments.push(this.uiSegmentSrv.newOperator('='));\n    this.filterSegments.push(this.uiSegmentSrv.newFake(DefaultFilterValue, 'value', 'query-segment-value'));\n  }\n\n  removeFilterSegment(index: number) {\n    this.filterSegments.splice(index, 3);\n    // remove trailing condition\n    if (index > 2 && this.filterSegments[index - 1].type === 'condition') {\n      this.filterSegments.splice(index - 1, 1);\n    }\n\n    // remove condition if it is first segment\n    if (index === 0 && this.filterSegments.length > 0 && this.filterSegments[0].type === 'condition') {\n      this.filterSegments.splice(0, 1);\n    }\n  }\n\n  ensurePlusButton(segments: Segment[]) {\n    const count = segments.length;\n    const lastSegment = segments[Math.max(count - 1, 0)];\n\n    if (!lastSegment || lastSegment.type !== 'plus-button') {\n      segments.push(this.uiSegmentSrv.newPlusButton());\n    }\n  }\n\n  filterSegmentUpdated(segment: Segment, index: number) {\n    if (segment.type === 'plus-button') {\n      this.addNewFilterSegments(segment, index);\n    } else if (segment.type === 'key' && segment.value === DefaultRemoveFilterValue) {\n      this.removeFilterSegment(index);\n      this.ensurePlusButton(this.filterSegments);\n    } else if (segment.type === 'value' && segment.value !== DefaultFilterValue) {\n      this.ensurePlusButton(this.filterSegments);\n    }\n\n    return this.filterSegments.filter(s => s.type !== 'plus-button').map(seg => seg.value);\n  }\n}\n","import coreModule from 'app/core/core_module';\nimport _ from 'lodash';\nimport { FilterSegments, DefaultFilterValue } from './filter_segments';\nimport { TemplateSrv } from 'app/features/templating/template_srv';\nimport { Segment } from './types';\n\nexport class StackdriverFilterCtrl {\n  defaultRemoveGroupByValue = '-- remove group by --';\n  resourceTypeValue = 'resource.type';\n  groupBySegments: any[];\n  filterSegments: FilterSegments;\n  removeSegment: any;\n  filters: string[];\n  groupBys: string[];\n  hideGroupBys: boolean;\n  labelData: any;\n  loading: Promise<any>;\n  filtersChanged: (filters: any) => void;\n  groupBysChanged: (groupBys: any) => void;\n\n  /** @ngInject */\n  constructor(private $scope: any, private uiSegmentSrv: any, private templateSrv: TemplateSrv) {\n    this.$scope.ctrl = this;\n    this.initSegments(this.hideGroupBys);\n  }\n\n  initSegments(hideGroupBys: boolean) {\n    if (!hideGroupBys) {\n      this.groupBySegments = this.groupBys.map(groupBy => {\n        return this.uiSegmentSrv.getSegmentForValue(groupBy);\n      });\n      this.ensurePlusButton(this.groupBySegments);\n    }\n\n    this.removeSegment = this.uiSegmentSrv.newSegment({ fake: true, value: '-- remove group by --' });\n\n    this.filterSegments = new FilterSegments(\n      this.uiSegmentSrv,\n      this.filters,\n      this.getFilterKeys.bind(this),\n      this.getFilterValues.bind(this)\n    );\n    this.filterSegments.buildSegmentModel();\n  }\n\n  async createLabelKeyElements() {\n    await this.loading;\n\n    let elements = Object.keys(this.labelData.metricLabels || {}).map(l => {\n      return this.uiSegmentSrv.newSegment({\n        value: `metric.label.${l}`,\n        expandable: false,\n      });\n    });\n\n    elements = [\n      ...elements,\n      ...Object.keys(this.labelData.resourceLabels || {}).map(l => {\n        return this.uiSegmentSrv.newSegment({\n          value: `resource.label.${l}`,\n          expandable: false,\n        });\n      }),\n    ];\n\n    if (this.labelData.resourceTypes && this.labelData.resourceTypes.length > 0) {\n      elements = [\n        ...elements,\n        this.uiSegmentSrv.newSegment({\n          value: this.resourceTypeValue,\n          expandable: false,\n        }),\n      ];\n    }\n\n    return elements;\n  }\n\n  async getFilterKeys(segment: { type: string }, removeText: string) {\n    let elements = await this.createLabelKeyElements();\n\n    if (this.filters.indexOf(this.resourceTypeValue) !== -1) {\n      elements = elements.filter(e => e.value !== this.resourceTypeValue);\n    }\n\n    const noValueOrPlusButton = !segment || segment.type === 'plus-button';\n    if (noValueOrPlusButton && elements.length === 0) {\n      return [];\n    }\n\n    return segment.type === 'plus-button'\n      ? elements\n      : [\n          ...elements,\n          this.uiSegmentSrv.newSegment({ fake: true, value: removeText || this.defaultRemoveGroupByValue }),\n        ];\n  }\n\n  async getGroupBys(segment: { type: any }) {\n    let elements = await this.createLabelKeyElements();\n    elements = elements.filter(e => this.groupBys.indexOf(e.value) === -1);\n    const noValueOrPlusButton = !segment || segment.type === 'plus-button';\n    if (noValueOrPlusButton && elements.length === 0) {\n      return [];\n    }\n\n    this.removeSegment.value = this.defaultRemoveGroupByValue;\n    return segment.type === 'plus-button' ? elements : [...elements, this.removeSegment];\n  }\n\n  groupByChanged(segment: any, index?: number) {\n    if (segment.value === this.removeSegment.value) {\n      this.groupBySegments.splice(index, 1);\n    } else {\n      segment.type = 'value';\n    }\n\n    const reducer = (memo: any[], seg: { fake: any; value: any }) => {\n      if (!seg.fake) {\n        memo.push(seg.value);\n      }\n      return memo;\n    };\n\n    const groupBys = this.groupBySegments.reduce(reducer, []);\n    this.groupBysChanged({ groupBys });\n    this.ensurePlusButton(this.groupBySegments);\n  }\n\n  async getFilters(segment: { type: string }, index: number) {\n    await this.loading;\n    const hasNoFilterKeys = this.labelData.metricLabels && Object.keys(this.labelData.metricLabels).length === 0;\n    return this.filterSegments.getFilters(segment, index, hasNoFilterKeys);\n  }\n\n  getFilterValues(index: number) {\n    const filterKey = this.templateSrv.replace(this.filterSegments.filterSegments[index - 2].value);\n    if (!filterKey || !this.labelData.metricLabels || Object.keys(this.labelData.metricLabels).length === 0) {\n      return [];\n    }\n\n    const shortKey = filterKey.substring(filterKey.indexOf('.label.') + 7);\n\n    if (filterKey.startsWith('metric.label.') && this.labelData.metricLabels.hasOwnProperty(shortKey)) {\n      return this.labelData.metricLabels[shortKey];\n    }\n\n    if (filterKey.startsWith('resource.label.') && this.labelData.resourceLabels.hasOwnProperty(shortKey)) {\n      return this.labelData.resourceLabels[shortKey];\n    }\n\n    if (filterKey === this.resourceTypeValue) {\n      return this.labelData.resourceTypes;\n    }\n\n    return [];\n  }\n\n  filterSegmentUpdated(segment: { value: string; type: string }, index: number) {\n    const filters = this.filterSegments.filterSegmentUpdated(segment, index);\n    if (!filters.some(f => f === DefaultFilterValue)) {\n      this.filtersChanged({ filters });\n    }\n  }\n\n  ensurePlusButton(segments: Segment[]) {\n    const count = segments.length;\n    const lastSegment = segments[Math.max(count - 1, 0)];\n\n    if (!lastSegment || lastSegment.type !== 'plus-button') {\n      segments.push(this.uiSegmentSrv.newPlusButton());\n    }\n  }\n}\n\n/** @ngInject */\nfunction stackdriverFilter() {\n  return {\n    templateUrl: 'public/app/plugins/datasource/stackdriver/partials/query.filter.html',\n    controller: StackdriverFilterCtrl,\n    controllerAs: 'ctrl',\n    bindToController: true,\n    restrict: 'E',\n    scope: {\n      labelData: '<',\n      loading: '<',\n      groupBys: '<',\n      filters: '<',\n      filtersChanged: '&',\n      groupBysChanged: '&',\n      hideGroupBys: '<',\n    },\n  };\n}\n\ncoreModule.directive('stackdriverFilter', stackdriverFilter);\n","import React from 'react';\nimport _ from 'lodash';\nimport appEvents from 'app/core/app_events';\n\nimport { QueryMeta } from '../types';\nimport { getAngularLoader, AngularComponent } from '@grafana/runtime';\nimport { TemplateSrv } from 'app/features/templating/template_srv';\nimport StackdriverDatasource from '../datasource';\nimport '../query_filter_ctrl';\n\nexport interface Props {\n  filtersChanged: (filters: string[]) => void;\n  groupBysChanged?: (groupBys: string[]) => void;\n  metricType: string;\n  templateSrv: TemplateSrv;\n  groupBys?: string[];\n  filters: string[];\n  datasource: StackdriverDatasource;\n  refId: string;\n  hideGroupBys: boolean;\n}\n\ninterface State {\n  labelData: QueryMeta;\n  loading: Promise<any>;\n}\n\nconst labelData: any = {\n  metricLabels: {},\n  resourceLabels: {},\n  resourceTypes: [],\n};\n\nexport class Filter extends React.Component<Props, State> {\n  element: any;\n  component: AngularComponent;\n\n  async componentDidMount() {\n    if (!this.element) {\n      return;\n    }\n\n    const { groupBys, filters, hideGroupBys } = this.props;\n    const loader = getAngularLoader();\n\n    const filtersChanged = (filters: string[]) => {\n      this.props.filtersChanged(filters);\n    };\n\n    const groupBysChanged = (groupBys: string[]) => {\n      this.props.groupBysChanged(groupBys);\n    };\n\n    const scopeProps: any = {\n      loading: null,\n      labelData,\n      groupBys,\n      filters,\n      filtersChanged,\n      groupBysChanged,\n      hideGroupBys,\n    };\n    const loading = this.loadLabels(scopeProps);\n    scopeProps.loading = loading;\n    const template = `<stackdriver-filter\n                        filters=\"filters\"\n                        group-bys=\"groupBys\"\n                        label-data=\"labelData\"\n                        loading=\"loading\"\n                        filters-changed=\"filtersChanged(filters)\"\n                        group-bys-changed=\"groupBysChanged(groupBys)\"\n                        hide-group-bys=\"hideGroupBys\"/>`;\n    this.component = loader.load(this.element, scopeProps, template);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!this.element) {\n      return;\n    }\n    const scope = this.component.getScope();\n    if (prevProps.metricType !== this.props.metricType) {\n      scope.loading = this.loadLabels(scope);\n    }\n    scope.filters = this.props.filters;\n    scope.groupBys = this.props.groupBys;\n  }\n\n  componentWillUnmount() {\n    if (this.component) {\n      this.component.destroy();\n    }\n  }\n\n  async loadLabels(scope: any) {\n    return new Promise(async resolve => {\n      try {\n        if (!this.props.metricType) {\n          scope.labelData = labelData;\n        } else {\n          const { meta } = await this.props.datasource.getLabels(this.props.metricType, this.props.refId);\n          scope.labelData = meta;\n        }\n        resolve();\n      } catch (error) {\n        appEvents.emit('alert-error', ['Error', 'Error loading metric labels for ' + this.props.metricType]);\n        scope.labelData = labelData;\n        resolve();\n      }\n    });\n  }\n\n  render() {\n    return <div ref={element => (this.element = element)} style={{ width: '100%' }} />;\n  }\n}\n","import React from 'react';\nimport _ from 'lodash';\n\nimport { MetricSelect } from 'app/core/components/Select/MetricSelect';\nimport { getAggregationOptionsByMetric } from '../functions';\nimport { TemplateSrv } from 'app/features/templating/template_srv';\nimport { ValueTypes, MetricKind } from '../constants';\n\nexport interface Props {\n  onChange: (metricDescriptor: any) => void;\n  templateSrv: TemplateSrv;\n  metricDescriptor: {\n    valueType: string;\n    metricKind: string;\n  };\n  crossSeriesReducer: string;\n  groupBys: string[];\n  children?: (renderProps: any) => JSX.Element;\n}\n\nexport interface State {\n  aggOptions: any[];\n  displayAdvancedOptions: boolean;\n}\n\nexport class Aggregations extends React.Component<Props, State> {\n  state: State = {\n    aggOptions: [],\n    displayAdvancedOptions: false,\n  };\n\n  componentDidMount() {\n    this.setAggOptions(this.props);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    this.setAggOptions(nextProps);\n  }\n\n  setAggOptions({ metricDescriptor }: Props) {\n    let aggOptions: any[] = [];\n    if (metricDescriptor) {\n      aggOptions = [\n        {\n          label: 'Aggregations',\n          expanded: true,\n          options: getAggregationOptionsByMetric(\n            metricDescriptor.valueType as ValueTypes,\n            metricDescriptor.metricKind as MetricKind\n          ).map(a => ({\n            ...a,\n            label: a.text,\n          })),\n        },\n      ];\n    }\n    this.setState({ aggOptions });\n  }\n\n  onToggleDisplayAdvanced = () => {\n    this.setState(state => ({\n      displayAdvancedOptions: !state.displayAdvancedOptions,\n    }));\n  };\n\n  render() {\n    const { displayAdvancedOptions, aggOptions } = this.state;\n    const { templateSrv, onChange, crossSeriesReducer } = this.props;\n\n    return (\n      <>\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <label className=\"gf-form-label query-keyword width-9\">Aggregation</label>\n            <MetricSelect\n              onChange={onChange}\n              value={crossSeriesReducer}\n              variables={templateSrv.variables}\n              options={aggOptions}\n              placeholder=\"Select Reducer\"\n              className=\"width-15\"\n            />\n          </div>\n          <div className=\"gf-form gf-form--grow\">\n            <label className=\"gf-form-label gf-form-label--grow\">\n              <a onClick={this.onToggleDisplayAdvanced}>\n                <>\n                  <i className={`fa fa-caret-${displayAdvancedOptions ? 'down' : 'right'}`} /> Advanced Options\n                </>\n              </a>\n            </label>\n          </div>\n        </div>\n        {this.props.children(this.state.displayAdvancedOptions)}\n      </>\n    );\n  }\n}\n","import React, { FC } from 'react';\n\nimport { MetricSelect } from 'app/core/components/Select/MetricSelect';\nimport { TemplateSrv } from 'app/features/templating/template_srv';\nimport { SelectableValue } from '@grafana/data';\n\nexport interface Props {\n  onChange: (perSeriesAligner: any) => void;\n  templateSrv: TemplateSrv;\n  alignOptions: Array<SelectableValue<string>>;\n  perSeriesAligner: string;\n}\n\nexport const Alignments: FC<Props> = ({ perSeriesAligner, templateSrv, onChange, alignOptions }) => {\n  return (\n    <>\n      <div className=\"gf-form-group\">\n        <div className=\"gf-form offset-width-9\">\n          <label className=\"gf-form-label query-keyword width-15\">Aligner</label>\n          <MetricSelect\n            onChange={onChange}\n            value={perSeriesAligner}\n            variables={templateSrv.variables}\n            options={alignOptions}\n            placeholder=\"Select Alignment\"\n            className=\"width-15\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport _ from 'lodash';\n\nimport kbn from 'app/core/utils/kbn';\nimport { MetricSelect } from 'app/core/components/Select/MetricSelect';\nimport { alignmentPeriods, alignOptions } from '../constants';\nimport { TemplateSrv } from 'app/features/templating/template_srv';\n\nexport interface Props {\n  onChange: (alignmentPeriod: any) => void;\n  templateSrv: TemplateSrv;\n  alignmentPeriod: string;\n  perSeriesAligner: string;\n  usedAlignmentPeriod: string;\n}\n\nexport const AlignmentPeriods: FC<Props> = ({\n  alignmentPeriod,\n  templateSrv,\n  onChange,\n  perSeriesAligner,\n  usedAlignmentPeriod,\n}) => {\n  const alignment = alignOptions.find(ap => ap.value === templateSrv.replace(perSeriesAligner));\n  const formatAlignmentText = `${kbn.secondsToHms(usedAlignmentPeriod)} interval (${alignment ? alignment.text : ''})`;\n\n  return (\n    <>\n      <div className=\"gf-form-inline\">\n        <div className=\"gf-form\">\n          <label className=\"gf-form-label query-keyword width-9\">Alignment Period</label>\n          <MetricSelect\n            onChange={onChange}\n            value={alignmentPeriod}\n            variables={templateSrv.variables}\n            options={[\n              {\n                label: 'Alignment options',\n                expanded: true,\n                options: alignmentPeriods.map(ap => ({\n                  ...ap,\n                  label: ap.text,\n                })),\n              },\n            ]}\n            placeholder=\"Select Alignment\"\n            className=\"width-15\"\n          />\n        </div>\n        <div className=\"gf-form gf-form--grow\">\n          {usedAlignmentPeriod && <label className=\"gf-form-label gf-form-label--grow\">{formatAlignmentText}</label>}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { Component } from 'react';\nimport { debounce } from 'lodash';\nimport { Input } from '@grafana/ui';\n\nexport interface Props {\n  onChange: (alignmentPeriod: any) => void;\n  value: string;\n}\n\nexport interface State {\n  value: string;\n}\n\nexport class AliasBy extends Component<Props, State> {\n  propagateOnChange: (value: any) => void;\n\n  constructor(props: Props) {\n    super(props);\n    this.propagateOnChange = debounce(this.props.onChange, 500);\n    this.state = { value: '' };\n  }\n\n  componentDidMount() {\n    this.setState({ value: this.props.value });\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.value !== this.props.value) {\n      this.setState({ value: nextProps.value });\n    }\n  }\n\n  onChange = (e: any) => {\n    this.setState({ value: e.target.value });\n    this.propagateOnChange(e.target.value);\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <label className=\"gf-form-label query-keyword width-9\">Alias By</label>\n            <Input type=\"text\" className=\"gf-form-input width-24\" value={this.state.value} onChange={this.onChange} />\n          </div>\n          <div className=\"gf-form gf-form--grow\">\n            <div className=\"gf-form-label gf-form-label--grow\" />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Input } from '@grafana/ui';\nimport StackdriverDatasource from '../datasource';\n\nexport interface Props {\n  datasource: StackdriverDatasource;\n}\n\ninterface State {\n  projectName: string;\n}\n\nexport class Project extends React.Component<Props, State> {\n  state: State = {\n    projectName: 'Loading project...',\n  };\n\n  async componentDidMount() {\n    const projectName = await this.props.datasource.getDefaultProject();\n    this.setState({ projectName });\n  }\n\n  render() {\n    const { projectName } = this.state;\n    return (\n      <div className=\"gf-form\">\n        <span className=\"gf-form-label width-9 query-keyword\">Project</span>\n        <Input className=\"gf-form-input width-15\" disabled type=\"text\" value={projectName} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Project } from './Project';\nimport StackdriverDatasource from '../datasource';\nimport { MetricDescriptor } from '../types';\n\nexport interface Props {\n  datasource: StackdriverDatasource;\n  rawQuery: string;\n  lastQueryError: string;\n  metricDescriptor?: MetricDescriptor;\n}\n\ninterface State {\n  displayHelp: boolean;\n  displaRawQuery: boolean;\n}\n\nexport class Help extends React.Component<Props, State> {\n  state: State = {\n    displayHelp: false,\n    displaRawQuery: false,\n  };\n\n  onHelpClicked = () => {\n    this.setState({ displayHelp: !this.state.displayHelp });\n  };\n\n  onRawQueryClicked = () => {\n    this.setState({ displaRawQuery: !this.state.displaRawQuery });\n  };\n\n  shouldComponentUpdate(nextProps: Props) {\n    return nextProps.metricDescriptor !== null;\n  }\n\n  render() {\n    const { displayHelp, displaRawQuery } = this.state;\n    const { datasource, rawQuery, lastQueryError } = this.props;\n\n    return (\n      <>\n        <div className=\"gf-form-inline\">\n          <Project datasource={datasource} />\n          <div className=\"gf-form\" onClick={this.onHelpClicked}>\n            <label className=\"gf-form-label query-keyword pointer\">\n              Show Help <i className={`fa fa-caret-${displayHelp ? 'down' : 'right'}`} />\n            </label>\n          </div>\n\n          {rawQuery && (\n            <div className=\"gf-form\" onClick={this.onRawQueryClicked}>\n              <label className=\"gf-form-label query-keyword\">\n                Raw Query <i className={`fa fa-caret-${displaRawQuery ? 'down' : 'right'}`} ng-show=\"ctrl.showHelp\" />\n              </label>\n            </div>\n          )}\n\n          <div className=\"gf-form gf-form--grow\">\n            <div className=\"gf-form-label gf-form-label--grow\" />\n          </div>\n        </div>\n        {rawQuery && displaRawQuery && (\n          <div className=\"gf-form\">\n            <pre className=\"gf-form-pre\">{rawQuery}</pre>\n          </div>\n        )}\n\n        {displayHelp && (\n          <div className=\"gf-form grafana-info-box\" style={{ padding: 0 }}>\n            <pre className=\"gf-form-pre alert alert-info\" style={{ marginRight: 0 }}>\n              <h5>Alias Patterns</h5>Format the legend keys any way you want by using alias patterns. Format the legend\n              keys any way you want by using alias patterns.\n              <br /> <br />\n              Example:\n              <code>{`${'{{metricDescriptor.name}} - {{metricDescriptor.label.instance_name}}'}`}</code>\n              <br />\n              Result: &nbsp;&nbsp;<code>cpu/usage_time - server1-europe-west-1</code>\n              <br />\n              <br />\n              <strong>Patterns</strong>\n              <br />\n              <ul>\n                <li>\n                  <code>{`${'{{metricDescriptor.type}}'}`}</code> = metric type e.g.\n                  compute.googleapis.com/instance/cpu/usage_time\n                </li>\n                <li>\n                  <code>{`${'{{metricDescriptor.name}}'}`}</code> = name part of metric e.g. instance/cpu/usage_time\n                </li>\n                <li>\n                  <code>{`${'{{metricDescriptor.service}}'}`}</code> = service part of metric e.g. compute\n                </li>\n                <li>\n                  <code>{`${'{{metricDescriptor.label.label_name}}'}`}</code> = Metric label metadata e.g.\n                  metricDescriptor.label.instance_name\n                </li>\n                <li>\n                  <code>{`${'{{resource.label.label_name}}'}`}</code> = Resource label metadata e.g. resource.label.zone\n                </li>\n                <li>\n                  <code>{`${'{{bucket}}'}`}</code> = bucket boundary for distribution metrics when using a heatmap in\n                  Grafana\n                </li>\n              </ul>\n            </pre>\n          </div>\n        )}\n\n        {lastQueryError && (\n          <div className=\"gf-form\">\n            <pre className=\"gf-form-pre alert alert-error\">{lastQueryError}</pre>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport _ from 'lodash';\n\nimport { TemplateSrv } from 'app/features/templating/template_srv';\n\nimport { Metrics } from './Metrics';\nimport { Filter } from './Filter';\nimport { Aggregations } from './Aggregations';\nimport { Alignments } from './Alignments';\nimport { AlignmentPeriods } from './AlignmentPeriods';\nimport { AliasBy } from './AliasBy';\nimport { Help } from './Help';\nimport { StackdriverQuery, MetricDescriptor } from '../types';\nimport { getAlignmentPickerData } from '../functions';\nimport StackdriverDatasource from '../datasource';\nimport { TimeSeries, SelectableValue } from '@grafana/data';\n\nexport interface Props {\n  onQueryChange: (target: StackdriverQuery) => void;\n  onExecuteQuery: () => void;\n  target: StackdriverQuery;\n  events: any;\n  datasource: StackdriverDatasource;\n  templateSrv: TemplateSrv;\n}\n\ninterface State extends StackdriverQuery {\n  alignOptions: Array<SelectableValue<string>>;\n  lastQuery: string;\n  lastQueryError: string;\n  [key: string]: any;\n}\n\nexport const DefaultTarget: State = {\n  defaultProject: 'loading project...',\n  metricType: '',\n  metricKind: '',\n  valueType: '',\n  refId: '',\n  service: '',\n  unit: '',\n  crossSeriesReducer: 'REDUCE_MEAN',\n  alignmentPeriod: 'stackdriver-auto',\n  perSeriesAligner: 'ALIGN_MEAN',\n  groupBys: [],\n  filters: [],\n  aliasBy: '',\n  alignOptions: [],\n  lastQuery: '',\n  lastQueryError: '',\n  usedAlignmentPeriod: '',\n};\n\nexport class QueryEditor extends React.Component<Props, State> {\n  state: State = DefaultTarget;\n\n  componentDidMount() {\n    const { events, target, templateSrv } = this.props;\n    events.on('data-received', this.onDataReceived.bind(this));\n    events.on('data-error', this.onDataError.bind(this));\n    const { perSeriesAligner, alignOptions } = getAlignmentPickerData(target, templateSrv);\n    this.setState({\n      ...this.props.target,\n      alignOptions,\n      perSeriesAligner,\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.events.off('data-received', this.onDataReceived);\n    this.props.events.off('data-error', this.onDataError);\n  }\n\n  onDataReceived(dataList: TimeSeries[]) {\n    const series = dataList.find((item: any) => item.refId === this.props.target.refId);\n    if (series) {\n      this.setState({\n        lastQuery: decodeURIComponent(series.meta.rawQuery),\n        lastQueryError: '',\n        usedAlignmentPeriod: series.meta.alignmentPeriod,\n      });\n    }\n  }\n\n  onDataError(err: any) {\n    let lastQuery;\n    let lastQueryError;\n    if (err.data && err.data.error) {\n      lastQueryError = this.props.datasource.formatStackdriverError(err);\n    } else if (err.data && err.data.results) {\n      const queryRes = err.data.results[this.props.target.refId];\n      lastQuery = decodeURIComponent(queryRes.meta.rawQuery);\n      if (queryRes && queryRes.error) {\n        try {\n          lastQueryError = JSON.parse(queryRes.error).error.message;\n        } catch {\n          lastQueryError = queryRes.error;\n        }\n      }\n    }\n    this.setState({ lastQuery, lastQueryError });\n  }\n\n  onMetricTypeChange = ({ valueType, metricKind, type, unit }: MetricDescriptor) => {\n    const { templateSrv, onQueryChange, onExecuteQuery } = this.props;\n    const { perSeriesAligner, alignOptions } = getAlignmentPickerData(\n      { valueType, metricKind, perSeriesAligner: this.state.perSeriesAligner },\n      templateSrv\n    );\n    this.setState(\n      {\n        alignOptions,\n        perSeriesAligner,\n        metricType: type,\n        unit,\n        valueType,\n        metricKind,\n      },\n      () => {\n        onQueryChange(this.state);\n        onExecuteQuery();\n      }\n    );\n  };\n\n  onPropertyChange(prop: string, value: string[]) {\n    this.setState({ [prop]: value }, () => {\n      this.props.onQueryChange(this.state);\n      this.props.onExecuteQuery();\n    });\n  }\n\n  render() {\n    const {\n      usedAlignmentPeriod,\n      defaultProject,\n      metricType,\n      crossSeriesReducer,\n      groupBys,\n      filters,\n      perSeriesAligner,\n      alignOptions,\n      alignmentPeriod,\n      aliasBy,\n      lastQuery,\n      lastQueryError,\n      refId,\n    } = this.state;\n    const { datasource, templateSrv } = this.props;\n\n    return (\n      <>\n        <Metrics\n          defaultProject={defaultProject}\n          metricType={metricType}\n          templateSrv={templateSrv}\n          datasource={datasource}\n          onChange={this.onMetricTypeChange}\n        >\n          {metric => (\n            <>\n              <Filter\n                filtersChanged={value => this.onPropertyChange('filters', value)}\n                groupBysChanged={value => this.onPropertyChange('groupBys', value)}\n                filters={filters}\n                groupBys={groupBys}\n                refId={refId}\n                hideGroupBys={false}\n                templateSrv={templateSrv}\n                datasource={datasource}\n                metricType={metric ? metric.type : ''}\n              />\n              <Aggregations\n                metricDescriptor={metric}\n                templateSrv={templateSrv}\n                crossSeriesReducer={crossSeriesReducer}\n                groupBys={groupBys}\n                onChange={value => this.onPropertyChange('crossSeriesReducer', value)}\n              >\n                {displayAdvancedOptions =>\n                  displayAdvancedOptions && (\n                    <Alignments\n                      alignOptions={alignOptions}\n                      templateSrv={templateSrv}\n                      perSeriesAligner={perSeriesAligner}\n                      onChange={value => this.onPropertyChange('perSeriesAligner', value)}\n                    />\n                  )\n                }\n              </Aggregations>\n              <AlignmentPeriods\n                templateSrv={templateSrv}\n                alignmentPeriod={alignmentPeriod}\n                perSeriesAligner={perSeriesAligner}\n                usedAlignmentPeriod={usedAlignmentPeriod}\n                onChange={value => this.onPropertyChange('alignmentPeriod', value)}\n              />\n              <AliasBy value={aliasBy} onChange={value => this.onPropertyChange('aliasBy', value)} />\n              <Help datasource={datasource} rawQuery={lastQuery} lastQueryError={lastQueryError} />\n            </>\n          )}\n        </Metrics>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Input } from '@grafana/ui';\n\nimport { TemplateSrv } from 'app/features/templating/template_srv';\n\nimport StackdriverDatasource from '../datasource';\nimport { Metrics } from './Metrics';\nimport { Filter } from './Filter';\nimport { AnnotationTarget, MetricDescriptor } from '../types';\nimport { AnnotationsHelp } from './AnnotationsHelp';\n\nexport interface Props {\n  onQueryChange: (target: AnnotationTarget) => void;\n  target: AnnotationTarget;\n  datasource: StackdriverDatasource;\n  templateSrv: TemplateSrv;\n}\n\ninterface State extends AnnotationTarget {\n  [key: string]: any;\n}\n\nconst DefaultTarget: State = {\n  defaultProject: 'loading project...',\n  metricType: '',\n  filters: [],\n  metricKind: '',\n  valueType: '',\n  refId: 'annotationQuery',\n  title: '',\n  text: '',\n};\n\nexport class AnnotationQueryEditor extends React.Component<Props, State> {\n  state: State = DefaultTarget;\n\n  componentDidMount() {\n    this.setState({\n      ...this.props.target,\n    });\n  }\n\n  onMetricTypeChange = ({ valueType, metricKind, type, unit }: MetricDescriptor) => {\n    const { onQueryChange } = this.props;\n    this.setState(\n      {\n        metricType: type,\n        unit,\n        valueType,\n        metricKind,\n      },\n      () => {\n        onQueryChange(this.state);\n      }\n    );\n  };\n\n  onChange(prop: string, value: string | string[]) {\n    this.setState({ [prop]: value }, () => {\n      this.props.onQueryChange(this.state);\n    });\n  }\n\n  render() {\n    const { defaultProject, metricType, filters, refId, title, text } = this.state;\n    const { datasource, templateSrv } = this.props;\n\n    return (\n      <>\n        <Metrics\n          defaultProject={defaultProject}\n          metricType={metricType}\n          templateSrv={templateSrv}\n          datasource={datasource}\n          onChange={this.onMetricTypeChange}\n        >\n          {metric => (\n            <>\n              <Filter\n                filtersChanged={value => this.onChange('filters', value)}\n                filters={filters}\n                refId={refId}\n                hideGroupBys={true}\n                templateSrv={templateSrv}\n                datasource={datasource}\n                metricType={metric ? metric.type : ''}\n              />\n            </>\n          )}\n        </Metrics>\n        <div className=\"gf-form gf-form-inline\">\n          <div className=\"gf-form\">\n            <span className=\"gf-form-label query-keyword width-9\">Title</span>\n            <Input\n              type=\"text\"\n              className=\"gf-form-input width-20\"\n              value={title}\n              onChange={e => this.onChange('title', e.target.value)}\n            />\n          </div>\n          <div className=\"gf-form\">\n            <span className=\"gf-form-label query-keyword width-9\">Text</span>\n            <Input\n              type=\"text\"\n              className=\"gf-form-input width-20\"\n              value={text}\n              onChange={e => this.onChange('text', e.target.value)}\n            />\n          </div>\n          <div className=\"gf-form gf-form--grow\">\n            <div className=\"gf-form-label gf-form-label--grow\" />\n          </div>\n        </div>\n\n        <AnnotationsHelp />\n      </>\n    );\n  }\n}\n","import React, { FC } from 'react';\n\nexport const AnnotationsHelp: FC = () => {\n  return (\n    <div className=\"gf-form grafana-info-box\" style={{ padding: 0 }}>\n      <pre className=\"gf-form-pre alert alert-info\" style={{ marginRight: 0 }}>\n        <h5>Annotation Query Format</h5>\n        <p>\n          An annotation is an event that is overlaid on top of graphs. Annotation rendering is expensive so it is\n          important to limit the number of rows returned.{' '}\n        </p>\n        <p>\n          The Title and Text fields support templating and can use data returned from the query. For example, the Title\n          field could have the following text:\n        </p>\n        <code>\n          {`${'{{metric.type}}'}`} has value: {`${'{{metric.value}}'}`}\n        </code>\n        <p>\n          Example Result: <code>monitoring.googleapis.com/uptime_check/http_status has this value: 502</code>\n        </p>\n        <label>Patterns:</label>\n        <p>\n          <code>{`${'{{metric.value}}'}`}</code> = value of the metric/point\n        </p>\n        <p>\n          <code>{`${'{{metric.type}}'}`}</code> = metric type e.g. compute.googleapis.com/instance/cpu/usage_time\n        </p>\n        <p>\n          <code>{`${'{{metric.name}}'}`}</code> = name part of metric e.g. instance/cpu/usage_time\n        </p>\n        <p>\n          <code>{`${'{{metric.service}}'}`}</code> = service part of metric e.g. compute\n        </p>\n        <p>\n          <code>{`${'{{metric.label.label_name}}'}`}</code> = Metric label metadata e.g. metric.label.instance_name\n        </p>\n        <p>\n          <code>{`${'{{resource.label.label_name}}'}`}</code> = Resource label metadata e.g. resource.label.zone\n        </p>\n      </pre>\n    </div>\n  );\n};\n","// Libraries\nimport React from 'react';\n// @ts-ignore\nimport { components } from '@torkelo/react-select';\n// @ts-ignore\nimport AsyncSelect from '@torkelo/react-select/lib/Async';\n\n// Components\nimport { TagOption } from './TagOption';\nimport { TagBadge } from './TagBadge';\nimport { NoOptionsMessage, IndicatorsContainer, resetSelectStyles } from '@grafana/ui';\nimport { escapeStringForRegex } from '../FilterInput/FilterInput';\n\nexport interface TermCount {\n  term: string;\n  count: number;\n}\n\nexport interface Props {\n  tags: string[];\n  tagOptions: () => Promise<TermCount[]>;\n  onChange: (tags: string[]) => void;\n}\n\nexport class TagFilter extends React.Component<Props, any> {\n  inlineTags: boolean;\n\n  constructor(props: Props) {\n    super(props);\n  }\n\n  onLoadOptions = (query: string) => {\n    return this.props.tagOptions().then(options => {\n      return options.map(option => ({\n        value: option.term,\n        label: option.term,\n        count: option.count,\n      }));\n    });\n  };\n\n  onChange = (newTags: any[]) => {\n    this.props.onChange(newTags.map(tag => tag.value));\n  };\n\n  render() {\n    const tags = this.props.tags.map(tag => ({ value: tag, label: tag, count: 0 }));\n\n    const selectOptions = {\n      classNamePrefix: 'gf-form-select-box',\n      isMulti: true,\n      defaultOptions: true,\n      loadOptions: this.onLoadOptions,\n      onChange: this.onChange,\n      className: 'gf-form-input gf-form-input--form-dropdown',\n      placeholder: 'Tags',\n      loadingMessage: () => 'Loading...',\n      noOptionsMessage: () => 'No tags found',\n      getOptionValue: (i: any) => i.value,\n      getOptionLabel: (i: any) => i.label,\n      value: tags,\n      styles: resetSelectStyles(),\n      filterOption: (option: any, searchQuery: string) => {\n        const regex = RegExp(escapeStringForRegex(searchQuery), 'i');\n        return regex.test(option.value);\n      },\n      components: {\n        Option: TagOption,\n        IndicatorsContainer,\n        NoOptionsMessage,\n        MultiValueLabel: (): any => {\n          return null; // We want the whole tag to be clickable so we use MultiValueRemove instead\n        },\n        MultiValueRemove: (props: any) => {\n          const { data } = props;\n\n          return (\n            <components.MultiValueRemove {...props}>\n              <TagBadge key={data.label} label={data.label} removeIcon={true} count={data.count} />\n            </components.MultiValueRemove>\n          );\n        },\n      },\n    };\n\n    return (\n      <div className=\"gf-form gf-form--has-input-icon gf-form--grow\">\n        <div className=\"tag-filter\">\n          <AsyncSelect {...selectOptions} />\n        </div>\n        <i className=\"gf-form-input-icon fa fa-tag\" />\n      </div>\n    );\n  }\n}\n","// Libraries\nimport React from 'react';\n// @ts-ignore\nimport { components } from '@torkelo/react-select';\nimport { OptionProps } from 'react-select/lib/components/Option';\nimport { TagBadge } from './TagBadge';\n\n// https://github.com/JedWatson/react-select/issues/3038\ninterface ExtendedOptionProps extends OptionProps<any> {\n  data: any;\n}\n\nexport const TagOption = (props: ExtendedOptionProps) => {\n  const { data, className, label } = props;\n  return (\n    <components.Option {...props}>\n      <div className={`tag-filter-option btn btn-link ${className || ''}`}>\n        <TagBadge label={label} removeIcon={false} count={data.count} />\n      </div>\n    </components.Option>\n  );\n};\n\nexport default TagOption;\n","import React, { FC } from 'react';\n\nexport interface Props {\n  child: any;\n}\n\nconst DropDownChild: FC<Props> = props => {\n  const { child } = props;\n  const listItemClassName = child.divider ? 'divider' : '';\n\n  return (\n    <li className={listItemClassName}>\n      <a href={child.url}>\n        {child.icon && <i className={child.icon} />}\n        {child.text}\n      </a>\n    </li>\n  );\n};\n\nexport default DropDownChild;\n","import React, { FC } from 'react';\nimport DropDownChild from './DropDownChild';\nimport { NavModelItem } from '@grafana/data';\n\ninterface Props {\n  link: NavModelItem;\n}\n\nconst SideMenuDropDown: FC<Props> = props => {\n  const { link } = props;\n  return (\n    <ul className=\"dropdown-menu dropdown-menu--sidemenu\" role=\"menu\">\n      <li className=\"side-menu-header\">\n        <a className=\"side-menu-header-link\" href={link.url}>\n          <span className=\"sidemenu-item-text\">{link.text}</span>\n        </a>\n      </li>\n      {link.children &&\n        link.children.map((child, index) => {\n          return <DropDownChild child={child} key={`${child.url}-${index}`} />;\n        })}\n    </ul>\n  );\n};\n\nexport default SideMenuDropDown;\n","import React, { FC } from 'react';\nimport SideMenuDropDown from './SideMenuDropDown';\n\nexport interface Props {\n  link: any;\n}\n\nconst TopSectionItem: FC<Props> = props => {\n  const { link } = props;\n  return (\n    <div className=\"sidemenu-item dropdown\">\n      <a className=\"sidemenu-link\" href={link.url} target={link.target}>\n        <span className=\"icon-circle sidemenu-icon\">\n          <i className={link.icon} />\n          {link.img && <img src={link.img} />}\n        </span>\n      </a>\n      <SideMenuDropDown link={link} />\n    </div>\n  );\n};\n\nexport default TopSectionItem;\n","import React, { FC } from 'react';\nimport _ from 'lodash';\nimport TopSectionItem from './TopSectionItem';\nimport config from '../../config';\n\nconst TopSection: FC<any> = () => {\n  const navTree = _.cloneDeep(config.bootData.navTree);\n  const mainLinks = _.filter(navTree, item => !item.hideFromMenu);\n\n  return (\n    <div className=\"sidemenu__top\">\n      {mainLinks.map((link, index) => {\n        return <TopSectionItem link={link} key={`${link.id}-${index}`} />;\n      })}\n    </div>\n  );\n};\n\nexport default TopSection;\n","import React, { FC } from 'react';\nimport { connectWithStore } from 'app/core/utils/connectWithReduxStore';\nimport { StoreState } from 'app/types';\n\nexport const SignIn: FC<any> = ({ url }) => {\n  const loginUrl = `login?redirect=${encodeURIComponent(url)}`;\n  return (\n    <div className=\"sidemenu-item\">\n      <a href={loginUrl} className=\"sidemenu-link\" target=\"_self\">\n        <span className=\"icon-circle sidemenu-icon\">\n          <i className=\"fa fa-fw fa-sign-in\" />\n        </span>\n      </a>\n      <a href={loginUrl} target=\"_self\">\n        <ul className=\"dropdown-menu dropdown-menu--sidemenu\" role=\"menu\">\n          <li className=\"side-menu-header\">\n            <span className=\"sidemenu-item-text\">Sign In</span>\n          </li>\n        </ul>\n      </a>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: StoreState) => ({\n  url: state.location.url,\n});\n\nexport default connectWithStore(SignIn, mapStateToProps);\n","import React, { PureComponent } from 'react';\nimport appEvents from '../../app_events';\nimport { User } from '../../services/context_srv';\nimport { NavModelItem } from '@grafana/data';\n\nexport interface Props {\n  link: NavModelItem;\n  user: User;\n}\n\nclass BottomNavLinks extends PureComponent<Props> {\n  itemClicked = (event: React.SyntheticEvent, child: NavModelItem) => {\n    if (child.url === '/shortcuts') {\n      event.preventDefault();\n      appEvents.emit('show-modal', {\n        templateHtml: '<help-modal></help-modal>',\n      });\n    }\n  };\n\n  switchOrg = () => {\n    appEvents.emit('show-modal', {\n      templateHtml: '<org-switcher dismiss=\"dismiss()\"></org-switcher>',\n    });\n  };\n\n  render() {\n    const { link, user } = this.props;\n    return (\n      <div className=\"sidemenu-item dropdown dropup\">\n        <a href={link.url} className=\"sidemenu-link\" target={link.target}>\n          <span className=\"icon-circle sidemenu-icon\">\n            {link.icon && <i className={link.icon} />}\n            {link.img && <img src={link.img} />}\n          </span>\n        </a>\n        <ul className=\"dropdown-menu dropdown-menu--sidemenu\" role=\"menu\">\n          {link.subTitle && (\n            <li className=\"sidemenu-subtitle\">\n              <span className=\"sidemenu-item-text\">{link.subTitle}</span>\n            </li>\n          )}\n          {link.showOrgSwitcher && (\n            <li className=\"sidemenu-org-switcher\">\n              <a onClick={this.switchOrg}>\n                <div>\n                  <div className=\"sidemenu-org-switcher__org-name\">{user.orgName}</div>\n                  <div className=\"sidemenu-org-switcher__org-current\">Current Org:</div>\n                </div>\n                <div className=\"sidemenu-org-switcher__switch\">\n                  <i className=\"fa fa-fw fa-random\" />\n                  Switch\n                </div>\n              </a>\n            </li>\n          )}\n          {link.children &&\n            link.children.map((child, index) => {\n              if (!child.hideFromMenu) {\n                return (\n                  <li key={`${child.text}-${index}`}>\n                    <a href={child.url} target={child.target} onClick={event => this.itemClicked(event, child)}>\n                      {child.icon && <i className={child.icon} />}\n                      {child.text}\n                    </a>\n                  </li>\n                );\n              }\n              return null;\n            })}\n          <li className=\"side-menu-header\">\n            <span className=\"sidemenu-item-text\">{link.text}</span>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default BottomNavLinks;\n","import React from 'react';\nimport _ from 'lodash';\nimport SignIn from './SignIn';\nimport BottomNavLinks from './BottomNavLinks';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport config from '../../config';\nimport { NavModelItem } from '@grafana/data';\n\nexport default function BottomSection() {\n  const navTree: NavModelItem[] = _.cloneDeep(config.bootData.navTree);\n  const bottomNav: NavModelItem[] = _.filter(navTree, item => item.hideFromMenu);\n  const isSignedIn = contextSrv.isSignedIn;\n  const user = contextSrv.user;\n\n  if (user && user.orgCount > 1) {\n    const profileNode: any = _.find(bottomNav, { id: 'profile' });\n    if (profileNode) {\n      profileNode.showOrgSwitcher = true;\n    }\n  }\n\n  return (\n    <div className=\"sidemenu__bottom\">\n      {!isSignedIn && <SignIn />}\n      {bottomNav.map((link, index) => {\n        return <BottomNavLinks link={link} user={user} key={`${link.url}-${index}`} />;\n      })}\n    </div>\n  );\n}\n","import React, { PureComponent } from 'react';\nimport appEvents from '../../app_events';\nimport TopSection from './TopSection';\nimport BottomSection from './BottomSection';\nimport config from 'app/core/config';\n\nconst homeUrl = config.appSubUrl || '/';\n\nexport class SideMenu extends PureComponent {\n  toggleSideMenuSmallBreakpoint = () => {\n    appEvents.emit('toggle-sidemenu-mobile');\n  };\n\n  render() {\n    return [\n      <a href={homeUrl} className=\"sidemenu__logo\" key=\"logo\">\n        <img src=\"public/img/grafana_icon.svg\" alt=\"Grafana\" />\n      </a>,\n      <div className=\"sidemenu__logo_small_breakpoint\" onClick={this.toggleSideMenuSmallBreakpoint} key=\"hamburger\">\n        <i className=\"fa fa-bars\" />\n        <span className=\"sidemenu__close\">\n          <i className=\"fa fa-times\" />\n          &nbsp;Close\n        </span>\n      </div>,\n      <TopSection key=\"topsection\" />,\n      <BottomSection key=\"bottomsection\" />,\n    ];\n  }\n}\n","import React, { PureComponent, ChangeEvent, MouseEvent } from 'react';\nimport { Button, FormLabel, Input, Tooltip } from '@grafana/ui';\nimport { User } from 'app/types';\nimport config from 'app/core/config';\nimport { ProfileUpdateFields } from 'app/core/utils/UserProvider';\n\nexport interface Props {\n  user: User;\n  isSavingUser: boolean;\n  updateProfile: (payload: ProfileUpdateFields) => void;\n}\n\nexport interface State {\n  name: string;\n  email: string;\n  login: string;\n}\n\nexport class UserProfileEditForm extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const {\n      user: { name, email, login },\n    } = this.props;\n\n    this.state = {\n      name,\n      email,\n      login,\n    };\n  }\n\n  onNameChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ name: event.target.value });\n  };\n\n  onEmailChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ email: event.target.value });\n  };\n\n  onLoginChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ login: event.target.value });\n  };\n\n  onSubmitProfileUpdate = (event: MouseEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    this.props.updateProfile({ ...this.state });\n  };\n\n  render() {\n    const { name, email, login } = this.state;\n    const { isSavingUser } = this.props;\n    const { disableLoginForm } = config;\n\n    return (\n      <>\n        <h3 className=\"page-sub-heading\">Edit Profile</h3>\n        <form name=\"userForm\" className=\"gf-form-group\">\n          <div className=\"gf-form max-width-30\">\n            <FormLabel className=\"width-8\">Name</FormLabel>\n            <Input className=\"gf-form-input max-width-22\" type=\"text\" onChange={this.onNameChange} value={name} />\n          </div>\n          <div className=\"gf-form max-width-30\">\n            <FormLabel className=\"width-8\">Email</FormLabel>\n            <Input\n              className=\"gf-form-input max-width-22\"\n              type=\"text\"\n              onChange={this.onEmailChange}\n              value={email}\n              disabled={disableLoginForm}\n            />\n            {disableLoginForm && (\n              <Tooltip content=\"Login Details Locked - managed in another system.\">\n                <i className=\"fa fa-lock gf-form-icon--right-absolute\" />\n              </Tooltip>\n            )}\n          </div>\n          <div className=\"gf-form max-width-30\">\n            <FormLabel className=\"width-8\">Username</FormLabel>\n            <Input\n              className=\"gf-form-input max-width-22\"\n              type=\"text\"\n              onChange={this.onLoginChange}\n              value={login}\n              disabled={disableLoginForm}\n            />\n            {disableLoginForm && (\n              <Tooltip content=\"Login Details Locked - managed in another system.\">\n                <i className=\"fa fa-lock gf-form-icon--right-absolute\" />\n              </Tooltip>\n            )}\n          </div>\n          <div className=\"gf-form-button-row\">\n            <Button variant=\"primary\" onClick={this.onSubmitProfileUpdate} disabled={isSavingUser}>\n              Save\n            </Button>\n          </div>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default UserProfileEditForm;\n","import React, { Component } from 'react';\nimport { AppNotification } from 'app/types';\nimport { AlertBox } from '../AlertBox/AlertBox';\n\ninterface Props {\n  appNotification: AppNotification;\n  onClearNotification: (id: number) => void;\n}\n\nexport default class AppNotificationItem extends Component<Props> {\n  shouldComponentUpdate(nextProps: Props) {\n    return this.props.appNotification.id !== nextProps.appNotification.id;\n  }\n\n  componentDidMount() {\n    const { appNotification, onClearNotification } = this.props;\n    setTimeout(() => {\n      onClearNotification(appNotification.id);\n    }, appNotification.timeout);\n  }\n\n  render() {\n    const { appNotification, onClearNotification } = this.props;\n\n    return (\n      <AlertBox\n        severity={appNotification.severity}\n        title={appNotification.title}\n        body={appNotification.text}\n        icon={appNotification.icon}\n        onClose={() => onClearNotification(appNotification.id)}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport appEvents from 'app/core/app_events';\nimport AppNotificationItem from './AppNotificationItem';\nimport { notifyApp, clearAppNotification } from 'app/core/actions';\nimport { connectWithStore } from 'app/core/utils/connectWithReduxStore';\nimport { AppNotification, StoreState } from 'app/types';\nimport {\n  createErrorNotification,\n  createSuccessNotification,\n  createWarningNotification,\n} from '../../copy/appNotification';\n\nexport interface Props {\n  appNotifications: AppNotification[];\n  notifyApp: typeof notifyApp;\n  clearAppNotification: typeof clearAppNotification;\n}\n\nexport class AppNotificationList extends PureComponent<Props> {\n  componentDidMount() {\n    const { notifyApp } = this.props;\n\n    appEvents.on('alert-warning', (options: string[]) => notifyApp(createWarningNotification(options[0], options[1])));\n    appEvents.on('alert-success', (options: string[]) => notifyApp(createSuccessNotification(options[0], options[1])));\n    appEvents.on('alert-error', (options: string[]) => notifyApp(createErrorNotification(options[0], options[1])));\n  }\n\n  onClearAppNotification = (id: number) => {\n    this.props.clearAppNotification(id);\n  };\n\n  render() {\n    const { appNotifications } = this.props;\n\n    return (\n      <div>\n        {appNotifications.map((appNotification, index) => {\n          return (\n            <AppNotificationItem\n              key={`${appNotification.id}-${index}`}\n              appNotification={appNotification}\n              onClearNotification={id => this.onClearAppNotification(id)}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n  appNotifications: state.appNotifications.appNotifications,\n});\n\nconst mapDispatchToProps = {\n  notifyApp,\n  clearAppNotification,\n};\n\nexport default connectWithStore(AppNotificationList, mapStateToProps, mapDispatchToProps);\n","import React from 'react';\n\nexport interface FunctionDescriptor {\n  text: string;\n  params: string[];\n  def: {\n    category: string;\n    defaultParams: string[];\n    description?: string;\n    fake: boolean;\n    name: string;\n    params: string[];\n  };\n}\n\nexport interface FunctionEditorControlsProps {\n  onMoveLeft: (func: FunctionDescriptor) => void;\n  onMoveRight: (func: FunctionDescriptor) => void;\n  onRemove: (func: FunctionDescriptor) => void;\n}\n\nconst FunctionHelpButton = (props: { description: string; name: string; onDescriptionShow: () => void }) => {\n  if (props.description) {\n    return <span className=\"pointer fa fa-question-circle\" onClick={props.onDescriptionShow} />;\n  }\n\n  return (\n    <span\n      className=\"pointer fa fa-question-circle\"\n      onClick={() => {\n        window.open(\n          'http://graphite.readthedocs.org/en/latest/functions.html#graphite.render.functions.' + props.name,\n          '_blank'\n        );\n      }}\n    />\n  );\n};\n\nexport const FunctionEditorControls = (\n  props: FunctionEditorControlsProps & {\n    func: FunctionDescriptor;\n    onDescriptionShow: () => void;\n  }\n) => {\n  const { func, onMoveLeft, onMoveRight, onRemove, onDescriptionShow } = props;\n  return (\n    <div\n      style={{\n        display: 'flex',\n        width: '60px',\n        justifyContent: 'space-between',\n      }}\n    >\n      <span className=\"pointer fa fa-arrow-left\" onClick={() => onMoveLeft(func)} />\n      <FunctionHelpButton\n        name={func.def.name}\n        description={func.def.description}\n        onDescriptionShow={onDescriptionShow}\n      />\n      <span className=\"pointer fa fa-remove\" onClick={() => onRemove(func)} />\n      <span className=\"pointer fa fa-arrow-right\" onClick={() => onMoveRight(func)} />\n    </div>\n  );\n};\n","import React, { Suspense } from 'react';\nimport { PopoverController, Popover } from '@grafana/ui';\nimport { FunctionDescriptor, FunctionEditorControls, FunctionEditorControlsProps } from './FunctionEditorControls';\n\ninterface FunctionEditorProps extends FunctionEditorControlsProps {\n  func: FunctionDescriptor;\n}\n\ninterface FunctionEditorState {\n  showingDescription: boolean;\n}\nconst FunctionDescription = React.lazy(async () => {\n  // @ts-ignore\n  const { default: rst2html } = await import(/* webpackChunkName: \"rst2html\" */ 'rst2html');\n  return {\n    default: (props: { description: string }) => (\n      <div dangerouslySetInnerHTML={{ __html: rst2html(props.description) }} />\n    ),\n  };\n});\n\nclass FunctionEditor extends React.PureComponent<FunctionEditorProps, FunctionEditorState> {\n  private triggerRef = React.createRef<HTMLSpanElement>();\n\n  constructor(props: FunctionEditorProps) {\n    super(props);\n\n    this.state = {\n      showingDescription: false,\n    };\n  }\n\n  renderContent = ({ updatePopperPosition }: any) => {\n    const {\n      onMoveLeft,\n      onMoveRight,\n      func: {\n        def: { name, description },\n      },\n    } = this.props;\n    const { showingDescription } = this.state;\n\n    if (showingDescription) {\n      return (\n        <div style={{ overflow: 'auto', maxHeight: '30rem', textAlign: 'left', fontWeight: 'normal' }}>\n          <h4 style={{ color: 'white' }}> {name} </h4>\n          <Suspense fallback={<span>Loading description...</span>}>\n            <FunctionDescription description={description} />\n          </Suspense>\n        </div>\n      );\n    }\n\n    return (\n      <FunctionEditorControls\n        {...this.props}\n        onMoveLeft={() => {\n          onMoveLeft(this.props.func);\n          updatePopperPosition();\n        }}\n        onMoveRight={() => {\n          onMoveRight(this.props.func);\n          updatePopperPosition();\n        }}\n        onDescriptionShow={() => {\n          this.setState({ showingDescription: true }, () => {\n            updatePopperPosition();\n          });\n        }}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <PopoverController content={this.renderContent} placement=\"top\" hideAfter={300}>\n        {(showPopper, hidePopper, popperProps) => {\n          return (\n            <>\n              {this.triggerRef && (\n                <Popover\n                  {...popperProps}\n                  referenceElement={this.triggerRef.current}\n                  wrapperClassName=\"popper\"\n                  className=\"popper__background\"\n                  onMouseLeave={() => {\n                    this.setState({ showingDescription: false });\n                    hidePopper();\n                  }}\n                  onMouseEnter={showPopper}\n                  renderArrow={({ arrowProps, placement }) => (\n                    <div className=\"popper__arrow\" data-placement={placement} {...arrowProps} />\n                  )}\n                />\n              )}\n\n              <span\n                ref={this.triggerRef}\n                onClick={popperProps.show ? hidePopper : showPopper}\n                onMouseLeave={() => {\n                  hidePopper();\n                  this.setState({ showingDescription: false });\n                }}\n                style={{ cursor: 'pointer' }}\n              >\n                {this.props.func.def.name}\n              </span>\n            </>\n          );\n        }}\n      </PopoverController>\n    );\n  }\n}\n\nexport { FunctionEditor };\n","import React, { useContext } from 'react';\n// @ts-ignore\nimport tinycolor from 'tinycolor2';\nimport { SearchQuery } from './search';\nimport { css, cx } from 'emotion';\nimport { ThemeContext, GrafanaTheme, selectThemeVariant } from '@grafana/ui';\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\ninterface SearchFieldProps extends Omit<React.HTMLAttributes<HTMLInputElement>, 'onChange'> {\n  query: SearchQuery;\n  onChange: (query: string) => void;\n  onKeyDown: (e: React.KeyboardEvent<HTMLInputElement>) => void;\n}\n\nconst getSearchFieldStyles = (theme: GrafanaTheme) => ({\n  wrapper: css`\n    width: 100%;\n    height: 55px; /* this variable is not part of GrafanaTheme yet*/\n    display: flex;\n    background-color: ${selectThemeVariant(\n      {\n        light: theme.colors.white,\n        dark: theme.colors.dark4,\n      },\n      theme.type\n    )};\n    position: relative;\n  `,\n  input: css`\n    max-width: 653px;\n    padding: ${theme.spacing.md} ${theme.spacing.md} ${theme.spacing.sm} ${theme.spacing.md};\n    height: 51px;\n    box-sizing: border-box;\n    outline: none;\n    background: ${selectThemeVariant(\n      {\n        light: theme.colors.dark1,\n        dark: theme.colors.black,\n      },\n      theme.type\n    )};\n    background-color: ${selectThemeVariant(\n      {\n        light: tinycolor(theme.colors.white)\n          .lighten(4)\n          .toString(),\n        dark: theme.colors.dark4,\n      },\n      theme.type\n    )};\n    flex-grow: 10;\n  `,\n  spacer: css`\n    flex-grow: 1;\n  `,\n  icon: cx(\n    css`\n      font-size: ${theme.typography.size.lg};\n      padding: ${theme.spacing.md} ${theme.spacing.md} ${theme.spacing.sm} ${theme.spacing.md};\n    `,\n    'pointer'\n  ),\n});\n\nexport const SearchField: React.FunctionComponent<SearchFieldProps> = ({ query, onChange, ...inputProps }) => {\n  const theme = useContext(ThemeContext);\n  const styles = getSearchFieldStyles(theme);\n\n  return (\n    <>\n      {/* search-field-wrapper class name left on purpose until we migrate entire search to React */}\n      {/* based on it GrafanaCtrl (L256) decides whether or not hide search */}\n      <div className={`${styles.wrapper} search-field-wrapper`}>\n        <div className={styles.icon}>\n          <i className=\"fa fa-search\" />\n        </div>\n\n        <input\n          type=\"text\"\n          placeholder=\"Find dashboards by name\"\n          value={query.query}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            onChange(event.currentTarget.value);\n          }}\n          tabIndex={1}\n          spellCheck={false}\n          {...inputProps}\n          className={styles.input}\n        />\n\n        <div className={styles.spacer} />\n      </div>\n    </>\n  );\n};\n","import React, { useContext } from 'react';\nimport { FlotDataPoint } from './GraphContextMenuCtrl';\nimport { ContextMenu, ContextMenuProps, SeriesIcon, ThemeContext } from '@grafana/ui';\nimport { DateTimeInput } from '@grafana/data';\nimport { css } from 'emotion';\n\ntype GraphContextMenuProps = ContextMenuProps & {\n  getContextMenuSource: () => FlotDataPoint | null;\n  formatSourceDate: (date: DateTimeInput, format?: string) => string;\n};\n\nexport const GraphContextMenu: React.FC<GraphContextMenuProps> = ({\n  getContextMenuSource,\n  formatSourceDate,\n  items,\n  ...otherProps\n}) => {\n  const theme = useContext(ThemeContext);\n  const source = getContextMenuSource();\n\n  //  Do not render items that do not have label specified\n  const itemsToRender = items\n    ? items.map(group => ({\n        ...group,\n        items: group.items.filter(item => item.label),\n      }))\n    : [];\n\n  const renderHeader = source\n    ? () => {\n        if (!source) {\n          return null;\n        }\n\n        const timeFormat = source.series.hasMsResolution ? 'YYYY-MM-DD HH:mm:ss.SSS' : 'YYYY-MM-DD HH:mm:ss';\n\n        return (\n          <div\n            className={css`\n              padding: ${theme.spacing.xs} ${theme.spacing.sm};\n              font-size: ${theme.typography.size.sm};\n            `}\n          >\n            <strong>{formatSourceDate(source.datapoint[0], timeFormat)}</strong>\n            <div>\n              <SeriesIcon color={source.series.color} />\n              <span\n                className={css`\n                  white-space: nowrap;\n                  padding-left: ${theme.spacing.xs};\n                `}\n              >\n                {source.series.alias}\n              </span>\n            </div>\n          </div>\n        );\n      }\n    : null;\n\n  return <ContextMenu {...otherProps} items={itemsToRender} renderHeader={renderHeader} />;\n};\n","import React, { PureComponent } from 'react';\nimport { Team } from 'app/types';\nimport { LoadingPlaceholder } from '@grafana/ui';\n\nexport interface Props {\n  teams: Team[];\n  isLoading: boolean;\n  loadTeams: () => void;\n}\n\nexport class UserTeams extends PureComponent<Props> {\n  componentDidMount() {\n    this.props.loadTeams();\n  }\n\n  render() {\n    const { isLoading, teams } = this.props;\n\n    if (isLoading) {\n      return <LoadingPlaceholder text=\"Loading teams...\" />;\n    }\n\n    return (\n      <>\n        {teams.length > 0 && (\n          <>\n            <h3 className=\"page-sub-heading\">Teams</h3>\n            <div className=\"gf-form-group\">\n              <table className=\"filter-table form-inline\">\n                <thead>\n                  <tr>\n                    <th />\n                    <th>Name</th>\n                    <th>Email</th>\n                    <th>Members</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {teams.map((team: Team, index) => {\n                    return (\n                      <tr key={index}>\n                        <td className=\"width-4 text-center\">\n                          <img className=\"filter-table__avatar\" src={team.avatarUrl} />\n                        </td>\n                        <td>{team.name}</td>\n                        <td>{team.email}</td>\n                        <td>{team.memberCount}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default UserTeams;\n","import React, { PureComponent } from 'react';\nimport { User } from 'app/types';\nimport { UserOrg } from 'app/core/utils/UserProvider';\nimport { LoadingPlaceholder, Button } from '@grafana/ui';\n\nexport interface Props {\n  user: User;\n  orgs: UserOrg[];\n  isLoading: boolean;\n  loadOrgs: () => void;\n  setUserOrg: (org: UserOrg) => void;\n}\n\nexport class UserOrganizations extends PureComponent<Props> {\n  componentDidMount() {\n    this.props.loadOrgs();\n  }\n\n  render() {\n    const { isLoading, orgs, user } = this.props;\n\n    if (isLoading) {\n      return <LoadingPlaceholder text=\"Loading organizations...\" />;\n    }\n\n    return (\n      <>\n        {orgs.length > 0 && (\n          <>\n            <h3 className=\"page-sub-heading\">Organizations</h3>\n            <div className=\"gf-form-group\">\n              <table className=\"filter-table form-inline\">\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Role</th>\n                    <th />\n                  </tr>\n                </thead>\n                <tbody>\n                  {orgs.map((org: UserOrg, index) => {\n                    return (\n                      <tr key={index}>\n                        <td>{org.name}</td>\n                        <td>{org.role}</td>\n                        <td className=\"text-right\">\n                          {org.orgId === user.orgId ? (\n                            <span className=\"btn btn-primary btn-small\">Current</span>\n                          ) : (\n                            <Button\n                              variant=\"inverse\"\n                              size=\"sm\"\n                              onClick={() => {\n                                this.props.setUserOrg(org);\n                              }}\n                            >\n                              Select\n                            </Button>\n                          )}\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default UserOrganizations;\n","import React from 'react';\nimport { UserProvider } from 'app/core/utils/UserProvider';\nimport { UserProfileEditForm } from './UserProfileEditForm';\nimport { SharedPreferences } from 'app/core/components/SharedPreferences/SharedPreferences';\nimport { UserTeams } from './UserTeams';\nimport { UserOrganizations } from './UserOrganizations';\nimport { config } from '@grafana/runtime';\nimport { LoadingPlaceholder } from '@grafana/ui';\n\nexport const ReactProfileWrapper = () => (\n  <UserProvider userId={config.bootData.user.id}>\n    {(api, states, teams, orgs, user) => {\n      return (\n        <>\n          {states.loadUser ? (\n            <LoadingPlaceholder text=\"Loading user profile...\" />\n          ) : (\n            <UserProfileEditForm\n              updateProfile={api.updateUserProfile}\n              isSavingUser={states.updateUserProfile}\n              user={user}\n            />\n          )}\n          <SharedPreferences resourceUri=\"user\" />\n          <UserTeams isLoading={states.loadTeams} loadTeams={api.loadTeams} teams={teams} />\n          {!states.loadUser && (\n            <UserOrganizations\n              isLoading={states.loadOrgs}\n              setUserOrg={api.setUserOrg}\n              loadOrgs={api.loadOrgs}\n              orgs={orgs}\n              user={user}\n            />\n          )}\n        </>\n      );\n    }}\n  </UserProvider>\n);\n\nexport default ReactProfileWrapper;\n","// Libraries\nimport React, { memo } from 'react';\n\n// Types\nimport { DataSourceApi, DataSourceJsonData, DataSourceStatus } from '@grafana/ui';\nimport { LokiQuery } from '../types';\nimport { useLokiSyntax } from './useLokiSyntax';\nimport { LokiQueryFieldForm } from './LokiQueryFieldForm';\n\ninterface Props {\n  expr: string;\n  datasource: DataSourceApi<LokiQuery, DataSourceJsonData>;\n  onChange: (expr: string) => void;\n}\n\nexport const LokiAnnotationsQueryEditor = memo(function LokiAnnotationQueryEditor(props: Props) {\n  const { expr, datasource, onChange } = props;\n\n  // Timerange to get existing labels from. Hard coding like this seems to be good enough right now.\n  const absolute = {\n    from: Date.now() - 10000,\n    to: Date.now(),\n  };\n\n  const { isSyntaxReady, setActiveOption, refreshLabels, ...syntaxProps } = useLokiSyntax(\n    datasource.languageProvider,\n    DataSourceStatus.Connected,\n    absolute\n  );\n\n  const query: LokiQuery = {\n    refId: '',\n    expr,\n  };\n\n  return (\n    <div className=\"gf-form-group\">\n      <LokiQueryFieldForm\n        datasource={datasource}\n        datasourceStatus={DataSourceStatus.Connected}\n        query={query}\n        onChange={(query: LokiQuery) => onChange(query.expr)}\n        onRunQuery={() => {}}\n        history={[]}\n        panelData={null}\n        onLoadOptions={setActiveOption}\n        onLabelsRefresh={refreshLabels}\n        syntaxLoaded={isSyntaxReady}\n        absoluteRange={absolute}\n        {...syntaxProps}\n      />\n    </div>\n  );\n});\n","import { react2AngularDirective } from 'app/core/utils/react2angular';\nimport { QueryEditor as StackdriverQueryEditor } from 'app/plugins/datasource/stackdriver/components/QueryEditor';\nimport { AnnotationQueryEditor as StackdriverAnnotationQueryEditor } from 'app/plugins/datasource/stackdriver/components/AnnotationQueryEditor';\nimport PageHeader from './components/PageHeader/PageHeader';\nimport EmptyListCTA from './components/EmptyListCTA/EmptyListCTA';\nimport { TagFilter } from './components/TagFilter/TagFilter';\nimport { SideMenu } from './components/sidemenu/SideMenu';\nimport { MetricSelect } from './components/Select/MetricSelect';\nimport AppNotificationList from './components/AppNotifications/AppNotificationList';\nimport { ColorPicker, SeriesColorPickerPopoverWithTheme, SecretFormField, DataLinksEditor } from '@grafana/ui';\nimport { FunctionEditor } from 'app/plugins/datasource/graphite/FunctionEditor';\nimport { SearchField } from './components/search/SearchField';\nimport { GraphContextMenu } from 'app/plugins/panel/graph/GraphContextMenu';\nimport ReactProfileWrapper from 'app/features/profile/ReactProfileWrapper';\nimport { LokiAnnotationsQueryEditor } from '../plugins/datasource/loki/components/AnnotationsQueryEditor';\n\nexport function registerAngularDirectives() {\n  react2AngularDirective('sidemenu', SideMenu, []);\n  react2AngularDirective('functionEditor', FunctionEditor, ['func', 'onRemove', 'onMoveLeft', 'onMoveRight']);\n  react2AngularDirective('appNotificationsList', AppNotificationList, []);\n  react2AngularDirective('pageHeader', PageHeader, ['model', 'noTabs']);\n  react2AngularDirective('emptyListCta', EmptyListCTA, [\n    'title',\n    'buttonIcon',\n    'buttonLink',\n    'buttonTitle',\n    ['onClick', { watchDepth: 'reference', wrapApply: true }],\n    'proTip',\n    'proTipLink',\n    'proTipLinkTitle',\n    'proTipTarget',\n    'infoBox',\n    'infoBoxTitle',\n  ]);\n  react2AngularDirective('searchField', SearchField, [\n    'query',\n    'autoFocus',\n    ['onChange', { watchDepth: 'reference' }],\n    ['onKeyDown', { watchDepth: 'reference' }],\n  ]);\n  react2AngularDirective('tagFilter', TagFilter, [\n    'tags',\n    ['onChange', { watchDepth: 'reference' }],\n    ['tagOptions', { watchDepth: 'reference' }],\n  ]);\n  react2AngularDirective('colorPicker', ColorPicker, [\n    'color',\n    ['onChange', { watchDepth: 'reference', wrapApply: true }],\n  ]);\n  react2AngularDirective('seriesColorPickerPopover', SeriesColorPickerPopoverWithTheme, [\n    'color',\n    'series',\n    'onColorChange',\n    'onToggleAxis',\n  ]);\n  react2AngularDirective('metricSelect', MetricSelect, [\n    'options',\n    'onChange',\n    'value',\n    'isSearchable',\n    'className',\n    'placeholder',\n    ['variables', { watchDepth: 'reference' }],\n  ]);\n  react2AngularDirective('stackdriverQueryEditor', StackdriverQueryEditor, [\n    'target',\n    'onQueryChange',\n    'onExecuteQuery',\n    ['events', { watchDepth: 'reference' }],\n    ['datasource', { watchDepth: 'reference' }],\n    ['templateSrv', { watchDepth: 'reference' }],\n  ]);\n  react2AngularDirective('stackdriverAnnotationQueryEditor', StackdriverAnnotationQueryEditor, [\n    'target',\n    'onQueryChange',\n    'onExecuteQuery',\n    ['datasource', { watchDepth: 'reference' }],\n    ['templateSrv', { watchDepth: 'reference' }],\n  ]);\n  react2AngularDirective('secretFormField', SecretFormField, [\n    'value',\n    'isConfigured',\n    'inputWidth',\n    'labelWidth',\n    ['onReset', { watchDepth: 'reference', wrapApply: true }],\n    ['onChange', { watchDepth: 'reference', wrapApply: true }],\n  ]);\n  react2AngularDirective('graphContextMenu', GraphContextMenu, [\n    'x',\n    'y',\n    'items',\n    ['onClose', { watchDepth: 'reference', wrapApply: true }],\n    ['getContextMenuSource', { watchDepth: 'reference', wrapApply: true }],\n    ['formatSourceDate', { watchDepth: 'reference', wrapApply: true }],\n  ]);\n\n  // We keep the drilldown terminology here because of as using data-* directive\n  // being in conflict with HTML data attributes\n  react2AngularDirective('drilldownLinksEditor', DataLinksEditor, [\n    'value',\n    'suggestions',\n    ['onChange', { watchDepth: 'reference', wrapApply: true }],\n  ]);\n\n  react2AngularDirective('reactProfileWrapper', ReactProfileWrapper, []);\n\n  react2AngularDirective('lokiAnnotationsQueryEditor', LokiAnnotationsQueryEditor, [\n    'expr',\n    'onChange',\n    ['datasource', { watchDepth: 'reference' }],\n  ]);\n}\n","import _ from 'lodash';\nimport coreModule from '../../core_module';\nimport appEvents from 'app/core/app_events';\n\nexport class SearchResultsCtrl {\n  results: any;\n  onSelectionChanged: any;\n  onTagSelected: any;\n  onFolderExpanding: any;\n  editable: boolean;\n\n  /** @ngInject */\n  constructor(private $location: any) {}\n\n  toggleFolderExpand(section: any) {\n    if (section.toggle) {\n      if (!section.expanded && this.onFolderExpanding) {\n        this.onFolderExpanding();\n      }\n\n      section.toggle(section).then((f: any) => {\n        if (this.editable && f.expanded) {\n          if (f.items) {\n            _.each(f.items, i => {\n              i.checked = f.checked;\n            });\n\n            if (this.onSelectionChanged) {\n              this.onSelectionChanged();\n            }\n          }\n        }\n      });\n    }\n  }\n\n  navigateToFolder(section: any, evt: any) {\n    this.$location.path(section.url);\n\n    if (evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n    }\n  }\n\n  toggleSelection(item: any, evt: any) {\n    item.checked = !item.checked;\n\n    if (item.items) {\n      _.each(item.items, i => {\n        i.checked = item.checked;\n      });\n    }\n\n    if (this.onSelectionChanged) {\n      this.onSelectionChanged();\n    }\n\n    if (evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n    }\n  }\n\n  onItemClick(item: any) {\n    //Check if one string can be found in the other\n    if (this.$location.path().indexOf(item.url) > -1 || item.url.indexOf(this.$location.path()) > -1) {\n      appEvents.emit('hide-dash-search');\n    }\n  }\n\n  selectTag(tag: any, evt: any) {\n    if (this.onTagSelected) {\n      this.onTagSelected({ $tag: tag });\n    }\n\n    if (evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n    }\n  }\n}\n\nexport function searchResultsDirective() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/core/components/search/search_results.html',\n    controller: SearchResultsCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      editable: '@',\n      results: '=',\n      onSelectionChanged: '&',\n      onTagSelected: '&',\n      onFolderExpanding: '&',\n    },\n  };\n}\n\ncoreModule.directive('dashboardSearchResults', searchResultsDirective);\n","import _ from 'lodash';\nimport coreModule from 'app/core/core_module';\nimport appEvents from 'app/core/app_events';\nimport { SearchSrv } from 'app/core/services/search_srv';\nimport { BackendSrv } from 'app/core/services/backend_srv';\nimport { NavModelSrv } from 'app/core/nav_model_srv';\nimport { ContextSrv } from 'app/core/services/context_srv';\n\nexport interface Section {\n  id: number;\n  uid: string;\n  title: string;\n  expanded: boolean;\n  removable: boolean;\n  items: any[];\n  url: string;\n  icon: string;\n  score: number;\n  checked: boolean;\n  hideHeader: boolean;\n  toggle: Function;\n}\n\nexport interface FoldersAndDashboardUids {\n  folderUids: string[];\n  dashboardUids: string[];\n}\n\nclass Query {\n  query: string;\n  mode: string;\n  tag: any[];\n  starred: boolean;\n  skipRecent: boolean;\n  skipStarred: boolean;\n  folderIds: number[];\n}\n\nexport class ManageDashboardsCtrl {\n  sections: Section[];\n\n  query: Query;\n  navModel: any;\n\n  selectAllChecked = false;\n\n  // enable/disable actions depending on the folders or dashboards selected\n  canDelete = false;\n  canMove = false;\n\n  // filter variables\n  hasFilters = false;\n  tagFilterOptions: any[];\n  selectedTagFilter: any;\n  starredFilterOptions = [{ text: 'Filter by Starred', disabled: true }, { text: 'Yes' }, { text: 'No' }];\n  selectedStarredFilter: any;\n\n  // used when managing dashboards for a specific folder\n  folderId?: number;\n  folderUid?: string;\n\n  // if user can add new folders and/or add new dashboards\n  canSave = false;\n\n  // if user has editor role or higher\n  isEditor: boolean;\n\n  hasEditPermissionInFolders: boolean;\n\n  /** @ngInject */\n  constructor(\n    private backendSrv: BackendSrv,\n    navModelSrv: NavModelSrv,\n    private searchSrv: SearchSrv,\n    private contextSrv: ContextSrv\n  ) {\n    this.isEditor = this.contextSrv.isEditor;\n    this.hasEditPermissionInFolders = this.contextSrv.hasEditPermissionInFolders;\n\n    this.query = {\n      query: '',\n      mode: 'tree',\n      tag: [],\n      starred: false,\n      skipRecent: true,\n      skipStarred: true,\n      folderIds: [],\n    };\n\n    if (this.folderId) {\n      this.query.folderIds = [this.folderId];\n    }\n\n    this.selectedStarredFilter = this.starredFilterOptions[0];\n\n    this.refreshList().then(() => {\n      this.initTagFilter();\n    });\n  }\n\n  refreshList() {\n    return this.searchSrv\n      .search(this.query)\n      .then((result: Section[]) => {\n        return this.initDashboardList(result);\n      })\n      .then(() => {\n        if (!this.folderUid) {\n          return;\n        }\n\n        return this.backendSrv.getFolderByUid(this.folderUid).then((folder: any) => {\n          this.canSave = folder.canSave;\n          if (!this.canSave) {\n            this.hasEditPermissionInFolders = false;\n          }\n        });\n      });\n  }\n\n  initDashboardList(result: Section[]) {\n    this.canMove = false;\n    this.canDelete = false;\n    this.selectAllChecked = false;\n    this.hasFilters = this.query.query.length > 0 || this.query.tag.length > 0 || this.query.starred;\n\n    if (!result) {\n      this.sections = [];\n      return;\n    }\n\n    this.sections = result;\n\n    for (const section of this.sections) {\n      section.checked = false;\n\n      for (const dashboard of section.items) {\n        dashboard.checked = false;\n      }\n    }\n\n    if (this.folderId && this.sections.length > 0) {\n      this.sections[0].hideHeader = true;\n    }\n  }\n\n  selectionChanged() {\n    let selectedDashboards = 0;\n\n    for (const section of this.sections) {\n      selectedDashboards += _.filter(section.items, { checked: true } as any).length;\n    }\n\n    const selectedFolders = _.filter(this.sections, { checked: true }).length;\n    this.canMove = selectedDashboards > 0;\n    this.canDelete = selectedDashboards > 0 || selectedFolders > 0;\n  }\n\n  getFoldersAndDashboardsToDelete(): FoldersAndDashboardUids {\n    const selectedDashboards: FoldersAndDashboardUids = {\n      folderUids: [],\n      dashboardUids: [],\n    };\n\n    for (const section of this.sections) {\n      if (section.checked && section.id !== 0) {\n        selectedDashboards.folderUids.push(section.uid);\n      } else {\n        const selected = _.filter(section.items, { checked: true } as any);\n        selectedDashboards.dashboardUids.push(..._.map(selected, 'uid'));\n      }\n    }\n\n    return selectedDashboards;\n  }\n\n  getFolderIds(sections: Section[]) {\n    const ids = [];\n    for (const s of sections) {\n      if (s.checked) {\n        ids.push(s.id);\n      }\n    }\n    return ids;\n  }\n\n  delete() {\n    const data = this.getFoldersAndDashboardsToDelete();\n    const folderCount = data.folderUids.length;\n    const dashCount = data.dashboardUids.length;\n    let text = 'Do you want to delete the ';\n    let text2;\n\n    if (folderCount > 0 && dashCount > 0) {\n      text += `selected folder${folderCount === 1 ? '' : 's'} and dashboard${dashCount === 1 ? '' : 's'}?`;\n      text2 = `All dashboards of the selected folder${folderCount === 1 ? '' : 's'} will also be deleted`;\n    } else if (folderCount > 0) {\n      text += `selected folder${folderCount === 1 ? '' : 's'} and all its dashboards?`;\n    } else {\n      text += `selected dashboard${dashCount === 1 ? '' : 's'}?`;\n    }\n\n    appEvents.emit('confirm-modal', {\n      title: 'Delete',\n      text: text,\n      text2: text2,\n      icon: 'fa-trash',\n      yesText: 'Delete',\n      onConfirm: () => {\n        this.deleteFoldersAndDashboards(data.folderUids, data.dashboardUids);\n      },\n    });\n  }\n\n  private deleteFoldersAndDashboards(folderUids: string[], dashboardUids: string[]) {\n    this.backendSrv.deleteFoldersAndDashboards(folderUids, dashboardUids).then(() => {\n      this.refreshList();\n    });\n  }\n\n  getDashboardsToMove() {\n    const selectedDashboards = [];\n\n    for (const section of this.sections) {\n      const selected = _.filter(section.items, { checked: true } as any);\n      selectedDashboards.push(..._.map(selected, 'uid'));\n    }\n\n    return selectedDashboards;\n  }\n\n  moveTo() {\n    const selectedDashboards = this.getDashboardsToMove();\n\n    const template =\n      '<move-to-folder-modal dismiss=\"dismiss()\" ' +\n      'dashboards=\"model.dashboards\" after-save=\"model.afterSave()\">' +\n      '</move-to-folder-modal>';\n    appEvents.emit('show-modal', {\n      templateHtml: template,\n      modalClass: 'modal--narrow',\n      model: {\n        dashboards: selectedDashboards,\n        afterSave: this.refreshList.bind(this),\n      },\n    });\n  }\n\n  initTagFilter() {\n    return this.searchSrv.getDashboardTags().then((results: any) => {\n      this.tagFilterOptions = [{ term: 'Filter By Tag', disabled: true }].concat(results);\n      this.selectedTagFilter = this.tagFilterOptions[0];\n    });\n  }\n\n  filterByTag(tag: any) {\n    if (_.indexOf(this.query.tag, tag) === -1) {\n      this.query.tag.push(tag);\n    }\n\n    return this.refreshList();\n  }\n\n  onQueryChange() {\n    return this.refreshList();\n  }\n\n  onTagFilterChange() {\n    const res = this.filterByTag(this.selectedTagFilter.term);\n    this.selectedTagFilter = this.tagFilterOptions[0];\n    return res;\n  }\n\n  removeTag(tag: any, evt: Event) {\n    this.query.tag = _.without(this.query.tag, tag);\n    this.refreshList();\n    if (evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n    }\n  }\n\n  removeStarred() {\n    this.query.starred = false;\n    return this.refreshList();\n  }\n\n  onStarredFilterChange() {\n    this.query.starred = this.selectedStarredFilter.text === 'Yes';\n    this.selectedStarredFilter = this.starredFilterOptions[0];\n    return this.refreshList();\n  }\n\n  onSelectAllChanged() {\n    for (const section of this.sections) {\n      if (!section.hideHeader) {\n        section.checked = this.selectAllChecked;\n      }\n\n      section.items = _.map(section.items, (item: any) => {\n        item.checked = this.selectAllChecked;\n        return item;\n      });\n    }\n\n    this.selectionChanged();\n  }\n\n  clearFilters() {\n    this.query.query = '';\n    this.query.tag = [];\n    this.query.starred = false;\n    this.refreshList();\n  }\n\n  createDashboardUrl() {\n    let url = 'dashboard/new';\n\n    if (this.folderId) {\n      url += `?folderId=${this.folderId}`;\n    }\n\n    return url;\n  }\n\n  importDashboardUrl() {\n    let url = 'dashboard/import';\n\n    if (this.folderId) {\n      url += `?folderId=${this.folderId}`;\n    }\n\n    return url;\n  }\n}\n\nexport function manageDashboardsDirective() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/core/components/manage_dashboards/manage_dashboards.html',\n    controller: ManageDashboardsCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      folderId: '=',\n      folderUid: '=',\n    },\n  };\n}\n\ncoreModule.directive('manageDashboards', manageDashboardsDirective);\n","import './directives/dropdown_typeahead';\nimport './directives/autofill_event_fix';\nimport './directives/metric_segment';\nimport './directives/misc';\nimport './directives/ng_model_on_blur';\nimport './directives/tags';\nimport './directives/value_select_dropdown';\nimport './directives/rebuild_on_change';\nimport './directives/give_focus';\nimport './directives/diff-view';\nimport './jquery_extended';\nimport './partials';\nimport './components/jsontree/jsontree';\nimport './components/code_editor/code_editor';\nimport './utils/outline';\nimport './components/colorpicker/spectrum_picker';\nimport './services/search_srv';\nimport './services/ng_react';\nimport { colors, JsonExplorer } from '@grafana/ui/';\n\nimport { searchDirective } from './components/search/search';\nimport { infoPopover } from './components/info_popover';\nimport { arrayJoin } from './directives/array_join';\nimport { liveSrv } from './live/live_srv';\nimport { Emitter } from './utils/emitter';\nimport { layoutSelector } from './components/layout_selector/layout_selector';\nimport { switchDirective } from './components/switch';\nimport { dashboardSelector } from './components/dashboard_selector';\nimport { queryPartEditorDirective } from './components/query_part/query_part_editor';\nimport { sqlPartEditorDirective } from './components/sql_part/sql_part_editor';\nimport { formDropdownDirective } from './components/form_dropdown/form_dropdown';\nimport 'app/core/controllers/all';\nimport 'app/core/services/all';\nimport './filters/filters';\nimport coreModule from './core_module';\nimport appEvents from './app_events';\nimport { assignModelProperties } from './utils/model_utils';\nimport { contextSrv } from './services/context_srv';\nimport { KeybindingSrv } from './services/keybindingSrv';\nimport { helpModal } from './components/help/help';\nimport { NavModelSrv } from './nav_model_srv';\nimport { geminiScrollbar } from './components/scroll/scroll';\nimport { orgSwitcher } from './components/org_switcher';\nimport { profiler } from './profiler';\nimport { registerAngularDirectives } from './angular_wrappers';\nimport { updateLegendValues } from './time_series2';\nimport TimeSeries from './time_series2';\nimport { searchResultsDirective } from './components/search/search_results';\nimport { manageDashboardsDirective } from './components/manage_dashboards/manage_dashboards';\nimport { NavModel } from '@grafana/data';\n\nexport {\n  profiler,\n  registerAngularDirectives,\n  arrayJoin,\n  coreModule,\n  searchDirective,\n  liveSrv,\n  layoutSelector,\n  switchDirective,\n  infoPopover,\n  Emitter,\n  appEvents,\n  dashboardSelector,\n  queryPartEditorDirective,\n  sqlPartEditorDirective,\n  colors,\n  formDropdownDirective,\n  assignModelProperties,\n  contextSrv,\n  KeybindingSrv,\n  helpModal,\n  JsonExplorer,\n  NavModelSrv,\n  NavModel,\n  geminiScrollbar,\n  orgSwitcher,\n  manageDashboardsDirective,\n  TimeSeries,\n  updateLegendValues,\n  searchResultsDirective,\n};\n","import { DataSourceSettings, PluginType, PluginInclude } from '@grafana/ui';\nimport { NavModel, NavModelItem } from '@grafana/data';\nimport config from 'app/core/config';\nimport { GenericDataSourcePlugin } from '../settings/PluginSettings';\n\nexport function buildNavModel(dataSource: DataSourceSettings, plugin: GenericDataSourcePlugin): NavModelItem {\n  const pluginMeta = plugin.meta;\n\n  const navModel = {\n    img: pluginMeta.info.logos.large,\n    id: 'datasource-' + dataSource.id,\n    subTitle: `Type: ${pluginMeta.name}`,\n    url: '',\n    text: dataSource.name,\n    breadcrumbs: [{ title: 'Data Sources', url: 'datasources' }],\n    children: [\n      {\n        active: false,\n        icon: 'fa fa-fw fa-sliders',\n        id: `datasource-settings-${dataSource.id}`,\n        text: 'Settings',\n        url: `datasources/edit/${dataSource.id}/`,\n      },\n    ],\n  };\n\n  if (plugin.configPages) {\n    for (const page of plugin.configPages) {\n      navModel.children.push({\n        active: false,\n        text: page.title,\n        icon: page.icon,\n        url: `datasources/edit/${dataSource.id}/?page=${page.id}`,\n        id: `datasource-page-${page.id}`,\n      });\n    }\n  }\n\n  if (pluginMeta.includes && hasDashboards(pluginMeta.includes)) {\n    navModel.children.push({\n      active: false,\n      icon: 'fa fa-fw fa-th-large',\n      id: `datasource-dashboards-${dataSource.id}`,\n      text: 'Dashboards',\n      url: `datasources/edit/${dataSource.id}/dashboards`,\n    });\n  }\n\n  if (config.buildInfo.isEnterprise) {\n    navModel.children.push({\n      active: false,\n      icon: 'fa fa-fw fa-lock',\n      id: `datasource-permissions-${dataSource.id}`,\n      text: 'Permissions',\n      url: `datasources/edit/${dataSource.id}/permissions`,\n    });\n  }\n\n  return navModel;\n}\n\nexport function getDataSourceLoadingNav(pageName: string): NavModel {\n  const main = buildNavModel(\n    {\n      access: '',\n      basicAuth: false,\n      basicAuthUser: '',\n      basicAuthPassword: '',\n      withCredentials: false,\n      database: '',\n      id: 1,\n      isDefault: false,\n      jsonData: { authType: 'credentials', defaultRegion: 'eu-west-2' },\n      name: 'Loading',\n      orgId: 1,\n      password: '',\n      readOnly: false,\n      type: 'Loading',\n      typeLogoUrl: 'public/img/icn-datasource.svg',\n      url: '',\n      user: '',\n    },\n    {\n      meta: {\n        id: '1',\n        type: PluginType.datasource,\n        name: '',\n        info: {\n          author: {\n            name: '',\n            url: '',\n          },\n          description: '',\n          links: [{ name: '', url: '' }],\n          logos: {\n            large: '',\n            small: '',\n          },\n          screenshots: [],\n          updated: '',\n          version: '',\n        },\n        includes: [],\n        module: '',\n        baseUrl: '',\n      },\n    } as GenericDataSourcePlugin\n  );\n\n  let node: NavModelItem;\n\n  // find active page\n  for (const child of main.children) {\n    if (child.id.indexOf(pageName) > 0) {\n      child.active = true;\n      node = child;\n      break;\n    }\n  }\n\n  return {\n    main: main,\n    node: node,\n  };\n}\n\nfunction hasDashboards(includes: PluginInclude[]): boolean {\n  return (\n    includes.find(include => {\n      return include.type === 'dashboard';\n    }) !== undefined\n  );\n}\n","import { Plugin } from '@grafana/slate-react';\nimport { Editor as CoreEditor } from 'slate';\n\n// Clears the rest of the line after the caret\nexport default function ClearPlugin(): Plugin {\n  return {\n    onKeyDown(event: KeyboardEvent, editor: CoreEditor, next: Function) {\n      const value = editor.value;\n\n      if (value.selection.isExpanded) {\n        return next();\n      }\n\n      if (event.key === 'k' && event.ctrlKey) {\n        event.preventDefault();\n        const text = value.anchorText.text;\n        const offset = value.selection.anchor.offset;\n        const length = text.length;\n        const forward = length - offset;\n        editor.deleteForward(forward);\n        return true;\n      }\n\n      return next();\n    },\n  };\n}\n","var path = 'public/app/plugins/datasource/postgres/partials/query.editor.html';\nvar html = \"<query-editor-row query-ctrl=ctrl has-text-edit-mode=true>\\n\\n  <div ng-if=ctrl.target.rawQuery>\\n    <div class=gf-form-inline>\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <code-editor content=ctrl.target.rawSql datasource=ctrl.datasource on-change=ctrl.panelCtrl.refresh() data-mode=sql>\\n        </code-editor>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div ng-if=!ctrl.target.rawQuery>\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-6\\\">FROM</label>\\n        <metric-segment segment=ctrl.tableSegment get-options=ctrl.getTableSegments() on-change=ctrl.tableChanged()></metric-segment>\\n\\n        <label class=\\\"gf-form-label query-keyword width-7\\\">Time column</label>\\n        <metric-segment segment=ctrl.timeColumnSegment get-options=ctrl.getTimeColumnSegments() on-change=ctrl.timeColumnChanged()></metric-segment>\\n\\n        <label class=\\\"gf-form-label query-keyword width-9\\\">\\n          Metric column\\n          <info-popover mode=right-normal>Column to be used as metric name for the value column.</info-popover>\\n        </label>\\n        <metric-segment segment=ctrl.metricColumnSegment get-options=ctrl.getMetricColumnSegments() on-change=ctrl.metricColumnChanged()></metric-segment>\\n      </div>\\n\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=gf-form-inline ng-repeat=\\\"selectParts in ctrl.selectParts\\\">\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-6\\\">\\n          <span ng-show=\\\"$index === 0\\\">SELECT</span>&nbsp;\\n        </label>\\n      </div>\\n\\n      <div class=gf-form ng-repeat=\\\"part in selectParts\\\">\\n        <sql-part-editor class=\\\"gf-form-label sql-part\\\" part=part handle-event=\\\"ctrl.handleSelectPartEvent(selectParts, part, $event)\\\">\\n        </sql-part-editor>\\n      </div>\\n\\n      <div class=gf-form>\\n        <label class=dropdown dropdown-typeahead2=ctrl.selectMenu dropdown-typeahead-on-select=\\\"ctrl.addSelectPart(selectParts, $item, $subItem)\\\" button-template-class=\\\"gf-form-label query-part\\\">\\n        </label>\\n      </div>\\n\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n    </div>\\n\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-6\\\">WHERE</label>\\n      </div>\\n\\n      <div class=gf-form ng-repeat=\\\"part in ctrl.whereParts\\\">\\n        <sql-part-editor class=\\\"gf-form-label sql-part\\\" part=part handle-event=\\\"ctrl.handleWherePartEvent(ctrl.whereParts, part, $event, $index)\\\">\\n        </sql-part-editor>\\n      </div>\\n\\n      <div class=gf-form>\\n        <metric-segment segment=ctrl.whereAdd get-options=ctrl.getWhereOptions() on-change=\\\"ctrl.addWhereAction(part, $index)\\\"></metric-segment>\\n      </div>\\n\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-6\\\">\\n          <span>GROUP BY</span>\\n        </label>\\n\\n        <sql-part-editor ng-repeat=\\\"part in ctrl.groupParts\\\" part=part class=\\\"gf-form-label sql-part\\\" handle-event=\\\"ctrl.handleGroupPartEvent(part, $index, $event)\\\">\\n        </sql-part-editor>\\n      </div>\\n\\n      <div class=gf-form>\\n        <metric-segment segment=ctrl.groupAdd get-options=ctrl.getGroupOptions() on-change=\\\"ctrl.addGroupAction(part, $index)\\\"></metric-segment>\\n      </div>\\n\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=gf-form-inline>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label query-keyword\\\">Format as</label>\\n      <div class=gf-form-select-wrapper>\\n        <select class=\\\"gf-form-input gf-size-auto\\\" ng-model=ctrl.target.format ng-options=\\\"f.value as f.text for f in ctrl.formats\\\" ng-change=ctrl.refresh()></select>\\n      </div>\\n    </div>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label query-keyword pointer\\\" ng-click=ctrl.toggleEditorMode() ng-show=\\\"ctrl.panelCtrl.panel.type !== 'table'\\\">\\n        <span ng-show=ctrl.target.rawQuery>Query Builder</span>\\n        <span ng-hide=ctrl.target.rawQuery>Edit SQL</span>\\n      </label>\\n    </div>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label query-keyword pointer\\\" ng-click=\\\"ctrl.showHelp = !ctrl.showHelp\\\">\\n        Show Help\\n        <i class=\\\"fa fa-caret-down\\\" ng-show=ctrl.showHelp></i>\\n        <i class=\\\"fa fa-caret-right\\\" ng-hide=ctrl.showHelp></i>\\n      </label>\\n    </div>\\n    <div class=gf-form ng-show=ctrl.lastQueryMeta>\\n      <label class=\\\"gf-form-label query-keyword pointer\\\" ng-click=\\\"ctrl.showLastQuerySQL = !ctrl.showLastQuerySQL\\\">\\n        Generated SQL\\n        <i class=\\\"fa fa-caret-down\\\" ng-show=ctrl.showLastQuerySQL></i>\\n        <i class=\\\"fa fa-caret-right\\\" ng-hide=ctrl.showLastQuerySQL></i>\\n      </label>\\n    </div>\\n    <div class=\\\"gf-form gf-form--grow\\\">\\n      <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n    </div>\\n  </div>\\n\\n  <div class=gf-form ng-show=ctrl.showLastQuerySQL>\\n    <pre class=gf-form-pre>{{ctrl.lastQueryMeta.sql}}</pre>\\n  </div>\\n\\n  <div class=gf-form ng-show=ctrl.showHelp>\\n    <pre class=\\\"gf-form-pre alert alert-info\\\">Time series:\\n- return column named <i>time</i> (UTC in seconds or timestamp)\\n- return column(s) with numeric datatype as values\\nOptional:\\n  - return column named <i>metric</i> to represent the series name.\\n  - If multiple value columns are returned the metric column is used as prefix.\\n  - If no column named metric is found the column name of the value column is used as series name\\n\\nResultsets of time series queries need to be sorted by time.\\n\\nTable:\\n- return any set of columns\\n\\nMacros:\\n- $__time(column) -&gt; column as \\\"time\\\"\\n- $__timeEpoch -&gt; extract(epoch from column) as \\\"time\\\"\\n- $__timeFilter(column) -&gt; column BETWEEN '2017-04-21T05:01:17Z' AND '2017-04-21T05:01:17Z'\\n- $__unixEpochFilter(column) -&gt;  column &gt;= 1492750877 AND column &lt;= 1492750877\\n- $__unixEpochNanoFilter(column) -&gt;  column &gt;= 1494410783152415214 AND column &lt;= 1494497183142514872\\n- $__timeGroup(column,'5m'[, fillvalue]) -&gt; (extract(epoch from column)/300)::bigint*300\\n     by setting fillvalue grafana will fill in missing values according to the interval\\n     fillvalue can be either a literal value, NULL or previous; previous will fill in the previous seen value or NULL if none has been seen yet\\n- $__timeGroupAlias(column,'5m') -&gt; (extract(epoch from column)/300)::bigint*300 AS \\\"time\\\"\\n- $__unixEpochGroup(column,'5m') -&gt; floor(column/300)*300\\n- $__unixEpochGroupAlias(column,'5m') -&gt; floor(column/300)*300 AS \\\"time\\\"\\n\\nExample of group by and order by with $__timeGroup:\\nSELECT\\n  $__timeGroup(date_time_col, '1h'),\\n  sum(value) as value\\nFROM yourtable\\nGROUP BY time\\nORDER BY time\\n\\nOr build your own conditionals using these macros which just return the values:\\n- $__timeFrom() -&gt;  '2017-04-21T05:01:17Z'\\n- $__timeTo() -&gt;  '2017-04-21T05:01:17Z'\\n- $__unixEpochFrom() -&gt;  1492750877\\n- $__unixEpochTo() -&gt;  1492750877\\n- $__unixEpochNanoFrom() -&gt;  1494410783152415214\\n- $__unixEpochNanoTo() -&gt;  1494497183142514872\\n    </pre>\\n  </div>\\n\\n  \\n\\n  <div class=gf-form ng-show=ctrl.lastQueryError>\\n    <pre class=\\\"gf-form-pre alert alert-error\\\">{{ctrl.lastQueryError}}</pre>\\n  </div>\\n\\n</query-editor-row>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/datasource/postgres/partials/annotations.editor.html';\nvar html = \"\\n<div class=gf-form-group>\\n  <div class=gf-form-inline>\\n\\t\\t<div class=\\\"gf-form gf-form--grow\\\">\\n\\t\\t\\t<textarea rows=10 class=gf-form-input ng-model=ctrl.annotation.rawQuery spellcheck=false placeholder=\\\"query expression\\\" data-min-length=0 data-items=100 ng-model-onblur ng-change=ctrl.panelCtrl.refresh()></textarea>\\n\\t\\t</div>\\n\\t</div>\\n\\n  <div class=gf-form-inline>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label query-keyword\\\" ng-click=\\\"ctrl.showHelp = !ctrl.showHelp\\\">\\n        Show Help\\n        <i class=\\\"fa fa-caret-down\\\" ng-show=ctrl.showHelp></i>\\n        <i class=\\\"fa fa-caret-right\\\" ng-hide=ctrl.showHelp></i>\\n      </label>\\n\\t\\t</div>\\n  </div>\\n\\n  <div class=gf-form ng-show=ctrl.showHelp>\\n\\t\\t<pre class=\\\"gf-form-pre alert alert-info\\\"><h6>Annotation Query Format</h6>\\nAn annotation is an event that is overlaid on top of graphs. The query can have up to three columns per row, the time column is mandatory. Annotation rendering is expensive so it is important to limit the number of rows returned.\\n\\n- column with alias: <b>time</b> for the annotation event time. Use epoch time or any native date data type.\\n- column with alias: <b>text</b> for the annotation text\\n- column with alias: <b>tags</b> for annotation tags. This is a comma separated string of tags e.g. 'tag1,tag2'\\n\\n\\nMacros:\\n- $__time(column) -&gt; column as \\\"time\\\"\\n- $__timeEpoch -&gt; extract(epoch from column) as \\\"time\\\"\\n- $__timeFilter(column) -&gt; column BETWEEN '2017-04-21T05:01:17Z' AND '2017-04-21T05:01:17Z'\\n- $__unixEpochFilter(column) -&gt;  column &gt;= 1492750877 AND column &lt;= 1492750877\\n- $__unixEpochNanoFilter(column) -&gt;  column &gt;= 1494410783152415214 AND column &lt;= 1494497183142514872\\n\\nOr build your own conditionals using these macros which just return the values:\\n- $__timeFrom() -&gt;  '2017-04-21T05:01:17Z'\\n- $__timeTo() -&gt;  '2017-04-21T05:01:17Z'\\n- $__unixEpochFrom() -&gt;  1492750877\\n- $__unixEpochTo() -&gt;  1492750877\\n- $__unixEpochNanoFrom() -&gt;  1494410783152415214\\n- $__unixEpochNanoTo() -&gt;  1494497183142514872\\n\\t\\t</pre>\\n\\t</div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { actionCreatorFactory, noPayloadActionCreatorFactory } from '../../../../core/redux';\nimport { PanelEditorTabIds, PanelEditorTab, getPanelEditorTab } from './reducers';\nimport { ThunkResult } from '../../../../types';\nimport { updateLocation } from '../../../../core/actions';\n\nexport interface PanelEditorInitCompleted {\n  activeTab: PanelEditorTabIds;\n  tabs: PanelEditorTab[];\n}\n\nexport const panelEditorInitCompleted = actionCreatorFactory<PanelEditorInitCompleted>(\n  'PANEL_EDITOR_INIT_COMPLETED'\n).create();\n\nexport const panelEditorCleanUp = noPayloadActionCreatorFactory('PANEL_EDITOR_CLEAN_UP').create();\n\nexport const refreshPanelEditor = (props: {\n  hasQueriesTab?: boolean;\n  usesGraphPlugin?: boolean;\n  alertingEnabled?: boolean;\n}): ThunkResult<void> => {\n  return async (dispatch, getState) => {\n    let activeTab = getState().panelEditor.activeTab || PanelEditorTabIds.Queries;\n    const { hasQueriesTab, usesGraphPlugin, alertingEnabled } = props;\n\n    const tabs: PanelEditorTab[] = [\n      getPanelEditorTab(PanelEditorTabIds.Queries),\n      getPanelEditorTab(PanelEditorTabIds.Visualization),\n      getPanelEditorTab(PanelEditorTabIds.Advanced),\n    ];\n\n    // handle panels that do not have queries tab\n    if (!hasQueriesTab) {\n      // remove queries tab\n      tabs.shift();\n      // switch tab\n      if (activeTab === PanelEditorTabIds.Queries) {\n        activeTab = PanelEditorTabIds.Visualization;\n      }\n    }\n\n    if (alertingEnabled && usesGraphPlugin) {\n      tabs.push(getPanelEditorTab(PanelEditorTabIds.Alert));\n    }\n\n    dispatch(panelEditorInitCompleted({ activeTab, tabs }));\n  };\n};\n\nexport const changePanelEditorTab = (activeTab: PanelEditorTab): ThunkResult<void> => {\n  return async dispatch => {\n    dispatch(updateLocation({ query: { tab: activeTab.id, openVizPicker: null }, partial: true }));\n  };\n};\n","import includes from 'lodash/includes';\nimport isDate from 'lodash/isDate';\nimport { DateTime, dateTime, dateTimeForTimeZone, ISO_8601, isDateTime, DurationUnit } from './moment_wrapper';\nimport { TimeZone } from '../types/index';\n\nconst units: DurationUnit[] = ['y', 'M', 'w', 'd', 'h', 'm', 's'];\n\nexport function isMathString(text: string | DateTime | Date): boolean {\n  if (!text) {\n    return false;\n  }\n\n  if (typeof text === 'string' && (text.substring(0, 3) === 'now' || text.includes('||'))) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Parses different types input to a moment instance. There is a specific formatting language that can be used\n * if text arg is string. See unit tests for examples.\n * @param text\n * @param roundUp See parseDateMath function.\n * @param timezone Only string 'utc' is acceptable here, for anything else, local timezone is used.\n */\nexport function parse(text: string | DateTime | Date, roundUp?: boolean, timezone?: TimeZone): DateTime | undefined {\n  if (!text) {\n    return undefined;\n  }\n\n  if (typeof text !== 'string') {\n    if (isDateTime(text)) {\n      return text;\n    }\n    if (isDate(text)) {\n      return dateTime(text);\n    }\n    // We got some non string which is not a moment nor Date. TS should be able to check for that but not always.\n    return undefined;\n  } else {\n    let time;\n    let mathString = '';\n    let index;\n    let parseString;\n\n    if (text.substring(0, 3) === 'now') {\n      time = dateTimeForTimeZone(timezone);\n      mathString = text.substring('now'.length);\n    } else {\n      index = text.indexOf('||');\n      if (index === -1) {\n        parseString = text;\n        mathString = ''; // nothing else\n      } else {\n        parseString = text.substring(0, index);\n        mathString = text.substring(index + 2);\n      }\n      // We're going to just require ISO8601 timestamps, k?\n      time = dateTime(parseString, ISO_8601);\n    }\n\n    if (!mathString.length) {\n      return time;\n    }\n\n    return parseDateMath(mathString, time, roundUp);\n  }\n}\n\n/**\n * Checks if text is a valid date which in this context means that it is either a Moment instance or it can be parsed\n * by parse function. See parse function to see what is considered acceptable.\n * @param text\n */\nexport function isValid(text: string | DateTime): boolean {\n  const date = parse(text);\n  if (!date) {\n    return false;\n  }\n\n  if (isDateTime(date)) {\n    return date.isValid();\n  }\n\n  return false;\n}\n\n/**\n * Parses math part of the time string and shifts supplied time according to that math. See unit tests for examples.\n * @param mathString\n * @param time\n * @param roundUp If true it will round the time to endOf time unit, otherwise to startOf time unit.\n */\n// TODO: Had to revert Andrejs `time: moment.Moment` to `time: any`\nexport function parseDateMath(mathString: string, time: any, roundUp?: boolean): DateTime | undefined {\n  const strippedMathString = mathString.replace(/\\s/g, '');\n  const dateTime = time;\n  let i = 0;\n  const len = strippedMathString.length;\n\n  while (i < len) {\n    const c = strippedMathString.charAt(i++);\n    let type;\n    let num;\n    let unit;\n\n    if (c === '/') {\n      type = 0;\n    } else if (c === '+') {\n      type = 1;\n    } else if (c === '-') {\n      type = 2;\n    } else {\n      return undefined;\n    }\n\n    if (isNaN(parseInt(strippedMathString.charAt(i), 10))) {\n      num = 1;\n    } else if (strippedMathString.length === 2) {\n      num = strippedMathString.charAt(i);\n    } else {\n      const numFrom = i;\n      while (!isNaN(parseInt(strippedMathString.charAt(i), 10))) {\n        i++;\n        if (i > 10) {\n          return undefined;\n        }\n      }\n      num = parseInt(strippedMathString.substring(numFrom, i), 10);\n    }\n\n    if (type === 0) {\n      // rounding is only allowed on whole, single, units (eg M or 1M, not 0.5M or 2M)\n      if (num !== 1) {\n        return undefined;\n      }\n    }\n    unit = strippedMathString.charAt(i++);\n\n    if (!includes(units, unit)) {\n      return undefined;\n    } else {\n      if (type === 0) {\n        if (roundUp) {\n          dateTime.endOf(unit);\n        } else {\n          dateTime.startOf(unit);\n        }\n      } else if (type === 1) {\n        dateTime.add(num, unit);\n      } else if (type === 2) {\n        dateTime.subtract(num, unit);\n      }\n    }\n  }\n  return dateTime;\n}\n","import each from 'lodash/each';\nimport groupBy from 'lodash/groupBy';\n\nimport { RawTimeRange } from '../types/time';\n\nimport * as dateMath from './datemath';\nimport { isDateTime, DateTime } from './moment_wrapper';\n\nconst spans: { [key: string]: { display: string; section?: number } } = {\n  s: { display: 'second' },\n  m: { display: 'minute' },\n  h: { display: 'hour' },\n  d: { display: 'day' },\n  w: { display: 'week' },\n  M: { display: 'month' },\n  y: { display: 'year' },\n};\n\nconst rangeOptions = [\n  { from: 'now/d', to: 'now/d', display: 'Today', section: 2 },\n  { from: 'now/d', to: 'now', display: 'Today so far', section: 2 },\n  { from: 'now/w', to: 'now/w', display: 'This week', section: 2 },\n  { from: 'now/w', to: 'now', display: 'This week so far', section: 2 },\n  { from: 'now/M', to: 'now/M', display: 'This month', section: 2 },\n  { from: 'now/M', to: 'now', display: 'This month so far', section: 2 },\n  { from: 'now/y', to: 'now/y', display: 'This year', section: 2 },\n  { from: 'now/y', to: 'now', display: 'This year so far', section: 2 },\n\n  { from: 'now-1d/d', to: 'now-1d/d', display: 'Yesterday', section: 1 },\n  {\n    from: 'now-2d/d',\n    to: 'now-2d/d',\n    display: 'Day before yesterday',\n    section: 1,\n  },\n  {\n    from: 'now-7d/d',\n    to: 'now-7d/d',\n    display: 'This day last week',\n    section: 1,\n  },\n  { from: 'now-1w/w', to: 'now-1w/w', display: 'Previous week', section: 1 },\n  { from: 'now-1M/M', to: 'now-1M/M', display: 'Previous month', section: 1 },\n  { from: 'now-1y/y', to: 'now-1y/y', display: 'Previous year', section: 1 },\n\n  { from: 'now-5m', to: 'now', display: 'Last 5 minutes', section: 3 },\n  { from: 'now-15m', to: 'now', display: 'Last 15 minutes', section: 3 },\n  { from: 'now-30m', to: 'now', display: 'Last 30 minutes', section: 3 },\n  { from: 'now-1h', to: 'now', display: 'Last 1 hour', section: 3 },\n  { from: 'now-3h', to: 'now', display: 'Last 3 hours', section: 3 },\n  { from: 'now-6h', to: 'now', display: 'Last 6 hours', section: 3 },\n  { from: 'now-12h', to: 'now', display: 'Last 12 hours', section: 3 },\n  { from: 'now-24h', to: 'now', display: 'Last 24 hours', section: 3 },\n  { from: 'now-2d', to: 'now', display: 'Last 2 days', section: 0 },\n  { from: 'now-7d', to: 'now', display: 'Last 7 days', section: 0 },\n  { from: 'now-30d', to: 'now', display: 'Last 30 days', section: 0 },\n  { from: 'now-90d', to: 'now', display: 'Last 90 days', section: 0 },\n  { from: 'now-6M', to: 'now', display: 'Last 6 months', section: 0 },\n  { from: 'now-1y', to: 'now', display: 'Last 1 year', section: 0 },\n  { from: 'now-2y', to: 'now', display: 'Last 2 years', section: 0 },\n  { from: 'now-5y', to: 'now', display: 'Last 5 years', section: 0 },\n];\n\nconst absoluteFormat = 'YYYY-MM-DD HH:mm:ss';\n\nconst rangeIndex: any = {};\neach(rangeOptions, (frame: any) => {\n  rangeIndex[frame.from + ' to ' + frame.to] = frame;\n});\n\nexport function getRelativeTimesList(timepickerSettings: any, currentDisplay: any) {\n  const groups = groupBy(rangeOptions, (option: any) => {\n    option.active = option.display === currentDisplay;\n    return option.section;\n  });\n\n  // _.each(timepickerSettings.time_options, (duration: string) => {\n  //   let info = describeTextRange(duration);\n  //   if (info.section) {\n  //     groups[info.section].push(info);\n  //   }\n  // });\n\n  return groups;\n}\n\nfunction formatDate(date: DateTime) {\n  return date.format(absoluteFormat);\n}\n\n// handles expressions like\n// 5m\n// 5m to now/d\n// now/d to now\n// now/d\n// if no to <expr> then to now is assumed\nexport function describeTextRange(expr: any) {\n  const isLast = expr.indexOf('+') !== 0;\n  if (expr.indexOf('now') === -1) {\n    expr = (isLast ? 'now-' : 'now') + expr;\n  }\n\n  let opt = rangeIndex[expr + ' to now'];\n  if (opt) {\n    return opt;\n  }\n\n  if (isLast) {\n    opt = { from: expr, to: 'now' };\n  } else {\n    opt = { from: 'now', to: expr };\n  }\n\n  const parts = /^now([-+])(\\d+)(\\w)/.exec(expr);\n  if (parts) {\n    const unit = parts[3];\n    const amount = parseInt(parts[2], 10);\n    const span = spans[unit];\n    if (span) {\n      opt.display = isLast ? 'Last ' : 'Next ';\n      opt.display += amount + ' ' + span.display;\n      opt.section = span.section;\n      if (amount > 1) {\n        opt.display += 's';\n      }\n    }\n  } else {\n    opt.display = opt.from + ' to ' + opt.to;\n    opt.invalid = true;\n  }\n\n  return opt;\n}\n\nexport function describeTimeRange(range: RawTimeRange): string {\n  const option = rangeIndex[range.from.toString() + ' to ' + range.to.toString()];\n  if (option) {\n    return option.display;\n  }\n\n  if (isDateTime(range.from) && isDateTime(range.to)) {\n    return formatDate(range.from) + ' to ' + formatDate(range.to);\n  }\n\n  if (isDateTime(range.from)) {\n    const toMoment = dateMath.parse(range.to, true);\n    return toMoment ? formatDate(range.from) + ' to ' + toMoment.fromNow() : '';\n  }\n\n  if (isDateTime(range.to)) {\n    const from = dateMath.parse(range.from, false);\n    return from ? from.fromNow() + ' to ' + formatDate(range.to) : '';\n  }\n\n  if (range.to.toString() === 'now') {\n    const res = describeTextRange(range.from);\n    return res.display;\n  }\n\n  return range.from.toString() + ' to ' + range.to.toString();\n}\n\nexport const isValidTimeSpan = (value: string) => {\n  if (value.indexOf('$') === 0 || value.indexOf('+$') === 0) {\n    return true;\n  }\n\n  const info = describeTextRange(value);\n  return info.invalid !== true;\n};\n","// List taken from https://stackoverflow.com/questions/38399465/how-to-get-list-of-all-timezones-in-javascript\n\nexport const getTimeZoneGroups = () => {\n  const europeZones = [\n    'Europe/Amsterdam',\n    'Europe/Andorra',\n    'Europe/Astrakhan',\n    'Europe/Athens',\n    'Europe/Belgrade',\n    'Europe/Berlin',\n    'Europe/Brussels',\n    'Europe/Bucharest',\n    'Europe/Budapest',\n    'Europe/Chisinau',\n    'Europe/Copenhagen',\n    'Europe/Dublin',\n    'Europe/Gibraltar',\n    'Europe/Helsinki',\n    'Europe/Istanbul',\n    'Europe/Kaliningrad',\n    'Europe/Kiev',\n    'Europe/Kirov',\n    'Europe/Lisbon',\n    'Europe/London',\n    'Europe/Luxembourg',\n    'Europe/Madrid',\n    'Europe/Malta',\n    'Europe/Minsk',\n    'Europe/Monaco',\n    'Europe/Moscow',\n    'Europe/Oslo',\n    'Europe/Paris',\n    'Europe/Prague',\n    'Europe/Riga',\n    'Europe/Rome',\n    'Europe/Samara',\n    'Europe/Saratov',\n    'Europe/Simferopol',\n    'Europe/Sofia',\n    'Europe/Stockholm',\n    'Europe/Tallinn',\n    'Europe/Tirane',\n    'Europe/Ulyanovsk',\n    'Europe/Uzhgorod',\n    'Europe/Vienna',\n    'Europe/Vilnius',\n    'Europe/Volgograd',\n    'Europe/Warsaw',\n    'Europe/Zaporozhye',\n    'Europe/Zurich',\n  ];\n\n  const africaZones = [\n    'Africa/Abidjan',\n    'Africa/Accra',\n    'Africa/Algiers',\n    'Africa/Bissau',\n    'Africa/Cairo',\n    'Africa/Casablanca',\n    'Africa/Ceuta',\n    'Africa/El_Aaiun',\n    'Africa/Johannesburg',\n    'Africa/Juba',\n    'Africa/Khartoum',\n    'Africa/Lagos',\n    'Africa/Maputo',\n    'Africa/Monrovia',\n    'Africa/Nairobi',\n    'Africa/Ndjamena',\n    'Africa/Sao_Tome',\n    'Africa/Tripoli',\n    'Africa/Tunis',\n    'Africa/Windhoek',\n  ];\n\n  const asiaZones = [\n    'Asia/Almaty',\n    'Asia/Amman',\n    'Asia/Anadyr',\n    'Asia/Aqtau',\n    'Asia/Aqtobe',\n    'Asia/Ashgabat',\n    'Asia/Atyrau',\n    'Asia/Baghdad',\n    'Asia/Baku',\n    'Asia/Bangkok',\n    'Asia/Barnaul',\n    'Asia/Beirut',\n    'Asia/Bishkek',\n    'Asia/Brunei',\n    'Asia/Chita',\n    'Asia/Choibalsan',\n    'Asia/Colombo',\n    'Asia/Damascus',\n    'Asia/Dhaka',\n    'Asia/Dili',\n    'Asia/Dubai',\n    'Asia/Dushanbe',\n    'Asia/Famagusta',\n    'Asia/Gaza',\n    'Asia/Hebron',\n    'Asia/Ho_Chi_Minh',\n    'Asia/Hong_Kong',\n    'Asia/Hovd',\n    'Asia/Irkutsk',\n    'Asia/Jakarta',\n    'Asia/Jayapura',\n    'Asia/Jerusalem',\n    'Asia/Kabul',\n    'Asia/Kamchatka',\n    'Asia/Karachi',\n    'Asia/Kathmandu',\n    'Asia/Khandyga',\n    'Asia/Kolkata',\n    'Asia/Krasnoyarsk',\n    'Asia/Kuala_Lumpur',\n    'Asia/Kuching',\n    'Asia/Macau',\n    'Asia/Magadan',\n    'Asia/Makassar',\n    'Asia/Manila',\n    'Asia/Nicosia',\n    'Asia/Novokuznetsk',\n    'Asia/Novosibirsk',\n    'Asia/Omsk',\n    'Asia/Oral',\n    'Asia/Pontianak',\n    'Asia/Pyongyang',\n    'Asia/Qatar',\n    'Asia/Qostanay',\n    'Asia/Qyzylorda',\n    'Asia/Riyadh',\n    'Asia/Sakhalin',\n    'Asia/Samarkand',\n    'Asia/Seoul',\n    'Asia/Shanghai',\n    'Asia/Singapore',\n    'Asia/Srednekolymsk',\n    'Asia/Taipei',\n    'Asia/Tashkent',\n    'Asia/Tbilisi',\n    'Asia/Tehran',\n    'Asia/Thimphu',\n    'Asia/Tokyo',\n    'Asia/Tomsk',\n    'Asia/Ulaanbaatar',\n    'Asia/Urumqi',\n    'Asia/Ust-Nera',\n    'Asia/Vladivostok',\n    'Asia/Yakutsk',\n    'Asia/Yangon',\n    'Asia/Yekaterinburg',\n    'Asia/Yerevan',\n  ];\n\n  const antarcticaZones = [\n    'Antarctica/Casey',\n    'Antarctica/Davis',\n    'Antarctica/DumontDUrville',\n    'Antarctica/Macquarie',\n    'Antarctica/Mawson',\n    'Antarctica/Palmer',\n    'Antarctica/Rothera',\n    'Antarctica/Syowa',\n    'Antarctica/Troll',\n    'Antarctica/Vostok',\n  ];\n\n  const americaZones = [\n    'America/Adak',\n    'America/Anchorage',\n    'America/Araguaina',\n    'America/Argentina/Buenos_Aires',\n    'America/Argentina/Catamarca',\n    'America/Argentina/Cordoba',\n    'America/Argentina/Jujuy',\n    'America/Argentina/La_Rioja',\n    'America/Argentina/Mendoza',\n    'America/Argentina/Rio_Gallegos',\n    'America/Argentina/Salta',\n    'America/Argentina/San_Juan',\n    'America/Argentina/San_Luis',\n    'America/Argentina/Tucuman',\n    'America/Argentina/Ushuaia',\n    'America/Asuncion',\n    'America/Atikokan',\n    'America/Bahia',\n    'America/Bahia_Banderas',\n    'America/Barbados',\n    'America/Belem',\n    'America/Belize',\n    'America/Blanc-Sablon',\n    'America/Boa_Vista',\n    'America/Bogota',\n    'America/Boise',\n    'America/Cambridge_Bay',\n    'America/Campo_Grande',\n    'America/Cancun',\n    'America/Caracas',\n    'America/Cayenne',\n    'America/Chicago',\n    'America/Chihuahua',\n    'America/Costa_Rica',\n    'America/Creston',\n    'America/Cuiaba',\n    'America/Curacao',\n    'America/Danmarkshavn',\n    'America/Dawson',\n    'America/Dawson_Creek',\n    'America/Denver',\n    'America/Detroit',\n    'America/Edmonton',\n    'America/Eirunepe',\n    'America/El_Salvador',\n    'America/Fort_Nelson',\n    'America/Fortaleza',\n    'America/Glace_Bay',\n    'America/Godthab',\n    'America/Goose_Bay',\n    'America/Grand_Turk',\n    'America/Guatemala',\n    'America/Guayaquil',\n    'America/Guyana',\n    'America/Halifax',\n    'America/Havana',\n    'America/Hermosillo',\n    'America/Indiana/Indianapolis',\n    'America/Indiana/Knox',\n    'America/Indiana/Marengo',\n    'America/Indiana/Petersburg',\n    'America/Indiana/Tell_City',\n    'America/Indiana/Vevay',\n    'America/Indiana/Vincennes',\n    'America/Indiana/Winamac',\n    'America/Inuvik',\n    'America/Iqaluit',\n    'America/Jamaica',\n    'America/Juneau',\n    'America/Kentucky/Louisville',\n    'America/Kentucky/Monticello',\n    'America/La_Paz',\n    'America/Lima',\n    'America/Los_Angeles',\n    'America/Maceio',\n    'America/Managua',\n    'America/Manaus',\n    'America/Martinique',\n    'America/Matamoros',\n    'America/Mazatlan',\n    'America/Menominee',\n    'America/Merida',\n    'America/Metlakatla',\n    'America/Mexico_City',\n    'America/Miquelon',\n    'America/Moncton',\n    'America/Monterrey',\n    'America/Montevideo',\n    'America/Nassau',\n    'America/New_York',\n    'America/Nipigon',\n    'America/Nome',\n    'America/Noronha',\n    'America/North_Dakota/Beulah',\n    'America/North_Dakota/Center',\n    'America/North_Dakota/New_Salem',\n    'America/Ojinaga',\n    'America/Panama',\n    'America/Pangnirtung',\n    'America/Paramaribo',\n    'America/Phoenix',\n    'America/Port-au-Prince',\n    'America/Port_of_Spain',\n    'America/Porto_Velho',\n    'America/Puerto_Rico',\n    'America/Punta_Arenas',\n    'America/Rainy_River',\n    'America/Rankin_Inlet',\n    'America/Recife',\n    'America/Regina',\n    'America/Resolute',\n    'America/Rio_Branco',\n    'America/Santarem',\n    'America/Santiago',\n    'America/Santo_Domingo',\n    'America/Sao_Paulo',\n    'America/Scoresbysund',\n    'America/Sitka',\n    'America/St_Johns',\n    'America/Swift_Current',\n    'America/Tegucigalpa',\n    'America/Thule',\n    'America/Thunder_Bay',\n    'America/Tijuana',\n    'America/Toronto',\n    'America/Vancouver',\n    'America/Whitehorse',\n    'America/Winnipeg',\n    'America/Yakutat',\n    'America/Yellowknife',\n  ];\n\n  const pacificZones = [\n    'Pacific/Apia',\n    'Pacific/Auckland',\n    'Pacific/Bougainville',\n    'Pacific/Chatham',\n    'Pacific/Chuuk',\n    'Pacific/Easter',\n    'Pacific/Efate',\n    'Pacific/Enderbury',\n    'Pacific/Fakaofo',\n    'Pacific/Fiji',\n    'Pacific/Funafuti',\n    'Pacific/Galapagos',\n    'Pacific/Gambier',\n    'Pacific/Guadalcanal',\n    'Pacific/Guam',\n    'Pacific/Honolulu',\n    'Pacific/Kiritimati',\n    'Pacific/Kosrae',\n    'Pacific/Kwajalein',\n    'Pacific/Majuro',\n    'Pacific/Marquesas',\n    'Pacific/Nauru',\n    'Pacific/Niue',\n    'Pacific/Norfolk',\n    'Pacific/Noumea',\n    'Pacific/Pago_Pago',\n    'Pacific/Palau',\n    'Pacific/Pitcairn',\n    'Pacific/Pohnpei',\n    'Pacific/Port_Moresby',\n    'Pacific/Rarotonga',\n    'Pacific/Tahiti',\n    'Pacific/Tarawa',\n    'Pacific/Tongatapu',\n    'Pacific/Wake',\n    'Pacific/Wallis',\n  ];\n\n  const australiaZones = [\n    'Australia/Adelaide',\n    'Australia/Brisbane',\n    'Australia/Broken_Hill',\n    'Australia/Currie',\n    'Australia/Darwin',\n    'Australia/Eucla',\n    'Australia/Hobart',\n    'Australia/Lindeman',\n    'Australia/Lord_Howe',\n    'Australia/Melbourne',\n    'Australia/Perth',\n    'Australia/Sydney',\n  ];\n\n  const atlanticZones = [\n    'Atlantic/Azores',\n    'Atlantic/Bermuda',\n    'Atlantic/Canary',\n    'Atlantic/Cape_Verde',\n    'Atlantic/Faroe',\n    'Atlantic/Madeira',\n    'Atlantic/Reykjavik',\n    'Atlantic/South_Georgia',\n    'Atlantic/Stanley',\n  ];\n\n  const indianZones = [\n    'Indian/Chagos',\n    'Indian/Christmas',\n    'Indian/Cocos',\n    'Indian/Kerguelen',\n    'Indian/Mahe',\n    'Indian/Maldives',\n    'Indian/Mauritius',\n    'Indian/Reunion',\n  ];\n\n  return [\n    { label: 'Africa', options: africaZones },\n    { label: 'America', options: americaZones },\n    { label: 'Antarctica', options: antarcticaZones },\n    { label: 'Asia', options: asiaZones },\n    { label: 'Atlantic', options: atlanticZones },\n    { label: 'Australia', options: australiaZones },\n    { label: 'Europe', options: europeZones },\n    { label: 'Indian', options: indianZones },\n    { label: 'Pacific', options: pacificZones },\n  ];\n};\n","import { GrafanaThemeCommons } from '../types/theme';\n\nconst theme: GrafanaThemeCommons = {\n  name: 'Grafana Default',\n  typography: {\n    fontFamily: {\n      sansSerif: \"'Roboto', 'Helvetica Neue', Arial, sans-serif\",\n      monospace: \"Menlo, Monaco, Consolas, 'Courier New', monospace\",\n    },\n    size: {\n      root: '14px',\n      base: '13px',\n      xs: '10px',\n      sm: '12px',\n      md: '14px',\n      lg: '18px',\n    },\n    heading: {\n      h1: '28px',\n      h2: '24px',\n      h3: '21px',\n      h4: '18px',\n      h5: '16px',\n      h6: '14px',\n    },\n    weight: {\n      light: 300,\n      regular: 400,\n      semibold: 500,\n    },\n    lineHeight: {\n      xs: 1,\n      sm: 1.1,\n      md: 4 / 3,\n      lg: 1.5,\n    },\n    link: {\n      decoration: 'none',\n      hoverDecoration: 'none',\n    },\n  },\n  breakpoints: {\n    xs: '0',\n    sm: '544px',\n    md: '769px', // 1 more than regular ipad in portrait\n    lg: '992px',\n    xl: '1200px',\n  },\n  spacing: {\n    insetSquishMd: '4px 8px',\n    d: '14px',\n    xxs: '2px',\n    xs: '4px',\n    sm: '8px',\n    md: '16px',\n    lg: '24px',\n    xl: '32px',\n    gutter: '30px',\n  },\n  border: {\n    radius: {\n      sm: '2px',\n      md: '3px',\n      lg: '5px',\n    },\n    width: {\n      sm: '1px',\n    },\n  },\n  height: {\n    sm: '24px',\n    md: '32px',\n    lg: '48px',\n  },\n  panelPadding: 8,\n  panelHeaderHeight: 28,\n  zIndex: {\n    dropdown: '1000',\n    navbarFixed: '1020',\n    sidemenu: '1025',\n    tooltip: '1030',\n    modalBackdrop: '1040',\n    modal: '1050',\n    typeahead: '1060',\n  },\n};\n\nexport default theme;\n","// Names are too general to export globally\nimport * as dateMath from './datemath';\nimport * as rangeUtil from './rangeutil';\nexport * from './moment_wrapper';\nexport * from './timezones';\nexport { dateMath, rangeUtil };\n","// Services & Utils\nimport { getBackendSrv } from '@grafana/runtime';\nimport { actionCreatorFactory, noPayloadActionCreatorFactory } from 'app/core/redux';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\n// Actions\nimport { loadPluginDashboards } from '../../plugins/state/actions';\nimport { notifyApp } from 'app/core/actions';\n// Types\nimport {\n  ThunkResult,\n  DashboardAcl,\n  DashboardAclDTO,\n  PermissionLevel,\n  DashboardAclUpdateDTO,\n  NewDashboardAclItem,\n  MutableDashboard,\n  DashboardInitError,\n} from 'app/types';\n\nexport const loadDashboardPermissions = actionCreatorFactory<DashboardAclDTO[]>('LOAD_DASHBOARD_PERMISSIONS').create();\n\nexport const dashboardInitFetching = noPayloadActionCreatorFactory('DASHBOARD_INIT_FETCHING').create();\n\nexport const dashboardInitServices = noPayloadActionCreatorFactory('DASHBOARD_INIT_SERVICES').create();\n\nexport const dashboardInitSlow = noPayloadActionCreatorFactory('SET_DASHBOARD_INIT_SLOW').create();\n\nexport const dashboardInitCompleted = actionCreatorFactory<MutableDashboard>('DASHBOARD_INIT_COMLETED').create();\n\n/*\n * Unrecoverable init failure (fetch or model creation failed)\n */\nexport const dashboardInitFailed = actionCreatorFactory<DashboardInitError>('DASHBOARD_INIT_FAILED').create();\n\n/*\n * When leaving dashboard, resets state\n * */\nexport const cleanUpDashboard = noPayloadActionCreatorFactory('DASHBOARD_CLEAN_UP').create();\n\nexport function getDashboardPermissions(id: number): ThunkResult<void> {\n  return async dispatch => {\n    const permissions = await getBackendSrv().get(`/api/dashboards/id/${id}/permissions`);\n    dispatch(loadDashboardPermissions(permissions));\n  };\n}\n\nfunction toUpdateItem(item: DashboardAcl): DashboardAclUpdateDTO {\n  return {\n    userId: item.userId,\n    teamId: item.teamId,\n    role: item.role,\n    permission: item.permission,\n  };\n}\n\nexport function updateDashboardPermission(\n  dashboardId: number,\n  itemToUpdate: DashboardAcl,\n  level: PermissionLevel\n): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const { dashboard } = getStore();\n    const itemsToUpdate = [];\n\n    for (const item of dashboard.permissions) {\n      if (item.inherited) {\n        continue;\n      }\n\n      const updated = toUpdateItem(item);\n\n      // if this is the item we want to update, update it's permission\n      if (itemToUpdate === item) {\n        updated.permission = level;\n      }\n\n      itemsToUpdate.push(updated);\n    }\n\n    await getBackendSrv().post(`/api/dashboards/id/${dashboardId}/permissions`, { items: itemsToUpdate });\n    await dispatch(getDashboardPermissions(dashboardId));\n  };\n}\n\nexport function removeDashboardPermission(dashboardId: number, itemToDelete: DashboardAcl): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const dashboard = getStore().dashboard;\n    const itemsToUpdate = [];\n\n    for (const item of dashboard.permissions) {\n      if (item.inherited || item === itemToDelete) {\n        continue;\n      }\n      itemsToUpdate.push(toUpdateItem(item));\n    }\n\n    await getBackendSrv().post(`/api/dashboards/id/${dashboardId}/permissions`, { items: itemsToUpdate });\n    await dispatch(getDashboardPermissions(dashboardId));\n  };\n}\n\nexport function addDashboardPermission(dashboardId: number, newItem: NewDashboardAclItem): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const { dashboard } = getStore();\n    const itemsToUpdate = [];\n\n    for (const item of dashboard.permissions) {\n      if (item.inherited) {\n        continue;\n      }\n      itemsToUpdate.push(toUpdateItem(item));\n    }\n\n    itemsToUpdate.push({\n      userId: newItem.userId,\n      teamId: newItem.teamId,\n      role: newItem.role,\n      permission: newItem.permission,\n    });\n\n    await getBackendSrv().post(`/api/dashboards/id/${dashboardId}/permissions`, { items: itemsToUpdate });\n    await dispatch(getDashboardPermissions(dashboardId));\n  };\n}\n\nexport function importDashboard(data: any, dashboardTitle: string): ThunkResult<void> {\n  return async dispatch => {\n    await getBackendSrv().post('/api/dashboards/import', data);\n    dispatch(notifyApp(createSuccessNotification('Dashboard Imported', dashboardTitle)));\n    dispatch(loadPluginDashboards());\n  };\n}\n\nexport function removeDashboard(uri: string): ThunkResult<void> {\n  return async dispatch => {\n    await getBackendSrv().delete(`/api/dashboards/${uri}`);\n    dispatch(loadPluginDashboards());\n  };\n}\n","import defaultTheme from './default';\nimport { GrafanaTheme, GrafanaThemeType } from '../types/theme';\n\nconst basicColors = {\n  black: '#000000',\n  white: '#ffffff',\n  dark1: '#141414',\n  dark2: '#161719',\n  dark3: '#1f1f20',\n  dark4: '#212124',\n  dark5: '#222426',\n  dark6: '#262628',\n  dark7: '#292a2d',\n  dark8: '#2f2f32',\n  dark9: '#343436',\n  dark10: '#424345',\n  gray1: '#555555',\n  gray2: '#8e8e8e',\n  gray3: '#b3b3b3',\n  gray4: '#d8d9da',\n  gray5: '#ececec',\n  gray6: '#f4f5f8', // not used in dark theme\n  gray7: '#fbfbfb', // not used in dark theme\n  grayBlue: '#212327',\n  blueBase: '#3274d9',\n  blueShade: '#1f60c4',\n  blueLight: '#5794f2',\n  blueFaint: '#041126',\n  redBase: '#e02f44',\n  redShade: '#c4162a',\n  greenBase: '#299c46',\n  greenShade: '#23843b',\n  blue: '#33b5e5',\n  red: '#d44a3a',\n  yellow: '#ecbb13',\n  purple: '#9933cc',\n  variable: '#32d1df',\n  orange: '#eb7b18',\n};\n\nconst darkTheme: GrafanaTheme = {\n  ...defaultTheme,\n  type: GrafanaThemeType.Dark,\n  name: 'Grafana Dark',\n  colors: {\n    ...basicColors,\n    inputBlack: '#09090b',\n    brandPrimary: basicColors.orange,\n    brandSuccess: basicColors.greenBase,\n    brandWarning: basicColors.orange,\n    brandDanger: basicColors.redBase,\n    queryRed: basicColors.redBase,\n    queryGreen: '#74e680',\n    queryPurple: '#fe85fc',\n    queryKeyword: '#66d9ef',\n    queryOrange: basicColors.orange,\n    online: basicColors.greenBase,\n    warn: '#f79520',\n    critical: basicColors.redBase,\n    bodyBg: basicColors.dark2,\n    pageBg: basicColors.dark2,\n    body: basicColors.gray4,\n    text: basicColors.gray4,\n    textStrong: basicColors.white,\n    textWeak: basicColors.gray2,\n    textEmphasis: basicColors.gray5,\n    textFaint: basicColors.dark5,\n    link: basicColors.gray4,\n    linkDisabled: basicColors.gray2,\n    linkHover: basicColors.white,\n    linkExternal: basicColors.blue,\n    headingColor: basicColors.gray4,\n  },\n  background: {\n    dropdown: basicColors.dark3,\n    scrollbar: basicColors.dark9,\n    scrollbar2: basicColors.dark9,\n  },\n};\n\nexport default darkTheme;\n","import defaultTheme from './default';\nimport { GrafanaTheme, GrafanaThemeType } from '../types/theme';\n\nconst basicColors = {\n  black: '#000000',\n  white: '#ffffff',\n  dark1: '#1e2028',\n  dark2: '#41444b',\n  dark3: '#303133', // not used in light theme\n  dark4: '#35373f', // not used in light theme\n  dark5: '#41444b', // not used in light theme\n  dark6: '#41444b', // not used in light theme\n  dark7: '#41444b', // not used in light theme\n  dark8: '#2f2f32', // not used in light theme\n  dark9: '#343436', // not used in light theme\n  dark10: '#424345', // not used in light theme\n  gray1: '#52545c',\n  gray2: '#767980',\n  gray3: '#acb6bf',\n  gray4: '#c7d0d9',\n  gray5: '#dde4ed',\n  gray6: '#e9edf2',\n  gray7: '#f7f8fa',\n  grayBlue: '#212327', // not used in light theme\n  blueBase: '#3274d9',\n  blueShade: '#1f60c4',\n  blueLight: '#5794f2',\n  blueFaint: '#f5f9ff',\n  redBase: '#e02f44',\n  redShade: '#c4162a',\n  greenBase: '#3eb15b',\n  greenShade: '#369b4f',\n  blue: '#0083b3',\n  red: '#d44939',\n  yellow: '#ff851b',\n  purple: '#9954bb',\n  variable: '#007580',\n  orange: '#ff7941',\n};\n\nconst lightTheme: GrafanaTheme = {\n  ...defaultTheme,\n  type: GrafanaThemeType.Light,\n  name: 'Grafana Light',\n  colors: {\n    ...basicColors,\n    variable: basicColors.blue,\n    inputBlack: '#09090b',\n    brandPrimary: basicColors.orange,\n    brandSuccess: basicColors.greenBase,\n    brandWarning: basicColors.orange,\n    brandDanger: basicColors.redBase,\n    queryRed: basicColors.redBase,\n    queryGreen: basicColors.greenBase,\n    queryPurple: basicColors.purple,\n    queryKeyword: basicColors.blueBase,\n    queryOrange: basicColors.orange,\n    online: basicColors.greenShade,\n    warn: '#f79520',\n    critical: basicColors.redShade,\n    bodyBg: basicColors.gray7,\n    pageBg: basicColors.gray7,\n    body: basicColors.gray1,\n    text: basicColors.gray1,\n    textStrong: basicColors.dark2,\n    textWeak: basicColors.gray2,\n    textEmphasis: basicColors.dark5,\n    textFaint: basicColors.dark4,\n    link: basicColors.gray1,\n    linkDisabled: basicColors.gray3,\n    linkHover: basicColors.dark1,\n    linkExternal: basicColors.blueLight,\n    headingColor: basicColors.gray1,\n  },\n  background: {\n    dropdown: basicColors.white,\n    scrollbar: basicColors.gray5,\n    scrollbar2: basicColors.gray5,\n  },\n};\n\nexport default lightTheme;\n","import darkTheme from './dark';\nimport lightTheme from './light';\nimport { GrafanaTheme } from '../types/theme';\n\nlet themeMock: ((name?: string) => GrafanaTheme) | null;\n\nexport const getTheme = (name?: string) =>\n  (themeMock && themeMock(name)) || (name === 'light' ? lightTheme : darkTheme);\n\nexport const mockTheme = (mock: (name?: string) => GrafanaTheme) => {\n  themeMock = mock;\n  return () => {\n    themeMock = null;\n  };\n};\n","var path = 'public/app/plugins/datasource/cloudwatch/partials/query.editor.html';\nvar html = \"<query-editor-row query-ctrl=ctrl can-collapse=false>\\n\\t<cloudwatch-query-parameter target=ctrl.target datasource=ctrl.datasource on-change=ctrl.refresh()></cloudwatch-query-parameter>\\n</query-editor-row>\\n\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","// Libraries\nimport { cloneDeep } from 'lodash';\nimport { ReplaySubject, Unsubscribable, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// Services & Utils\nimport { config } from 'app/core/config';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport kbn from 'app/core/utils/kbn';\nimport templateSrv from 'app/features/templating/template_srv';\nimport { runRequest, preProcessPanelData } from './runRequest';\nimport { runSharedRequest, isSharedDashboardQuery } from '../../../plugins/datasource/dashboard';\n\n// Types\nimport { PanelData, DataQuery, DataQueryRequest, DataSourceApi, DataSourceJsonData } from '@grafana/ui';\nimport { TimeRange, DataTransformerConfig, transformDataFrame, ScopedVars } from '@grafana/data';\n\nexport interface QueryRunnerOptions<\n  TQuery extends DataQuery = DataQuery,\n  TOptions extends DataSourceJsonData = DataSourceJsonData\n> {\n  datasource: string | DataSourceApi<TQuery, TOptions>;\n  queries: TQuery[];\n  panelId: number;\n  dashboardId?: number;\n  timezone?: string;\n  timeRange: TimeRange;\n  timeInfo?: string; // String description of time range for display\n  widthPixels: number;\n  maxDataPoints: number | undefined | null;\n  minInterval: string | undefined | null;\n  scopedVars?: ScopedVars;\n  cacheTimeout?: string;\n  delayStateNotification?: number; // default 100ms.\n  transformations?: DataTransformerConfig[];\n}\n\nlet counter = 100;\nfunction getNextRequestId() {\n  return 'Q' + counter++;\n}\n\nexport class PanelQueryRunner {\n  private subject?: ReplaySubject<PanelData>;\n  private subscription?: Unsubscribable;\n  private transformations?: DataTransformerConfig[];\n  private lastResult?: PanelData;\n\n  constructor() {\n    this.subject = new ReplaySubject(1);\n  }\n\n  /**\n   * Returns an observable that subscribes to the shared multi-cast subject (that reply last result).\n   */\n  getData(transform = true): Observable<PanelData> {\n    if (transform) {\n      return this.subject.pipe(\n        map((data: PanelData) => {\n          if (this.hasTransformations()) {\n            const newSeries = transformDataFrame(this.transformations, data.series);\n            return { ...data, series: newSeries };\n          }\n          return data;\n        })\n      );\n    }\n\n    // Just pass it directly\n    return this.subject.pipe();\n  }\n\n  hasTransformations() {\n    return config.featureToggles.transformations && this.transformations && this.transformations.length > 0;\n  }\n\n  async run(options: QueryRunnerOptions) {\n    const {\n      queries,\n      timezone,\n      datasource,\n      panelId,\n      dashboardId,\n      timeRange,\n      timeInfo,\n      cacheTimeout,\n      widthPixels,\n      maxDataPoints,\n      scopedVars,\n      minInterval,\n      // delayStateNotification,\n    } = options;\n\n    if (isSharedDashboardQuery(datasource)) {\n      this.pipeToSubject(runSharedRequest(options));\n      return;\n    }\n\n    const request: DataQueryRequest = {\n      requestId: getNextRequestId(),\n      timezone,\n      panelId,\n      dashboardId,\n      range: timeRange,\n      timeInfo,\n      interval: '',\n      intervalMs: 0,\n      targets: cloneDeep(queries),\n      maxDataPoints: maxDataPoints || widthPixels,\n      scopedVars: scopedVars || {},\n      cacheTimeout,\n      startTime: Date.now(),\n    };\n\n    // Add deprecated property\n    (request as any).rangeRaw = timeRange.raw;\n\n    try {\n      const ds = await getDataSource(datasource, request.scopedVars);\n\n      if (ds.meta && !ds.meta.hiddenQueries) {\n        request.targets = request.targets.filter(q => !q.hide);\n      }\n\n      // Attach the datasource name to each query\n      request.targets = request.targets.map(query => {\n        if (!query.datasource) {\n          query.datasource = ds.name;\n        }\n        return query;\n      });\n\n      const lowerIntervalLimit = minInterval ? templateSrv.replace(minInterval, request.scopedVars) : ds.interval;\n      const norm = kbn.calculateInterval(timeRange, widthPixels, lowerIntervalLimit);\n\n      // make shallow copy of scoped vars,\n      // and add built in variables interval and interval_ms\n      request.scopedVars = Object.assign({}, request.scopedVars, {\n        __interval: { text: norm.interval, value: norm.interval },\n        __interval_ms: { text: norm.intervalMs.toString(), value: norm.intervalMs },\n      });\n\n      request.interval = norm.interval;\n      request.intervalMs = norm.intervalMs;\n\n      this.pipeToSubject(runRequest(ds, request));\n    } catch (err) {\n      console.log('PanelQueryRunner Error', err);\n    }\n  }\n\n  private pipeToSubject(observable: Observable<PanelData>) {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n\n    this.subscription = observable.subscribe({\n      next: (data: PanelData) => {\n        this.lastResult = preProcessPanelData(data, this.lastResult);\n        this.subject.next(this.lastResult);\n      },\n    });\n  }\n\n  setTransformations(transformations?: DataTransformerConfig[]) {\n    this.transformations = transformations;\n  }\n\n  /**\n   * Called when the panel is closed\n   */\n  destroy() {\n    // Tell anyone listening that we are done\n    if (this.subject) {\n      this.subject.complete();\n    }\n\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n\nasync function getDataSource(\n  datasource: string | DataSourceApi | null,\n  scopedVars: ScopedVars\n): Promise<DataSourceApi> {\n  if (datasource && (datasource as any).query) {\n    return datasource as DataSourceApi;\n  }\n  return await getDatasourceSrv().get(datasource as string, scopedVars);\n}\n","// Libraries\nimport _ from 'lodash';\n// Utils\nimport { Emitter } from 'app/core/utils/emitter';\nimport { getNextRefIdChar } from 'app/core/utils/query';\n// Types\nimport { DataQuery, DataQueryResponseData, PanelPlugin } from '@grafana/ui';\nimport { DataLink, DataTransformerConfig, ScopedVars } from '@grafana/data';\n\nimport config from 'app/core/config';\n\nimport { PanelQueryRunner } from './PanelQueryRunner';\n\nexport interface GridPos {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  static?: boolean;\n}\n\nconst notPersistedProperties: { [str: string]: boolean } = {\n  events: true,\n  fullscreen: true,\n  isEditing: true,\n  isInView: true,\n  hasRefreshed: true,\n  cachedPluginOptions: true,\n  plugin: true,\n  queryRunner: true,\n};\n\n// For angular panels we need to clean up properties when changing type\n// To make sure the change happens without strange bugs happening when panels use same\n// named property with different type / value expectations\n// This is not required for react panels\nconst mustKeepProps: { [str: string]: boolean } = {\n  id: true,\n  gridPos: true,\n  type: true,\n  title: true,\n  scopedVars: true,\n  repeat: true,\n  repeatIteration: true,\n  repeatPanelId: true,\n  repeatDirection: true,\n  repeatedByRow: true,\n  minSpan: true,\n  collapsed: true,\n  panels: true,\n  targets: true,\n  datasource: true,\n  timeFrom: true,\n  timeShift: true,\n  hideTimeOverride: true,\n  description: true,\n  links: true,\n  fullscreen: true,\n  isEditing: true,\n  hasRefreshed: true,\n  events: true,\n  cacheTimeout: true,\n  cachedPluginOptions: true,\n  transparent: true,\n  pluginVersion: true,\n  queryRunner: true,\n  transformations: true,\n};\n\nconst defaults: any = {\n  gridPos: { x: 0, y: 0, h: 3, w: 6 },\n  targets: [{ refId: 'A' }],\n  cachedPluginOptions: {},\n  transparent: false,\n};\n\nexport class PanelModel {\n  id: number;\n  gridPos: GridPos;\n  type: string;\n  title: string;\n  alert?: any;\n  scopedVars?: ScopedVars;\n  repeat?: string;\n  repeatIteration?: number;\n  repeatPanelId?: number;\n  repeatDirection?: string;\n  repeatedByRow?: boolean;\n  maxPerRow?: number;\n  collapsed?: boolean;\n  panels?: any;\n  soloMode?: boolean;\n  targets: DataQuery[];\n  transformations?: DataTransformerConfig[];\n  datasource: string;\n  thresholds?: any;\n  pluginVersion?: string;\n\n  snapshotData?: DataQueryResponseData[];\n  timeFrom?: any;\n  timeShift?: any;\n  hideTimeOverride?: any;\n  options: {\n    [key: string]: any;\n  };\n\n  maxDataPoints?: number;\n  interval?: string;\n  description?: string;\n  links?: DataLink[];\n  transparent: boolean;\n\n  // non persisted\n  fullscreen: boolean;\n  isEditing: boolean;\n  isInView: boolean;\n  hasRefreshed: boolean;\n  events: Emitter;\n  cacheTimeout?: any;\n  cachedPluginOptions?: any;\n  legend?: { show: boolean };\n  plugin?: PanelPlugin;\n  private queryRunner?: PanelQueryRunner;\n\n  constructor(model: any) {\n    this.events = new Emitter();\n\n    // should not be part of defaults as defaults are removed in save model and\n    // this should not be removed in save model as exporter needs to templatize it\n    this.datasource = null;\n\n    // copy properties from persisted model\n    for (const property in model) {\n      (this as any)[property] = model[property];\n    }\n\n    // defaults\n    _.defaultsDeep(this, _.cloneDeep(defaults));\n\n    // queries must have refId\n    this.ensureQueryIds();\n  }\n\n  ensureQueryIds() {\n    if (this.targets && _.isArray(this.targets)) {\n      for (const query of this.targets) {\n        if (!query.refId) {\n          query.refId = getNextRefIdChar(this.targets);\n        }\n      }\n    }\n  }\n\n  getOptions() {\n    return this.options;\n  }\n\n  updateOptions(options: object) {\n    this.options = options;\n    this.render();\n  }\n\n  getSaveModel() {\n    const model: any = {};\n    for (const property in this) {\n      if (notPersistedProperties[property] || !this.hasOwnProperty(property)) {\n        continue;\n      }\n\n      if (_.isEqual(this[property], defaults[property])) {\n        continue;\n      }\n\n      model[property] = _.cloneDeep(this[property]);\n    }\n    return model;\n  }\n\n  setViewMode(fullscreen: boolean, isEditing: boolean) {\n    this.fullscreen = fullscreen;\n    this.isEditing = isEditing;\n    this.events.emit('view-mode-changed');\n  }\n\n  updateGridPos(newPos: GridPos) {\n    let sizeChanged = false;\n\n    if (this.gridPos.w !== newPos.w || this.gridPos.h !== newPos.h) {\n      sizeChanged = true;\n    }\n\n    this.gridPos.x = newPos.x;\n    this.gridPos.y = newPos.y;\n    this.gridPos.w = newPos.w;\n    this.gridPos.h = newPos.h;\n\n    if (sizeChanged) {\n      this.events.emit('panel-size-changed');\n    }\n  }\n\n  resizeDone() {\n    this.events.emit('panel-size-changed');\n  }\n\n  refresh() {\n    this.hasRefreshed = true;\n    this.events.emit('refresh');\n  }\n\n  render() {\n    if (!this.hasRefreshed) {\n      this.refresh();\n    } else {\n      this.events.emit('render');\n    }\n  }\n\n  initialized() {\n    this.events.emit('panel-initialized');\n  }\n\n  private getOptionsToRemember() {\n    return Object.keys(this).reduce((acc, property) => {\n      if (notPersistedProperties[property] || mustKeepProps[property]) {\n        return acc;\n      }\n      return {\n        ...acc,\n        [property]: (this as any)[property],\n      };\n    }, {});\n  }\n\n  private restorePanelOptions(pluginId: string) {\n    const prevOptions = this.cachedPluginOptions[pluginId] || {};\n\n    Object.keys(prevOptions).map(property => {\n      (this as any)[property] = prevOptions[property];\n    });\n  }\n\n  private applyPluginOptionDefaults(plugin: PanelPlugin) {\n    if (plugin.angularConfigCtrl) {\n      return;\n    }\n    this.options = _.defaultsDeep({}, this.options || {}, plugin.defaults);\n  }\n\n  pluginLoaded(plugin: PanelPlugin) {\n    this.plugin = plugin;\n\n    if (plugin.panel && plugin.onPanelMigration) {\n      const version = getPluginVersion(plugin);\n      if (version !== this.pluginVersion) {\n        this.options = plugin.onPanelMigration(this);\n        this.pluginVersion = version;\n      }\n    }\n\n    this.applyPluginOptionDefaults(plugin);\n  }\n\n  changePlugin(newPlugin: PanelPlugin) {\n    const pluginId = newPlugin.meta.id;\n    const oldOptions: any = this.getOptionsToRemember();\n    const oldPluginId = this.type;\n    const wasAngular = !!this.plugin.angularPanelCtrl;\n\n    // for angular panels we must remove all events and let angular panels do some cleanup\n    if (wasAngular) {\n      this.destroy();\n    }\n\n    // remove panel type specific  options\n    for (const key of _.keys(this)) {\n      if (mustKeepProps[key]) {\n        continue;\n      }\n\n      delete (this as any)[key];\n    }\n\n    this.cachedPluginOptions[oldPluginId] = oldOptions;\n    this.restorePanelOptions(pluginId);\n\n    // Let panel plugins inspect options from previous panel and keep any that it can use\n    if (newPlugin.onPanelTypeChanged) {\n      let old: any = {};\n\n      if (wasAngular) {\n        old = { angular: oldOptions };\n      } else if (oldOptions && oldOptions.options) {\n        old = oldOptions.options;\n      }\n      this.options = this.options || {};\n      Object.assign(this.options, newPlugin.onPanelTypeChanged(this.options, oldPluginId, old));\n    }\n\n    // switch\n    this.type = pluginId;\n    this.plugin = newPlugin;\n    this.applyPluginOptionDefaults(newPlugin);\n\n    if (newPlugin.onPanelMigration) {\n      this.pluginVersion = getPluginVersion(newPlugin);\n    }\n  }\n\n  addQuery(query?: Partial<DataQuery>) {\n    query = query || { refId: 'A' };\n    query.refId = getNextRefIdChar(this.targets);\n    this.targets.push(query as DataQuery);\n  }\n\n  changeQuery(query: DataQuery, index: number) {\n    // ensure refId is maintained\n    query.refId = this.targets[index].refId;\n\n    // update query in array\n    this.targets = this.targets.map((item, itemIndex) => {\n      if (itemIndex === index) {\n        return query;\n      }\n      return item;\n    });\n  }\n\n  getQueryRunner(): PanelQueryRunner {\n    if (!this.queryRunner) {\n      this.queryRunner = new PanelQueryRunner();\n      this.setTransformations(this.transformations);\n    }\n    return this.queryRunner;\n  }\n\n  hasTitle() {\n    return this.title && this.title.length > 0;\n  }\n\n  isAngularPlugin(): boolean {\n    return this.plugin && !!this.plugin.angularPanelCtrl;\n  }\n\n  destroy() {\n    this.events.emit('panel-teardown');\n    this.events.removeAllListeners();\n\n    if (this.queryRunner) {\n      this.queryRunner.destroy();\n      this.queryRunner = null;\n    }\n  }\n\n  setTransformations(transformations: DataTransformerConfig[]) {\n    this.transformations = transformations;\n    this.getQueryRunner().setTransformations(transformations);\n  }\n}\n\nfunction getPluginVersion(plugin: PanelPlugin): string {\n  return plugin && plugin.meta.info.version ? plugin.meta.info.version : config.buildInfo.version;\n}\n","// Vendored and converted to TS, source: https://github.com/xpl/ansicolor/blob/b82360563ed29de444dc7618b9236191e0a77096/ansicolor.js\n// License: Unlicense, author: https://github.com/xpl\n\nconst O = Object;\n\n/*  See https://misc.flogisoft.com/bash/tip_colors_and_formatting\n    ------------------------------------------------------------------------ */\n\nconst colorCodes = ['black', 'red', 'green', 'yellow', 'blue', 'magenta', 'cyan', 'lightGray', '', 'default'],\n  colorCodesLight = [\n    'darkGray',\n    'lightRed',\n    'lightGreen',\n    'lightYellow',\n    'lightBlue',\n    'lightMagenta',\n    'lightCyan',\n    'white',\n    '',\n  ],\n  styleCodes = ['', 'bright', 'dim', 'italic', 'underline', '', '', 'inverse'],\n  asBright = {\n    red: 'lightRed',\n    green: 'lightGreen',\n    yellow: 'lightYellow',\n    blue: 'lightBlue',\n    magenta: 'lightMagenta',\n    cyan: 'lightCyan',\n    black: 'darkGray',\n    lightGray: 'white',\n  },\n  types = {\n    0: 'style',\n    2: 'unstyle',\n    3: 'color',\n    9: 'colorLight',\n    4: 'bgColor',\n    10: 'bgColorLight',\n  },\n  subtypes = {\n    color: colorCodes,\n    colorLight: colorCodesLight,\n    bgColor: colorCodes,\n    bgColorLight: colorCodesLight,\n    style: styleCodes,\n    unstyle: styleCodes,\n  };\n\n/*  ------------------------------------------------------------------------ */\n\nconst clean = (obj: any) => {\n  for (const k in obj) {\n    if (!obj[k]) {\n      delete obj[k];\n    }\n  }\n  return O.keys(obj).length === 0 ? undefined : obj;\n};\n\n/*  ------------------------------------------------------------------------ */\n\nclass Color {\n  background?: boolean;\n  name?: string;\n  brightness?: number;\n\n  constructor(background?: boolean, name?: string, brightness?: number) {\n    this.background = background;\n    this.name = name;\n    this.brightness = brightness;\n  }\n\n  get inverse() {\n    return new Color(!this.background, this.name || (this.background ? 'black' : 'white'), this.brightness);\n  }\n\n  get clean() {\n    return clean({\n      name: this.name === 'default' ? '' : this.name,\n      bright: this.brightness === Code.bright,\n      dim: this.brightness === Code.dim,\n    });\n  }\n\n  defaultBrightness(value?: number) {\n    return new Color(this.background, this.name, this.brightness || value);\n  }\n\n  css(inverted: boolean) {\n    const color = inverted ? this.inverse : this;\n\n    // @ts-ignore\n    const rgbName = (color.brightness === Code.bright && asBright[color.name]) || color.name;\n\n    const prop = color.background ? 'background:' : 'color:';\n\n    // @ts-ignore\n    const rgb = Colors.rgb[rgbName];\n    const alpha = this.brightness === Code.dim ? 0.5 : 1;\n\n    return rgb\n      ? prop + 'rgba(' + [...rgb, alpha].join(',') + ');'\n      : !color.background && alpha < 1\n      ? 'color:rgba(0,0,0,0.5);'\n      : ''; // Chrome does not support 'opacity' property...\n  }\n}\n\n/*  ------------------------------------------------------------------------ */\n\nclass Code {\n  static reset = 0;\n  static bright = 1;\n  static dim = 2;\n  static inverse = 7;\n  static noBrightness = 22;\n  static noItalic = 23;\n  static noUnderline = 24;\n  static noInverse = 27;\n  static noColor = 39;\n  static noBgColor = 49;\n\n  value: number | undefined;\n\n  constructor(n?: string | number) {\n    if (n !== undefined) {\n      this.value = Number(n);\n    } else {\n      this.value = undefined;\n    }\n  }\n\n  get type() {\n    // @ts-ignore\n    return types[Math.floor(this.value / 10)];\n  }\n\n  get subtype() {\n    // @ts-ignore\n    return subtypes[this.type][this.value % 10];\n  }\n\n  get str() {\n    return this.value ? '\\u001b[' + this.value + 'm' : '';\n  }\n\n  static str(x: string | number) {\n    return new Code(x).str;\n  }\n\n  get isBrightness() {\n    return this.value === Code.noBrightness || this.value === Code.bright || this.value === Code.dim;\n  }\n}\n\n/*  ------------------------------------------------------------------------ */\n\nconst replaceAll = (str: string, a: string, b: string) => str.split(a).join(b);\n\n/*  ANSI brightness codes do not overlap, e.g. \"{bright}{dim}foo\" will be rendered bright (not dim).\n    So we fix it by adding brightness canceling before each brightness code, so the former example gets\n    converted to \"{noBrightness}{bright}{noBrightness}{dim}foo\" – this way it gets rendered as expected.\n */\n\nconst denormalizeBrightness = (s: string) => s.replace(/(\\u001b\\[(1|2)m)/g, '\\u001b[22m$1');\nconst normalizeBrightness = (s: string) => s.replace(/\\u001b\\[22m(\\u001b\\[(1|2)m)/g, '$1');\n\n// @ts-ignore\nconst wrap = (x, openCode, closeCode) => {\n  const open = Code.str(openCode),\n    close = Code.str(closeCode);\n\n  return String(x)\n    .split('\\n')\n    .map(line => denormalizeBrightness(open + replaceAll(normalizeBrightness(line), close, open) + close))\n    .join('\\n');\n};\n\n/*  ------------------------------------------------------------------------ */\n\nconst camel = (a: string, b: string) => a + b.charAt(0).toUpperCase() + b.slice(1);\n\nconst stringWrappingMethods = (() =>\n  [\n    ...colorCodes.map((k, i) =>\n      !k\n        ? []\n        : [\n            // color methods\n\n            [k, 30 + i, Code.noColor],\n            [camel('bg', k), 40 + i, Code.noBgColor],\n          ]\n    ),\n\n    ...colorCodesLight.map((k, i) =>\n      !k\n        ? []\n        : [\n            // light color methods\n\n            [k, 90 + i, Code.noColor],\n            [camel('bg', k), 100 + i, Code.noBgColor],\n          ]\n    ),\n\n    /* THIS ONE IS FOR BACKWARDS COMPATIBILITY WITH PREVIOUS VERSIONS (had 'bright' instead of 'light' for backgrounds)\n     */\n    ...['', 'BrightRed', 'BrightGreen', 'BrightYellow', 'BrightBlue', 'BrightMagenta', 'BrightCyan'].map((k, i) =>\n      !k ? [] : [['bg' + k, 100 + i, Code.noBgColor]]\n    ),\n\n    ...styleCodes.map((k, i) =>\n      !k\n        ? []\n        : [\n            // style methods\n\n            [k, i, k === 'bright' || k === 'dim' ? Code.noBrightness : 20 + i],\n          ]\n    ),\n  ].reduce((a, b) => a.concat(b)))();\n\n/*  ------------------------------------------------------------------------ */\n\n// @ts-ignore\nconst assignStringWrappingAPI = (target, wrapBefore = target) =>\n  stringWrappingMethods.reduce(\n    (memo, [k, open, close]) =>\n      O.defineProperty(memo, k, {\n        // @ts-ignore\n        get: () => assignStringWrappingAPI(str => wrapBefore(wrap(str, open, close))),\n      }),\n\n    target\n  );\n\n/*  ------------------------------------------------------------------------ */\n\nconst TEXT = 0,\n  BRACKET = 1,\n  CODE = 2;\n\nfunction rawParse(s: string) {\n  let state = TEXT,\n    buffer = '',\n    text = '',\n    code = '',\n    codes = [];\n  const spans = [];\n\n  for (let i = 0, n = s.length; i < n; i++) {\n    const c = s[i];\n\n    buffer += c;\n\n    switch (state) {\n      case TEXT: {\n        if (c === '\\u001b') {\n          state = BRACKET;\n          buffer = c;\n        } else {\n          text += c;\n        }\n        break;\n      }\n      case BRACKET:\n        if (c === '[') {\n          state = CODE;\n          code = '';\n          codes = [];\n        } else {\n          state = TEXT;\n          text += buffer;\n        }\n        break;\n\n      case CODE:\n        if (c >= '0' && c <= '9') {\n          code += c;\n        } else if (c === ';') {\n          codes.push(new Code(code));\n          code = '';\n        } else if (c === 'm' && code.length) {\n          codes.push(new Code(code));\n          for (const code of codes) {\n            spans.push({ text, code });\n            text = '';\n          }\n          state = TEXT;\n        } else {\n          state = TEXT;\n          text += buffer;\n        }\n    }\n  }\n\n  if (state !== TEXT) {\n    text += buffer;\n  }\n\n  if (text) {\n    spans.push({ text, code: new Code() });\n  }\n\n  return spans;\n}\n\n/*  ------------------------------------------------------------------------ */\n\n/**\n * Represents an ANSI-escaped string.\n */\nexport default class Colors {\n  spans: any[];\n  static names = stringWrappingMethods.map(([k]) => k);\n  static rgb = {\n    black: [0, 0, 0],\n    darkGray: [100, 100, 100],\n    lightGray: [200, 200, 200],\n    white: [255, 255, 255],\n\n    red: [204, 0, 0],\n    lightRed: [255, 51, 0],\n\n    green: [0, 204, 0],\n    lightGreen: [51, 204, 51],\n\n    yellow: [204, 102, 0],\n    lightYellow: [255, 153, 51],\n\n    blue: [0, 0, 255],\n    lightBlue: [26, 140, 255],\n\n    magenta: [204, 0, 204],\n    lightMagenta: [255, 0, 255],\n\n    cyan: [0, 153, 255],\n    lightCyan: [0, 204, 255],\n  };\n\n  /**\n   * @param {string} s a string containing ANSI escape codes.\n   */\n  constructor(s?: string) {\n    this.spans = s ? rawParse(s) : [];\n  }\n\n  get str() {\n    return this.spans.reduce((str, p) => str + p.text + p.code.str, '');\n  }\n\n  get parsed() {\n    let styles: Set<string>;\n    let brightness: number | undefined;\n    let color: Color;\n    let bgColor: Color;\n\n    function reset() {\n      (color = new Color()),\n        (bgColor = new Color(true /* background */)),\n        (brightness = undefined),\n        (styles = new Set());\n    }\n\n    reset();\n\n    return O.assign(new Colors(), {\n      spans: this.spans\n        .map(span => {\n          const c = span.code;\n\n          const inverted = styles.has('inverse'),\n            underline = styles.has('underline') ? 'text-decoration: underline;' : '',\n            italic = styles.has('italic') ? 'font-style: italic;' : '',\n            bold = brightness === Code.bright ? 'font-weight: bold;' : '';\n\n          const foreColor = color.defaultBrightness(brightness);\n\n          const styledSpan = O.assign(\n            { css: bold + italic + underline + foreColor.css(inverted) + bgColor.css(inverted) },\n            clean({ bold: !!bold, color: foreColor.clean, bgColor: bgColor.clean }),\n            span\n          );\n\n          for (const k of styles) {\n            styledSpan[k] = true;\n          }\n\n          if (c.isBrightness) {\n            brightness = c.value;\n          } else if (span.code.value !== undefined) {\n            if (span.code.value === Code.reset) {\n              reset();\n            } else {\n              switch (span.code.type) {\n                case 'color':\n                case 'colorLight':\n                  color = new Color(false, c.subtype);\n                  break;\n\n                case 'bgColor':\n                case 'bgColorLight':\n                  bgColor = new Color(true, c.subtype);\n                  break;\n\n                case 'style':\n                  styles.add(c.subtype);\n                  break;\n                case 'unstyle':\n                  styles.delete(c.subtype);\n                  break;\n              }\n            }\n          }\n\n          return styledSpan;\n        })\n        .filter(s => s.text.length > 0),\n    });\n  }\n\n  /*  Outputs with Chrome DevTools-compatible format     */\n\n  get asChromeConsoleLogArguments() {\n    const spans = this.parsed.spans;\n\n    return [spans.map(s => '%c' + s.text).join(''), ...spans.map(s => s.css)];\n  }\n\n  get browserConsoleArguments() /* LEGACY, DEPRECATED */ {\n    return this.asChromeConsoleLogArguments;\n  }\n\n  /**\n   * @desc installs String prototype extensions\n   * @example\n   * require ('ansicolor').nice\n   * console.log ('foo'.bright.red)\n   */\n  static get nice() {\n    Colors.names.forEach(k => {\n      if (!(k in String.prototype)) {\n        O.defineProperty(String.prototype, k, {\n          get: function() {\n            // @ts-ignore\n            return Colors[k](this);\n          },\n        });\n      }\n    });\n\n    return Colors;\n  }\n\n  /**\n   * @desc parses a string containing ANSI escape codes\n   * @return {Colors} parsed representation.\n   */\n  static parse(s: string) {\n    return new Colors(s).parsed;\n  }\n\n  /**\n   * @desc strips ANSI codes from a string\n   * @param {string} s a string containing ANSI escape codes.\n   * @return {string} clean string.\n   */\n  static strip(s: string) {\n    return s.replace(/[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-PRZcf-nqry=><]/g, ''); // hope V8 caches the regexp\n  }\n\n  /**\n   * @example\n   * const spans = [...ansi.parse ('\\u001b[7m\\u001b[7mfoo\\u001b[7mbar\\u001b[27m')]\n   */\n  [Symbol.iterator]() {\n    return this.spans[Symbol.iterator]();\n  }\n}\n\n/*  ------------------------------------------------------------------------ */\n\nassignStringWrappingAPI(Colors, (str: string) => str);\n","import React, { useContext } from 'react';\nimport { css, cx } from 'emotion';\nimport { LegendComponentProps } from './Legend';\nimport { ThemeContext } from '../../themes/ThemeContext';\n\ninterface LegendTableProps extends LegendComponentProps {\n  columns: string[];\n  sortBy?: string;\n  sortDesc?: boolean;\n  onToggleSort?: (sortBy: string) => void;\n}\n\nexport const LegendTable: React.FunctionComponent<LegendTableProps> = ({\n  items,\n  columns,\n  sortBy,\n  sortDesc,\n  itemRenderer,\n  className,\n  onToggleSort,\n}) => {\n  const theme = useContext(ThemeContext);\n\n  return (\n    <table\n      className={cx(\n        css`\n          width: 100%;\n          td {\n            padding: 2px 10px;\n          }\n        `,\n        className\n      )}\n    >\n      <thead>\n        <tr>\n          {columns.map(columnHeader => {\n            return (\n              <th\n                key={columnHeader}\n                className={css`\n                  color: ${theme.colors.blue};\n                  font-weight: bold;\n                  text-align: right;\n                  cursor: pointer;\n                `}\n                onClick={() => {\n                  if (onToggleSort) {\n                    onToggleSort(columnHeader);\n                  }\n                }}\n              >\n                {columnHeader}\n                {sortBy === columnHeader && (\n                  <span\n                    className={cx(\n                      `fa fa-caret-${sortDesc ? 'down' : 'up'}`,\n                      css`\n                        margin-left: ${theme.spacing.sm};\n                      `\n                    )}\n                  />\n                )}\n              </th>\n            );\n          })}\n        </tr>\n      </thead>\n      <tbody>\n        {items.map((item, index) => {\n          return itemRenderer ? (\n            itemRenderer(item, index)\n          ) : (\n            <tr key={`${item.label}-${index}`}>\n              <td>{item.label}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","export * from './data';\nexport * from './dataFrame';\nexport * from './dataLink';\nexport * from './logs';\nexport * from './navModel';\nexport * from './select';\nexport * from './time';\nexport * from './threshold';\nexport * from './utils';\nexport * from './valueMapping';\nexport * from './displayValue';\nexport * from './graph';\nexport * from './ScopedVars';\nexport * from './transformations';\nexport * from './vector';\n","// Libraries\nimport React from 'react';\n// @ts-ignore\nimport Cascader from 'rc-cascader';\n\nimport { SlatePrism } from '@grafana/ui';\n\n// Components\nimport QueryField, { TypeaheadInput } from 'app/features/explore/QueryField';\n// Utils & Services\n// dom also includes Element polyfills\nimport BracesPlugin from 'app/features/explore/slate-plugins/braces';\nimport { Plugin, Node } from 'slate';\n\n// Types\nimport { LokiQuery } from '../types';\nimport { TypeaheadOutput } from 'app/types/explore';\nimport { DataSourceApi, ExploreQueryFieldProps, DataSourceStatus, DOMUtil } from '@grafana/ui';\nimport { AbsoluteTimeRange } from '@grafana/data';\nimport { Grammar } from 'prismjs';\nimport LokiLanguageProvider, { LokiHistoryItem } from '../language_provider';\nimport { SuggestionsState } from 'app/features/explore/slate-plugins/suggestions';\n\nfunction getChooserText(hasSyntax: boolean, hasLogLabels: boolean, datasourceStatus: DataSourceStatus) {\n  if (datasourceStatus === DataSourceStatus.Disconnected) {\n    return '(Disconnected)';\n  }\n  if (!hasSyntax) {\n    return 'Loading labels...';\n  }\n  if (!hasLogLabels) {\n    return '(No labels found)';\n  }\n  return 'Log labels';\n}\n\nfunction willApplySuggestion(suggestion: string, { typeaheadContext, typeaheadText }: SuggestionsState): string {\n  // Modify suggestion based on context\n  switch (typeaheadContext) {\n    case 'context-labels': {\n      const nextChar = DOMUtil.getNextCharacter();\n      if (!nextChar || nextChar === '}' || nextChar === ',') {\n        suggestion += '=';\n      }\n      break;\n    }\n\n    case 'context-label-values': {\n      // Always add quotes and remove existing ones instead\n      if (!typeaheadText.match(/^(!?=~?\"|\")/)) {\n        suggestion = `\"${suggestion}`;\n      }\n      if (DOMUtil.getNextCharacter() !== '\"') {\n        suggestion = `${suggestion}\"`;\n      }\n      break;\n    }\n\n    default:\n  }\n  return suggestion;\n}\n\nexport interface CascaderOption {\n  label: string;\n  value: string;\n  children?: CascaderOption[];\n  disabled?: boolean;\n}\n\nexport interface LokiQueryFieldFormProps extends ExploreQueryFieldProps<DataSourceApi<LokiQuery>, LokiQuery> {\n  history: LokiHistoryItem[];\n  syntax: Grammar;\n  logLabelOptions: any[];\n  syntaxLoaded: boolean;\n  absoluteRange: AbsoluteTimeRange;\n  onLoadOptions: (selectedOptions: CascaderOption[]) => void;\n  onLabelsRefresh?: () => void;\n}\n\nexport class LokiQueryFieldForm extends React.PureComponent<LokiQueryFieldFormProps> {\n  plugins: Plugin[];\n  modifiedSearch: string;\n  modifiedQuery: string;\n\n  constructor(props: LokiQueryFieldFormProps, context: React.Context<any>) {\n    super(props, context);\n\n    this.plugins = [\n      BracesPlugin(),\n      SlatePrism({\n        onlyIn: (node: Node) => node.object === 'block' && node.type === 'code_block',\n        getSyntax: (node: Node) => 'promql',\n      }),\n    ];\n  }\n\n  loadOptions = (selectedOptions: CascaderOption[]) => {\n    this.props.onLoadOptions(selectedOptions);\n  };\n\n  onChangeLogLabels = (values: string[], selectedOptions: CascaderOption[]) => {\n    if (selectedOptions.length === 2) {\n      const key = selectedOptions[0].value;\n      const value = selectedOptions[1].value;\n      const query = `{${key}=\"${value}\"}`;\n      this.onChangeQuery(query, true);\n    }\n  };\n\n  onChangeQuery = (value: string, override?: boolean) => {\n    // Send text change to parent\n    const { query, onChange, onRunQuery } = this.props;\n    if (onChange) {\n      const nextQuery = { ...query, expr: value };\n      onChange(nextQuery);\n\n      if (override && onRunQuery) {\n        onRunQuery();\n      }\n    }\n  };\n\n  onTypeahead = async (typeahead: TypeaheadInput): Promise<TypeaheadOutput> => {\n    const { datasource } = this.props;\n\n    if (!datasource.languageProvider) {\n      return { suggestions: [] };\n    }\n\n    const lokiLanguageProvider = datasource.languageProvider as LokiLanguageProvider;\n    const { history, absoluteRange } = this.props;\n    const { prefix, text, value, wrapperClasses, labelKey } = typeahead;\n\n    const result = await lokiLanguageProvider.provideCompletionItems(\n      { text, value, prefix, wrapperClasses, labelKey },\n      { history, absoluteRange }\n    );\n\n    //console.log('handleTypeahead', wrapperClasses, text, prefix, nextChar, labelKey, result.context);\n\n    return result;\n  };\n\n  render() {\n    const {\n      queryResponse,\n      query,\n      syntaxLoaded,\n      logLabelOptions,\n      onLoadOptions,\n      onLabelsRefresh,\n      datasource,\n      datasourceStatus,\n    } = this.props;\n    const lokiLanguageProvider = datasource.languageProvider as LokiLanguageProvider;\n    const cleanText = datasource.languageProvider ? lokiLanguageProvider.cleanText : undefined;\n    const hasLogLabels = logLabelOptions && logLabelOptions.length > 0;\n    const chooserText = getChooserText(syntaxLoaded, hasLogLabels, datasourceStatus);\n    const buttonDisabled = !syntaxLoaded || datasourceStatus === DataSourceStatus.Disconnected;\n    const showError = queryResponse && queryResponse.error && queryResponse.error.refId === query.refId;\n\n    return (\n      <>\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <Cascader\n              options={logLabelOptions}\n              onChange={this.onChangeLogLabels}\n              loadData={onLoadOptions}\n              expandIcon={null}\n              onPopupVisibleChange={(isVisible: boolean) => {\n                if (isVisible && onLabelsRefresh) {\n                  onLabelsRefresh();\n                }\n              }}\n            >\n              <button className=\"gf-form-label gf-form-label--btn\" disabled={buttonDisabled}>\n                {chooserText} <i className=\"fa fa-caret-down\" />\n              </button>\n            </Cascader>\n          </div>\n          <div className=\"gf-form gf-form--grow\">\n            <QueryField\n              additionalPlugins={this.plugins}\n              cleanText={cleanText}\n              query={query.expr}\n              onTypeahead={this.onTypeahead}\n              onWillApplySuggestion={willApplySuggestion}\n              onChange={this.onChangeQuery}\n              onRunQuery={this.props.onRunQuery}\n              placeholder=\"Enter a Loki query\"\n              portalOrigin=\"loki\"\n              syntaxLoaded={syntaxLoaded}\n            />\n          </div>\n        </div>\n        <div>\n          {showError ? <div className=\"prom-query-field-info text-error\">{queryResponse.error.message}</div> : null}\n        </div>\n      </>\n    );\n  }\n}\n","import { TimeRange, toUtc, AbsoluteTimeRange } from '@grafana/data';\n\nexport const getShiftedTimeRange = (direction: number, origRange: TimeRange): AbsoluteTimeRange => {\n  const range = {\n    from: toUtc(origRange.from),\n    to: toUtc(origRange.to),\n  };\n\n  const timespan = (range.to.valueOf() - range.from.valueOf()) / 2;\n  let to: number, from: number;\n\n  if (direction === -1) {\n    to = range.to.valueOf() - timespan;\n    from = range.from.valueOf() - timespan;\n  } else if (direction === 1) {\n    to = range.to.valueOf() + timespan;\n    from = range.from.valueOf() + timespan;\n    if (to > Date.now() && range.to.valueOf() < Date.now()) {\n      to = Date.now();\n      from = range.from.valueOf();\n    }\n  } else {\n    to = range.to.valueOf();\n    from = range.from.valueOf();\n  }\n\n  return { from, to };\n};\n\nexport const getZoomedTimeRange = (range: TimeRange, factor: number): AbsoluteTimeRange => {\n  const timespan = range.to.valueOf() - range.from.valueOf();\n  const center = range.to.valueOf() - timespan / 2;\n\n  const to = center + (timespan * factor) / 2;\n  const from = center - (timespan * factor) / 2;\n\n  return { from, to };\n};\n","import React from 'react';\nimport config from 'app/core/config';\n\nimport { updateLocation } from 'app/core/actions';\nimport { connect } from 'react-redux';\nimport { StoreState } from 'app/types';\nimport { PureComponent } from 'react';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { hot } from 'react-hot-loader';\nimport appEvents from 'app/core/app_events';\n\nconst isOauthEnabled = () => {\n  return !!config.oauth && Object.keys(config.oauth).length > 0;\n};\n\nexport interface FormModel {\n  user: string;\n  password: string;\n  email: string;\n}\ninterface Props {\n  routeParams?: any;\n  updateLocation?: typeof updateLocation;\n  children: (props: {\n    isLoggingIn: boolean;\n    changePassword: (pw: string) => void;\n    isChangingPassword: boolean;\n    skipPasswordChange: Function;\n    login: (data: FormModel) => void;\n    disableLoginForm: boolean;\n    ldapEnabled: boolean;\n    authProxyEnabled: boolean;\n    disableUserSignUp: boolean;\n    isOauthEnabled: boolean;\n    loginHint: string;\n    passwordHint: string;\n  }) => JSX.Element;\n}\n\ninterface State {\n  isLoggingIn: boolean;\n  isChangingPassword: boolean;\n}\n\nexport class LoginCtrl extends PureComponent<Props, State> {\n  result: any = {};\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isLoggingIn: false,\n      isChangingPassword: false,\n    };\n\n    if (config.loginError) {\n      appEvents.emit('alert-warning', ['Login Failed', config.loginError]);\n    }\n  }\n\n  changePassword = (password: string) => {\n    const pw = {\n      newPassword: password,\n      confirmNew: password,\n      oldPassword: 'admin',\n    };\n    getBackendSrv()\n      .put('/api/user/password', pw)\n      .then(() => {\n        this.toGrafana();\n      })\n      .catch((err: any) => console.log(err));\n  };\n\n  login = (formModel: FormModel) => {\n    this.setState({\n      isLoggingIn: true,\n    });\n\n    getBackendSrv()\n      .post('/login', formModel)\n      .then((result: any) => {\n        this.result = result;\n        if (formModel.password !== 'admin' || config.ldapEnabled || config.authProxyEnabled) {\n          this.toGrafana();\n          return;\n        } else {\n          this.changeView();\n        }\n      })\n      .catch(() => {\n        this.setState({\n          isLoggingIn: false,\n        });\n      });\n  };\n\n  changeView = () => {\n    this.setState({\n      isChangingPassword: true,\n    });\n  };\n\n  toGrafana = () => {\n    const params = this.props.routeParams;\n    // Use window.location.href to force page reload\n    if (params.redirect && params.redirect[0] === '/') {\n      window.location.href = config.appSubUrl + params.redirect;\n    } else if (this.result.redirectUrl) {\n      window.location.href = config.appSubUrl + this.result.redirectUrl;\n    } else {\n      window.location.href = config.appSubUrl + '/';\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    const { isLoggingIn, isChangingPassword } = this.state;\n    const { login, toGrafana, changePassword } = this;\n    const { loginHint, passwordHint, disableLoginForm, ldapEnabled, authProxyEnabled, disableUserSignUp } = config;\n\n    return (\n      <>\n        {children({\n          isOauthEnabled: isOauthEnabled(),\n          loginHint,\n          passwordHint,\n          disableLoginForm,\n          ldapEnabled,\n          authProxyEnabled,\n          disableUserSignUp,\n          login,\n          isLoggingIn,\n          changePassword,\n          skipPasswordChange: toGrafana,\n          isChangingPassword,\n        })}\n      </>\n    );\n  }\n}\n\nexport const mapStateToProps = (state: StoreState) => ({\n  routeParams: state.location.routeParams,\n});\n\nconst mapDispatchToProps = { updateLocation };\n\nexport default hot(module)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(LoginCtrl)\n);\n","import React from 'react';\nimport { ListProps, AbstractList } from './AbstractList';\n\nexport class List<T> extends React.PureComponent<ListProps<T>> {\n  render() {\n    return <AbstractList {...this.props} />;\n  }\n}\n","var path = 'public/app/plugins/panel/graph/tab_display.html';\nvar html = \"<div class=editor-row>\\n  <div class=\\\"section gf-form-group\\\">\\n    <h5 class=section-heading>Draw Modes</h5>\\n    <gf-form-switch class=gf-form label=Bars label-class=width-5 checked=ctrl.panel.bars on-change=ctrl.render()></gf-form-switch>\\n    <gf-form-switch class=gf-form label=Lines label-class=width-5 checked=ctrl.panel.lines on-change=ctrl.render()></gf-form-switch>\\n    <gf-form-switch class=gf-form label=Points label-class=width-5 checked=ctrl.panel.points on-change=ctrl.render()></gf-form-switch>\\n  </div>\\n  <div class=\\\"section gf-form-group\\\">\\n    <h5 class=section-heading>Mode Options</h5>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label width-8\\\">Fill</label>\\n      <div class=\\\"gf-form-select-wrapper max-width-5\\\">\\n        <select class=gf-form-input ng-model=ctrl.panel.fill ng-options=\\\"f for f in [0,1,2,3,4,5,6,7,8,9,10]\\\" ng-change=ctrl.render() ng-disabled=!ctrl.panel.lines></select>\\n      </div>\\n    </div>\\n    <div class=gf-form ng-if=\\\"ctrl.panel.lines && ctrl.panel.fill\\\">\\n      <label class=\\\"gf-form-label width-8\\\">Fill Gradient</label>\\n      <div class=\\\"gf-form-select-wrapper max-width-5\\\">\\n        <select class=gf-form-input ng-model=ctrl.panel.fillGradient ng-options=\\\"f for f in [0,1,2,3,4,5,6,7,8,9,10]\\\" ng-change=ctrl.render()></select>\\n      </div>\\n    </div>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label width-8\\\">Line Width</label>\\n      <div class=\\\"gf-form-select-wrapper max-width-5\\\">\\n        <select class=gf-form-input ng-model=ctrl.panel.linewidth ng-options=\\\"f for f in [0,1,2,3,4,5,6,7,8,9,10]\\\" ng-change=ctrl.render() ng-disabled=!ctrl.panel.lines></select>\\n      </div>\\n    </div>\\n    <gf-form-switch ng-disabled=!ctrl.panel.lines class=gf-form label=Staircase label-class=width-8 checked=ctrl.panel.steppedLine on-change=ctrl.render()>\\n    </gf-form-switch>\\n    <div class=gf-form ng-if=ctrl.panel.points>\\n      <label class=\\\"gf-form-label width-8\\\">Point Radius</label>\\n      <div class=\\\"gf-form-select-wrapper max-width-5\\\">\\n        <select class=gf-form-input ng-model=ctrl.panel.pointradius ng-options=\\\"f for f in [0.5,1,2,3,4,5,6,7,8,9,10]\\\" ng-change=ctrl.render()></select>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"section gf-form-group\\\">\\n    <h5 class=section-heading>Hover tooltip</h5>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label width-9\\\">Mode</label>\\n      <div class=\\\"gf-form-select-wrapper max-width-8\\\">\\n        <select class=gf-form-input ng-model=ctrl.panel.tooltip.shared ng-options=\\\"f.value as f.text for f in [{text: 'All series', value: true}, {text: 'Single', value: false}]\\\" ng-change=ctrl.render()></select>\\n      </div>\\n    </div>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label width-9\\\">Sort order</label>\\n      <div class=\\\"gf-form-select-wrapper max-width-8\\\">\\n        <select class=gf-form-input ng-model=ctrl.panel.tooltip.sort ng-options=\\\"f.value as f.text for f in [{text: 'None', value: 0}, {text: 'Increasing', value: 1}, {text: 'Decreasing', value: 2}]\\\" ng-change=ctrl.render()></select>\\n      </div>\\n    </div>\\n    <div class=gf-form ng-show=ctrl.panel.stack>\\n      <label class=\\\"gf-form-label width-9\\\">Stacked value</label>\\n      <div class=\\\"gf-form-select-wrapper max-width-8\\\">\\n        <select class=gf-form-input ng-model=ctrl.panel.tooltip.value_type ng-options=\\\"f for f in ['cumulative','individual']\\\" ng-change=ctrl.render()></select>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"section gf-form-group\\\">\\n    <h5 class=section-heading>Stacking & Null value</h5>\\n    <gf-form-switch class=gf-form label=Stack label-class=width-7 checked=ctrl.panel.stack on-change=ctrl.render()>\\n    </gf-form-switch>\\n    <gf-form-switch class=gf-form ng-show=ctrl.panel.stack label=Percent label-class=width-7 checked=ctrl.panel.percentage on-change=ctrl.render()>\\n    </gf-form-switch>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label width-7\\\">Null value</label>\\n      <div class=gf-form-select-wrapper>\\n        <select class=\\\"gf-form-input max-width-9\\\" ng-model=ctrl.panel.nullPointMode ng-options=\\\"f for f in ['connected', 'null', 'null as zero']\\\" ng-change=ctrl.render()></select>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div>\\n  <div class=gf-form-inline ng-repeat=\\\"override in ctrl.panel.seriesOverrides\\\" ng-controller=SeriesOverridesCtrl>\\n    <div class=gf-form>\\n      <label class=gf-form-label>alias or regex</label>\\n    </div>\\n    <div class=\\\"gf-form width-15\\\">\\n      <input type=text ng-model=override.alias bs-typeahead=getSeriesNames ng-blur=ctrl.render() data-min-length=0 data-items=100 class=\\\"gf-form-input width-15\\\"/>\\n    </div>\\n    <div class=gf-form ng-repeat=\\\"option in currentOverrides\\\">\\n      <label class=gf-form-label>\\n        <i class=\\\"pointer fa fa-remove\\\" ng-click=removeOverride(option)></i>\\n        <span ng-show=\\\"option.propertyName === 'color'\\\">\\n          Color: <i class=\\\"fa fa-circle\\\" ng-style={color:option.value}></i>\\n        </span>\\n        <span ng-show=\\\"option.propertyName !== 'color'\\\"> {{ option.name }}: {{ option.value }} </span>\\n      </label>\\n    </div>\\n\\n    <div class=gf-form>\\n      <span class=dropdown dropdown-typeahead2=overrideMenu dropdown-typeahead-on-select=\\\"setOverride($item, $subItem)\\\" button-template-class=gf-form-label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"gf-form gf-form--grow\\\">\\n      <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n    </div>\\n\\n    <div class=gf-form>\\n      <label class=gf-form-label>\\n        <i class=\\\"fa fa-trash pointer\\\" ng-click=ctrl.removeSeriesOverride(override)></i>\\n      </label>\\n    </div>\\n  </div>\\n  <div class=gf-form-button-row>\\n    <button class=\\\"btn btn-inverse\\\" ng-click=ctrl.addSeriesOverride()>\\n      <i class=\\\"fa fa-plus\\\"></i>&nbsp;Add series override<tip>Regex match example: /server[0-3]/i </tip>\\n    </button>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","// Returns the factors of a number\n// Example getFactors(12) -> [1, 2, 3, 4, 6, 12]\nexport default function getFactors(num: number): number[] {\n  return Array.from(new Array(num + 1), (_, i) => i).filter(i => num % i === 0);\n}\n","import _ from 'lodash';\n\nimport kbn from 'app/core/utils/kbn';\n\nimport { PanelCtrl } from 'app/features/panel/panel_ctrl';\nimport { getExploreUrl } from 'app/core/utils/explore';\nimport { applyPanelTimeOverrides, getResolution } from 'app/features/dashboard/utils/panel';\nimport { ContextSrv } from 'app/core/services/context_srv';\nimport { toLegacyResponseData, TimeRange, LoadingState, DataFrame, toDataFrameDTO } from '@grafana/data';\n\nimport { LegacyResponseData, DataSourceApi, PanelData, DataQueryResponse } from '@grafana/ui';\nimport { Unsubscribable } from 'rxjs';\nimport { PanelModel } from 'app/features/dashboard/state';\n\nclass MetricsPanelCtrl extends PanelCtrl {\n  scope: any;\n  datasource: DataSourceApi;\n  $q: any;\n  $timeout: any;\n  contextSrv: ContextSrv;\n  datasourceSrv: any;\n  timeSrv: any;\n  templateSrv: any;\n  range: TimeRange;\n  interval: any;\n  intervalMs: any;\n  resolution: any;\n  timeInfo?: string;\n  skipDataOnInit: boolean;\n  dataList: LegacyResponseData[];\n  querySubscription?: Unsubscribable;\n  useDataFrames = false;\n\n  constructor($scope: any, $injector: any) {\n    super($scope, $injector);\n\n    this.$q = $injector.get('$q');\n    this.contextSrv = $injector.get('contextSrv');\n    this.datasourceSrv = $injector.get('datasourceSrv');\n    this.timeSrv = $injector.get('timeSrv');\n    this.templateSrv = $injector.get('templateSrv');\n    this.scope = $scope;\n    this.panel.datasource = this.panel.datasource || null;\n\n    this.events.on('refresh', this.onMetricsPanelRefresh.bind(this));\n    this.events.on('panel-teardown', this.onPanelTearDown.bind(this));\n  }\n\n  private onPanelTearDown() {\n    if (this.querySubscription) {\n      this.querySubscription.unsubscribe();\n      this.querySubscription = null;\n    }\n  }\n\n  private onMetricsPanelRefresh() {\n    // ignore fetching data if another panel is in fullscreen\n    if (this.otherPanelInFullscreenMode()) {\n      return;\n    }\n\n    // if we have snapshot data use that\n    if (this.panel.snapshotData) {\n      this.updateTimeRange();\n      let data = this.panel.snapshotData;\n      // backward compatibility\n      if (!_.isArray(data)) {\n        data = data.data;\n      }\n\n      // Defer panel rendering till the next digest cycle.\n      // For some reason snapshot panels don't init at this time, so this helps to avoid rendering issues.\n      return this.$timeout(() => {\n        this.events.emit('data-snapshot-load', data);\n      });\n    }\n\n    // clear loading/error state\n    delete this.error;\n    this.loading = true;\n\n    // load datasource service\n    return this.datasourceSrv\n      .get(this.panel.datasource, this.panel.scopedVars)\n      .then(this.updateTimeRange.bind(this))\n      .then(this.issueQueries.bind(this))\n      .catch((err: any) => {\n        this.processDataError(err);\n      });\n  }\n\n  processDataError(err: any) {\n    // if canceled  keep loading set to true\n    if (err.cancelled) {\n      console.log('Panel request cancelled', err);\n      return;\n    }\n\n    this.loading = false;\n    this.error = err.message || 'Request Error';\n    this.inspector = { error: err };\n\n    if (err.data) {\n      if (err.data.message) {\n        this.error = err.data.message;\n      }\n      if (err.data.error) {\n        this.error = err.data.error;\n      }\n    }\n\n    console.log('Panel data error:', err);\n    return this.$timeout(() => {\n      this.events.emit('data-error', err);\n    });\n  }\n\n  // Updates the response with information from the stream\n  panelDataObserver = {\n    next: (data: PanelData) => {\n      if (data.state === LoadingState.Error) {\n        this.loading = false;\n        this.processDataError(data.error);\n        return;\n      }\n\n      // Ignore data in loading state\n      if (data.state === LoadingState.Loading) {\n        this.loading = true;\n        return;\n      }\n\n      if (data.request) {\n        const { timeInfo } = data.request;\n        if (timeInfo) {\n          this.timeInfo = timeInfo;\n        }\n      }\n\n      if (data.timeRange) {\n        this.range = data.timeRange;\n      }\n\n      if (this.useDataFrames) {\n        this.handleDataFrames(data.series);\n      } else {\n        // Make the results look as if they came directly from a <6.2 datasource request\n        const legacy = data.series.map(v => toLegacyResponseData(v));\n        this.handleQueryResult({ data: legacy });\n      }\n    },\n  };\n\n  updateTimeRange(datasource?: DataSourceApi) {\n    this.datasource = datasource || this.datasource;\n    this.range = this.timeSrv.timeRange();\n    this.resolution = getResolution(this.panel);\n\n    const newTimeData = applyPanelTimeOverrides(this.panel, this.range);\n    this.timeInfo = newTimeData.timeInfo;\n    this.range = newTimeData.timeRange;\n\n    this.calculateInterval();\n\n    return this.datasource;\n  }\n\n  calculateInterval() {\n    let intervalOverride = this.panel.interval;\n\n    // if no panel interval check datasource\n    if (intervalOverride) {\n      intervalOverride = this.templateSrv.replace(intervalOverride, this.panel.scopedVars);\n    } else if (this.datasource && this.datasource.interval) {\n      intervalOverride = this.datasource.interval;\n    }\n\n    const res = kbn.calculateInterval(this.range, this.resolution, intervalOverride);\n    this.interval = res.interval;\n    this.intervalMs = res.intervalMs;\n  }\n\n  issueQueries(datasource: DataSourceApi) {\n    this.datasource = datasource;\n\n    const panel = this.panel as PanelModel;\n    const queryRunner = panel.getQueryRunner();\n\n    if (!this.querySubscription) {\n      this.querySubscription = queryRunner.getData().subscribe(this.panelDataObserver);\n    }\n\n    return queryRunner.run({\n      datasource: panel.datasource,\n      queries: panel.targets,\n      panelId: panel.id,\n      dashboardId: this.dashboard.id,\n      timezone: this.dashboard.timezone,\n      timeRange: this.range,\n      widthPixels: this.resolution, // The pixel width\n      maxDataPoints: panel.maxDataPoints,\n      minInterval: panel.interval,\n      scopedVars: panel.scopedVars,\n      cacheTimeout: panel.cacheTimeout,\n      transformations: panel.transformations,\n    });\n  }\n\n  handleDataFrames(data: DataFrame[]) {\n    this.loading = false;\n\n    if (this.dashboard && this.dashboard.snapshot) {\n      this.panel.snapshotData = data.map(frame => toDataFrameDTO(frame));\n    }\n\n    try {\n      this.events.emit('data-frames-received', data);\n    } catch (err) {\n      this.processDataError(err);\n    }\n  }\n\n  handleQueryResult(result: DataQueryResponse) {\n    this.loading = false;\n\n    if (this.dashboard.snapshot) {\n      this.panel.snapshotData = result.data;\n    }\n\n    if (!result || !result.data) {\n      console.log('Data source query result invalid, missing data field:', result);\n      result = { data: [] };\n    }\n\n    try {\n      this.events.emit('data-received', result.data);\n    } catch (err) {\n      this.processDataError(err);\n    }\n  }\n\n  async getAdditionalMenuItems() {\n    const items = [];\n    if (this.contextSrv.hasAccessToExplore() && this.datasource) {\n      items.push({\n        text: 'Explore',\n        icon: 'gicon gicon-explore',\n        shortcut: 'x',\n        href: await getExploreUrl(this.panel, this.panel.targets, this.datasource, this.datasourceSrv, this.timeSrv),\n      });\n    }\n    return items;\n  }\n}\n\nexport { MetricsPanelCtrl };\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport classNames from 'classnames';\nimport { AppNotificationSeverity } from 'app/types';\n\ninterface Props {\n  title: string;\n  icon?: string;\n  body?: ReactNode;\n  severity: AppNotificationSeverity;\n  onClose?: () => void;\n}\n\nfunction getIconFromSeverity(severity: AppNotificationSeverity): string {\n  switch (severity) {\n    case AppNotificationSeverity.Error: {\n      return 'fa fa-exclamation-triangle';\n    }\n    case AppNotificationSeverity.Warning: {\n      return 'fa fa-exclamation-triangle';\n    }\n    case AppNotificationSeverity.Info: {\n      return 'fa fa-info-circle';\n    }\n    case AppNotificationSeverity.Success: {\n      return 'fa fa-check';\n    }\n    default:\n      return '';\n  }\n}\n\nexport const AlertBox: FunctionComponent<Props> = ({ title, icon, body, severity, onClose }) => {\n  const alertClass = classNames('alert', `alert-${severity}`);\n  return (\n    <div className={alertClass}>\n      <div className=\"alert-icon\">\n        <i className={icon || getIconFromSeverity(severity)} />\n      </div>\n      <div className=\"alert-body\">\n        <div className=\"alert-title\">{title}</div>\n        {body && <div className=\"alert-text\">{body}</div>}\n      </div>\n      {onClose && (\n        <button type=\"button\" className=\"alert-close\" onClick={onClose}>\n          <i className=\"fa fa fa-remove\" />\n        </button>\n      )}\n    </div>\n  );\n};\n","import { PanelCtrl } from 'app/features/panel/panel_ctrl';\nimport { MetricsPanelCtrl } from 'app/features/panel/metrics_panel_ctrl';\nimport { QueryCtrl } from 'app/features/panel/query_ctrl';\nimport { alertTab } from 'app/features/alerting/AlertTabCtrl';\nimport { loadPluginCss } from '@grafana/runtime';\n\nexport { PanelCtrl, MetricsPanelCtrl, QueryCtrl, alertTab, loadPluginCss };\n","var path = 'public/app/plugins/datasource/elasticsearch/partials/annotations.editor.html';\nvar html = \"<div class=gf-form-group>\\n\\t<div class=gf-form ng-if=ctrl.annotation.index>\\n\\t\\t<span class=\\\"gf-form-label width-14\\\">Index name</span>\\n\\t\\t<input type=text class=\\\"gf-form-input max-width-20\\\" ng-model=ctrl.annotation.index placeholder=events-*>\\n\\t</div>\\n\\t<div class=gf-form-group>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<input type=text class=gf-form-input ng-model=ctrl.annotation.query placeholder=\\\"Elasticsearch lucene query\\\">\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<div class=gf-form-group>\\n\\t<h6>Field mappings</h6>\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=gf-form-label>Time</span>\\n\\t\\t\\t<input type=text class=\\\"gf-form-input max-width-14\\\" ng-model=ctrl.annotation.timeField placeholder=@timestamp>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=gf-form-label>Text</span>\\n\\t\\t\\t<input type=text class=\\\"gf-form-input max-width-14\\\" ng-model=ctrl.annotation.textField placeholder=\\\"\\\">\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=gf-form-label>Tags</span>\\n\\t\\t\\t<input type=text class=\\\"gf-form-input max-width-10\\\" ng-model=ctrl.annotation.tagsField placeholder=tags>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form ng-show=ctrl.annotation.titleField>\\n\\t\\t\\t<span class=gf-form-label>Title <em class=muted>(deprecated)</em></span>\\n\\t\\t\\t<input type=text class=\\\"gf-form-input max-width-16\\\" ng-model=ctrl.annotation.titleField placeholder=desc>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/features/playlist/partials/playlists.html';\nvar html = \"<page-header model=ctrl.navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\">\\n  <div ng-if=\\\"ctrl.playlists.length > 0\\\">\\n    <div class=page-action-bar>\\n      <div class=page-action-bar__spacer></div>\\n      <a class=\\\"btn btn-primary pull-right\\\" href=playlists/create>\\n        New playlist\\n      </a>\\n    </div>\\n\\n    <table class=\\\"filter-table filter-table--hover\\\">\\n      <thead>\\n        <th><strong>Name</strong></th>\\n        <th style=width:100px></th>\\n        <th style=width:78px></th>\\n      </thead>\\n      <tr ng-repeat=\\\"playlist in ctrl.playlists\\\">\\n        <td class=link-td>\\n          <a href=playlists/edit/{{playlist.id}}>{{playlist.name}}</a>\\n        </td>\\n        <td class=dropdown>\\n          <button class=\\\"btn btn-inverse btn-small\\\" data-toggle=dropdown>\\n            Start playlist\\n            <i class=\\\"fa fa-caret-down\\\"></i>\\n          </button>\\n          <ul class=dropdown-menu role=menu>\\n            <li>\\n              <a href={{playlist.startUrl}}>\\n                <i class=\\\"fa fa-play\\\"></i> In Normal mode\\n              </a>\\n              <a href=\\\"{{playlist.startUrl}}?kiosk=tv\\\">\\n                <i class=\\\"fa fa-play\\\"></i> In TV mode\\n              </a>\\n              <a href=\\\"{{playlist.startUrl}}?kiosk=tv&autofitpanels\\\">\\n                <i class=\\\"fa fa-play\\\"></i> In TV mode <span class=muted>(with auto fit panels)</span>\\n              </a>\\n              <a href={{playlist.startUrl}}?kiosk>\\n                <i class=\\\"fa fa-play\\\"></i> In Kiosk mode\\n              </a>\\n              <a ng-href={{playlist.startUrl}}?kiosk&autofitpanels>\\n                <i class=\\\"fa fa-play\\\"></i> In Kiosk mode <span class=muted>(with auto fit panels)</span>\\n              </a>\\n            </li>\\n          </ul>\\n        </td>\\n        <td class=text-right>\\n          <a ng-click=ctrl.removePlaylist(playlist) class=\\\"btn btn-danger btn-small\\\">\\n            <i class=\\\"fa fa-remove\\\"></i>\\n          </a>\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n  <div ng-if=\\\"ctrl.playlists.length === 0\\\">\\n    <empty-list-cta title=\\\"'There are no playlists created yet'\\\" buttonicon=\\\"'fa fa-plus'\\\" buttonlink=\\\"'playlists/create'\\\" buttontitle=\\\"'Create Playlist'\\\" protip=\\\"'You can use playlists to cycle dashboards on TVs without user control'\\\" protiplink=\\\"'http://docs.grafana.org/reference/playlist/'\\\" protiplinktitle=\\\"'Learn more'\\\" protiptarget=\\\"'_blank'\\\"/>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { PanelModel } from 'app/features/dashboard/state/PanelModel';\nimport { FieldDisplay } from '@grafana/ui';\nimport { LinkModelSupplier, getTimeField, Labels, ScopedVars, ScopedVar } from '@grafana/data';\nimport { getLinkSrv } from './link_srv';\n\ninterface SeriesVars {\n  name?: string;\n  labels?: Labels;\n  refId?: string;\n}\n\ninterface FieldVars {\n  name: string;\n}\n\ninterface ValueVars {\n  raw: any;\n  numeric: number;\n  text: string;\n  time?: number;\n  calc?: string;\n}\n\ninterface DataLinkScopedVars extends ScopedVars {\n  __series?: ScopedVar<SeriesVars>;\n  __field?: ScopedVar<FieldVars>;\n  __value?: ScopedVar<ValueVars>;\n}\n\n/**\n * Link suppliers creates link models based on a link origin\n */\n\nexport const getFieldLinksSupplier = (value: FieldDisplay): LinkModelSupplier<FieldDisplay> | undefined => {\n  const links = value.field.links;\n  if (!links || links.length === 0) {\n    return undefined;\n  }\n  return {\n    getLinks: (_scopedVars?: any) => {\n      const scopedVars: DataLinkScopedVars = {};\n\n      if (value.view) {\n        const { dataFrame } = value.view;\n\n        scopedVars['__series'] = {\n          value: {\n            name: dataFrame.name,\n            labels: dataFrame.labels,\n            refId: dataFrame.refId,\n          },\n          text: 'Series',\n        };\n\n        const field = value.colIndex !== undefined ? dataFrame.fields[value.colIndex] : undefined;\n        if (field) {\n          console.log('Full Field Info:', field);\n          scopedVars['__field'] = {\n            value: {\n              name: field.name,\n            },\n            text: 'Field',\n          };\n        }\n\n        if (value.rowIndex) {\n          const { timeField } = getTimeField(dataFrame);\n          scopedVars['__value'] = {\n            value: {\n              raw: field.values.get(value.rowIndex),\n              numeric: value.display.numeric,\n              text: value.display.text,\n              time: timeField ? timeField.values.get(value.rowIndex) : undefined,\n            },\n            text: 'Value',\n          };\n        } else {\n          // calculation\n          scopedVars['__value'] = {\n            value: {\n              raw: value.display.numeric,\n              numeric: value.display.numeric,\n              text: value.display.text,\n              calc: value.name,\n            },\n            text: 'Value',\n          };\n        }\n      } else {\n        console.log('VALUE', value);\n      }\n\n      return links.map(link => {\n        return getLinkSrv().getDataLinkUIModel(link, scopedVars, value);\n      });\n    },\n  };\n};\n\nexport const getPanelLinksSupplier = (value: PanelModel): LinkModelSupplier<PanelModel> => {\n  const links = value.links;\n\n  if (!links || links.length === 0) {\n    return undefined;\n  }\n\n  return {\n    getLinks: () => {\n      return links.map(link => {\n        return getLinkSrv().getDataLinkUIModel(link, value.scopedVars, value);\n      });\n    },\n  };\n};\n","import { ThemeContext, withTheme, useTheme } from './ThemeContext';\nimport { getTheme, mockTheme } from './getTheme';\nimport { selectThemeVariant } from './selectThemeVariant';\nexport { stylesFactory } from './stylesFactory';\nexport { ThemeContext, withTheme, mockTheme, getTheme, selectThemeVariant, useTheme };\n","var path = 'public/app/plugins/app/example-app/legacy/angular_example_page.html';\nvar html = \"\\n\\n<h3 class=page-heading>\\n\\tExample Page\\n</h3>\\n\\n<p>this is in angular</p>\\n\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/panel/table/module.html';\nvar html = \"\\n<div class=table-panel-container>\\n\\t<div class=table-panel-header-bg ng-show=ctrl.table.rows.length></div>\\n\\t<div class=table-panel-scroll ng-show=ctrl.table.rows.length>\\n\\t\\t<table class=table-panel-table>\\n\\t\\t\\t<thead>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<th ng-repeat=\\\"col in ctrl.table.columns\\\" ng-if=!col.hidden>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"table-panel-table-header-inner pointer\\\" ng-click=\\\"ctrl.toggleColumnSort(col, $index)\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{col.title}}\\n\\t\\t\\t\\t\\t\\t\\t<span class=table-panel-table-header-controls ng-if=col.sort>\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-caret-down\\\" ng-show=col.desc></i>\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-caret-up\\\" ng-hide=col.desc></i>\\n\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</thead>\\n\\t\\t\\t<tbody>\\n\\t\\t\\t</tbody>\\n\\t\\t</table>\\n\\t</div>\\n</div>\\n<div class=datapoints-warning ng-show=\\\"ctrl.table.rows.length===0\\\">\\n\\t<span class=small>\\n\\t\\tNo data to show <tip>Nothing returned by data query</tip>\\n\\t</span>\\n</div>\\n<div class=table-panel-footer>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","// Libraries\nimport _ from 'lodash';\n// Utils\nimport kbn from 'app/core/utils/kbn';\nimport coreModule from 'app/core/core_module';\n// Types\nimport {\n  dateMath,\n  DefaultTimeRange,\n  TimeRange,\n  RawTimeRange,\n  TimeZone,\n  toUtc,\n  dateTime,\n  isDateTime,\n} from '@grafana/data';\nimport { ITimeoutService, ILocationService } from 'angular';\nimport { ContextSrv } from 'app/core/services/context_srv';\nimport { DashboardModel } from '../state/DashboardModel';\nimport { getZoomedTimeRange, getShiftedTimeRange } from 'app/core/utils/timePicker';\n\nexport class TimeSrv {\n  time: any;\n  refreshTimer: any;\n  refresh: any;\n  oldRefresh: boolean;\n  dashboard: Partial<DashboardModel>;\n  timeAtLoad: any;\n  private autoRefreshBlocked: boolean;\n\n  /** @ngInject */\n  constructor(\n    $rootScope: any,\n    private $timeout: ITimeoutService,\n    private $location: ILocationService,\n    private timer: any,\n    private contextSrv: ContextSrv\n  ) {\n    // default time\n    this.time = DefaultTimeRange.raw;\n\n    $rootScope.$on('zoom-out', this.zoomOut.bind(this));\n    $rootScope.$on('shift-time', this.shiftTime.bind(this));\n    $rootScope.$on('$routeUpdate', this.routeUpdated.bind(this));\n\n    document.addEventListener('visibilitychange', () => {\n      if (this.autoRefreshBlocked && document.visibilityState === 'visible') {\n        this.autoRefreshBlocked = false;\n        this.refreshDashboard();\n      }\n    });\n  }\n\n  init(dashboard: Partial<DashboardModel>) {\n    this.timer.cancelAll();\n\n    this.dashboard = dashboard;\n    this.time = dashboard.time;\n    this.refresh = dashboard.refresh;\n\n    this.initTimeFromUrl();\n    this.parseTime();\n\n    // remember time at load so we can go back to it\n    this.timeAtLoad = _.cloneDeep(this.time);\n\n    if (this.refresh) {\n      this.setAutoRefresh(this.refresh);\n    }\n  }\n\n  private parseTime() {\n    // when absolute time is saved in json it is turned to a string\n    if (_.isString(this.time.from) && this.time.from.indexOf('Z') >= 0) {\n      this.time.from = dateTime(this.time.from).utc();\n    }\n    if (_.isString(this.time.to) && this.time.to.indexOf('Z') >= 0) {\n      this.time.to = dateTime(this.time.to).utc();\n    }\n  }\n\n  private parseUrlParam(value: any) {\n    if (value.indexOf('now') !== -1) {\n      return value;\n    }\n    if (value.length === 8) {\n      return toUtc(value, 'YYYYMMDD');\n    }\n    if (value.length === 15) {\n      return toUtc(value, 'YYYYMMDDTHHmmss');\n    }\n\n    if (!isNaN(value)) {\n      const epoch = parseInt(value, 10);\n      return toUtc(epoch);\n    }\n\n    return null;\n  }\n\n  private getTimeWindow(time: string, timeWindow: string) {\n    const valueTime = parseInt(time, 10);\n    let timeWindowMs;\n\n    if (timeWindow.match(/^\\d+$/) && parseInt(timeWindow, 10)) {\n      // when time window specified in ms\n      timeWindowMs = parseInt(timeWindow, 10);\n    } else {\n      timeWindowMs = kbn.interval_to_ms(timeWindow);\n    }\n\n    return {\n      from: toUtc(valueTime - timeWindowMs / 2),\n      to: toUtc(valueTime + timeWindowMs / 2),\n    };\n  }\n\n  private initTimeFromUrl() {\n    const params = this.$location.search();\n\n    if (params.time && params['time.window']) {\n      this.time = this.getTimeWindow(params.time, params['time.window']);\n    }\n\n    if (params.from) {\n      this.time.from = this.parseUrlParam(params.from) || this.time.from;\n    }\n    if (params.to) {\n      this.time.to = this.parseUrlParam(params.to) || this.time.to;\n    }\n    // if absolute ignore refresh option saved to dashboard\n    if (params.to && params.to.indexOf('now') === -1) {\n      this.refresh = false;\n      this.dashboard.refresh = false;\n    }\n    // but if refresh explicitly set then use that\n    if (params.refresh) {\n      this.refresh = params.refresh || this.refresh;\n    }\n  }\n\n  private routeUpdated() {\n    const params = this.$location.search();\n    if (params.left) {\n      return; // explore handles this;\n    }\n    const urlRange = this.timeRangeForUrl();\n    // check if url has time range\n    if (params.from && params.to) {\n      // is it different from what our current time range?\n      if (params.from !== urlRange.from || params.to !== urlRange.to) {\n        // issue update\n        this.initTimeFromUrl();\n        this.setTime(this.time, true);\n      }\n    } else if (this.timeHasChangedSinceLoad()) {\n      this.setTime(this.timeAtLoad, true);\n    }\n  }\n\n  private timeHasChangedSinceLoad() {\n    return this.timeAtLoad && (this.timeAtLoad.from !== this.time.from || this.timeAtLoad.to !== this.time.to);\n  }\n\n  setAutoRefresh(interval: any) {\n    this.dashboard.refresh = interval;\n    this.cancelNextRefresh();\n\n    if (interval) {\n      const intervalMs = kbn.interval_to_ms(interval);\n\n      this.refreshTimer = this.timer.register(\n        this.$timeout(() => {\n          this.startNextRefreshTimer(intervalMs);\n          this.refreshDashboard();\n        }, intervalMs)\n      );\n    }\n\n    // update url inside timeout to so that a digest happens after (called from react)\n    this.$timeout(() => {\n      const params = this.$location.search();\n      if (interval) {\n        params.refresh = interval;\n        this.$location.search(params);\n      } else if (params.refresh) {\n        delete params.refresh;\n        this.$location.search(params);\n      }\n    });\n  }\n\n  refreshDashboard() {\n    this.dashboard.timeRangeUpdated(this.timeRange());\n  }\n\n  private startNextRefreshTimer(afterMs: number) {\n    this.cancelNextRefresh();\n    this.refreshTimer = this.timer.register(\n      this.$timeout(() => {\n        this.startNextRefreshTimer(afterMs);\n        if (this.contextSrv.isGrafanaVisible()) {\n          this.refreshDashboard();\n        } else {\n          this.autoRefreshBlocked = true;\n        }\n      }, afterMs)\n    );\n  }\n\n  private cancelNextRefresh() {\n    this.timer.cancel(this.refreshTimer);\n  }\n\n  setTime(time: RawTimeRange, fromRouteUpdate?: boolean) {\n    _.extend(this.time, time);\n\n    // disable refresh if zoom in or zoom out\n    if (isDateTime(time.to)) {\n      this.oldRefresh = this.dashboard.refresh || this.oldRefresh;\n      this.setAutoRefresh(false);\n    } else if (this.oldRefresh && this.oldRefresh !== this.dashboard.refresh) {\n      this.setAutoRefresh(this.oldRefresh);\n      this.oldRefresh = null;\n    }\n\n    // update url\n    if (fromRouteUpdate !== true) {\n      const urlRange = this.timeRangeForUrl();\n      const urlParams = this.$location.search();\n      urlParams.from = urlRange.from;\n      urlParams.to = urlRange.to;\n      this.$location.search(urlParams);\n    }\n\n    this.$timeout(this.refreshDashboard.bind(this), 0);\n  }\n\n  timeRangeForUrl() {\n    const range = this.timeRange().raw;\n\n    if (isDateTime(range.from)) {\n      range.from = range.from.valueOf().toString();\n    }\n    if (isDateTime(range.to)) {\n      range.to = range.to.valueOf().toString();\n    }\n\n    return range;\n  }\n\n  timeRange(): TimeRange {\n    // make copies if they are moment  (do not want to return out internal moment, because they are mutable!)\n    const raw = {\n      from: isDateTime(this.time.from) ? dateTime(this.time.from) : this.time.from,\n      to: isDateTime(this.time.to) ? dateTime(this.time.to) : this.time.to,\n    };\n\n    const timezone: TimeZone = this.dashboard ? this.dashboard.getTimezone() : undefined;\n\n    return {\n      from: dateMath.parse(raw.from, false, timezone),\n      to: dateMath.parse(raw.to, true, timezone),\n      raw: raw,\n    };\n  }\n\n  zoomOut(e: any, factor: number) {\n    const range = this.timeRange();\n    const { from, to } = getZoomedTimeRange(range, factor);\n\n    this.setTime({ from: toUtc(from), to: toUtc(to) });\n  }\n\n  shiftTime(e: any, direction: number) {\n    const range = this.timeRange();\n    const { from, to } = getShiftedTimeRange(direction, range);\n\n    this.setTime({\n      from: toUtc(from),\n      to: toUtc(to),\n    });\n  }\n}\n\nlet singleton: TimeSrv;\n\nexport function setTimeSrv(srv: TimeSrv) {\n  singleton = srv;\n}\n\nexport function getTimeSrv(): TimeSrv {\n  return singleton;\n}\n\ncoreModule.service('timeSrv', TimeSrv);\n","import _ from 'lodash';\nimport angular from 'angular';\nimport coreModule from 'app/core/core_module';\nimport appEvents from 'app/core/app_events';\nimport config from 'app/core/config';\nimport { DashboardModel } from 'app/features/dashboard/state/DashboardModel';\nimport { DashboardSearchHit } from 'app/types/search';\nimport { ContextSrv } from './context_srv';\nimport { FolderInfo, DashboardDTO } from 'app/types';\nimport { BackendSrv as BackendService, getBackendSrv as getBackendService, BackendSrvRequest } from '@grafana/runtime';\n\nexport class BackendSrv implements BackendService {\n  private inFlightRequests: { [key: string]: Array<angular.IDeferred<any>> } = {};\n  private HTTP_REQUEST_CANCELED = -1;\n  private noBackendCache: boolean;\n\n  /** @ngInject */\n  constructor(\n    private $http: any,\n    private $q: angular.IQService,\n    private $timeout: angular.ITimeoutService,\n    private contextSrv: ContextSrv\n  ) {}\n\n  get(url: string, params?: any) {\n    return this.request({ method: 'GET', url, params });\n  }\n\n  delete(url: string) {\n    return this.request({ method: 'DELETE', url });\n  }\n\n  post(url: string, data?: any) {\n    return this.request({ method: 'POST', url, data });\n  }\n\n  patch(url: string, data: any) {\n    return this.request({ method: 'PATCH', url, data });\n  }\n\n  put(url: string, data: any) {\n    return this.request({ method: 'PUT', url, data });\n  }\n\n  withNoBackendCache(callback: any) {\n    this.noBackendCache = true;\n    return callback().finally(() => {\n      this.noBackendCache = false;\n    });\n  }\n\n  requestErrorHandler(err: any) {\n    if (err.isHandled) {\n      return;\n    }\n\n    let data = err.data || { message: 'Unexpected error' };\n    if (_.isString(data)) {\n      data = { message: data };\n    }\n\n    if (err.status === 422) {\n      appEvents.emit('alert-warning', ['Validation failed', data.message]);\n      throw data;\n    }\n\n    let severity = 'error';\n\n    if (err.status < 500) {\n      severity = 'warning';\n    }\n\n    if (data.message) {\n      let description = '';\n      let message = data.message;\n      if (message.length > 80) {\n        description = message;\n        message = 'Error';\n      }\n\n      appEvents.emit('alert-' + severity, [message, description]);\n    }\n\n    throw data;\n  }\n\n  request(options: BackendSrvRequest) {\n    options.retry = options.retry || 0;\n    const requestIsLocal = !options.url.match(/^http/);\n    const firstAttempt = options.retry === 0;\n\n    if (requestIsLocal) {\n      if (this.contextSrv.user && this.contextSrv.user.orgId) {\n        options.headers = options.headers || {};\n        options.headers['X-Grafana-Org-Id'] = this.contextSrv.user.orgId;\n      }\n\n      if (options.url.indexOf('/') === 0) {\n        options.url = options.url.substring(1);\n      }\n    }\n\n    return this.$http(options).then(\n      (results: any) => {\n        if (options.method !== 'GET') {\n          if (results && results.data.message) {\n            if (options.showSuccessAlert !== false) {\n              appEvents.emit('alert-success', [results.data.message]);\n            }\n          }\n        }\n        return results.data;\n      },\n      (err: any) => {\n        // handle unauthorized\n        if (err.status === 401 && this.contextSrv.user.isSignedIn && firstAttempt) {\n          return this.loginPing()\n            .then(() => {\n              options.retry = 1;\n              return this.request(options);\n            })\n            .catch((err: any) => {\n              if (err.status === 401) {\n                window.location.href = config.appSubUrl + '/logout';\n                throw err;\n              }\n            });\n        }\n\n        this.$timeout(this.requestErrorHandler.bind(this, err), 50);\n        throw err;\n      }\n    );\n  }\n\n  addCanceler(requestId: string, canceler: angular.IDeferred<any>) {\n    if (requestId in this.inFlightRequests) {\n      this.inFlightRequests[requestId].push(canceler);\n    } else {\n      this.inFlightRequests[requestId] = [canceler];\n    }\n  }\n\n  resolveCancelerIfExists(requestId: string) {\n    const cancelers = this.inFlightRequests[requestId];\n    if (!_.isUndefined(cancelers) && cancelers.length) {\n      cancelers[0].resolve();\n    }\n  }\n\n  datasourceRequest(options: any) {\n    let canceler: angular.IDeferred<any> = null;\n    options.retry = options.retry || 0;\n\n    // A requestID is provided by the datasource as a unique identifier for a\n    // particular query. If the requestID exists, the promise it is keyed to\n    // is canceled, canceling the previous datasource request if it is still\n    // in-flight.\n    const requestId = options.requestId;\n\n    if (requestId) {\n      this.resolveCancelerIfExists(requestId);\n      // create new canceler\n      canceler = this.$q.defer();\n      options.timeout = canceler.promise;\n      this.addCanceler(requestId, canceler);\n    }\n\n    const requestIsLocal = !options.url.match(/^http/);\n    const firstAttempt = options.retry === 0;\n\n    if (requestIsLocal) {\n      if (this.contextSrv.user && this.contextSrv.user.orgId) {\n        options.headers = options.headers || {};\n        options.headers['X-Grafana-Org-Id'] = this.contextSrv.user.orgId;\n      }\n\n      if (options.url.indexOf('/') === 0) {\n        options.url = options.url.substring(1);\n      }\n\n      if (options.headers && options.headers.Authorization) {\n        options.headers['X-DS-Authorization'] = options.headers.Authorization;\n        delete options.headers.Authorization;\n      }\n\n      if (this.noBackendCache) {\n        options.headers['X-Grafana-NoCache'] = 'true';\n      }\n    }\n\n    return this.$http(options)\n      .then((response: any) => {\n        if (!options.silent) {\n          appEvents.emit('ds-request-response', response);\n        }\n        return response;\n      })\n      .catch((err: any) => {\n        if (err.status === this.HTTP_REQUEST_CANCELED) {\n          throw { err, cancelled: true };\n        }\n\n        // handle unauthorized for backend requests\n        if (requestIsLocal && firstAttempt && err.status === 401) {\n          return this.loginPing()\n            .then(() => {\n              options.retry = 1;\n              if (canceler) {\n                canceler.resolve();\n              }\n              return this.datasourceRequest(options);\n            })\n            .catch((err: any) => {\n              if (err.status === 401) {\n                window.location.href = config.appSubUrl + '/logout';\n                throw err;\n              }\n            });\n        }\n\n        // populate error obj on Internal Error\n        if (_.isString(err.data) && err.status === 500) {\n          err.data = {\n            error: err.statusText,\n            response: err.data,\n          };\n        }\n\n        // for Prometheus\n        if (err.data && !err.data.message && _.isString(err.data.error)) {\n          err.data.message = err.data.error;\n        }\n        if (!options.silent) {\n          appEvents.emit('ds-request-error', err);\n        }\n        throw err;\n      })\n      .finally(() => {\n        // clean up\n        if (options.requestId) {\n          this.inFlightRequests[options.requestId].shift();\n        }\n      });\n  }\n\n  loginPing() {\n    return this.request({ url: '/api/login/ping', method: 'GET', retry: 1 });\n  }\n\n  search(query: any): Promise<DashboardSearchHit[]> {\n    return this.get('/api/search', query);\n  }\n\n  getDashboardBySlug(slug: string) {\n    return this.get(`/api/dashboards/db/${slug}`);\n  }\n\n  getDashboardByUid(uid: string) {\n    return this.get(`/api/dashboards/uid/${uid}`);\n  }\n\n  getFolderByUid(uid: string) {\n    return this.get(`/api/folders/${uid}`);\n  }\n\n  saveDashboard(\n    dash: DashboardModel,\n    { message = '', folderId, overwrite = false }: { message?: string; folderId?: number; overwrite?: boolean } = {}\n  ) {\n    return this.post('/api/dashboards/db/', {\n      dashboard: dash,\n      folderId,\n      overwrite,\n      message,\n    });\n  }\n\n  createFolder(payload: any) {\n    return this.post('/api/folders', payload);\n  }\n\n  deleteFolder(uid: string, showSuccessAlert: boolean) {\n    return this.request({ method: 'DELETE', url: `/api/folders/${uid}`, showSuccessAlert: showSuccessAlert === true });\n  }\n\n  deleteDashboard(uid: string, showSuccessAlert: boolean) {\n    return this.request({\n      method: 'DELETE',\n      url: `/api/dashboards/uid/${uid}`,\n      showSuccessAlert: showSuccessAlert === true,\n    });\n  }\n\n  deleteFoldersAndDashboards(folderUids: string[], dashboardUids: string[]) {\n    const tasks = [];\n\n    for (const folderUid of folderUids) {\n      tasks.push(this.createTask(this.deleteFolder.bind(this), true, folderUid, true));\n    }\n\n    for (const dashboardUid of dashboardUids) {\n      tasks.push(this.createTask(this.deleteDashboard.bind(this), true, dashboardUid, true));\n    }\n\n    return this.executeInOrder(tasks, []);\n  }\n\n  moveDashboards(dashboardUids: string[], toFolder: FolderInfo) {\n    const tasks = [];\n\n    for (const uid of dashboardUids) {\n      tasks.push(this.createTask(this.moveDashboard.bind(this), true, uid, toFolder));\n    }\n\n    return this.executeInOrder(tasks, []).then((result: any) => {\n      return {\n        totalCount: result.length,\n        successCount: _.filter(result, { succeeded: true }).length,\n        alreadyInFolderCount: _.filter(result, { alreadyInFolder: true }).length,\n      };\n    });\n  }\n\n  private moveDashboard(uid: string, toFolder: FolderInfo) {\n    const deferred = this.$q.defer();\n\n    this.getDashboardByUid(uid).then((fullDash: DashboardDTO) => {\n      const model = new DashboardModel(fullDash.dashboard, fullDash.meta);\n\n      if ((!fullDash.meta.folderId && toFolder.id === 0) || fullDash.meta.folderId === toFolder.id) {\n        deferred.resolve({ alreadyInFolder: true });\n        return;\n      }\n\n      const clone = model.getSaveModelClone();\n      const options = {\n        folderId: toFolder.id,\n        overwrite: false,\n      };\n\n      this.saveDashboard(clone, options)\n        .then(() => {\n          deferred.resolve({ succeeded: true });\n        })\n        .catch((err: any) => {\n          if (err.data && err.data.status === 'plugin-dashboard') {\n            err.isHandled = true;\n            options.overwrite = true;\n\n            this.saveDashboard(clone, options)\n              .then(() => {\n                deferred.resolve({ succeeded: true });\n              })\n              .catch((err: any) => {\n                deferred.resolve({ succeeded: false });\n              });\n          } else {\n            deferred.resolve({ succeeded: false });\n          }\n        });\n    });\n\n    return deferred.promise;\n  }\n\n  private createTask(fn: Function, ignoreRejections: boolean, ...args: any[]) {\n    return (result: any) => {\n      return fn\n        .apply(null, args)\n        .then((res: any) => {\n          return Array.prototype.concat(result, [res]);\n        })\n        .catch((err: any) => {\n          if (ignoreRejections) {\n            return result;\n          }\n\n          throw err;\n        });\n    };\n  }\n\n  private executeInOrder(tasks: any[], initialValue: any[]) {\n    return tasks.reduce(this.$q.when, initialValue);\n  }\n}\n\ncoreModule.service('backendSrv', BackendSrv);\n\n// Used for testing and things that really need BackendSrv\nexport function getBackendSrv(): BackendSrv {\n  return getBackendService() as BackendSrv;\n}\n","var path = 'public/app/plugins/datasource/elasticsearch/partials/bucket_agg.html';\nvar html = \"<div class=gf-form-inline>\\n\\t<div class=gf-form>\\n\\t\\t<label class=\\\"gf-form-label query-keyword width-7\\\">\\n\\t\\t\\t<span ng-show=isFirst>Group by</span>\\n\\t\\t\\t<span ng-hide=isFirst>Then by</span>\\n\\t\\t</label>\\n\\n\\t\\t<gf-form-dropdown model=agg.type lookup-text=true get-options=getBucketAggTypes() on-change=onTypeChanged() allow-custom=false label-mode=true css-class=width-10>\\n\\t\\t</gf-form-dropdown>\\n\\t\\t<gf-form-dropdown ng-if=agg.field model=agg.field get-options=getFieldsInternal() on-change=onChange() allow-custom=false label-mode=true css-class=width-12>\\n\\t\\t</gf-form-dropdown>\\n\\t</div>\\n\\n\\t<div class=\\\"gf-form gf-form--grow\\\">\\n\\t\\t<label class=\\\"gf-form-label gf-form-label--grow\\\">\\n\\t\\t\\t<a ng-click=toggleOptions()>\\n\\t\\t\\t\\t<i class=\\\"fa fa-caret-down\\\" ng-show=showOptions></i>\\n\\t\\t\\t\\t<i class=\\\"fa fa-caret-right\\\" ng-hide=showOptions></i>\\n\\t\\t\\t\\t{{settingsLinkText}}\\n\\t\\t\\t</a>\\n\\t\\t</label>\\n\\t</div>\\n\\n\\t<div class=gf-form>\\n\\t\\t<label class=gf-form-label ng-if=isFirst>\\n\\t\\t\\t<a class=pointer ng-click=addBucketAgg()><i class=\\\"fa fa-plus\\\"></i></a>\\n\\t\\t</label>\\n\\t\\t<label class=gf-form-label ng-if=\\\"bucketAggCount > 1\\\">\\n\\t\\t\\t<a class=pointer ng-click=removeBucketAgg()><i class=\\\"fa fa-minus\\\"></i></a>\\n\\t\\t</label>\\n\\t</div>\\n</div>\\n\\n<div class=gf-form-group ng-if=showOptions>\\n\\t<div ng-if=\\\"agg.type === 'date_histogram'\\\">\\n\\t\\t<div class=\\\"gf-form offset-width-7\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label width-10\\\">Interval</label>\\n\\t\\t\\t<gf-form-dropdown model=agg.settings.interval get-options=getIntervalOptions() on-change=onChangeInternal() allow-custom=true label-mode=true css-class=width-12>\\n\\t\\t\\t</gf-form-dropdown>\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"gf-form offset-width-7\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label width-10\\\">Min Doc Count</label>\\n\\t\\t\\t<input type=number class=\\\"gf-form-input max-width-12\\\" ng-model=agg.settings.min_doc_count ng-blur=onChangeInternal()>\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"gf-form offset-width-7\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label width-10\\\">\\n\\t\\t\\t\\tTrim edges\\n\\t\\t\\t\\t<info-popover mode=right-normal>\\n\\t\\t\\t\\t\\tTrim the edges on the timeseries datapoints\\n\\t\\t\\t\\t</info-popover>\\n\\t\\t\\t</label>\\n\\t\\t\\t<input class=\\\"gf-form-input max-width-12\\\" type=number ng-model=agg.settings.trimEdges ng-change=onChangeInternal()>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"gf-form offset-width-7\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label width-10\\\">\\n\\t\\t\\t\\tOffset\\n\\t\\t\\t\\t<info-popover mode=right-normal>\\n\\t\\t\\t\\t\\tChange the start value of each bucket by the specified positive (+) or negative offset (-) duration, such as 1h for an hour, or 1d for a day\\n\\t\\t\\t\\t</info-popover>\\n\\t\\t\\t</label>\\n\\t\\t\\t<input class=\\\"gf-form-input max-width-12\\\" type=text ng-model=agg.settings.offset ng-change=onChangeInternal()>\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n\\t<div ng-if=\\\"agg.type === 'histogram'\\\">\\n\\t\\t<div class=\\\"gf-form offset-width-7\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label width-10\\\">Interval</label>\\n\\t\\t\\t<input type=number class=\\\"gf-form-input max-width-12\\\" ng-model=agg.settings.interval ng-blur=onChangeInternal()>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"gf-form offset-width-7\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label width-10\\\">Min Doc Count</label>\\n\\t\\t\\t<input type=number class=\\\"gf-form-input max-width-12\\\" ng-model=agg.settings.min_doc_count ng-blur=onChangeInternal()>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div ng-if=\\\"agg.type === 'terms'\\\">\\n\\t\\t<div class=\\\"gf-form offset-width-7\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label width-10\\\">Order</label>\\n\\t\\t\\t<gf-form-dropdown model=agg.settings.order lookup-text=true get-options=getOrderOptions() on-change=onChangeInternal() label-mode=true css-class=width-12>\\n\\t\\t\\t</gf-form-dropdown>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"gf-form offset-width-7\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label width-10\\\">Size</label>\\n\\t\\t\\t<gf-form-dropdown model=agg.settings.size lookup-text=true get-options=getSizeOptions() on-change=onChangeInternal() label-mode=true allow-custom=true css-class=width-12>\\n\\t\\t\\t</gf-form-dropdown>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"gf-form offset-width-7\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label width-10\\\">Min Doc Count</label>\\n\\t\\t\\t<input type=number class=\\\"gf-form-input max-width-12\\\" ng-model=agg.settings.min_doc_count ng-blur=onChangeInternal()>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"gf-form offset-width-7\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label width-10\\\">Order By</label>\\n\\t\\t\\t<gf-form-dropdown model=agg.settings.orderBy lookup-text=true get-options=getOrderByOptions() on-change=onChangeInternal() label-mode=true css-class=width-12>\\n\\t\\t\\t</gf-form-dropdown>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"gf-form offset-width-7\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label width-10\\\">\\n\\t\\t\\t\\tMissing\\n\\t\\t\\t\\t<info-popover mode=right-normal>\\n\\t\\t\\t\\t\\tThe missing parameter defines how documents that are missing a value should be treated. By default they will be ignored but it is also possible to treat them as if they had a value\\n\\t\\t\\t\\t</info-popover>\\n\\t\\t\\t</label>\\n\\t\\t\\t<input type=text class=\\\"gf-form-input max-width-12\\\" empty-to-null ng-model=agg.settings.missing ng-blur=onChangeInternal() spellcheck=false>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div ng-if=\\\"agg.type === 'filters'\\\">\\n\\t\\t<div class=\\\"gf-form-inline offset-width-7\\\" ng-repeat=\\\"filter in agg.settings.filters\\\">\\n\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t<label class=\\\"gf-form-label width-10\\\">Query {{$index + 1}}</label>\\n\\t\\t\\t\\t<input type=text class=\\\"gf-form-input max-width-12\\\" ng-model=filter.query spellcheck=false placeholder=\\\"Lucene query\\\" ng-blur=onChangeInternal()>\\n\\t\\t\\t\\t<label class=\\\"gf-form-label width-10\\\">Label {{$index + 1}}</label>\\n\\t\\t\\t\\t<input type=text class=\\\"gf-form-input max-width-12\\\" ng-model=filter.label spellcheck=false placeholder=Label ng-blur=onChangeInternal()>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t<label class=gf-form-label ng-if=$first>\\n\\t\\t\\t\\t\\t<a class=pointer ng-click=addFiltersQuery()><i class=\\\"fa fa-plus\\\"></i></a>\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t<label class=gf-form-label ng-if=!$first>\\n\\t\\t\\t\\t\\t<a class=pointer ng-click=removeFiltersQuery(filter)><i class=\\\"fa fa-minus\\\"></i></a>\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div ng-if=\\\"agg.type === 'geohash_grid'\\\">\\n\\t\\t<div class=\\\"gf-form offset-width-7\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label width-10\\\">Precision</label>\\n\\t\\t\\t<input type=number class=\\\"gf-form-input max-width-12\\\" ng-model=agg.settings.precision spellcheck=false placeholder=3 ng-blur=onChangeInternal()>\\n\\t\\t</div>\\n\\t</div>\\n\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/panel/heatmap/module.html';\nvar html = \"<div class=heatmap-wrapper>\\n\\t<div class=heatmap-canvas-wrapper>\\n\\n\\t\\t<div class=datapoints-warning ng-if=ctrl.dataWarning>\\n\\t\\t\\t<span class=small bs-tooltip=ctrl.dataWarning.tip>{{ctrl.dataWarning.title}}</span>\\n\\t\\t</div>\\n\\n\\t\\t<div class=heatmap-panel ng-dblclick=ctrl.zoomOut()></div>\\n\\t</div>\\n\\t<div class=heatmap-legend-wrapper ng-if=ctrl.panel.legend.show>\\n\\t\\t<heatmap-legend></heatmap-legend>\\n\\t</div>\\n</div>\\n<div class=clearfix></div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"Nu4n\";","// Libraries\nimport React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport _ from 'lodash';\n// Utils & Services\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport { AngularComponent, getAngularLoader } from '@grafana/runtime';\nimport { Emitter } from 'app/core/utils/emitter';\nimport { getTimeSrv } from 'app/features/dashboard/services/TimeSrv';\n// Types\nimport { PanelModel } from '../state/PanelModel';\nimport { DataQuery, DataSourceApi, PanelData, DataQueryRequest, ErrorBoundaryAlert } from '@grafana/ui';\nimport { TimeRange, LoadingState, toLegacyResponseData } from '@grafana/data';\nimport { DashboardModel } from '../state/DashboardModel';\n\ninterface Props {\n  panel: PanelModel;\n  data: PanelData;\n  query: DataQuery;\n  dashboard: DashboardModel;\n  onAddQuery: (query?: DataQuery) => void;\n  onRemoveQuery: (query: DataQuery) => void;\n  onMoveQuery: (query: DataQuery, direction: number) => void;\n  onChange: (query: DataQuery) => void;\n  dataSourceValue: string | null;\n  inMixedMode: boolean;\n}\n\ninterface State {\n  loadedDataSourceValue: string | null | undefined;\n  datasource: DataSourceApi | null;\n  isCollapsed: boolean;\n  hasTextEditMode: boolean;\n  queryResponse?: PanelData;\n}\n\nexport class QueryEditorRow extends PureComponent<Props, State> {\n  element: HTMLElement | null = null;\n  angularScope: AngularQueryComponentScope | null;\n  angularQueryEditor: AngularComponent | null = null;\n\n  state: State = {\n    datasource: null,\n    isCollapsed: false,\n    loadedDataSourceValue: undefined,\n    hasTextEditMode: false,\n    queryResponse: null,\n  };\n\n  componentDidMount() {\n    this.loadDatasource();\n  }\n\n  componentWillUnmount() {\n    if (this.angularQueryEditor) {\n      this.angularQueryEditor.destroy();\n    }\n  }\n\n  getAngularQueryComponentScope(): AngularQueryComponentScope {\n    const { panel, query, dashboard } = this.props;\n    const { datasource } = this.state;\n\n    return {\n      datasource: datasource,\n      target: query,\n      panel: panel,\n      dashboard: dashboard,\n      refresh: () => panel.refresh(),\n      render: () => panel.render(),\n      events: panel.events,\n      range: getTimeSrv().timeRange(),\n    };\n  }\n\n  async loadDatasource() {\n    const { query, panel } = this.props;\n    const dataSourceSrv = getDatasourceSrv();\n    const datasource = await dataSourceSrv.get(query.datasource || panel.datasource);\n\n    this.setState({\n      datasource,\n      loadedDataSourceValue: this.props.dataSourceValue,\n      hasTextEditMode: _.has(datasource, 'components.QueryCtrl.prototype.toggleEditorMode'),\n    });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { loadedDataSourceValue } = this.state;\n    const { data, query, panel } = this.props;\n\n    if (data !== prevProps.data) {\n      this.setState({ queryResponse: filterPanelDataToQuery(data, query.refId) });\n\n      if (this.angularScope) {\n        this.angularScope.range = getTimeSrv().timeRange();\n      }\n\n      if (this.angularQueryEditor) {\n        notifyAngularQueryEditorsOfData(panel, data, this.angularQueryEditor);\n      }\n    }\n\n    // check if we need to load another datasource\n    if (loadedDataSourceValue !== this.props.dataSourceValue) {\n      if (this.angularQueryEditor) {\n        this.angularQueryEditor.destroy();\n        this.angularQueryEditor = null;\n      }\n      this.loadDatasource();\n      return;\n    }\n\n    if (!this.element || this.angularQueryEditor) {\n      return;\n    }\n\n    const loader = getAngularLoader();\n    const template = '<plugin-component type=\"query-ctrl\" />';\n    const scopeProps = { ctrl: this.getAngularQueryComponentScope() };\n    this.angularQueryEditor = loader.load(this.element, scopeProps, template);\n    this.angularScope = scopeProps.ctrl;\n  }\n\n  onToggleCollapse = () => {\n    this.setState({ isCollapsed: !this.state.isCollapsed });\n  };\n\n  onRunQuery = () => {\n    this.props.panel.refresh();\n  };\n\n  renderPluginEditor() {\n    const { query, data, onChange } = this.props;\n    const { datasource, queryResponse } = this.state;\n\n    if (datasource.components.QueryCtrl) {\n      return <div ref={element => (this.element = element)} />;\n    }\n\n    if (datasource.components.QueryEditor) {\n      const QueryEditor = datasource.components.QueryEditor;\n\n      return (\n        <QueryEditor\n          query={query}\n          datasource={datasource}\n          onChange={onChange}\n          onRunQuery={this.onRunQuery}\n          queryResponse={queryResponse}\n          panelData={data}\n        />\n      );\n    }\n\n    return <div>Data source plugin does not export any Query Editor component</div>;\n  }\n\n  onToggleEditMode = () => {\n    if (this.angularScope && this.angularScope.toggleEditorMode) {\n      this.angularScope.toggleEditorMode();\n      this.angularQueryEditor.digest();\n    }\n\n    if (this.state.isCollapsed) {\n      this.setState({ isCollapsed: false });\n    }\n  };\n\n  onRemoveQuery = () => {\n    this.props.onRemoveQuery(this.props.query);\n  };\n\n  onCopyQuery = () => {\n    const copy = _.cloneDeep(this.props.query);\n    this.props.onAddQuery(copy);\n  };\n\n  onDisableQuery = () => {\n    this.props.query.hide = !this.props.query.hide;\n    this.onRunQuery();\n    this.forceUpdate();\n  };\n\n  renderCollapsedText(): string | null {\n    const { datasource } = this.state;\n    if (datasource.getQueryDisplayText) {\n      return datasource.getQueryDisplayText(this.props.query);\n    }\n\n    if (this.angularScope && this.angularScope.getCollapsedText) {\n      return this.angularScope.getCollapsedText();\n    }\n    return null;\n  }\n\n  render() {\n    const { query, inMixedMode } = this.props;\n    const { datasource, isCollapsed, hasTextEditMode } = this.state;\n    const isDisabled = query.hide;\n\n    const bodyClasses = classNames('query-editor-row__body gf-form-query', {\n      'query-editor-row__body--collapsed': isCollapsed,\n    });\n\n    const rowClasses = classNames('query-editor-row', {\n      'query-editor-row--disabled': isDisabled,\n      'gf-form-disabled': isDisabled,\n    });\n\n    if (!datasource) {\n      return null;\n    }\n\n    return (\n      <div className={rowClasses}>\n        <div className=\"query-editor-row__header\">\n          <div className=\"query-editor-row__ref-id\" onClick={this.onToggleCollapse}>\n            {isCollapsed && <i className=\"fa fa-caret-right\" />}\n            {!isCollapsed && <i className=\"fa fa-caret-down\" />}\n            <span>{query.refId}</span>\n            {inMixedMode && <em className=\"query-editor-row__context-info\"> ({datasource.name})</em>}\n            {isDisabled && <em className=\"query-editor-row__context-info\"> Disabled</em>}\n          </div>\n          <div className=\"query-editor-row__collapsed-text\" onClick={this.onToggleEditMode}>\n            {isCollapsed && <div>{this.renderCollapsedText()}</div>}\n          </div>\n          <div className=\"query-editor-row__actions\">\n            {hasTextEditMode && (\n              <button\n                className=\"query-editor-row__action\"\n                onClick={this.onToggleEditMode}\n                title=\"Toggle text edit mode\"\n              >\n                <i className=\"fa fa-fw fa-pencil\" />\n              </button>\n            )}\n            <button className=\"query-editor-row__action\" onClick={() => this.props.onMoveQuery(query, 1)}>\n              <i className=\"fa fa-fw fa-arrow-down\" />\n            </button>\n            <button className=\"query-editor-row__action\" onClick={() => this.props.onMoveQuery(query, -1)}>\n              <i className=\"fa fa-fw fa-arrow-up\" />\n            </button>\n            <button className=\"query-editor-row__action\" onClick={this.onCopyQuery} title=\"Duplicate query\">\n              <i className=\"fa fa-fw fa-copy\" />\n            </button>\n            <button className=\"query-editor-row__action\" onClick={this.onDisableQuery} title=\"Disable/enable query\">\n              {isDisabled && <i className=\"fa fa-fw fa-eye-slash\" />}\n              {!isDisabled && <i className=\"fa fa-fw fa-eye\" />}\n            </button>\n            <button className=\"query-editor-row__action\" onClick={this.onRemoveQuery} title=\"Remove query\">\n              <i className=\"fa fa-fw fa-trash\" />\n            </button>\n          </div>\n        </div>\n        <div className={bodyClasses}>\n          <ErrorBoundaryAlert>{this.renderPluginEditor()}</ErrorBoundaryAlert>\n        </div>\n      </div>\n    );\n  }\n}\n\n// To avoid sending duplicate events for each row we have this global cached object here\n// So we can check if we already emitted this legacy data event\nlet globalLastPanelDataCache: PanelData = null;\n\nfunction notifyAngularQueryEditorsOfData(panel: PanelModel, data: PanelData, editor: AngularComponent) {\n  if (data === globalLastPanelDataCache) {\n    return;\n  }\n\n  globalLastPanelDataCache = data;\n\n  if (data.state === LoadingState.Done) {\n    const legacy = data.series.map(v => toLegacyResponseData(v));\n    panel.events.emit('data-received', legacy);\n  } else if (data.state === LoadingState.Error) {\n    panel.events.emit('data-error', data.error);\n  }\n\n  // Some query controllers listen to data error events and need a digest\n  // for some reason this needs to be done in next tick\n  setTimeout(editor.digest);\n}\n\nexport interface AngularQueryComponentScope {\n  target: DataQuery;\n  panel: PanelModel;\n  dashboard: DashboardModel;\n  events: Emitter;\n  refresh: () => void;\n  render: () => void;\n  datasource: DataSourceApi;\n  toggleEditorMode?: () => void;\n  getCollapsedText?: () => string;\n  range: TimeRange;\n}\n\n/**\n * Get a version of the PanelData limited to the query we are looking at\n */\nexport function filterPanelDataToQuery(data: PanelData, refId: string): PanelData | undefined {\n  const series = data.series.filter(series => series.refId === refId);\n\n  // No matching series\n  if (!series.length) {\n    return undefined;\n  }\n\n  // Don't pass the request if all requests are the same\n  const request: DataQueryRequest = undefined;\n  // TODO: look in sub-requets to match the info\n\n  // Only say this is an error if the error links to the query\n  let state = LoadingState.Done;\n  const error = data.error && data.error.refId === refId ? data.error : undefined;\n  if (error) {\n    state = LoadingState.Error;\n  }\n\n  const timeRange = data.timeRange;\n\n  return {\n    state,\n    series,\n    request,\n    error,\n    timeRange,\n  };\n}\n","import React from 'react';\nimport { ListProps, AbstractList } from './AbstractList';\n\nexport class InlineList<T> extends React.PureComponent<ListProps<T>> {\n  render() {\n    return <AbstractList inline {...this.props} />;\n  }\n}\n","var path = 'public/app/plugins/datasource/stackdriver/partials/config.html';\nvar html = \"<div class=gf-form-group>\\n  <div class=grafana-info-box>\\n    <h4>Stackdriver Authentication</h4>\\n    <p>There are two ways to authenticate the Stackdriver plugin - either by uploading a Service Account key file, or by\\n      automatically retrieving credentials from the Google metadata server. The latter option is only available\\n      when running Grafana on a GCE virtual machine.</p>\\n\\n    <h5>Uploading a Service Account Key File</h5>\\n    <p>\\n      First you need to create a Google Cloud Platform (GCP) Service Account for\\n      the Project you want to show data for. A Grafana datasource integrates with one GCP Project. If you want to\\n      visualize data from multiple GCP Projects then you need to create one datasource per GCP Project.\\n    </p>\\n    <p>\\n      The <strong>Monitoring Viewer</strong> role provides all the permissions that Grafana needs. The following API\\n      needs to be enabled on GCP for the datasource to work: <a class=external-link target=_blank href=https://console.cloud.google.com/apis/library/monitoring.googleapis.com>Monitoring\\n        API</a>\\n    </p>\\n\\n    <h5>GCE Default Service Account</h5>\\n    <p>\\n      If Grafana is running on a Google Compute Engine (GCE) virtual machine, it is possible for Grafana to\\n      automatically retrieve the default project id and authentication token from the metadata server. In order for this to\\n      work, you need to make sure that you have a service account that is setup as the default account for the virtual\\n      machine and that the service account has been given read access to the Stackdriver Monitoring API.\\n    </p>\\n\\n    <p>Detailed instructions on how to create a Service Account can be found <a class=external-link target=_blank href=http://docs.grafana.org/datasources/stackdriver/ >in\\n        the documentation.</a>\\n    </p>\\n  </div>\\n</div>\\n\\n<div class=gf-form-group>\\n  <div class=gf-form>\\n    <h3>Authentication</h3>\\n    <info-popover mode=header>Upload your Service Account key file or paste in the contents of the file. The file\\n      contents will be encrypted and saved in the Grafana database.</info-popover>\\n  </div>\\n\\n  <div class=gf-form-inline>\\n    <div class=\\\"gf-form max-width-30\\\">\\n      <span class=\\\"gf-form-label width-10\\\">Authentication Type</span>\\n      <div class=\\\"gf-form-select-wrapper max-width-24\\\">\\n        <select class=gf-form-input ng-model=ctrl.current.jsonData.authenticationType ng-options=\\\"f.key as f.value for f in ctrl.authenticationTypes\\\"></select>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div ng-if=\\\"ctrl.current.jsonData.authenticationType === ctrl.defaultAuthenticationType && !ctrl.current.jsonData.clientEmail && !ctrl.inputDataValid\\\">\\n    <div class=gf-form-group ng-if=!ctrl.inputDataValid>\\n      <div class=gf-form>\\n        <form>\\n          <dash-upload on-upload=ctrl.onUpload(dash) btn-text=\\\"Upload Service Account key file\\\"></dash-upload>\\n        </form>\\n      </div>\\n    </div>\\n    <div class=gf-form-group>\\n      <h5 class=section-heading ng-if=!ctrl.inputDataValid>Or paste Service Account key JSON</h5>\\n      <div class=gf-form ng-if=!ctrl.inputDataValid>\\n        <textarea rows=10 data-share-panel-url=\\\"\\\" class=gf-form-input ng-model=ctrl.jsonText ng-paste=ctrl.onPasteJwt($event)></textarea>\\n      </div>\\n      <div ng-repeat=\\\"valError in ctrl.validationErrors\\\" class=\\\"text-error p-l-1\\\">\\n        <i class=\\\"fa fa-warning\\\"></i>\\n        {{valError}}\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=gf-form-group ng-if=\\\"ctrl.current.jsonData.authenticationType === ctrl.defaultAuthenticationType && (ctrl.inputDataValid || ctrl.current.jsonData.clientEmail)\\\">\\n  <h6>Uploaded Key Details</h6>\\n\\n  <div class=gf-form>\\n    <span class=\\\"gf-form-label width-10\\\">Project</span>\\n    <input class=\\\"gf-form-input width-40\\\" disabled=disabled type=text ng-model=ctrl.current.jsonData.defaultProject />\\n  </div>\\n  <div class=gf-form>\\n    <span class=\\\"gf-form-label width-10\\\">Client Email</span>\\n    <input class=\\\"gf-form-input width-40\\\" disabled=disabled type=text ng-model=ctrl.current.jsonData.clientEmail />\\n  </div>\\n  <div class=gf-form>\\n    <span class=\\\"gf-form-label width-10\\\">Token URI</span>\\n    <input class=\\\"gf-form-input width-40\\\" disabled=disabled type=text ng-model=ctrl.current.jsonData.tokenUri />\\n  </div>\\n  <div class=gf-form ng-if=ctrl.current.secureJsonFields.privateKey>\\n    <span class=\\\"gf-form-label width-10\\\">Private Key</span>\\n    <input type=text class=\\\"gf-form-input max-width-12\\\" disabled=disabled value=configured>\\n  </div>\\n\\n  <div class=\\\"gf-form width-18\\\">\\n    <a class=\\\"btn btn-secondary gf-form-btn\\\" href=# ng-click=ctrl.resetValidationMessages()>Reset Service\\n      Account Key </a>\\n    <info-popover mode=right-normal>\\n      Reset to clear the uploaded key and upload a new file.\\n    </info-popover>\\n  </div>\\n</div>\\n\\n<p class=gf-form-label ng-hide=\\\"ctrl.current.secureJsonFields.privateKey || ctrl.current.jsonData.authenticationType !== ctrl.defaultAuthenticationType\\\"><i class=\\\"fa fa-save\\\"></i> Do not forget to save your changes after uploading a file.</p>\\n\\n<p class=gf-form-label ng-show=\\\"ctrl.current.jsonData.authenticationType !== ctrl.defaultAuthenticationType\\\"><i class=\\\"fa fa-save\\\"></i>\\n  Verify GCE default service account by clicking Save & Test</p>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","// Types\nimport { Unsubscribable } from 'rxjs';\nimport { Emitter } from 'app/core/core';\nimport { DataQuery, DataSourceSelectItem, DataSourceApi, QueryFixAction, PanelData } from '@grafana/ui';\n\nimport { LogLevel, TimeRange, LoadingState, AbsoluteTimeRange } from '@grafana/data';\nimport { ExploreId, ExploreItemState, HistoryItem, ExploreUIState, ExploreMode } from 'app/types/explore';\nimport { actionCreatorFactory, ActionOf } from 'app/core/redux/actionCreatorFactory';\n\n/**  Higher order actions\n *\n */\nexport enum ActionTypes {\n  SplitOpen = 'explore/SPLIT_OPEN',\n  ResetExplore = 'explore/RESET_EXPLORE',\n}\nexport interface SplitOpenAction {\n  type: ActionTypes.SplitOpen;\n  payload: {\n    itemState: ExploreItemState;\n  };\n}\n\nexport interface ResetExploreAction {\n  type: ActionTypes.ResetExplore;\n  payload: {};\n}\n\n/**  Lower order actions\n *\n */\nexport interface AddQueryRowPayload {\n  exploreId: ExploreId;\n  index: number;\n  query: DataQuery;\n}\n\nexport interface ChangeModePayload {\n  exploreId: ExploreId;\n  mode: ExploreMode;\n}\n\nexport interface ChangeQueryPayload {\n  exploreId: ExploreId;\n  query: DataQuery;\n  index: number;\n  override: boolean;\n}\n\nexport interface ChangeSizePayload {\n  exploreId: ExploreId;\n  width: number;\n  height: number;\n}\n\nexport interface ChangeRefreshIntervalPayload {\n  exploreId: ExploreId;\n  refreshInterval: string;\n}\n\nexport interface ClearQueriesPayload {\n  exploreId: ExploreId;\n}\n\nexport interface ClearOriginPayload {\n  exploreId: ExploreId;\n}\n\nexport interface ClearRefreshIntervalPayload {\n  exploreId: ExploreId;\n}\n\nexport interface HighlightLogsExpressionPayload {\n  exploreId: ExploreId;\n  expressions: string[];\n}\n\nexport interface InitializeExplorePayload {\n  exploreId: ExploreId;\n  containerWidth: number;\n  eventBridge: Emitter;\n  queries: DataQuery[];\n  range: TimeRange;\n  mode: ExploreMode;\n  ui: ExploreUIState;\n  originPanelId: number;\n}\n\nexport interface LoadDatasourceMissingPayload {\n  exploreId: ExploreId;\n}\n\nexport interface LoadDatasourcePendingPayload {\n  exploreId: ExploreId;\n  requestedDatasourceName: string;\n}\n\nexport interface LoadDatasourceReadyPayload {\n  exploreId: ExploreId;\n  history: HistoryItem[];\n}\n\nexport interface TestDatasourcePendingPayload {\n  exploreId: ExploreId;\n}\n\nexport interface TestDatasourceFailurePayload {\n  exploreId: ExploreId;\n  error: string;\n}\n\nexport interface TestDatasourceSuccessPayload {\n  exploreId: ExploreId;\n}\n\nexport interface ModifyQueriesPayload {\n  exploreId: ExploreId;\n  modification: QueryFixAction;\n  index: number;\n  modifier: (query: DataQuery, modification: QueryFixAction) => DataQuery;\n}\n\nexport interface QueryStartPayload {\n  exploreId: ExploreId;\n}\n\nexport interface QueryEndedPayload {\n  exploreId: ExploreId;\n  response: PanelData;\n}\n\nexport interface QueryStoreSubscriptionPayload {\n  exploreId: ExploreId;\n  querySubscription: Unsubscribable;\n}\n\nexport interface HistoryUpdatedPayload {\n  exploreId: ExploreId;\n  history: HistoryItem[];\n}\n\nexport interface RemoveQueryRowPayload {\n  exploreId: ExploreId;\n  index: number;\n}\n\nexport interface ScanStartPayload {\n  exploreId: ExploreId;\n}\n\nexport interface ScanStopPayload {\n  exploreId: ExploreId;\n}\n\nexport interface SetQueriesPayload {\n  exploreId: ExploreId;\n  queries: DataQuery[];\n}\n\nexport interface SplitCloseActionPayload {\n  itemId: ExploreId;\n}\n\nexport interface SplitOpenPayload {\n  itemState: ExploreItemState;\n}\n\nexport interface ToggleTablePayload {\n  exploreId: ExploreId;\n}\n\nexport interface ToggleGraphPayload {\n  exploreId: ExploreId;\n}\n\nexport interface UpdateUIStatePayload extends Partial<ExploreUIState> {\n  exploreId: ExploreId;\n}\n\nexport interface UpdateDatasourceInstancePayload {\n  exploreId: ExploreId;\n  datasourceInstance: DataSourceApi;\n}\n\nexport interface ToggleLogLevelPayload {\n  exploreId: ExploreId;\n  hiddenLogLevels: LogLevel[];\n}\n\nexport interface QueriesImportedPayload {\n  exploreId: ExploreId;\n  queries: DataQuery[];\n}\n\nexport interface LoadExploreDataSourcesPayload {\n  exploreId: ExploreId;\n  exploreDatasources: DataSourceSelectItem[];\n}\n\nexport interface SetUrlReplacedPayload {\n  exploreId: ExploreId;\n}\n\nexport interface ChangeRangePayload {\n  exploreId: ExploreId;\n  range: TimeRange;\n  absoluteRange: AbsoluteTimeRange;\n}\n\nexport interface ChangeLoadingStatePayload {\n  exploreId: ExploreId;\n  loadingState: LoadingState;\n}\n\nexport interface SetPausedStatePayload {\n  exploreId: ExploreId;\n  isPaused: boolean;\n}\n\nexport interface ResetExplorePayload {\n  force?: boolean;\n}\n\n/**\n * Adds a query row after the row with the given index.\n */\nexport const addQueryRowAction = actionCreatorFactory<AddQueryRowPayload>('explore/ADD_QUERY_ROW').create();\n\n/**\n * Change the mode of Explore.\n */\nexport const changeModeAction = actionCreatorFactory<ChangeModePayload>('explore/CHANGE_MODE').create();\n\n/**\n * Query change handler for the query row with the given index.\n * If `override` is reset the query modifications and run the queries. Use this to set queries via a link.\n */\nexport const changeQueryAction = actionCreatorFactory<ChangeQueryPayload>('explore/CHANGE_QUERY').create();\n\n/**\n * Keep track of the Explore container size, in particular the width.\n * The width will be used to calculate graph intervals (number of datapoints).\n */\nexport const changeSizeAction = actionCreatorFactory<ChangeSizePayload>('explore/CHANGE_SIZE').create();\n\n/**\n * Change the time range of Explore. Usually called from the Timepicker or a graph interaction.\n */\nexport const changeRefreshIntervalAction = actionCreatorFactory<ChangeRefreshIntervalPayload>(\n  'explore/CHANGE_REFRESH_INTERVAL'\n).create();\n\n/**\n * Clear all queries and results.\n */\nexport const clearQueriesAction = actionCreatorFactory<ClearQueriesPayload>('explore/CLEAR_QUERIES').create();\n\n/**\n * Clear origin panel id.\n */\nexport const clearOriginAction = actionCreatorFactory<ClearOriginPayload>('explore/CLEAR_ORIGIN').create();\n\n/**\n * Highlight expressions in the log results\n */\nexport const highlightLogsExpressionAction = actionCreatorFactory<HighlightLogsExpressionPayload>(\n  'explore/HIGHLIGHT_LOGS_EXPRESSION'\n).create();\n\n/**\n * Initialize Explore state with state from the URL and the React component.\n * Call this only on components for with the Explore state has not been initialized.\n */\nexport const initializeExploreAction = actionCreatorFactory<InitializeExplorePayload>(\n  'explore/INITIALIZE_EXPLORE'\n).create();\n\n/**\n * Display an error when no datasources have been configured\n */\nexport const loadDatasourceMissingAction = actionCreatorFactory<LoadDatasourceMissingPayload>(\n  'explore/LOAD_DATASOURCE_MISSING'\n).create();\n\n/**\n * Start the async process of loading a datasource to display a loading indicator\n */\nexport const loadDatasourcePendingAction = actionCreatorFactory<LoadDatasourcePendingPayload>(\n  'explore/LOAD_DATASOURCE_PENDING'\n).create();\n\n/**\n * Datasource loading was completed.\n */\nexport const loadDatasourceReadyAction = actionCreatorFactory<LoadDatasourceReadyPayload>(\n  'explore/LOAD_DATASOURCE_READY'\n).create();\n\n/**\n * Action to modify a query given a datasource-specific modifier action.\n * @param exploreId Explore area\n * @param modification Action object with a type, e.g., ADD_FILTER\n * @param index Optional query row index. If omitted, the modification is applied to all query rows.\n * @param modifier Function that executes the modification, typically `datasourceInstance.modifyQueries`.\n */\nexport const modifyQueriesAction = actionCreatorFactory<ModifyQueriesPayload>('explore/MODIFY_QUERIES').create();\n\nexport const queryStartAction = actionCreatorFactory<QueryStartPayload>('explore/QUERY_START').create();\n\nexport const queryEndedAction = actionCreatorFactory<QueryEndedPayload>('explore/QUERY_ENDED').create();\n\nexport const queryStreamUpdatedAction = actionCreatorFactory<QueryEndedPayload>(\n  'explore/QUERY_STREAM_UPDATED'\n).create();\n\nexport const queryStoreSubscriptionAction = actionCreatorFactory<QueryStoreSubscriptionPayload>(\n  'explore/QUERY_STORE_SUBSCRIPTION'\n).create();\n\n/**\n * Remove query row of the given index, as well as associated query results.\n */\nexport const removeQueryRowAction = actionCreatorFactory<RemoveQueryRowPayload>('explore/REMOVE_QUERY_ROW').create();\n\n/**\n * Start a scan for more results using the given scanner.\n * @param exploreId Explore area\n * @param scanner Function that a) returns a new time range and b) triggers a query run for the new range\n */\nexport const scanStartAction = actionCreatorFactory<ScanStartPayload>('explore/SCAN_START').create();\n\n/**\n * Stop any scanning for more results.\n */\nexport const scanStopAction = actionCreatorFactory<ScanStopPayload>('explore/SCAN_STOP').create();\n\n/**\n * Reset queries to the given queries. Any modifications will be discarded.\n * Use this action for clicks on query examples. Triggers a query run.\n */\nexport const setQueriesAction = actionCreatorFactory<SetQueriesPayload>('explore/SET_QUERIES').create();\n\n/**\n * Close the split view and save URL state.\n */\nexport const splitCloseAction = actionCreatorFactory<SplitCloseActionPayload>('explore/SPLIT_CLOSE').create();\n\n/**\n * Open the split view and copy the left state to be the right state.\n * The right state is automatically initialized.\n * The copy keeps all query modifications but wipes the query results.\n */\nexport const splitOpenAction = actionCreatorFactory<SplitOpenPayload>('explore/SPLIT_OPEN').create();\n\n/**\n * Update state of Explores UI elements (panels visiblity and deduplication  strategy)\n */\nexport const updateUIStateAction = actionCreatorFactory<UpdateUIStatePayload>('explore/UPDATE_UI_STATE').create();\n\n/**\n * Expand/collapse the table result viewer. When collapsed, table queries won't be run.\n */\nexport const toggleTableAction = actionCreatorFactory<ToggleTablePayload>('explore/TOGGLE_TABLE').create();\n\n/**\n * Expand/collapse the graph result viewer. When collapsed, graph queries won't be run.\n */\nexport const toggleGraphAction = actionCreatorFactory<ToggleGraphPayload>('explore/TOGGLE_GRAPH').create();\n\n/**\n * Updates datasource instance before datasouce loading has started\n */\nexport const updateDatasourceInstanceAction = actionCreatorFactory<UpdateDatasourceInstancePayload>(\n  'explore/UPDATE_DATASOURCE_INSTANCE'\n).create();\n\nexport const toggleLogLevelAction = actionCreatorFactory<ToggleLogLevelPayload>('explore/TOGGLE_LOG_LEVEL').create();\n\n/**\n * Resets state for explore.\n */\nexport const resetExploreAction = actionCreatorFactory<ResetExplorePayload>('explore/RESET_EXPLORE').create();\nexport const queriesImportedAction = actionCreatorFactory<QueriesImportedPayload>('explore/QueriesImported').create();\nexport const testDataSourcePendingAction = actionCreatorFactory<TestDatasourcePendingPayload>(\n  'explore/TEST_DATASOURCE_PENDING'\n).create();\nexport const testDataSourceSuccessAction = actionCreatorFactory<TestDatasourceSuccessPayload>(\n  'explore/TEST_DATASOURCE_SUCCESS'\n).create();\nexport const testDataSourceFailureAction = actionCreatorFactory<TestDatasourceFailurePayload>(\n  'explore/TEST_DATASOURCE_FAILURE'\n).create();\nexport const loadExploreDatasources = actionCreatorFactory<LoadExploreDataSourcesPayload>(\n  'explore/LOAD_EXPLORE_DATASOURCES'\n).create();\n\nexport const historyUpdatedAction = actionCreatorFactory<HistoryUpdatedPayload>('explore/HISTORY_UPDATED').create();\n\nexport const setUrlReplacedAction = actionCreatorFactory<SetUrlReplacedPayload>('explore/SET_URL_REPLACED').create();\n\nexport const changeRangeAction = actionCreatorFactory<ChangeRangePayload>('explore/CHANGE_RANGE').create();\n\nexport const changeLoadingStateAction = actionCreatorFactory<ChangeLoadingStatePayload>(\n  'changeLoadingStateAction'\n).create();\n\nexport const setPausedStateAction = actionCreatorFactory<SetPausedStatePayload>('explore/SET_PAUSED_STATE').create();\n\nexport type HigherOrderAction =\n  | ActionOf<SplitCloseActionPayload>\n  | SplitOpenAction\n  | ResetExploreAction\n  | ActionOf<any>;\n","export * from './utils';\nexport * from './types';\nexport * from './vector';\nexport * from './dataframe';\nexport * from './transformations';\nexport * from './datetime';\nexport * from './text';\n","var path = 'public/app/plugins/datasource/stackdriver/partials/query.filter.html';\nvar html = \"<div class=gf-form-inline>\\n  <div class=gf-form>\\n    <span class=\\\"gf-form-label query-keyword width-9\\\">Filter</span>\\n    <div class=gf-form ng-repeat=\\\"segment in ctrl.filterSegments.filterSegments\\\">\\n      <metric-segment segment=segment get-options=\\\"ctrl.getFilters(segment, $index)\\\" on-change=\\\"ctrl.filterSegmentUpdated(segment, $index)\\\"></metric-segment>\\n    </div>\\n  </div>\\n  <div class=\\\"gf-form gf-form--grow\\\"><div class=\\\"gf-form-label gf-form-label--grow\\\"></div></div>\\n</div>\\n<div class=gf-form-inline ng-hide=ctrl.hideGroupBys>\\n  <div class=gf-form>\\n    <span class=\\\"gf-form-label query-keyword width-9\\\">Group By</span>\\n    <div class=gf-form ng-repeat=\\\"segment in ctrl.groupBySegments\\\">\\n      <metric-segment segment=segment get-options=ctrl.getGroupBys(segment) on-change=\\\"ctrl.groupByChanged(segment, $index)\\\"></metric-segment>\\n    </div>\\n  </div>\\n  <div class=\\\"gf-form gf-form--grow\\\"><div class=\\\"gf-form-label gf-form-label--grow\\\"></div></div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/datasource/mssql/partials/annotations.editor.html';\nvar html = \"\\n<div class=gf-form-group>\\n  <div class=gf-form-inline>\\n\\t\\t<div class=\\\"gf-form gf-form--grow\\\">\\n\\t\\t\\t<textarea rows=10 class=gf-form-input ng-model=ctrl.annotation.rawQuery spellcheck=false placeholder=\\\"query expression\\\" data-min-length=0 data-items=100 ng-model-onblur ng-change=ctrl.panelCtrl.refresh()></textarea>\\n\\t\\t</div>\\n\\t</div>\\n\\n  <div class=gf-form-inline>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label query-keyword\\\" ng-click=\\\"ctrl.showHelp = !ctrl.showHelp\\\">\\n        Show Help\\n        <i class=\\\"fa fa-caret-down\\\" ng-show=ctrl.showHelp></i>\\n        <i class=\\\"fa fa-caret-right\\\" ng-hide=ctrl.showHelp></i>\\n      </label>\\n\\t\\t</div>\\n  </div>\\n\\n  <div class=gf-form ng-show=ctrl.showHelp>\\n\\t\\t<pre class=\\\"gf-form-pre alert alert-info\\\"><h6>Annotation Query Format</h6>\\nAn annotation is an event that is overlaid on top of graphs. The query can have up to three columns per row, the <b>time</b> column is mandatory. Annotation rendering is expensive so it is important to limit the number of rows returned.\\n\\n- column with alias: <b>time</b> for the annotation event time. Use epoch time or any native date data type.\\n- column with alias: <b>text</b> for the annotation text.\\n- column with alias: <b>tags</b> for annotation tags. This is a comma separated string of tags e.g. 'tag1,tag2'.\\n\\n\\nMacros:\\n- $__time(column) -&gt; column AS time\\n- $__timeEpoch(column) -&gt; DATEDIFF(second, '1970-01-01', column) AS time\\n- $__timeFilter(column) -&gt; column BETWEEN '2017-04-21T05:01:17Z' AND '2017-04-21T05:01:17Z'\\n- $__unixEpochFilter(column) -&gt; column &gt;= 1492750877 AND column &lt;= 1492750877\\n- $__unixEpochNanoFilter(column) -&gt;  column &gt;= 1494410783152415214 AND column &lt;= 1494497183142514872\\n\\nOr build your own conditionals using these macros which just return the values:\\n- $__timeFrom() -&gt;  '2017-04-21T05:01:17Z'\\n- $__timeTo() -&gt;  '2017-04-21T05:01:17Z'\\n- $__unixEpochFrom() -&gt; 1492750877\\n- $__unixEpochTo() -&gt; 1492750877\\n- $__unixEpochNanoFrom() -&gt;  1494410783152415214\\n- $__unixEpochNanoTo() -&gt;  1494497183142514872\\n\\t\\t</pre>\\n\\t</div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import uniqBy from 'lodash/uniqBy';\nimport { alignOptions, aggOptions, ValueTypes, MetricKind } from './constants';\nimport { TemplateSrv } from 'app/features/templating/template_srv';\nimport { StackdriverQuery } from './types';\n\nexport const extractServicesFromMetricDescriptors = (metricDescriptors: any) => uniqBy(metricDescriptors, 'service');\n\nexport const getMetricTypesByService = (metricDescriptors: any, service: any) =>\n  metricDescriptors.filter((m: any) => m.service === service);\n\nexport const getMetricTypes = (\n  metricDescriptors: any[],\n  metricType: string,\n  interpolatedMetricType: any,\n  selectedService: any\n) => {\n  const metricTypes = getMetricTypesByService(metricDescriptors, selectedService).map((m: any) => ({\n    value: m.type,\n    name: m.displayName,\n  }));\n  const metricTypeExistInArray = metricTypes.some((m: any) => m.value === interpolatedMetricType);\n  const selectedMetricType = metricTypeExistInArray ? metricType : metricTypes[0].value;\n  return {\n    metricTypes,\n    selectedMetricType,\n  };\n};\n\nexport const getAlignmentOptionsByMetric = (metricValueType: any, metricKind: any) => {\n  return !metricValueType\n    ? []\n    : alignOptions.filter(i => {\n        return i.valueTypes.indexOf(metricValueType) !== -1 && i.metricKinds.indexOf(metricKind) !== -1;\n      });\n};\n\nexport const getAggregationOptionsByMetric = (valueType: ValueTypes, metricKind: MetricKind) => {\n  return !metricKind\n    ? []\n    : aggOptions.filter(i => {\n        return i.valueTypes.indexOf(valueType) !== -1 && i.metricKinds.indexOf(metricKind) !== -1;\n      });\n};\n\nexport const getLabelKeys = async (datasource: any, selectedMetricType: any) => {\n  const refId = 'handleLabelKeysQuery';\n  const response = await datasource.getLabels(selectedMetricType, refId);\n  const labelKeys = response.meta\n    ? [\n        ...Object.keys(response.meta.resourceLabels).map(l => `resource.label.${l}`),\n        ...Object.keys(response.meta.metricLabels).map(l => `metric.label.${l}`),\n      ]\n    : [];\n  return labelKeys;\n};\n\nexport const getAlignmentPickerData = (\n  { valueType, metricKind, perSeriesAligner }: Partial<StackdriverQuery>,\n  templateSrv: TemplateSrv\n) => {\n  const options = getAlignmentOptionsByMetric(valueType, metricKind).map(option => ({\n    ...option,\n    label: option.text,\n  }));\n  const alignOptions = [\n    {\n      label: 'Alignment options',\n      expanded: true,\n      options,\n    },\n  ];\n  if (!options.some(o => o.value === templateSrv.replace(perSeriesAligner))) {\n    perSeriesAligner = options.length > 0 ? options[0].value : '';\n  }\n  return { alignOptions, perSeriesAligner };\n};\n","export function assignModelProperties(target: any, source: any, defaults: any, removeDefaults?: undefined) {\n  for (const key in defaults) {\n    if (!defaults.hasOwnProperty(key)) {\n      continue;\n    }\n\n    target[key] = source[key] === undefined ? defaults[key] : source[key];\n  }\n}\n","import angular, { ILocationService } from 'angular';\nimport _ from 'lodash';\nimport { VariableSrv } from 'app/features/templating/all';\n\nexport class SubMenuCtrl {\n  annotations: any;\n  variables: any;\n  dashboard: any;\n\n  /** @ngInject */\n  constructor(private variableSrv: VariableSrv, private $location: ILocationService) {\n    this.annotations = this.dashboard.templating.list;\n    this.variables = this.variableSrv.variables;\n  }\n\n  annotationStateChanged() {\n    this.dashboard.startRefresh();\n  }\n\n  variableUpdated(variable: any) {\n    this.variableSrv.variableUpdated(variable, true);\n  }\n\n  openEditView(editview: any) {\n    const search = _.extend(this.$location.search(), { editview: editview });\n    this.$location.search(search);\n  }\n}\n\nexport function submenuDirective() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/features/dashboard/components/SubMenu/template.html',\n    controller: SubMenuCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      dashboard: '=',\n    },\n  };\n}\n\nangular.module('grafana.directives').directive('dashboardSubmenu', submenuDirective);\n","// Libaries\nimport React, { PureComponent } from 'react';\n\n// Utils & Services\nimport { AngularComponent, getAngularLoader } from '@grafana/runtime';\n\n// Types\nimport { DashboardModel } from '../../state/DashboardModel';\n\nexport interface Props {\n  dashboard: DashboardModel | null;\n}\n\nexport class SubMenu extends PureComponent<Props> {\n  element: HTMLElement;\n  angularCmp: AngularComponent;\n\n  componentDidMount() {\n    const loader = getAngularLoader();\n\n    const template = '<dashboard-submenu dashboard=\"dashboard\" />';\n    const scopeProps = { dashboard: this.props.dashboard };\n\n    this.angularCmp = loader.load(this.element, scopeProps, template);\n  }\n\n  componentWillUnmount() {\n    if (this.angularCmp) {\n      this.angularCmp.destroy();\n    }\n  }\n\n  render() {\n    return <div ref={element => (this.element = element)} />;\n  }\n}\n","export { SubMenuCtrl } from './SubMenuCtrl';\nexport { SubMenu } from './SubMenu';\n","import { has } from 'lodash';\nimport { getValueFormat, getValueFormatterIndex, getValueFormats } from '@grafana/ui';\nimport { stringToJsRegex, TimeRange, deprecationWarning } from '@grafana/data';\n\nconst kbn: any = {};\n\nkbn.valueFormats = {};\n\nkbn.regexEscape = (value: string) => {\n  return value.replace(/[\\\\^$*+?.()|[\\]{}\\/]/g, '\\\\$&');\n};\n\n///// HELPER FUNCTIONS /////\n\nkbn.round_interval = (interval: number) => {\n  switch (true) {\n    // 0.015s\n    case interval < 15:\n      return 10; // 0.01s\n    // 0.035s\n    case interval < 35:\n      return 20; // 0.02s\n    // 0.075s\n    case interval < 75:\n      return 50; // 0.05s\n    // 0.15s\n    case interval < 150:\n      return 100; // 0.1s\n    // 0.35s\n    case interval < 350:\n      return 200; // 0.2s\n    // 0.75s\n    case interval < 750:\n      return 500; // 0.5s\n    // 1.5s\n    case interval < 1500:\n      return 1000; // 1s\n    // 3.5s\n    case interval < 3500:\n      return 2000; // 2s\n    // 7.5s\n    case interval < 7500:\n      return 5000; // 5s\n    // 12.5s\n    case interval < 12500:\n      return 10000; // 10s\n    // 17.5s\n    case interval < 17500:\n      return 15000; // 15s\n    // 25s\n    case interval < 25000:\n      return 20000; // 20s\n    // 45s\n    case interval < 45000:\n      return 30000; // 30s\n    // 1.5m\n    case interval < 90000:\n      return 60000; // 1m\n    // 3.5m\n    case interval < 210000:\n      return 120000; // 2m\n    // 7.5m\n    case interval < 450000:\n      return 300000; // 5m\n    // 12.5m\n    case interval < 750000:\n      return 600000; // 10m\n    // 12.5m\n    case interval < 1050000:\n      return 900000; // 15m\n    // 25m\n    case interval < 1500000:\n      return 1200000; // 20m\n    // 45m\n    case interval < 2700000:\n      return 1800000; // 30m\n    // 1.5h\n    case interval < 5400000:\n      return 3600000; // 1h\n    // 2.5h\n    case interval < 9000000:\n      return 7200000; // 2h\n    // 4.5h\n    case interval < 16200000:\n      return 10800000; // 3h\n    // 9h\n    case interval < 32400000:\n      return 21600000; // 6h\n    // 1d\n    case interval < 86400000:\n      return 43200000; // 12h\n    // 1w\n    case interval < 604800000:\n      return 86400000; // 1d\n    // 3w\n    case interval < 1814400000:\n      return 604800000; // 1w\n    // 6w\n    case interval < 3628800000:\n      return 2592000000; // 30d\n    default:\n      return 31536000000; // 1y\n  }\n};\n\nkbn.secondsToHms = (seconds: number) => {\n  const numyears = Math.floor(seconds / 31536000);\n  if (numyears) {\n    return numyears + 'y';\n  }\n  const numdays = Math.floor((seconds % 31536000) / 86400);\n  if (numdays) {\n    return numdays + 'd';\n  }\n  const numhours = Math.floor(((seconds % 31536000) % 86400) / 3600);\n  if (numhours) {\n    return numhours + 'h';\n  }\n  const numminutes = Math.floor((((seconds % 31536000) % 86400) % 3600) / 60);\n  if (numminutes) {\n    return numminutes + 'm';\n  }\n  const numseconds = Math.floor((((seconds % 31536000) % 86400) % 3600) % 60);\n  if (numseconds) {\n    return numseconds + 's';\n  }\n  const nummilliseconds = Math.floor(seconds * 1000.0);\n  if (nummilliseconds) {\n    return nummilliseconds + 'ms';\n  }\n\n  return 'less than a millisecond'; //'just now' //or other string you like;\n};\n\nkbn.secondsToHhmmss = (seconds: number) => {\n  const strings: string[] = [];\n  const numhours = Math.floor(seconds / 3600);\n  const numminutes = Math.floor((seconds % 3600) / 60);\n  const numseconds = Math.floor((seconds % 3600) % 60);\n  numhours > 9 ? strings.push('' + numhours) : strings.push('0' + numhours);\n  numminutes > 9 ? strings.push('' + numminutes) : strings.push('0' + numminutes);\n  numseconds > 9 ? strings.push('' + numseconds) : strings.push('0' + numseconds);\n  return strings.join(':');\n};\n\nkbn.to_percent = (nr: number, outof: number) => {\n  return Math.floor((nr / outof) * 10000) / 100 + '%';\n};\n\nkbn.addslashes = (str: string) => {\n  str = str.replace(/\\\\/g, '\\\\\\\\');\n  str = str.replace(/\\'/g, \"\\\\'\");\n  str = str.replace(/\\\"/g, '\\\\\"');\n  str = str.replace(/\\0/g, '\\\\0');\n  return str;\n};\n\nkbn.interval_regex = /(\\d+(?:\\.\\d+)?)(ms|[Mwdhmsy])/;\n\n// histogram & trends\nkbn.intervals_in_seconds = {\n  y: 31536000,\n  M: 2592000,\n  w: 604800,\n  d: 86400,\n  h: 3600,\n  m: 60,\n  s: 1,\n  ms: 0.001,\n};\n\nkbn.calculateInterval = (range: TimeRange, resolution: number, lowLimitInterval: string[]) => {\n  let lowLimitMs = 1; // 1 millisecond default low limit\n  let intervalMs;\n\n  if (lowLimitInterval) {\n    if (lowLimitInterval[0] === '>') {\n      lowLimitInterval = lowLimitInterval.slice(1);\n    }\n    lowLimitMs = kbn.interval_to_ms(lowLimitInterval);\n  }\n\n  intervalMs = kbn.round_interval((range.to.valueOf() - range.from.valueOf()) / resolution);\n  if (lowLimitMs > intervalMs) {\n    intervalMs = lowLimitMs;\n  }\n\n  return {\n    intervalMs: intervalMs,\n    interval: kbn.secondsToHms(intervalMs / 1000),\n  };\n};\n\nkbn.describe_interval = (str: string) => {\n  const matches = str.match(kbn.interval_regex);\n  if (!matches || !has(kbn.intervals_in_seconds, matches[2])) {\n    throw new Error('Invalid interval string, expecting a number followed by one of \"Mwdhmsy\"');\n  } else {\n    return {\n      sec: kbn.intervals_in_seconds[matches[2]],\n      type: matches[2],\n      count: parseInt(matches[1], 10),\n    };\n  }\n};\n\nkbn.interval_to_ms = (str: string) => {\n  const info = kbn.describe_interval(str);\n  return info.sec * 1000 * info.count;\n};\n\nkbn.interval_to_seconds = (str: string) => {\n  const info = kbn.describe_interval(str);\n  return info.sec * info.count;\n};\n\nkbn.query_color_dot = (color: string, diameter: string) => {\n  return (\n    '<div class=\"icon-circle\" style=\"' +\n    ['display:inline-block', 'color:' + color, 'font-size:' + diameter + 'px'].join(';') +\n    '\"></div>'\n  );\n};\n\nkbn.slugifyForUrl = (str: string) => {\n  return str\n    .toLowerCase()\n    .replace(/[^\\w ]+/g, '')\n    .replace(/ +/g, '-');\n};\n\n/** deprecated since 6.1, use grafana/data */\nkbn.stringToJsRegex = (str: string) => {\n  deprecationWarning('kbn.ts', 'kbn.stringToJsRegex()', '@grafana/data');\n  return stringToJsRegex(str);\n};\n\nkbn.toFixed = (value: number | null, decimals: number) => {\n  if (value === null) {\n    return '';\n  }\n\n  const factor = decimals ? Math.pow(10, Math.max(0, decimals)) : 1;\n  const formatted = String(Math.round(value * factor) / factor);\n\n  // if exponent return directly\n  if (formatted.indexOf('e') !== -1 || value === 0) {\n    return formatted;\n  }\n\n  // If tickDecimals was specified, ensure that we have exactly that\n  // much precision; otherwise default to the value's own precision.\n  if (decimals != null) {\n    const decimalPos = formatted.indexOf('.');\n    const precision = decimalPos === -1 ? 0 : formatted.length - decimalPos - 1;\n    if (precision < decimals) {\n      return (precision ? formatted : formatted + '.') + String(factor).substr(1, decimals - precision);\n    }\n  }\n\n  return formatted;\n};\n\nkbn.toFixedScaled = (\n  value: number,\n  decimals: number,\n  scaledDecimals: number | null,\n  additionalDecimals: number,\n  ext: number\n) => {\n  if (scaledDecimals === null) {\n    return kbn.toFixed(value, decimals) + ext;\n  } else {\n    return kbn.toFixed(value, scaledDecimals + additionalDecimals) + ext;\n  }\n};\n\nkbn.roundValue = (num: number, decimals: number) => {\n  if (num === null) {\n    return null;\n  }\n  const n = Math.pow(10, decimals);\n  const formatted = (n * num).toFixed(decimals);\n  return Math.round(parseFloat(formatted)) / n;\n};\n\n///// FORMAT MENU /////\n\nkbn.getUnitFormats = () => {\n  return getValueFormats();\n};\n\n//\n// Backward compatible layer for value formats to support old plugins\n//\nif (typeof Proxy !== 'undefined') {\n  kbn.valueFormats = new Proxy(kbn.valueFormats, {\n    get(target, name, receiver) {\n      if (typeof name !== 'string') {\n        throw { message: `Value format ${String(name)} is not a string` };\n      }\n\n      const formatter = getValueFormat(name);\n      if (formatter) {\n        return formatter;\n      }\n\n      // default to look here\n      return Reflect.get(target, name, receiver);\n    },\n  });\n} else {\n  kbn.valueFormats = getValueFormatterIndex();\n}\n\nexport default kbn;\n","var path = 'public/app/plugins/datasource/elasticsearch/partials/metric_agg.html';\nvar html = \"<div class=gf-form-inline ng-class=\\\"{'gf-form-disabled': agg.hide}\\\">\\n\\t<div class=gf-form>\\n\\t\\t<label class=\\\"gf-form-label query-keyword width-7\\\">\\n\\t\\t\\tMetric\\n\\t\\t\\t&nbsp;\\n\\t\\t\\t<a ng-click=toggleShowMetric() bs-tooltip=\\\"'Click to toggle show / hide metric'\\\">\\n\\t\\t\\t\\t<i class=\\\"fa fa-eye\\\" ng-hide=agg.hide></i>\\n\\t\\t\\t\\t<i class=\\\"fa fa-eye-slash\\\" ng-show=agg.hide></i>\\n\\t\\t\\t</a>\\n\\t\\t</label>\\n\\t</div>\\n\\n\\t<div class=gf-form>\\n\\t\\t<metric-segment-model property=agg.type options=metricAggTypes on-change=onTypeChange() custom=false css-class=width-10></metric-segment-model>\\n\\t\\t<metric-segment-model ng-if=aggDef.requiresField property=agg.field get-options=getFieldsInternal() on-change=onChange() css-class=width-12></metric-segment-model>\\n\\t\\t<metric-segment-model ng-if=\\\"aggDef.isPipelineAgg && !aggDef.supportsMultipleBucketPaths\\\" property=agg.pipelineAgg options=pipelineAggOptions on-change=onChangeInternal() custom=false css-class=width-12></metric-segment-model>\\n\\t</div>\\n\\n  <div class=\\\"gf-form gf-form--grow\\\" ng-if=\\\"aggDef.isPipelineAgg && aggDef.supportsMultipleBucketPaths\\\">\\n\\t\\t<label class=\\\"gf-form-label gf-form-label--grow\\\">\\n\\t\\t\\t<a ng-click=toggleVariables()>\\n\\t\\t\\t\\t<i class=\\\"fa fa-caret-down\\\" ng-show=showVariables></i>\\n\\t\\t\\t\\t<i class=\\\"fa fa-caret-right\\\" ng-hide=showVariables></i>\\n        {{variablesLinkText}}\\n\\t\\t\\t</a>\\n\\t\\t</label>\\n\\t</div>\\n\\n\\t<div class=\\\"gf-form gf-form--grow\\\">\\n\\t\\t<label class=\\\"gf-form-label gf-form-label--grow\\\">\\n\\t\\t\\t<a ng-click=toggleOptions() ng-if=settingsLinkText>\\n\\t\\t\\t\\t<i class=\\\"fa fa-caret-down\\\" ng-show=showOptions></i>\\n\\t\\t\\t\\t<i class=\\\"fa fa-caret-right\\\" ng-hide=showOptions></i>\\n\\t\\t\\t\\t\\t{{settingsLinkText}}\\n\\t\\t\\t</a>\\n\\t\\t</label>\\n\\t</div>\\n\\n\\t<div class=gf-form>\\n\\t\\t<label class=gf-form-label ng-if=isFirst>\\n\\t\\t\\t<a class=pointer ng-click=addMetricAgg()><i class=\\\"fa fa-plus\\\"></i></a>\\n\\t\\t</label>\\n\\t\\t<label class=gf-form-label ng-if=!isSingle>\\n\\t\\t\\t<a class=pointer ng-click=removeMetricAgg()><i class=\\\"fa fa-minus\\\"></i></a>\\n\\t\\t</label>\\n\\t</div>\\n</div>\\n\\n<div class=gf-form-group ng-if=showVariables>\\n\\t<elastic-pipeline-variables variables=agg.pipelineVariables options=pipelineAggOptions on-change=onChangeInternal() />\\n  <div class=\\\"gf-form offset-width-7\\\">\\n    <label class=\\\"gf-form-label width-10\\\">\\n      Script\\n      <info-popover mode=right-normal>\\n        Elasticsearch v5.0 and above: Scripting language is Painless. Use <i>params.&lt;var&gt;</i> to reference a variable.<br/><br/>\\n        Elasticsearch pre-v5.0: Scripting language is per default Groovy if not changed. For Groovy use <i>&lt;var&gt;</i> to reference a variable.\\n      </info-popover>\\n    </label>\\n    <input type=text class=\\\"gf-form-input max-width-24\\\" empty-to-null ng-model=agg.settings.script ng-blur=onChangeInternal() spellcheck=false placeholder=\\\"params.var1 / params.var2\\\">\\n  </div>\\n</div>\\n\\n<div class=gf-form-group ng-if=showOptions>\\n\\t<div class=\\\"gf-form offset-width-7\\\" ng-if=\\\"agg.type === 'derivative'\\\">\\n\\t\\t<label class=\\\"gf-form-label width-10\\\">Unit</label>\\n\\t\\t<input type=text class=\\\"gf-form-input max-width-12\\\" ng-model=agg.settings.unit ng-blur=onChangeInternal() spellcheck=false>\\n\\t</div>\\n\\n  <div ng-if=\\\"agg.type === 'moving_avg'\\\">\\n    <div class=\\\"gf-form offset-width-7\\\">\\n      <label class=\\\"gf-form-label width-10\\\">Model</label>\\n      <metric-segment-model property=agg.settings.model options=movingAvgModelTypes on-change=onChangeClearInternal() custom=false css-class=width-12></metric-segment-model>\\n    </div>\\n\\n    <div class=\\\"gf-form offset-width-7\\\">\\n      <label class=\\\"gf-form-label width-10\\\">Window</label>\\n      <input type=number class=\\\"gf-form-input max-width-12\\\" ng-model=agg.settings.window ng-blur=onChangeInternal() spellcheck=false>\\n    </div>\\n\\n    <div class=\\\"gf-form offset-width-7\\\">\\n      <label class=\\\"gf-form-label width-10\\\">Predict</label>\\n      <input type=number class=\\\"gf-form-input max-width-12\\\" ng-model=agg.settings.predict ng-blur=onChangeInternal() spellcheck=false>\\n    </div>\\n\\n\\n    <div class=\\\"gf-form offset-width-7\\\" ng-repeat=\\\"setting in modelSettings\\\">\\n      <label class=\\\"gf-form-label width-10\\\">{{setting.text}}</label>\\n      <input type=number class=\\\"gf-form-input max-width-12\\\" ng-model=agg.settings.settings[setting.value] ng-blur=onChangeInternal() spellcheck=false>\\n    </div>\\n\\n    <gf-form-switch ng-if=\\\"agg.settings.model == 'holt_winters'\\\" class=\\\"gf-form offset-width-7\\\" label=Pad label-class=width-10 checked=agg.settings.settings.pad on-change=onChangeInternal()></gf-form-switch>\\n    <gf-form-switch ng-if=\\\"agg.settings.model.match('ewma|holt_winters|holt') !== null\\\" class=\\\"gf-form offset-width-7\\\" label=Minimize label-class=width-10 checked=agg.settings.minimize on-change=onChangeInternal()></gf-form-switch>\\n  </div>\\n\\n  <div class=\\\"gf-form offset-width-7\\\" ng-if=\\\"agg.type === 'percentiles'\\\">\\n    <label class=\\\"gf-form-label width-10\\\">Percentiles</label>\\n    <input type=text class=\\\"gf-form-input max-width-12\\\" ng-model=agg.settings.percents array-join ng-blur=onChange()>\\n  </div>\\n  <div class=\\\"gf-form offset-width-7\\\" ng-if=\\\"agg.type === 'raw_document'\\\">\\n    <label class=\\\"gf-form-label width-10\\\">Size</label>\\n    <input type=number class=\\\"gf-form-input max-width-12\\\" ng-model=agg.settings.size ng-blur=onChange()>\\n  </div>\\n\\n\\n  <div class=\\\"gf-form offset-width-7\\\" ng-if=\\\"agg.type === 'cardinality'\\\">\\n    <label class=\\\"gf-form-label width-10\\\">Precision threshold</label>\\n    <input type=number class=\\\"gf-form-input max-width-12\\\" ng-model=agg.settings.precision_threshold ng-blur=onChange()>\\n  </div>\\n\\n  <div ng-if=\\\"agg.type === 'extended_stats'\\\">\\n    <gf-form-switch ng-repeat=\\\"stat in extendedStats\\\" class=\\\"gf-form offset-width-7\\\" label={{stat.text}} label-class=width-10 checked=agg.meta[stat.value] on-change=onChangeInternal()></gf-form-switch>\\n\\n    <div class=\\\"gf-form offset-width-7\\\">\\n      <label class=\\\"gf-form-label width-10\\\">Sigma</label>\\n      <input type=number class=\\\"gf-form-input max-width-12\\\" placeholder=3 ng-model=agg.settings.sigma ng-blur=onChange()>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"gf-form offset-width-7\\\" ng-if=aggDef.supportsInlineScript>\\n    <label class=\\\"gf-form-label width-10\\\">Script</label>\\n    <input type=text class=\\\"gf-form-input max-width-12\\\" empty-to-null ng-model=agg.inlineScript ng-blur=onChangeInternal() spellcheck=false placeholder=\\\"_value * 1\\\">\\n  </div>\\n\\n  <div class=\\\"gf-form offset-width-7\\\" ng-if=aggDef.supportsMissing>\\n\\t\\t<label class=\\\"gf-form-label width-10\\\">\\n\\t\\t\\tMissing\\n\\t\\t\\t<tip>The missing parameter defines how documents that are missing a value should be treated. By default they will be ignored but it is also possible to treat them as if they had a value</tip>\\n\\t\\t</label>\\n\\t\\t<input type=number class=\\\"gf-form-input max-width-12\\\" empty-to-null ng-model=agg.settings.missing ng-blur=onChangeInternal() spellcheck=false>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/features/admin/partials/settings.html';\nvar html = \"<page-header model=ctrl.navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\">\\n\\n\\t<div class=\\\"grafana-info-box span8\\\" style=\\\"margin:20px 0 25px 0\\\">\\n\\t\\tThese system settings are defined in grafana.ini or custom.ini (or overridden in ENV variables).\\n\\t\\tTo change these you currently need to restart grafana.\\n\\t</div>\\n\\n\\t<table class=filter-table>\\n\\t\\t<tr ng-repeat-start=\\\"(secName, secValue) in settings\\\">\\n\\t\\t\\t<td class=admin-settings-section>{{secName}}</td>\\n\\t\\t\\t<td></td>\\n\\t\\t</tr>\\n\\t\\t<tr ng-repeat=\\\"(keyName, keyValue) in secValue\\\" ng-repeat-end>\\n\\t\\t\\t<td style=padding-left:25px>{{keyName}}</td>\\n\\t\\t\\t<td>{{keyValue}}</td>\\n\\t\\t</tr>\\n\\t</table>\\n</div>\\n\\n\\n\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import coreModule from 'app/core/core_module';\nimport { provideTheme } from 'app/core/utils/ConfigProvider';\n\nexport function react2AngularDirective(name: string, component: any, options: any) {\n  coreModule.directive(name, [\n    'reactDirective',\n    reactDirective => {\n      return reactDirective(provideTheme(component), options);\n    },\n  ]);\n}\n","var path = 'public/app/features/org/partials/select_org.html';\nvar html = \"<page-header model=navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\">\\n\\n\\t<div class=signup>\\n\\t\\t<div class=login-form>\\n\\n\\t\\t\\t<div class=modal-tagline>\\n\\t\\t\\t\\tYou have been added to another Organization due to an open invitation!\\n\\n\\t\\t\\t\\tPlease select which organization you want to <br>\\n\\t\\t\\t\\tuse right now (you can change this later at any time).\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div style=\\\"display:inline-block;width:400px;margin:30px 0\\\">\\n\\t\\t\\t\\t<div ng-repeat=\\\"org in orgs\\\">\\n\\t\\t\\t\\t\\t<a ng-click=setUsingOrg(org) class=\\\"btn btn-primary\\\">\\n\\t\\t\\t\\t\\t\\t{{org.name}} ({{org.role}})\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/features/admin/partials/edit_user.html';\nvar html = \"<page-header model=navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\">\\n  <h3 class=page-sub-heading>Edit User</h3>\\n\\n  <form name=userForm class=gf-form-group>\\n    <div class=gf-form>\\n      <span class=\\\"gf-form-label width-10\\\">Name</span>\\n      <input type=text required ng-model=user.name class=\\\"gf-form-input max-width-25\\\"/>\\n    </div>\\n    <div class=gf-form>\\n      <span class=\\\"gf-form-label width-10\\\">Email</span>\\n      <input type=email ng-model=user.email class=\\\"gf-form-input max-width-25\\\"/>\\n    </div>\\n    <div class=gf-form>\\n      <span class=\\\"gf-form-label width-10\\\">Username</span>\\n      <input type=text ng-model=user.login class=\\\"gf-form-input max-width-25\\\"/>\\n    </div>\\n\\n    <div class=gf-form-button-row>\\n      <button type=submit class=\\\"btn btn-primary\\\" ng-click=update() ng-show=!createMode>Update</button>\\n    </div>\\n  </form>\\n\\n  <h3 class=page-heading>Change password</h3>\\n\\n  <form name=passwordForm class=gf-form-group>\\n    <div class=gf-form>\\n      <span class=\\\"gf-form-label width-10\\\">New password</span>\\n      <input type=password required ng-minlength=4 ng-model=password class=\\\"gf-form-input max-width-25\\\"/>\\n    </div>\\n\\n    <div class=gf-form-button-row>\\n      <button type=submit class=\\\"btn btn-primary\\\" ng-click=setPassword()>Update</button>\\n    </div>\\n  </form>\\n\\n  <h3 class=page-heading>Permissions</h3>\\n\\n  <form name=passwordForm class=gf-form-group>\\n    <div class=gf-form>\\n      <gf-form-switch class=gf-form label=\\\"Grafana Admin\\\" checked=permissions.isGrafanaAdmin switch-class=max-width-6 on-change=updatePermissions()></gf-form-switch>\\n    </div>\\n  </form>\\n\\n  <h3 class=page-heading>Organizations</h3>\\n\\n  <form name=addOrgForm class=gf-form-group>\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <span class=gf-form-label>Add</span>\\n        <input type=text ng-model=newOrg.name bs-typeahead=searchOrgs required class=\\\"gf-form-input max-width-20\\\" placeholder=\\\"organization name\\\"/>\\n      </div>\\n      <div class=gf-form>\\n        <span class=gf-form-label>Role</span>\\n        <span class=gf-form-select-wrapper>\\n          <select type=text ng-model=newOrg.role class=\\\"gf-form-input width-10\\\" ng-options=\\\"f for f in ['Viewer', 'Editor', 'Admin']\\\"></select>\\n        </span>\\n      </div>\\n      <div class=gf-form>\\n        <button class=\\\"btn btn-primary gf-form-btn\\\" ng-click=addOrgUser()>Add</button>\\n      </div>\\n    </div>\\n  </form>\\n\\n  <div class=gf-form-group>\\n    <table class=filter-table>\\n      <thead>\\n        <tr>\\n          <th>Name</th>\\n          <th>Role</th>\\n          <th></th>\\n        </tr>\\n      </thead>\\n      <tr ng-repeat=\\\"org in orgs\\\">\\n        <td>{{org.name}} <span class=\\\"label label-info\\\" ng-show=\\\"org.orgId === user.orgId\\\">Current</span></td>\\n        <td>\\n          <div class=gf-form>\\n            <span class=gf-form-select-wrapper>\\n              <select type=text ng-model=org.role class=\\\"gf-form-input max-width-12\\\" ng-options=\\\"f for f in ['Viewer', 'Editor', 'Admin']\\\" ng-change=updateOrgUser(org)>\\n              </select>\\n            </span>\\n          </div>\\n        </td>\\n        <td style=width:1%>\\n          <a ng-click=removeOrgUser(org) class=\\\"btn btn-danger btn-small\\\">\\n            <i class=\\\"fa fa-remove\\\"></i>\\n          </a>\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n\\n  <h3 class=page-heading>Sessions</h3>\\n\\n  <div class=gf-form-group>\\n    <div class=gf-form>\\n      <table class=\\\"filter-table form-inline\\\">\\n        <thead>\\n          <tr>\\n            <th>Last seen</th>\\n            <th>Logged on</th>\\n            <th>IP address</th>\\n            <th>Browser &amp; OS</th>\\n            <th></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr ng-repeat=\\\"session in sessions\\\">\\n            <td ng-if=session.isActive>Now</td>\\n            <td ng-if=!session.isActive>{{session.seenAt}}</td>\\n            <td>{{session.createdAt}}</td>\\n            <td>{{session.clientIp}}</td>\\n            <td>{{session.browser}} on {{session.os}} {{session.osVersion}}</td>\\n            <td>\\n              <button class=\\\"btn btn-danger btn-small\\\" ng-click=revokeUserSession(session.id)>\\n                <i class=\\\"fa fa-power-off\\\"></i>\\n              </button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n    <div class=gf-form-button-row>\\n      <button ng-if=sessions.length class=\\\"btn btn-danger\\\" ng-click=revokeAllUserSessions()>\\n        Logout user from all devices\\n      </button>\\n    </div>\\n  </div>\\n\\n\\n  <h3 class=page-heading>User status</h3>\\n\\n  <div class=gf-form-group>\\n    <div class=gf-form-button-row>\\n      <button type=submit class=\\\"btn btn-danger\\\" ng-if=!user.isDisabled ng-click=disableUser($event) bs-tooltip=\\\"user.isExternal ? 'External user cannot be enabled or disabled' : ''\\\" ng-class=\\\"{'disabled': user.isExternal}\\\">\\n        Disable\\n      </button>\\n      <button type=submit class=\\\"btn btn-primary\\\" ng-if=user.isDisabled ng-click=disableUser($event) bs-tooltip=\\\"user.isExternal ? 'External user cannot be enabled or disabled' : ''\\\" ng-class=\\\"{'disabled': user.isExternal}\\\">\\n        Enable\\n      </button>\\n      <button type=submit class=\\\"btn btn-danger\\\" ng-click=deleteUser(user) ng-show=!createMode>Delete User</button>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import _ from 'lodash';\nimport { colors, getFlotPairs, ansicolor } from '@grafana/ui';\n\nimport {\n  Labels,\n  LogLevel,\n  DataFrame,\n  findCommonLabels,\n  findUniqueLabels,\n  getLogLevel,\n  FieldType,\n  getLogLevelFromKey,\n  LogRowModel,\n  LogsModel,\n  LogsMetaItem,\n  LogsMetaKind,\n  LogsDedupStrategy,\n  GraphSeriesXY,\n  dateTime,\n  toUtc,\n  NullValueMode,\n  toDataFrame,\n  FieldCache,\n} from '@grafana/data';\nimport { getThemeColor } from 'app/core/utils/colors';\nimport { hasAnsiCodes } from 'app/core/utils/text';\nimport { sortInAscendingOrder } from 'app/core/utils/explore';\nimport { getGraphSeriesModel } from 'app/plugins/panel/graph2/getGraphSeriesModel';\n\nexport const LogLevelColor = {\n  [LogLevel.critical]: colors[7],\n  [LogLevel.warning]: colors[1],\n  [LogLevel.error]: colors[4],\n  [LogLevel.info]: colors[0],\n  [LogLevel.debug]: colors[5],\n  [LogLevel.trace]: colors[2],\n  [LogLevel.unknown]: getThemeColor('#8e8e8e', '#dde4ed'),\n};\n\nconst isoDateRegexp = /\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-6]\\d[,\\.]\\d+([+-][0-2]\\d:[0-5]\\d|Z)/g;\nfunction isDuplicateRow(row: LogRowModel, other: LogRowModel, strategy: LogsDedupStrategy): boolean {\n  switch (strategy) {\n    case LogsDedupStrategy.exact:\n      // Exact still strips dates\n      return row.entry.replace(isoDateRegexp, '') === other.entry.replace(isoDateRegexp, '');\n\n    case LogsDedupStrategy.numbers:\n      return row.entry.replace(/\\d/g, '') === other.entry.replace(/\\d/g, '');\n\n    case LogsDedupStrategy.signature:\n      return row.entry.replace(/\\w/g, '') === other.entry.replace(/\\w/g, '');\n\n    default:\n      return false;\n  }\n}\n\nexport function dedupLogRows(logs: LogsModel, strategy: LogsDedupStrategy): LogsModel {\n  if (strategy === LogsDedupStrategy.none) {\n    return logs;\n  }\n\n  const dedupedRows = logs.rows.reduce((result: LogRowModel[], row: LogRowModel, index, list) => {\n    const rowCopy = { ...row };\n    const previous = result[result.length - 1];\n    if (index > 0 && isDuplicateRow(row, previous, strategy)) {\n      previous.duplicates++;\n    } else {\n      rowCopy.duplicates = 0;\n      result.push(rowCopy);\n    }\n    return result;\n  }, []);\n\n  return {\n    ...logs,\n    rows: dedupedRows,\n  };\n}\n\nexport function filterLogLevels(logs: LogsModel, hiddenLogLevels: Set<LogLevel>): LogsModel {\n  if (hiddenLogLevels.size === 0) {\n    return logs;\n  }\n\n  const filteredRows = logs.rows.reduce((result: LogRowModel[], row: LogRowModel, index, list) => {\n    if (!hiddenLogLevels.has(row.logLevel)) {\n      result.push(row);\n    }\n    return result;\n  }, []);\n\n  return {\n    ...logs,\n    rows: filteredRows,\n  };\n}\n\nexport function makeSeriesForLogs(rows: LogRowModel[], intervalMs: number): GraphSeriesXY[] {\n  // currently interval is rangeMs / resolution, which is too low for showing series as bars.\n  // need at least 10px per bucket, so we multiply interval by 10. Should be solved higher up the chain\n  // when executing queries & interval calculated and not here but this is a temporary fix.\n  // intervalMs = intervalMs * 10;\n\n  // Graph time series by log level\n  const seriesByLevel: any = {};\n  const bucketSize = intervalMs * 10;\n  const seriesList: any[] = [];\n\n  const sortedRows = rows.sort(sortInAscendingOrder);\n  for (const row of sortedRows) {\n    let series = seriesByLevel[row.logLevel];\n\n    if (!series) {\n      seriesByLevel[row.logLevel] = series = {\n        lastTs: null,\n        datapoints: [],\n        alias: row.logLevel,\n        color: LogLevelColor[row.logLevel],\n      };\n\n      seriesList.push(series);\n    }\n\n    // align time to bucket size - used Math.floor for calculation as time of the bucket\n    // must be in the past (before Date.now()) to be displayed on the graph\n    const time = Math.floor(row.timeEpochMs / bucketSize) * bucketSize;\n\n    // Entry for time\n    if (time === series.lastTs) {\n      series.datapoints[series.datapoints.length - 1][0]++;\n    } else {\n      series.datapoints.push([1, time]);\n      series.lastTs = time;\n    }\n\n    // add zero to other levels to aid stacking so each level series has same number of points\n    for (const other of seriesList) {\n      if (other !== series && other.lastTs !== time) {\n        other.datapoints.push([0, time]);\n        other.lastTs = time;\n      }\n    }\n  }\n\n  return seriesList.map(series => {\n    series.datapoints.sort((a: number[], b: number[]) => {\n      return a[1] - b[1];\n    });\n\n    // EEEP: converts GraphSeriesXY to DataFrame and back again!\n    const data = toDataFrame(series);\n    const points = getFlotPairs({\n      xField: data.fields[1],\n      yField: data.fields[0],\n      nullValueMode: NullValueMode.Null,\n    });\n\n    const graphSeries: GraphSeriesXY = {\n      color: series.color,\n      label: series.alias,\n      data: points,\n      isVisible: true,\n      yAxis: {\n        index: 1,\n        min: 0,\n        tickDecimals: 0,\n      },\n    };\n\n    return graphSeries;\n  });\n}\n\nfunction isLogsData(series: DataFrame) {\n  return series.fields.some(f => f.type === FieldType.time) && series.fields.some(f => f.type === FieldType.string);\n}\n\nexport function dataFrameToLogsModel(dataFrame: DataFrame[], intervalMs: number): LogsModel {\n  const metricSeries: DataFrame[] = [];\n  const logSeries: DataFrame[] = [];\n\n  for (const series of dataFrame) {\n    if (isLogsData(series)) {\n      logSeries.push(series);\n      continue;\n    }\n\n    metricSeries.push(series);\n  }\n\n  const logsModel = logSeriesToLogsModel(logSeries);\n  if (logsModel) {\n    if (metricSeries.length === 0) {\n      logsModel.series = makeSeriesForLogs(logsModel.rows, intervalMs);\n    } else {\n      logsModel.series = getGraphSeriesModel(\n        metricSeries,\n        {},\n        { showBars: true, showLines: false, showPoints: false },\n        {\n          asTable: false,\n          isVisible: true,\n          placement: 'under',\n        }\n      );\n    }\n\n    return logsModel;\n  }\n\n  return {\n    hasUniqueLabels: false,\n    rows: [],\n    meta: [],\n    series: [],\n  };\n}\n\nexport function logSeriesToLogsModel(logSeries: DataFrame[]): LogsModel {\n  if (logSeries.length === 0) {\n    return undefined;\n  }\n\n  const allLabels: Labels[] = [];\n  for (let n = 0; n < logSeries.length; n++) {\n    const series = logSeries[n];\n    if (series.labels) {\n      allLabels.push(series.labels);\n    }\n  }\n\n  let commonLabels: Labels = {};\n  if (allLabels.length > 0) {\n    commonLabels = findCommonLabels(allLabels);\n  }\n\n  const rows: LogRowModel[] = [];\n  let hasUniqueLabels = false;\n\n  for (let i = 0; i < logSeries.length; i++) {\n    const series = logSeries[i];\n    const fieldCache = new FieldCache(series);\n    const uniqueLabels = findUniqueLabels(series.labels, commonLabels);\n    if (Object.keys(uniqueLabels).length > 0) {\n      hasUniqueLabels = true;\n    }\n\n    const timeField = fieldCache.getFirstFieldOfType(FieldType.time);\n    const stringField = fieldCache.getFirstFieldOfType(FieldType.string);\n    const logLevelField = fieldCache.getFieldByName('level');\n\n    let seriesLogLevel: LogLevel | undefined = undefined;\n    if (series.labels && Object.keys(series.labels).indexOf('level') !== -1) {\n      seriesLogLevel = getLogLevelFromKey(series.labels['level']);\n    }\n\n    for (let j = 0; j < series.length; j++) {\n      const ts = timeField.values.get(j);\n      const time = dateTime(ts);\n      const timeEpochMs = time.valueOf();\n      const timeFromNow = time.fromNow();\n      const timeLocal = time.format('YYYY-MM-DD HH:mm:ss');\n      const timeUtc = toUtc(ts).format('YYYY-MM-DD HH:mm:ss');\n\n      let message = stringField.values.get(j);\n      // This should be string but sometimes isn't (eg elastic) because the dataFrame is not strongly typed.\n      message = typeof message === 'string' ? message : JSON.stringify(message);\n\n      let logLevel = LogLevel.unknown;\n      if (logLevelField) {\n        logLevel = getLogLevelFromKey(logLevelField.values.get(j));\n      } else if (seriesLogLevel) {\n        logLevel = seriesLogLevel;\n      } else {\n        logLevel = getLogLevel(message);\n      }\n      const hasAnsi = hasAnsiCodes(message);\n      const searchWords = series.meta && series.meta.searchWords ? series.meta.searchWords : [];\n\n      rows.push({\n        logLevel,\n        timeFromNow,\n        timeEpochMs,\n        timeLocal,\n        timeUtc,\n        uniqueLabels,\n        hasAnsi,\n        searchWords,\n        entry: hasAnsi ? ansicolor.strip(message) : message,\n        raw: message,\n        labels: series.labels,\n        timestamp: ts,\n      });\n    }\n  }\n\n  // Meta data to display in status\n  const meta: LogsMetaItem[] = [];\n  if (_.size(commonLabels) > 0) {\n    meta.push({\n      label: 'Common labels',\n      value: commonLabels,\n      kind: LogsMetaKind.LabelsMap,\n    });\n  }\n\n  const limits = logSeries.filter(series => series.meta && series.meta.limit);\n\n  if (limits.length > 0) {\n    meta.push({\n      label: 'Limit',\n      value: `${limits[0].meta.limit} (${rows.length} returned)`,\n      kind: LogsMetaKind.String,\n    });\n  }\n\n  return {\n    hasUniqueLabels,\n    meta,\n    rows,\n  };\n}\n","import _ from 'lodash';\n\nexport class QueryPartDef {\n  type: string;\n  params: any[];\n  defaultParams: any[];\n  renderer: any;\n  category: any;\n  addStrategy: any;\n\n  constructor(options: any) {\n    this.type = options.type;\n    this.params = options.params;\n    this.defaultParams = options.defaultParams;\n    this.renderer = options.renderer;\n    this.category = options.category;\n    this.addStrategy = options.addStrategy;\n  }\n}\n\nexport class QueryPart {\n  part: any;\n  def: QueryPartDef;\n  params: any[];\n  text: string;\n\n  constructor(part: any, def: any) {\n    this.part = part;\n    this.def = def;\n    if (!this.def) {\n      throw { message: 'Could not find query part ' + part.type };\n    }\n\n    part.params = part.params || _.clone(this.def.defaultParams);\n    this.params = part.params;\n    this.updateText();\n  }\n\n  render(innerExpr: string) {\n    return this.def.renderer(this, innerExpr);\n  }\n\n  hasMultipleParamsInString(strValue: string, index: number) {\n    if (strValue.indexOf(',') === -1) {\n      return false;\n    }\n\n    return this.def.params[index + 1] && this.def.params[index + 1].optional;\n  }\n\n  updateParam(strValue: string, index: number) {\n    // handle optional parameters\n    // if string contains ',' and next param is optional, split and update both\n    if (this.hasMultipleParamsInString(strValue, index)) {\n      _.each(strValue.split(','), (partVal, idx) => {\n        this.updateParam(partVal.trim(), idx);\n      });\n      return;\n    }\n\n    if (strValue === '' && this.def.params[index].optional) {\n      this.params.splice(index, 1);\n    } else {\n      this.params[index] = strValue;\n    }\n\n    this.part.params = this.params;\n    this.updateText();\n  }\n\n  updateText() {\n    if (this.params.length === 0) {\n      this.text = this.def.type + '()';\n      return;\n    }\n\n    let text = this.def.type + '(';\n    text += this.params.join(', ');\n    text += ')';\n    this.text = text;\n  }\n}\n\nexport function functionRenderer(part: any, innerExpr: string) {\n  const str = part.def.type + '(';\n  const parameters = _.map(part.params, (value, index) => {\n    const paramType = part.def.params[index];\n    if (paramType.type === 'time') {\n      if (value === 'auto') {\n        value = '$__interval';\n      }\n    }\n    if (paramType.quote === 'single') {\n      return \"'\" + value + \"'\";\n    } else if (paramType.quote === 'double') {\n      return '\"' + value + '\"';\n    }\n\n    return value;\n  });\n\n  if (innerExpr) {\n    parameters.unshift(innerExpr);\n  }\n  return str + parameters.join(', ') + ')';\n}\n\nexport function suffixRenderer(part: QueryPartDef, innerExpr: string) {\n  return innerExpr + ' ' + part.params[0];\n}\n\nexport function identityRenderer(part: QueryPartDef, innerExpr: string) {\n  return part.params[0];\n}\n\nexport function quotedIdentityRenderer(part: QueryPartDef, innerExpr: string) {\n  return '\"' + part.params[0] + '\"';\n}\n","import React, { useContext, MouseEvent } from 'react';\nimport { CallToActionCard, LinkButton, ThemeContext } from '@grafana/ui';\nimport { css } from 'emotion';\nexport interface Props {\n  title: string;\n  buttonIcon: string;\n  buttonLink?: string;\n  buttonTitle: string;\n  onClick?: (event: MouseEvent) => void;\n  proTip?: string;\n  proTipLink?: string;\n  proTipLinkTitle?: string;\n  proTipTarget?: string;\n  infoBox?: { __html: string };\n  infoBoxTitle?: string;\n}\n\nconst ctaStyle = css`\n  text-align: center;\n`;\n\nconst infoBoxStyles = css`\n  max-width: 700px;\n  margin: 0 auto;\n`;\n\nconst EmptyListCTA: React.FunctionComponent<Props> = ({\n  title,\n  buttonIcon,\n  buttonLink,\n  buttonTitle,\n  onClick,\n  proTip,\n  proTipLink,\n  proTipLinkTitle,\n  proTipTarget,\n  infoBox,\n  infoBoxTitle,\n}) => {\n  const theme = useContext(ThemeContext);\n\n  const footer = () => {\n    return (\n      <>\n        {proTip ? (\n          <span key=\"proTipFooter\">\n            <i className=\"fa fa-rocket\" />\n            <> ProTip: {proTip} </>\n            <a href={proTipLink} target={proTipTarget} className=\"text-link\">\n              {proTipLinkTitle}\n            </a>\n          </span>\n        ) : (\n          ''\n        )}\n        {infoBox ? (\n          <div key=\"infoBoxHtml\" className={`grafana-info-box ${infoBoxStyles}`}>\n            {infoBoxTitle && <h5>{infoBoxTitle}</h5>}\n            <div dangerouslySetInnerHTML={infoBox} />\n          </div>\n        ) : (\n          ''\n        )}\n      </>\n    );\n  };\n\n  const ctaElementClassName = !footer()\n    ? css`\n        margin-bottom: 20px;\n      `\n    : '';\n\n  const ctaElement = (\n    <LinkButton size=\"lg\" onClick={onClick} href={buttonLink} icon={buttonIcon} className={ctaElementClassName}>\n      {buttonTitle}\n    </LinkButton>\n  );\n\n  return (\n    <CallToActionCard\n      className={ctaStyle}\n      message={title}\n      footer={footer()}\n      callToActionElement={ctaElement}\n      theme={theme}\n    />\n  );\n};\n\nexport default EmptyListCTA;\n","/**\n * AngularStrap - Twitter Bootstrap directives for AngularJS\n * @version v0.7.5 - 2013-07-21\n * @link http://mgcrea.github.com/angular-strap\n * @author Olivier Louvignes <olivier@mg-crea.com>\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\nangular.module('$strap.config', []).value('$strapConfig', {});\nangular.module('$strap.filters', ['$strap.config']);\nangular.module('$strap.directives', ['$strap.config']);\nangular.module('$strap', [\n  '$strap.filters',\n  '$strap.directives',\n  '$strap.config'\n]);\n'use strict';\nangular.module('$strap.directives').factory('$modal', [\n  '$rootScope',\n  '$compile',\n  '$http',\n  '$timeout',\n  '$q',\n  '$templateCache',\n  '$strapConfig',\n  function ($rootScope, $compile, $http, $timeout, $q, $templateCache, $strapConfig) {\n    var ModalFactory = function ModalFactory(config) {\n      function Modal(config) {\n        var options = angular.extend({ show: true }, $strapConfig.modal, config);\n        var scope = options.scope ? options.scope : $rootScope.$new()\n        var templateUrl = options.template;\n        return $q.when(options.templateHtml || $templateCache.get(templateUrl) || $http.get(templateUrl, { cache: true }).then(function (res) {\n          return res.data;\n        })).then(function onSuccess(template) {\n          var id = scope.$id;\n          if (templateUrl) {\n            id += templateUrl.replace('.html', '').replace(/[\\/|\\.|:]/g, '-');\n          }\n          // grafana change, removed fade\n          var $modal = $('<div class=\"modal hide\" tabindex=\"-1\"></div>').attr('id', id).html(template);\n          if (options.modalClass)\n            $modal.addClass(options.modalClass);\n          $('body').append($modal);\n          $timeout(function () {\n            $compile($modal)(scope);\n          });\n          scope.$modal = function (name) {\n            $modal.modal(name);\n          };\n          angular.forEach([\n            'show',\n            'hide'\n          ], function (name) {\n            scope[name] = function () {\n              $modal.modal(name);\n            };\n          });\n          scope.dismiss = scope.hide;\n          angular.forEach([\n            'show',\n            'shown',\n            'hide',\n            'hidden'\n          ], function (name) {\n            $modal.on(name, function (ev) {\n              scope.$emit('modal-' + name, ev);\n            });\n          });\n          $modal.on('shown', function (ev) {\n            $('input[autofocus], textarea[autofocus]', $modal).first().trigger('focus');\n          });\n          $modal.on('hidden', function (ev) {\n            if (!options.persist)\n              scope.$destroy();\n          });\n          scope.$on('$destroy', function () {\n            $modal.remove();\n          });\n          $modal.modal(options);\n          return $modal;\n        });\n      }\n      return new Modal(config);\n    };\n    return ModalFactory;\n  }\n])\n\n'use strict';\nangular.module('$strap.directives').directive('bsTooltip', [\n  '$parse',\n  '$compile',\n  function ($parse, $compile) {\n    return {\n      restrict: 'A',\n      scope: true,\n      link: function postLink(scope, element, attrs, ctrl) {\n        var getter = $parse(attrs.bsTooltip), setter = getter.assign, value = getter(scope);\n        scope.$watch(attrs.bsTooltip, function (newValue, oldValue) {\n          if (newValue !== oldValue) {\n            value = newValue;\n          }\n        });\n        // Grafana change, always hide other tooltips\n        if (true) {\n          element.on('show', function (ev) {\n            $('.tooltip.in').each(function () {\n              var $this = $(this), tooltip = $this.data('tooltip');\n              if (tooltip && !tooltip.$element.is(element)) {\n                $this.tooltip('hide');\n              }\n            });\n          });\n        }\n        element.tooltip({\n          title: function () {\n            return angular.isFunction(value) ? value.apply(null, arguments) : value;\n          },\n          html: true,\n          container: 'body', // Grafana change\n        });\n        var tooltip = element.data('tooltip');\n        tooltip.show = function () {\n          var r = $.fn.tooltip.Constructor.prototype.show.apply(this, arguments);\n          this.tip().data('tooltip', this);\n          return r;\n        };\n        scope._tooltip = function (event) {\n          element.tooltip(event);\n        };\n        scope.hide = function () {\n          element.tooltip('hide');\n        };\n        scope.show = function () {\n          element.tooltip('show');\n        };\n        scope.dismiss = scope.hide;\n      }\n    };\n  }\n]);\n\n'use strict';\nangular.module('$strap.directives').directive('bsTypeahead', [\n  '$parse',\n  function ($parse) {\n    return {\n      restrict: 'A',\n      require: '?ngModel',\n      link: function postLink(scope, element, attrs, controller) {\n        var getter = $parse(attrs.bsTypeahead), setter = getter.assign, value = getter(scope);\n        scope.$watch(attrs.bsTypeahead, function (newValue, oldValue) {\n          if (newValue !== oldValue) {\n            value = newValue;\n          }\n        });\n        element.attr('data-provide', 'typeahead');\n        element.typeahead({\n          source: function (query) {\n            return angular.isFunction(value) ? value.apply(null, arguments) : value;\n          },\n          minLength: attrs.minLength || 1,\n          items: attrs.items,\n          updater: function (value) {\n            if (controller) {\n              scope.$apply(function () {\n                controller.$setViewValue(value);\n              });\n            }\n            scope.$emit('typeahead-updated', value);\n            return value;\n          }\n        });\n        var typeahead = element.data('typeahead');\n        typeahead.lookup = function (ev) {\n          var items;\n          this.query = this.$element.val() || '';\n          if (this.query.length < this.options.minLength) {\n            return this.shown ? this.hide() : this;\n          }\n          items = $.isFunction(this.source) ? this.source(this.query, $.proxy(this.process, this)) : this.source;\n          return items ? this.process(items) : this;\n        };\n        if (!!attrs.matchAll) {\n          typeahead.matcher = function (item) {\n            return true;\n          };\n        }\n        if (attrs.minLength === '0') {\n          setTimeout(function () {\n            element.on('focus', function () {\n              element.val().length === 0 && setTimeout(element.typeahead.bind(element, 'lookup'), 200);\n            });\n          });\n        }\n      }\n    };\n  }\n]);\n","var path = 'public/app/plugins/datasource/grafana-azure-monitor-datasource/partials/annotations.editor.html';\nvar html = \"<div class=gf-form-group>\\n  <div class=gf-form>\\n    <label class=\\\"gf-form-label query-keyword width-9\\\">Service</label>\\n    <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n      <select class=\\\"gf-form-input service-dropdown\\\" ng-model=ctrl.annotation.queryType ng-options=\\\"f as f for f in ['Application Insights', 'Azure Monitor', 'Azure Log Analytics']\\\"></select>\\n    </div>\\n  </div>\\n  <div class=gf-form ng-show=\\\"ctrl.annotation.queryType === 'Azure Log Analytics'\\\">\\n    <label class=\\\"gf-form-label query-keyword width-9\\\">Subscription</label>\\n    <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n      <select class=\\\"gf-form-input service-dropdown\\\" ng-model=ctrl.annotation.subscription ng-options=\\\"f.value as f.text for f in ctrl.subscriptions\\\" ng-change=ctrl.onSubscriptionChange()></select>\\n    </div>\\n  </div>\\n  <div ng-show=\\\"ctrl.annotation.queryType === 'Azure Log Analytics'\\\">\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-9\\\">Workspace</label>\\n        <div class=\\\"gf-form-select-wrapper gf-form-select-wrapper--caret-indent\\\">\\n          <select class=\\\"gf-form-input min-width-12\\\" ng-model=ctrl.annotation.workspace ng-options=\\\"f.value as f.text for f in ctrl.workspaces\\\"></select>\\n        </div>\\n      </div>\\n      <div class=gf-form>\\n        <div class=width-1></div>\\n      </div>\\n      <div class=gf-form>\\n        <button class=\\\"btn btn-primary width-10\\\" ng-click=ctrl.panelCtrl.refresh()>Run</button>\\n      </div>\\n      <div class=gf-form>\\n        <label class=gf-form-label>(Run Query: Shift+Enter, Trigger Suggestion: Ctrl+Space)</label>\\n      </div>\\n    </div>\\n    <kusto-editor class=\\\"gf-form gf-form--grow\\\" query=ctrl.annotation.rawQuery variables=ctrl.templateVariables change=ctrl.onLogAnalyticsQueryChange getschema=ctrl.getAzureLogAnalyticsSchema />\\n  </div>\\n\\n  <div class=gf-form-inline ng-show=\\\"ctrl.annotation.queryType !== 'Azure Log Analytics'\\\">\\n    <div class=\\\"gf-form gf-form--grow\\\">\\n      <label class=gf-form-label>No annotations support for {{ctrl.annotation.queryType}}</label>\\n    </div>\\n  </div>\\n\\n  <div class=gf-form-inline>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label query-keyword\\\" ng-click=\\\"ctrl.showHelp = !ctrl.showHelp\\\">\\n        Show Help\\n        <i class=\\\"fa fa-caret-down\\\" ng-show=ctrl.showHelp></i>\\n        <i class=\\\"fa fa-caret-right\\\" ng-hide=ctrl.showHelp></i>\\n      </label>\\n    </div>\\n  </div>\\n\\n  <div class=gf-form ng-show=ctrl.showHelp>\\n    <pre class=\\\"gf-form-pre alert alert-info\\\" ng-show=\\\"ctrl.annotation.queryType === 'Azure Log Analytics'\\\"><h6>Annotation Query Format</h6>\\nAn annotation is an event that is overlaid on top of graphs. The query can have up to three columns per row, the datetime column is mandatory. Annotation rendering is expensive so it is important to limit the number of rows returned.\\n\\n- column with the datetime type.\\n- column with alias: <b>Text</b> or <b>text</b> for the annotation text\\n- column with alias: <b>Tags</b> or <b>tags</b> for annotation tags. This is should return a comma separated string of tags e.g. 'tag1,tag2'\\n\\nMacros:\\n    - $__timeFilter() -&gt; TimeGenerated &ge; datetime(2018-06-05T18:09:58.907Z) and TimeGenerated &le; datetime(2018-06-05T20:09:58.907Z)\\n    - $__timeFilter(datetimeColumn) -&gt;  datetimeColumn  &ge; datetime(2018-06-05T18:09:58.907Z) and datetimeColumn &le; datetime(2018-06-05T20:09:58.907Z)\\n\\n    Or build your own conditionals using these built-in variables which just return the values:\\n    - $__timeFrom -&gt;  datetime(2018-06-05T18:09:58.907Z)\\n    - $__timeTo -&gt; datetime(2018-06-05T20:09:58.907Z)\\n    - $__interval -&gt; 5m\\n</pre>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","/**\n * Set of handlers for secure password field in Angular components. They handle backward compatibility with\n * passwords stored in plain text fields.\n */\n\nimport { SyntheticEvent } from 'react';\n\nexport enum PasswordFieldEnum {\n  Password = 'password',\n  BasicAuthPassword = 'basicAuthPassword',\n}\n\n/**\n * Basic shape for settings controllers in at the moment mostly angular datasource plugins.\n */\nexport type Ctrl = {\n  current: {\n    secureJsonFields: {\n      [key: string]: boolean;\n    };\n    secureJsonData?: {\n      [key: string]: string;\n    };\n    password?: string;\n    basicAuthPassword?: string;\n  };\n};\n\nexport const createResetHandler = (ctrl: Ctrl, field: PasswordFieldEnum) => (\n  event: SyntheticEvent<HTMLInputElement>\n) => {\n  event.preventDefault();\n  // Reset also normal plain text password to remove it and only save it in secureJsonData.\n  ctrl.current[field] = null;\n  ctrl.current.secureJsonFields[field] = false;\n  ctrl.current.secureJsonData = ctrl.current.secureJsonData || {};\n  ctrl.current.secureJsonData[field] = '';\n};\n\nexport const createChangeHandler = (ctrl: any, field: PasswordFieldEnum) => (\n  event: SyntheticEvent<HTMLInputElement>\n) => {\n  ctrl.current.secureJsonData = ctrl.current.secureJsonData || {};\n  ctrl.current.secureJsonData[field] = event.currentTarget.value;\n};\n","var path = 'public/app/plugins/panel/dashlist/editor.html';\nvar html = \"<div>\\n  <div class=\\\"section gf-form-group\\\">\\n    <h5 class=section-heading>Options</h5>\\n\\n    <gf-form-switch class=gf-form label=Starred label-class=width-9 checked=ctrl.panel.starred on-change=ctrl.refresh()></gf-form-switch>\\n    <gf-form-switch class=gf-form label=\\\"Recently viewed\\\" label-class=width-9 checked=ctrl.panel.recent on-change=ctrl.refresh()></gf-form-switch>\\n    <gf-form-switch class=gf-form label=Search label-class=width-9 checked=ctrl.panel.search on-change=ctrl.refresh()></gf-form-switch>\\n\\n    <gf-form-switch class=gf-form label=\\\"Show headings\\\" label-class=width-9 checked=ctrl.panel.headings on-change=ctrl.refresh()></gf-form-switch>\\n\\n    <div class=gf-form>\\n      <span class=\\\"gf-form-label width-9\\\">Max items</span>\\n      <input class=\\\"gf-form-input max-width-5\\\" type=number ng-model=ctrl.panel.limit ng-model-onblur ng-change=ctrl.refresh()>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"section gf-form-group\\\">\\n    <h5 class=section-heading>Search</h5>\\n\\n    <div class=gf-form>\\n      <span class=\\\"gf-form-label width-6\\\">Query</span>\\n      <input type=text class=gf-form-input placeholder=\\\"title query\\\" ng-model=ctrl.panel.query ng-change=ctrl.refresh() ng-model-onblur>\\n    </div>\\n\\n    <div class=gf-form>\\n      <folder-picker initial-folder-id=ctrl.panel.folderId on-change=ctrl.onFolderChange($folder) label-class=width-6 initial-title=\\\"'All'\\\" enable-reset=true>\\n\\t\\t\\t</folder-picker>\\n    </div>\\n\\n    <div class=gf-form>\\n      <span class=\\\"gf-form-label width-6\\\">Tags</span>\\n      <bootstrap-tagsinput ng-model=ctrl.panel.tags tagclass=\\\"label label-tag\\\" placeholder=\\\"add tags\\\" on-tags-updated=ctrl.refresh()>\\n      </bootstrap-tagsinput>\\n    </div>\\n  </div>\\n\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import React from 'react';\n\nexport default () => {\n  return (\n    <div className=\"\">\n      <h5>What are Permissions?</h5>\n      <p>\n        An Access Control List (ACL) model is used to limit access to Dashboard Folders. A user or a Team can be\n        assigned permissions for a folder or for a single dashboard.\n      </p>\n    </div>\n  );\n};\n","import { Labels } from './data';\nimport { GraphSeriesXY } from './graph';\n\n/**\n * Mapping of log level abbreviation to canonical log level.\n * Supported levels are reduce to limit color variation.\n */\nexport enum LogLevel {\n  emerg = 'critical',\n  alert = 'critical',\n  crit = 'critical',\n  critical = 'critical',\n  warn = 'warning',\n  warning = 'warning',\n  err = 'error',\n  eror = 'error',\n  error = 'error',\n  info = 'info',\n  notice = 'info',\n  dbug = 'debug',\n  debug = 'debug',\n  trace = 'trace',\n  unknown = 'unknown',\n}\n\nexport enum LogsMetaKind {\n  Number,\n  String,\n  LabelsMap,\n}\n\nexport interface LogsMetaItem {\n  label: string;\n  value: string | number | Labels;\n  kind: LogsMetaKind;\n}\n\nexport interface LogRowModel {\n  duplicates?: number;\n  entry: string;\n  hasAnsi: boolean;\n  labels: Labels;\n  logLevel: LogLevel;\n  raw: string;\n  searchWords?: string[];\n  timestamp: string; // ISO with nanosec precision\n  timeFromNow: string;\n  timeEpochMs: number;\n  timeLocal: string;\n  timeUtc: string;\n  uniqueLabels?: Labels;\n}\n\nexport interface LogsModel {\n  hasUniqueLabels: boolean;\n  meta?: LogsMetaItem[];\n  rows: LogRowModel[];\n  series?: GraphSeriesXY[];\n}\n\nexport interface LogSearchMatch {\n  start: number;\n  length: number;\n  text: string;\n}\n\nexport interface LogLabelStatsModel {\n  active?: boolean;\n  count: number;\n  proportion: number;\n  value: string;\n}\n\nexport enum LogsDedupStrategy {\n  none = 'none',\n  exact = 'exact',\n  numbers = 'numbers',\n  signature = 'signature',\n}\n\nexport interface LogsParser {\n  /**\n   * Value-agnostic matcher for a field label.\n   * Used to filter rows, and first capture group contains the value.\n   */\n  buildMatcher: (label: string) => RegExp;\n\n  /**\n   * Returns all parsable substrings from a line, used for highlighting\n   */\n  getFields: (line: string) => string[];\n\n  /**\n   * Gets the label name from a parsable substring of a line\n   */\n  getLabelFromField: (field: string) => string;\n\n  /**\n   * Gets the label value from a parsable substring of a line\n   */\n  getValueFromField: (field: string) => string;\n  /**\n   * Function to verify if this is a valid parser for the given line.\n   * The parser accepts the line unless it returns undefined.\n   */\n  test: (line: string) => any;\n}\n\nexport enum LogsDedupDescription {\n  none = 'No de-duplication',\n  exact = 'De-duplication of successive lines that are identical, ignoring ISO datetimes.',\n  numbers = 'De-duplication of successive lines that are identical when ignoring numbers, e.g., IP addresses, latencies.',\n  signature = 'De-duplication of successive lines that have identical punctuation and whitespace.',\n}\n","var path = 'public/app/plugins/panel/table/editor.html';\nvar html = \"<div class=editor-row>\\n  <div class=\\\"section gf-form-group\\\">\\n    <h5 class=section-heading>Data</h5>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label width-10\\\">Table Transform</label>\\n      <div class=\\\"gf-form-select-wrapper max-width-15\\\">\\n        <select class=gf-form-input ng-model=editor.panel.transform ng-options=\\\"k as v.description for (k, v) in editor.transformers\\\" ng-change=editor.transformChanged()></select>\\n      </div>\\n    </div>\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-10\\\">Columns</label>\\n      </div>\\n      <div class=gf-form ng-repeat=\\\"column in editor.panel.columns\\\">\\n        <label class=gf-form-label>\\n          <i class=\\\"pointer fa fa-remove\\\" ng-click=editor.removeColumn(column)></i>\\n          <span>{{ column.text }}</span>\\n        </label>\\n      </div>\\n      <div class=gf-form ng-show=editor.canSetColumns>\\n        <metric-segment segment=editor.addColumnSegment get-options=editor.getColumnOptions() on-change=editor.addColumn()></metric-segment>\\n      </div>\\n      <div class=gf-form ng-hide=editor.canSetColumns>\\n        <label class=gf-form-label>\\n          Auto\\n          <info-popover mode=right-normal ng-if=editor.columnsHelpMessage>\\n            {{ editor.columnsHelpMessage }}\\n          </info-popover>\\n        </label>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"section gf-form-group\\\">\\n    <h5 class=section-heading>Paging</h5>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label width-8\\\">Rows per page</label>\\n      <input type=number class=\\\"gf-form-input width-7\\\" placeholder=100 data-placement=right ng-model=editor.panel.pageSize ng-change=editor.render() ng-model-onblur/>\\n    </div>\\n    <div class=\\\"gf-form max-width-17\\\">\\n      <label class=\\\"gf-form-label width-8\\\">Font size</label>\\n      <div class=\\\"gf-form-select-wrapper width-7\\\">\\n        <select class=gf-form-input ng-model=editor.panel.fontSize ng-options=\\\"f for f in editor.fontSizes\\\" ng-change=editor.render()></select>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { MutableVector } from '../types/vector';\nimport { vectorToArray } from './vectorToArray';\n\ninterface CircularOptions<T> {\n  buffer?: T[];\n  append?: 'head' | 'tail';\n  capacity?: number;\n}\n\n/**\n * Circular vector uses a single buffer to capture a stream of values\n * overwriting the oldest value on add.\n *\n * This supports addting to the 'head' or 'tail' and will grow the buffer\n * to match a configured capacity.\n */\nexport class CircularVector<T = any> implements MutableVector<T> {\n  private buffer: T[];\n  private index: number;\n  private capacity: number;\n  private tail: boolean;\n\n  constructor(options: CircularOptions<T>) {\n    this.buffer = options.buffer || [];\n    this.capacity = this.buffer.length;\n    this.tail = 'head' !== options.append;\n    this.index = 0;\n\n    this.add = this.getAddFunction();\n    if (options.capacity) {\n      this.setCapacity(options.capacity);\n    }\n  }\n\n  /**\n   * This gets the appropriate add function depending on the buffer state:\n   *  * head vs tail\n   *  * growing buffer vs overwriting values\n   */\n  private getAddFunction() {\n    // When we are not at capacity, it should actually modify the buffer\n    if (this.capacity > this.buffer.length) {\n      if (this.tail) {\n        return (value: T) => {\n          this.buffer.push(value);\n          if (this.buffer.length >= this.capacity) {\n            this.add = this.getAddFunction();\n          }\n        };\n      } else {\n        return (value: T) => {\n          this.buffer.unshift(value);\n          if (this.buffer.length >= this.capacity) {\n            this.add = this.getAddFunction();\n          }\n        };\n      }\n    }\n\n    if (this.tail) {\n      return (value: T) => {\n        this.buffer[this.index] = value;\n        this.index = (this.index + 1) % this.buffer.length;\n      };\n    }\n\n    // Append values to the head\n    return (value: T) => {\n      let idx = this.index - 1;\n      if (idx < 0) {\n        idx = this.buffer.length - 1;\n      }\n      this.buffer[idx] = value;\n      this.index = idx;\n    };\n  }\n\n  setCapacity(v: number) {\n    if (this.capacity === v) {\n      return;\n    }\n    // Make a copy so it is in order and new additions can be at the head or tail\n    const copy = this.toArray();\n    if (v > this.length) {\n      this.buffer = copy;\n    } else if (v < this.capacity) {\n      // Shrink the buffer\n      const delta = this.length - v;\n      if (this.tail) {\n        this.buffer = copy.slice(delta, copy.length); // Keep last items\n      } else {\n        this.buffer = copy.slice(0, copy.length - delta); // Keep first items\n      }\n    }\n    this.capacity = v;\n    this.index = 0;\n    this.add = this.getAddFunction();\n  }\n\n  setAppendMode(mode: 'head' | 'tail') {\n    const tail = 'head' !== mode;\n    if (tail !== this.tail) {\n      this.buffer = this.toArray().reverse();\n      this.index = 0;\n      this.tail = tail;\n      this.add = this.getAddFunction();\n    }\n  }\n\n  reverse() {\n    this.buffer.reverse();\n  }\n\n  /**\n   * Add the value to the buffer\n   */\n  add: (value: T) => void;\n\n  get(index: number) {\n    return this.buffer[(index + this.index) % this.buffer.length];\n  }\n\n  set(index: number, value: T) {\n    this.buffer[(index + this.index) % this.buffer.length] = value;\n  }\n\n  get length() {\n    return this.buffer.length;\n  }\n\n  toArray(): T[] {\n    return vectorToArray(this);\n  }\n\n  toJSON(): T[] {\n    return vectorToArray(this);\n  }\n}\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-SG\": \"zavE\",\n\t\"./en-SG.js\": \"zavE\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","var path = 'public/app/features/annotations/partials/editor.html';\nvar html = \"<div ng-controller=AnnotationsEditorCtrl>\\n  <div class=page-action-bar>\\n    <h3 class=dashboard-settings__header>\\n      <a ng-click=ctrl.backToList()>Annotations</a>\\n      <span ng-show=\\\"ctrl.mode === 'new'\\\">&gt; New</span>\\n      <span ng-show=\\\"ctrl.mode === 'edit'\\\">&gt; Edit</span>\\n    </h3>\\n\\n    <div class=page-action-bar__spacer></div>\\n\\n    <a type=button class=\\\"btn btn-primary\\\" ng-click=ctrl.setupNew(); ng-if=\\\"ctrl.annotations.length > 1\\\" ng-hide=\\\"ctrl.mode === 'edit' || ctrl.mode === 'new'\\\">\\n      New\\n    </a>\\n  </div>\\n\\n  <div ng-if=\\\"ctrl.mode === 'list'\\\">\\n    <table class=\\\"filter-table filter-table--hover\\\">\\n      <thead>\\n        <tr>\\n          <th>Query name</th>\\n          <th>Data source</th>\\n          <th colspan=3></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr ng-repeat=\\\"annotation in ctrl.annotations track by annotation.name\\\">\\n          <td style=width:90% ng-hide=annotation.builtIn class=pointer ng-click=ctrl.edit(annotation)>\\n            <i class=\\\"fa fa-comment\\\" style=color:{};></i> &nbsp;\\n            {{ annotation.name }}\\n          </td>\\n          <td style=width:90% ng-show=annotation.builtIn class=pointer ng-click=ctrl.edit(annotation)>\\n            <i class=\\\"gicon gicon-annotation\\\"></i> &nbsp;\\n            <em class=muted>{{ annotation.name }} (Built-in)</em>\\n          </td>\\n          <td class=pointer ng-click=ctrl.edit(annotation)>\\n            {{ annotation.datasource || 'Default' }}\\n          </td>\\n          <td style=width:1%>\\n            <i ng-click=ctrl.move($index,-1) ng-hide=$first class=\\\"pointer fa fa-arrow-up\\\"></i>\\n          </td>\\n          <td style=width:1%>\\n            <i ng-click=ctrl.move($index,1) ng-hide=$last class=\\\"pointer fa fa-arrow-down\\\"></i>\\n          </td>\\n          <td style=width:1%>\\n            <a ng-click=ctrl.removeAnnotation(annotation) class=\\\"btn btn-danger btn-small\\\" ng-hide=annotation.builtIn>\\n              <i class=\\\"fa fa-remove\\\"></i>\\n            </a>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <!-- empty list cta, there is always one built in query -->\\n    <div ng-if=\\\"ctrl.annotations.length === 1\\\" class=p-t-2>\\n      <empty-list-cta title=ctrl.emptyListCta.title buttonicon=ctrl.emptyListCta.buttonIcon buttontitle=ctrl.emptyListCta.buttonTitle infobox=ctrl.emptyListCta.infoBox infoboxtitle=ctrl.emptyListCta.infoBoxTitle on-click=ctrl.setupNew />\\n    </div>\\n  </div>\\n\\n  <div class=annotations-basic-settings ng-if=\\\"ctrl.mode === 'edit' || ctrl.mode === 'new'\\\">\\n    <div class=gf-form-group>\\n      <h5 class=section-heading>General</h5>\\n      <div class=gf-form-inline>\\n        <div class=gf-form>\\n          <span class=\\\"gf-form-label width-7\\\">Name</span>\\n          <input type=text class=\\\"gf-form-input width-20\\\" ng-model=ctrl.currentAnnotation.name placeholder=name />\\n        </div>\\n        <div class=gf-form>\\n          <span class=\\\"gf-form-label width-7\\\">Data source</span>\\n          <div class=gf-form-select-wrapper>\\n            <select class=gf-form-input ng-model=ctrl.currentAnnotation.datasource ng-options=\\\"f.name as f.name for f in ctrl.datasources\\\" ng-change=ctrl.datasourceChanged()></select>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=gf-form-group>\\n      <div class=gf-form-inline>\\n        <gf-form-switch class=gf-form label=Enabled checked=ctrl.currentAnnotation.enable label-class=width-7>\\n        </gf-form-switch>\\n        <gf-form-switch class=gf-form label=Hidden tooltip=\\\"Hides the annotation query toggle from showing at the top of the dashboard\\\" checked=ctrl.currentAnnotation.hide label-class=width-7>\\n        </gf-form-switch>\\n        <div class=gf-form>\\n          <label class=\\\"gf-form-label width-9\\\">Color</label>\\n          <span class=gf-form-label>\\n            <color-picker color=ctrl.currentAnnotation.iconColor onchange=ctrl.onColorChange></color-picker>\\n          </span>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <h5 class=section-heading>Query</h5>\\n    <rebuild-on-change property=ctrl.currentDatasource>\\n      <plugin-component type=annotations-query-ctrl> </plugin-component>\\n    </rebuild-on-change>\\n\\n    <div class=gf-form>\\n      <div class=\\\"gf-form-button-row p-y-0\\\">\\n        <button ng-show=\\\"ctrl.mode === 'new'\\\" type=button class=\\\"btn gf-form-button btn-primary\\\" ng-click=ctrl.add()>\\n          Add\\n        </button>\\n        <button ng-show=\\\"ctrl.mode === 'edit'\\\" type=button class=\\\"btn btn-primary pull-left\\\" ng-click=ctrl.update()>\\n          Update\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { toUtc, toDuration as duration, dateTime, DecimalCount } from '@grafana/data';\n\nimport { toFixed, toFixedScaled } from './valueFormats';\n\ninterface IntervalsInSeconds {\n  [interval: string]: number;\n}\n\nexport enum Interval {\n  Year = 'year',\n  Month = 'month',\n  Week = 'week',\n  Day = 'day',\n  Hour = 'hour',\n  Minute = 'minute',\n  Second = 'second',\n  Millisecond = 'millisecond',\n}\n\nconst INTERVALS_IN_SECONDS: IntervalsInSeconds = {\n  [Interval.Year]: 31536000,\n  [Interval.Month]: 2592000,\n  [Interval.Week]: 604800,\n  [Interval.Day]: 86400,\n  [Interval.Hour]: 3600,\n  [Interval.Minute]: 60,\n  [Interval.Second]: 1,\n  [Interval.Millisecond]: 0.001,\n};\n\nexport function toNanoSeconds(size: number, decimals?: DecimalCount, scaledDecimals?: DecimalCount) {\n  if (size === null) {\n    return '';\n  }\n\n  if (Math.abs(size) < 1000) {\n    return toFixed(size, decimals) + ' ns';\n  } else if (Math.abs(size) < 1000000) {\n    return toFixedScaled(size / 1000, decimals, scaledDecimals, 3, ' µs');\n  } else if (Math.abs(size) < 1000000000) {\n    return toFixedScaled(size / 1000000, decimals, scaledDecimals, 6, ' ms');\n  } else if (Math.abs(size) < 60000000000) {\n    return toFixedScaled(size / 1000000000, decimals, scaledDecimals, 9, ' s');\n  } else {\n    return toFixedScaled(size / 60000000000, decimals, scaledDecimals, 12, ' min');\n  }\n}\n\nexport function toMicroSeconds(size: number, decimals?: DecimalCount, scaledDecimals?: DecimalCount) {\n  if (size === null) {\n    return '';\n  }\n\n  if (Math.abs(size) < 1000) {\n    return toFixed(size, decimals) + ' µs';\n  } else if (Math.abs(size) < 1000000) {\n    return toFixedScaled(size / 1000, decimals, scaledDecimals, 3, ' ms');\n  } else {\n    return toFixedScaled(size / 1000000, decimals, scaledDecimals, 6, ' s');\n  }\n}\n\nexport function toMilliSeconds(size: number, decimals?: DecimalCount, scaledDecimals?: DecimalCount) {\n  if (size === null) {\n    return '';\n  }\n\n  if (Math.abs(size) < 1000) {\n    return toFixed(size, decimals) + ' ms';\n  } else if (Math.abs(size) < 60000) {\n    // Less than 1 min\n    return toFixedScaled(size / 1000, decimals, scaledDecimals, 3, ' s');\n  } else if (Math.abs(size) < 3600000) {\n    // Less than 1 hour, divide in minutes\n    return toFixedScaled(size / 60000, decimals, scaledDecimals, 5, ' min');\n  } else if (Math.abs(size) < 86400000) {\n    // Less than one day, divide in hours\n    return toFixedScaled(size / 3600000, decimals, scaledDecimals, 7, ' hour');\n  } else if (Math.abs(size) < 31536000000) {\n    // Less than one year, divide in days\n    return toFixedScaled(size / 86400000, decimals, scaledDecimals, 8, ' day');\n  }\n\n  return toFixedScaled(size / 31536000000, decimals, scaledDecimals, 10, ' year');\n}\n\nexport function trySubstract(value1: DecimalCount, value2: DecimalCount): DecimalCount {\n  if (value1 !== null && value1 !== undefined && value2 !== null && value2 !== undefined) {\n    return value1 - value2;\n  }\n  return undefined;\n}\n\nexport function toSeconds(size: number, decimals?: DecimalCount, scaledDecimals?: DecimalCount) {\n  if (size === null) {\n    return '';\n  }\n\n  // Less than 1 µs, divide in ns\n  if (Math.abs(size) < 0.000001) {\n    return toFixedScaled(size * 1e9, decimals, trySubstract(scaledDecimals, decimals), -9, ' ns');\n  }\n  // Less than 1 ms, divide in µs\n  if (Math.abs(size) < 0.001) {\n    return toFixedScaled(size * 1e6, decimals, trySubstract(scaledDecimals, decimals), -6, ' µs');\n  }\n  // Less than 1 second, divide in ms\n  if (Math.abs(size) < 1) {\n    return toFixedScaled(size * 1e3, decimals, trySubstract(scaledDecimals, decimals), -3, ' ms');\n  }\n\n  if (Math.abs(size) < 60) {\n    return toFixed(size, decimals) + ' s';\n  } else if (Math.abs(size) < 3600) {\n    // Less than 1 hour, divide in minutes\n    return toFixedScaled(size / 60, decimals, scaledDecimals, 1, ' min');\n  } else if (Math.abs(size) < 86400) {\n    // Less than one day, divide in hours\n    return toFixedScaled(size / 3600, decimals, scaledDecimals, 4, ' hour');\n  } else if (Math.abs(size) < 604800) {\n    // Less than one week, divide in days\n    return toFixedScaled(size / 86400, decimals, scaledDecimals, 5, ' day');\n  } else if (Math.abs(size) < 31536000) {\n    // Less than one year, divide in week\n    return toFixedScaled(size / 604800, decimals, scaledDecimals, 6, ' week');\n  }\n\n  return toFixedScaled(size / 3.15569e7, decimals, scaledDecimals, 7, ' year');\n}\n\nexport function toMinutes(size: number, decimals?: DecimalCount, scaledDecimals?: DecimalCount) {\n  if (size === null) {\n    return '';\n  }\n\n  if (Math.abs(size) < 60) {\n    return toFixed(size, decimals) + ' min';\n  } else if (Math.abs(size) < 1440) {\n    return toFixedScaled(size / 60, decimals, scaledDecimals, 2, ' hour');\n  } else if (Math.abs(size) < 10080) {\n    return toFixedScaled(size / 1440, decimals, scaledDecimals, 3, ' day');\n  } else if (Math.abs(size) < 604800) {\n    return toFixedScaled(size / 10080, decimals, scaledDecimals, 4, ' week');\n  } else {\n    return toFixedScaled(size / 5.25948e5, decimals, scaledDecimals, 5, ' year');\n  }\n}\n\nexport function toHours(size: number, decimals?: DecimalCount, scaledDecimals?: DecimalCount) {\n  if (size === null) {\n    return '';\n  }\n\n  if (Math.abs(size) < 24) {\n    return toFixed(size, decimals) + ' hour';\n  } else if (Math.abs(size) < 168) {\n    return toFixedScaled(size / 24, decimals, scaledDecimals, 2, ' day');\n  } else if (Math.abs(size) < 8760) {\n    return toFixedScaled(size / 168, decimals, scaledDecimals, 3, ' week');\n  } else {\n    return toFixedScaled(size / 8760, decimals, scaledDecimals, 4, ' year');\n  }\n}\n\nexport function toDays(size: number, decimals?: DecimalCount, scaledDecimals?: DecimalCount) {\n  if (size === null) {\n    return '';\n  }\n\n  if (Math.abs(size) < 7) {\n    return toFixed(size, decimals) + ' day';\n  } else if (Math.abs(size) < 365) {\n    return toFixedScaled(size / 7, decimals, scaledDecimals, 2, ' week');\n  } else {\n    return toFixedScaled(size / 365, decimals, scaledDecimals, 3, ' year');\n  }\n}\n\nexport function toDuration(size: number, decimals: DecimalCount, timeScale: Interval): string {\n  if (size === null) {\n    return '';\n  }\n\n  if (size === 0) {\n    return '0 ' + timeScale + 's';\n  }\n\n  if (size < 0) {\n    return toDuration(-size, decimals, timeScale) + ' ago';\n  }\n\n  const units = [\n    { long: Interval.Year },\n    { long: Interval.Month },\n    { long: Interval.Week },\n    { long: Interval.Day },\n    { long: Interval.Hour },\n    { long: Interval.Minute },\n    { long: Interval.Second },\n    { long: Interval.Millisecond },\n  ];\n\n  // convert $size to milliseconds\n  // intervals_in_seconds uses seconds (duh), convert them to milliseconds here to minimize floating point errors\n  size *= INTERVALS_IN_SECONDS[timeScale] * 1000;\n\n  const strings = [];\n\n  // after first value >= 1 print only $decimals more\n  let decrementDecimals = false;\n  let decimalsCount = 0;\n\n  if (decimals !== null || decimals !== undefined) {\n    decimalsCount = decimals as number;\n  }\n\n  for (let i = 0; i < units.length && decimalsCount >= 0; i++) {\n    const interval = INTERVALS_IN_SECONDS[units[i].long] * 1000;\n    const value = size / interval;\n    if (value >= 1 || decrementDecimals) {\n      decrementDecimals = true;\n      const floor = Math.floor(value);\n      const unit = units[i].long + (floor !== 1 ? 's' : '');\n      strings.push(floor + ' ' + unit);\n      size = size % interval;\n      decimalsCount--;\n    }\n  }\n\n  return strings.join(', ');\n}\n\nexport function toClock(size: number, decimals?: DecimalCount) {\n  if (size === null) {\n    return '';\n  }\n\n  // < 1 second\n  if (size < 1000) {\n    return toUtc(size).format('SSS\\\\m\\\\s');\n  }\n\n  // < 1 minute\n  if (size < 60000) {\n    let format = 'ss\\\\s:SSS\\\\m\\\\s';\n    if (decimals === 0) {\n      format = 'ss\\\\s';\n    }\n    return toUtc(size).format(format);\n  }\n\n  // < 1 hour\n  if (size < 3600000) {\n    let format = 'mm\\\\m:ss\\\\s:SSS\\\\m\\\\s';\n    if (decimals === 0) {\n      format = 'mm\\\\m';\n    } else if (decimals === 1) {\n      format = 'mm\\\\m:ss\\\\s';\n    }\n    return toUtc(size).format(format);\n  }\n\n  let format = 'mm\\\\m:ss\\\\s:SSS\\\\m\\\\s';\n\n  const hours = `${('0' + Math.floor(duration(size, 'milliseconds').asHours())).slice(-2)}h`;\n\n  if (decimals === 0) {\n    format = '';\n  } else if (decimals === 1) {\n    format = 'mm\\\\m';\n  } else if (decimals === 2) {\n    format = 'mm\\\\m:ss\\\\s';\n  }\n\n  return format ? `${hours}:${toUtc(size).format(format)}` : hours;\n}\n\nexport function toDurationInMilliseconds(size: number, decimals: DecimalCount) {\n  return toDuration(size, decimals, Interval.Millisecond);\n}\n\nexport function toDurationInSeconds(size: number, decimals: DecimalCount) {\n  return toDuration(size, decimals, Interval.Second);\n}\n\nexport function toDurationInHoursMinutesSeconds(size: number): string {\n  if (size < 0) {\n    return toDurationInHoursMinutesSeconds(-size) + ' ago';\n  }\n  const strings = [];\n  const numHours = Math.floor(size / 3600);\n  const numMinutes = Math.floor((size % 3600) / 60);\n  const numSeconds = Math.floor((size % 3600) % 60);\n  numHours > 9 ? strings.push('' + numHours) : strings.push('0' + numHours);\n  numMinutes > 9 ? strings.push('' + numMinutes) : strings.push('0' + numMinutes);\n  numSeconds > 9 ? strings.push('' + numSeconds) : strings.push('0' + numSeconds);\n  return strings.join(':');\n}\n\nexport function toTimeTicks(size: number, decimals: DecimalCount, scaledDecimals: DecimalCount) {\n  return toSeconds(size / 100, decimals, scaledDecimals);\n}\n\nexport function toClockMilliseconds(size: number, decimals: DecimalCount) {\n  return toClock(size, decimals);\n}\n\nexport function toClockSeconds(size: number, decimals: DecimalCount) {\n  return toClock(size * 1000, decimals);\n}\n\nexport function dateTimeAsIso(value: number, decimals: DecimalCount, scaledDecimals: DecimalCount, isUtc?: boolean) {\n  const time = isUtc ? toUtc(value) : dateTime(value);\n\n  if (dateTime().isSame(value, 'day')) {\n    return time.format('HH:mm:ss');\n  }\n  return time.format('YYYY-MM-DD HH:mm:ss');\n}\n\nexport function dateTimeAsUS(value: number, decimals: DecimalCount, scaledDecimals: DecimalCount, isUtc?: boolean) {\n  const time = isUtc ? toUtc(value) : dateTime(value);\n\n  if (dateTime().isSame(value, 'day')) {\n    return time.format('h:mm:ss a');\n  }\n  return time.format('MM/DD/YYYY h:mm:ss a');\n}\n\nexport function dateTimeFromNow(value: number, decimals: DecimalCount, scaledDecimals: DecimalCount, isUtc?: boolean) {\n  const time = isUtc ? toUtc(value) : dateTime(value);\n  return time.fromNow();\n}\n","import { DecimalCount } from '@grafana/data';\n\nimport { toFixed } from './valueFormats';\n\nexport function toPercent(size: number, decimals: DecimalCount) {\n  if (size === null) {\n    return '';\n  }\n  return toFixed(size, decimals) + '%';\n}\n\nexport function toPercentUnit(size: number, decimals: DecimalCount) {\n  if (size === null) {\n    return '';\n  }\n  return toFixed(100 * size, decimals) + '%';\n}\n\nexport function toHex0x(value: number, decimals: DecimalCount) {\n  if (value == null) {\n    return '';\n  }\n  const hexString = toHex(value, decimals);\n  if (hexString.substring(0, 1) === '-') {\n    return '-0x' + hexString.substring(1);\n  }\n  return '0x' + hexString;\n}\n\nexport function toHex(value: number, decimals: DecimalCount) {\n  if (value == null) {\n    return '';\n  }\n  return parseFloat(toFixed(value, decimals))\n    .toString(16)\n    .toUpperCase();\n}\n\nexport function sci(value: number, decimals: DecimalCount) {\n  if (value == null) {\n    return '';\n  }\n  return value.toExponential(decimals as number);\n}\n","import { DecimalCount } from '@grafana/data';\n\nimport { scaledUnits } from './valueFormats';\n\nexport function currency(symbol: string) {\n  const units = ['', 'K', 'M', 'B', 'T'];\n  const scaler = scaledUnits(1000, units);\n  return (size: number, decimals?: DecimalCount, scaledDecimals?: DecimalCount) => {\n    if (size === null) {\n      return '';\n    }\n    const scaled = scaler(size, decimals, scaledDecimals);\n    return symbol + scaled;\n  };\n}\n\nexport function binarySIPrefix(unit: string, offset = 0) {\n  const prefixes = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi', 'Ei', 'Zi', 'Yi'].slice(offset);\n  const units = prefixes.map(p => {\n    return ' ' + p + unit;\n  });\n  return scaledUnits(1024, units);\n}\n\nexport function decimalSIPrefix(unit: string, offset = 0) {\n  let prefixes = ['n', 'µ', 'm', '', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'];\n  prefixes = prefixes.slice(3 + (offset || 0));\n  const units = prefixes.map(p => {\n    return ' ' + p + unit;\n  });\n  return scaledUnits(1000, units);\n}\n","import { locale, scaledUnits, simpleCountUnit, toFixed, toFixedUnit, ValueFormatCategory } from './valueFormats';\nimport {\n  dateTimeAsIso,\n  dateTimeAsUS,\n  dateTimeFromNow,\n  toClockMilliseconds,\n  toClockSeconds,\n  toDays,\n  toDurationInHoursMinutesSeconds,\n  toDurationInMilliseconds,\n  toDurationInSeconds,\n  toHours,\n  toMicroSeconds,\n  toMilliSeconds,\n  toMinutes,\n  toNanoSeconds,\n  toSeconds,\n  toTimeTicks,\n} from './dateTimeFormatters';\nimport { toHex, sci, toHex0x, toPercent, toPercentUnit } from './arithmeticFormatters';\nimport { binarySIPrefix, currency, decimalSIPrefix } from './symbolFormatters';\n\nexport const getCategories = (): ValueFormatCategory[] => [\n  {\n    name: 'Misc',\n    formats: [\n      { name: 'none', id: 'none', fn: toFixed },\n      {\n        name: 'short',\n        id: 'short',\n        fn: scaledUnits(1000, ['', ' K', ' Mil', ' Bil', ' Tri', ' Quadr', ' Quint', ' Sext', ' Sept']),\n      },\n      { name: 'percent (0-100)', id: 'percent', fn: toPercent },\n      { name: 'percent (0.0-1.0)', id: 'percentunit', fn: toPercentUnit },\n      { name: 'Humidity (%H)', id: 'humidity', fn: toFixedUnit('%H') },\n      { name: 'decibel', id: 'dB', fn: toFixedUnit('dB') },\n      { name: 'hexadecimal (0x)', id: 'hex0x', fn: toHex0x },\n      { name: 'hexadecimal', id: 'hex', fn: toHex },\n      { name: 'scientific notation', id: 'sci', fn: sci },\n      { name: 'locale format', id: 'locale', fn: locale },\n    ],\n  },\n  {\n    name: 'Acceleration',\n    formats: [\n      { name: 'Meters/sec²', id: 'accMS2', fn: toFixedUnit('m/sec²') },\n      { name: 'Feet/sec²', id: 'accFS2', fn: toFixedUnit('f/sec²') },\n      { name: 'G unit', id: 'accG', fn: toFixedUnit('g') },\n    ],\n  },\n  {\n    name: 'Angle',\n    formats: [\n      { name: 'Degrees (°)', id: 'degree', fn: toFixedUnit('°') },\n      { name: 'Radians', id: 'radian', fn: toFixedUnit('rad') },\n      { name: 'Gradian', id: 'grad', fn: toFixedUnit('grad') },\n      { name: 'Arc Minutes', id: 'arcmin', fn: toFixedUnit('arcmin') },\n      { name: 'Arc Seconds', id: 'arcsec', fn: toFixedUnit('arcsec') },\n    ],\n  },\n  {\n    name: 'Area',\n    formats: [\n      { name: 'Square Meters (m²)', id: 'areaM2', fn: toFixedUnit('m²') },\n      { name: 'Square Feet (ft²)', id: 'areaF2', fn: toFixedUnit('ft²') },\n      { name: 'Square Miles (mi²)', id: 'areaMI2', fn: toFixedUnit('mi²') },\n    ],\n  },\n  {\n    name: 'Computation',\n    formats: [\n      { name: 'FLOP/s', id: 'flops', fn: decimalSIPrefix('FLOP/s') },\n      { name: 'MFLOP/s', id: 'mflops', fn: decimalSIPrefix('FLOP/s', 2) },\n      { name: 'GFLOP/s', id: 'gflops', fn: decimalSIPrefix('FLOP/s', 3) },\n      { name: 'TFLOP/s', id: 'tflops', fn: decimalSIPrefix('FLOP/s', 4) },\n      { name: 'PFLOP/s', id: 'pflops', fn: decimalSIPrefix('FLOP/s', 5) },\n      { name: 'EFLOP/s', id: 'eflops', fn: decimalSIPrefix('FLOP/s', 6) },\n      { name: 'ZFLOP/s', id: 'zflops', fn: decimalSIPrefix('FLOP/s', 7) },\n      { name: 'YFLOP/s', id: 'yflops', fn: decimalSIPrefix('FLOP/s', 8) },\n    ],\n  },\n  {\n    name: 'Concentration',\n    formats: [\n      { name: 'parts-per-million (ppm)', id: 'ppm', fn: toFixedUnit('ppm') },\n      { name: 'parts-per-billion (ppb)', id: 'conppb', fn: toFixedUnit('ppb') },\n      { name: 'nanogram per cubic meter (ng/m³)', id: 'conngm3', fn: toFixedUnit('ng/m³') },\n      { name: 'nanogram per normal cubic meter (ng/Nm³)', id: 'conngNm3', fn: toFixedUnit('ng/Nm³') },\n      { name: 'microgram per cubic meter (μg/m³)', id: 'conμgm3', fn: toFixedUnit('μg/m³') },\n      { name: 'microgram per normal cubic meter (μg/Nm³)', id: 'conμgNm3', fn: toFixedUnit('μg/Nm³') },\n      { name: 'milligram per cubic meter (mg/m³)', id: 'conmgm3', fn: toFixedUnit('mg/m³') },\n      { name: 'milligram per normal cubic meter (mg/Nm³)', id: 'conmgNm3', fn: toFixedUnit('mg/Nm³') },\n      { name: 'gram per cubic meter (g/m³)', id: 'congm3', fn: toFixedUnit('g/m³') },\n      { name: 'gram per normal cubic meter (g/Nm³)', id: 'congNm3', fn: toFixedUnit('g/Nm³') },\n      { name: 'milligrams per decilitre (mg/dL)', id: 'conmgdL', fn: toFixedUnit('mg/dL') },\n      { name: 'millimoles per litre (mmol/L)', id: 'conmmolL', fn: toFixedUnit('mmol/L') },\n    ],\n  },\n  {\n    name: 'Currency',\n    formats: [\n      { name: 'Dollars ($)', id: 'currencyUSD', fn: currency('$') },\n      { name: 'Pounds (£)', id: 'currencyGBP', fn: currency('£') },\n      { name: 'Euro (€)', id: 'currencyEUR', fn: currency('€') },\n      { name: 'Yen (¥)', id: 'currencyJPY', fn: currency('¥') },\n      { name: 'Rubles (₽)', id: 'currencyRUB', fn: currency('₽') },\n      { name: 'Hryvnias (₴)', id: 'currencyUAH', fn: currency('₴') },\n      { name: 'Real (R$)', id: 'currencyBRL', fn: currency('R$') },\n      { name: 'Danish Krone (kr)', id: 'currencyDKK', fn: currency('kr') },\n      { name: 'Icelandic Króna (kr)', id: 'currencyISK', fn: currency('kr') },\n      { name: 'Norwegian Krone (kr)', id: 'currencyNOK', fn: currency('kr') },\n      { name: 'Swedish Krona (kr)', id: 'currencySEK', fn: currency('kr') },\n      { name: 'Czech koruna (czk)', id: 'currencyCZK', fn: currency('czk') },\n      { name: 'Swiss franc (CHF)', id: 'currencyCHF', fn: currency('CHF') },\n      { name: 'Polish Złoty (PLN)', id: 'currencyPLN', fn: currency('PLN') },\n      { name: 'Bitcoin (฿)', id: 'currencyBTC', fn: currency('฿') },\n      { name: 'South African Rand (R)', id: 'currencyZAR', fn: currency('R') },\n    ],\n  },\n  {\n    name: 'Data (IEC)',\n    formats: [\n      { name: 'bits', id: 'bits', fn: binarySIPrefix('b') },\n      { name: 'bytes', id: 'bytes', fn: binarySIPrefix('B') },\n      { name: 'kibibytes', id: 'kbytes', fn: binarySIPrefix('B', 1) },\n      { name: 'mebibytes', id: 'mbytes', fn: binarySIPrefix('B', 2) },\n      { name: 'gibibytes', id: 'gbytes', fn: binarySIPrefix('B', 3) },\n      { name: 'tebibytes', id: 'tbytes', fn: binarySIPrefix('B', 4) },\n      { name: 'pebibytes', id: 'pbytes', fn: binarySIPrefix('B', 5) },\n    ],\n  },\n  {\n    name: 'Data (Metric)',\n    formats: [\n      { name: 'bits', id: 'decbits', fn: decimalSIPrefix('b') },\n      { name: 'bytes', id: 'decbytes', fn: decimalSIPrefix('B') },\n      { name: 'kilobytes', id: 'deckbytes', fn: decimalSIPrefix('B', 1) },\n      { name: 'megabytes', id: 'decmbytes', fn: decimalSIPrefix('B', 2) },\n      { name: 'gigabytes', id: 'decgbytes', fn: decimalSIPrefix('B', 3) },\n      { name: 'terabytes', id: 'dectbytes', fn: decimalSIPrefix('B', 4) },\n      { name: 'petabytes', id: 'decpbytes', fn: decimalSIPrefix('B', 5) },\n    ],\n  },\n  {\n    name: 'Data Rate',\n    formats: [\n      { name: 'packets/sec', id: 'pps', fn: decimalSIPrefix('pps') },\n      { name: 'bits/sec', id: 'bps', fn: decimalSIPrefix('bps') },\n      { name: 'bytes/sec', id: 'Bps', fn: decimalSIPrefix('Bs') },\n      { name: 'kilobytes/sec', id: 'KBs', fn: decimalSIPrefix('Bs', 1) },\n      { name: 'kilobits/sec', id: 'Kbits', fn: decimalSIPrefix('bps', 1) },\n      { name: 'megabytes/sec', id: 'MBs', fn: decimalSIPrefix('Bs', 2) },\n      { name: 'megabits/sec', id: 'Mbits', fn: decimalSIPrefix('bps', 2) },\n      { name: 'gigabytes/sec', id: 'GBs', fn: decimalSIPrefix('Bs', 3) },\n      { name: 'gigabits/sec', id: 'Gbits', fn: decimalSIPrefix('bps', 3) },\n      { name: 'terabytes/sec', id: 'TBs', fn: decimalSIPrefix('Bs', 4) },\n      { name: 'terabits/sec', id: 'Tbits', fn: decimalSIPrefix('bps', 4) },\n      { name: 'petabytes/sec', id: 'PBs', fn: decimalSIPrefix('Bs', 5) },\n      { name: 'petabits/sec', id: 'Pbits', fn: decimalSIPrefix('bps', 5) },\n    ],\n  },\n  {\n    name: 'Date & Time',\n    formats: [\n      { name: 'YYYY-MM-DD HH:mm:ss', id: 'dateTimeAsIso', fn: dateTimeAsIso },\n      { name: 'DD/MM/YYYY h:mm:ss a', id: 'dateTimeAsUS', fn: dateTimeAsUS },\n      { name: 'From Now', id: 'dateTimeFromNow', fn: dateTimeFromNow },\n    ],\n  },\n  {\n    name: 'Energy',\n    formats: [\n      { name: 'Watt (W)', id: 'watt', fn: decimalSIPrefix('W') },\n      { name: 'Kilowatt (kW)', id: 'kwatt', fn: decimalSIPrefix('W', 1) },\n      { name: 'Milliwatt (mW)', id: 'mwatt', fn: decimalSIPrefix('W', -1) },\n      { name: 'Watt per square meter (W/m²)', id: 'Wm2', fn: toFixedUnit('W/m²') },\n      { name: 'Volt-ampere (VA)', id: 'voltamp', fn: decimalSIPrefix('VA') },\n      { name: 'Kilovolt-ampere (kVA)', id: 'kvoltamp', fn: decimalSIPrefix('VA', 1) },\n      { name: 'Volt-ampere reactive (var)', id: 'voltampreact', fn: decimalSIPrefix('var') },\n      { name: 'Kilovolt-ampere reactive (kvar)', id: 'kvoltampreact', fn: decimalSIPrefix('var', 1) },\n      { name: 'Watt-hour (Wh)', id: 'watth', fn: decimalSIPrefix('Wh') },\n      { name: 'Kilowatt-hour (kWh)', id: 'kwatth', fn: decimalSIPrefix('Wh', 1) },\n      { name: 'Kilowatt-min (kWm)', id: 'kwattm', fn: decimalSIPrefix('W/Min', 1) },\n      { name: 'Ampere-hour (Ah)', id: 'amph', fn: decimalSIPrefix('Ah') },\n      { name: 'Joule (J)', id: 'joule', fn: decimalSIPrefix('J') },\n      { name: 'Electron volt (eV)', id: 'ev', fn: decimalSIPrefix('eV') },\n      { name: 'Ampere (A)', id: 'amp', fn: decimalSIPrefix('A') },\n      { name: 'Kiloampere (kA)', id: 'kamp', fn: decimalSIPrefix('A', 1) },\n      { name: 'Milliampere (mA)', id: 'mamp', fn: decimalSIPrefix('A', -1) },\n      { name: 'Volt (V)', id: 'volt', fn: decimalSIPrefix('V') },\n      { name: 'Kilovolt (kV)', id: 'kvolt', fn: decimalSIPrefix('V', 1) },\n      { name: 'Millivolt (mV)', id: 'mvolt', fn: decimalSIPrefix('V', -1) },\n      { name: 'Decibel-milliwatt (dBm)', id: 'dBm', fn: decimalSIPrefix('dBm') },\n      { name: 'Ohm (Ω)', id: 'ohm', fn: decimalSIPrefix('Ω') },\n      { name: 'Lumens (Lm)', id: 'lumens', fn: decimalSIPrefix('Lm') },\n    ],\n  },\n  {\n    name: 'Flow',\n    formats: [\n      { name: 'Gallons/min (gpm)', id: 'flowgpm', fn: toFixedUnit('gpm') },\n      { name: 'Cubic meters/sec (cms)', id: 'flowcms', fn: toFixedUnit('cms') },\n      { name: 'Cubic feet/sec (cfs)', id: 'flowcfs', fn: toFixedUnit('cfs') },\n      { name: 'Cubic feet/min (cfm)', id: 'flowcfm', fn: toFixedUnit('cfm') },\n      { name: 'Litre/hour', id: 'litreh', fn: toFixedUnit('l/h') },\n      { name: 'Litre/min (l/min)', id: 'flowlpm', fn: toFixedUnit('l/min') },\n      { name: 'milliLitre/min (mL/min)', id: 'flowmlpm', fn: toFixedUnit('mL/min') },\n      { name: 'Lux (lx)', id: 'lux', fn: toFixedUnit('lux') },\n    ],\n  },\n  {\n    name: 'Force',\n    formats: [\n      { name: 'Newton-meters (Nm)', id: 'forceNm', fn: decimalSIPrefix('Nm') },\n      { name: 'Kilonewton-meters (kNm)', id: 'forcekNm', fn: decimalSIPrefix('Nm', 1) },\n      { name: 'Newtons (N)', id: 'forceN', fn: decimalSIPrefix('N') },\n      { name: 'Kilonewtons (kN)', id: 'forcekN', fn: decimalSIPrefix('N', 1) },\n    ],\n  },\n  {\n    name: 'Hash Rate',\n    formats: [\n      { name: 'hashes/sec', id: 'Hs', fn: decimalSIPrefix('H/s') },\n      { name: 'kilohashes/sec', id: 'KHs', fn: decimalSIPrefix('H/s', 1) },\n      { name: 'megahashes/sec', id: 'MHs', fn: decimalSIPrefix('H/s', 2) },\n      { name: 'gigahashes/sec', id: 'GHs', fn: decimalSIPrefix('H/s', 3) },\n      { name: 'terahashes/sec', id: 'THs', fn: decimalSIPrefix('H/s', 4) },\n      { name: 'petahashes/sec', id: 'PHs', fn: decimalSIPrefix('H/s', 5) },\n      { name: 'exahashes/sec', id: 'EHs', fn: decimalSIPrefix('H/s', 6) },\n    ],\n  },\n  {\n    name: 'Mass',\n    formats: [\n      { name: 'milligram (mg)', id: 'massmg', fn: decimalSIPrefix('g', -1) },\n      { name: 'gram (g)', id: 'massg', fn: decimalSIPrefix('g') },\n      { name: 'kilogram (kg)', id: 'masskg', fn: decimalSIPrefix('g', 1) },\n      { name: 'metric ton (t)', id: 'masst', fn: toFixedUnit('t') },\n    ],\n  },\n  {\n    name: 'length',\n    formats: [\n      { name: 'millimetre (mm)', id: 'lengthmm', fn: decimalSIPrefix('m', -1) },\n      { name: 'feet (ft)', id: 'lengthft', fn: toFixedUnit('ft') },\n      { name: 'meter (m)', id: 'lengthm', fn: decimalSIPrefix('m') },\n      { name: 'kilometer (km)', id: 'lengthkm', fn: decimalSIPrefix('m', 1) },\n      { name: 'mile (mi)', id: 'lengthmi', fn: toFixedUnit('mi') },\n    ],\n  },\n  {\n    name: 'Pressure',\n    formats: [\n      { name: 'Millibars', id: 'pressurembar', fn: decimalSIPrefix('bar', -1) },\n      { name: 'Bars', id: 'pressurebar', fn: decimalSIPrefix('bar') },\n      { name: 'Kilobars', id: 'pressurekbar', fn: decimalSIPrefix('bar', 1) },\n      { name: 'Hectopascals', id: 'pressurehpa', fn: toFixedUnit('hPa') },\n      { name: 'Kilopascals', id: 'pressurekpa', fn: toFixedUnit('kPa') },\n      { name: 'Inches of mercury', id: 'pressurehg', fn: toFixedUnit('\"Hg') },\n      { name: 'PSI', id: 'pressurepsi', fn: scaledUnits(1000, ['psi', 'ksi', 'Mpsi']) },\n    ],\n  },\n  {\n    name: 'Radiation',\n    formats: [\n      { name: 'Becquerel (Bq)', id: 'radbq', fn: decimalSIPrefix('Bq') },\n      { name: 'curie (Ci)', id: 'radci', fn: decimalSIPrefix('Ci') },\n      { name: 'Gray (Gy)', id: 'radgy', fn: decimalSIPrefix('Gy') },\n      { name: 'rad', id: 'radrad', fn: decimalSIPrefix('rad') },\n      { name: 'Sievert (Sv)', id: 'radsv', fn: decimalSIPrefix('Sv') },\n      { name: 'rem', id: 'radrem', fn: decimalSIPrefix('rem') },\n      { name: 'Exposure (C/kg)', id: 'radexpckg', fn: decimalSIPrefix('C/kg') },\n      { name: 'roentgen (R)', id: 'radr', fn: decimalSIPrefix('R') },\n      { name: 'Sievert/hour (Sv/h)', id: 'radsvh', fn: decimalSIPrefix('Sv/h') },\n    ],\n  },\n  {\n    name: 'Temperature',\n    formats: [\n      { name: 'Celsius (°C)', id: 'celsius', fn: toFixedUnit('°C') },\n      { name: 'Farenheit (°F)', id: 'farenheit', fn: toFixedUnit('°F') },\n      { name: 'Kelvin (K)', id: 'kelvin', fn: toFixedUnit('K') },\n    ],\n  },\n  {\n    name: 'Time',\n    formats: [\n      { name: 'Hertz (1/s)', id: 'hertz', fn: decimalSIPrefix('Hz') },\n      { name: 'nanoseconds (ns)', id: 'ns', fn: toNanoSeconds },\n      { name: 'microseconds (µs)', id: 'µs', fn: toMicroSeconds },\n      { name: 'milliseconds (ms)', id: 'ms', fn: toMilliSeconds },\n      { name: 'seconds (s)', id: 's', fn: toSeconds },\n      { name: 'minutes (m)', id: 'm', fn: toMinutes },\n      { name: 'hours (h)', id: 'h', fn: toHours },\n      { name: 'days (d)', id: 'd', fn: toDays },\n      { name: 'duration (ms)', id: 'dtdurationms', fn: toDurationInMilliseconds },\n      { name: 'duration (s)', id: 'dtdurations', fn: toDurationInSeconds },\n      { name: 'duration (hh:mm:ss)', id: 'dthms', fn: toDurationInHoursMinutesSeconds },\n      { name: 'Timeticks (s/100)', id: 'timeticks', fn: toTimeTicks },\n      { name: 'clock (ms)', id: 'clockms', fn: toClockMilliseconds },\n      { name: 'clock (s)', id: 'clocks', fn: toClockSeconds },\n    ],\n  },\n  {\n    name: 'Throughput',\n    formats: [\n      { name: 'counts/sec (cps)', id: 'cps', fn: simpleCountUnit('cps') },\n      { name: 'ops/sec (ops)', id: 'ops', fn: simpleCountUnit('ops') },\n      { name: 'requests/sec (rps)', id: 'reqps', fn: simpleCountUnit('reqps') },\n      { name: 'reads/sec (rps)', id: 'rps', fn: simpleCountUnit('rps') },\n      { name: 'writes/sec (wps)', id: 'wps', fn: simpleCountUnit('wps') },\n      { name: 'I/O ops/sec (iops)', id: 'iops', fn: simpleCountUnit('iops') },\n      { name: 'counts/min (cpm)', id: 'cpm', fn: simpleCountUnit('cpm') },\n      { name: 'ops/min (opm)', id: 'opm', fn: simpleCountUnit('opm') },\n      { name: 'reads/min (rpm)', id: 'rpm', fn: simpleCountUnit('rpm') },\n      { name: 'writes/min (wpm)', id: 'wpm', fn: simpleCountUnit('wpm') },\n    ],\n  },\n  {\n    name: 'Velocity',\n    formats: [\n      { name: 'metres/second (m/s)', id: 'velocityms', fn: toFixedUnit('m/s') },\n      { name: 'kilometers/hour (km/h)', id: 'velocitykmh', fn: toFixedUnit('km/h') },\n      { name: 'miles/hour (mph)', id: 'velocitymph', fn: toFixedUnit('mph') },\n      { name: 'knot (kn)', id: 'velocityknot', fn: toFixedUnit('kn') },\n    ],\n  },\n  {\n    name: 'Volume',\n    formats: [\n      { name: 'millilitre (mL)', id: 'mlitre', fn: decimalSIPrefix('L', -1) },\n      { name: 'litre (L)', id: 'litre', fn: decimalSIPrefix('L') },\n      { name: 'cubic metre', id: 'm3', fn: toFixedUnit('m³') },\n      { name: 'Normal cubic metre', id: 'Nm3', fn: toFixedUnit('Nm³') },\n      { name: 'cubic decimetre', id: 'dm3', fn: toFixedUnit('dm³') },\n      { name: 'gallons', id: 'gallons', fn: toFixedUnit('gal') },\n    ],\n  },\n];\n","import { DecimalCount } from '@grafana/data';\n\nimport { getCategories } from './categories';\n\nexport type ValueFormatter = (\n  value: number,\n  decimals?: DecimalCount,\n  scaledDecimals?: DecimalCount,\n  isUtc?: boolean\n) => string;\n\nexport interface ValueFormat {\n  name: string;\n  id: string;\n  fn: ValueFormatter;\n}\n\nexport interface ValueFormatCategory {\n  name: string;\n  formats: ValueFormat[];\n}\n\ninterface ValueFormatterIndex {\n  [id: string]: ValueFormatter;\n}\n\n// Globals & formats cache\nlet categories: ValueFormatCategory[] = [];\nconst index: ValueFormatterIndex = {};\nlet hasBuiltIndex = false;\n\nexport function toFixed(value: number, decimals?: DecimalCount): string {\n  if (value === null) {\n    return '';\n  }\n  if (value === Number.NEGATIVE_INFINITY) {\n    return '-Inf';\n  }\n  if (value === Number.POSITIVE_INFINITY) {\n    return 'Inf';\n  }\n\n  const factor = decimals ? Math.pow(10, Math.max(0, decimals)) : 1;\n  const formatted = String(Math.round(value * factor) / factor);\n\n  // if exponent return directly\n  if (formatted.indexOf('e') !== -1 || value === 0) {\n    return formatted;\n  }\n\n  // If tickDecimals was specified, ensure that we have exactly that\n  // much precision; otherwise default to the value's own precision.\n  if (decimals != null) {\n    const decimalPos = formatted.indexOf('.');\n    const precision = decimalPos === -1 ? 0 : formatted.length - decimalPos - 1;\n    if (precision < decimals) {\n      return (precision ? formatted : formatted + '.') + String(factor).substr(1, decimals - precision);\n    }\n  }\n\n  return formatted;\n}\n\nexport function toFixedScaled(\n  value: number,\n  decimals: DecimalCount,\n  scaledDecimals: DecimalCount,\n  additionalDecimals: number,\n  ext?: string\n) {\n  if (scaledDecimals === null || scaledDecimals === undefined) {\n    return toFixed(value, decimals) + ext;\n  } else {\n    return toFixed(value, scaledDecimals + additionalDecimals) + ext;\n  }\n\n  return toFixed(value, decimals) + ext;\n}\n\nexport function toFixedUnit(unit: string): ValueFormatter {\n  return (size: number, decimals?: DecimalCount) => {\n    if (size === null) {\n      return '';\n    }\n    return toFixed(size, decimals) + ' ' + unit;\n  };\n}\n\n// Formatter which scales the unit string geometrically according to the given\n// numeric factor. Repeatedly scales the value down by the factor until it is\n// less than the factor in magnitude, or the end of the array is reached.\nexport function scaledUnits(factor: number, extArray: string[]) {\n  return (size: number, decimals?: DecimalCount, scaledDecimals?: DecimalCount) => {\n    if (size === null) {\n      return '';\n    }\n\n    let steps = 0;\n    const limit = extArray.length;\n\n    while (Math.abs(size) >= factor) {\n      steps++;\n      size /= factor;\n\n      if (steps >= limit) {\n        return 'NA';\n      }\n    }\n\n    if (steps > 0 && scaledDecimals !== null && scaledDecimals !== undefined) {\n      decimals = scaledDecimals + 3 * steps;\n    }\n\n    return toFixed(size, decimals) + extArray[steps];\n  };\n}\n\nexport function locale(value: number, decimals: DecimalCount) {\n  if (value == null) {\n    return '';\n  }\n  return value.toLocaleString(undefined, { maximumFractionDigits: decimals as number });\n}\n\nexport function simpleCountUnit(symbol: string) {\n  const units = ['', 'K', 'M', 'B', 'T'];\n  const scaler = scaledUnits(1000, units);\n  return (size: number, decimals?: DecimalCount, scaledDecimals?: DecimalCount) => {\n    if (size === null) {\n      return '';\n    }\n    const scaled = scaler(size, decimals, scaledDecimals);\n    return scaled + ' ' + symbol;\n  };\n}\n\nfunction buildFormats() {\n  categories = getCategories();\n\n  for (const cat of categories) {\n    for (const format of cat.formats) {\n      index[format.id] = format.fn;\n    }\n  }\n\n  hasBuiltIndex = true;\n}\n\nexport function getValueFormat(id: string): ValueFormatter {\n  if (!hasBuiltIndex) {\n    buildFormats();\n  }\n\n  return index[id];\n}\n\nexport function getValueFormatterIndex(): ValueFormatterIndex {\n  if (!hasBuiltIndex) {\n    buildFormats();\n  }\n\n  return index;\n}\n\nexport function getValueFormats() {\n  if (!hasBuiltIndex) {\n    buildFormats();\n  }\n\n  return categories.map(cat => {\n    return {\n      text: cat.name,\n      submenu: cat.formats.map(format => {\n        return {\n          text: format.name,\n          value: format.id,\n        };\n      }),\n    };\n  });\n}\n","type StoreValue = string | number | boolean | null;\n\nexport class Store {\n  get(key: string) {\n    return window.localStorage[key];\n  }\n\n  set(key: string, value: StoreValue) {\n    window.localStorage[key] = value;\n  }\n\n  getBool(key: string, def: any) {\n    if (def !== void 0 && !this.exists(key)) {\n      return def;\n    }\n    return window.localStorage[key] === 'true';\n  }\n\n  getObject(key: string, def?: any) {\n    let ret = def;\n    if (this.exists(key)) {\n      const json = window.localStorage[key];\n      try {\n        ret = JSON.parse(json);\n      } catch (error) {\n        console.error(`Error parsing store object: ${key}. Returning default: ${def}. [${error}]`);\n      }\n    }\n    return ret;\n  }\n\n  // Returns true when successfully stored\n  setObject(key: string, value: any): boolean {\n    let json;\n    try {\n      json = JSON.stringify(value);\n    } catch (error) {\n      console.error(`Could not stringify object: ${key}. [${error}]`);\n      return false;\n    }\n    try {\n      this.set(key, json);\n    } catch (error) {\n      // Likely hitting storage quota\n      console.error(`Could not save item in localStorage: ${key}. [${error}]`);\n      return false;\n    }\n    return true;\n  }\n\n  exists(key: string) {\n    return window.localStorage[key] !== void 0;\n  }\n\n  delete(key: string) {\n    window.localStorage.removeItem(key);\n  }\n}\n\nconst store = new Store();\nexport default store;\n","let templates = (require as any).context('../', true, /\\.html$/);\ntemplates.keys().forEach((key: string) => {\n  templates(key);\n});\n","var path = 'public/app/plugins/datasource/loki/partials/config.html';\nvar html = \"<datasource-http-settings current=ctrl.current no-direct-access=true>\\n</datasource-http-settings>\\n\\n<div class=gf-form-group>\\n  <div class=gf-form-inline>\\n    <div class=gf-form>\\n      <span class=\\\"gf-form-label width-8\\\">Maximum lines</span>\\n      <input type=text class=\\\"gf-form-input width-8 gf-form-input--has-help-icon\\\" ng-model=ctrl.current.jsonData.maxLines spellcheck=false placeholder=1000>\\n      <info-popover mode=right-absolute>\\n        Loki queries must contain a limit of the maximum number of lines returned (default: 1000).\\n        Increase this limit to have a bigger result set for ad-hoc analysis.\\n        Decrease this limit if your browser becomes sluggish when displaying the log results.\\n      </info-popover>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/datasource/influxdb/partials/annotations.editor.html';\nvar html = \"\\n<div class=gf-form-group>\\n\\t<div class=gf-form>\\n\\t\\t<input type=text class=gf-form-input ng-model=ctrl.annotation.query placeholder=\\\"select text from events where $timeFilter limit 1000\\\">\\n\\t</div>\\n</div>\\n\\n<h5 class=section-heading>Field mappings <tip>If your influxdb query returns more than one field you need to specify the column names below. An annotation event is composed of a title, tags, and an additional text field.</tip></h5>\\n<div class=gf-form-group>\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=\\\"gf-form-label width-4\\\">Text</span>\\n\\t\\t\\t<input type=text class=\\\"gf-form-input max-width-10\\\" ng-model=ctrl.annotation.textColumn placeholder=\\\"\\\">\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=\\\"gf-form-label width-4\\\">Tags</span>\\n\\t\\t\\t<input type=text class=\\\"gf-form-input max-width-10\\\" ng-model=ctrl.annotation.tagsColumn placeholder=\\\"\\\">\\n\\t\\t</div>\\n\\t\\t<div class=gf-form ng-show=ctrl.annotation.titleColumn>\\n\\t\\t\\t<span class=\\\"gf-form-label width-4\\\">Title <em class=muted>(deprecated)</em></span>\\n\\t\\t\\t<input type=text class=\\\"gf-form-input max-width-10\\\" ng-model=ctrl.annotation.titleColumn placeholder=\\\"\\\">\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","export class Profiler {\n  panelsRendered: number;\n  enabled: boolean;\n  $rootScope: any;\n  window: any;\n\n  init(config: any, $rootScope: any) {\n    this.$rootScope = $rootScope;\n    this.window = window;\n\n    if (!this.enabled) {\n      return;\n    }\n  }\n\n  renderingCompleted() {\n    // add render counter to root scope\n    // used by phantomjs render.js to know when panel has rendered\n    this.panelsRendered = (this.panelsRendered || 0) + 1;\n\n    // this window variable is used by backend rendering tools to know\n    // all panels have completed rendering\n    this.window.panelsRendered = this.panelsRendered;\n  }\n}\n\nconst profiler = new Profiler();\nexport { profiler };\n","export interface AppNotification {\n  id: number;\n  severity: AppNotificationSeverity;\n  icon: string;\n  title: string;\n  text: string;\n  timeout: AppNotificationTimeout;\n}\n\nexport enum AppNotificationSeverity {\n  Success = 'success',\n  Warning = 'warning',\n  Error = 'error',\n  Info = 'info',\n}\n\nexport enum AppNotificationTimeout {\n  Warning = 5000,\n  Success = 3000,\n  Error = 7000,\n}\n\nexport interface AppNotificationsState {\n  appNotifications: AppNotification[];\n}\n","import config from 'app/core/config';\n\nexport const stripBaseFromUrl = (url: string): string => {\n  const appSubUrl = config.appSubUrl;\n  const stripExtraChars = appSubUrl.endsWith('/') ? 1 : 0;\n  const urlWithoutBase =\n    url.length > 0 && url.indexOf(appSubUrl) === 0 ? url.slice(appSubUrl.length - stripExtraChars) : url;\n\n  return urlWithoutBase;\n};\n\nexport default { stripBaseFromUrl };\n","var path = 'public/app/plugins/datasource/mssql/partials/query.editor.html';\nvar html = \"<query-editor-row query-ctrl=ctrl can-collapse=false>\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=\\\"gf-form gf-form--grow\\\">\\n\\t\\t\\t<code-editor content=ctrl.target.rawSql datasource=ctrl.datasource on-change=ctrl.panelCtrl.refresh() data-mode=sqlserver>\\n\\t\\t\\t</code-editor>\\n\\t\\t</div>\\n\\t</div>\\n\\n  <div class=gf-form-inline>\\n    <div class=gf-form>\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword\\\">Format as</label>\\n\\t\\t\\t<div class=gf-form-select-wrapper>\\n\\t\\t\\t\\t<select class=\\\"gf-form-input gf-size-auto\\\" ng-model=ctrl.target.format ng-options=\\\"f.value as f.text for f in ctrl.formats\\\" ng-change=ctrl.refresh()></select>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n      <label class=\\\"gf-form-label query-keyword\\\" ng-click=\\\"ctrl.showHelp = !ctrl.showHelp\\\">\\n        Show Help\\n        <i class=\\\"fa fa-caret-down\\\" ng-show=ctrl.showHelp></i>\\n        <i class=\\\"fa fa-caret-right\\\" ng-hide=ctrl.showHelp></i>\\n      </label>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form ng-show=ctrl.lastQueryMeta>\\n      <label class=\\\"gf-form-label query-keyword\\\" ng-click=\\\"ctrl.showLastQuerySQL = !ctrl.showLastQuerySQL\\\">\\n        Generated SQL\\n        <i class=\\\"fa fa-caret-down\\\" ng-show=ctrl.showLastQuerySQL></i>\\n        <i class=\\\"fa fa-caret-right\\\" ng-hide=ctrl.showLastQuerySQL></i>\\n      </label>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"gf-form gf-form--grow\\\">\\n\\t\\t\\t<div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=gf-form ng-show=ctrl.showLastQuerySQL>\\n\\t\\t<pre class=gf-form-pre>{{ctrl.lastQueryMeta.sql}}</pre>\\n\\t</div>\\n\\n\\t<div class=gf-form ng-show=ctrl.showHelp>\\n\\t\\t<pre class=\\\"gf-form-pre alert alert-info\\\">Time series:\\n- return column named time (in UTC), as a unix time stamp or any sql native date data type. You can use the macros below.\\n- any other columns returned will be the time point values.\\nOptional:\\n  - return column named <i>metric</i> to represent the series name.\\n  - If multiple value columns are returned the metric column is used as prefix.\\n  - If no column named metric is found the column name of the value column is used as series name\\n\\nResultsets of time series queries need to be sorted by time.\\n\\nTable:\\n- return any set of columns\\n\\nMacros:\\n- $__time(column) -&gt; column AS time\\n- $__timeEpoch(column) -&gt; DATEDIFF(second, '1970-01-01', column) AS time\\n- $__timeFilter(column) -&gt; column BETWEEN '2017-04-21T05:01:17Z' AND '2017-04-21T05:01:17Z'\\n- $__unixEpochFilter(column) -&gt; column &gt;= 1492750877 AND column &lt;= 1492750877\\n- $__unixEpochNanoFilter(column) -&gt;  column &gt;= 1494410783152415214 AND column &lt;= 1494497183142514872\\n- $__timeGroup(column, '5m'[, fillvalue]) -&gt; CAST(ROUND(DATEDIFF(second, '1970-01-01', column)/300.0, 0) as bigint)*300.\\n     by setting fillvalue grafana will fill in missing values according to the interval\\n     fillvalue can be either a literal value, NULL or previous; previous will fill in the previous seen value or NULL if none has been seen yet\\n- $__timeGroupAlias(column, '5m'[, fillvalue]) -&gt; CAST(ROUND(DATEDIFF(second, '1970-01-01', column)/300.0, 0) as bigint)*300 AS [time]\\n- $__unixEpochGroup(column,'5m') -&gt; FLOOR(column/300)*300\\n- $__unixEpochGroupAlias(column,'5m') -&gt; FLOOR(column/300)*300 AS [time]\\n\\nExample of group by and order by with $__timeGroup:\\nSELECT\\n  $__timeGroup(date_time_col, '1h') AS time,\\n  sum(value) as value\\nFROM yourtable\\nGROUP BY $__timeGroup(date_time_col, '1h')\\nORDER BY 1\\n\\nOr build your own conditionals using these macros which just return the values:\\n- $__timeFrom() -&gt;  '2017-04-21T05:01:17Z'\\n- $__timeTo() -&gt;  '2017-04-21T05:01:17Z'\\n- $__unixEpochFrom() -&gt; 1492750877\\n- $__unixEpochTo() -&gt; 1492750877\\n- $__unixEpochNanoFrom() -&gt;  1494410783152415214\\n- $__unixEpochNanoTo() -&gt;  1494497183142514872\\n\\t\\t</pre>\\n\\t</div>\\n\\n\\t\\n\\n\\t<div class=gf-form ng-show=ctrl.lastQueryError>\\n\\t\\t<pre class=\\\"gf-form-pre alert alert-error\\\">{{ctrl.lastQueryError}}</pre>\\n\\t</div>\\n\\n</query-editor-row>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/panel/pluginlist/module.html';\nvar html = \"<div class=pluginlist>\\n  <div class=pluginlist-section ng-repeat=\\\"category in ctrl.viewModel\\\">\\n    <h6 class=pluginlist-section-header>\\n      {{category.header}}\\n    </h6>\\n    <div class=pluginlist-item ng-repeat=\\\"plugin in category.list\\\">\\n      <a class=\\\"pluginlist-link pluginlist-link-{{plugin.state}} pointer\\\" href={{plugin.defaultNavUrl}}>\\n        <span>\\n          <img ng-src={{plugin.info.logos.small}} class=pluginlist-image>\\n          <span class=pluginlist-title>{{plugin.name}}</span>\\n          <span class=pluginlist-version>v{{plugin.info.version}}</span>\\n        </span>\\n        <span ng-if=ctrl.isAdmin>\\n          <span class=\\\"pluginlist-message pluginlist-message--update\\\" ng-show=plugin.hasUpdate ng-click=\\\"ctrl.updateAvailable(plugin, $event)\\\" bs-tooltip=\\\"'New version: ' + plugin.latestVersion\\\">\\n            Update available!\\n          </span>\\n          <span class=\\\"pluginlist-message pluginlist-message--enable\\\" ng-show=\\\"!plugin.enabled && !plugin.hasUpdate\\\">\\n            Enable now\\n          </span>\\n          <span class=\\\"pluginlist-message pluginlist-message--no-update\\\" ng-show=\\\"plugin.enabled && !plugin.hasUpdate\\\">\\n            Up to date\\n          </span>\\n        </span>\\n      </a>\\n    </div>\\n    <div class=pluginlist-item ng-show=\\\"category.list.length === 0\\\">\\n      <a class=\\\"pluginlist-link pluginlist-link-{{plugin.state}}\\\" href=https://grafana.com/plugins>\\n        <span class=pluginlist-none-installed>None installed. <span class=pluginlist-emphasis>Browse Grafana.com</span></span>\\n      </a>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/datasource/graphite/partials/config.html';\nvar html = \"<datasource-http-settings current=ctrl.current suggest-url=http://localhost:8080>\\n</datasource-http-settings>\\n\\n<h3 class=page-heading>Graphite details</h3>\\n\\n<div class=gf-form-group>\\n\\t<div class=gf-form>\\n\\t\\t<span class=\\\"gf-form-label width-8\\\">\\n      Version\\n      <info-popover mode=right-normal position=\\\"top center\\\">\\n        This option controls what functions are available in the Graphite query editor.\\n      </info-popover>\\n    </span>\\n    <span class=gf-form-select-wrapper>\\n        <select class=\\\"gf-form-input gf-size-auto\\\" ng-model=ctrl.current.jsonData.graphiteVersion ng-options=\\\"f.value as f.name for f in ctrl.graphiteVersions\\\"></select>\\n    </span>\\n\\t</div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/partials/error.html';\nvar html = \"<page-header model=navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\">\\n  <div class=\\\"panel-container error-container\\\">\\n    <div class=\\\"error-column graph-box\\\">\\n      <div class=error-row>\\n        <div class=\\\"error-column error-space-between graph-percentage\\\">\\n          <p>100%</p>\\n          <p>80%</p>\\n          <p>60%</p>\\n          <p>40%</p>\\n          <p>20%</p>\\n          <p>0%</p>\\n        </div>\\n        <div class=\\\"error-column image-box\\\">\\n          <img src=public/img/graph404.svg width=100%>\\n          <div class=\\\"error-row error-space-between\\\">\\n            <p class=graph-text>Then</p>\\n            <p class=graph-text>Now</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"error-column info-box\\\">\\n      <div class=\\\"error-row current-box\\\">\\n        <p class=current-text>current</p>\\n      </div>\\n      <div class=error-row style=flex:1>\\n        <i class=\\\"fa fa-minus error-minus\\\"></i>\\n        <div class=\\\"error-column error-space-between error-full-width\\\">\\n          <div class=\\\"error-row error-space-between\\\">\\n            <p>Chances you are on the page you are looking for.</p>\\n            <p class=left-margin>0%</p>\\n          </div>\\n          <div>\\n            <h3>Sorry for the inconvenience</h3>\\n            <p>Please go back to your\\n            <a href={{appSubUrl}}/ class=error-link>home dashboard</a> and try again.</p>\\n            <p>If the error persists, seek help on the\\n            <a href=https://community.grafana.com target=_blank class=error-link>community site</a>.</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <span class=react-resizable-handle style=cursor:default></span>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/partials/edit_json.html';\nvar html = \"<div ng-controller=JsonEditorCtrl>\\n  <div class=tabbed-view-header>\\n    <h2 class=tabbed-view-title>\\n      JSON\\n    </h2>\\n\\n    <button class=tabbed-view-close-btn ng-click=dismiss()>\\n      <i class=\\\"fa fa-remove\\\"></i>\\n    </button>\\n  </div>\\n\\n  <div class=tabbed-view-body>\\n    <div class=gf-form>\\n      <code-editor content=json data-mode=json data-max-lines=20></code-editor>\\n    </div>\\n\\n    <div class=gf-form-button-row>\\n      <button type=button class=\\\"btn btn-primary\\\" ng-show=canUpdate ng-click=\\\"update(); dismiss();\\\">Update</button>\\n      <button class=\\\"btn btn-secondary\\\" ng-if=canCopy clipboard-button=getContentForClipboard()>\\n        Copy to Clipboard\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { AppNotification, AppNotificationSeverity, AppNotificationTimeout } from 'app/types';\nimport { getMessageFromError } from 'app/core/utils/errors';\n\nconst defaultSuccessNotification = {\n  title: '',\n  text: '',\n  severity: AppNotificationSeverity.Success,\n  icon: 'fa fa-check',\n  timeout: AppNotificationTimeout.Success,\n};\n\nconst defaultWarningNotification = {\n  title: '',\n  text: '',\n  severity: AppNotificationSeverity.Warning,\n  icon: 'fa fa-exclamation',\n  timeout: AppNotificationTimeout.Warning,\n};\n\nconst defaultErrorNotification = {\n  title: '',\n  text: '',\n  severity: AppNotificationSeverity.Error,\n  icon: 'fa fa-exclamation-triangle',\n  timeout: AppNotificationTimeout.Error,\n};\n\nexport const createSuccessNotification = (title: string, text?: string): AppNotification => ({\n  ...defaultSuccessNotification,\n  title: title,\n  text: text,\n  id: Date.now(),\n});\n\nexport const createErrorNotification = (title: string, text?: any): AppNotification => {\n  return {\n    ...defaultErrorNotification,\n    title: title,\n    text: getMessageFromError(text),\n    id: Date.now(),\n  };\n};\n\nexport const createWarningNotification = (title: string, text?: string): AppNotification => ({\n  ...defaultWarningNotification,\n  title: title,\n  text: text,\n  id: Date.now(),\n});\n","var path = 'public/app/features/profile/partials/profile.html';\nvar html = \"<page-header model=ctrl.navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\">\\n  <react-profile-wrapper></react-profile-wrapper>\\n\\n  <h3 class=page-heading>Sessions</h3>\\n  <div class=gf-form-group>\\n    <table class=\\\"filter-table form-inline\\\">\\n      <thead>\\n        <tr>\\n          <th>Last seen</th>\\n          <th>Logged on</th>\\n          <th>IP address</th>\\n          <th>Browser &amp; OS</th>\\n          <th></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr ng-repeat=\\\"session in ctrl.sessions\\\">\\n          <td ng-if=session.isActive>Now</td>\\n          <td ng-if=!session.isActive>{{ session.seenAt }}</td>\\n          <td>{{ session.createdAt }}</td>\\n          <td>{{ session.clientIp }}</td>\\n          <td>{{ session.browser }} on {{ session.os }} {{ session.osVersion }}</td>\\n          <td>\\n            <button class=\\\"btn btn-danger btn-small\\\" ng-click=ctrl.revokeUserSession(session.id)>\\n              <i class=\\\"fa fa-power-off\\\"></i>\\n            </button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import React, { PureComponent } from 'react';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { User, Team } from 'app/types';\nimport { config } from 'app/core/config';\n\nexport interface UserAPI {\n  changePassword: (changePassword: ChangePasswordFields) => void;\n  updateUserProfile: (profile: ProfileUpdateFields) => void;\n  loadUser: () => void;\n  loadTeams: () => void;\n  loadOrgs: () => void;\n  setUserOrg: (org: UserOrg) => void;\n}\n\ninterface LoadingStates {\n  changePassword: boolean;\n  loadUser: boolean;\n  loadTeams: boolean;\n  loadOrgs: boolean;\n  updateUserProfile: boolean;\n  updateUserOrg: boolean;\n}\n\nexport interface ChangePasswordFields {\n  oldPassword: string;\n  newPassword: string;\n  confirmNew: string;\n}\n\nexport interface ProfileUpdateFields {\n  name: string;\n  email: string;\n  login: string;\n}\n\nexport interface UserOrg {\n  orgId: number;\n  name: string;\n  role: string;\n}\n\nexport interface Props {\n  userId?: number; // passed, will load user on mount\n  children: (api: UserAPI, states: LoadingStates, teams: Team[], orgs: UserOrg[], user?: User) => JSX.Element;\n}\n\nexport interface State {\n  user?: User;\n  teams: Team[];\n  orgs: UserOrg[];\n  loadingStates: LoadingStates;\n}\n\nexport class UserProvider extends PureComponent<Props, State> {\n  state: State = {\n    teams: [] as Team[],\n    orgs: [] as UserOrg[],\n    loadingStates: {\n      changePassword: false,\n      loadUser: true,\n      loadTeams: false,\n      loadOrgs: false,\n      updateUserProfile: false,\n      updateUserOrg: false,\n    },\n  };\n\n  componentWillMount() {\n    if (this.props.userId) {\n      this.loadUser();\n    }\n  }\n\n  changePassword = async (payload: ChangePasswordFields) => {\n    this.setState({ loadingStates: { ...this.state.loadingStates, changePassword: true } });\n    await getBackendSrv().put('/api/user/password', payload);\n    this.setState({ loadingStates: { ...this.state.loadingStates, changePassword: false } });\n  };\n\n  loadUser = async () => {\n    this.setState({\n      loadingStates: { ...this.state.loadingStates, loadUser: true },\n    });\n    const user = await getBackendSrv().get('/api/user');\n    this.setState({ user, loadingStates: { ...this.state.loadingStates, loadUser: Object.keys(user).length === 0 } });\n  };\n\n  loadTeams = async () => {\n    this.setState({\n      loadingStates: { ...this.state.loadingStates, loadTeams: true },\n    });\n    const teams = await getBackendSrv().get('/api/user/teams');\n    this.setState({ teams, loadingStates: { ...this.state.loadingStates, loadTeams: false } });\n  };\n\n  loadOrgs = async () => {\n    this.setState({\n      loadingStates: { ...this.state.loadingStates, loadOrgs: true },\n    });\n    const orgs = await getBackendSrv().get('/api/user/orgs');\n    this.setState({ orgs, loadingStates: { ...this.state.loadingStates, loadOrgs: false } });\n  };\n\n  setUserOrg = async (org: UserOrg) => {\n    this.setState({\n      loadingStates: { ...this.state.loadingStates, updateUserOrg: true },\n    });\n    await getBackendSrv()\n      .post('/api/user/using/' + org.orgId, {})\n      .then(() => {\n        window.location.href = config.appSubUrl + '/profile';\n      })\n      .finally(() => {\n        this.setState({ loadingStates: { ...this.state.loadingStates, updateUserOrg: false } });\n      });\n  };\n\n  updateUserProfile = async (payload: ProfileUpdateFields) => {\n    this.setState({ loadingStates: { ...this.state.loadingStates, updateUserProfile: true } });\n    await getBackendSrv()\n      .put('/api/user', payload)\n      .then(() => {\n        this.loadUser();\n      })\n      .catch(e => console.log(e))\n      .finally(() => {\n        this.setState({ loadingStates: { ...this.state.loadingStates, updateUserProfile: false } });\n      });\n  };\n\n  render() {\n    const { children } = this.props;\n    const { loadingStates, teams, orgs, user } = this.state;\n\n    const api = {\n      changePassword: this.changePassword,\n      loadUser: this.loadUser,\n      loadTeams: this.loadTeams,\n      loadOrgs: this.loadOrgs,\n      updateUserProfile: this.updateUserProfile,\n      setUserOrg: this.setUserOrg,\n    };\n\n    return <>{children(api, loadingStates, teams, orgs, user)}</>;\n  }\n}\n\nexport default UserProvider;\n","var path = 'public/app/core/components/search/search_results.html';\nvar html = \"<div ng-repeat=\\\"section in ctrl.results\\\" class=search-section>\\n  <div class=\\\"search-section__header pointer\\\" ng-hide=section.hideHeader ng-class=\\\"{'selected': section.selected}\\\" ng-click=ctrl.toggleFolderExpand(section)>\\n    <div ng-click=\\\"ctrl.toggleSelection(section, $event)\\\" class=center-vh>\\n      <gf-form-checkbox ng-show=ctrl.editable on-change=ctrl.selectionChanged($event) checked=section.checked switch-class=gf-form-checkbox--transparent>\\n      </gf-form-checkbox>\\n    </div>\\n    <i class=search-section__header__icon ng-class=section.icon></i>\\n    <span class=search-section__header__text>{{::section.title}}</span>\\n    <a ng-show=section.url href={{section.url}} class=search-section__header__link>\\n      <i class=\\\"gicon gicon-cog\\\"></i>\\n    </a>\\n    <i class=\\\"fa fa-angle-down search-section__header__toggle\\\" ng-show=section.expanded></i>\\n    <i class=\\\"fa fa-angle-right search-section__header__toggle\\\" ng-hide=section.expanded></i>\\n  </div>\\n\\n  <div class=search-section__header ng-show=section.hideHeader></div>\\n\\n  <div ng-if=section.expanded>\\n    <a ng-repeat=\\\"item in section.items\\\" class=\\\"search-item search-item--indent\\\" ng-class=\\\"{'selected': item.selected}\\\" ng-href={{::item.url}} aria-label={{::item.title}}>\\n      <div ng-click=\\\"ctrl.toggleSelection(item, $event)\\\" class=center-vh>\\n        <gf-form-checkbox ng-show=ctrl.editable on-change=ctrl.selectionChanged() checked=item.checked switch-class=gf-form-checkbox--transparent>\\n        </gf-form-checkbox>\\n      </div>\\n      <span class=search-item__icon>\\n        <i class=\\\"gicon mini gicon-dashboard-list\\\"></i>\\n      </span>\\n      <span class=search-item__body ng-click=ctrl.onItemClick(item)>\\n        <div class=search-item__body-title>{{::item.title}}</div>\\n        <span class=search-item__body-folder-title>{{::item.folderTitle}}</span>\\n      </span>\\n      <span class=search-item__tags>\\n        <span ng-click=\\\"ctrl.selectTag(tag, $event)\\\" ng-repeat=\\\"tag in item.tags\\\" tag-color-from-name=tag class=\\\"label label-tag\\\">\\n          {{tag}}\\n        </span>\\n      </span>\\n    </a>\\n  </div>\\n</div>\\n\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/datasource/elasticsearch/partials/pipeline_variables.html';\nvar html = \"<div ng-repeat=\\\"var in variables\\\">\\n  <div class=\\\"gf-form offset-width-7\\\" ng-if=\\\"$index === 0\\\">\\n    <label class=\\\"gf-form-label width-10\\\">Variables</label>\\n    <input type=text class=\\\"gf-form-input max-width-12\\\" ng-model=var.name placeholder=\\\"Variable name\\\" ng-blur=onChangeInternal() spellcheck=false>\\n    <metric-segment-model property=var.pipelineAgg options=options on-change=onChangeInternal() custom=false css-class=width-12></metric-segment-model>\\n    <label class=gf-form-label>\\n      <a class=pointer ng-click=remove($index)><i class=\\\"fa fa-minus\\\"></i></a>\\n    </label>\\n    <label class=gf-form-label>\\n      <a class=pointer ng-click=add()><i class=\\\"fa fa-plus\\\"></i></a>\\n    </label>\\n  </div>\\n  <div class=\\\"gf-form offset-width-17\\\" ng-if=\\\"$index !== 0\\\">\\n    <input type=text class=\\\"gf-form-input max-width-12\\\" ng-model=var.name placeholder=\\\"Variable name\\\" ng-blur=onChangeInternal() spellcheck=false>\\n    <metric-segment-model property=var.pipelineAgg options=options on-change=onChangeInternal() custom=false css-class=width-12></metric-segment-model>\\n    <label class=gf-form-label>\\n      <a class=pointer ng-click=remove($index)><i class=\\\"fa fa-minus\\\"></i></a>\\n    </label>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import xss from 'xss';\n\nconst XSSWL = Object.keys(xss.whiteList).reduce((acc, element) => {\n  // @ts-ignore\n  acc[element] = xss.whiteList[element].concat(['class', 'style']);\n  return acc;\n}, {});\n\nconst sanitizeXSS = new xss.FilterXSS({\n  whiteList: XSSWL,\n});\n\n/**\n * Returns string safe from XSS attacks.\n *\n * Even though we allow the style-attribute, there's still default filtering applied to it\n * Info: https://github.com/leizongmin/js-xss#customize-css-filter\n * Whitelist: https://github.com/leizongmin/js-css-filter/blob/master/lib/default.js\n */\nexport function sanitize(unsanitizedString: string): string {\n  try {\n    return sanitizeXSS.process(unsanitizedString);\n  } catch (error) {\n    console.log('String could not be sanitized', unsanitizedString);\n    return unsanitizedString;\n  }\n}\n\nexport function hasAnsiCodes(input: string): boolean {\n  return /\\u001b\\[\\d{1,2}m/.test(input);\n}\n\nexport function escapeHtml(str: string): string {\n  return String(str)\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n}\n","import _ from 'lodash';\nimport { PanelCtrl } from 'app/plugins/sdk';\n\nimport { sanitize, escapeHtml } from 'app/core/utils/text';\nimport config from 'app/core/config';\nimport { auto, ISCEService } from 'angular';\nimport { TemplateSrv } from 'app/features/templating/template_srv';\nimport { renderMarkdown } from '@grafana/data';\n\nconst defaultContent = `\n# Title\n\nFor markdown syntax help: [commonmark.org/help](https://commonmark.org/help/)\n\n\n\n`;\n\nexport class TextPanelCtrl extends PanelCtrl {\n  static templateUrl = `public/app/plugins/panel/text/module.html`;\n  static scrollable = true;\n\n  content: string;\n  // Set and populate defaults\n  panelDefaults = {\n    mode: 'markdown', // 'html', 'markdown', 'text'\n    content: defaultContent,\n  };\n\n  /** @ngInject */\n  constructor(\n    $scope: any,\n    $injector: auto.IInjectorService,\n    private templateSrv: TemplateSrv,\n    private $sce: ISCEService\n  ) {\n    super($scope, $injector);\n\n    _.defaults(this.panel, this.panelDefaults);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('refresh', this.onRefresh.bind(this));\n    this.events.on('render', this.onRender.bind(this));\n\n    const renderWhenChanged = (scope: any) => {\n      const { panel } = scope.ctrl;\n      return [panel.content, panel.mode].join();\n    };\n\n    $scope.$watch(\n      renderWhenChanged,\n      _.throttle(() => {\n        this.render();\n      }, 100)\n    );\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/app/plugins/panel/text/editor.html');\n\n    if (this.panel.mode === 'text') {\n      this.panel.mode = 'markdown';\n    }\n  }\n\n  onRefresh() {\n    this.render();\n  }\n\n  onRender() {\n    if (this.panel.mode === 'markdown') {\n      this.renderMarkdown(this.panel.content);\n    } else if (this.panel.mode === 'html') {\n      this.updateContent(this.panel.content);\n    }\n    this.renderingCompleted();\n  }\n\n  renderText(content: string) {\n    const safeContent = escapeHtml(content).replace(/\\n/g, '<br/>');\n    this.updateContent(safeContent);\n  }\n\n  renderMarkdown(content: string) {\n    this.$scope.$applyAsync(() => {\n      this.updateContent(renderMarkdown(content));\n    });\n  }\n\n  updateContent(html: string) {\n    html = config.disableSanitizeHtml ? html : sanitize(html);\n    try {\n      this.content = this.$sce.trustAsHtml(this.templateSrv.replace(html, this.panel.scopedVars));\n    } catch (e) {\n      console.log('Text panel error: ', e);\n      this.content = this.$sce.trustAsHtml(html);\n    }\n  }\n}\n\nexport { TextPanelCtrl as PanelCtrl };\n","// Libraries\nimport React, { PureComponent, ChangeEvent } from 'react';\n\n// Components\nimport { PanelEditorProps, PanelOptionsGroup, Select } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\n\n// Types\nimport { TextOptions, TextMode } from './types';\n\nexport class TextPanelEditor extends PureComponent<PanelEditorProps<TextOptions>> {\n  modes: Array<SelectableValue<TextMode>> = [\n    { value: 'markdown', label: 'Markdown' },\n    { value: 'text', label: 'Text' },\n    { value: 'html', label: 'HTML' },\n  ];\n\n  onModeChange = (item: SelectableValue<TextMode>) =>\n    this.props.onOptionsChange({ ...this.props.options, mode: item.value! });\n\n  onContentChange = (evt: ChangeEvent<HTMLTextAreaElement>) => {\n    this.props.onOptionsChange({ ...this.props.options, content: (evt.target as any).value });\n  };\n\n  render() {\n    const { mode, content } = this.props.options;\n\n    return (\n      <PanelOptionsGroup title=\"Text\">\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <span className=\"gf-form-label\">Mode</span>\n            <Select onChange={this.onModeChange} value={this.modes.find(e => mode === e.value)} options={this.modes} />\n          </div>\n        </div>\n        <textarea value={content} onChange={this.onContentChange} className=\"gf-form-input\" rows={10} />\n      </PanelOptionsGroup>\n    );\n  }\n}\n","// Libraries\nimport React, { PureComponent } from 'react';\nimport { debounce } from 'lodash';\nimport { renderMarkdown } from '@grafana/data';\n\n// Utils\nimport { sanitize } from 'app/core/utils/text';\nimport config from 'app/core/config';\n\n// Types\nimport { TextOptions } from './types';\nimport { PanelProps } from '@grafana/ui';\n\ninterface Props extends PanelProps<TextOptions> {}\ninterface State {\n  html: string;\n}\n\nexport class TextPanel extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      html: this.processContent(props.options),\n    };\n  }\n\n  updateHTML = debounce(() => {\n    const html = this.processContent(this.props.options);\n    if (html !== this.state.html) {\n      this.setState({ html });\n    }\n  }, 150);\n\n  componentDidUpdate(prevProps: Props) {\n    // Since any change could be referenced in a template variable,\n    // This needs to process everytime (with debounce)\n    this.updateHTML();\n  }\n\n  prepareHTML(html: string): string {\n    const { replaceVariables } = this.props;\n\n    html = config.disableSanitizeHtml ? html : sanitize(html);\n\n    return replaceVariables(html);\n  }\n\n  prepareText(content: string): string {\n    return this.prepareHTML(\n      content\n        .replace(/&/g, '&amp;')\n        .replace(/>/g, '&gt;')\n        .replace(/</g, '&lt;')\n        .replace(/\\n/g, '<br/>')\n    );\n  }\n\n  prepareMarkdown(content: string): string {\n    return this.prepareHTML(renderMarkdown(content));\n  }\n\n  processContent(options: TextOptions): string {\n    const { mode, content } = options;\n\n    if (!content) {\n      return '';\n    }\n\n    if (mode === 'markdown') {\n      return this.prepareMarkdown(content);\n    }\n    if (mode === 'html') {\n      return this.prepareHTML(content);\n    }\n\n    return this.prepareText(content);\n  }\n\n  render() {\n    const { html } = this.state;\n\n    return <div className=\"markdown-html panel-text-content\" dangerouslySetInnerHTML={{ __html: html }} />;\n  }\n}\n","import { PanelPlugin } from '@grafana/ui';\n\nimport { TextPanelEditor } from './TextPanelEditor';\nimport { TextPanel } from './TextPanel';\nimport { TextOptions, defaults } from './types';\n\nexport const plugin = new PanelPlugin<TextOptions>(TextPanel)\n  .setDefaults(defaults)\n  .setEditor(TextPanelEditor)\n  .setPanelChangeHandler((options: TextOptions, prevPluginId: string, prevOptions: any) => {\n    if (prevPluginId === 'text') {\n      return prevOptions as TextOptions;\n    }\n    return options;\n  });\n","export type TextMode = 'html' | 'markdown' | 'text';\nexport interface TextOptions {\n  mode: TextMode;\n  content: string;\n}\n\nexport const defaults: TextOptions = {\n  mode: 'markdown',\n  content: `# Title\n\nFor markdown syntax help: [commonmark.org/help](https://commonmark.org/help/)\n\n\n`,\n};\n","import React from 'react';\nimport { LegendOptions, PanelOptionsGroup, Switch, Input, StatsPicker } from '@grafana/ui';\n\nexport interface GraphLegendEditorLegendOptions extends LegendOptions {\n  stats?: string[];\n  decimals?: number;\n  sortBy?: string;\n  sortDesc?: boolean;\n}\n\ninterface GraphLegendEditorProps {\n  options: GraphLegendEditorLegendOptions;\n  onChange: (options: GraphLegendEditorLegendOptions) => void;\n}\n\nexport const GraphLegendEditor: React.FunctionComponent<GraphLegendEditorProps> = props => {\n  const { options, onChange } = props;\n\n  const onStatsChanged = (stats: string[]) => {\n    onChange({\n      ...options,\n      stats,\n    });\n  };\n\n  const onOptionToggle = (option: keyof LegendOptions) => (event?: React.SyntheticEvent<HTMLInputElement>) => {\n    const newOption = {};\n    if (!event) {\n      return;\n    }\n    // TODO: fix the ignores\n    // @ts-ignore\n    newOption[option] = event.target.checked;\n    if (option === 'placement') {\n      // @ts-ignore\n      newOption[option] = event.target.checked ? 'right' : 'under';\n    }\n\n    onChange({\n      ...options,\n      ...newOption,\n    });\n  };\n\n  const labelWidth = 8;\n  return (\n    <PanelOptionsGroup title=\"Legend\">\n      <div className=\"section gf-form-group\">\n        <h4>Options</h4>\n        <Switch\n          label=\"Show legend\"\n          labelClass={`width-${labelWidth}`}\n          checked={options.isVisible}\n          onChange={onOptionToggle('isVisible')}\n        />\n        <Switch\n          label=\"Display as table\"\n          labelClass={`width-${labelWidth}`}\n          checked={options.asTable}\n          onChange={onOptionToggle('asTable')}\n        />\n        <Switch\n          label=\"To the right\"\n          labelClass={`width-${labelWidth}`}\n          checked={options.placement === 'right'}\n          onChange={onOptionToggle('placement')}\n        />\n      </div>\n\n      <div className=\"section gf-form-group\">\n        <h4>Show</h4>\n        <div className=\"gf-form\">\n          <StatsPicker\n            allowMultiple={true}\n            stats={options.stats ? options.stats : []}\n            onChange={onStatsChanged}\n            placeholder={'Pick Values'}\n          />\n        </div>\n\n        <div className=\"gf-form\">\n          <div className=\"gf-form-label\">Decimals</div>\n          <Input\n            className=\"gf-form-input width-5\"\n            type=\"number\"\n            value={options.decimals}\n            placeholder=\"Auto\"\n            onChange={event => {\n              onChange({\n                ...options,\n                decimals: parseInt(event.target.value, 10),\n              });\n            }}\n          />\n        </div>\n      </div>\n\n      <div className=\"section gf-form-group\">\n        <h4>Hidden series</h4>\n        {/* <Switch label=\"With only nulls\" checked={!!options.hideEmpty} onChange={onOptionToggle('hideEmpty')} /> */}\n        <Switch label=\"With only zeros\" checked={!!options.hideZero} onChange={onOptionToggle('hideZero')} />\n      </div>\n    </PanelOptionsGroup>\n  );\n};\n","//// Libraries\nimport _ from 'lodash';\nimport React, { PureComponent } from 'react';\n\n// Types\nimport { PanelEditorProps, Switch, LegendOptions } from '@grafana/ui';\nimport { Options, GraphOptions } from './types';\nimport { GraphLegendEditor } from './GraphLegendEditor';\n\nexport class GraphPanelEditor extends PureComponent<PanelEditorProps<Options>> {\n  onGraphOptionsChange = (options: Partial<GraphOptions>) => {\n    this.props.onOptionsChange({\n      ...this.props.options,\n      graph: {\n        ...this.props.options.graph,\n        ...options,\n      },\n    });\n  };\n\n  onLegendOptionsChange = (options: LegendOptions) => {\n    this.props.onOptionsChange({ ...this.props.options, legend: options });\n  };\n\n  onToggleLines = () => {\n    this.onGraphOptionsChange({ showLines: !this.props.options.graph.showLines });\n  };\n\n  onToggleBars = () => {\n    this.onGraphOptionsChange({ showBars: !this.props.options.graph.showBars });\n  };\n\n  onTogglePoints = () => {\n    this.onGraphOptionsChange({ showPoints: !this.props.options.graph.showPoints });\n  };\n\n  render() {\n    const {\n      graph: { showBars, showPoints, showLines },\n    } = this.props.options;\n\n    return (\n      <>\n        <div className=\"section gf-form-group\">\n          <h5 className=\"section-heading\">Draw Modes</h5>\n          <Switch label=\"Lines\" labelClass=\"width-5\" checked={showLines} onChange={this.onToggleLines} />\n          <Switch label=\"Bars\" labelClass=\"width-5\" checked={showBars} onChange={this.onToggleBars} />\n          <Switch label=\"Points\" labelClass=\"width-5\" checked={showPoints} onChange={this.onTogglePoints} />\n        </div>\n        <GraphLegendEditor options={this.props.options.legend} onChange={this.onLegendOptionsChange} />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { PanelData, GraphSeriesToggler } from '@grafana/ui';\nimport { GraphSeriesXY, AbsoluteTimeRange } from '@grafana/data';\n\nimport { getGraphSeriesModel } from './getGraphSeriesModel';\nimport { Options, SeriesOptions } from './types';\nimport { SeriesColorChangeHandler, SeriesAxisToggleHandler } from '@grafana/ui/src/components/Graph/GraphWithLegend';\n\ninterface GraphPanelControllerAPI {\n  series: GraphSeriesXY[];\n  onSeriesAxisToggle: SeriesAxisToggleHandler;\n  onSeriesColorChange: SeriesColorChangeHandler;\n  onSeriesToggle: (label: string, event: React.MouseEvent<HTMLElement>) => void;\n  onToggleSort: (sortBy: string) => void;\n  onHorizontalRegionSelected: (from: number, to: number) => void;\n}\n\ninterface GraphPanelControllerProps {\n  children: (api: GraphPanelControllerAPI) => JSX.Element;\n  options: Options;\n  data: PanelData;\n  onOptionsChange: (options: Options) => void;\n  onChangeTimeRange: (timeRange: AbsoluteTimeRange) => void;\n}\n\ninterface GraphPanelControllerState {\n  graphSeriesModel: GraphSeriesXY[];\n}\n\nexport class GraphPanelController extends React.Component<GraphPanelControllerProps, GraphPanelControllerState> {\n  constructor(props: GraphPanelControllerProps) {\n    super(props);\n\n    this.onSeriesColorChange = this.onSeriesColorChange.bind(this);\n    this.onSeriesAxisToggle = this.onSeriesAxisToggle.bind(this);\n    this.onToggleSort = this.onToggleSort.bind(this);\n    this.onHorizontalRegionSelected = this.onHorizontalRegionSelected.bind(this);\n\n    this.state = {\n      graphSeriesModel: getGraphSeriesModel(\n        props.data.series,\n        props.options.series,\n        props.options.graph,\n        props.options.legend\n      ),\n    };\n  }\n\n  static getDerivedStateFromProps(props: GraphPanelControllerProps, state: GraphPanelControllerState) {\n    return {\n      ...state,\n      graphSeriesModel: getGraphSeriesModel(\n        props.data.series,\n        props.options.series,\n        props.options.graph,\n        props.options.legend\n      ),\n    };\n  }\n\n  onSeriesOptionsUpdate(label: string, optionsUpdate: SeriesOptions) {\n    const { onOptionsChange, options } = this.props;\n    const updatedSeriesOptions: { [label: string]: SeriesOptions } = { ...options.series };\n    updatedSeriesOptions[label] = optionsUpdate;\n    onOptionsChange({\n      ...options,\n      series: updatedSeriesOptions,\n    });\n  }\n\n  onSeriesAxisToggle(label: string, yAxis: number) {\n    const {\n      options: { series },\n    } = this.props;\n    const seriesOptionsUpdate: SeriesOptions = series[label]\n      ? {\n          ...series[label],\n          yAxis: {\n            ...series[label].yAxis,\n            index: yAxis,\n          },\n        }\n      : {\n          yAxis: {\n            index: yAxis,\n          },\n        };\n    this.onSeriesOptionsUpdate(label, seriesOptionsUpdate);\n  }\n\n  onSeriesColorChange(label: string, color: string) {\n    const {\n      options: { series },\n    } = this.props;\n    const seriesOptionsUpdate: SeriesOptions = series[label]\n      ? {\n          ...series[label],\n          color,\n        }\n      : {\n          color,\n        };\n\n    this.onSeriesOptionsUpdate(label, seriesOptionsUpdate);\n  }\n\n  onToggleSort(sortBy: string) {\n    const { onOptionsChange, options } = this.props;\n    onOptionsChange({\n      ...options,\n      legend: {\n        ...options.legend,\n        sortBy,\n        sortDesc: sortBy === options.legend.sortBy ? !options.legend.sortDesc : false,\n      },\n    });\n  }\n\n  onHorizontalRegionSelected(from: number, to: number) {\n    const { onChangeTimeRange } = this.props;\n    onChangeTimeRange({ from, to });\n  }\n\n  render() {\n    const { children } = this.props;\n    const { graphSeriesModel } = this.state;\n\n    return (\n      <GraphSeriesToggler series={graphSeriesModel}>\n        {({ onSeriesToggle, toggledSeries }) => {\n          return children({\n            series: toggledSeries,\n            onSeriesColorChange: this.onSeriesColorChange,\n            onSeriesAxisToggle: this.onSeriesAxisToggle,\n            onToggleSort: this.onToggleSort,\n            onSeriesToggle: onSeriesToggle,\n            onHorizontalRegionSelected: this.onHorizontalRegionSelected,\n          });\n        }}\n      </GraphSeriesToggler>\n    );\n  }\n}\n","import React from 'react';\nimport { PanelProps, GraphWithLegend } from '@grafana/ui';\nimport { Options } from './types';\nimport { GraphPanelController } from './GraphPanelController';\nimport { LegendDisplayMode } from '@grafana/ui/src/components/Legend/Legend';\n\ninterface GraphPanelProps extends PanelProps<Options> {}\n\nexport const GraphPanel: React.FunctionComponent<GraphPanelProps> = ({\n  data,\n  timeRange,\n  timeZone,\n  width,\n  height,\n  options,\n  onOptionsChange,\n  onChangeTimeRange,\n}) => {\n  if (!data) {\n    return (\n      <div className=\"panel-empty\">\n        <p>No data found in response</p>\n      </div>\n    );\n  }\n\n  const {\n    graph: { showLines, showBars, showPoints },\n    legend: legendOptions,\n  } = options;\n\n  const graphProps = {\n    showBars,\n    showLines,\n    showPoints,\n  };\n  const { asTable, isVisible, ...legendProps } = legendOptions;\n  return (\n    <GraphPanelController\n      data={data}\n      options={options}\n      onOptionsChange={onOptionsChange}\n      onChangeTimeRange={onChangeTimeRange}\n    >\n      {({ onSeriesToggle, onHorizontalRegionSelected, ...controllerApi }) => {\n        return (\n          <GraphWithLegend\n            timeRange={timeRange}\n            timeZone={timeZone}\n            width={width}\n            height={height}\n            displayMode={asTable ? LegendDisplayMode.Table : LegendDisplayMode.List}\n            isLegendVisible={isVisible}\n            sortLegendBy={legendOptions.sortBy}\n            sortLegendDesc={legendOptions.sortDesc}\n            onSeriesToggle={onSeriesToggle}\n            onHorizontalRegionSelected={onHorizontalRegionSelected}\n            {...graphProps}\n            {...legendProps}\n            {...controllerApi}\n          />\n        );\n      }}\n    </GraphPanelController>\n  );\n};\n","import { LegendOptions } from '@grafana/ui';\nimport { YAxis } from '@grafana/data';\n\nimport { GraphLegendEditorLegendOptions } from './GraphLegendEditor';\n\nexport interface SeriesOptions {\n  color?: string;\n  yAxis?: YAxis;\n  [key: string]: any;\n}\nexport interface GraphOptions {\n  showBars: boolean;\n  showLines: boolean;\n  showPoints: boolean;\n}\n\nexport interface Options {\n  graph: GraphOptions;\n  legend: LegendOptions & GraphLegendEditorLegendOptions;\n  series: {\n    [alias: string]: SeriesOptions;\n  };\n}\n\nexport const defaults: Options = {\n  graph: {\n    showBars: false,\n    showLines: true,\n    showPoints: false,\n  },\n  legend: {\n    asTable: false,\n    isVisible: true,\n    placement: 'under',\n  },\n  series: {},\n};\n","import { PanelPlugin } from '@grafana/ui';\nimport { GraphPanelEditor } from './GraphPanelEditor';\nimport { GraphPanel } from './GraphPanel';\nimport { Options, defaults } from './types';\n\nexport const plugin = new PanelPlugin<Options>(GraphPanel).setDefaults(defaults).setEditor(GraphPanelEditor);\n","import angular from 'angular';\nimport $ from 'jquery';\nimport _ from 'lodash';\n//@ts-ignore\nimport Drop from 'tether-drop';\nimport { CreatePlotOverlay } from '@grafana/data';\n\n/** @ngInject */\nconst createAnnotationToolip: CreatePlotOverlay = (element, event, plot) => {\n  const injector = angular.element(document).injector();\n  const content = document.createElement('div');\n  content.innerHTML = '<annotation-tooltip event=\"event\" on-edit=\"onEdit()\"></annotation-tooltip>';\n\n  injector.invoke([\n    '$compile',\n    '$rootScope',\n    ($compile, $rootScope) => {\n      const eventManager = plot.getOptions().events.manager;\n      const tmpScope = $rootScope.$new(true);\n      tmpScope.event = event;\n      tmpScope.onEdit = () => {\n        eventManager.editEvent(event);\n      };\n\n      $compile(content)(tmpScope);\n      tmpScope.$digest();\n      tmpScope.$destroy();\n\n      const drop = new Drop({\n        target: element[0],\n        content: content,\n        position: 'bottom center',\n        classes: 'drop-popover drop-popover--annotation',\n        openOn: 'hover',\n        hoverCloseDelay: 200,\n        tetherOptions: {\n          constraints: [{ to: 'window', pin: true, attachment: 'both' }],\n        },\n      });\n\n      drop.open();\n\n      drop.on('close', () => {\n        setTimeout(() => {\n          drop.destroy();\n        });\n      });\n    },\n  ]);\n};\n\nlet markerElementToAttachTo: any = null;\n\n/** @ngInject */\nconst createEditPopover: CreatePlotOverlay = (element, event, plot) => {\n  const eventManager = plot.getOptions().events.manager;\n  if (eventManager.editorOpen) {\n    // update marker element to attach to (needed in case of legend on the right\n    // when there is a double render pass and the initial marker element is removed)\n    markerElementToAttachTo = element;\n    return;\n  }\n\n  // mark as openend\n  eventManager.editorOpened();\n  // set marker elment to attache to\n  markerElementToAttachTo = element;\n\n  // wait for element to be attached and positioned\n  setTimeout(() => {\n    const injector = angular.element(document).injector();\n    const content = document.createElement('div');\n    content.innerHTML = '<event-editor panel-ctrl=\"panelCtrl\" event=\"event\" close=\"close()\"></event-editor>';\n\n    injector.invoke([\n      '$compile',\n      '$rootScope',\n      ($compile, $rootScope) => {\n        const scope = $rootScope.$new(true);\n        let drop: any;\n\n        scope.event = event;\n        scope.panelCtrl = eventManager.panelCtrl;\n        scope.close = () => {\n          drop.close();\n        };\n\n        $compile(content)(scope);\n        scope.$digest();\n\n        drop = new Drop({\n          target: markerElementToAttachTo[0],\n          content: content,\n          position: 'bottom center',\n          classes: 'drop-popover drop-popover--form',\n          openOn: 'click',\n          tetherOptions: {\n            constraints: [{ to: 'window', pin: true, attachment: 'both' }],\n          },\n        });\n\n        drop.open();\n        eventManager.editorOpened();\n\n        drop.on('close', () => {\n          // need timeout here in order call drop.destroy\n          setTimeout(() => {\n            eventManager.editorClosed();\n            scope.$destroy();\n            drop.destroy();\n          });\n        });\n      },\n    ]);\n  }, 100);\n};\n\nexport { createEditPopover, createAnnotationToolip };\n\n/*\n * jquery.flot.events\n *\n * description: Flot plugin for adding events/markers to the plot\n * version: 0.2.5\n * authors:\n *    Alexander Wunschik <alex@wunschik.net>\n *    Joel Oughton <joeloughton@gmail.com>\n *    Nicolas Joseph <www.nicolasjoseph.com>\n *\n * website: https://github.com/mojoaxel/flot-events\n *\n * released under MIT License and GPLv2+\n */\n\n/**\n * A class that allows for the drawing an remove of some object\n */\nexport class DrawableEvent {\n  _object: any;\n  _drawFunc: any;\n  _clearFunc: any;\n  _moveFunc: any;\n  _position: any;\n  _width: any;\n  _height: any;\n\n  /** @ngInject */\n  constructor(\n    object: JQuery,\n    drawFunc: any,\n    clearFunc: any,\n    moveFunc: any,\n    left: number,\n    top: number,\n    width: number,\n    height: number\n  ) {\n    this._object = object;\n    this._drawFunc = drawFunc;\n    this._clearFunc = clearFunc;\n    this._moveFunc = moveFunc;\n    this._position = { left, top };\n    this._width = width;\n    this._height = height;\n  }\n\n  width() {\n    return this._width;\n  }\n  height() {\n    return this._height;\n  }\n  position() {\n    return this._position;\n  }\n  draw() {\n    this._drawFunc(this._object);\n  }\n  clear() {\n    this._clearFunc(this._object);\n  }\n  getObject() {\n    return this._object;\n  }\n  moveTo(position: { left: number; top: number }) {\n    this._position = position;\n    this._moveFunc(this._object, this._position);\n  }\n}\n\n/**\n * Event class that stores options (eventType, min, max, title, description) and the object to draw.\n */\nexport class VisualEvent {\n  _parent: any;\n  _options: any;\n  _drawableEvent: any;\n  _hidden: any;\n\n  /** @ngInject */\n  constructor(options: any, drawableEvent: DrawableEvent) {\n    this._options = options;\n    this._drawableEvent = drawableEvent;\n    this._hidden = false;\n  }\n\n  visual() {\n    return this._drawableEvent;\n  }\n  getOptions() {\n    return this._options;\n  }\n  getParent() {\n    return this._parent;\n  }\n  isHidden() {\n    return this._hidden;\n  }\n  hide() {\n    this._hidden = true;\n  }\n  unhide() {\n    this._hidden = false;\n  }\n}\n\n/**\n * A Class that handles the event-markers inside the given plot\n */\nexport class EventMarkers {\n  _events: any;\n  _types: any;\n  _plot: any;\n  eventsEnabled: any;\n\n  /** @ngInject */\n  constructor(plot: any) {\n    this._events = [];\n    this._types = [];\n    this._plot = plot;\n    this.eventsEnabled = false;\n  }\n\n  getEvents() {\n    return this._events;\n  }\n\n  setTypes(types: any) {\n    return (this._types = types);\n  }\n\n  /**\n   * create internal objects for the given events\n   */\n  setupEvents(events: any[]) {\n    const parts = _.partition(events, 'isRegion');\n    const regions = parts[0];\n    events = parts[1];\n\n    $.each(events, (index, event) => {\n      const ve = new VisualEvent(event, this._buildDiv(event));\n      this._events.push(ve);\n    });\n\n    $.each(regions, (index, event) => {\n      const vre = new VisualEvent(event, this._buildRegDiv(event));\n      this._events.push(vre);\n    });\n\n    this._events.sort((a: any, b: any) => {\n      const ao = a.getOptions(),\n        bo = b.getOptions();\n      if (ao.min > bo.min) {\n        return 1;\n      }\n      if (ao.min < bo.min) {\n        return -1;\n      }\n      return 0;\n    });\n  }\n\n  /**\n   * draw the events to the plot\n   */\n  drawEvents() {\n    // var o = this._plot.getPlotOffset();\n\n    $.each(this._events, (index, event) => {\n      // check event is inside the graph range\n      if (this._insidePlot(event.getOptions().min) && !event.isHidden()) {\n        event.visual().draw();\n      } else {\n        event\n          .visual()\n          .getObject()\n          .hide();\n      }\n    });\n  }\n\n  /**\n   * update the position of the event-markers (e.g. after scrolling or zooming)\n   */\n  updateEvents() {\n    const o = this._plot.getPlotOffset();\n    let left;\n    let top;\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n\n    $.each(this._events, (index, event) => {\n      top = o.top + this._plot.height() - event.visual().height();\n      left = xaxis.p2c(event.getOptions().min) + o.left - event.visual().width() / 2;\n      event.visual().moveTo({ top: top, left: left });\n    });\n  }\n\n  /**\n   * remove all events from the plot\n   */\n  _clearEvents() {\n    $.each(this._events, (index, val) => {\n      val.visual().clear();\n    });\n    this._events = [];\n  }\n\n  /**\n   * create a DOM element for the given event\n   */\n  _buildDiv(event: { eventType: any; min: any; editModel: any }) {\n    const that = this;\n\n    const container = this._plot.getPlaceholder();\n    const o = this._plot.getPlotOffset();\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n    let top, left, color, markerSize, markerShow, lineStyle, lineWidth;\n    let markerTooltip;\n\n    // map the eventType to a types object\n    const eventTypeId = event.eventType;\n\n    if (this._types === null || !this._types[eventTypeId] || !this._types[eventTypeId].color) {\n      color = '#666';\n    } else {\n      color = this._types[eventTypeId].color;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || !this._types[eventTypeId].markerSize) {\n      markerSize = 8; //default marker size\n    } else {\n      markerSize = this._types[eventTypeId].markerSize;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || this._types[eventTypeId].markerShow === undefined) {\n      markerShow = true;\n    } else {\n      markerShow = this._types[eventTypeId].markerShow;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || this._types[eventTypeId].markerTooltip === undefined) {\n      markerTooltip = true;\n    } else {\n      markerTooltip = this._types[eventTypeId].markerTooltip;\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || !this._types[eventTypeId].lineStyle) {\n      lineStyle = 'dashed'; //default line style\n    } else {\n      lineStyle = this._types[eventTypeId].lineStyle.toLowerCase();\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || this._types[eventTypeId].lineWidth === undefined) {\n      lineWidth = 1; //default line width\n    } else {\n      lineWidth = this._types[eventTypeId].lineWidth;\n    }\n\n    let topOffset = xaxis.options.eventSectionHeight || 0;\n    topOffset = topOffset / 3;\n\n    top = o.top + this._plot.height() + topOffset;\n    left = xaxis.p2c(event.min) + o.left;\n\n    const line = $('<div class=\"events_line flot-temp-elem\"></div>')\n      .css({\n        position: 'absolute',\n        opacity: 0.8,\n        left: left + 'px',\n        top: 8,\n        width: lineWidth + 'px',\n        height: this._plot.height() + topOffset * 0.8,\n        'border-left-width': lineWidth + 'px',\n        'border-left-style': lineStyle,\n        'border-left-color': color,\n        color: color,\n      })\n      .appendTo(container);\n\n    if (markerShow) {\n      const marker = $('<div class=\"events_marker\"></div>').css({\n        position: 'absolute',\n        left: -markerSize - Math.round(lineWidth / 2) + 'px',\n        'font-size': 0,\n        'line-height': 0,\n        width: 0,\n        height: 0,\n        'border-left': markerSize + 'px solid transparent',\n        'border-right': markerSize + 'px solid transparent',\n      });\n\n      marker.appendTo(line);\n\n      if (\n        this._types[eventTypeId] &&\n        this._types[eventTypeId].position &&\n        this._types[eventTypeId].position.toUpperCase() === 'BOTTOM'\n      ) {\n        marker.css({\n          top: top - markerSize - 8 + 'px',\n          'border-top': 'none',\n          'border-bottom': markerSize + 'px solid ' + color,\n        });\n      } else {\n        marker.css({\n          top: '0px',\n          'border-top': markerSize + 'px solid ' + color,\n          'border-bottom': 'none',\n        });\n      }\n\n      marker.data({\n        event: event,\n      });\n\n      const mouseenter = function(this: any) {\n        createAnnotationToolip(marker, $(this).data('event'), that._plot);\n      };\n\n      if (event.editModel) {\n        createEditPopover(marker, event.editModel, that._plot);\n      }\n\n      const mouseleave = () => {\n        that._plot.clearSelection();\n      };\n\n      if (markerTooltip) {\n        marker.css({ cursor: 'help' });\n        marker.hover(mouseenter, mouseleave);\n      }\n    }\n\n    const drawableEvent = new DrawableEvent(\n      line,\n      function drawFunc(obj: { show: () => void }) {\n        obj.show();\n      },\n      (obj: { remove: () => void }) => {\n        obj.remove();\n      },\n      (obj: any, position: { top: any; left: any }) => {\n        obj.css({\n          top: position.top,\n          left: position.left,\n        });\n      },\n      left,\n      top,\n      line.width(),\n      line.height()\n    );\n\n    return drawableEvent;\n  }\n\n  /**\n   * create a DOM element for the given region\n   */\n  _buildRegDiv(event: { eventType: any; min: number; timeEnd: number; editModel: any }) {\n    const that = this;\n\n    const container = this._plot.getPlaceholder();\n    const o = this._plot.getPlotOffset();\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n    let top,\n      left,\n      lineWidth: number,\n      regionWidth,\n      lineStyle: string | number | cssPropertySetter,\n      color: string,\n      markerTooltip;\n\n    // map the eventType to a types object\n    const eventTypeId = event.eventType;\n\n    if (this._types === null || !this._types[eventTypeId] || !this._types[eventTypeId].color) {\n      color = '#666';\n    } else {\n      color = this._types[eventTypeId].color;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || this._types[eventTypeId].markerTooltip === undefined) {\n      markerTooltip = true;\n    } else {\n      markerTooltip = this._types[eventTypeId].markerTooltip;\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || this._types[eventTypeId].lineWidth === undefined) {\n      lineWidth = 1; //default line width\n    } else {\n      lineWidth = this._types[eventTypeId].lineWidth;\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || !this._types[eventTypeId].lineStyle) {\n      lineStyle = 'dashed'; //default line style\n    } else {\n      lineStyle = this._types[eventTypeId].lineStyle.toLowerCase();\n    }\n\n    const topOffset = 2;\n    top = o.top + this._plot.height() + topOffset;\n\n    const timeFrom = Math.min(event.min, event.timeEnd);\n    const timeTo = Math.max(event.min, event.timeEnd);\n    left = xaxis.p2c(timeFrom) + o.left;\n    const right = xaxis.p2c(timeTo) + o.left;\n    regionWidth = right - left;\n\n    _.each([left, right], position => {\n      const line = $('<div class=\"events_line flot-temp-elem\"></div>').css({\n        position: 'absolute',\n        opacity: 0.8,\n        left: position + 'px',\n        top: 8,\n        width: lineWidth + 'px',\n        height: this._plot.height() + topOffset,\n        'border-left-width': lineWidth + 'px',\n        'border-left-style': lineStyle,\n        'border-left-color': color,\n        color: color,\n      });\n      line.appendTo(container);\n    });\n\n    const region = $('<div class=\"events_marker region_marker flot-temp-elem\"></div>').css({\n      position: 'absolute',\n      opacity: 0.5,\n      left: left + 'px',\n      top: top,\n      width: Math.round(regionWidth + lineWidth) + 'px',\n      height: '0.5rem',\n      'border-left-color': color,\n      color: color,\n      'background-color': color,\n    });\n    region.appendTo(container);\n\n    region.data({\n      event: event,\n    });\n\n    const mouseenter = function(this: any) {\n      createAnnotationToolip(region, $(this).data('event'), that._plot);\n    };\n\n    if (event.editModel) {\n      createEditPopover(region, event.editModel, that._plot);\n    }\n\n    const mouseleave = () => {\n      that._plot.clearSelection();\n    };\n\n    if (markerTooltip) {\n      region.css({ cursor: 'help' });\n      region.hover(mouseenter, mouseleave);\n    }\n\n    const drawableEvent = new DrawableEvent(\n      region,\n      function drawFunc(obj: { show: () => void }) {\n        obj.show();\n      },\n      (obj: { remove: () => void }) => {\n        obj.remove();\n      },\n      (obj: { css: (arg0: { top: any; left: any }) => void }, position: { top: any; left: any }) => {\n        obj.css({\n          top: position.top,\n          left: position.left,\n        });\n      },\n      left,\n      top,\n      region.width(),\n      region.height()\n    );\n\n    return drawableEvent;\n  }\n\n  /**\n   * check if the event is inside visible range\n   */\n  _insidePlot(x: any) {\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n    const xc = xaxis.p2c(x);\n    return xc > 0 && xc < xaxis.p2c(xaxis.max);\n  }\n}\n\n/**\n * initialize the plugin for the given plot\n */\n\n/** @ngInject */\nexport function init(this: any, plot: any) {\n  /*jshint validthis:true */\n  const that = this;\n  const eventMarkers = new EventMarkers(plot);\n\n  plot.getEvents = () => {\n    return eventMarkers._events;\n  };\n\n  plot.hideEvents = () => {\n    $.each(eventMarkers._events, (index, event) => {\n      event\n        .visual()\n        .getObject()\n        .hide();\n    });\n  };\n\n  plot.showEvents = () => {\n    plot.hideEvents();\n    $.each(eventMarkers._events, (index, event) => {\n      event.hide();\n    });\n\n    that.eventMarkers.drawEvents();\n  };\n\n  // change events on an existing plot\n  plot.setEvents = (events: any[]) => {\n    if (eventMarkers.eventsEnabled) {\n      eventMarkers.setupEvents(events);\n    }\n  };\n\n  plot.hooks.processOptions.push((plot: any, options: any) => {\n    // enable the plugin\n    if (options.events.data != null) {\n      eventMarkers.eventsEnabled = true;\n    }\n  });\n\n  plot.hooks.draw.push((plot: any) => {\n    const options = plot.getOptions();\n\n    if (eventMarkers.eventsEnabled) {\n      // check for first run\n      if (eventMarkers.getEvents().length < 1) {\n        eventMarkers.setTypes(options.events.types);\n        eventMarkers.setupEvents(options.events.data);\n      } else {\n        eventMarkers.updateEvents();\n      }\n    }\n\n    eventMarkers.drawEvents();\n  });\n}\n\nconst defaultOptions: any = {\n  events: {\n    data: null,\n    types: null,\n    xaxis: 1,\n    position: 'BOTTOM',\n  },\n};\n\n$.plot.plugins.push({\n  init: init,\n  options: defaultOptions,\n  name: 'events',\n  version: '0.2.5',\n});\n","import $ from 'jquery';\nimport { appEvents } from 'app/core/core';\n\nexport default function GraphTooltip(this: any, elem: any, dashboard: any, scope: any, getSeriesFn: any) {\n  const self = this;\n  const ctrl = scope.ctrl;\n  const panel = ctrl.panel;\n\n  const $tooltip = $('<div class=\"graph-tooltip\">');\n\n  this.destroy = () => {\n    $tooltip.remove();\n  };\n\n  this.findHoverIndexFromDataPoints = (posX: number, series: any, last: number) => {\n    const ps = series.datapoints.pointsize;\n    const initial = last * ps;\n    const len = series.datapoints.points.length;\n    let j;\n    for (j = initial; j < len; j += ps) {\n      // Special case of a non stepped line, highlight the very last point just before a null point\n      if (\n        (!series.lines.steps && series.datapoints.points[initial] != null && series.datapoints.points[j] == null) ||\n        //normal case\n        series.datapoints.points[j] > posX\n      ) {\n        return Math.max(j - ps, 0) / ps;\n      }\n    }\n    return j / ps - 1;\n  };\n\n  this.findHoverIndexFromData = (posX: any, series: any) => {\n    let lower = 0;\n    let upper = series.data.length - 1;\n    let middle;\n    while (true) {\n      if (lower > upper) {\n        return Math.max(upper, 0);\n      }\n      middle = Math.floor((lower + upper) / 2);\n      if (series.data[middle][0] === posX) {\n        return middle;\n      } else if (series.data[middle][0] < posX) {\n        lower = middle + 1;\n      } else {\n        upper = middle - 1;\n      }\n    }\n  };\n\n  this.renderAndShow = (absoluteTime: string, innerHtml: string, pos: { pageX: number; pageY: any }, xMode: string) => {\n    if (xMode === 'time') {\n      innerHtml = '<div class=\"graph-tooltip-time\">' + absoluteTime + '</div>' + innerHtml;\n    }\n    $tooltip.html(innerHtml).place_tt(pos.pageX + 20, pos.pageY);\n  };\n\n  this.getMultiSeriesPlotHoverInfo = function(seriesList: any[], pos: { x: number }) {\n    let value, i, series, hoverIndex, hoverDistance, pointTime, yaxis;\n    // 3 sub-arrays, 1st for hidden series, 2nd for left yaxis, 3rd for right yaxis.\n    let results: any = [[], [], []];\n\n    //now we know the current X (j) position for X and Y values\n    let lastValue = 0; //needed for stacked values\n\n    let minDistance, minTime;\n\n    for (i = 0; i < seriesList.length; i++) {\n      series = seriesList[i];\n\n      if (!series.data.length || (panel.legend.hideEmpty && series.allIsNull)) {\n        // Init value so that it does not brake series sorting\n        results[0].push({ hidden: true, value: 0 });\n        continue;\n      }\n\n      if (!series.data.length || (panel.legend.hideZero && series.allIsZero)) {\n        // Init value so that it does not brake series sorting\n        results[0].push({ hidden: true, value: 0 });\n        continue;\n      }\n\n      if (series.hideTooltip) {\n        results[0].push({ hidden: true, value: 0 });\n        continue;\n      }\n\n      hoverIndex = this.findHoverIndexFromData(pos.x, series);\n      hoverDistance = pos.x - series.data[hoverIndex][0];\n      pointTime = series.data[hoverIndex][0];\n\n      // Take the closest point before the cursor, or if it does not exist, the closest after\n      if (\n        !minDistance ||\n        (hoverDistance >= 0 && (hoverDistance < minDistance || minDistance < 0)) ||\n        (hoverDistance < 0 && hoverDistance > minDistance)\n      ) {\n        minDistance = hoverDistance;\n        minTime = pointTime;\n      }\n\n      if (series.stack) {\n        if (panel.tooltip.value_type === 'individual') {\n          value = series.data[hoverIndex][1];\n        } else if (!series.stack) {\n          value = series.data[hoverIndex][1];\n        } else {\n          lastValue += series.data[hoverIndex][1];\n          value = lastValue;\n        }\n      } else {\n        value = series.data[hoverIndex][1];\n      }\n\n      // Highlighting multiple Points depending on the plot type\n      if (series.lines.steps || series.stack) {\n        // stacked and steppedLine plots can have series with different length.\n        // Stacked series can increase its length on each new stacked serie if null points found,\n        // to speed the index search we begin always on the last found hoverIndex.\n        hoverIndex = this.findHoverIndexFromDataPoints(pos.x, series, hoverIndex);\n      }\n\n      // Be sure we have a yaxis so that it does not brake series sorting\n      yaxis = 0;\n      if (series.yaxis) {\n        yaxis = series.yaxis.n;\n      }\n\n      results[yaxis].push({\n        value: value,\n        hoverIndex: hoverIndex,\n        color: series.color,\n        label: series.aliasEscaped,\n        time: pointTime,\n        distance: hoverDistance,\n        index: i,\n      });\n    }\n\n    // Contat the 3 sub-arrays\n    results = results[0].concat(results[1], results[2]);\n\n    // Time of the point closer to pointer\n    results.time = minTime;\n\n    return results;\n  };\n\n  elem.mouseleave(() => {\n    if (panel.tooltip.shared) {\n      const plot = elem.data().plot;\n      if (plot) {\n        $tooltip.detach();\n        plot.unhighlight();\n      }\n    }\n    appEvents.emit('graph-hover-clear');\n  });\n\n  elem.bind('plothover', (event: any, pos: { panelRelY: number; pageY: number }, item: any) => {\n    self.show(pos, item);\n\n    // broadcast to other graph panels that we are hovering!\n    pos.panelRelY = (pos.pageY - elem.offset().top) / elem.height();\n    appEvents.emit('graph-hover', { pos: pos, panel: panel });\n  });\n\n  elem.bind('plotclick', (event: any, pos: any, item: any) => {\n    appEvents.emit('graph-click', { pos: pos, panel: panel, item: item });\n  });\n\n  this.clear = (plot: { clearCrosshair: () => void; unhighlight: () => void }) => {\n    $tooltip.detach();\n    plot.clearCrosshair();\n    plot.unhighlight();\n  };\n\n  this.show = (pos: any, item: any) => {\n    const plot = elem.data().plot;\n    const plotData = plot.getData();\n    const xAxes = plot.getXAxes();\n    const xMode = xAxes[0].options.mode;\n    const seriesList = getSeriesFn();\n    let allSeriesMode = panel.tooltip.shared;\n    let group, value, absoluteTime, hoverInfo, i, series, seriesHtml, tooltipFormat;\n\n    // if panelRelY is defined another panel wants us to show a tooltip\n    // get pageX from position on x axis and pageY from relative position in original panel\n    if (pos.panelRelY) {\n      const pointOffset = plot.pointOffset({ x: pos.x });\n      if (Number.isNaN(pointOffset.left) || pointOffset.left < 0 || pointOffset.left > elem.width()) {\n        self.clear(plot);\n        return;\n      }\n      pos.pageX = elem.offset().left + pointOffset.left;\n      pos.pageY = elem.offset().top + elem.height() * pos.panelRelY;\n      const isVisible =\n        pos.pageY >= $(window).scrollTop() && pos.pageY <= $(window).innerHeight() + $(window).scrollTop();\n      if (!isVisible) {\n        self.clear(plot);\n        return;\n      }\n      plot.setCrosshair(pos);\n      allSeriesMode = true;\n\n      if (dashboard.sharedCrosshairModeOnly()) {\n        // if only crosshair mode we are done\n        return;\n      }\n    }\n\n    if (seriesList.length === 0) {\n      return;\n    }\n\n    if (seriesList[0].hasMsResolution) {\n      tooltipFormat = 'YYYY-MM-DD HH:mm:ss.SSS';\n    } else {\n      tooltipFormat = 'YYYY-MM-DD HH:mm:ss';\n    }\n\n    if (allSeriesMode) {\n      plot.unhighlight();\n\n      const seriesHoverInfo = self.getMultiSeriesPlotHoverInfo(plotData, pos);\n\n      seriesHtml = '';\n\n      absoluteTime = dashboard.formatDate(seriesHoverInfo.time, tooltipFormat);\n\n      // Dynamically reorder the hovercard for the current time point if the\n      // option is enabled.\n      if (panel.tooltip.sort === 2) {\n        seriesHoverInfo.sort((a: { value: number }, b: { value: number }) => {\n          return b.value - a.value;\n        });\n      } else if (panel.tooltip.sort === 1) {\n        seriesHoverInfo.sort((a: { value: number }, b: { value: number }) => {\n          return a.value - b.value;\n        });\n      }\n\n      for (i = 0; i < seriesHoverInfo.length; i++) {\n        hoverInfo = seriesHoverInfo[i];\n\n        if (hoverInfo.hidden) {\n          continue;\n        }\n\n        let highlightClass = '';\n        if (item && hoverInfo.index === item.seriesIndex) {\n          highlightClass = 'graph-tooltip-list-item--highlight';\n        }\n\n        series = seriesList[hoverInfo.index];\n\n        value = series.formatValue(hoverInfo.value);\n\n        seriesHtml +=\n          '<div class=\"graph-tooltip-list-item ' + highlightClass + '\"><div class=\"graph-tooltip-series-name\">';\n        seriesHtml +=\n          '<i class=\"fa fa-minus\" style=\"color:' + hoverInfo.color + ';\"></i> ' + hoverInfo.label + ':</div>';\n        seriesHtml += '<div class=\"graph-tooltip-value\">' + value + '</div></div>';\n        plot.highlight(hoverInfo.index, hoverInfo.hoverIndex);\n      }\n\n      self.renderAndShow(absoluteTime, seriesHtml, pos, xMode);\n    } else if (item) {\n      // single series tooltip\n      series = seriesList[item.seriesIndex];\n      group = '<div class=\"graph-tooltip-list-item\"><div class=\"graph-tooltip-series-name\">';\n      group +=\n        '<i class=\"fa fa-minus\" style=\"color:' + item.series.color + ';\"></i> ' + series.aliasEscaped + ':</div>';\n\n      if (panel.stack && panel.tooltip.value_type === 'individual') {\n        value = item.datapoint[1] - item.datapoint[2];\n      } else {\n        value = item.datapoint[1];\n      }\n\n      value = series.formatValue(value);\n\n      absoluteTime = dashboard.formatDate(item.datapoint[0], tooltipFormat);\n\n      group += '<div class=\"graph-tooltip-value\">' + value + '</div>';\n\n      self.renderAndShow(absoluteTime, group, pos, xMode);\n    } else {\n      // no hit\n      $tooltip.detach();\n    }\n  };\n}\n","import 'vendor/flot/jquery.flot';\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport { getColorFromHexRgbOrName } from '@grafana/ui';\nimport { PanelCtrl } from 'app/features/panel/panel_ctrl';\n\nexport class ThresholdManager {\n  plot: any;\n  placeholder: any;\n  height: any;\n  thresholds: any;\n  needsCleanup: boolean;\n  hasSecondYAxis: any;\n\n  constructor(private panelCtrl: PanelCtrl) {}\n\n  getHandleHtml(handleIndex: any, model: { colorMode: string }, valueStr: any) {\n    let stateClass = model.colorMode;\n    if (model.colorMode === 'custom') {\n      stateClass = 'critical';\n    }\n\n    return `\n    <div class=\"alert-handle-wrapper alert-handle-wrapper--T${handleIndex}\">\n      <div class=\"alert-handle-line alert-handle-line--${stateClass}\">\n      </div>\n      <div class=\"alert-handle\" data-handle-index=\"${handleIndex}\">\n        <i class=\"icon-gf icon-gf-${stateClass} alert-state-${stateClass}\"></i>\n        <span class=\"alert-handle-value\">${valueStr}<i class=\"alert-handle-grip\"></i></span>\n      </div>\n    </div>`;\n  }\n\n  initDragging(evt: any) {\n    const handleElem = $(evt.currentTarget).parents('.alert-handle-wrapper');\n    const handleIndex = $(evt.currentTarget).data('handleIndex');\n\n    let lastY: number | null = null;\n    let posTop: number;\n    const plot = this.plot;\n    const panelCtrl = this.panelCtrl;\n    const model = this.thresholds[handleIndex];\n\n    function dragging(evt: any) {\n      if (lastY === null) {\n        lastY = evt.clientY;\n      } else {\n        const diff = evt.clientY - lastY;\n        posTop = posTop + diff;\n        lastY = evt.clientY;\n        handleElem.css({ top: posTop + diff });\n      }\n    }\n\n    function stopped() {\n      // calculate graph level\n      let graphValue = plot.c2p({ left: 0, top: posTop }).y;\n      graphValue = parseInt(graphValue.toFixed(0), 10);\n      model.value = graphValue;\n\n      handleElem.off('mousemove', dragging);\n      handleElem.off('mouseup', dragging);\n      handleElem.off('mouseleave', dragging);\n\n      // trigger digest and render\n      panelCtrl.$scope.$apply(() => {\n        panelCtrl.render();\n        panelCtrl.events.emit('threshold-changed', {\n          threshold: model,\n          handleIndex: handleIndex,\n        });\n      });\n    }\n\n    lastY = null;\n    posTop = handleElem.position().top;\n\n    handleElem.on('mousemove', dragging);\n    handleElem.on('mouseup', stopped);\n    handleElem.on('mouseleave', stopped);\n  }\n\n  cleanUp() {\n    this.placeholder.find('.alert-handle-wrapper').remove();\n    this.needsCleanup = false;\n  }\n\n  renderHandle(handleIndex: number, defaultHandleTopPos: number) {\n    const model = this.thresholds[handleIndex];\n    const value = model.value;\n    let valueStr = value;\n    let handleTopPos = 0;\n\n    // handle no value\n    if (!_.isNumber(value)) {\n      valueStr = '';\n      handleTopPos = defaultHandleTopPos;\n    } else {\n      const valueCanvasPos = this.plot.p2c({ x: 0, y: value });\n      handleTopPos = Math.round(Math.min(Math.max(valueCanvasPos.top, 0), this.height) - 6);\n    }\n\n    const handleElem = $(this.getHandleHtml(handleIndex, model, valueStr));\n    this.placeholder.append(handleElem);\n\n    handleElem.toggleClass('alert-handle-wrapper--no-value', valueStr === '');\n    handleElem.css({ top: handleTopPos });\n  }\n\n  shouldDrawHandles() {\n    // @ts-ignore\n    return !this.hasSecondYAxis && this.panelCtrl.editingThresholds && this.panelCtrl.panel.thresholds.length > 0;\n  }\n\n  prepare(elem: JQuery, data: any[]) {\n    this.hasSecondYAxis = false;\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].yaxis > 1) {\n        this.hasSecondYAxis = true;\n        break;\n      }\n    }\n\n    if (this.shouldDrawHandles()) {\n      const thresholdMargin = this.panelCtrl.panel.thresholds.length > 1 ? '220px' : '110px';\n      elem.css('margin-right', thresholdMargin);\n    } else if (this.needsCleanup) {\n      elem.css('margin-right', '0');\n    }\n  }\n\n  draw(plot: any) {\n    this.thresholds = this.panelCtrl.panel.thresholds;\n    this.plot = plot;\n    this.placeholder = plot.getPlaceholder();\n\n    if (this.needsCleanup) {\n      this.cleanUp();\n    }\n\n    if (!this.shouldDrawHandles()) {\n      return;\n    }\n\n    this.height = plot.height();\n\n    if (this.thresholds.length > 0) {\n      this.renderHandle(0, 10);\n    }\n    if (this.thresholds.length > 1) {\n      this.renderHandle(1, this.height - 30);\n    }\n\n    this.placeholder.off('mousedown', '.alert-handle');\n    this.placeholder.on('mousedown', '.alert-handle', this.initDragging.bind(this));\n    this.needsCleanup = true;\n  }\n\n  addFlotOptions(options: any, panel: any) {\n    if (!panel.thresholds || panel.thresholds.length === 0) {\n      return;\n    }\n\n    let gtLimit = Infinity;\n    let ltLimit = -Infinity;\n    let i, threshold, other;\n\n    for (i = 0; i < panel.thresholds.length; i++) {\n      threshold = panel.thresholds[i];\n      if (!_.isNumber(threshold.value)) {\n        continue;\n      }\n\n      let limit;\n      switch (threshold.op) {\n        case 'gt': {\n          limit = gtLimit;\n          // if next threshold is less then op and greater value, then use that as limit\n          if (panel.thresholds.length > i + 1) {\n            other = panel.thresholds[i + 1];\n            if (other.value > threshold.value) {\n              limit = other.value;\n              ltLimit = limit;\n            }\n          }\n          break;\n        }\n        case 'lt': {\n          limit = ltLimit;\n          // if next threshold is less then op and greater value, then use that as limit\n          if (panel.thresholds.length > i + 1) {\n            other = panel.thresholds[i + 1];\n            if (other.value < threshold.value) {\n              limit = other.value;\n              gtLimit = limit;\n            }\n          }\n          break;\n        }\n      }\n\n      let fillColor, lineColor;\n\n      switch (threshold.colorMode) {\n        case 'critical': {\n          fillColor = 'rgba(234, 112, 112, 0.12)';\n          lineColor = 'rgba(237, 46, 24, 0.60)';\n          break;\n        }\n        case 'warning': {\n          fillColor = 'rgba(235, 138, 14, 0.12)';\n          lineColor = 'rgba(247, 149, 32, 0.60)';\n          break;\n        }\n        case 'ok': {\n          fillColor = 'rgba(11, 237, 50, 0.090)';\n          lineColor = 'rgba(6,163,69, 0.60)';\n          break;\n        }\n        case 'custom': {\n          fillColor = threshold.fillColor;\n          lineColor = threshold.lineColor;\n          break;\n        }\n      }\n\n      // fill\n      if (threshold.fill) {\n        if (threshold.yaxis === 'right' && this.hasSecondYAxis) {\n          options.grid.markings.push({\n            y2axis: { from: threshold.value, to: limit },\n            color: getColorFromHexRgbOrName(fillColor),\n          });\n        } else {\n          options.grid.markings.push({\n            yaxis: { from: threshold.value, to: limit },\n            color: getColorFromHexRgbOrName(fillColor),\n          });\n        }\n      }\n      if (threshold.line) {\n        if (threshold.yaxis === 'right' && this.hasSecondYAxis) {\n          options.grid.markings.push({\n            y2axis: { from: threshold.value, to: threshold.value },\n            color: getColorFromHexRgbOrName(lineColor),\n          });\n        } else {\n          options.grid.markings.push({\n            yaxis: { from: threshold.value, to: threshold.value },\n            color: getColorFromHexRgbOrName(lineColor),\n          });\n        }\n      }\n    }\n  }\n}\n","import 'vendor/flot/jquery.flot';\nimport _ from 'lodash';\nimport { GrafanaThemeType, getColorFromHexRgbOrName } from '@grafana/ui';\nimport { dateTime, DateTime, AbsoluteTimeRange } from '@grafana/data';\n\ntype TimeRegionColorDefinition = {\n  fill: string | null;\n  line: string | null;\n};\n\nexport const colorModes: any = {\n  gray: {\n    themeDependent: true,\n    title: 'Gray',\n    darkColor: { fill: 'rgba(255, 255, 255, 0.09)', line: 'rgba(255, 255, 255, 0.2)' },\n    lightColor: { fill: 'rgba(0, 0, 0, 0.09)', line: 'rgba(0, 0, 0, 0.2)' },\n  },\n  red: {\n    title: 'Red',\n    color: { fill: 'rgba(234, 112, 112, 0.12)', line: 'rgba(237, 46, 24, 0.60)' },\n  },\n  green: {\n    title: 'Green',\n    color: { fill: 'rgba(11, 237, 50, 0.090)', line: 'rgba(6,163,69, 0.60)' },\n  },\n  blue: {\n    title: 'Blue',\n    color: { fill: 'rgba(11, 125, 238, 0.12)', line: 'rgba(11, 125, 238, 0.60)' },\n  },\n  yellow: {\n    title: 'Yellow',\n    color: { fill: 'rgba(235, 138, 14, 0.12)', line: 'rgba(247, 149, 32, 0.60)' },\n  },\n  custom: { title: 'Custom' },\n};\n\nexport function getColorModes() {\n  return _.map(Object.keys(colorModes), key => {\n    return {\n      key,\n      value: colorModes[key].title,\n    };\n  });\n}\n\nfunction getColor(timeRegion: any, theme: GrafanaThemeType): TimeRegionColorDefinition {\n  if (Object.keys(colorModes).indexOf(timeRegion.colorMode) === -1) {\n    timeRegion.colorMode = 'red';\n  }\n\n  if (timeRegion.colorMode === 'custom') {\n    return {\n      fill: timeRegion.fill && timeRegion.fillColor ? getColorFromHexRgbOrName(timeRegion.fillColor, theme) : null,\n      line: timeRegion.line && timeRegion.lineColor ? getColorFromHexRgbOrName(timeRegion.lineColor, theme) : null,\n    };\n  }\n\n  const colorMode = colorModes[timeRegion.colorMode];\n\n  if (colorMode.themeDependent === true) {\n    return theme === GrafanaThemeType.Light ? colorMode.lightColor : colorMode.darkColor;\n  }\n\n  return {\n    fill: timeRegion.fill ? getColorFromHexRgbOrName(colorMode.color.fill, theme) : null,\n    line: timeRegion.fill ? getColorFromHexRgbOrName(colorMode.color.line, theme) : null,\n  };\n}\n\nexport class TimeRegionManager {\n  plot: any;\n  timeRegions: any;\n\n  constructor(private panelCtrl: any, private theme: GrafanaThemeType = GrafanaThemeType.Dark) {}\n\n  draw(plot: any) {\n    this.timeRegions = this.panelCtrl.panel.timeRegions;\n    this.plot = plot;\n  }\n\n  addFlotOptions(options: any, panel: any) {\n    if (!panel.timeRegions || panel.timeRegions.length === 0) {\n      return;\n    }\n\n    const tRange = {\n      from: dateTime(this.panelCtrl.range.from).utc(),\n      to: dateTime(this.panelCtrl.range.to).utc(),\n    };\n\n    let i: number,\n      hRange: { from: any; to: any },\n      timeRegion: any,\n      regions: AbsoluteTimeRange[],\n      fromStart: DateTime,\n      fromEnd: DateTime,\n      timeRegionColor: TimeRegionColorDefinition;\n\n    const timeRegionsCopy = panel.timeRegions.map((a: any) => ({ ...a }));\n\n    for (i = 0; i < timeRegionsCopy.length; i++) {\n      timeRegion = timeRegionsCopy[i];\n\n      if (!(timeRegion.fromDayOfWeek || timeRegion.from) && !(timeRegion.toDayOfWeek || timeRegion.to)) {\n        continue;\n      }\n\n      if (timeRegion.from && !timeRegion.to) {\n        timeRegion.to = timeRegion.from;\n      }\n\n      if (!timeRegion.from && timeRegion.to) {\n        timeRegion.from = timeRegion.to;\n      }\n\n      hRange = {\n        from: this.parseTimeRange(timeRegion.from),\n        to: this.parseTimeRange(timeRegion.to),\n      };\n\n      if (!timeRegion.fromDayOfWeek && timeRegion.toDayOfWeek) {\n        timeRegion.fromDayOfWeek = timeRegion.toDayOfWeek;\n      }\n\n      if (!timeRegion.toDayOfWeek && timeRegion.fromDayOfWeek) {\n        timeRegion.toDayOfWeek = timeRegion.fromDayOfWeek;\n      }\n\n      if (timeRegion.fromDayOfWeek) {\n        hRange.from.dayOfWeek = Number(timeRegion.fromDayOfWeek);\n      }\n\n      if (timeRegion.toDayOfWeek) {\n        hRange.to.dayOfWeek = Number(timeRegion.toDayOfWeek);\n      }\n\n      if (hRange.from.dayOfWeek && hRange.from.h === null && hRange.from.m === null) {\n        hRange.from.h = 0;\n        hRange.from.m = 0;\n        hRange.from.s = 0;\n      }\n\n      if (hRange.to.dayOfWeek && hRange.to.h === null && hRange.to.m === null) {\n        hRange.to.h = 23;\n        hRange.to.m = 59;\n        hRange.to.s = 59;\n      }\n\n      if (!hRange.from || !hRange.to) {\n        continue;\n      }\n\n      regions = [];\n\n      fromStart = dateTime(tRange.from);\n      fromStart.set('hour', 0);\n      fromStart.set('minute', 0);\n      fromStart.set('second', 0);\n      fromStart.add(hRange.from.h, 'hours');\n      fromStart.add(hRange.from.m, 'minutes');\n      fromStart.add(hRange.from.s, 'seconds');\n\n      while (fromStart.unix() <= tRange.to.unix()) {\n        while (hRange.from.dayOfWeek && hRange.from.dayOfWeek !== fromStart.isoWeekday()) {\n          fromStart.add(24, 'hours');\n        }\n\n        if (fromStart.unix() > tRange.to.unix()) {\n          break;\n        }\n\n        fromEnd = dateTime(fromStart);\n\n        if (hRange.from.h <= hRange.to.h) {\n          fromEnd.add(hRange.to.h - hRange.from.h, 'hours');\n        } else if (hRange.from.h > hRange.to.h) {\n          while (fromEnd.hour() !== hRange.to.h) {\n            fromEnd.add(1, 'hours');\n          }\n        } else {\n          fromEnd.add(24 - hRange.from.h, 'hours');\n\n          while (fromEnd.hour() !== hRange.to.h) {\n            fromEnd.add(1, 'hours');\n          }\n        }\n\n        fromEnd.set('minute', hRange.to.m);\n        fromEnd.set('second', hRange.to.s);\n\n        while (hRange.to.dayOfWeek && hRange.to.dayOfWeek !== fromEnd.isoWeekday()) {\n          fromEnd.add(24, 'hours');\n        }\n\n        const outsideRange =\n          (fromStart.unix() < tRange.from.unix() && fromEnd.unix() < tRange.from.unix()) ||\n          (fromStart.unix() > tRange.to.unix() && fromEnd.unix() > tRange.to.unix());\n\n        if (!outsideRange) {\n          regions.push({ from: fromStart.valueOf(), to: fromEnd.valueOf() });\n        }\n\n        fromStart.add(24, 'hours');\n      }\n\n      timeRegionColor = getColor(timeRegion, this.theme);\n\n      for (let j = 0; j < regions.length; j++) {\n        const r = regions[j];\n        if (timeRegion.fill) {\n          options.grid.markings.push({\n            xaxis: { from: r.from, to: r.to },\n            color: timeRegionColor.fill,\n          });\n        }\n\n        if (timeRegion.line) {\n          options.grid.markings.push({\n            xaxis: { from: r.from, to: r.from },\n            color: timeRegionColor.line,\n          });\n          options.grid.markings.push({\n            xaxis: { from: r.to, to: r.to },\n            color: timeRegionColor.line,\n          });\n        }\n      }\n    }\n  }\n\n  parseTimeRange(str: string) {\n    const timeRegex = /^([\\d]+):?(\\d{2})?/;\n    const result: any = { h: null, m: null };\n    const match = timeRegex.exec(str);\n\n    if (!match) {\n      return result;\n    }\n\n    if (match.length > 1) {\n      result.h = Number(match[1]);\n      result.m = 0;\n\n      if (match.length > 2 && match[2] !== undefined) {\n        result.m = Number(match[2]);\n      }\n\n      if (result.h > 23) {\n        result.h = 23;\n      }\n\n      if (result.m > 59) {\n        result.m = 59;\n      }\n    }\n\n    return result;\n  }\n}\n","import _ from 'lodash';\nimport TimeSeries from 'app/core/time_series2';\n\n/**\n * Convert series into array of series values.\n * @param data Array of series\n */\nexport function getSeriesValues(dataList: TimeSeries[]): number[] {\n  const VALUE_INDEX = 0;\n  const values = [];\n\n  // Count histogam stats\n  for (let i = 0; i < dataList.length; i++) {\n    const series = dataList[i];\n    const datapoints = series.datapoints;\n    for (let j = 0; j < datapoints.length; j++) {\n      if (datapoints[j][VALUE_INDEX] !== null) {\n        values.push(datapoints[j][VALUE_INDEX]);\n      }\n    }\n  }\n\n  return values;\n}\n\n/**\n * Convert array of values into timeseries-like histogram:\n * [[val_1, count_1], [val_2, count_2], ..., [val_n, count_n]]\n * @param values\n * @param bucketSize\n */\nexport function convertValuesToHistogram(values: number[], bucketSize: number, min: number, max: number): any[] {\n  const histogram: any = {};\n\n  const minBound = getBucketBound(min, bucketSize);\n  const maxBound = getBucketBound(max, bucketSize);\n  let bound = minBound;\n  let n = 0;\n  while (bound <= maxBound) {\n    histogram[bound] = 0;\n    bound = minBound + bucketSize * n;\n    n++;\n  }\n\n  for (let i = 0; i < values.length; i++) {\n    // filter out values outside the min and max boundaries\n    if (values[i] < min || values[i] > max) {\n      continue;\n    }\n    const bound = getBucketBound(values[i], bucketSize);\n    histogram[bound] = histogram[bound] + 1;\n  }\n\n  const histogamSeries = _.map(histogram, (count, bound) => {\n    return [Number(bound), count];\n  });\n\n  // Sort by Y axis values\n  return _.sortBy(histogamSeries, point => point[0]);\n}\n\n/**\n * Convert series into array of histogram data.\n * @param data Array of series\n * @param bucketSize\n */\nexport function convertToHistogramData(\n  data: any,\n  bucketSize: number,\n  hiddenSeries: any,\n  min: number,\n  max: number\n): any[] {\n  return data.map((series: any) => {\n    const values = getSeriesValues([series]);\n    series.histogram = true;\n    if (!hiddenSeries[series.alias]) {\n      const histogram = convertValuesToHistogram(values, bucketSize, min, max);\n      series.data = histogram;\n    } else {\n      series.data = [];\n    }\n    return series;\n  });\n}\n\nfunction getBucketBound(value: number, bucketSize: number): number {\n  return Math.floor(value / bucketSize) * bucketSize;\n}\n","import _ from 'lodash';\n\n/**\n * To align two Y axes by Y level\n * @param yAxes data [{min: min_y1, min: max_y1}, {min: min_y2, max: max_y2}]\n * @param level Y level\n */\nexport function alignYLevel(yAxes: any, level: any) {\n  if (isNaN(level) || !checkCorrectAxis(yAxes)) {\n    return;\n  }\n\n  const [yLeft, yRight] = yAxes;\n  moveLevelToZero(yLeft, yRight, level);\n\n  expandStuckValues(yLeft, yRight);\n\n  // one of graphs on zero\n  const zero = yLeft.min === 0 || yRight.min === 0 || yLeft.max === 0 || yRight.max === 0;\n\n  const oneSide = checkOneSide(yLeft, yRight);\n\n  if (zero && oneSide) {\n    yLeft.min = yLeft.max > 0 ? 0 : yLeft.min;\n    yLeft.max = yLeft.max > 0 ? yLeft.max : 0;\n    yRight.min = yRight.max > 0 ? 0 : yRight.min;\n    yRight.max = yRight.max > 0 ? yRight.max : 0;\n  } else {\n    if (checkOppositeSides(yLeft, yRight)) {\n      if (yLeft.min >= 0) {\n        yLeft.min = -yLeft.max;\n        yRight.max = -yRight.min;\n      } else {\n        yLeft.max = -yLeft.min;\n        yRight.min = -yRight.max;\n      }\n    } else {\n      const rate = getRate(yLeft, yRight);\n\n      if (oneSide) {\n        // all graphs above the Y level\n        if (yLeft.min > 0) {\n          yLeft.min = yLeft.max / rate;\n          yRight.min = yRight.max / rate;\n        } else {\n          yLeft.max = yLeft.min / rate;\n          yRight.max = yRight.min / rate;\n        }\n      } else {\n        if (checkTwoCross(yLeft, yRight)) {\n          yLeft.min = yRight.min ? yRight.min * rate : yLeft.min;\n          yRight.min = yLeft.min ? yLeft.min / rate : yRight.min;\n          yLeft.max = yRight.max ? yRight.max * rate : yLeft.max;\n          yRight.max = yLeft.max ? yLeft.max / rate : yRight.max;\n        } else {\n          yLeft.min = yLeft.min > 0 ? yRight.min * rate : yLeft.min;\n          yRight.min = yRight.min > 0 ? yLeft.min / rate : yRight.min;\n          yLeft.max = yLeft.max < 0 ? yRight.max * rate : yLeft.max;\n          yRight.max = yRight.max < 0 ? yLeft.max / rate : yRight.max;\n        }\n      }\n    }\n  }\n\n  restoreLevelFromZero(yLeft, yRight, level);\n}\n\nfunction expandStuckValues(yLeft: { max: number; min: number }, yRight: { max: number; min: number }) {\n  // wide Y min and max using increased wideFactor\n  const wideFactor = 0.25;\n  if (yLeft.max === yLeft.min) {\n    yLeft.min -= wideFactor;\n    yLeft.max += wideFactor;\n  }\n  if (yRight.max === yRight.min) {\n    yRight.min -= wideFactor;\n    yRight.max += wideFactor;\n  }\n}\n\nfunction moveLevelToZero(yLeft: { min: number; max: number }, yRight: { min: number; max: number }, level: number) {\n  if (level !== 0) {\n    yLeft.min -= level;\n    yLeft.max -= level;\n    yRight.min -= level;\n    yRight.max -= level;\n  }\n}\n\nfunction restoreLevelFromZero(\n  yLeft: { min: number; max: number },\n  yRight: { min: number; max: number },\n  level: number\n) {\n  if (level !== 0) {\n    yLeft.min += level;\n    yLeft.max += level;\n    yRight.min += level;\n    yRight.max += level;\n  }\n}\n\ninterface AxisSide {\n  max: number;\n  min: number;\n}\n\nfunction checkCorrectAxis(axis: any[]) {\n  return axis.length === 2 && checkCorrectAxes(axis[0]) && checkCorrectAxes(axis[1]);\n}\n\nfunction checkCorrectAxes(axes: any) {\n  return 'min' in axes && 'max' in axes;\n}\n\nfunction checkOneSide(yLeft: AxisSide, yRight: AxisSide) {\n  // on the one hand with respect to zero\n  return (yLeft.min >= 0 && yRight.min >= 0) || (yLeft.max <= 0 && yRight.max <= 0);\n}\n\nfunction checkTwoCross(yLeft: AxisSide, yRight: AxisSide) {\n  // both across zero\n  return yLeft.min <= 0 && yLeft.max >= 0 && yRight.min <= 0 && yRight.max >= 0;\n}\n\nfunction checkOppositeSides(yLeft: AxisSide, yRight: AxisSide) {\n  // on the opposite sides with respect to zero\n  return (yLeft.min >= 0 && yRight.max <= 0) || (yLeft.max <= 0 && yRight.min >= 0);\n}\n\nfunction getRate(yLeft: AxisSide, yRight: AxisSide) {\n  let rateLeft, rateRight, rate;\n  if (checkTwoCross(yLeft, yRight)) {\n    rateLeft = yRight.min ? yLeft.min / yRight.min : 0;\n    rateRight = yRight.max ? yLeft.max / yRight.max : 0;\n  } else {\n    if (checkOneSide(yLeft, yRight)) {\n      const absLeftMin = Math.abs(yLeft.min);\n      const absLeftMax = Math.abs(yLeft.max);\n      const absRightMin = Math.abs(yRight.min);\n      const absRightMax = Math.abs(yRight.max);\n      const upLeft = _.max([absLeftMin, absLeftMax]);\n      const downLeft = _.min([absLeftMin, absLeftMax]);\n      const upRight = _.max([absRightMin, absRightMax]);\n      const downRight = _.min([absRightMin, absRightMax]);\n\n      rateLeft = downLeft ? upLeft / downLeft : upLeft;\n      rateRight = downRight ? upRight / downRight : upRight;\n    } else {\n      if (yLeft.min > 0 || yRight.min > 0) {\n        rateLeft = yLeft.max / yRight.max;\n        rateRight = 0;\n      } else {\n        rateLeft = 0;\n        rateRight = yLeft.min / yRight.min;\n      }\n    }\n  }\n\n  rate = rateLeft > rateRight ? rateLeft : rateRight;\n\n  return rate;\n}\n","import React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport { TimeSeries } from 'app/core/core';\nimport { SeriesColorPicker } from '@grafana/ui';\n\nexport const LEGEND_STATS = ['min', 'max', 'avg', 'current', 'total'];\n\nexport interface LegendLabelProps {\n  series: TimeSeries;\n  asTable?: boolean;\n  hidden?: boolean;\n  onLabelClick: (series: any, event: any) => void;\n  onColorChange: (series: any, color: string) => void;\n  onToggleAxis: (series: any) => void;\n}\n\nexport interface LegendValuesProps {\n  values?: boolean;\n  min?: boolean;\n  max?: boolean;\n  avg?: boolean;\n  current?: boolean;\n  total?: boolean;\n}\n\ntype LegendItemProps = LegendLabelProps & LegendValuesProps;\n\ninterface LegendItemState {\n  yaxis: number;\n}\n\nexport class LegendItem extends PureComponent<LegendItemProps, LegendItemState> {\n  static defaultProps = {\n    asTable: false,\n    hidden: false,\n    onLabelClick: () => {},\n    onColorChange: () => {},\n    onToggleAxis: () => {},\n  };\n\n  constructor(props: LegendItemProps) {\n    super(props);\n    this.state = {\n      yaxis: this.props.series.yaxis,\n    };\n  }\n\n  onLabelClick = (e: any) => this.props.onLabelClick(this.props.series, e);\n\n  onToggleAxis = () => {\n    const yaxis = this.state.yaxis === 2 ? 1 : 2;\n    const info = { alias: this.props.series.alias, yaxis: yaxis };\n    this.setState({ yaxis: yaxis });\n    this.props.onToggleAxis(info);\n  };\n\n  onColorChange = (color: string) => {\n    this.props.onColorChange(this.props.series, color);\n    // Because of PureComponent nature it makes only shallow props comparison and changing of series.color doesn't run\n    // component re-render. In this case we can't rely on color, selected by user, because it may be overwritten\n    // by series overrides. So we need to use forceUpdate() to make sure we have proper series color.\n    this.forceUpdate();\n  };\n\n  renderLegendValues() {\n    const { series, asTable } = this.props;\n    const legendValueItems = [];\n    for (const valueName of LEGEND_STATS) {\n      // @ts-ignore\n      if (this.props[valueName]) {\n        const valueFormatted = series.formatValue(series.stats[valueName]);\n        legendValueItems.push(\n          <LegendValue key={valueName} valueName={valueName} value={valueFormatted} asTable={asTable} />\n        );\n      }\n    }\n    return legendValueItems;\n  }\n\n  render() {\n    const { series, values, asTable, hidden } = this.props;\n    const seriesOptionClasses = classNames({\n      'graph-legend-series-hidden': hidden,\n      'graph-legend-series--right-y': series.yaxis === 2,\n    });\n    const valueItems = values ? this.renderLegendValues() : [];\n    const seriesLabel = (\n      <LegendSeriesLabel\n        label={series.alias}\n        color={series.color}\n        yaxis={this.state.yaxis}\n        onLabelClick={this.onLabelClick}\n        onColorChange={this.onColorChange}\n        onToggleAxis={this.onToggleAxis}\n      />\n    );\n\n    if (asTable) {\n      return (\n        <tr className={`graph-legend-series ${seriesOptionClasses}`}>\n          <td>{seriesLabel}</td>\n          {valueItems}\n        </tr>\n      );\n    } else {\n      return (\n        <div className={`graph-legend-series ${seriesOptionClasses}`}>\n          {seriesLabel}\n          {valueItems}\n        </div>\n      );\n    }\n  }\n}\n\ninterface LegendSeriesLabelProps {\n  label: string;\n  color: string;\n  yaxis?: number;\n  onLabelClick?: (event: any) => void;\n}\n\nclass LegendSeriesLabel extends PureComponent<LegendSeriesLabelProps & LegendSeriesIconProps> {\n  static defaultProps: Partial<LegendSeriesLabelProps> = {\n    yaxis: undefined,\n    onLabelClick: () => {},\n  };\n\n  render() {\n    const { label, color, yaxis } = this.props;\n    const { onColorChange, onToggleAxis } = this.props;\n    return [\n      <LegendSeriesIcon\n        key=\"icon\"\n        color={color}\n        yaxis={yaxis}\n        onColorChange={onColorChange}\n        onToggleAxis={onToggleAxis}\n      />,\n      <a className=\"graph-legend-alias pointer\" title={label} key=\"label\" onClick={e => this.props.onLabelClick(e)}>\n        {label}\n      </a>,\n    ];\n  }\n}\n\ninterface LegendSeriesIconProps {\n  color: string;\n  yaxis?: number;\n  onColorChange?: (color: string) => void;\n  onToggleAxis?: () => void;\n}\n\ninterface LegendSeriesIconState {\n  color: string;\n}\n\nfunction SeriesIcon({ color }: { color: string }) {\n  return <i className=\"fa fa-minus pointer\" style={{ color }} />;\n}\n\nclass LegendSeriesIcon extends PureComponent<LegendSeriesIconProps, LegendSeriesIconState> {\n  static defaultProps: Partial<LegendSeriesIconProps> = {\n    yaxis: undefined,\n    onColorChange: () => {},\n    onToggleAxis: () => {},\n  };\n\n  render() {\n    return (\n      <SeriesColorPicker\n        yaxis={this.props.yaxis}\n        color={this.props.color}\n        onChange={this.props.onColorChange}\n        onToggleAxis={this.props.onToggleAxis}\n        enableNamedColors\n      >\n        {({ ref, showColorPicker, hideColorPicker }) => (\n          <span ref={ref} onClick={showColorPicker} onMouseLeave={hideColorPicker} className=\"graph-legend-icon\">\n            <SeriesIcon color={this.props.color} />\n          </span>\n        )}\n      </SeriesColorPicker>\n    );\n  }\n}\n\ninterface LegendValueProps {\n  value: string;\n  valueName: string;\n  asTable?: boolean;\n}\n\nfunction LegendValue(props: LegendValueProps) {\n  const value = props.value;\n  const valueName = props.valueName;\n  if (props.asTable) {\n    return <td className={`graph-legend-value ${valueName}`}>{value}</td>;\n  }\n  return <div className={`graph-legend-value ${valueName}`}>{value}</div>;\n}\n","import _ from 'lodash';\nimport React, { PureComponent } from 'react';\nimport { TimeSeries } from 'app/core/core';\nimport { CustomScrollbar } from '@grafana/ui';\nimport { LegendItem, LEGEND_STATS } from './LegendSeriesItem';\n\ntype Sort = 'min' | 'max' | 'avg' | 'current' | 'total';\ninterface LegendProps {\n  seriesList: TimeSeries[];\n  optionalClass?: string;\n}\n\ninterface LegendEventHandlers {\n  onToggleSeries?: (hiddenSeries: any) => void;\n  onToggleSort?: (sortBy: any, sortDesc: any) => void;\n  onToggleAxis?: (series: TimeSeries) => void;\n  onColorChange?: (series: TimeSeries, color: string) => void;\n}\n\ninterface LegendComponentEventHandlers {\n  onToggleSeries?: (series: TimeSeries, event: any) => void;\n  onToggleSort?: (sortBy: Sort, sortDesc: any) => void;\n  onToggleAxis?: (series: TimeSeries) => void;\n  onColorChange?: (series: TimeSeries, color: string) => void;\n}\n\ninterface LegendDisplayProps {\n  hiddenSeries: any;\n  hideEmpty?: boolean;\n  hideZero?: boolean;\n  alignAsTable?: boolean;\n  rightSide?: boolean;\n  sideWidth?: number;\n}\n\ninterface LegendValuesProps {\n  values?: boolean;\n  min?: boolean;\n  max?: boolean;\n  avg?: boolean;\n  current?: boolean;\n  total?: boolean;\n}\n\ninterface LegendSortProps {\n  sort?: Sort;\n  sortDesc?: boolean;\n}\n\nexport type GraphLegendProps = LegendProps &\n  LegendDisplayProps &\n  LegendValuesProps &\n  LegendSortProps &\n  LegendEventHandlers;\nexport type LegendComponentProps = LegendProps &\n  LegendDisplayProps &\n  LegendValuesProps &\n  LegendSortProps &\n  LegendComponentEventHandlers;\n\ninterface LegendState {\n  hiddenSeries: { [seriesAlias: string]: boolean };\n}\n\nexport class GraphLegend extends PureComponent<GraphLegendProps, LegendState> {\n  static defaultProps: Partial<GraphLegendProps> = {\n    values: false,\n    min: false,\n    max: false,\n    avg: false,\n    current: false,\n    total: false,\n    alignAsTable: false,\n    rightSide: false,\n    sort: undefined,\n    sortDesc: false,\n    optionalClass: '',\n    onToggleSeries: () => {},\n    onToggleSort: () => {},\n    onToggleAxis: () => {},\n    onColorChange: () => {},\n  };\n\n  constructor(props: GraphLegendProps) {\n    super(props);\n    this.state = {\n      hiddenSeries: this.props.hiddenSeries,\n    };\n  }\n\n  sortLegend() {\n    let seriesList: TimeSeries[] = [...this.props.seriesList] || [];\n    if (this.props.sort && this.props[this.props.sort] && this.props.alignAsTable) {\n      seriesList = _.sortBy(seriesList, series => {\n        let sort = series.stats[this.props.sort];\n        if (sort === null) {\n          sort = -Infinity;\n        }\n        return sort;\n      }) as TimeSeries[];\n      if (this.props.sortDesc) {\n        seriesList = seriesList.reverse();\n      }\n    }\n    return seriesList;\n  }\n\n  onToggleSeries = (series: TimeSeries, event: any) => {\n    let hiddenSeries = { ...this.state.hiddenSeries };\n    if (event.ctrlKey || event.metaKey || event.shiftKey) {\n      if (hiddenSeries[series.alias]) {\n        delete hiddenSeries[series.alias];\n      } else {\n        hiddenSeries[series.alias] = true;\n      }\n    } else {\n      hiddenSeries = this.toggleSeriesExclusiveMode(series);\n    }\n    this.setState({ hiddenSeries: hiddenSeries });\n    this.props.onToggleSeries(hiddenSeries);\n  };\n\n  toggleSeriesExclusiveMode(series: TimeSeries) {\n    const hiddenSeries = { ...this.state.hiddenSeries };\n\n    if (hiddenSeries[series.alias]) {\n      delete hiddenSeries[series.alias];\n    }\n\n    // check if every other series is hidden\n    const alreadyExclusive = this.props.seriesList.every(value => {\n      if (value.alias === series.alias) {\n        return true;\n      }\n\n      return hiddenSeries[value.alias];\n    });\n\n    if (alreadyExclusive) {\n      // remove all hidden series\n      this.props.seriesList.forEach(value => {\n        delete hiddenSeries[value.alias];\n      });\n    } else {\n      // hide all but this serie\n      this.props.seriesList.forEach(value => {\n        if (value.alias === series.alias) {\n          return;\n        }\n\n        hiddenSeries[value.alias] = true;\n      });\n    }\n\n    return hiddenSeries;\n  }\n\n  render() {\n    const {\n      optionalClass,\n      rightSide,\n      sideWidth,\n      sort,\n      sortDesc,\n      hideEmpty,\n      hideZero,\n      values,\n      min,\n      max,\n      avg,\n      current,\n      total,\n    } = this.props;\n    const seriesValuesProps = { values, min, max, avg, current, total };\n    const hiddenSeries = this.state.hiddenSeries;\n    const seriesHideProps = { hideEmpty, hideZero };\n    const sortProps = { sort, sortDesc };\n    const seriesList = this.sortLegend().filter(series => !series.hideFromLegend(seriesHideProps));\n    const legendClass = `${this.props.alignAsTable ? 'graph-legend-table' : ''} ${optionalClass}`;\n\n    // Set min-width if side style and there is a value, otherwise remove the CSS property\n    // Set width so it works with IE11\n    const width: any = rightSide && sideWidth ? sideWidth : undefined;\n    const ieWidth: any = rightSide && sideWidth ? sideWidth - 1 : undefined;\n    const legendStyle: React.CSSProperties = {\n      minWidth: width,\n      width: ieWidth,\n    };\n\n    const legendProps: LegendComponentProps = {\n      seriesList: seriesList,\n      hiddenSeries: hiddenSeries,\n      onToggleSeries: this.onToggleSeries,\n      onToggleAxis: this.props.onToggleAxis,\n      onToggleSort: this.props.onToggleSort,\n      onColorChange: this.props.onColorChange,\n      ...seriesValuesProps,\n      ...sortProps,\n    };\n\n    return (\n      <div className={`graph-legend-content ${legendClass}`} style={legendStyle}>\n        {this.props.alignAsTable ? <LegendTable {...legendProps} /> : <LegendSeriesList {...legendProps} />}\n      </div>\n    );\n  }\n}\n\nclass LegendSeriesList extends PureComponent<LegendComponentProps> {\n  render() {\n    const { seriesList, hiddenSeries, values, min, max, avg, current, total } = this.props;\n    const seriesValuesProps = { values, min, max, avg, current, total };\n    return seriesList.map((series, i) => (\n      <LegendItem\n        // This trick required because TimeSeries.id is not unique (it's just TimeSeries.alias).\n        // In future would be good to make id unique across the series list.\n        key={`${series.id}-${i}`}\n        series={series}\n        hidden={hiddenSeries[series.alias]}\n        {...seriesValuesProps}\n        onLabelClick={this.props.onToggleSeries}\n        onColorChange={this.props.onColorChange}\n        onToggleAxis={this.props.onToggleAxis}\n      />\n    ));\n  }\n}\n\nclass LegendTable extends PureComponent<Partial<LegendComponentProps>> {\n  onToggleSort = (stat: Sort) => {\n    let sortDesc = this.props.sortDesc;\n    let sortBy = this.props.sort;\n    if (stat !== sortBy) {\n      sortDesc = null;\n    }\n\n    // if already sort ascending, disable sorting\n    if (sortDesc === false) {\n      sortBy = null;\n      sortDesc = null;\n    } else {\n      sortDesc = !sortDesc;\n      sortBy = stat;\n    }\n    this.props.onToggleSort(sortBy, sortDesc);\n  };\n\n  render() {\n    const seriesList = this.props.seriesList;\n    const { values, min, max, avg, current, total, sort, sortDesc, hiddenSeries } = this.props;\n    const seriesValuesProps: any = { values, min, max, avg, current, total };\n    return (\n      <table>\n        <colgroup>\n          <col style={{ width: '100%' }} />\n        </colgroup>\n        <thead>\n          <tr>\n            <th style={{ textAlign: 'left' }} />\n            {LEGEND_STATS.map(\n              statName =>\n                seriesValuesProps[statName] && (\n                  <LegendTableHeaderItem\n                    key={statName}\n                    statName={statName}\n                    sort={sort}\n                    sortDesc={sortDesc}\n                    onClick={this.onToggleSort}\n                  />\n                )\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {seriesList.map((series, i) => (\n            <LegendItem\n              key={`${series.id}-${i}`}\n              asTable={true}\n              series={series}\n              hidden={hiddenSeries[series.alias]}\n              onLabelClick={this.props.onToggleSeries}\n              onColorChange={this.props.onColorChange}\n              onToggleAxis={this.props.onToggleAxis}\n              {...seriesValuesProps}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\ninterface LegendTableHeaderProps {\n  statName: string;\n  onClick?: (statName: string) => void;\n}\n\nclass LegendTableHeaderItem extends PureComponent<LegendTableHeaderProps & LegendSortProps> {\n  onClick = () => this.props.onClick(this.props.statName);\n\n  render() {\n    const { statName, sort, sortDesc } = this.props;\n    return (\n      <th className=\"pointer\" onClick={this.onClick}>\n        {statName}\n        {sort === statName && <span className={sortDesc ? 'fa fa-caret-down' : 'fa fa-caret-up'} />}\n      </th>\n    );\n  }\n}\n\nexport class Legend extends PureComponent<GraphLegendProps> {\n  render() {\n    return (\n      <CustomScrollbar hideHorizontalTrack>\n        <GraphLegend {...this.props} />\n      </CustomScrollbar>\n    );\n  }\n}\n\nexport default Legend;\n","import 'vendor/flot/jquery.flot';\nimport 'vendor/flot/jquery.flot.selection';\nimport 'vendor/flot/jquery.flot.time';\nimport 'vendor/flot/jquery.flot.stack';\nimport 'vendor/flot/jquery.flot.stackpercent';\nimport 'vendor/flot/jquery.flot.fillbelow';\nimport 'vendor/flot/jquery.flot.crosshair';\nimport 'vendor/flot/jquery.flot.dashes';\nimport './jquery.flot.events';\n\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport { tickStep } from 'app/core/utils/ticks';\nimport { appEvents, coreModule, updateLegendValues } from 'app/core/core';\nimport GraphTooltip from './graph_tooltip';\nimport { ThresholdManager } from './threshold_manager';\nimport { TimeRegionManager } from './time_region_manager';\nimport { EventManager } from 'app/features/annotations/all';\nimport { convertToHistogramData } from './histogram';\nimport { alignYLevel } from './align_yaxes';\nimport config from 'app/core/config';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GraphLegendProps, Legend } from './Legend/Legend';\n\nimport { GraphCtrl } from './module';\nimport {\n  getValueFormat,\n  ContextMenuGroup,\n  FieldDisplay,\n  ContextMenuItem,\n  getDisplayProcessor,\n  getFlotPairsConstant,\n} from '@grafana/ui';\nimport { provideTheme, getCurrentTheme } from 'app/core/utils/ConfigProvider';\nimport { toUtc, LinkModelSupplier, DataFrameView } from '@grafana/data';\nimport { GraphContextMenuCtrl } from './GraphContextMenuCtrl';\nimport { TimeSrv } from 'app/features/dashboard/services/TimeSrv';\nimport { ContextSrv } from 'app/core/services/context_srv';\nimport { getFieldLinksSupplier } from 'app/features/panel/panellinks/linkSuppliers';\n\nconst LegendWithThemeProvider = provideTheme(Legend);\n\nclass GraphElement {\n  ctrl: GraphCtrl;\n  contextMenu: GraphContextMenuCtrl;\n  tooltip: any;\n  dashboard: any;\n  annotations: object[];\n  panel: any;\n  plot: any;\n  sortedSeries: any[];\n  data: any[];\n  panelWidth: number;\n  eventManager: EventManager;\n  thresholdManager: ThresholdManager;\n  timeRegionManager: TimeRegionManager;\n  legendElem: HTMLElement;\n\n  constructor(private scope: any, private elem: JQuery, private timeSrv: TimeSrv) {\n    this.ctrl = scope.ctrl;\n    this.contextMenu = scope.ctrl.contextMenuCtrl;\n    this.dashboard = this.ctrl.dashboard;\n    this.panel = this.ctrl.panel;\n    this.annotations = [];\n\n    this.panelWidth = 0;\n    this.eventManager = new EventManager(this.ctrl);\n    this.thresholdManager = new ThresholdManager(this.ctrl);\n    this.timeRegionManager = new TimeRegionManager(this.ctrl, config.theme.type);\n    // @ts-ignore\n    this.tooltip = new GraphTooltip(this.elem, this.ctrl.dashboard, this.scope, () => {\n      return this.sortedSeries;\n    });\n\n    // panel events\n    this.ctrl.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.ctrl.events.on('render', this.onRender.bind(this));\n\n    // global events\n    appEvents.on('graph-hover', this.onGraphHover.bind(this), scope);\n    appEvents.on('graph-hover-clear', this.onGraphHoverClear.bind(this), scope);\n    this.elem.bind('plotselected', this.onPlotSelected.bind(this));\n    this.elem.bind('plotclick', this.onPlotClick.bind(this));\n\n    // get graph legend element\n    if (this.elem && this.elem.parent) {\n      this.legendElem = this.elem.parent().find('.graph-legend')[0];\n    }\n  }\n\n  onRender(renderData: any[]) {\n    this.data = renderData || this.data;\n    if (!this.data) {\n      return;\n    }\n\n    this.annotations = this.ctrl.annotations || [];\n    this.buildFlotPairs(this.data);\n    const graphHeight = this.elem.height();\n    updateLegendValues(this.data, this.panel, graphHeight);\n\n    if (!this.panel.legend.show) {\n      if (this.legendElem.hasChildNodes()) {\n        ReactDOM.unmountComponentAtNode(this.legendElem);\n      }\n      this.renderPanel();\n      return;\n    }\n\n    const { values, min, max, avg, current, total } = this.panel.legend;\n    const { alignAsTable, rightSide, sideWidth, sort, sortDesc, hideEmpty, hideZero } = this.panel.legend;\n    const legendOptions = { alignAsTable, rightSide, sideWidth, sort, sortDesc, hideEmpty, hideZero };\n    const valueOptions = { values, min, max, avg, current, total };\n    const legendProps: GraphLegendProps = {\n      seriesList: this.data,\n      hiddenSeries: this.ctrl.hiddenSeries,\n      ...legendOptions,\n      ...valueOptions,\n      onToggleSeries: this.ctrl.onToggleSeries,\n      onToggleSort: this.ctrl.onToggleSort,\n      onColorChange: this.ctrl.onColorChange,\n      onToggleAxis: this.ctrl.onToggleAxis,\n    };\n\n    const legendReactElem = React.createElement(LegendWithThemeProvider, legendProps);\n    ReactDOM.render(legendReactElem, this.legendElem, () => this.renderPanel());\n  }\n\n  onGraphHover(evt: any) {\n    // ignore other graph hover events if shared tooltip is disabled\n    if (!this.dashboard.sharedTooltipModeEnabled()) {\n      return;\n    }\n\n    // ignore if we are the emitter\n    if (!this.plot || evt.panel.id === this.panel.id || this.ctrl.otherPanelInFullscreenMode()) {\n      return;\n    }\n\n    this.tooltip.show(evt.pos);\n  }\n\n  onPanelTeardown() {\n    if (this.plot) {\n      this.plot.destroy();\n      this.plot = null;\n    }\n\n    this.tooltip.destroy();\n    this.elem.off();\n    this.elem.remove();\n\n    ReactDOM.unmountComponentAtNode(this.legendElem);\n  }\n\n  onGraphHoverClear(event: any, info: any) {\n    if (this.plot) {\n      this.tooltip.clear(this.plot);\n    }\n  }\n\n  onPlotSelected(event: JQueryEventObject, ranges: any) {\n    if (this.panel.xaxis.mode !== 'time') {\n      // Skip if panel in histogram or series mode\n      this.plot.clearSelection();\n      return;\n    }\n\n    if ((ranges.ctrlKey || ranges.metaKey) && (this.dashboard.meta.canEdit || this.dashboard.meta.canMakeEditable)) {\n      // Add annotation\n      setTimeout(() => {\n        this.eventManager.updateTime(ranges.xaxis);\n      }, 100);\n    } else {\n      this.scope.$apply(() => {\n        this.timeSrv.setTime({\n          from: toUtc(ranges.xaxis.from),\n          to: toUtc(ranges.xaxis.to),\n        });\n      });\n    }\n  }\n\n  getContextMenuItemsSupplier = (\n    flotPosition: { x: number; y: number },\n    linksSupplier?: LinkModelSupplier<FieldDisplay>\n  ): (() => ContextMenuGroup[]) => {\n    return () => {\n      // Fixed context menu items\n      const items: ContextMenuGroup[] = [\n        {\n          items: [\n            {\n              label: 'Add annotation',\n              icon: 'gicon gicon-annotation',\n              onClick: () => this.eventManager.updateTime({ from: flotPosition.x, to: null }),\n            },\n          ],\n        },\n      ];\n\n      if (!linksSupplier) {\n        return items;\n      }\n\n      const dataLinks = [\n        {\n          items: linksSupplier.getLinks(this.panel.scopedVars).map<ContextMenuItem>(link => {\n            return {\n              label: link.title,\n              url: link.href,\n              target: link.target,\n              icon: `fa ${link.target === '_self' ? 'fa-link' : 'fa-external-link'}`,\n            };\n          }),\n        },\n      ];\n\n      return [...items, ...dataLinks];\n    };\n  };\n\n  onPlotClick(event: JQueryEventObject, pos: any, item: any) {\n    const scrollContextElement = this.elem.closest('.view') ? this.elem.closest('.view').get()[0] : null;\n    const contextMenuSourceItem = item;\n\n    if (this.panel.xaxis.mode !== 'time') {\n      // Skip if panel in histogram or series mode\n      return;\n    }\n\n    if ((pos.ctrlKey || pos.metaKey) && (this.dashboard.meta.canEdit || this.dashboard.meta.canMakeEditable)) {\n      // Skip if range selected (added in \"plotselected\" event handler)\n      if (pos.x !== pos.x1) {\n        return;\n      }\n      setTimeout(() => {\n        this.eventManager.updateTime({ from: pos.x, to: null });\n      }, 100);\n      return;\n    } else {\n      this.tooltip.clear(this.plot);\n      let linksSupplier: LinkModelSupplier<FieldDisplay>;\n\n      if (item) {\n        // pickup y-axis index to know which field's config to apply\n        const yAxisConfig = this.panel.yaxes[item.series.yaxis.n === 2 ? 1 : 0];\n        const fieldConfig = {\n          decimals: yAxisConfig.decimals,\n          links: this.panel.options.dataLinks || [],\n        };\n        const dataFrame = this.ctrl.dataList[item.series.dataFrameIndex];\n        const field = dataFrame.fields[item.series.fieldIndex];\n\n        const fieldDisplay = getDisplayProcessor({\n          config: fieldConfig,\n          theme: getCurrentTheme(),\n        })(field.values.get(item.dataIndex));\n\n        linksSupplier = this.panel.options.dataLinks\n          ? getFieldLinksSupplier({\n              display: fieldDisplay,\n              name: field.name,\n              view: new DataFrameView(dataFrame),\n              rowIndex: item.dataIndex,\n              colIndex: item.series.fieldIndex,\n              field: fieldConfig,\n            })\n          : undefined;\n      }\n\n      this.scope.$apply(() => {\n        // Setting nearest CustomScrollbar element as a scroll context for graph context menu\n        this.contextMenu.setScrollContextElement(scrollContextElement);\n        this.contextMenu.setSource(contextMenuSourceItem);\n        this.contextMenu.setMenuItemsSupplier(this.getContextMenuItemsSupplier(pos, linksSupplier) as any);\n        this.contextMenu.toggleMenu(pos);\n      });\n    }\n  }\n\n  shouldAbortRender() {\n    if (!this.data) {\n      return true;\n    }\n\n    if (this.panelWidth === 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  drawHook(plot: any) {\n    // add left axis labels\n    if (this.panel.yaxes[0].label && this.panel.yaxes[0].show) {\n      $(\"<div class='axisLabel left-yaxis-label flot-temp-elem'></div>\")\n        .text(this.panel.yaxes[0].label)\n        .appendTo(this.elem);\n    }\n\n    // add right axis labels\n    if (this.panel.yaxes[1].label && this.panel.yaxes[1].show) {\n      $(\"<div class='axisLabel right-yaxis-label flot-temp-elem'></div>\")\n        .text(this.panel.yaxes[1].label)\n        .appendTo(this.elem);\n    }\n\n    if (this.ctrl.dataWarning) {\n      $(`<div class=\"datapoints-warning flot-temp-elem\">${this.ctrl.dataWarning.title}</div>`).appendTo(this.elem);\n    }\n\n    this.thresholdManager.draw(plot);\n    this.timeRegionManager.draw(plot);\n  }\n\n  processOffsetHook(plot: any, gridMargin: { left: number; right: number }) {\n    const left = this.panel.yaxes[0];\n    const right = this.panel.yaxes[1];\n    if (left.show && left.label) {\n      gridMargin.left = 20;\n    }\n    if (right.show && right.label) {\n      gridMargin.right = 20;\n    }\n\n    // apply y-axis min/max options\n    const yaxis = plot.getYAxes();\n    for (let i = 0; i < yaxis.length; i++) {\n      const axis: any = yaxis[i];\n      const panelOptions = this.panel.yaxes[i];\n      axis.options.max = axis.options.max !== null ? axis.options.max : panelOptions.max;\n      axis.options.min = axis.options.min !== null ? axis.options.min : panelOptions.min;\n    }\n  }\n\n  processRangeHook(plot: any) {\n    const yAxes = plot.getYAxes();\n    const align = this.panel.yaxis.align || false;\n\n    if (yAxes.length > 1 && align === true) {\n      const level = this.panel.yaxis.alignLevel || 0;\n      alignYLevel(yAxes, parseFloat(level));\n    }\n  }\n\n  // Series could have different timeSteps,\n  // let's find the smallest one so that bars are correctly rendered.\n  // In addition, only take series which are rendered as bars for this.\n  getMinTimeStepOfSeries(data: any[]) {\n    let min = Number.MAX_VALUE;\n\n    for (let i = 0; i < data.length; i++) {\n      if (!data[i].stats.timeStep) {\n        continue;\n      }\n      if (this.panel.bars) {\n        if (data[i].bars && data[i].bars.show === false) {\n          continue;\n        }\n      } else {\n        if (typeof data[i].bars === 'undefined' || typeof data[i].bars.show === 'undefined' || !data[i].bars.show) {\n          continue;\n        }\n      }\n\n      if (data[i].stats.timeStep < min) {\n        min = data[i].stats.timeStep;\n      }\n    }\n\n    return min;\n  }\n\n  // Function for rendering panel\n  renderPanel() {\n    this.panelWidth = this.elem.width();\n    if (this.shouldAbortRender()) {\n      return;\n    }\n\n    // give space to alert editing\n    this.thresholdManager.prepare(this.elem, this.data);\n\n    // un-check dashes if lines are unchecked\n    this.panel.dashes = this.panel.lines ? this.panel.dashes : false;\n\n    // Populate element\n    const options: any = this.buildFlotOptions(this.panel);\n    this.prepareXAxis(options, this.panel);\n    this.configureYAxisOptions(this.data, options);\n    this.thresholdManager.addFlotOptions(options, this.panel);\n    this.timeRegionManager.addFlotOptions(options, this.panel);\n    this.eventManager.addFlotEvents(this.annotations, options);\n    this.sortedSeries = this.sortSeries(this.data, this.panel);\n    this.callPlot(options, true);\n  }\n\n  buildFlotPairs(data: any) {\n    for (let i = 0; i < data.length; i++) {\n      const series = data[i];\n      series.data = series.getFlotPairs(series.nullPointMode || this.panel.nullPointMode);\n\n      if (series.transform === 'constant') {\n        series.data = getFlotPairsConstant(series.data, this.ctrl.range);\n      }\n\n      // if hidden remove points and disable stack\n      if (this.ctrl.hiddenSeries[series.alias]) {\n        series.data = [];\n        series.stack = false;\n      }\n    }\n  }\n\n  prepareXAxis(options: any, panel: any) {\n    switch (panel.xaxis.mode) {\n      case 'series': {\n        options.series.bars.barWidth = 0.7;\n        options.series.bars.align = 'center';\n\n        for (let i = 0; i < this.data.length; i++) {\n          const series = this.data[i];\n          series.data = [[i + 1, series.stats[panel.xaxis.values[0]]]];\n        }\n\n        this.addXSeriesAxis(options);\n        break;\n      }\n      case 'histogram': {\n        let bucketSize: number;\n\n        if (this.data.length) {\n          let histMin = _.min(_.map(this.data, s => s.stats.min));\n          let histMax = _.max(_.map(this.data, s => s.stats.max));\n          const ticks = panel.xaxis.buckets || this.panelWidth / 50;\n          if (panel.xaxis.min != null) {\n            const isInvalidXaxisMin = tickStep(panel.xaxis.min, histMax, ticks) <= 0;\n            histMin = isInvalidXaxisMin ? histMin : panel.xaxis.min;\n          }\n          if (panel.xaxis.max != null) {\n            const isInvalidXaxisMax = tickStep(histMin, panel.xaxis.max, ticks) <= 0;\n            histMax = isInvalidXaxisMax ? histMax : panel.xaxis.max;\n          }\n          bucketSize = tickStep(histMin, histMax, ticks);\n          options.series.bars.barWidth = bucketSize * 0.8;\n          this.data = convertToHistogramData(this.data, bucketSize, this.ctrl.hiddenSeries, histMin, histMax);\n        } else {\n          bucketSize = 0;\n        }\n\n        this.addXHistogramAxis(options, bucketSize);\n        break;\n      }\n      case 'table': {\n        options.series.bars.barWidth = 0.7;\n        options.series.bars.align = 'center';\n        this.addXTableAxis(options);\n        break;\n      }\n      default: {\n        options.series.bars.barWidth = this.getMinTimeStepOfSeries(this.data) / 1.5;\n        this.addTimeAxis(options);\n        break;\n      }\n    }\n  }\n\n  callPlot(options: any, incrementRenderCounter: boolean) {\n    try {\n      this.plot = $.plot(this.elem, this.sortedSeries, options);\n      if (this.ctrl.renderError) {\n        delete this.ctrl.error;\n        delete this.ctrl.inspector;\n      }\n    } catch (e) {\n      console.log('flotcharts error', e);\n      this.ctrl.error = e.message || 'Render Error';\n      this.ctrl.renderError = true;\n      this.ctrl.inspector = { error: e };\n    }\n\n    if (incrementRenderCounter) {\n      this.ctrl.renderingCompleted();\n    }\n  }\n\n  buildFlotOptions(panel: any) {\n    let gridColor = '#c8c8c8';\n    if (config.bootData.user.lightTheme === true) {\n      gridColor = '#a1a1a1';\n    }\n    const stack = panel.stack ? true : null;\n    const options: any = {\n      hooks: {\n        draw: [this.drawHook.bind(this)],\n        processOffset: [this.processOffsetHook.bind(this)],\n        processRange: [this.processRangeHook.bind(this)],\n      },\n      legend: { show: false },\n      series: {\n        stackpercent: panel.stack ? panel.percentage : false,\n        stack: panel.percentage ? null : stack,\n        lines: {\n          show: panel.lines,\n          zero: false,\n          fill: this.translateFillOption(panel.fill),\n          fillColor: this.getFillGradient(panel.fillGradient),\n          lineWidth: panel.dashes ? 0 : panel.linewidth,\n          steps: panel.steppedLine,\n        },\n        dashes: {\n          show: panel.dashes,\n          lineWidth: panel.linewidth,\n          dashLength: [panel.dashLength, panel.spaceLength],\n        },\n        bars: {\n          show: panel.bars,\n          fill: 1,\n          barWidth: 1,\n          zero: false,\n          lineWidth: 0,\n        },\n        points: {\n          show: panel.points,\n          fill: 1,\n          fillColor: false,\n          radius: panel.points ? panel.pointradius : 2,\n        },\n        shadowSize: 0,\n      },\n      yaxes: [],\n      xaxis: {},\n      grid: {\n        minBorderMargin: 0,\n        markings: [],\n        backgroundColor: null,\n        borderWidth: 0,\n        hoverable: true,\n        clickable: true,\n        color: gridColor,\n        margin: { left: 0, right: 0 },\n        labelMarginX: 0,\n        mouseActiveRadius: 30,\n      },\n      selection: {\n        mode: 'x',\n        color: '#666',\n      },\n      crosshair: {\n        mode: 'x',\n      },\n    };\n    return options;\n  }\n\n  sortSeries(series: any, panel: any) {\n    const sortBy = panel.legend.sort;\n    const sortOrder = panel.legend.sortDesc;\n    const haveSortBy = sortBy !== null && sortBy !== undefined && panel.legend[sortBy];\n    const haveSortOrder = sortOrder !== null && sortOrder !== undefined;\n    const shouldSortBy = panel.stack && haveSortBy && haveSortOrder && panel.legend.alignAsTable;\n    const sortDesc = panel.legend.sortDesc === true ? -1 : 1;\n\n    if (shouldSortBy) {\n      return _.sortBy(series, s => s.stats[sortBy] * sortDesc);\n    } else {\n      return _.sortBy(series, s => s.zindex);\n    }\n  }\n\n  getFillGradient(amount: number) {\n    if (!amount) {\n      return null;\n    }\n\n    return {\n      colors: [{ opacity: 0.0 }, { opacity: amount / 10 }],\n    };\n  }\n\n  translateFillOption(fill: number) {\n    if (this.panel.percentage && this.panel.stack) {\n      return fill === 0 ? 0.001 : fill / 10;\n    } else {\n      return fill / 10;\n    }\n  }\n\n  addTimeAxis(options: any) {\n    const ticks = this.panelWidth / 100;\n    const min = _.isUndefined(this.ctrl.range.from) ? null : this.ctrl.range.from.valueOf();\n    const max = _.isUndefined(this.ctrl.range.to) ? null : this.ctrl.range.to.valueOf();\n\n    options.xaxis = {\n      timezone: this.dashboard.getTimezone(),\n      show: this.panel.xaxis.show,\n      mode: 'time',\n      min: min,\n      max: max,\n      label: 'Datetime',\n      ticks: ticks,\n      timeformat: this.time_format(ticks, min, max),\n    };\n  }\n\n  addXSeriesAxis(options: any) {\n    const ticks = _.map(this.data, (series, index) => {\n      return [index + 1, series.alias];\n    });\n\n    options.xaxis = {\n      timezone: this.dashboard.getTimezone(),\n      show: this.panel.xaxis.show,\n      mode: null,\n      min: 0,\n      max: ticks.length + 1,\n      label: 'Datetime',\n      ticks: ticks,\n    };\n  }\n\n  addXHistogramAxis(options: any, bucketSize: number) {\n    let ticks: number | number[];\n    let min: number | undefined;\n    let max: number | undefined;\n\n    const defaultTicks = this.panelWidth / 50;\n\n    if (this.data.length && bucketSize) {\n      const tickValues = [];\n\n      for (const d of this.data) {\n        for (const point of d.data) {\n          tickValues[point[0]] = true;\n        }\n      }\n\n      ticks = Object.keys(tickValues).map(v => Number(v));\n      min = _.min(ticks)!;\n      max = _.max(ticks)!;\n\n      // Adjust tick step\n      let tickStep = bucketSize;\n      let ticksNum = Math.floor((max - min) / tickStep);\n      while (ticksNum > defaultTicks) {\n        tickStep = tickStep * 2;\n        ticksNum = Math.ceil((max - min) / tickStep);\n      }\n\n      // Expand ticks for pretty view\n      min = Math.floor(min / tickStep) * tickStep;\n      // 1.01 is 101% - ensure we have enough space for last bar\n      max = Math.ceil((max * 1.01) / tickStep) * tickStep;\n\n      ticks = [];\n      for (let i = min; i <= max; i += tickStep) {\n        ticks.push(i);\n      }\n    } else {\n      // Set defaults if no data\n      ticks = defaultTicks / 2;\n      min = 0;\n      max = 1;\n    }\n\n    options.xaxis = {\n      timezone: this.dashboard.getTimezone(),\n      show: this.panel.xaxis.show,\n      mode: null,\n      min: min,\n      max: max,\n      label: 'Histogram',\n      ticks: ticks,\n    };\n\n    // Use 'short' format for histogram values\n    this.configureAxisMode(options.xaxis, 'short');\n  }\n\n  addXTableAxis(options: any) {\n    let ticks = _.map(this.data, (series, seriesIndex) => {\n      return _.map(series.datapoints, (point, pointIndex) => {\n        const tickIndex = seriesIndex * series.datapoints.length + pointIndex;\n        return [tickIndex + 1, point[1]];\n      });\n    });\n    // @ts-ignore, potential bug? is this _.flattenDeep?\n    ticks = _.flatten(ticks, true);\n\n    options.xaxis = {\n      timezone: this.dashboard.getTimezone(),\n      show: this.panel.xaxis.show,\n      mode: null,\n      min: 0,\n      max: ticks.length + 1,\n      label: 'Datetime',\n      ticks: ticks,\n    };\n  }\n\n  configureYAxisOptions(data: any, options: any) {\n    const defaults = {\n      position: 'left',\n      show: this.panel.yaxes[0].show,\n      index: 1,\n      logBase: this.panel.yaxes[0].logBase || 1,\n      min: this.parseNumber(this.panel.yaxes[0].min),\n      max: this.parseNumber(this.panel.yaxes[0].max),\n      tickDecimals: this.panel.yaxes[0].decimals,\n    };\n\n    options.yaxes.push(defaults);\n\n    if (_.find(data, { yaxis: 2 })) {\n      const secondY = _.clone(defaults);\n      secondY.index = 2;\n      secondY.show = this.panel.yaxes[1].show;\n      secondY.logBase = this.panel.yaxes[1].logBase || 1;\n      secondY.position = 'right';\n      secondY.min = this.parseNumber(this.panel.yaxes[1].min);\n      secondY.max = this.parseNumber(this.panel.yaxes[1].max);\n      secondY.tickDecimals = this.panel.yaxes[1].decimals;\n      options.yaxes.push(secondY);\n\n      this.applyLogScale(options.yaxes[1], data);\n      this.configureAxisMode(\n        options.yaxes[1],\n        this.panel.percentage && this.panel.stack ? 'percent' : this.panel.yaxes[1].format\n      );\n    }\n    this.applyLogScale(options.yaxes[0], data);\n    this.configureAxisMode(\n      options.yaxes[0],\n      this.panel.percentage && this.panel.stack ? 'percent' : this.panel.yaxes[0].format\n    );\n  }\n\n  parseNumber(value: any) {\n    if (value === null || typeof value === 'undefined') {\n      return null;\n    }\n\n    return _.toNumber(value);\n  }\n\n  applyLogScale(axis: any, data: any) {\n    if (axis.logBase === 1) {\n      return;\n    }\n\n    const minSetToZero = axis.min === 0;\n\n    if (axis.min < Number.MIN_VALUE) {\n      axis.min = null;\n    }\n    if (axis.max < Number.MIN_VALUE) {\n      axis.max = null;\n    }\n\n    let series, i;\n    let max = axis.max,\n      min = axis.min;\n\n    for (i = 0; i < data.length; i++) {\n      series = data[i];\n      if (series.yaxis === axis.index) {\n        if (!max || max < series.stats.max) {\n          max = series.stats.max;\n        }\n        if (!min || min > series.stats.logmin) {\n          min = series.stats.logmin;\n        }\n      }\n    }\n\n    axis.transform = (v: number) => {\n      return v < Number.MIN_VALUE ? null : Math.log(v) / Math.log(axis.logBase);\n    };\n    axis.inverseTransform = (v: any) => {\n      return Math.pow(axis.logBase, v);\n    };\n\n    if (!max && !min) {\n      max = axis.inverseTransform(+2);\n      min = axis.inverseTransform(-2);\n    } else if (!max) {\n      max = min * axis.inverseTransform(+4);\n    } else if (!min) {\n      min = max * axis.inverseTransform(-4);\n    }\n\n    if (axis.min) {\n      min = axis.inverseTransform(Math.ceil(axis.transform(axis.min)));\n    } else {\n      min = axis.min = axis.inverseTransform(Math.floor(axis.transform(min)));\n    }\n    if (axis.max) {\n      max = axis.inverseTransform(Math.floor(axis.transform(axis.max)));\n    } else {\n      max = axis.max = axis.inverseTransform(Math.ceil(axis.transform(max)));\n    }\n\n    if (!min || min < Number.MIN_VALUE || !max || max < Number.MIN_VALUE) {\n      return;\n    }\n\n    if (Number.isFinite(min) && Number.isFinite(max)) {\n      if (minSetToZero) {\n        axis.min = 0.1;\n        min = 1;\n      }\n\n      axis.ticks = this.generateTicksForLogScaleYAxis(min, max, axis.logBase);\n      if (minSetToZero) {\n        axis.ticks.unshift(0.1);\n      }\n      if (axis.ticks[axis.ticks.length - 1] > axis.max) {\n        axis.max = axis.ticks[axis.ticks.length - 1];\n      }\n    } else {\n      axis.ticks = [1, 2];\n      delete axis.min;\n      delete axis.max;\n    }\n  }\n\n  generateTicksForLogScaleYAxis(min: any, max: number, logBase: number) {\n    let ticks = [];\n\n    let nextTick;\n    for (nextTick = min; nextTick <= max; nextTick *= logBase) {\n      ticks.push(nextTick);\n    }\n\n    const maxNumTicks = Math.ceil(this.ctrl.height / 25);\n    const numTicks = ticks.length;\n    if (numTicks > maxNumTicks) {\n      const factor = Math.ceil(numTicks / maxNumTicks) * logBase;\n      ticks = [];\n\n      for (nextTick = min; nextTick <= max * factor; nextTick *= factor) {\n        ticks.push(nextTick);\n      }\n    }\n\n    return ticks;\n  }\n\n  configureAxisMode(axis: { tickFormatter: (val: any, axis: any) => string }, format: string) {\n    axis.tickFormatter = (val, axis) => {\n      const formatter = getValueFormat(format);\n\n      if (!formatter) {\n        throw new Error(`Unit '${format}' is not supported`);\n      }\n      return formatter(val, axis.tickDecimals, axis.scaledDecimals);\n    };\n  }\n\n  time_format(ticks: number, min: number | null, max: number | null) {\n    if (min && max && ticks) {\n      const range = max - min;\n      const secPerTick = range / ticks / 1000;\n      // Need have 10 millisecond margin on the day range\n      // As sometimes last 24 hour dashboard evaluates to more than 86400000\n      const oneDay = 86400010;\n      const oneYear = 31536000000;\n\n      if (secPerTick <= 45) {\n        return '%H:%M:%S';\n      }\n      if (secPerTick <= 7200 || range <= oneDay) {\n        return '%H:%M';\n      }\n      if (secPerTick <= 80000) {\n        return '%m/%d %H:%M';\n      }\n      if (secPerTick <= 2419200 || range <= oneYear) {\n        return '%m/%d';\n      }\n      return '%Y-%m';\n    }\n\n    return '%H:%M';\n  }\n}\n\n/** @ngInject */\nfunction graphDirective(timeSrv: TimeSrv, popoverSrv: any, contextSrv: ContextSrv) {\n  return {\n    restrict: 'A',\n    template: '',\n    link: (scope: any, elem: JQuery) => {\n      return new GraphElement(scope, elem, timeSrv);\n    },\n  };\n}\n\ncoreModule.directive('grafanaGraph', graphDirective);\nexport { GraphElement, graphDirective };\n","import _ from 'lodash';\nimport coreModule from 'app/core/core_module';\n\n/** @ngInject */\nexport function SeriesOverridesCtrl($scope: any, $element: JQuery, popoverSrv: any) {\n  $scope.overrideMenu = [];\n  $scope.currentOverrides = [];\n  $scope.override = $scope.override || {};\n  $scope.colorPickerModel = {};\n\n  $scope.addOverrideOption = (name: string, propertyName: string, values: any) => {\n    const option = {\n      text: name,\n      propertyName: propertyName,\n      index: $scope.overrideMenu.length,\n      values,\n      submenu: _.map(values, value => {\n        return { text: String(value), value: value };\n      }),\n    };\n\n    $scope.overrideMenu.push(option);\n  };\n\n  $scope.setOverride = (item: { propertyName: string }, subItem: { value: any }) => {\n    // handle color overrides\n    if (item.propertyName === 'color') {\n      $scope.openColorSelector($scope.override['color']);\n      return;\n    }\n\n    $scope.override[item.propertyName] = subItem.value;\n\n    // automatically disable lines for this series and the fill below to series\n    // can be removed by the user if they still want lines\n    if (item.propertyName === 'fillBelowTo') {\n      $scope.override['lines'] = false;\n      $scope.ctrl.addSeriesOverride({ alias: subItem.value, lines: false });\n    }\n\n    $scope.updateCurrentOverrides();\n    $scope.ctrl.render();\n  };\n\n  $scope.colorSelected = (color: any) => {\n    $scope.override['color'] = color;\n    $scope.updateCurrentOverrides();\n    $scope.ctrl.render();\n\n    // update picker model so that the picker UI will also update\n    $scope.colorPickerModel.series.color = color;\n  };\n\n  $scope.openColorSelector = (color: any) => {\n    $scope.colorPickerModel = {\n      autoClose: true,\n      colorSelected: $scope.colorSelected,\n      series: { color },\n    };\n\n    popoverSrv.show({\n      element: $element.find('.dropdown')[0],\n      position: 'top center',\n      openOn: 'click',\n      template: '<series-color-picker-popover color=\"series.color\" onColorChange=\"colorSelected\" />',\n      classNames: 'drop-popover drop-popover--transparent',\n      model: $scope.colorPickerModel,\n      onClose: () => {\n        $scope.ctrl.render();\n      },\n    });\n  };\n\n  $scope.removeOverride = (option: { propertyName: string | number }) => {\n    delete $scope.override[option.propertyName];\n    $scope.updateCurrentOverrides();\n    $scope.ctrl.refresh();\n  };\n\n  $scope.getSeriesNames = () => {\n    return _.map($scope.ctrl.seriesList, series => {\n      return series.alias;\n    });\n  };\n\n  $scope.updateCurrentOverrides = () => {\n    $scope.currentOverrides = [];\n    _.each($scope.overrideMenu, option => {\n      const value = $scope.override[option.propertyName];\n      if (_.isUndefined(value)) {\n        return;\n      }\n      $scope.currentOverrides.push({\n        name: option.text,\n        propertyName: option.propertyName,\n        value: String(value),\n      });\n    });\n  };\n\n  $scope.addOverrideOption('Bars', 'bars', [true, false]);\n  $scope.addOverrideOption('Lines', 'lines', [true, false]);\n  $scope.addOverrideOption('Line fill', 'fill', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  $scope.addOverrideOption('Line width', 'linewidth', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  $scope.addOverrideOption('Null point mode', 'nullPointMode', ['connected', 'null', 'null as zero']);\n  $scope.addOverrideOption('Fill below to', 'fillBelowTo', $scope.getSeriesNames());\n  $scope.addOverrideOption('Staircase line', 'steppedLine', [true, false]);\n  $scope.addOverrideOption('Dashes', 'dashes', [true, false]);\n  $scope.addOverrideOption('Dash Length', 'dashLength', [\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n  ]);\n  $scope.addOverrideOption('Dash Space', 'spaceLength', [\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n  ]);\n  $scope.addOverrideOption('Points', 'points', [true, false]);\n  $scope.addOverrideOption('Points Radius', 'pointradius', [1, 2, 3, 4, 5]);\n  $scope.addOverrideOption('Stack', 'stack', [true, false, 'A', 'B', 'C', 'D']);\n  $scope.addOverrideOption('Color', 'color', ['change']);\n  $scope.addOverrideOption('Y-axis', 'yaxis', [1, 2]);\n  $scope.addOverrideOption('Z-index', 'zindex', [-3, -2, -1, 0, 1, 2, 3]);\n  $scope.addOverrideOption('Transform', 'transform', ['constant', 'negative-Y']);\n  $scope.addOverrideOption('Legend', 'legend', [true, false]);\n  $scope.addOverrideOption('Hide in tooltip', 'hideTooltip', [true, false]);\n  $scope.updateCurrentOverrides();\n}\n\ncoreModule.controller('SeriesOverridesCtrl', SeriesOverridesCtrl);\n","import coreModule from 'app/core/core_module';\nimport config from 'app/core/config';\nimport tinycolor from 'tinycolor2';\nexport class ThresholdFormCtrl {\n  panelCtrl: any;\n  panel: any;\n  disabled: boolean;\n\n  /** @ngInject */\n  constructor($scope: any) {\n    this.panel = this.panelCtrl.panel;\n\n    if (this.panel.alert) {\n      this.disabled = true;\n    }\n\n    const unbindDestroy = $scope.$on('$destroy', () => {\n      this.panelCtrl.editingThresholds = false;\n      this.panelCtrl.render();\n      unbindDestroy();\n    });\n\n    this.panelCtrl.editingThresholds = true;\n  }\n\n  addThreshold() {\n    this.panel.thresholds.push({\n      value: undefined,\n      colorMode: 'critical',\n      op: 'gt',\n      fill: true,\n      line: true,\n      yaxis: 'left',\n    });\n    this.panelCtrl.render();\n  }\n\n  removeThreshold(index: number) {\n    this.panel.thresholds.splice(index, 1);\n    this.panelCtrl.render();\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  onFillColorChange(index: number) {\n    return (newColor: string) => {\n      this.panel.thresholds[index].fillColor = newColor;\n      this.render();\n    };\n  }\n\n  onLineColorChange(index: number) {\n    return (newColor: string) => {\n      this.panel.thresholds[index].lineColor = newColor;\n      this.render();\n    };\n  }\n\n  onThresholdTypeChange(index: number) {\n    // Because of the ng-model binding, threshold's color mode is already set here\n    if (this.panel.thresholds[index].colorMode === 'custom') {\n      this.panel.thresholds[index].fillColor = tinycolor(config.theme.colors.blueBase)\n        .setAlpha(0.2)\n        .toRgbString();\n      this.panel.thresholds[index].lineColor = tinycolor(config.theme.colors.blueShade)\n        .setAlpha(0.6)\n        .toRgbString();\n    }\n    this.panelCtrl.render();\n  }\n}\n\ncoreModule.directive('graphThresholdForm', () => {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/plugins/panel/graph/thresholds_form.html',\n    controller: ThresholdFormCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      panelCtrl: '=',\n    },\n  };\n});\n","import coreModule from 'app/core/core_module';\nimport { getColorModes } from './time_region_manager';\n\nexport class TimeRegionFormCtrl {\n  panelCtrl: any;\n  panel: any;\n  disabled: boolean;\n  colorModes: any;\n\n  /** @ngInject */\n  constructor($scope: any) {\n    this.panel = this.panelCtrl.panel;\n\n    const unbindDestroy = $scope.$on('$destroy', () => {\n      this.panelCtrl.editingTimeRegions = false;\n      this.panelCtrl.render();\n      unbindDestroy();\n    });\n\n    this.colorModes = getColorModes();\n    this.panelCtrl.editingTimeRegions = true;\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  addTimeRegion() {\n    this.panel.timeRegions.push({\n      op: 'time',\n      fromDayOfWeek: undefined,\n      from: undefined,\n      toDayOfWeek: undefined,\n      to: undefined,\n      colorMode: 'background6',\n      fill: true,\n      line: false,\n      // Default colors for new\n      fillColor: 'rgba(234, 112, 112, 0.12)',\n      lineColor: 'rgba(237, 46, 24, 0.60)',\n    });\n    this.panelCtrl.render();\n  }\n\n  removeTimeRegion(index: number) {\n    this.panel.timeRegions.splice(index, 1);\n    this.panelCtrl.render();\n  }\n\n  onFillColorChange(index: number) {\n    return (newColor: string) => {\n      this.panel.timeRegions[index].fillColor = newColor;\n      this.render();\n    };\n  }\n\n  onLineColorChange(index: number) {\n    return (newColor: string) => {\n      this.panel.timeRegions[index].lineColor = newColor;\n      this.render();\n    };\n  }\n}\n\ncoreModule.directive('graphTimeRegionForm', () => {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/plugins/panel/graph/time_regions_form.html',\n    controller: TimeRegionFormCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      panelCtrl: '=',\n    },\n  };\n});\n","const template = `\n<div class=\"graph-panel\" ng-class=\"{'graph-panel--legend-right': ctrl.panel.legend.rightSide}\">\n  <div class=\"graph-panel__chart\" grafana-graph ng-dblclick=\"ctrl.zoomOut()\">\n  </div>\n\n  <div class=\"graph-legend\">\n    <div class=\"graph-legend-content\" graph-legend></div>\n  </div>\n  <div ng-if=\"ctrl.contextMenuCtrl.isVisible\">\n    <graph-context-menu\n      items=\"ctrl.contextMenuCtrl.menuItemsSupplier()\"\n      onClose=\"ctrl.onContextMenuClose\"\n      getContextMenuSource=\"ctrl.contextMenuCtrl.getSource\"\n      formatSourceDate=\"ctrl.formatDate\"\n      x=\"ctrl.contextMenuCtrl.position.x\"\n      y=\"ctrl.contextMenuCtrl.position.y\"\n    ></graph-context-menu>\n  </div>\n</div>\n`;\n\nexport default template;\n","import _ from 'lodash';\nimport { colors, getColorFromHexRgbOrName } from '@grafana/ui';\nimport { TimeRange, FieldType, Field, DataFrame, getTimeField } from '@grafana/data';\nimport TimeSeries from 'app/core/time_series2';\nimport config from 'app/core/config';\n\ntype Options = {\n  dataList: DataFrame[];\n  range?: TimeRange;\n};\n\nexport class DataProcessor {\n  constructor(private panel: any) {}\n\n  getSeriesList(options: Options): TimeSeries[] {\n    const list: TimeSeries[] = [];\n    const { dataList, range } = options;\n\n    if (!dataList || !dataList.length) {\n      return list;\n    }\n\n    for (let i = 0; i < dataList.length; i++) {\n      const series = dataList[i];\n      const { timeField } = getTimeField(series);\n      if (!timeField) {\n        continue;\n      }\n\n      const seriesName = series.name ? series.name : series.refId;\n      for (let j = 0; j < series.fields.length; j++) {\n        const field = series.fields[j];\n        if (field.type !== FieldType.number) {\n          continue;\n        }\n\n        let name = field.config && field.config.title ? field.config.title : field.name;\n\n        if (seriesName && dataList.length > 0 && name !== seriesName) {\n          name = seriesName + ' ' + name;\n        }\n\n        const datapoints = [];\n        for (let r = 0; r < series.length; r++) {\n          datapoints.push([field.values.get(r), timeField.values.get(r)]);\n        }\n        list.push(this.toTimeSeries(field, name, i, j, datapoints, list.length, range));\n      }\n    }\n\n    // Merge all the rows if we want to show a histogram\n    if (this.panel.xaxis.mode === 'histogram' && !this.panel.stack && list.length > 1) {\n      const first = list[0];\n      first.alias = first.aliasEscaped = 'Count';\n      for (let i = 1; i < list.length; i++) {\n        first.datapoints = first.datapoints.concat(list[i].datapoints);\n      }\n      return [first];\n    }\n\n    return list;\n  }\n\n  private toTimeSeries(\n    field: Field,\n    alias: string,\n    dataFrameIndex: number,\n    fieldIndex: number,\n    datapoints: any[][],\n    index: number,\n    range?: TimeRange\n  ) {\n    const colorIndex = index % colors.length;\n    const color = this.panel.aliasColors[alias] || colors[colorIndex];\n\n    const series = new TimeSeries({\n      datapoints: datapoints || [],\n      alias: alias,\n      color: getColorFromHexRgbOrName(color, config.theme.type),\n      unit: field.config ? field.config.unit : undefined,\n      dataFrameIndex,\n      fieldIndex,\n    });\n\n    if (datapoints && datapoints.length > 0 && range) {\n      const last = datapoints[datapoints.length - 1][1];\n      const from = range.from;\n\n      if (last - from.valueOf() < -10000) {\n        series.isOutsideRange = true;\n      }\n    }\n    return series;\n  }\n\n  setPanelDefaultsForNewXAxisMode() {\n    switch (this.panel.xaxis.mode) {\n      case 'time': {\n        this.panel.bars = false;\n        this.panel.lines = true;\n        this.panel.points = false;\n        this.panel.legend.show = true;\n        this.panel.tooltip.shared = true;\n        this.panel.xaxis.values = [];\n        break;\n      }\n      case 'series': {\n        this.panel.bars = true;\n        this.panel.lines = false;\n        this.panel.points = false;\n        this.panel.stack = false;\n        this.panel.legend.show = false;\n        this.panel.tooltip.shared = false;\n        this.panel.xaxis.values = ['total'];\n        break;\n      }\n      case 'histogram': {\n        this.panel.bars = true;\n        this.panel.lines = false;\n        this.panel.points = false;\n        this.panel.stack = false;\n        this.panel.legend.show = false;\n        this.panel.tooltip.shared = false;\n        break;\n      }\n    }\n  }\n\n  validateXAxisSeriesValue() {\n    switch (this.panel.xaxis.mode) {\n      case 'series': {\n        if (this.panel.xaxis.values.length === 0) {\n          this.panel.xaxis.values = ['total'];\n          return;\n        }\n\n        const validOptions = this.getXAxisValueOptions({});\n        const found: any = _.find(validOptions, { value: this.panel.xaxis.values[0] });\n        if (!found) {\n          this.panel.xaxis.values = ['total'];\n        }\n        return;\n      }\n    }\n  }\n\n  getXAxisValueOptions(options: any) {\n    switch (this.panel.xaxis.mode) {\n      case 'series': {\n        return [\n          { text: 'Avg', value: 'avg' },\n          { text: 'Min', value: 'min' },\n          { text: 'Max', value: 'max' },\n          { text: 'Total', value: 'total' },\n          { text: 'Count', value: 'count' },\n        ];\n      }\n    }\n\n    return [];\n  }\n\n  pluckDeep(obj: any, property: string) {\n    const propertyParts = property.split('.');\n    let value = obj;\n    for (let i = 0; i < propertyParts.length; ++i) {\n      if (value[propertyParts[i]]) {\n        value = value[propertyParts[i]];\n      } else {\n        return undefined;\n      }\n    }\n    return value;\n  }\n}\n","import { getValueFormats } from '@grafana/ui';\nimport { GraphCtrl } from './module';\n\nexport class AxesEditorCtrl {\n  panel: any;\n  panelCtrl: GraphCtrl;\n  unitFormats: any;\n  logScales: any;\n  xAxisModes: any;\n  xAxisStatOptions: any;\n  xNameSegment: any;\n\n  /** @ngInject */\n  constructor(private $scope: any) {\n    this.panelCtrl = $scope.ctrl as GraphCtrl;\n    this.panel = this.panelCtrl.panel;\n    this.$scope.ctrl = this;\n\n    this.unitFormats = getValueFormats();\n\n    this.logScales = {\n      linear: 1,\n      'log (base 2)': 2,\n      'log (base 10)': 10,\n      'log (base 32)': 32,\n      'log (base 1024)': 1024,\n    };\n\n    this.xAxisModes = {\n      Time: 'time',\n      Series: 'series',\n      Histogram: 'histogram',\n      // 'Data field': 'field',\n    };\n\n    this.xAxisStatOptions = [\n      { text: 'Avg', value: 'avg' },\n      { text: 'Min', value: 'min' },\n      { text: 'Max', value: 'max' },\n      { text: 'Total', value: 'total' },\n      { text: 'Count', value: 'count' },\n      { text: 'Current', value: 'current' },\n    ];\n\n    if (this.panel.xaxis.mode === 'custom') {\n      if (!this.panel.xaxis.name) {\n        this.panel.xaxis.name = 'specify field';\n      }\n    }\n  }\n\n  setUnitFormat(axis: { format: any }, subItem: { value: any }) {\n    axis.format = subItem.value;\n    this.panelCtrl.render();\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  xAxisModeChanged() {\n    this.panelCtrl.processor.setPanelDefaultsForNewXAxisMode();\n    this.panelCtrl.onDataFramesReceived(this.panelCtrl.dataList);\n  }\n\n  xAxisValueChanged() {\n    this.panelCtrl.onDataFramesReceived(this.panelCtrl.dataList);\n  }\n}\n\n/** @ngInject */\nexport function axesEditorComponent() {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/app/plugins/panel/graph/axes_editor.html',\n    controller: AxesEditorCtrl,\n  };\n}\n","import { ContextMenuItem } from '@grafana/ui';\n\nexport interface FlotDataPoint {\n  dataIndex: number;\n  datapoint: number[];\n  pageX: number;\n  pageY: number;\n  series: any;\n  seriesIndex: number;\n}\n\nexport class GraphContextMenuCtrl {\n  private source?: FlotDataPoint | null;\n  private scope?: any;\n  menuItemsSupplier?: () => ContextMenuItem[];\n  scrollContextElement: HTMLElement | null;\n  position: {\n    x: number;\n    y: number;\n  };\n\n  isVisible: boolean;\n\n  constructor($scope: any) {\n    this.isVisible = false;\n    this.scope = $scope;\n  }\n\n  onClose = () => {\n    if (this.scrollContextElement) {\n      this.scrollContextElement.removeEventListener('scroll', this.onClose);\n    }\n\n    this.scope.$apply(() => {\n      this.isVisible = false;\n    });\n  };\n\n  toggleMenu = (event?: { pageX: number; pageY: number }) => {\n    this.isVisible = !this.isVisible;\n    if (this.isVisible && this.scrollContextElement) {\n      this.scrollContextElement.addEventListener('scroll', this.onClose);\n    }\n\n    if (this.source) {\n      this.position = {\n        x: this.source.pageX,\n        y: this.source.pageY,\n      };\n    } else {\n      this.position = {\n        x: event ? event.pageX : 0,\n        y: event ? event.pageY : 0,\n      };\n    }\n  };\n\n  // Sets element which is considered as a scroll context of given context menu.\n  // Having access to this element allows scroll event attachement for menu to be closed when user scrolls\n  setScrollContextElement = (el: HTMLElement | null) => {\n    this.scrollContextElement = el;\n  };\n\n  setSource = (source: FlotDataPoint | null) => {\n    this.source = source;\n  };\n\n  getSource = () => {\n    return this.source;\n  };\n\n  setMenuItemsSupplier = (menuItemsSupplier: () => ContextMenuItem[]) => {\n    this.menuItemsSupplier = menuItemsSupplier;\n  };\n}\n","import './graph';\nimport './series_overrides_ctrl';\nimport './thresholds_form';\nimport './time_regions_form';\n\nimport template from './template';\nimport _ from 'lodash';\n\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { DataProcessor } from './data_processor';\nimport { axesEditorComponent } from './axes_editor';\nimport config from 'app/core/config';\nimport TimeSeries from 'app/core/time_series2';\nimport { DataFrame, DataLink, DateTimeInput } from '@grafana/data';\nimport { getColorFromHexRgbOrName, VariableSuggestion } from '@grafana/ui';\nimport { getProcessedDataFrames } from 'app/features/dashboard/state/runRequest';\nimport { GraphContextMenuCtrl } from './GraphContextMenuCtrl';\nimport { getDataLinksVariableSuggestions } from 'app/features/panel/panellinks/link_srv';\n\nimport { auto } from 'angular';\nimport { AnnotationsSrv } from 'app/features/annotations/all';\n\nclass GraphCtrl extends MetricsPanelCtrl {\n  static template = template;\n\n  renderError: boolean;\n  hiddenSeries: any = {};\n  seriesList: TimeSeries[] = [];\n  dataList: DataFrame[] = [];\n  annotations: any = [];\n  alertState: any;\n\n  annotationsPromise: any;\n  dataWarning: any;\n  colors: any = [];\n  subTabIndex: number;\n  processor: DataProcessor;\n  contextMenuCtrl: GraphContextMenuCtrl;\n  linkVariableSuggestions: VariableSuggestion[] = [];\n\n  panelDefaults: any = {\n    // datasource name, null = default datasource\n    datasource: null,\n    // sets client side (flot) or native graphite png renderer (png)\n    renderer: 'flot',\n    yaxes: [\n      {\n        label: null,\n        show: true,\n        logBase: 1,\n        min: null,\n        max: null,\n        format: 'short',\n      },\n      {\n        label: null,\n        show: true,\n        logBase: 1,\n        min: null,\n        max: null,\n        format: 'short',\n      },\n    ],\n    xaxis: {\n      show: true,\n      mode: 'time',\n      name: null,\n      values: [],\n      buckets: null,\n    },\n    yaxis: {\n      align: false,\n      alignLevel: null,\n    },\n    // show/hide lines\n    lines: true,\n    // fill factor\n    fill: 1,\n    // fill factor\n    fillGradient: 0,\n    // line width in pixels\n    linewidth: 1,\n    // show/hide dashed line\n    dashes: false,\n    // length of a dash\n    dashLength: 10,\n    // length of space between two dashes\n    spaceLength: 10,\n    // show hide points\n    points: false,\n    // point radius in pixels\n    pointradius: 2,\n    // show hide bars\n    bars: false,\n    // enable/disable stacking\n    stack: false,\n    // stack percentage mode\n    percentage: false,\n    // legend options\n    legend: {\n      show: true, // disable/enable legend\n      values: false, // disable/enable legend values\n      min: false,\n      max: false,\n      current: false,\n      total: false,\n      avg: false,\n    },\n    // how null points should be handled\n    nullPointMode: 'null',\n    // staircase line mode\n    steppedLine: false,\n    // tooltip options\n    tooltip: {\n      value_type: 'individual',\n      shared: true,\n      sort: 0,\n    },\n    // time overrides\n    timeFrom: null,\n    timeShift: null,\n    // metric queries\n    targets: [{}],\n    // series color overrides\n    aliasColors: {},\n    // other style overrides\n    seriesOverrides: [],\n    thresholds: [],\n    timeRegions: [],\n    options: {\n      dataLinks: [],\n    },\n  };\n\n  /** @ngInject */\n  constructor($scope: any, $injector: auto.IInjectorService, private annotationsSrv: AnnotationsSrv) {\n    super($scope, $injector);\n\n    _.defaults(this.panel, this.panelDefaults);\n    _.defaults(this.panel.tooltip, this.panelDefaults.tooltip);\n    _.defaults(this.panel.legend, this.panelDefaults.legend);\n    _.defaults(this.panel.xaxis, this.panelDefaults.xaxis);\n    _.defaults(this.panel.options, this.panelDefaults.options);\n\n    this.useDataFrames = true;\n    this.processor = new DataProcessor(this.panel);\n    this.contextMenuCtrl = new GraphContextMenuCtrl($scope);\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-frames-received', this.onDataFramesReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n\n    this.onDataLinksChange = this.onDataLinksChange.bind(this);\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Display options', 'public/app/plugins/panel/graph/tab_display.html');\n    this.addEditorTab('Axes', axesEditorComponent);\n    this.addEditorTab('Legend', 'public/app/plugins/panel/graph/tab_legend.html');\n    this.addEditorTab('Thresholds & Time Regions', 'public/app/plugins/panel/graph/tab_thresholds_time_regions.html');\n    this.addEditorTab('Data links', 'public/app/plugins/panel/graph/tab_drilldown_links.html');\n    this.subTabIndex = 0;\n  }\n\n  onInitPanelActions(actions: any[]) {\n    actions.push({ text: 'Export CSV', click: 'ctrl.exportCsv()' });\n    actions.push({ text: 'Toggle legend', click: 'ctrl.toggleLegend()', shortcut: 'p l' });\n  }\n\n  issueQueries(datasource: any) {\n    this.annotationsPromise = this.annotationsSrv.getAnnotations({\n      dashboard: this.dashboard,\n      panel: this.panel,\n      range: this.range,\n    });\n\n    /* Wait for annotationSrv requests to get datasources to\n     * resolve before issuing queries. This allows the annotations\n     * service to fire annotations queries before graph queries\n     * (but not wait for completion). This resolves\n     * issue 11806.\n     */\n    return this.annotationsSrv.datasourcePromises.then((r: any) => {\n      return super.issueQueries(datasource);\n    });\n  }\n\n  zoomOut(evt: any) {\n    this.publishAppEvent('zoom-out', 2);\n  }\n\n  onDataSnapshotLoad(snapshotData: any) {\n    this.annotationsPromise = this.annotationsSrv.getAnnotations({\n      dashboard: this.dashboard,\n      panel: this.panel,\n      range: this.range,\n    });\n\n    const frames = getProcessedDataFrames(snapshotData);\n    this.onDataFramesReceived(frames);\n  }\n\n  onDataError(err: any) {\n    this.seriesList = [];\n    this.annotations = [];\n    this.render([]);\n  }\n\n  onDataFramesReceived(data: DataFrame[]) {\n    this.dataList = data;\n    this.seriesList = this.processor.getSeriesList({\n      dataList: this.dataList,\n      range: this.range,\n    });\n\n    this.linkVariableSuggestions = getDataLinksVariableSuggestions(data);\n\n    this.dataWarning = null;\n    const datapointsCount = this.seriesList.reduce((prev, series) => {\n      return prev + series.datapoints.length;\n    }, 0);\n\n    if (datapointsCount === 0) {\n      this.dataWarning = {\n        title: 'No data',\n        tip: 'No data returned from query',\n      };\n    } else {\n      for (const series of this.seriesList) {\n        if (series.isOutsideRange) {\n          this.dataWarning = {\n            title: 'Data outside time range',\n            tip: 'Can be caused by timezone mismatch or missing time filter in query',\n          };\n          break;\n        }\n      }\n    }\n\n    this.annotationsPromise.then(\n      (result: { alertState: any; annotations: any }) => {\n        this.loading = false;\n        this.alertState = result.alertState;\n        this.annotations = result.annotations;\n        this.render(this.seriesList);\n      },\n      () => {\n        this.loading = false;\n        this.render(this.seriesList);\n      }\n    );\n  }\n\n  onRender() {\n    if (!this.seriesList) {\n      return;\n    }\n\n    for (const series of this.seriesList) {\n      series.applySeriesOverrides(this.panel.seriesOverrides);\n\n      if (series.unit) {\n        this.panel.yaxes[series.yaxis - 1].format = series.unit;\n      }\n    }\n  }\n\n  onColorChange = (series: any, color: string) => {\n    series.setColor(getColorFromHexRgbOrName(color, config.theme.type));\n    this.panel.aliasColors[series.alias] = color;\n    this.render();\n  };\n\n  onToggleSeries = (hiddenSeries: any) => {\n    this.hiddenSeries = hiddenSeries;\n    this.render();\n  };\n\n  onToggleSort = (sortBy: any, sortDesc: any) => {\n    this.panel.legend.sort = sortBy;\n    this.panel.legend.sortDesc = sortDesc;\n    this.render();\n  };\n\n  onToggleAxis = (info: { alias: any; yaxis: any }) => {\n    let override: any = _.find(this.panel.seriesOverrides, { alias: info.alias });\n    if (!override) {\n      override = { alias: info.alias };\n      this.panel.seriesOverrides.push(override);\n    }\n    override.yaxis = info.yaxis;\n    this.render();\n  };\n\n  onDataLinksChange(dataLinks: DataLink[]) {\n    this.panel.updateOptions({\n      ...this.panel.options,\n      dataLinks,\n    });\n  }\n\n  addSeriesOverride(override: any) {\n    this.panel.seriesOverrides.push(override || {});\n  }\n\n  removeSeriesOverride(override: any) {\n    this.panel.seriesOverrides = _.without(this.panel.seriesOverrides, override);\n    this.render();\n  }\n\n  toggleLegend() {\n    this.panel.legend.show = !this.panel.legend.show;\n    this.render();\n  }\n\n  legendValuesOptionChanged() {\n    const legend = this.panel.legend;\n    legend.values = legend.min || legend.max || legend.avg || legend.current || legend.total;\n    this.render();\n  }\n\n  exportCsv() {\n    const scope = this.$scope.$new(true);\n    scope.seriesList = this.seriesList;\n    this.publishAppEvent('show-modal', {\n      templateHtml: '<export-data-modal data=\"seriesList\"></export-data-modal>',\n      scope,\n      modalClass: 'modal--narrow',\n    });\n  }\n\n  onContextMenuClose = () => {\n    this.contextMenuCtrl.toggleMenu();\n  };\n\n  formatDate = (date: DateTimeInput, format?: string) => {\n    return this.dashboard.formatDate.apply(this.dashboard, [date, format]);\n  };\n\n  getDataFrameByRefId = (refId: string) => {\n    return this.dataList.filter(dataFrame => dataFrame.refId === refId)[0];\n  };\n}\n\nexport { GraphCtrl, GraphCtrl as PanelCtrl };\n","import _ from 'lodash';\nimport { PanelCtrl } from 'app/plugins/sdk';\nimport impressionSrv from 'app/core/services/impression_srv';\nimport { auto } from 'angular';\nimport { BackendSrv } from 'app/core/services/backend_srv';\nimport { DashboardSrv } from 'app/features/dashboard/services/DashboardSrv';\n\nclass DashListCtrl extends PanelCtrl {\n  static templateUrl = 'module.html';\n  static scrollable = true;\n\n  groups: any[];\n  modes: any[];\n\n  panelDefaults: any = {\n    query: '',\n    limit: 10,\n    tags: [],\n    recent: false,\n    search: false,\n    starred: true,\n    headings: true,\n    folderId: null,\n  };\n\n  /** @ngInject */\n  constructor(\n    $scope: any,\n    $injector: auto.IInjectorService,\n    private backendSrv: BackendSrv,\n    private dashboardSrv: DashboardSrv\n  ) {\n    super($scope, $injector);\n    _.defaults(this.panel, this.panelDefaults);\n\n    if (this.panel.tag) {\n      this.panel.tags = [this.panel.tag];\n      delete this.panel.tag;\n    }\n\n    this.events.on('refresh', this.onRefresh.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n\n    this.groups = [\n      { list: [], show: false, header: 'Starred dashboards' },\n      { list: [], show: false, header: 'Recently viewed dashboards' },\n      { list: [], show: false, header: 'Search' },\n    ];\n\n    // update capability\n    if (this.panel.mode) {\n      if (this.panel.mode === 'starred') {\n        this.panel.starred = true;\n        this.panel.headings = false;\n      }\n      if (this.panel.mode === 'recently viewed') {\n        this.panel.recent = true;\n        this.panel.starred = false;\n        this.panel.headings = false;\n      }\n      if (this.panel.mode === 'search') {\n        this.panel.search = true;\n        this.panel.starred = false;\n        this.panel.headings = false;\n      }\n      delete this.panel.mode;\n    }\n  }\n\n  onInitEditMode() {\n    this.modes = ['starred', 'search', 'recently viewed'];\n    this.addEditorTab('Options', 'public/app/plugins/panel/dashlist/editor.html');\n  }\n\n  onRefresh() {\n    const promises = [];\n\n    promises.push(this.getRecentDashboards());\n    promises.push(this.getStarred());\n    promises.push(this.getSearch());\n\n    return Promise.all(promises).then(this.renderingCompleted.bind(this));\n  }\n\n  getSearch() {\n    this.groups[2].show = this.panel.search;\n    if (!this.panel.search) {\n      return Promise.resolve();\n    }\n\n    const params = {\n      limit: this.panel.limit,\n      query: this.panel.query,\n      tag: this.panel.tags,\n      folderIds: this.panel.folderId,\n      type: 'dash-db',\n    };\n\n    return this.backendSrv.search(params).then(result => {\n      this.groups[2].list = result;\n    });\n  }\n\n  getStarred() {\n    this.groups[0].show = this.panel.starred;\n    if (!this.panel.starred) {\n      return Promise.resolve();\n    }\n\n    const params = { limit: this.panel.limit, starred: 'true' };\n    return this.backendSrv.search(params).then(result => {\n      this.groups[0].list = result;\n    });\n  }\n\n  starDashboard(dash: any, evt: any) {\n    this.dashboardSrv.starDashboard(dash.id, dash.isStarred).then((newState: any) => {\n      dash.isStarred = newState;\n    });\n\n    if (evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n    }\n  }\n\n  getRecentDashboards() {\n    this.groups[1].show = this.panel.recent;\n    if (!this.panel.recent) {\n      return Promise.resolve();\n    }\n\n    const dashIds = _.take(impressionSrv.getDashboardOpened(), this.panel.limit);\n    return this.backendSrv.search({ dashboardIds: dashIds, limit: this.panel.limit }).then(result => {\n      this.groups[1].list = dashIds\n        .map(orderId => {\n          return _.find(result, dashboard => {\n            return dashboard.id === orderId;\n          });\n        })\n        .filter(el => {\n          return el !== undefined;\n        });\n    });\n  }\n\n  onFolderChange(folder: any) {\n    this.panel.folderId = folder.id;\n    this.refresh();\n  }\n}\n\nexport { DashListCtrl, DashListCtrl as PanelCtrl };\n","import _ from 'lodash';\nimport { PanelCtrl } from '../../../features/panel/panel_ctrl';\nimport { auto } from 'angular';\nimport { BackendSrv } from '@grafana/runtime';\nimport { ContextSrv } from '../../../core/services/context_srv';\n\nclass PluginListCtrl extends PanelCtrl {\n  static templateUrl = 'module.html';\n  static scrollable = true;\n\n  pluginList: any[];\n  viewModel: any;\n  isAdmin: boolean;\n\n  // Set and populate defaults\n  panelDefaults = {};\n\n  /** @ngInject */\n  constructor($scope: any, $injector: auto.IInjectorService, private backendSrv: BackendSrv, contextSrv: ContextSrv) {\n    super($scope, $injector);\n\n    _.defaults(this.panel, this.panelDefaults);\n\n    this.isAdmin = contextSrv.hasRole('Admin');\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.pluginList = [];\n    this.viewModel = [\n      { header: 'Installed Apps', list: [], type: 'app' },\n      { header: 'Installed Panels', list: [], type: 'panel' },\n      { header: 'Installed Datasources', list: [], type: 'datasource' },\n    ];\n\n    this.update();\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/app/plugins/panel/pluginlist/editor.html');\n  }\n\n  gotoPlugin(plugin: { id: any }, evt: any) {\n    if (evt) {\n      evt.stopPropagation();\n    }\n    this.$location.url(`plugins/${plugin.id}/edit`);\n  }\n\n  updateAvailable(plugin: any, $event: any) {\n    $event.stopPropagation();\n    $event.preventDefault();\n\n    const modalScope = this.$scope.$new(true);\n    modalScope.plugin = plugin;\n\n    this.publishAppEvent('show-modal', {\n      src: 'public/app/features/plugins/partials/update_instructions.html',\n      scope: modalScope,\n    });\n  }\n\n  update() {\n    this.backendSrv.get('api/plugins', { embedded: 0, core: 0 }).then(plugins => {\n      this.pluginList = plugins;\n      this.viewModel[0].list = _.filter(plugins, { type: 'app' });\n      this.viewModel[1].list = _.filter(plugins, { type: 'panel' });\n      this.viewModel[2].list = _.filter(plugins, { type: 'datasource' });\n\n      for (const plugin of this.pluginList) {\n        if (plugin.hasUpdate) {\n          plugin.state = 'has-update';\n        } else if (!plugin.enabled) {\n          plugin.state = 'not-enabled';\n        }\n      }\n    });\n  }\n}\n\nexport { PluginListCtrl, PluginListCtrl as PanelCtrl };\n","import _ from 'lodash';\nimport alertDef from '../../../features/alerting/state/alertDef';\nimport { PanelCtrl } from 'app/plugins/sdk';\n\nimport { dateMath } from '@grafana/data';\nimport { dateTime } from '@grafana/data';\nimport { auto } from 'angular';\nimport { BackendSrv } from '@grafana/runtime';\n\nclass AlertListPanel extends PanelCtrl {\n  static templateUrl = 'module.html';\n  static scrollable = true;\n\n  showOptions = [{ text: 'Current state', value: 'current' }, { text: 'Recent state changes', value: 'changes' }];\n\n  sortOrderOptions = [\n    { text: 'Alphabetical (asc)', value: 1 },\n    { text: 'Alphabetical (desc)', value: 2 },\n    { text: 'Importance', value: 3 },\n  ];\n\n  stateFilter: any = {};\n  currentAlerts: any = [];\n  alertHistory: any = [];\n  noAlertsMessage: string;\n  templateSrv: string;\n\n  // Set and populate defaults\n  panelDefaults: any = {\n    show: 'current',\n    limit: 10,\n    stateFilter: [],\n    onlyAlertsOnDashboard: false,\n    sortOrder: 1,\n    dashboardFilter: '',\n    nameFilter: '',\n    folderId: null,\n  };\n\n  /** @ngInject */\n  constructor($scope: any, $injector: auto.IInjectorService, private backendSrv: BackendSrv) {\n    super($scope, $injector);\n    _.defaults(this.panel, this.panelDefaults);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('refresh', this.onRefresh.bind(this));\n    this.templateSrv = this.$injector.get('templateSrv');\n\n    for (const key in this.panel.stateFilter) {\n      this.stateFilter[this.panel.stateFilter[key]] = true;\n    }\n  }\n\n  sortResult(alerts: any[]) {\n    if (this.panel.sortOrder === 3) {\n      return _.sortBy(alerts, a => {\n        // @ts-ignore\n        return alertDef.alertStateSortScore[a.state];\n      });\n    }\n\n    const result = _.sortBy(alerts, a => {\n      return a.name.toLowerCase();\n    });\n    if (this.panel.sortOrder === 2) {\n      result.reverse();\n    }\n\n    return result;\n  }\n\n  updateStateFilter() {\n    const result = [];\n\n    for (const key in this.stateFilter) {\n      if (this.stateFilter[key]) {\n        result.push(key);\n      }\n    }\n\n    this.panel.stateFilter = result;\n    this.onRefresh();\n  }\n\n  onRefresh() {\n    let getAlertsPromise;\n\n    if (this.panel.show === 'current') {\n      getAlertsPromise = this.getCurrentAlertState();\n    }\n\n    if (this.panel.show === 'changes') {\n      getAlertsPromise = this.getStateChanges();\n    }\n\n    getAlertsPromise.then(() => {\n      this.renderingCompleted();\n    });\n  }\n\n  onFolderChange(folder: any) {\n    this.panel.folderId = folder.id;\n    this.refresh();\n  }\n\n  getStateChanges() {\n    const params: any = {\n      limit: this.panel.limit,\n      type: 'alert',\n      newState: this.panel.stateFilter,\n    };\n\n    if (this.panel.onlyAlertsOnDashboard) {\n      params.dashboardId = this.dashboard.id;\n    }\n\n    params.from = dateMath.parse(this.dashboard.time.from).unix() * 1000;\n    params.to = dateMath.parse(this.dashboard.time.to).unix() * 1000;\n\n    return this.backendSrv.get(`/api/annotations`, params).then(res => {\n      this.alertHistory = _.map(res, al => {\n        al.time = this.dashboard.formatDate(al.time, 'MMM D, YYYY HH:mm:ss');\n        al.stateModel = alertDef.getStateDisplayModel(al.newState);\n        al.info = alertDef.getAlertAnnotationInfo(al);\n        return al;\n      });\n\n      this.noAlertsMessage = this.alertHistory.length === 0 ? 'No alerts in current time range' : '';\n\n      return this.alertHistory;\n    });\n  }\n\n  getCurrentAlertState() {\n    const params: any = {\n      state: this.panel.stateFilter,\n    };\n\n    if (this.panel.nameFilter) {\n      params.query = this.templateSrv.replace(this.panel.nameFilter, this.panel.scopedVars);\n    }\n\n    if (this.panel.folderId >= 0) {\n      params.folderId = this.panel.folderId;\n    }\n\n    if (this.panel.dashboardFilter) {\n      params.dashboardQuery = this.panel.dashboardFilter;\n    }\n\n    if (this.panel.onlyAlertsOnDashboard) {\n      params.dashboardId = this.dashboard.id;\n    }\n\n    if (this.panel.dashboardTags) {\n      params.dashboardTag = this.panel.dashboardTags;\n    }\n\n    return this.backendSrv.get(`/api/alerts`, params).then(res => {\n      this.currentAlerts = this.sortResult(\n        _.map(res, al => {\n          al.stateModel = alertDef.getStateDisplayModel(al.state);\n          al.newStateDateAgo = dateTime(al.newStateDate)\n            .locale('en')\n            .fromNow(true);\n          return al;\n        })\n      );\n      if (this.currentAlerts.length > this.panel.limit) {\n        this.currentAlerts = this.currentAlerts.slice(0, this.panel.limit);\n      }\n      this.noAlertsMessage = this.currentAlerts.length === 0 ? 'No alerts' : '';\n\n      return this.currentAlerts;\n    });\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/app/plugins/panel/alertlist/editor.html');\n  }\n}\n\nexport { AlertListPanel, AlertListPanel as PanelCtrl };\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Types\nimport { AnnoOptions } from './types';\nimport { dateTime, DurationUnit, AnnotationEvent } from '@grafana/data';\nimport { PanelProps, Tooltip } from '@grafana/ui';\nimport { getBackendSrv } from 'app/core/services/backend_srv';\nimport { AbstractList } from '@grafana/ui/src/components/List/AbstractList';\nimport { TagBadge } from 'app/core/components/TagFilter/TagBadge';\nimport { getDashboardSrv } from 'app/features/dashboard/services/DashboardSrv';\nimport appEvents from 'app/core/app_events';\n\nimport { updateLocation } from 'app/core/actions';\nimport { store } from 'app/store/store';\nimport { cx, css } from 'emotion';\n\ninterface UserInfo {\n  id: number;\n  login: string;\n  email: string;\n}\n\ninterface Props extends PanelProps<AnnoOptions> {}\ninterface State {\n  annotations: AnnotationEvent[];\n  timeInfo: string;\n  loaded: boolean;\n  queryUser?: UserInfo;\n  queryTags: string[];\n}\n\nexport class AnnoListPanel extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      annotations: [],\n      timeInfo: '',\n      loaded: false,\n      queryTags: [],\n    };\n  }\n\n  componentDidMount() {\n    this.doSearch();\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    const { options, timeRange } = this.props;\n    const needsQuery =\n      options !== prevProps.options ||\n      this.state.queryTags !== prevState.queryTags ||\n      this.state.queryUser !== prevState.queryUser ||\n      timeRange !== prevProps.timeRange;\n\n    if (needsQuery) {\n      this.doSearch();\n    }\n  }\n\n  async doSearch() {\n    // http://docs.grafana.org/http_api/annotations/\n    // https://github.com/grafana/grafana/blob/master/public/app/core/services/backend_srv.ts\n    // https://github.com/grafana/grafana/blob/master/public/app/features/annotations/annotations_srv.ts\n\n    const { options } = this.props;\n    const { queryUser, queryTags } = this.state;\n\n    const params: any = {\n      tags: options.tags,\n      limit: options.limit,\n      type: 'annotation', // Skip the Annotations that are really alerts.  (Use the alerts panel!)\n    };\n\n    if (options.onlyFromThisDashboard) {\n      params.dashboardId = getDashboardSrv().getCurrent().id;\n    }\n\n    let timeInfo = '';\n    if (options.onlyInTimeRange) {\n      const { timeRange } = this.props;\n      params.from = timeRange.from.valueOf();\n      params.to = timeRange.to.valueOf();\n    } else {\n      timeInfo = 'All Time';\n    }\n\n    if (queryUser) {\n      params.userId = queryUser.id;\n    }\n\n    if (options.tags && options.tags.length) {\n      params.tags = options.tags;\n    }\n\n    if (queryTags.length) {\n      params.tags = params.tags ? [...params.tags, ...queryTags] : queryTags;\n    }\n\n    const annotations = await getBackendSrv().get('/api/annotations', params);\n    this.setState({\n      annotations,\n      timeInfo,\n      loaded: true,\n    });\n  }\n\n  onAnnoClick = (e: React.SyntheticEvent, anno: AnnotationEvent) => {\n    e.stopPropagation();\n    const { options } = this.props;\n    const dashboardSrv = getDashboardSrv();\n    const current = dashboardSrv.getCurrent();\n\n    const params: any = {\n      from: this._timeOffset(anno.time, options.navigateBefore, true),\n      to: this._timeOffset(anno.time, options.navigateAfter, false),\n    };\n\n    if (options.navigateToPanel) {\n      params.panelId = anno.panelId;\n      params.fullscreen = true;\n    }\n\n    if (current.id === anno.dashboardId) {\n      store.dispatch(\n        updateLocation({\n          query: params,\n          partial: true,\n        })\n      );\n      return;\n    }\n\n    getBackendSrv()\n      .get('/api/search', { dashboardIds: anno.dashboardId })\n      .then((res: any[]) => {\n        if (res && res.length && res[0].id === anno.dashboardId) {\n          const dash = res[0];\n          store.dispatch(\n            updateLocation({\n              query: params,\n              path: dash.url,\n            })\n          );\n          return;\n        }\n        appEvents.emit('alert-warning', ['Unknown Dashboard: ' + anno.dashboardId]);\n      });\n  };\n\n  _timeOffset(time: number, offset: string, subtract = false): number {\n    let incr = 5;\n    let unit = 'm';\n    const parts = /^(\\d+)(\\w)/.exec(offset);\n    if (parts && parts.length === 3) {\n      incr = parseInt(parts[1], 10);\n      unit = parts[2];\n    }\n\n    const t = dateTime(time);\n    if (subtract) {\n      incr *= -1;\n    }\n    return t.add(incr, unit as DurationUnit).valueOf();\n  }\n\n  onTagClick = (e: React.SyntheticEvent, tag: string, remove: boolean) => {\n    e.stopPropagation();\n    const queryTags = remove ? this.state.queryTags.filter(item => item !== tag) : [...this.state.queryTags, tag];\n\n    this.setState({ queryTags });\n  };\n\n  onUserClick = (e: React.SyntheticEvent, anno: AnnotationEvent) => {\n    e.stopPropagation();\n    this.setState({\n      queryUser: {\n        id: anno.userId,\n        login: anno.login,\n        email: anno.email,\n      },\n    });\n  };\n\n  onClearUser = () => {\n    this.setState({\n      queryUser: undefined,\n    });\n  };\n\n  renderTags = (tags: string[], remove: boolean): JSX.Element => {\n    if (!tags || !tags.length) {\n      return null;\n    }\n    return (\n      <>\n        {tags.map(tag => {\n          return (\n            <span key={tag} onClick={e => this.onTagClick(e, tag, remove)} className=\"pointer\">\n              <TagBadge label={tag} removeIcon={remove} count={0} />\n            </span>\n          );\n        })}\n      </>\n    );\n  };\n\n  renderItem = (anno: AnnotationEvent, index: number): JSX.Element => {\n    const { options } = this.props;\n    const { showUser, showTags, showTime } = options;\n    const dashboard = getDashboardSrv().getCurrent();\n\n    return (\n      <div className=\"dashlist-item\">\n        <span\n          className=\"dashlist-link pointer\"\n          onClick={e => {\n            this.onAnnoClick(e, anno);\n          }}\n        >\n          <span\n            className={cx([\n              'dashlist-title',\n              css`\n                margin-right: 8px;\n              `,\n            ])}\n          >\n            {anno.text}\n          </span>\n\n          <span className=\"pluginlist-message\">\n            {anno.login && showUser && (\n              <span className=\"graph-annotation\">\n                <Tooltip\n                  content={\n                    <span>\n                      Created by:\n                      <br /> {anno.email}\n                    </span>\n                  }\n                  theme=\"info\"\n                  placement=\"top\"\n                >\n                  <span onClick={e => this.onUserClick(e, anno)} className=\"graph-annotation__user\">\n                    <img src={anno.avatarUrl} />\n                  </span>\n                </Tooltip>\n              </span>\n            )}\n            {showTags && this.renderTags(anno.tags, false)}\n          </span>\n\n          <span className=\"pluginlist-version\">{showTime && <span>{dashboard.formatDate(anno.time)}</span>}</span>\n        </span>\n      </div>\n    );\n  };\n\n  render() {\n    const { height } = this.props;\n    const { loaded, annotations, queryUser, queryTags } = this.state;\n    if (!loaded) {\n      return <div>loading...</div>;\n    }\n\n    // Previously we showed inidication that it covered all time\n    // { timeInfo && (\n    //   <span className=\"panel-time-info\">\n    //     <i className=\"fa fa-clock-o\" /> {timeInfo}\n    //   </span>\n    // )}\n\n    const hasFilter = queryUser || queryTags.length > 0;\n\n    return (\n      <div style={{ height, overflow: 'scroll' }}>\n        {hasFilter && (\n          <div>\n            <b>Filter: &nbsp; </b>\n            {queryUser && (\n              <span onClick={this.onClearUser} className=\"pointer\">\n                {queryUser.email}\n              </span>\n            )}\n            {queryTags.length > 0 && this.renderTags(queryTags, true)}\n          </div>\n        )}\n\n        {annotations.length < 1 && <div className=\"panel-alert-list__no-alerts\">No Annotations Found</div>}\n\n        <AbstractList\n          items={annotations}\n          renderItem={this.renderItem}\n          getItemKey={item => {\n            return item.id + '';\n          }}\n          className=\"dashlist\"\n        />\n      </div>\n    );\n  }\n}\n","export interface AnnoOptions {\n  limit: number;\n  tags: string[];\n  onlyFromThisDashboard: boolean;\n  onlyInTimeRange: boolean;\n\n  showTags: boolean;\n  showUser: boolean;\n  showTime: boolean;\n\n  navigateBefore: string;\n  navigateAfter: string;\n  navigateToPanel: boolean;\n}\n\nexport const defaults: AnnoOptions = {\n  limit: 10,\n  tags: [],\n  onlyFromThisDashboard: false,\n  onlyInTimeRange: false,\n\n  showTags: true,\n  showUser: true,\n  showTime: true,\n\n  navigateBefore: '10m',\n  navigateAfter: '10m',\n  navigateToPanel: true,\n};\n","// Libraries\nimport React, { PureComponent, ChangeEvent } from 'react';\n\n// Components\nimport { PanelEditorProps, PanelOptionsGroup, PanelOptionsGrid, Switch, FormField, FormLabel } from '@grafana/ui';\n\nimport { toIntegerOrUndefined, toNumberString } from '@grafana/data';\n\n// Types\nimport { AnnoOptions } from './types';\nimport { TagBadge } from 'app/core/components/TagFilter/TagBadge';\n\ninterface State {\n  tag: string;\n}\n\nexport class AnnoListEditor extends PureComponent<PanelEditorProps<AnnoOptions>, State> {\n  constructor(props: PanelEditorProps<AnnoOptions>) {\n    super(props);\n\n    this.state = {\n      tag: '',\n    };\n  }\n\n  // Display\n  //-----------\n\n  onToggleShowUser = () =>\n    this.props.onOptionsChange({ ...this.props.options, showUser: !this.props.options.showUser });\n\n  onToggleShowTime = () =>\n    this.props.onOptionsChange({ ...this.props.options, showTime: !this.props.options.showTime });\n\n  onToggleShowTags = () =>\n    this.props.onOptionsChange({ ...this.props.options, showTags: !this.props.options.showTags });\n\n  // Navigate\n  //-----------\n\n  onNavigateBeforeChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.props.onOptionsChange({ ...this.props.options, navigateBefore: event.target.value });\n  };\n\n  onNavigateAfterChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.props.onOptionsChange({ ...this.props.options, navigateAfter: event.target.value });\n  };\n\n  onToggleNavigateToPanel = () =>\n    this.props.onOptionsChange({ ...this.props.options, navigateToPanel: !this.props.options.navigateToPanel });\n\n  // Search\n  //-----------\n  onLimitChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const v = toIntegerOrUndefined(event.target.value);\n    this.props.onOptionsChange({ ...this.props.options, limit: v });\n  };\n\n  onToggleOnlyFromThisDashboard = () =>\n    this.props.onOptionsChange({\n      ...this.props.options,\n      onlyFromThisDashboard: !this.props.options.onlyFromThisDashboard,\n    });\n\n  onToggleOnlyInTimeRange = () =>\n    this.props.onOptionsChange({ ...this.props.options, onlyInTimeRange: !this.props.options.onlyInTimeRange });\n\n  // Tags\n  //-----------\n\n  onTagTextChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ tag: event.target.value });\n  };\n\n  onTagClick = (e: React.SyntheticEvent, tag: string) => {\n    e.stopPropagation();\n\n    const tags = this.props.options.tags.filter(item => item !== tag);\n    this.props.onOptionsChange({\n      ...this.props.options,\n      tags,\n    });\n  };\n\n  renderTags = (tags: string[]): JSX.Element => {\n    if (!tags || !tags.length) {\n      return null;\n    }\n    return (\n      <>\n        {tags.map(tag => {\n          return (\n            <span key={tag} onClick={e => this.onTagClick(e, tag)} className=\"pointer\">\n              <TagBadge label={tag} removeIcon={true} count={0} />\n            </span>\n          );\n        })}\n      </>\n    );\n  };\n\n  render() {\n    const { options } = this.props;\n    const labelWidth = 8;\n\n    return (\n      <PanelOptionsGrid>\n        <PanelOptionsGroup title=\"Display\">\n          <Switch\n            label=\"Show User\"\n            labelClass={`width-${labelWidth}`}\n            checked={options.showUser}\n            onChange={this.onToggleShowUser}\n          />\n          <Switch\n            label=\"Show Time\"\n            labelClass={`width-${labelWidth}`}\n            checked={options.showTime}\n            onChange={this.onToggleShowTime}\n          />\n          <Switch\n            label=\"Show Tags\"\n            labelClass={`width-${labelWidth}`}\n            checked={options.showTags}\n            onChange={this.onToggleShowTags}\n          />\n        </PanelOptionsGroup>\n        <PanelOptionsGroup title=\"Navigate\">\n          <FormField\n            label=\"Before\"\n            labelWidth={labelWidth}\n            onChange={this.onNavigateBeforeChange}\n            value={options.navigateBefore}\n          />\n          <FormField\n            label=\"After\"\n            labelWidth={labelWidth}\n            onChange={this.onNavigateAfterChange}\n            value={options.navigateAfter}\n          />\n          <Switch\n            label=\"To Panel\"\n            labelClass={`width-${labelWidth}`}\n            checked={options.navigateToPanel}\n            onChange={this.onToggleNavigateToPanel}\n          />\n        </PanelOptionsGroup>\n        <PanelOptionsGroup title=\"Search\">\n          <Switch\n            label=\"Only This Dashboard\"\n            labelClass={`width-12`}\n            checked={options.onlyFromThisDashboard}\n            onChange={this.onToggleOnlyFromThisDashboard}\n          />\n          <Switch\n            label=\"Within Time Range\"\n            labelClass={`width-12`}\n            checked={options.onlyInTimeRange}\n            onChange={this.onToggleOnlyInTimeRange}\n          />\n          <div className=\"form-field\">\n            <FormLabel width={6}>Tags</FormLabel>\n            {this.renderTags(options.tags)}\n            <input\n              type=\"text\"\n              className={`gf-form-input width-${8}`}\n              value={this.state.tag}\n              onChange={this.onTagTextChange}\n              onKeyPress={ev => {\n                if (this.state.tag && ev.key === 'Enter') {\n                  const tags = [...options.tags, this.state.tag];\n                  this.props.onOptionsChange({\n                    ...this.props.options,\n                    tags,\n                  });\n                  this.setState({ tag: '' });\n                  ev.preventDefault();\n                }\n              }}\n            />\n          </div>\n\n          <FormField\n            label=\"Limit\"\n            labelWidth={6}\n            onChange={this.onLimitChange}\n            value={toNumberString(options.limit)}\n            type=\"number\"\n          />\n        </PanelOptionsGroup>\n      </PanelOptionsGrid>\n    );\n  }\n}\n","import * as d3 from 'd3';\nimport * as d3ScaleChromatic from 'd3-scale-chromatic';\n\nexport function getColorScale(colorScheme: any, lightTheme: boolean, maxValue: number, minValue = 0): (d: any) => any {\n  //@ts-ignore\n  const colorInterpolator = d3ScaleChromatic[colorScheme.value];\n  const colorScaleInverted = colorScheme.invert === 'always' || colorScheme.invert === (lightTheme ? 'light' : 'dark');\n\n  const start = colorScaleInverted ? maxValue : minValue;\n  const end = colorScaleInverted ? minValue : maxValue;\n\n  return d3.scaleSequential(colorInterpolator).domain([start, end]);\n}\n\nexport function getOpacityScale(\n  options: { cardColor?: null; colorScale?: any; exponent?: any },\n  maxValue: number,\n  minValue = 0\n) {\n  let legendOpacityScale;\n  if (options.colorScale === 'linear') {\n    legendOpacityScale = d3\n      .scaleLinear()\n      .domain([minValue, maxValue])\n      .range([0, 1]);\n  } else if (options.colorScale === 'sqrt') {\n    legendOpacityScale = d3\n      .scalePow()\n      .exponent(options.exponent)\n      .domain([minValue, maxValue])\n      .range([0, 1]);\n  }\n  return legendOpacityScale;\n}\n","import { AnnoListPanel } from './AnnoListPanel';\nimport { AnnoOptions, defaults } from './types';\nimport { AnnoListEditor } from './AnnoListEditor';\nimport { PanelPlugin } from '@grafana/ui';\n\nexport const plugin = new PanelPlugin<AnnoOptions>(AnnoListPanel)\n  .setDefaults(defaults)\n  .setEditor(AnnoListEditor)\n\n  // TODO, we should support this directly in the plugin infrastructure\n  .setPanelChangeHandler((options: AnnoOptions, prevPluginId: string, prevOptions: any) => {\n    if (prevPluginId === 'ryantxu-annolist-panel') {\n      return prevOptions as AnnoOptions;\n    }\n    return options;\n  });\n","import _ from 'lodash';\nimport $ from 'jquery';\nimport * as d3 from 'd3';\nimport { contextSrv } from 'app/core/core';\nimport { tickStep } from 'app/core/utils/ticks';\nimport { getColorScale, getOpacityScale } from './color_scale';\nimport coreModule from 'app/core/core_module';\nimport { GrafanaThemeType, getColorFromHexRgbOrName } from '@grafana/ui';\n\nconst LEGEND_HEIGHT_PX = 6;\nconst LEGEND_WIDTH_PX = 100;\nconst LEGEND_TICK_SIZE = 0;\nconst LEGEND_VALUE_MARGIN = 0;\nconst LEGEND_PADDING_LEFT = 10;\nconst LEGEND_SEGMENT_WIDTH = 10;\n\n/**\n * Color legend for heatmap editor.\n */\ncoreModule.directive('colorLegend', () => {\n  return {\n    restrict: 'E',\n    template: '<div class=\"heatmap-color-legend\"><svg width=\"16.5rem\" height=\"24px\"></svg></div>',\n    link: (scope: any, elem, attrs) => {\n      const ctrl = scope.ctrl;\n      const panel = scope.ctrl.panel;\n\n      render();\n\n      ctrl.events.on('render', () => {\n        render();\n      });\n\n      function render() {\n        const legendElem = $(elem).find('svg');\n        const legendWidth = Math.floor(legendElem.outerWidth());\n\n        if (panel.color.mode === 'spectrum') {\n          const colorScheme: any = _.find(ctrl.colorSchemes, {\n            value: panel.color.colorScheme,\n          });\n          const colorScale = getColorScale(colorScheme, contextSrv.user.lightTheme, legendWidth);\n          drawSimpleColorLegend(elem, colorScale);\n        } else if (panel.color.mode === 'opacity') {\n          const colorOptions = panel.color;\n          drawSimpleOpacityLegend(elem, colorOptions);\n        }\n      }\n    },\n  };\n});\n\n/**\n * Heatmap legend with scale values.\n */\ncoreModule.directive('heatmapLegend', () => {\n  return {\n    restrict: 'E',\n    template: `<div class=\"heatmap-color-legend\"><svg width=\"${LEGEND_WIDTH_PX}px\" height=\"${LEGEND_HEIGHT_PX}px\"></svg></div>`,\n    link: (scope: any, elem, attrs) => {\n      const ctrl = scope.ctrl;\n      const panel = scope.ctrl.panel;\n\n      render();\n      ctrl.events.on('render', () => {\n        render();\n      });\n\n      function render() {\n        clearLegend(elem);\n        if (!_.isEmpty(ctrl.data) && !_.isEmpty(ctrl.data.cards)) {\n          const cardStats = ctrl.data.cardStats;\n          const rangeFrom = _.isNil(panel.color.min) ? Math.min(cardStats.min, 0) : panel.color.min;\n          const rangeTo = _.isNil(panel.color.max) ? cardStats.max : panel.color.max;\n          const maxValue = cardStats.max;\n          const minValue = cardStats.min;\n\n          if (panel.color.mode === 'spectrum') {\n            const colorScheme: any = _.find(ctrl.colorSchemes, {\n              value: panel.color.colorScheme,\n            });\n            drawColorLegend(elem, colorScheme, rangeFrom, rangeTo, maxValue, minValue);\n          } else if (panel.color.mode === 'opacity') {\n            const colorOptions = panel.color;\n            drawOpacityLegend(elem, colorOptions, rangeFrom, rangeTo, maxValue, minValue);\n          }\n        }\n      }\n    },\n  };\n});\n\nfunction drawColorLegend(\n  elem: JQuery,\n  colorScheme: any,\n  rangeFrom: number,\n  rangeTo: number,\n  maxValue: number,\n  minValue: number\n) {\n  const legendElem = $(elem).find('svg');\n  const legend = d3.select(legendElem.get(0));\n  clearLegend(elem);\n\n  const legendWidth = Math.floor(legendElem.outerWidth()) - 30;\n  const legendHeight = legendElem.attr('height');\n\n  const rangeStep = ((rangeTo - rangeFrom) / legendWidth) * LEGEND_SEGMENT_WIDTH;\n  const widthFactor = legendWidth / (rangeTo - rangeFrom);\n  const valuesRange = d3.range(rangeFrom, rangeTo, rangeStep);\n\n  const colorScale = getColorScale(colorScheme, contextSrv.user.lightTheme, maxValue, minValue);\n  legend\n    .append('g')\n    .attr('class', 'legend-color-bar')\n    .attr('transform', 'translate(' + LEGEND_PADDING_LEFT + ',0)')\n    .selectAll('.heatmap-color-legend-rect')\n    .data(valuesRange)\n    .enter()\n    .append('rect')\n    .attr('x', d => Math.round((d - rangeFrom) * widthFactor))\n    .attr('y', 0)\n    .attr('width', Math.round(rangeStep * widthFactor + 1)) // Overlap rectangles to prevent gaps\n    .attr('height', legendHeight)\n    .attr('stroke-width', 0)\n    .attr('fill', d => colorScale(d));\n\n  drawLegendValues(elem, rangeFrom, rangeTo, maxValue, minValue, legendWidth, valuesRange);\n}\n\nfunction drawOpacityLegend(\n  elem: JQuery,\n  options: { cardColor: null },\n  rangeFrom: number,\n  rangeTo: number,\n  maxValue: any,\n  minValue: number\n) {\n  const legendElem = $(elem).find('svg');\n  const legend = d3.select(legendElem.get(0));\n  clearLegend(elem);\n\n  const legendWidth = Math.floor(legendElem.outerWidth()) - 30;\n  const legendHeight = legendElem.attr('height');\n\n  const rangeStep = ((rangeTo - rangeFrom) / legendWidth) * LEGEND_SEGMENT_WIDTH;\n  const widthFactor = legendWidth / (rangeTo - rangeFrom);\n  const valuesRange = d3.range(rangeFrom, rangeTo, rangeStep);\n\n  const opacityScale = getOpacityScale(options, maxValue, minValue);\n  legend\n    .append('g')\n    .attr('class', 'legend-color-bar')\n    .attr('transform', 'translate(' + LEGEND_PADDING_LEFT + ',0)')\n    .selectAll('.heatmap-opacity-legend-rect')\n    .data(valuesRange)\n    .enter()\n    .append('rect')\n    .attr('x', d => Math.round((d - rangeFrom) * widthFactor))\n    .attr('y', 0)\n    .attr('width', Math.round(rangeStep * widthFactor))\n    .attr('height', legendHeight)\n    .attr('stroke-width', 0)\n    .attr('fill', options.cardColor)\n    .style('opacity', d => opacityScale(d));\n\n  drawLegendValues(elem, rangeFrom, rangeTo, maxValue, minValue, legendWidth, valuesRange);\n}\n\nfunction drawLegendValues(\n  elem: JQuery,\n  rangeFrom: number,\n  rangeTo: number,\n  maxValue: any,\n  minValue: any,\n  legendWidth: number,\n  valuesRange: number[]\n) {\n  const legendElem = $(elem).find('svg');\n  const legend = d3.select(legendElem.get(0));\n\n  if (legendWidth <= 0 || legendElem.get(0).childNodes.length === 0) {\n    return;\n  }\n\n  const legendValueScale = d3\n    .scaleLinear()\n    .domain([rangeFrom, rangeTo])\n    .range([0, legendWidth]);\n\n  const ticks = buildLegendTicks(rangeFrom, rangeTo, maxValue, minValue);\n  const xAxis = d3\n    .axisBottom(legendValueScale)\n    .tickValues(ticks)\n    .tickSize(LEGEND_TICK_SIZE);\n\n  const colorRect = legendElem.find(':first-child');\n  const posY = getSvgElemHeight(legendElem) + LEGEND_VALUE_MARGIN;\n  const posX = getSvgElemX(colorRect) + LEGEND_PADDING_LEFT;\n\n  d3.select(legendElem.get(0))\n    .append('g')\n    .attr('class', 'axis')\n    .attr('transform', 'translate(' + posX + ',' + posY + ')')\n    .call(xAxis);\n\n  legend\n    .select('.axis')\n    .select('.domain')\n    .remove();\n}\n\nfunction drawSimpleColorLegend(elem: JQuery, colorScale: any) {\n  const legendElem = $(elem).find('svg');\n  clearLegend(elem);\n\n  const legendWidth = Math.floor(legendElem.outerWidth());\n  const legendHeight = legendElem.attr('height');\n\n  if (legendWidth) {\n    const valuesNumber = Math.floor(legendWidth / 2);\n    const rangeStep = Math.floor(legendWidth / valuesNumber);\n    const valuesRange = d3.range(0, legendWidth, rangeStep);\n\n    const legend = d3.select(legendElem.get(0));\n    const legendRects = legend.selectAll('.heatmap-color-legend-rect').data(valuesRange);\n\n    legendRects\n      .enter()\n      .append('rect')\n      .attr('x', d => d)\n      .attr('y', 0)\n      .attr('width', rangeStep + 1) // Overlap rectangles to prevent gaps\n      .attr('height', legendHeight)\n      .attr('stroke-width', 0)\n      .attr('fill', d => colorScale(d));\n  }\n}\n\nfunction drawSimpleOpacityLegend(elem: JQuery, options: { colorScale: string; exponent: number; cardColor: string }) {\n  const legendElem = $(elem).find('svg');\n  clearLegend(elem);\n\n  const legend = d3.select(legendElem.get(0));\n  const legendWidth = Math.floor(legendElem.outerWidth());\n  const legendHeight = legendElem.attr('height');\n\n  if (legendWidth) {\n    let legendOpacityScale: any;\n    if (options.colorScale === 'linear') {\n      legendOpacityScale = d3\n        .scaleLinear()\n        .domain([0, legendWidth])\n        .range([0, 1]);\n    } else if (options.colorScale === 'sqrt') {\n      legendOpacityScale = d3\n        .scalePow()\n        .exponent(options.exponent)\n        .domain([0, legendWidth])\n        .range([0, 1]);\n    }\n\n    const rangeStep = 10;\n    const valuesRange = d3.range(0, legendWidth, rangeStep);\n    const legendRects = legend.selectAll('.heatmap-opacity-legend-rect').data(valuesRange);\n\n    legendRects\n      .enter()\n      .append('rect')\n      .attr('x', d => d)\n      .attr('y', 0)\n      .attr('width', rangeStep)\n      .attr('height', legendHeight)\n      .attr('stroke-width', 0)\n      .attr(\n        'fill',\n        getColorFromHexRgbOrName(\n          options.cardColor,\n          contextSrv.user.lightTheme ? GrafanaThemeType.Light : GrafanaThemeType.Dark\n        )\n      )\n      .style('opacity', d => legendOpacityScale(d));\n  }\n}\n\nfunction clearLegend(elem: JQuery) {\n  const legendElem = $(elem).find('svg');\n  legendElem.empty();\n}\n\nfunction getSvgElemX(elem: JQuery) {\n  const svgElem: any = elem.get(0) as any;\n  if (svgElem && svgElem.x && svgElem.x.baseVal) {\n    return svgElem.x.baseVal.value;\n  } else {\n    return 0;\n  }\n}\n\nfunction getSvgElemHeight(elem: JQuery) {\n  const svgElem: any = elem.get(0);\n  if (svgElem && svgElem.height && svgElem.height.baseVal) {\n    return svgElem.height.baseVal.value;\n  } else {\n    return 0;\n  }\n}\n\nfunction buildLegendTicks(rangeFrom: number, rangeTo: number, maxValue: number, minValue: number) {\n  const range = rangeTo - rangeFrom;\n  const tickStepSize = tickStep(rangeFrom, rangeTo, 3);\n  const ticksNum = Math.ceil(range / tickStepSize);\n  const firstTick = getFirstCloseTick(rangeFrom, tickStepSize);\n  let ticks = [];\n\n  for (let i = 0; i < ticksNum; i++) {\n    const current = firstTick + tickStepSize * i;\n    // Add user-defined min and max if it had been set\n    if (isValueCloseTo(minValue, current, tickStepSize)) {\n      ticks.push(minValue);\n      continue;\n    } else if (minValue < current) {\n      ticks.push(minValue);\n    }\n    if (isValueCloseTo(maxValue, current, tickStepSize)) {\n      ticks.push(maxValue);\n      continue;\n    } else if (maxValue < current) {\n      ticks.push(maxValue);\n    }\n    ticks.push(current);\n  }\n  if (!isValueCloseTo(maxValue, rangeTo, tickStepSize)) {\n    ticks.push(maxValue);\n  }\n  ticks.push(rangeTo);\n  ticks = _.sortBy(_.uniq(ticks));\n  return ticks;\n}\n\nfunction isValueCloseTo(val: number, valueTo: number, step: number) {\n  const diff = Math.abs(val - valueTo);\n  return diff < step * 0.3;\n}\n\nfunction getFirstCloseTick(minValue: number, step: number) {\n  if (minValue < 0) {\n    return Math.floor(minValue / step) * step;\n  }\n  return 0;\n}\n","import kbn from 'app/core/utils/kbn';\nexport class AxesEditorCtrl {\n  panel: any;\n  panelCtrl: any;\n  unitFormats: any;\n  logScales: any;\n  dataFormats: any;\n  yBucketBoundModes: any;\n\n  /** @ngInject */\n  constructor($scope: any, uiSegmentSrv: any) {\n    $scope.editor = this;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n    this.unitFormats = kbn.getUnitFormats();\n\n    this.logScales = {\n      linear: 1,\n      'log (base 2)': 2,\n      'log (base 10)': 10,\n      'log (base 32)': 32,\n      'log (base 1024)': 1024,\n    };\n\n    this.dataFormats = {\n      'Time series': 'timeseries',\n      'Time series buckets': 'tsbuckets',\n    };\n\n    this.yBucketBoundModes = {\n      Auto: 'auto',\n      Upper: 'upper',\n      Lower: 'lower',\n      Middle: 'middle',\n    };\n  }\n\n  setUnitFormat(subItem: any) {\n    this.panel.yAxis.format = subItem.value;\n    this.panelCtrl.render();\n  }\n}\n\n/** @ngInject */\nexport function axesEditor() {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/app/plugins/panel/heatmap/partials/axes_editor.html',\n    controller: AxesEditorCtrl,\n  };\n}\n","export class HeatmapDisplayEditorCtrl {\n  panel: any;\n  panelCtrl: any;\n\n  /** @ngInject */\n  constructor($scope: any) {\n    $scope.editor = this;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n\n    this.panelCtrl.render();\n  }\n}\n\n/** @ngInject */\nexport function heatmapDisplayEditor() {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/app/plugins/panel/heatmap/partials/display_editor.html',\n    controller: HeatmapDisplayEditorCtrl,\n  };\n}\n","import _ from 'lodash';\nimport { TimeSeries } from 'app/core/core';\nimport { Bucket, HeatmapCard, HeatmapCardStats, YBucket, XBucket } from './types';\n\nconst VALUE_INDEX = 0;\nconst TIME_INDEX = 1;\n\n/**\n * Convert histogram represented by the list of series to heatmap object.\n * @param seriesList List of time series\n */\nfunction histogramToHeatmap(seriesList: TimeSeries[]) {\n  const heatmap: any = {};\n\n  for (let i = 0; i < seriesList.length; i++) {\n    const series = seriesList[i];\n    const bound = i;\n    if (isNaN(bound)) {\n      return heatmap;\n    }\n\n    for (const point of series.datapoints) {\n      const count = point[VALUE_INDEX];\n      const time = point[TIME_INDEX];\n\n      if (!_.isNumber(count)) {\n        continue;\n      }\n\n      let bucket = heatmap[time];\n      if (!bucket) {\n        bucket = heatmap[time] = { x: time, buckets: {} };\n      }\n\n      bucket.buckets[bound] = {\n        y: bound,\n        count: count,\n        bounds: {\n          top: null,\n          bottom: bound,\n        },\n        values: [],\n        points: [],\n      };\n    }\n  }\n\n  return heatmap;\n}\n\n/**\n * Sort series representing histogram by label value.\n */\nfunction sortSeriesByLabel(s1: { label: string }, s2: { label: string }) {\n  let label1, label2;\n\n  try {\n    // fail if not integer. might happen with bad queries\n    label1 = parseHistogramLabel(s1.label);\n    label2 = parseHistogramLabel(s2.label);\n  } catch (err) {\n    console.log(err.message || err);\n    return 0;\n  }\n\n  if (label1 > label2) {\n    return 1;\n  }\n\n  if (label1 < label2) {\n    return -1;\n  }\n\n  return 0;\n}\n\nfunction parseHistogramLabel(label: string): number {\n  if (label === '+Inf' || label === 'inf') {\n    return +Infinity;\n  }\n  const value = Number(label);\n  if (isNaN(value)) {\n    throw new Error(`Error parsing histogram label: ${label} is not a number`);\n  }\n  return value;\n}\n\n/**\n * Convert buckets into linear array of \"cards\" - objects, represented heatmap elements.\n * @param  {Object} buckets\n * @return {Object}          Array of \"card\" objects and stats\n */\nfunction convertToCards(buckets: any, hideZero = false): { cards: HeatmapCard[]; cardStats: HeatmapCardStats } {\n  let min = 0,\n    max = 0;\n  const cards: HeatmapCard[] = [];\n  _.forEach(buckets, xBucket => {\n    _.forEach(xBucket.buckets, yBucket => {\n      const card: HeatmapCard = {\n        x: xBucket.x,\n        y: yBucket.y,\n        yBounds: yBucket.bounds,\n        values: yBucket.values,\n        count: yBucket.count,\n      };\n      if (!hideZero || card.count !== 0) {\n        cards.push(card);\n      }\n\n      if (cards.length === 1) {\n        min = yBucket.count;\n        max = yBucket.count;\n      }\n\n      min = yBucket.count < min ? yBucket.count : min;\n      max = yBucket.count > max ? yBucket.count : max;\n    });\n  });\n\n  const cardStats = { min, max };\n  return { cards, cardStats };\n}\n\n/**\n * Special method for log scales. When series converted into buckets with log scale,\n * for simplification, 0 values are converted into 0, not into -Infinity. On the other hand, we mean\n * that all values less than series minimum, is 0 values, and we create special \"minimum\" bucket for\n * that values (actually, there're no values less than minimum, so this bucket is empty).\n *  8-16|    | ** |    |  * |  **|\n *   4-8|  * |*  *|*   |** *| *  |\n *   2-4| * *|    | ***|    |*   |\n *   1-2|*   |    |    |    |    | This bucket contains minimum series value\n * 0.5-1|____|____|____|____|____| This bucket should be displayed as 0 on graph\n *     0|____|____|____|____|____| This bucket is for 0 values (should actually be -Infinity)\n * So we should merge two bottom buckets into one (0-value bucket).\n *\n * @param  {Object} buckets  Heatmap buckets\n * @param  {Number} minValue Minimum series value\n * @return {Object}          Transformed buckets\n */\nfunction mergeZeroBuckets(buckets: any, minValue: number) {\n  _.forEach(buckets, xBucket => {\n    const yBuckets = xBucket.buckets;\n\n    const emptyBucket: any = {\n      bounds: { bottom: 0, top: 0 },\n      values: [],\n      points: [],\n      count: 0,\n    };\n\n    const nullBucket = yBuckets[0] || emptyBucket;\n    const minBucket = yBuckets[minValue] || emptyBucket;\n\n    const newBucket: any = {\n      y: 0,\n      bounds: { bottom: minValue, top: minBucket.bounds.top || minValue },\n      values: [],\n      points: [],\n      count: 0,\n    };\n\n    newBucket.points = nullBucket.points.concat(minBucket.points);\n    newBucket.values = nullBucket.values.concat(minBucket.values);\n    newBucket.count = newBucket.values.length;\n\n    if (newBucket.count === 0) {\n      return;\n    }\n\n    delete yBuckets[minValue];\n    yBuckets[0] = newBucket;\n  });\n\n  return buckets;\n}\n\n/**\n * Convert set of time series into heatmap buckets\n * @return {Object}    Heatmap object:\n * {\n *   xBucketBound_1: {\n *     x: xBucketBound_1,\n *     buckets: {\n *       yBucketBound_1: {\n *         y: yBucketBound_1,\n *         bounds: {bottom, top}\n *         values: [val_1, val_2, ..., val_K],\n *         points: [[val_Y, val_X, series_name], ..., [...]],\n *         seriesStat: {seriesName_1: val_1, seriesName_2: val_2}\n *       },\n *       ...\n *       yBucketBound_M: {}\n *     },\n *     values: [val_1, val_2, ..., val_K],\n *     points: [\n *       [val_Y, val_X, series_name], (point_1)\n *       ...\n *       [...] (point_K)\n *     ]\n *   },\n *   xBucketBound_2: {},\n *   ...\n *   xBucketBound_N: {}\n * }\n */\nfunction convertToHeatMap(seriesList: TimeSeries[], yBucketSize: number, xBucketSize: number, logBase = 1) {\n  const heatmap = {};\n\n  for (const series of seriesList) {\n    const datapoints = series.datapoints;\n    const seriesName = series.label;\n\n    // Slice series into X axis buckets\n    // |    | ** |    |  * |  **|\n    // |  * |*  *|*   |** *| *  |\n    // |** *|    | ***|    |*   |\n    // |____|____|____|____|____|_\n    //\n    _.forEach(datapoints, point => {\n      const bucketBound = getBucketBound(point[TIME_INDEX], xBucketSize);\n      pushToXBuckets(heatmap, point, bucketBound, seriesName);\n    });\n  }\n\n  // Slice X axis buckets into Y (value) buckets\n  // |  **|     |2|,\n  // | *  | --\\ |1|,\n  // |*   | --/ |1|,\n  // |____|     |0|\n  //\n  _.forEach(heatmap, (xBucket: any) => {\n    if (logBase !== 1) {\n      xBucket.buckets = convertToLogScaleValueBuckets(xBucket, yBucketSize, logBase);\n    } else {\n      xBucket.buckets = convertToValueBuckets(xBucket, yBucketSize);\n    }\n  });\n\n  return heatmap;\n}\n\nfunction pushToXBuckets(buckets: any, point: any[], bucketNum: number, seriesName: string) {\n  const value = point[VALUE_INDEX];\n  if (value === null || value === undefined || isNaN(value)) {\n    return;\n  }\n\n  // Add series name to point for future identification\n  const pointExt = _.concat(point, seriesName);\n\n  if (buckets[bucketNum] && buckets[bucketNum].values) {\n    buckets[bucketNum].values.push(value);\n    buckets[bucketNum].points.push(pointExt);\n  } else {\n    buckets[bucketNum] = {\n      x: bucketNum,\n      values: [value],\n      points: [pointExt],\n    };\n  }\n}\n\nfunction pushToYBuckets(\n  buckets: Bucket,\n  bucketNum: number,\n  value: any,\n  point: string[],\n  bounds: { bottom: number; top: number }\n) {\n  let count = 1;\n  // Use the 3rd argument as scale/count\n  if (point.length > 3) {\n    count = parseInt(point[2], 10);\n  }\n  if (buckets[bucketNum]) {\n    buckets[bucketNum].values.push(value);\n    buckets[bucketNum].points.push(point);\n    buckets[bucketNum].count += count;\n  } else {\n    buckets[bucketNum] = {\n      y: bucketNum,\n      bounds: bounds,\n      values: [value],\n      points: [point],\n      count: count,\n    };\n  }\n}\n\nfunction getValueBucketBound(value: any, yBucketSize: number, logBase: number) {\n  if (logBase === 1) {\n    return getBucketBound(value, yBucketSize);\n  } else {\n    return getLogScaleBucketBound(value, yBucketSize, logBase);\n  }\n}\n\n/**\n * Find bucket for given value (for linear scale)\n */\nfunction getBucketBounds(value: number, bucketSize: number) {\n  let bottom, top;\n  bottom = Math.floor(value / bucketSize) * bucketSize;\n  top = (Math.floor(value / bucketSize) + 1) * bucketSize;\n\n  return { bottom, top };\n}\n\nfunction getBucketBound(value: number, bucketSize: number) {\n  const bounds = getBucketBounds(value, bucketSize);\n  return bounds.bottom;\n}\n\nfunction convertToValueBuckets(xBucket: { values: any; points: any }, bucketSize: number) {\n  const values = xBucket.values;\n  const points = xBucket.points;\n  const buckets = {};\n\n  _.forEach(values, (val, index) => {\n    const bounds = getBucketBounds(val, bucketSize);\n    const bucketNum = bounds.bottom;\n    pushToYBuckets(buckets, bucketNum, val, points[index], bounds);\n  });\n\n  return buckets;\n}\n\n/**\n * Find bucket for given value (for log scales)\n */\nfunction getLogScaleBucketBounds(value: number, yBucketSplitFactor: number, logBase: number) {\n  let top, bottom;\n  if (value === 0) {\n    return { bottom: 0, top: 0 };\n  }\n\n  const valueLog = logp(value, logBase);\n  let pow, powTop;\n  if (yBucketSplitFactor === 1 || !yBucketSplitFactor) {\n    pow = Math.floor(valueLog);\n    powTop = pow + 1;\n  } else {\n    const additionalBucketSize = 1 / yBucketSplitFactor;\n    let additionalLog = valueLog - Math.floor(valueLog);\n    additionalLog = Math.floor(additionalLog / additionalBucketSize) * additionalBucketSize;\n    pow = Math.floor(valueLog) + additionalLog;\n    powTop = pow + additionalBucketSize;\n  }\n  bottom = Math.pow(logBase, pow);\n  top = Math.pow(logBase, powTop);\n\n  return { bottom, top };\n}\n\nfunction getLogScaleBucketBound(value: number, yBucketSplitFactor: number, logBase: number) {\n  const bounds = getLogScaleBucketBounds(value, yBucketSplitFactor, logBase);\n  return bounds.bottom;\n}\n\nfunction convertToLogScaleValueBuckets(\n  xBucket: { values: any; points: any },\n  yBucketSplitFactor: number,\n  logBase: number\n) {\n  const values = xBucket.values;\n  const points = xBucket.points;\n\n  const buckets = {};\n  _.forEach(values, (val, index) => {\n    const bounds = getLogScaleBucketBounds(val, yBucketSplitFactor, logBase);\n    const bucketNum = bounds.bottom;\n    pushToYBuckets(buckets, bucketNum, val, points[index], bounds);\n  });\n\n  return buckets;\n}\n\n/**\n * Logarithm for custom base\n * @param value\n * @param base logarithm base\n */\nfunction logp(value: number, base: number) {\n  return Math.log(value) / Math.log(base);\n}\n\n/**\n * Calculate size of Y bucket from given buckets bounds.\n * @param bounds Array of Y buckets bounds\n * @param logBase Logarithm base\n */\nfunction calculateBucketSize(bounds: number[], logBase = 1): number {\n  let bucketSize = Infinity;\n\n  if (bounds.length === 0) {\n    return 0;\n  } else if (bounds.length === 1) {\n    return bounds[0];\n  } else {\n    bounds = _.sortBy(bounds);\n    for (let i = 1; i < bounds.length; i++) {\n      const distance = getDistance(bounds[i], bounds[i - 1], logBase);\n      bucketSize = distance < bucketSize ? distance : bucketSize;\n    }\n  }\n\n  return bucketSize;\n}\n\n/**\n * Calculate distance between two numbers in given scale (linear or logarithmic).\n * @param a\n * @param b\n * @param logBase\n */\nfunction getDistance(a: number, b: number, logBase = 1): number {\n  if (logBase === 1) {\n    // Linear distance\n    return Math.abs(b - a);\n  } else {\n    // logarithmic distance\n    const ratio = Math.max(a, b) / Math.min(a, b);\n    return logp(ratio, logBase);\n  }\n}\n\n/**\n * Compare two heatmap data objects\n * @param objA\n * @param objB\n */\nfunction isHeatmapDataEqual(objA: any, objB: any): boolean {\n  let isEql = !emptyXOR(objA, objB);\n\n  _.forEach(objA, (xBucket: XBucket, x) => {\n    if (objB[x]) {\n      if (emptyXOR(xBucket.buckets, objB[x].buckets)) {\n        isEql = false;\n        return false;\n      }\n\n      _.forEach(xBucket.buckets, (yBucket: YBucket, y) => {\n        if (objB[x].buckets && objB[x].buckets[y]) {\n          if (objB[x].buckets[y].values) {\n            isEql = _.isEqual(_.sortBy(yBucket.values), _.sortBy(objB[x].buckets[y].values));\n            if (!isEql) {\n              return false;\n            } else {\n              return true;\n            }\n          } else {\n            isEql = false;\n            return false;\n          }\n        } else {\n          isEql = false;\n          return false;\n        }\n      });\n\n      if (!isEql) {\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      isEql = false;\n      return false;\n    }\n  });\n\n  return isEql;\n}\n\nfunction emptyXOR(foo: any, bar: any): boolean {\n  return (_.isEmpty(foo) || _.isEmpty(bar)) && !(_.isEmpty(foo) && _.isEmpty(bar));\n}\n\nexport {\n  convertToHeatMap,\n  histogramToHeatmap,\n  convertToCards,\n  mergeZeroBuckets,\n  getValueBucketBound,\n  isHeatmapDataEqual,\n  calculateBucketSize,\n  sortSeriesByLabel,\n};\n","import * as d3 from 'd3';\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport { getValueBucketBound } from './heatmap_data_converter';\nimport { getValueFormat } from '@grafana/ui';\n\nconst TOOLTIP_PADDING_X = 30;\nconst TOOLTIP_PADDING_Y = 5;\nconst HISTOGRAM_WIDTH = 160;\nconst HISTOGRAM_HEIGHT = 40;\n\nexport class HeatmapTooltip {\n  tooltip: any;\n  scope: any;\n  dashboard: any;\n  panelCtrl: any;\n  panel: any;\n  heatmapPanel: any;\n  mouseOverBucket: boolean;\n  originalFillColor: any;\n\n  constructor(elem: JQuery, scope: any) {\n    this.scope = scope;\n    this.dashboard = scope.ctrl.dashboard;\n    this.panelCtrl = scope.ctrl;\n    this.panel = scope.ctrl.panel;\n    this.heatmapPanel = elem;\n    this.mouseOverBucket = false;\n    this.originalFillColor = null;\n\n    elem.on('mouseleave', this.onMouseLeave.bind(this));\n  }\n\n  onMouseLeave() {\n    this.destroy();\n  }\n\n  onMouseMove(e: any) {\n    if (!this.panel.tooltip.show) {\n      return;\n    }\n\n    this.move(e);\n  }\n\n  add() {\n    this.tooltip = d3\n      .select('body')\n      .append('div')\n      .attr('class', 'heatmap-tooltip graph-tooltip grafana-tooltip');\n  }\n\n  destroy() {\n    if (this.tooltip) {\n      this.tooltip.remove();\n    }\n\n    this.tooltip = null;\n  }\n\n  show(pos: { panelRelY: any }, data: any) {\n    if (!this.panel.tooltip.show || !data) {\n      return;\n    }\n    // shared tooltip mode\n    if (pos.panelRelY) {\n      return;\n    }\n\n    const { xBucketIndex, yBucketIndex } = this.getBucketIndexes(pos, data);\n\n    if (!data.buckets[xBucketIndex]) {\n      this.destroy();\n      return;\n    }\n\n    if (!this.tooltip) {\n      this.add();\n    }\n\n    let boundBottom, boundTop, valuesNumber;\n    const xData = data.buckets[xBucketIndex];\n    // Search in special 'zero' bucket also\n    const yData: any = _.find(xData.buckets, (bucket, bucketIndex) => {\n      return bucket.bounds.bottom === yBucketIndex || bucketIndex === yBucketIndex.toString();\n    });\n\n    const tooltipTimeFormat = 'YYYY-MM-DD HH:mm:ss';\n    const time = this.dashboard.formatDate(xData.x, tooltipTimeFormat);\n\n    // Decimals override. Code from panel/graph/graph.ts\n    let countValueFormatter, bucketBoundFormatter;\n    if (_.isNumber(this.panel.tooltipDecimals)) {\n      countValueFormatter = this.countValueFormatter(this.panel.tooltipDecimals, null);\n      bucketBoundFormatter = this.panelCtrl.tickValueFormatter(this.panelCtrl.decimals, null);\n    } else {\n      // auto decimals\n      // legend and tooltip gets one more decimal precision\n      // than graph legend ticks\n      const decimals = (this.panelCtrl.decimals || -1) + 1;\n      countValueFormatter = this.countValueFormatter(decimals, this.panelCtrl.scaledDecimals + 2);\n      bucketBoundFormatter = this.panelCtrl.tickValueFormatter(decimals, this.panelCtrl.scaledDecimals + 2);\n    }\n\n    let tooltipHtml = `<div class=\"graph-tooltip-time\">${time}</div>\n      <div class=\"heatmap-histogram\"></div>`;\n\n    if (yData) {\n      if (yData.bounds) {\n        if (data.tsBuckets) {\n          // Use Y-axis labels\n          const tickFormatter = (valIndex: string | number) => {\n            return data.tsBucketsFormatted ? data.tsBucketsFormatted[valIndex] : data.tsBuckets[valIndex];\n          };\n\n          boundBottom = tickFormatter(yBucketIndex);\n          if (this.panel.yBucketBound !== 'middle') {\n            boundTop = yBucketIndex < data.tsBuckets.length - 1 ? tickFormatter(yBucketIndex + 1) : '';\n          }\n        } else {\n          // Display 0 if bucket is a special 'zero' bucket\n          const bottom = yData.y ? yData.bounds.bottom : 0;\n          boundBottom = bucketBoundFormatter(bottom);\n          boundTop = bucketBoundFormatter(yData.bounds.top);\n        }\n        valuesNumber = countValueFormatter(yData.count);\n        const boundStr = boundTop && boundBottom ? `${boundBottom} - ${boundTop}` : boundBottom || boundTop;\n        tooltipHtml += `<div>\n          bucket: <b>${boundStr}</b> <br>\n          count: <b>${valuesNumber}</b> <br>\n        </div>`;\n      } else {\n        // currently no bounds for pre bucketed data\n        tooltipHtml += `<div>count: <b>${yData.count}</b><br></div>`;\n      }\n    } else {\n      if (!this.panel.tooltip.showHistogram) {\n        this.destroy();\n        return;\n      }\n      boundBottom = yBucketIndex;\n      boundTop = '';\n      valuesNumber = 0;\n    }\n\n    this.tooltip.html(tooltipHtml);\n\n    if (this.panel.tooltip.showHistogram) {\n      this.addHistogram(xData);\n    }\n\n    this.move(pos);\n  }\n\n  getBucketIndexes(pos: { panelRelY?: any; x?: any; y?: any }, data: any) {\n    const xBucketIndex = this.getXBucketIndex(pos.x, data);\n    const yBucketIndex = this.getYBucketIndex(pos.y, data);\n    return { xBucketIndex, yBucketIndex };\n  }\n\n  getXBucketIndex(x: number, data: { buckets: any; xBucketSize: number }) {\n    // First try to find X bucket by checking x pos is in the\n    // [bucket.x, bucket.x + xBucketSize] interval\n    const xBucket: any = _.find(data.buckets, bucket => {\n      return x > bucket.x && x - bucket.x <= data.xBucketSize;\n    });\n    return xBucket ? xBucket.x : getValueBucketBound(x, data.xBucketSize, 1);\n  }\n\n  getYBucketIndex(y: number, data: { tsBuckets: any; yBucketSize: number }) {\n    if (data.tsBuckets) {\n      return Math.floor(y);\n    }\n    const yBucketIndex = getValueBucketBound(y, data.yBucketSize, this.panel.yAxis.logBase);\n    return yBucketIndex;\n  }\n\n  getSharedTooltipPos(pos: { pageX: any; x: any; pageY: any; panelRelY: number }) {\n    // get pageX from position on x axis and pageY from relative position in original panel\n    pos.pageX = this.heatmapPanel.offset().left + this.scope.xScale(pos.x);\n    pos.pageY = this.heatmapPanel.offset().top + this.scope.chartHeight * pos.panelRelY;\n    return pos;\n  }\n\n  addHistogram(data: { x: string | number }) {\n    const xBucket = this.scope.ctrl.data.buckets[data.x];\n    const yBucketSize = this.scope.ctrl.data.yBucketSize;\n    let min: number, max: number, ticks: number;\n    if (this.scope.ctrl.data.tsBuckets) {\n      min = 0;\n      max = this.scope.ctrl.data.tsBuckets.length - 1;\n      ticks = this.scope.ctrl.data.tsBuckets.length;\n    } else {\n      min = this.scope.ctrl.data.yAxis.min;\n      max = this.scope.ctrl.data.yAxis.max;\n      ticks = this.scope.ctrl.data.yAxis.ticks;\n    }\n    let histogramData = _.map(xBucket.buckets, bucket => {\n      const count = bucket.count !== undefined ? bucket.count : bucket.values.length;\n      return [bucket.bounds.bottom, count];\n    });\n    histogramData = _.filter(histogramData, d => {\n      return d[0] >= min && d[0] <= max;\n    });\n\n    const scale = this.scope.yScale.copy();\n    const histXScale = scale.domain([min, max]).range([0, HISTOGRAM_WIDTH]);\n\n    let barWidth: number;\n    if (this.panel.yAxis.logBase === 1) {\n      barWidth = Math.floor((HISTOGRAM_WIDTH / (max - min)) * yBucketSize * 0.9);\n    } else {\n      const barNumberFactor = yBucketSize ? yBucketSize : 1;\n      barWidth = Math.floor((HISTOGRAM_WIDTH / ticks / barNumberFactor) * 0.9);\n    }\n    barWidth = Math.max(barWidth, 1);\n\n    // Normalize histogram Y axis\n    const histogramDomain = _.reduce(_.map(histogramData, d => d[1]), (sum, val) => sum + val, 0);\n    const histYScale = d3\n      .scaleLinear()\n      .domain([0, histogramDomain])\n      .range([0, HISTOGRAM_HEIGHT]);\n\n    const histogram = this.tooltip\n      .select('.heatmap-histogram')\n      .append('svg')\n      .attr('width', HISTOGRAM_WIDTH)\n      .attr('height', HISTOGRAM_HEIGHT);\n\n    histogram\n      .selectAll('.bar')\n      .data(histogramData)\n      .enter()\n      .append('rect')\n      .attr('x', (d: any[]) => {\n        return histXScale(d[0]);\n      })\n      .attr('width', barWidth)\n      .attr('y', (d: any[]) => {\n        return HISTOGRAM_HEIGHT - histYScale(d[1]);\n      })\n      .attr('height', (d: any[]) => {\n        return histYScale(d[1]);\n      });\n  }\n\n  move(pos: { panelRelY?: any; pageX?: any; pageY?: any }) {\n    if (!this.tooltip) {\n      return;\n    }\n\n    const elem = $(this.tooltip.node())[0];\n    const tooltipWidth = elem.clientWidth;\n    const tooltipHeight = elem.clientHeight;\n\n    let left = pos.pageX + TOOLTIP_PADDING_X;\n    let top = pos.pageY + TOOLTIP_PADDING_Y;\n\n    if (pos.pageX + tooltipWidth + 40 > window.innerWidth) {\n      left = pos.pageX - tooltipWidth - TOOLTIP_PADDING_X;\n    }\n\n    if (pos.pageY - window.pageYOffset + tooltipHeight + 20 > window.innerHeight) {\n      top = pos.pageY - tooltipHeight - TOOLTIP_PADDING_Y;\n    }\n\n    return this.tooltip.style('left', left + 'px').style('top', top + 'px');\n  }\n\n  countValueFormatter(decimals: number, scaledDecimals: any = null) {\n    const format = 'short';\n    return (value: number) => {\n      return getValueFormat(format)(value, decimals, scaledDecimals);\n    };\n  }\n}\n","import _ from 'lodash';\nimport $ from 'jquery';\nimport * as d3 from 'd3';\nimport { appEvents, contextSrv } from 'app/core/core';\nimport * as ticksUtils from 'app/core/utils/ticks';\nimport { HeatmapTooltip } from './heatmap_tooltip';\nimport { mergeZeroBuckets } from './heatmap_data_converter';\nimport { getColorScale, getOpacityScale } from './color_scale';\nimport { GrafanaThemeType, getColorFromHexRgbOrName, getValueFormat } from '@grafana/ui';\nimport { toUtc } from '@grafana/data';\n\nconst MIN_CARD_SIZE = 1,\n  CARD_PADDING = 1,\n  CARD_ROUND = 0,\n  DATA_RANGE_WIDING_FACTOR = 1.2,\n  DEFAULT_X_TICK_SIZE_PX = 100,\n  DEFAULT_Y_TICK_SIZE_PX = 50,\n  X_AXIS_TICK_PADDING = 10,\n  Y_AXIS_TICK_PADDING = 5,\n  MIN_SELECTION_WIDTH = 2;\n\nexport default function rendering(scope: any, elem: any, attrs: any, ctrl: any) {\n  return new HeatmapRenderer(scope, elem, attrs, ctrl);\n}\nexport class HeatmapRenderer {\n  width: number;\n  height: number;\n  yScale: any;\n  xScale: any;\n  chartWidth: number;\n  chartHeight: number;\n  chartTop: number;\n  chartBottom: number;\n  yAxisWidth: number;\n  xAxisHeight: number;\n  cardPadding: number;\n  cardRound: number;\n  cardWidth: number;\n  cardHeight: number;\n  colorScale: any;\n  opacityScale: any;\n  mouseUpHandler: any;\n  data: any;\n  panel: any;\n  $heatmap: any;\n  tooltip: HeatmapTooltip;\n  heatmap: any;\n  timeRange: any;\n\n  selection: any;\n  padding: any;\n  margin: any;\n  dataRangeWidingFactor: number;\n  constructor(private scope: any, private elem: any, attrs: any, private ctrl: any) {\n    // $heatmap is JQuery object, but heatmap is D3\n    this.$heatmap = this.elem.find('.heatmap-panel');\n    this.tooltip = new HeatmapTooltip(this.$heatmap, this.scope);\n\n    this.selection = {\n      active: false,\n      x1: -1,\n      x2: -1,\n    };\n\n    this.padding = { left: 0, right: 0, top: 0, bottom: 0 };\n    this.margin = { left: 25, right: 15, top: 10, bottom: 20 };\n    this.dataRangeWidingFactor = DATA_RANGE_WIDING_FACTOR;\n\n    this.ctrl.events.on('render', this.onRender.bind(this));\n\n    this.ctrl.tickValueFormatter = this.tickValueFormatter.bind(this);\n\n    /////////////////////////////\n    // Selection and crosshair //\n    /////////////////////////////\n\n    // Shared crosshair and tooltip\n    appEvents.on('graph-hover', this.onGraphHover.bind(this), this.scope);\n\n    appEvents.on('graph-hover-clear', this.onGraphHoverClear.bind(this), this.scope);\n\n    // Register selection listeners\n    this.$heatmap.on('mousedown', this.onMouseDown.bind(this));\n    this.$heatmap.on('mousemove', this.onMouseMove.bind(this));\n    this.$heatmap.on('mouseleave', this.onMouseLeave.bind(this));\n  }\n\n  onGraphHoverClear() {\n    this.clearCrosshair();\n  }\n\n  onGraphHover(event: { pos: any }) {\n    this.drawSharedCrosshair(event.pos);\n  }\n\n  onRender() {\n    this.render();\n    this.ctrl.renderingCompleted();\n  }\n\n  setElementHeight() {\n    try {\n      let height = this.ctrl.height || this.panel.height || this.ctrl.row.height;\n      if (_.isString(height)) {\n        height = parseInt(height.replace('px', ''), 10);\n      }\n\n      height -= this.panel.legend.show ? 28 : 11; // bottom padding and space for legend\n\n      this.$heatmap.css('height', height + 'px');\n\n      return true;\n    } catch (e) {\n      // IE throws errors sometimes\n      return false;\n    }\n  }\n\n  getYAxisWidth(elem: any) {\n    const axisText = elem.selectAll('.axis-y text').nodes();\n    const maxTextWidth = _.max(\n      _.map(axisText, text => {\n        // Use SVG getBBox method\n        return text.getBBox().width;\n      })\n    );\n\n    return maxTextWidth;\n  }\n\n  getXAxisHeight(elem: any) {\n    const axisLine = elem.select('.axis-x line');\n    if (!axisLine.empty()) {\n      const axisLinePosition = parseFloat(elem.select('.axis-x line').attr('y2'));\n      const canvasWidth = parseFloat(elem.attr('height'));\n      return canvasWidth - axisLinePosition;\n    } else {\n      // Default height\n      return 30;\n    }\n  }\n\n  addXAxis() {\n    this.scope.xScale = this.xScale = d3\n      .scaleTime()\n      .domain([this.timeRange.from, this.timeRange.to])\n      .range([0, this.chartWidth]);\n\n    const ticks = this.chartWidth / DEFAULT_X_TICK_SIZE_PX;\n    const grafanaTimeFormatter = ticksUtils.grafanaTimeFormat(ticks, this.timeRange.from, this.timeRange.to);\n    let timeFormat;\n    const dashboardTimeZone = this.ctrl.dashboard.getTimezone();\n    if (dashboardTimeZone === 'utc') {\n      timeFormat = d3.utcFormat(grafanaTimeFormatter);\n    } else {\n      timeFormat = d3.timeFormat(grafanaTimeFormatter);\n    }\n\n    const xAxis = d3\n      .axisBottom(this.xScale)\n      .ticks(ticks)\n      .tickFormat(timeFormat)\n      .tickPadding(X_AXIS_TICK_PADDING)\n      .tickSize(this.chartHeight);\n\n    const posY = this.margin.top;\n    const posX = this.yAxisWidth;\n    this.heatmap\n      .append('g')\n      .attr('class', 'axis axis-x')\n      .attr('transform', 'translate(' + posX + ',' + posY + ')')\n      .call(xAxis);\n\n    // Remove horizontal line in the top of axis labels (called domain in d3)\n    this.heatmap\n      .select('.axis-x')\n      .select('.domain')\n      .remove();\n  }\n\n  addYAxis() {\n    let ticks = Math.ceil(this.chartHeight / DEFAULT_Y_TICK_SIZE_PX);\n    let tickInterval = ticksUtils.tickStep(this.data.heatmapStats.min, this.data.heatmapStats.max, ticks);\n    let { yMin, yMax } = this.wideYAxisRange(this.data.heatmapStats.min, this.data.heatmapStats.max, tickInterval);\n\n    // Rewrite min and max if it have been set explicitly\n    yMin = this.panel.yAxis.min !== null ? this.panel.yAxis.min : yMin;\n    yMax = this.panel.yAxis.max !== null ? this.panel.yAxis.max : yMax;\n\n    // Adjust ticks after Y range widening\n    tickInterval = ticksUtils.tickStep(yMin, yMax, ticks);\n    ticks = Math.ceil((yMax - yMin) / tickInterval);\n\n    const decimalsAuto = ticksUtils.getPrecision(tickInterval);\n    let decimals = this.panel.yAxis.decimals === null ? decimalsAuto : this.panel.yAxis.decimals;\n    // Calculate scaledDecimals for log scales using tick size (as in jquery.flot.js)\n    const flotTickSize = ticksUtils.getFlotTickSize(yMin, yMax, ticks, decimalsAuto);\n    const scaledDecimals = ticksUtils.getScaledDecimals(decimals, flotTickSize);\n    this.ctrl.decimals = decimals;\n    this.ctrl.scaledDecimals = scaledDecimals;\n\n    // Set default Y min and max if no data\n    if (_.isEmpty(this.data.buckets)) {\n      yMax = 1;\n      yMin = -1;\n      ticks = 3;\n      decimals = 1;\n    }\n\n    this.data.yAxis = {\n      min: yMin,\n      max: yMax,\n      ticks: ticks,\n    };\n\n    this.scope.yScale = this.yScale = d3\n      .scaleLinear()\n      .domain([yMin, yMax])\n      .range([this.chartHeight, 0]);\n\n    const yAxis = d3\n      .axisLeft(this.yScale)\n      .ticks(ticks)\n      .tickFormat(this.tickValueFormatter(decimals, scaledDecimals))\n      .tickSizeInner(0 - this.width)\n      .tickSizeOuter(0)\n      .tickPadding(Y_AXIS_TICK_PADDING);\n\n    this.heatmap\n      .append('g')\n      .attr('class', 'axis axis-y')\n      .call(yAxis);\n\n    // Calculate Y axis width first, then move axis into visible area\n    const posY = this.margin.top;\n    const posX = this.getYAxisWidth(this.heatmap) + Y_AXIS_TICK_PADDING;\n    this.heatmap.select('.axis-y').attr('transform', 'translate(' + posX + ',' + posY + ')');\n\n    // Remove vertical line in the right of axis labels (called domain in d3)\n    this.heatmap\n      .select('.axis-y')\n      .select('.domain')\n      .remove();\n  }\n\n  // Wide Y values range and anjust to bucket size\n  wideYAxisRange(min: number, max: number, tickInterval: number) {\n    const yWiding = (max * (this.dataRangeWidingFactor - 1) - min * (this.dataRangeWidingFactor - 1)) / 2;\n    let yMin, yMax;\n\n    if (tickInterval === 0) {\n      yMax = max * this.dataRangeWidingFactor;\n      yMin = min - min * (this.dataRangeWidingFactor - 1);\n    } else {\n      yMax = Math.ceil((max + yWiding) / tickInterval) * tickInterval;\n      yMin = Math.floor((min - yWiding) / tickInterval) * tickInterval;\n    }\n\n    // Don't wide axis below 0 if all values are positive\n    if (min >= 0 && yMin < 0) {\n      yMin = 0;\n    }\n\n    return { yMin, yMax };\n  }\n\n  addLogYAxis() {\n    const logBase = this.panel.yAxis.logBase;\n    let { yMin, yMax } = this.adjustLogRange(this.data.heatmapStats.minLog, this.data.heatmapStats.max, logBase);\n\n    yMin =\n      this.panel.yAxis.min && this.panel.yAxis.min !== '0' ? this.adjustLogMin(this.panel.yAxis.min, logBase) : yMin;\n    yMax = this.panel.yAxis.max !== null ? this.adjustLogMax(this.panel.yAxis.max, logBase) : yMax;\n\n    // Set default Y min and max if no data\n    if (_.isEmpty(this.data.buckets)) {\n      yMax = Math.pow(logBase, 2);\n      yMin = 1;\n    }\n\n    this.scope.yScale = this.yScale = d3\n      .scaleLog()\n      .base(this.panel.yAxis.logBase)\n      .domain([yMin, yMax])\n      .range([this.chartHeight, 0]);\n\n    const domain = this.yScale.domain();\n    const tickValues = this.logScaleTickValues(domain, logBase);\n\n    const decimalsAuto = ticksUtils.getPrecision(yMin);\n    const decimals = this.panel.yAxis.decimals || decimalsAuto;\n\n    // Calculate scaledDecimals for log scales using tick size (as in jquery.flot.js)\n    const flotTickSize = ticksUtils.getFlotTickSize(yMin, yMax, tickValues.length, decimalsAuto);\n    const scaledDecimals = ticksUtils.getScaledDecimals(decimals, flotTickSize);\n    this.ctrl.decimals = decimals;\n    this.ctrl.scaledDecimals = scaledDecimals;\n\n    this.data.yAxis = {\n      min: yMin,\n      max: yMax,\n      ticks: tickValues.length,\n    };\n\n    const yAxis = d3\n      .axisLeft(this.yScale)\n      .tickValues(tickValues)\n      .tickFormat(this.tickValueFormatter(decimals, scaledDecimals))\n      .tickSizeInner(0 - this.width)\n      .tickSizeOuter(0)\n      .tickPadding(Y_AXIS_TICK_PADDING);\n\n    this.heatmap\n      .append('g')\n      .attr('class', 'axis axis-y')\n      .call(yAxis);\n\n    // Calculate Y axis width first, then move axis into visible area\n    const posY = this.margin.top;\n    const posX = this.getYAxisWidth(this.heatmap) + Y_AXIS_TICK_PADDING;\n    this.heatmap.select('.axis-y').attr('transform', 'translate(' + posX + ',' + posY + ')');\n\n    // Set first tick as pseudo 0\n    if (yMin < 1) {\n      this.heatmap\n        .select('.axis-y')\n        .select('.tick text')\n        .text('0');\n    }\n\n    // Remove vertical line in the right of axis labels (called domain in d3)\n    this.heatmap\n      .select('.axis-y')\n      .select('.domain')\n      .remove();\n  }\n\n  addYAxisFromBuckets() {\n    const tsBuckets = this.data.tsBuckets;\n\n    this.scope.yScale = this.yScale = d3\n      .scaleLinear()\n      .domain([0, tsBuckets.length - 1])\n      .range([this.chartHeight, 0]);\n\n    const tickValues = _.map(tsBuckets, (b, i) => i);\n    const decimalsAuto = _.max(_.map(tsBuckets, ticksUtils.getStringPrecision));\n    const decimals = this.panel.yAxis.decimals === null ? decimalsAuto : this.panel.yAxis.decimals;\n    this.ctrl.decimals = decimals;\n\n    const tickValueFormatter = this.tickValueFormatter.bind(this);\n    function tickFormatter(valIndex: string) {\n      let valueFormatted = tsBuckets[valIndex];\n      if (!_.isNaN(_.toNumber(valueFormatted)) && valueFormatted !== '') {\n        // Try to format numeric tick labels\n        valueFormatted = tickValueFormatter(decimals)(_.toNumber(valueFormatted));\n      }\n      return valueFormatted;\n    }\n\n    const tsBucketsFormatted = _.map(tsBuckets, (v, i) => tickFormatter(i));\n    this.data.tsBucketsFormatted = tsBucketsFormatted;\n\n    const yAxis = d3\n      .axisLeft(this.yScale)\n      .tickValues(tickValues)\n      .tickFormat(tickFormatter)\n      .tickSizeInner(0 - this.width)\n      .tickSizeOuter(0)\n      .tickPadding(Y_AXIS_TICK_PADDING);\n\n    this.heatmap\n      .append('g')\n      .attr('class', 'axis axis-y')\n      .call(yAxis);\n\n    // Calculate Y axis width first, then move axis into visible area\n    const posY = this.margin.top;\n    const posX = this.getYAxisWidth(this.heatmap) + Y_AXIS_TICK_PADDING;\n    this.heatmap.select('.axis-y').attr('transform', 'translate(' + posX + ',' + posY + ')');\n\n    if (this.panel.yBucketBound === 'middle' && tickValues && tickValues.length) {\n      // Shift Y axis labels to the middle of bucket\n      const tickShift = 0 - this.chartHeight / (tickValues.length - 1) / 2;\n      this.heatmap.selectAll('.axis-y text').attr('transform', 'translate(' + 0 + ',' + tickShift + ')');\n    }\n\n    // Remove vertical line in the right of axis labels (called domain in d3)\n    this.heatmap\n      .select('.axis-y')\n      .select('.domain')\n      .remove();\n  }\n\n  // Adjust data range to log base\n  adjustLogRange(min: number, max: number, logBase: number) {\n    let yMin = this.data.heatmapStats.minLog;\n    if (this.data.heatmapStats.minLog > 1 || !this.data.heatmapStats.minLog) {\n      yMin = 1;\n    } else {\n      yMin = this.adjustLogMin(this.data.heatmapStats.minLog, logBase);\n    }\n\n    // Adjust max Y value to log base\n    const yMax = this.adjustLogMax(this.data.heatmapStats.max, logBase);\n\n    return { yMin, yMax };\n  }\n\n  adjustLogMax(max: number, base: number) {\n    return Math.pow(base, Math.ceil(ticksUtils.logp(max, base)));\n  }\n\n  adjustLogMin(min: number, base: number) {\n    return Math.pow(base, Math.floor(ticksUtils.logp(min, base)));\n  }\n\n  logScaleTickValues(domain: any[], base: number) {\n    const domainMin = domain[0];\n    const domainMax = domain[1];\n    const tickValues = [];\n\n    if (domainMin < 1) {\n      const underOneTicks = Math.floor(ticksUtils.logp(domainMin, base));\n      for (let i = underOneTicks; i < 0; i++) {\n        const tickValue = Math.pow(base, i);\n        tickValues.push(tickValue);\n      }\n    }\n\n    const ticks = Math.ceil(ticksUtils.logp(domainMax, base));\n    for (let i = 0; i <= ticks; i++) {\n      const tickValue = Math.pow(base, i);\n      tickValues.push(tickValue);\n    }\n\n    return tickValues;\n  }\n\n  tickValueFormatter(decimals: number, scaledDecimals: any = null) {\n    const format = this.panel.yAxis.format;\n    return (value: any) => {\n      try {\n        return format !== 'none' ? getValueFormat(format)(value, decimals, scaledDecimals) : value;\n      } catch (err) {\n        console.error(err.message || err);\n        return value;\n      }\n    };\n  }\n\n  fixYAxisTickSize() {\n    this.heatmap\n      .select('.axis-y')\n      .selectAll('.tick line')\n      .attr('x2', this.chartWidth);\n  }\n\n  addAxes() {\n    this.chartHeight = this.height - this.margin.top - this.margin.bottom;\n    this.chartTop = this.margin.top;\n    this.chartBottom = this.chartTop + this.chartHeight;\n    if (this.panel.dataFormat === 'tsbuckets') {\n      this.addYAxisFromBuckets();\n    } else {\n      if (this.panel.yAxis.logBase === 1) {\n        this.addYAxis();\n      } else {\n        this.addLogYAxis();\n      }\n    }\n\n    this.yAxisWidth = this.getYAxisWidth(this.heatmap) + Y_AXIS_TICK_PADDING;\n    this.chartWidth = this.width - this.yAxisWidth - this.margin.right;\n    this.fixYAxisTickSize();\n\n    this.addXAxis();\n    this.xAxisHeight = this.getXAxisHeight(this.heatmap);\n\n    if (!this.panel.yAxis.show) {\n      this.heatmap\n        .select('.axis-y')\n        .selectAll('line')\n        .style('opacity', 0);\n    }\n\n    if (!this.panel.xAxis.show) {\n      this.heatmap\n        .select('.axis-x')\n        .selectAll('line')\n        .style('opacity', 0);\n    }\n  }\n\n  addHeatmapCanvas() {\n    const heatmapElem = this.$heatmap[0];\n\n    this.width = Math.floor(this.$heatmap.width()) - this.padding.right;\n    this.height = Math.floor(this.$heatmap.height()) - this.padding.bottom;\n\n    this.cardPadding = this.panel.cards.cardPadding !== null ? this.panel.cards.cardPadding : CARD_PADDING;\n    this.cardRound = this.panel.cards.cardRound !== null ? this.panel.cards.cardRound : CARD_ROUND;\n\n    if (this.heatmap) {\n      this.heatmap.remove();\n    }\n\n    this.heatmap = d3\n      .select(heatmapElem)\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height);\n  }\n\n  addHeatmap() {\n    this.addHeatmapCanvas();\n    this.addAxes();\n\n    if (this.panel.yAxis.logBase !== 1 && this.panel.dataFormat !== 'tsbuckets') {\n      const logBase = this.panel.yAxis.logBase;\n      const domain = this.yScale.domain();\n      const tickValues = this.logScaleTickValues(domain, logBase);\n      this.data.buckets = mergeZeroBuckets(this.data.buckets, _.min(tickValues)!);\n    }\n\n    const cardsData = this.data.cards;\n    const cardStats = this.data.cardStats;\n    const maxValueAuto = cardStats.max;\n    const minValueAuto = Math.min(cardStats.min, 0);\n    const maxValue = _.isNil(this.panel.color.max) ? maxValueAuto : this.panel.color.max;\n    const minValue = _.isNil(this.panel.color.min) ? minValueAuto : this.panel.color.min;\n    const colorScheme: any = _.find(this.ctrl.colorSchemes, {\n      value: this.panel.color.colorScheme,\n    });\n    this.colorScale = getColorScale(colorScheme, contextSrv.user.lightTheme, maxValue, minValue);\n    this.opacityScale = getOpacityScale(this.panel.color, maxValue, minValue);\n    this.setCardSize();\n\n    let cards = this.heatmap.selectAll('.heatmap-card').data(cardsData);\n    cards.append('title');\n    cards = cards\n      .enter()\n      .append('rect')\n      .attr('x', this.getCardX.bind(this))\n      .attr('width', this.getCardWidth.bind(this))\n      .attr('y', this.getCardY.bind(this))\n      .attr('height', this.getCardHeight.bind(this))\n      .attr('rx', this.cardRound)\n      .attr('ry', this.cardRound)\n      .attr('class', 'bordered heatmap-card')\n      .style('fill', this.getCardColor.bind(this))\n      .style('stroke', this.getCardColor.bind(this))\n      .style('stroke-width', 0)\n      .style('opacity', this.getCardOpacity.bind(this));\n\n    const $cards = this.$heatmap.find('.heatmap-card');\n    $cards\n      .on('mouseenter', (event: any) => {\n        this.tooltip.mouseOverBucket = true;\n        this.highlightCard(event);\n      })\n      .on('mouseleave', (event: any) => {\n        this.tooltip.mouseOverBucket = false;\n        this.resetCardHighLight(event);\n      });\n  }\n\n  highlightCard(event: any) {\n    const color = d3.select(event.target).style('fill');\n    const highlightColor = d3.color(color).darker(2);\n    const strokeColor = d3.color(color).brighter(4);\n    const currentCard = d3.select(event.target);\n    this.tooltip.originalFillColor = color;\n    currentCard\n      .style('fill', highlightColor.toString())\n      .style('stroke', strokeColor.toString())\n      .style('stroke-width', 1);\n  }\n\n  resetCardHighLight(event: any) {\n    d3.select(event.target)\n      .style('fill', this.tooltip.originalFillColor)\n      .style('stroke', this.tooltip.originalFillColor)\n      .style('stroke-width', 0);\n  }\n\n  setCardSize() {\n    const xGridSize = Math.floor(this.xScale(this.data.xBucketSize) - this.xScale(0));\n    let yGridSize = Math.floor(this.yScale(this.yScale.invert(0) - this.data.yBucketSize));\n\n    if (this.panel.yAxis.logBase !== 1) {\n      const base = this.panel.yAxis.logBase;\n      const splitFactor = this.data.yBucketSize || 1;\n      yGridSize = Math.floor((this.yScale(1) - this.yScale(base)) / splitFactor);\n    }\n\n    const cardWidth = xGridSize - this.cardPadding * 2;\n    this.cardWidth = Math.max(cardWidth, MIN_CARD_SIZE);\n    this.cardHeight = yGridSize ? yGridSize - this.cardPadding * 2 : 0;\n  }\n\n  getCardX(d: { x: any }) {\n    let x;\n    if (this.xScale(d.x) < 0) {\n      // Cut card left to prevent overlay\n      x = this.yAxisWidth + this.cardPadding;\n    } else {\n      x = this.xScale(d.x) + this.yAxisWidth + this.cardPadding;\n    }\n\n    return x;\n  }\n\n  getCardWidth(d: { x: any }) {\n    let w = this.cardWidth;\n    if (this.xScale(d.x) < 0) {\n      // Cut card left to prevent overlay\n      w = this.xScale(d.x) + this.cardWidth;\n    } else if (this.xScale(d.x) + this.cardWidth > this.chartWidth) {\n      // Cut card right to prevent overlay\n      w = this.chartWidth - this.xScale(d.x) - this.cardPadding;\n    }\n\n    // Card width should be MIN_CARD_SIZE at least, but cut cards shouldn't be displayed\n    w = w > 0 ? Math.max(w, MIN_CARD_SIZE) : 0;\n    return w;\n  }\n\n  getCardY(d: { y: number }) {\n    let y = this.yScale(d.y) + this.chartTop - this.cardHeight - this.cardPadding;\n    if (this.panel.yAxis.logBase !== 1 && d.y === 0) {\n      y = this.chartBottom - this.cardHeight - this.cardPadding;\n    } else {\n      if (y < this.chartTop) {\n        y = this.chartTop;\n      }\n    }\n\n    return y;\n  }\n\n  getCardHeight(d: { y: number }) {\n    const y = this.yScale(d.y) + this.chartTop - this.cardHeight - this.cardPadding;\n    let h = this.cardHeight;\n\n    if (this.panel.yAxis.logBase !== 1 && d.y === 0) {\n      return this.cardHeight;\n    }\n\n    // Cut card height to prevent overlay\n    if (y < this.chartTop) {\n      h = this.yScale(d.y) - this.cardPadding;\n    } else if (this.yScale(d.y) > this.chartBottom) {\n      h = this.chartBottom - y;\n    } else if (y + this.cardHeight > this.chartBottom) {\n      h = this.chartBottom - y;\n    }\n\n    // Height can't be more than chart height\n    h = Math.min(h, this.chartHeight);\n    // Card height should be MIN_CARD_SIZE at least\n    h = Math.max(h, MIN_CARD_SIZE);\n\n    return h;\n  }\n\n  getCardColor(d: { count: any }) {\n    if (this.panel.color.mode === 'opacity') {\n      return getColorFromHexRgbOrName(\n        this.panel.color.cardColor,\n        contextSrv.user.lightTheme ? GrafanaThemeType.Light : GrafanaThemeType.Dark\n      );\n    } else {\n      return this.colorScale(d.count);\n    }\n  }\n\n  getCardOpacity(d: { count: any }) {\n    if (this.panel.color.mode === 'opacity') {\n      return this.opacityScale(d.count);\n    } else {\n      return 1;\n    }\n  }\n\n  getEventOffset(event: any) {\n    const elemOffset = this.$heatmap.offset();\n    const x = Math.floor(event.clientX - elemOffset.left);\n    const y = Math.floor(event.clientY - elemOffset.top);\n    return { x, y };\n  }\n\n  onMouseDown(event: any) {\n    const offset = this.getEventOffset(event);\n    this.selection.active = true;\n    this.selection.x1 = offset.x;\n\n    this.mouseUpHandler = () => {\n      this.onMouseUp();\n    };\n\n    $(document).one('mouseup', this.mouseUpHandler.bind(this));\n  }\n\n  onMouseUp() {\n    $(document).unbind('mouseup', this.mouseUpHandler.bind(this));\n    this.mouseUpHandler = null;\n    this.selection.active = false;\n\n    const selectionRange = Math.abs(this.selection.x2 - this.selection.x1);\n    if (this.selection.x2 >= 0 && selectionRange > MIN_SELECTION_WIDTH) {\n      const timeFrom = this.xScale.invert(Math.min(this.selection.x1, this.selection.x2) - this.yAxisWidth);\n      const timeTo = this.xScale.invert(Math.max(this.selection.x1, this.selection.x2) - this.yAxisWidth);\n\n      this.ctrl.timeSrv.setTime({\n        from: toUtc(timeFrom),\n        to: toUtc(timeTo),\n      });\n    }\n\n    this.clearSelection();\n  }\n\n  onMouseLeave() {\n    appEvents.emit('graph-hover-clear');\n    this.clearCrosshair();\n  }\n\n  onMouseMove(event: any) {\n    if (!this.heatmap) {\n      return;\n    }\n\n    const offset = this.getEventOffset(event);\n    if (this.selection.active) {\n      // Clear crosshair and tooltip\n      this.clearCrosshair();\n      this.tooltip.destroy();\n\n      this.selection.x2 = this.limitSelection(offset.x);\n      this.drawSelection(this.selection.x1, this.selection.x2);\n    } else {\n      const pos = this.getEventPos(event, offset);\n      this.drawCrosshair(offset.x);\n      this.tooltip.show(pos, this.data);\n      this.emitGraphHoverEvent(pos);\n    }\n  }\n\n  getEventPos(event: { pageX: any; pageY: any }, offset: { x: any; y: any }) {\n    const x = this.xScale.invert(offset.x - this.yAxisWidth).valueOf();\n    const y = this.yScale.invert(offset.y - this.chartTop);\n    const pos: any = {\n      pageX: event.pageX,\n      pageY: event.pageY,\n      x: x,\n      x1: x,\n      y: y,\n      y1: y,\n      panelRelY: null,\n      offset,\n    };\n\n    return pos;\n  }\n\n  emitGraphHoverEvent(pos: { panelRelY: number; offset: { y: number } }) {\n    // Set minimum offset to prevent showing legend from another panel\n    pos.panelRelY = Math.max(pos.offset.y / this.height, 0.001);\n    // broadcast to other graph panels that we are hovering\n    appEvents.emit('graph-hover', { pos: pos, panel: this.panel });\n  }\n\n  limitSelection(x2: number) {\n    x2 = Math.max(x2, this.yAxisWidth);\n    x2 = Math.min(x2, this.chartWidth + this.yAxisWidth);\n    return x2;\n  }\n\n  drawSelection(posX1: number, posX2: number) {\n    if (this.heatmap) {\n      this.heatmap.selectAll('.heatmap-selection').remove();\n      const selectionX = Math.min(posX1, posX2);\n      const selectionWidth = Math.abs(posX1 - posX2);\n\n      if (selectionWidth > MIN_SELECTION_WIDTH) {\n        this.heatmap\n          .append('rect')\n          .attr('class', 'heatmap-selection')\n          .attr('x', selectionX)\n          .attr('width', selectionWidth)\n          .attr('y', this.chartTop)\n          .attr('height', this.chartHeight);\n      }\n    }\n  }\n\n  clearSelection() {\n    this.selection.x1 = -1;\n    this.selection.x2 = -1;\n\n    if (this.heatmap) {\n      this.heatmap.selectAll('.heatmap-selection').remove();\n    }\n  }\n\n  drawCrosshair(position: number) {\n    if (this.heatmap) {\n      this.heatmap.selectAll('.heatmap-crosshair').remove();\n\n      let posX = position;\n      posX = Math.max(posX, this.yAxisWidth);\n      posX = Math.min(posX, this.chartWidth + this.yAxisWidth);\n\n      this.heatmap\n        .append('g')\n        .attr('class', 'heatmap-crosshair')\n        .attr('transform', 'translate(' + posX + ',0)')\n        .append('line')\n        .attr('x1', 1)\n        .attr('y1', this.chartTop)\n        .attr('x2', 1)\n        .attr('y2', this.chartBottom)\n        .attr('stroke-width', 1);\n    }\n  }\n\n  drawSharedCrosshair(pos: { x: any }) {\n    if (this.heatmap && this.ctrl.dashboard.graphTooltip !== 0) {\n      const posX = this.xScale(pos.x) + this.yAxisWidth;\n      this.drawCrosshair(posX);\n    }\n  }\n\n  clearCrosshair() {\n    if (this.heatmap) {\n      this.heatmap.selectAll('.heatmap-crosshair').remove();\n    }\n  }\n\n  render() {\n    this.data = this.ctrl.data;\n    this.panel = this.ctrl.panel;\n    this.timeRange = this.ctrl.range;\n\n    if (!this.setElementHeight() || !this.data) {\n      return;\n    }\n\n    // Draw default axes and return if no data\n    if (_.isEmpty(this.data.buckets)) {\n      this.addHeatmapCanvas();\n      this.addAxes();\n      return;\n    }\n\n    this.addHeatmap();\n    this.scope.yAxisWidth = this.yAxisWidth;\n    this.scope.xAxisHeight = this.xAxisHeight;\n    this.scope.chartHeight = this.chartHeight;\n    this.scope.chartWidth = this.chartWidth;\n    this.scope.chartTop = this.chartTop;\n  }\n}\n","import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport TimeSeries from 'app/core/time_series2';\nimport { axesEditor } from './axes_editor';\nimport { heatmapDisplayEditor } from './display_editor';\nimport rendering from './rendering';\nimport {\n  convertToHeatMap,\n  convertToCards,\n  histogramToHeatmap,\n  calculateBucketSize,\n  sortSeriesByLabel,\n} from './heatmap_data_converter';\nimport { auto } from 'angular';\nimport { LegacyResponseData } from '@grafana/ui';\nimport { getProcessedDataFrames } from 'app/features/dashboard/state/runRequest';\nimport { DataFrame } from '@grafana/data';\nimport { DataProcessor } from '../graph/data_processor';\n\nconst X_BUCKET_NUMBER_DEFAULT = 30;\nconst Y_BUCKET_NUMBER_DEFAULT = 10;\n\nconst panelDefaults: any = {\n  heatmap: {},\n  cards: {\n    cardPadding: null,\n    cardRound: null,\n  },\n  color: {\n    mode: 'spectrum',\n    cardColor: '#b4ff00',\n    colorScale: 'sqrt',\n    exponent: 0.5,\n    colorScheme: 'interpolateOranges',\n  },\n  legend: {\n    show: false,\n  },\n  dataFormat: 'timeseries',\n  yBucketBound: 'auto',\n  reverseYBuckets: false,\n  xAxis: {\n    show: true,\n  },\n  yAxis: {\n    show: true,\n    format: 'short',\n    decimals: null,\n    logBase: 1,\n    splitFactor: null,\n    min: null,\n    max: null,\n  },\n  xBucketSize: null,\n  xBucketNumber: null,\n  yBucketSize: null,\n  yBucketNumber: null,\n  tooltip: {\n    show: true,\n    showHistogram: false,\n  },\n  highlightCards: true,\n  hideZeroBuckets: false,\n};\n\nconst colorModes = ['opacity', 'spectrum'];\nconst opacityScales = ['linear', 'sqrt'];\n\n// Schemes from d3-scale-chromatic\n// https://github.com/d3/d3-scale-chromatic\nconst colorSchemes = [\n  // Diverging\n  { name: 'Spectral', value: 'interpolateSpectral', invert: 'always' },\n  { name: 'RdYlGn', value: 'interpolateRdYlGn', invert: 'always' },\n\n  // Sequential (Single Hue)\n  { name: 'Blues', value: 'interpolateBlues', invert: 'dark' },\n  { name: 'Greens', value: 'interpolateGreens', invert: 'dark' },\n  { name: 'Greys', value: 'interpolateGreys', invert: 'dark' },\n  { name: 'Oranges', value: 'interpolateOranges', invert: 'dark' },\n  { name: 'Purples', value: 'interpolatePurples', invert: 'dark' },\n  { name: 'Reds', value: 'interpolateReds', invert: 'dark' },\n\n  // Sequential (Multi-Hue)\n  { name: 'Turbo', value: 'interpolateTurbo', invert: 'light' },\n  { name: 'Cividis', value: 'interpolateCividis', invert: 'light' },\n  { name: 'Viridis', value: 'interpolateViridis', invert: 'light' },\n  { name: 'Magma', value: 'interpolateMagma', invert: 'light' },\n  { name: 'Inferno', value: 'interpolateInferno', invert: 'light' },\n  { name: 'Plasma', value: 'interpolatePlasma', invert: 'light' },\n  { name: 'Warm', value: 'interpolateWarm', invert: 'light' },\n  { name: 'Cool', value: 'interpolateCool', invert: 'light' },\n  { name: 'Cubehelix', value: 'interpolateCubehelixDefault', invert: 'light' },\n  { name: 'BuGn', value: 'interpolateBuGn', invert: 'dark' },\n  { name: 'BuPu', value: 'interpolateBuPu', invert: 'dark' },\n  { name: 'GnBu', value: 'interpolateGnBu', invert: 'dark' },\n  { name: 'OrRd', value: 'interpolateOrRd', invert: 'dark' },\n  { name: 'PuBuGn', value: 'interpolatePuBuGn', invert: 'dark' },\n  { name: 'PuBu', value: 'interpolatePuBu', invert: 'dark' },\n  { name: 'PuRd', value: 'interpolatePuRd', invert: 'dark' },\n  { name: 'RdPu', value: 'interpolateRdPu', invert: 'dark' },\n  { name: 'YlGnBu', value: 'interpolateYlGnBu', invert: 'dark' },\n  { name: 'YlGn', value: 'interpolateYlGn', invert: 'dark' },\n  { name: 'YlOrBr', value: 'interpolateYlOrBr', invert: 'dark' },\n  { name: 'YlOrRd', value: 'interpolateYlOrRd', invert: 'dark' },\n];\n\nconst dsSupportHistogramSort = ['elasticsearch'];\n\nexport class HeatmapCtrl extends MetricsPanelCtrl {\n  static templateUrl = 'module.html';\n\n  opacityScales: any = [];\n  colorModes: any = [];\n  colorSchemes: any = [];\n  selectionActivated: boolean;\n  unitFormats: any;\n  data: any;\n  series: TimeSeries[];\n  dataWarning: any;\n  decimals: number;\n  scaledDecimals: number;\n\n  processor: DataProcessor; // Shared with graph panel\n\n  /** @ngInject */\n  constructor($scope: any, $injector: auto.IInjectorService) {\n    super($scope, $injector);\n    this.selectionActivated = false;\n\n    _.defaultsDeep(this.panel, panelDefaults);\n    this.opacityScales = opacityScales;\n    this.colorModes = colorModes;\n    this.colorSchemes = colorSchemes;\n\n    // Use DataFrames\n    this.useDataFrames = true;\n    this.processor = new DataProcessor({\n      xaxis: { mode: 'custom' }, // NOT: 'histogram' :)\n      aliasColors: {}, // avoids null reference\n    });\n\n    // Bind grafana panel events\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-frames-received', this.onDataFramesReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onSnapshotLoad.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n\n    this.onCardColorChange = this.onCardColorChange.bind(this);\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Axes', axesEditor, 2);\n    this.addEditorTab('Display', heatmapDisplayEditor, 3);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  zoomOut(evt: any) {\n    this.publishAppEvent('zoom-out', 2);\n  }\n\n  onRender() {\n    if (!this.range || !this.series) {\n      return;\n    }\n\n    if (this.panel.dataFormat === 'tsbuckets') {\n      this.convertHistogramToHeatmapData();\n    } else {\n      this.convertTimeSeriesToHeatmapData();\n    }\n  }\n\n  convertTimeSeriesToHeatmapData() {\n    let xBucketSize, yBucketSize, bucketsData, heatmapStats;\n    const logBase = this.panel.yAxis.logBase;\n\n    const xBucketNumber = this.panel.xBucketNumber || X_BUCKET_NUMBER_DEFAULT;\n    const xBucketSizeByNumber = Math.floor((this.range.to.valueOf() - this.range.from.valueOf()) / xBucketNumber);\n\n    // Parse X bucket size (number or interval)\n    const isIntervalString = kbn.interval_regex.test(this.panel.xBucketSize);\n    if (isIntervalString) {\n      xBucketSize = kbn.interval_to_ms(this.panel.xBucketSize);\n    } else if (\n      isNaN(Number(this.panel.xBucketSize)) ||\n      this.panel.xBucketSize === '' ||\n      this.panel.xBucketSize === null\n    ) {\n      xBucketSize = xBucketSizeByNumber;\n    } else {\n      xBucketSize = Number(this.panel.xBucketSize);\n    }\n\n    // Calculate Y bucket size\n    heatmapStats = this.parseSeries(this.series);\n    const yBucketNumber = this.panel.yBucketNumber || Y_BUCKET_NUMBER_DEFAULT;\n    if (logBase !== 1) {\n      yBucketSize = this.panel.yAxis.splitFactor;\n    } else {\n      if (heatmapStats.max === heatmapStats.min) {\n        if (heatmapStats.max) {\n          yBucketSize = heatmapStats.max / Y_BUCKET_NUMBER_DEFAULT;\n        } else {\n          yBucketSize = 1;\n        }\n      } else {\n        yBucketSize = (heatmapStats.max - heatmapStats.min) / yBucketNumber;\n      }\n      yBucketSize = this.panel.yBucketSize || yBucketSize;\n    }\n\n    bucketsData = convertToHeatMap(this.series, yBucketSize, xBucketSize, logBase);\n\n    // Set default Y range if no data\n    if (!heatmapStats.min && !heatmapStats.max) {\n      heatmapStats = { min: -1, max: 1, minLog: 1 };\n      yBucketSize = 1;\n    }\n\n    const { cards, cardStats } = convertToCards(bucketsData, this.panel.hideZeroBuckets);\n\n    this.data = {\n      buckets: bucketsData,\n      heatmapStats: heatmapStats,\n      xBucketSize: xBucketSize,\n      yBucketSize: yBucketSize,\n      cards: cards,\n      cardStats: cardStats,\n    };\n  }\n\n  convertHistogramToHeatmapData() {\n    const panelDatasource = this.getPanelDataSourceType();\n    let xBucketSize, yBucketSize, bucketsData, tsBuckets;\n\n    // Try to sort series by bucket bound, if datasource doesn't do it.\n    if (!_.includes(dsSupportHistogramSort, panelDatasource)) {\n      this.series.sort(sortSeriesByLabel);\n    }\n\n    if (this.panel.reverseYBuckets) {\n      this.series.reverse();\n    }\n\n    // Convert histogram to heatmap. Each histogram bucket represented by the series which name is\n    // a top (or bottom, depends of datasource) bucket bound. Further, these values will be used as Y axis labels.\n    bucketsData = histogramToHeatmap(this.series);\n\n    tsBuckets = _.map(this.series, 'label');\n    const yBucketBound = this.panel.yBucketBound;\n    if (\n      (panelDatasource === 'prometheus' && yBucketBound !== 'lower' && yBucketBound !== 'middle') ||\n      yBucketBound === 'upper'\n    ) {\n      // Prometheus labels are upper inclusive bounds, so add empty bottom bucket label.\n      tsBuckets = [''].concat(tsBuckets);\n    } else {\n      // Elasticsearch uses labels as lower bucket bounds, so add empty top bucket label.\n      // Use this as a default mode as well.\n      tsBuckets.push('');\n    }\n\n    // Calculate bucket size based on heatmap data\n    const xBucketBoundSet = _.map(_.keys(bucketsData), key => Number(key));\n    xBucketSize = calculateBucketSize(xBucketBoundSet);\n    // Always let yBucketSize=1 in 'tsbuckets' mode\n    yBucketSize = 1;\n\n    const { cards, cardStats } = convertToCards(bucketsData, this.panel.hideZeroBuckets);\n\n    this.data = {\n      buckets: bucketsData,\n      xBucketSize: xBucketSize,\n      yBucketSize: yBucketSize,\n      tsBuckets: tsBuckets,\n      cards: cards,\n      cardStats: cardStats,\n    };\n  }\n\n  getPanelDataSourceType() {\n    if (this.datasource && this.datasource.meta && this.datasource.meta.id) {\n      return this.datasource.meta.id;\n    } else {\n      return 'unknown';\n    }\n  }\n\n  // This should only be called from the snapshot callback\n  onSnapshotLoad(dataList: LegacyResponseData[]) {\n    this.onDataFramesReceived(getProcessedDataFrames(dataList));\n  }\n\n  // Directly support DataFrame\n  onDataFramesReceived(data: DataFrame[]) {\n    this.series = this.processor.getSeriesList({ dataList: data, range: this.range }).map(ts => {\n      ts.color = null; // remove whatever the processor set\n      ts.flotpairs = ts.getFlotPairs(this.panel.nullPointMode);\n      return ts;\n    });\n\n    this.dataWarning = null;\n    const datapointsCount = _.reduce(\n      this.series,\n      (sum, series) => {\n        return sum + series.datapoints.length;\n      },\n      0\n    );\n\n    if (datapointsCount === 0) {\n      this.dataWarning = {\n        title: 'No data points',\n        tip: 'No datapoints returned from data query',\n      };\n    } else {\n      for (const series of this.series) {\n        if (series.isOutsideRange) {\n          this.dataWarning = {\n            title: 'Data points outside time range',\n            tip: 'Can be caused by timezone mismatch or missing time filter in query',\n          };\n          break;\n        }\n      }\n    }\n\n    this.render();\n  }\n\n  onDataError() {\n    this.series = [];\n    this.render();\n  }\n\n  onCardColorChange(newColor: any) {\n    this.panel.color.cardColor = newColor;\n    this.render();\n  }\n\n  parseSeries(series: TimeSeries[]) {\n    const min = _.min(_.map(series, s => s.stats.min));\n    const minLog = _.min(_.map(series, s => s.stats.logmin));\n    const max = _.max(_.map(series, s => s.stats.max));\n\n    return {\n      max,\n      min,\n      minLog,\n    };\n  }\n\n  parseHistogramSeries(series: TimeSeries[]) {\n    const bounds = _.map(series, s => Number(s.alias));\n    const min = _.min(bounds);\n    const minLog = _.min(bounds);\n    const max = _.max(bounds);\n\n    return {\n      max: max,\n      min: min,\n      minLog: minLog,\n    };\n  }\n\n  link(scope: any, elem: any, attrs: any, ctrl: any) {\n    rendering(scope, elem, attrs, ctrl);\n  }\n}\n","import _ from 'lodash';\nimport flatten from 'app/core/utils/flatten';\nimport TimeSeries from 'app/core/time_series2';\nimport TableModel, { mergeTablesIntoModel } from 'app/core/table_model';\nimport { TableTransform } from './types';\nimport { Column, TableData } from '@grafana/data';\n\nconst transformers: { [key: string]: TableTransform } = {};\n\ntransformers['timeseries_to_rows'] = {\n  description: 'Time series to rows',\n  getColumns: () => {\n    return [];\n  },\n  transform: (data, panel, model) => {\n    model.columns = [{ text: 'Time', type: 'date' }, { text: 'Metric' }, { text: 'Value' }];\n\n    for (let i = 0; i < data.length; i++) {\n      const series = data[i];\n      for (let y = 0; y < series.datapoints.length; y++) {\n        const dp = series.datapoints[y];\n        model.rows.push([dp[1], series.target, dp[0]]);\n      }\n    }\n  },\n};\n\ntransformers['timeseries_to_columns'] = {\n  description: 'Time series to columns',\n  getColumns: () => {\n    return [];\n  },\n  transform: (data, panel, model) => {\n    model.columns.push({ text: 'Time', type: 'date' });\n\n    // group by time\n    const points: any = {};\n\n    for (let i = 0; i < data.length; i++) {\n      const series = data[i];\n      model.columns.push({ text: series.target });\n\n      for (let y = 0; y < series.datapoints.length; y++) {\n        const dp = series.datapoints[y];\n        const timeKey = dp[1].toString();\n\n        if (!points[timeKey]) {\n          points[timeKey] = { time: dp[1] };\n          points[timeKey][i] = dp[0];\n        } else {\n          points[timeKey][i] = dp[0];\n        }\n      }\n    }\n\n    for (const time in points) {\n      const point = points[time];\n      const values = [point.time];\n\n      for (let i = 0; i < data.length; i++) {\n        const value = point[i];\n        values.push(value);\n      }\n\n      model.rows.push(values);\n    }\n  },\n};\n\ntransformers['timeseries_aggregations'] = {\n  description: 'Time series aggregations',\n  getColumns: () => {\n    return [\n      { text: 'Avg', value: 'avg' },\n      { text: 'Min', value: 'min' },\n      { text: 'Max', value: 'max' },\n      { text: 'Total', value: 'total' },\n      { text: 'Current', value: 'current' },\n      { text: 'Count', value: 'count' },\n    ];\n  },\n  transform: (data, panel, model) => {\n    let i, y;\n    model.columns.push({ text: 'Metric' });\n\n    for (i = 0; i < panel.columns.length; i++) {\n      model.columns.push({ text: panel.columns[i].text });\n    }\n\n    for (i = 0; i < data.length; i++) {\n      const series = new TimeSeries({\n        datapoints: data[i].datapoints,\n        alias: data[i].target,\n      });\n\n      series.getFlotPairs('connected');\n      const cells = [series.alias];\n\n      for (y = 0; y < panel.columns.length; y++) {\n        cells.push(series.stats[panel.columns[y].value]);\n      }\n\n      model.rows.push(cells);\n    }\n  },\n};\n\ntransformers['annotations'] = {\n  description: 'Annotations',\n  getColumns: () => {\n    return [];\n  },\n  transform: (data, panel, model) => {\n    model.columns.push({ text: 'Time', type: 'date' });\n    model.columns.push({ text: 'Title' });\n    model.columns.push({ text: 'Text' });\n    model.columns.push({ text: 'Tags' });\n\n    if (!data || !data.annotations || data.annotations.length === 0) {\n      return;\n    }\n\n    for (let i = 0; i < data.annotations.length; i++) {\n      const evt = data.annotations[i];\n      model.rows.push([evt.time, evt.title, evt.text, evt.tags]);\n    }\n  },\n};\n\ntransformers['table'] = {\n  description: 'Table',\n  getColumns: data => {\n    if (!data || data.length === 0) {\n      return [];\n    }\n\n    // Single query returns data columns as is\n    if (data.length === 1) {\n      return [...data[0].columns];\n    }\n\n    // Track column indexes: name -> index\n    const columnNames: any = {};\n\n    // Union of all columns\n    const columns = data.reduce((acc: Column[], series: TableData) => {\n      series.columns.forEach(col => {\n        const { text } = col;\n        if (columnNames[text] === undefined) {\n          columnNames[text] = acc.length;\n          acc.push(col);\n        }\n      });\n      return acc;\n    }, []);\n\n    return columns;\n  },\n  transform: (data: any[], panel, model) => {\n    if (!data || data.length === 0) {\n      return;\n    }\n    const noTableIndex = _.findIndex(data, d => 'columns' in d && 'rows' in d);\n    if (noTableIndex < 0) {\n      throw {\n        message: `Result of query #${String.fromCharCode(\n          65 + noTableIndex\n        )} is not in table format, try using another transform.`,\n      };\n    }\n\n    mergeTablesIntoModel(model, ...data);\n  },\n};\n\ntransformers['json'] = {\n  description: 'JSON Data',\n  getColumns: data => {\n    if (!data || data.length === 0) {\n      return [];\n    }\n\n    const names: any = {};\n    for (let i = 0; i < data.length; i++) {\n      const series = data[i];\n      if (series.type !== 'docs') {\n        continue;\n      }\n\n      // only look at 100 docs\n      const maxDocs = Math.min(series.datapoints.length, 100);\n      for (let y = 0; y < maxDocs; y++) {\n        const doc = series.datapoints[y];\n        const flattened = flatten(doc, {});\n        for (const propName in flattened) {\n          names[propName] = true;\n        }\n      }\n    }\n\n    return _.map(names, (value, key) => {\n      return { text: key, value: key };\n    });\n  },\n  transform: (data, panel, model) => {\n    let i, y, z;\n\n    for (const column of panel.columns) {\n      const tableCol: any = { text: column.text };\n\n      // if filterable data then set columns to filterable\n      if (data.length > 0 && data[0].filterable) {\n        tableCol.filterable = true;\n      }\n\n      model.columns.push(tableCol);\n    }\n\n    if (model.columns.length === 0) {\n      model.columns.push({ text: 'JSON' });\n    }\n\n    for (i = 0; i < data.length; i++) {\n      const series = data[i];\n\n      for (y = 0; y < series.datapoints.length; y++) {\n        const dp = series.datapoints[y];\n        const values = [];\n\n        if (_.isObject(dp) && panel.columns.length > 0) {\n          const flattened = flatten(dp);\n          for (z = 0; z < panel.columns.length; z++) {\n            values.push(flattened[panel.columns[z].value]);\n          }\n        } else {\n          values.push(JSON.stringify(dp));\n        }\n\n        model.rows.push(values);\n      }\n    }\n  },\n};\n\nfunction transformDataToTable(data: any, panel: any) {\n  const model = new TableModel();\n\n  if (!data || data.length === 0) {\n    return model;\n  }\n\n  const transformer = transformers[panel.transform];\n  if (!transformer) {\n    throw { message: 'Transformer ' + panel.transform + ' not found' };\n  }\n\n  transformer.transform(data, panel, model);\n  return model;\n}\n\nexport { transformers, transformDataToTable };\n","import './color_legend';\nimport { HeatmapCtrl } from './heatmap_ctrl';\n\nexport { HeatmapCtrl as PanelCtrl };\n","import _ from 'lodash';\nimport { transformers } from './transformers';\nimport { IQService } from 'angular';\nimport { Column } from 'react-virtualized';\n\nexport class TablePanelEditorCtrl {\n  panel: any;\n  panelCtrl: any;\n  transformers: any;\n  fontSizes: any;\n  addColumnSegment: any;\n  getColumnNames: any;\n  canSetColumns: boolean;\n  columnsHelpMessage: string;\n\n  /** @ngInject */\n  constructor($scope: any, private $q: IQService, private uiSegmentSrv: any) {\n    $scope.editor = this;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n    this.transformers = transformers;\n    this.fontSizes = ['80%', '90%', '100%', '110%', '120%', '130%', '150%', '160%', '180%', '200%', '220%', '250%'];\n    this.addColumnSegment = uiSegmentSrv.newPlusButton();\n    this.updateTransformHints();\n  }\n\n  updateTransformHints() {\n    this.canSetColumns = false;\n    this.columnsHelpMessage = '';\n\n    switch (this.panel.transform) {\n      case 'timeseries_aggregations': {\n        this.canSetColumns = true;\n        break;\n      }\n      case 'json': {\n        this.canSetColumns = true;\n        break;\n      }\n      case 'table': {\n        this.columnsHelpMessage = 'Columns and their order are determined by the data query';\n      }\n    }\n  }\n\n  getColumnOptions() {\n    if (!this.panelCtrl.dataRaw) {\n      return this.$q.when([]);\n    }\n    const columns = this.transformers[this.panel.transform].getColumns(this.panelCtrl.dataRaw);\n    const segments = _.map(columns, (c: any) => this.uiSegmentSrv.newSegment({ value: c.text }));\n    return this.$q.when(segments);\n  }\n\n  addColumn() {\n    const columns = transformers[this.panel.transform].getColumns(this.panelCtrl.dataRaw);\n    const column: any = _.find(columns, { text: this.addColumnSegment.value });\n\n    if (column) {\n      this.panel.columns.push(column);\n      this.render();\n    }\n\n    const plusButton = this.uiSegmentSrv.newPlusButton();\n    this.addColumnSegment.html = plusButton.html;\n    this.addColumnSegment.value = plusButton.value;\n  }\n\n  transformChanged() {\n    this.panel.columns = [];\n    if (this.panel.transform === 'timeseries_aggregations') {\n      this.panel.columns.push({ text: 'Avg', value: 'avg' });\n    }\n\n    this.updateTransformHints();\n    this.render();\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  removeColumn(column: Column) {\n    this.panel.columns = _.without(this.panel.columns, column);\n    this.panelCtrl.render();\n  }\n}\n\n/** @ngInject */\nexport function tablePanelEditor($q: IQService, uiSegmentSrv: any) {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/app/plugins/panel/table/editor.html',\n    controller: TablePanelEditorCtrl,\n  };\n}\n","import _ from 'lodash';\nimport { getValueFormats } from '@grafana/ui';\n\nexport class ColumnOptionsCtrl {\n  panel: any;\n  panelCtrl: any;\n  colorModes: any;\n  columnStyles: any;\n  columnTypes: any;\n  fontSizes: any;\n  dateFormats: any;\n  addColumnSegment: any;\n  unitFormats: any;\n  getColumnNames: any;\n  activeStyleIndex: number;\n  mappingTypes: any;\n\n  /** @ngInject */\n  constructor($scope: any) {\n    $scope.editor = this;\n\n    this.activeStyleIndex = 0;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n    this.unitFormats = getValueFormats();\n    this.colorModes = [\n      { text: 'Disabled', value: null },\n      { text: 'Cell', value: 'cell' },\n      { text: 'Value', value: 'value' },\n      { text: 'Row', value: 'row' },\n    ];\n    this.columnTypes = [\n      { text: 'Number', value: 'number' },\n      { text: 'String', value: 'string' },\n      { text: 'Date', value: 'date' },\n      { text: 'Hidden', value: 'hidden' },\n    ];\n    this.fontSizes = ['80%', '90%', '100%', '110%', '120%', '130%', '150%', '160%', '180%', '200%', '220%', '250%'];\n    this.dateFormats = [\n      { text: 'YYYY-MM-DD HH:mm:ss', value: 'YYYY-MM-DD HH:mm:ss' },\n      { text: 'YYYY-MM-DD HH:mm:ss.SSS', value: 'YYYY-MM-DD HH:mm:ss.SSS' },\n      { text: 'MM/DD/YY h:mm:ss a', value: 'MM/DD/YY h:mm:ss a' },\n      { text: 'MMMM D, YYYY LT', value: 'MMMM D, YYYY LT' },\n      { text: 'YYYY-MM-DD', value: 'YYYY-MM-DD' },\n    ];\n    this.mappingTypes = [{ text: 'Value to text', value: 1 }, { text: 'Range to text', value: 2 }];\n\n    this.getColumnNames = () => {\n      if (!this.panelCtrl.table) {\n        return [];\n      }\n      return _.map(this.panelCtrl.table.columns, (col: any) => {\n        return col.text;\n      });\n    };\n\n    this.onColorChange = this.onColorChange.bind(this);\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  setUnitFormat(column: any, subItem: any) {\n    column.unit = subItem.value;\n    this.panelCtrl.render();\n  }\n\n  addColumnStyle() {\n    const newStyleRule: object = {\n      unit: 'short',\n      type: 'number',\n      alias: '',\n      decimals: 2,\n      colors: ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'],\n      colorMode: null,\n      pattern: '',\n      dateFormat: 'YYYY-MM-DD HH:mm:ss',\n      thresholds: [],\n      mappingType: 1,\n    };\n\n    const styles = this.panel.styles;\n    const stylesCount = styles.length;\n    let indexToInsert = stylesCount;\n\n    // check if last is a catch all rule, then add it before that one\n    if (stylesCount > 0) {\n      const last = styles[stylesCount - 1];\n      if (last.pattern === '/.*/') {\n        indexToInsert = stylesCount - 1;\n      }\n    }\n\n    styles.splice(indexToInsert, 0, newStyleRule);\n    this.activeStyleIndex = indexToInsert;\n  }\n\n  removeColumnStyle(style: any) {\n    this.panel.styles = _.without(this.panel.styles, style);\n  }\n\n  invertColorOrder(index: number) {\n    const ref = this.panel.styles[index].colors;\n    const copy = ref[0];\n    ref[0] = ref[2];\n    ref[2] = copy;\n    this.panelCtrl.render();\n  }\n\n  onColorChange(style: any, colorIndex: number) {\n    return (newColor: string) => {\n      style.colors[colorIndex] = newColor;\n      this.render();\n    };\n  }\n\n  addValueMap(style: any) {\n    if (!style.valueMaps) {\n      style.valueMaps = [];\n    }\n    style.valueMaps.push({ value: '', text: '' });\n    this.panelCtrl.render();\n  }\n\n  removeValueMap(style: any, index: number) {\n    style.valueMaps.splice(index, 1);\n    this.panelCtrl.render();\n  }\n\n  addRangeMap(style: any) {\n    if (!style.rangeMaps) {\n      style.rangeMaps = [];\n    }\n    style.rangeMaps.push({ from: '', to: '', text: '' });\n    this.panelCtrl.render();\n  }\n\n  removeRangeMap(style: any, index: number) {\n    style.rangeMaps.splice(index, 1);\n    this.panelCtrl.render();\n  }\n}\n\n/** @ngInject */\nexport function columnOptionsTab($q: any, uiSegmentSrv: any) {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/app/plugins/panel/table/column_options.html',\n    controller: ColumnOptionsCtrl,\n  };\n}\n","import _ from 'lodash';\nimport { getValueFormat, getColorFromHexRgbOrName, GrafanaThemeType } from '@grafana/ui';\nimport { stringToJsRegex, ScopedVars } from '@grafana/data';\nimport { ColumnStyle } from '@grafana/ui/src/components/Table/TableCellBuilder';\nimport { dateTime } from '@grafana/data';\nimport { TemplateSrv } from 'app/features/templating/template_srv';\nimport { TableRenderModel, ColumnRender } from './types';\n\nexport class TableRenderer {\n  formatters: any[];\n  colorState: any;\n\n  constructor(\n    private panel: { styles: ColumnStyle[]; pageSize: number },\n    private table: TableRenderModel,\n    private isUtc: boolean,\n    private sanitize: (v: any) => any,\n    private templateSrv: TemplateSrv,\n    private theme?: GrafanaThemeType\n  ) {\n    this.initColumns();\n  }\n\n  setTable(table: TableRenderModel) {\n    this.table = table;\n\n    this.initColumns();\n  }\n\n  initColumns() {\n    this.formatters = [];\n    this.colorState = {};\n\n    for (let colIndex = 0; colIndex < this.table.columns.length; colIndex++) {\n      const column = this.table.columns[colIndex];\n      column.title = column.text;\n\n      for (let i = 0; i < this.panel.styles.length; i++) {\n        const style = this.panel.styles[i];\n\n        const regex = stringToJsRegex(style.pattern);\n        if (column.text.match(regex)) {\n          column.style = style;\n\n          if (style.alias) {\n            column.title = column.text.replace(regex, style.alias);\n          }\n\n          break;\n        }\n      }\n\n      this.formatters[colIndex] = this.createColumnFormatter(column);\n    }\n  }\n\n  getColorForValue(value: number, style: ColumnStyle) {\n    if (!style.thresholds || !style.colors) {\n      return null;\n    }\n    for (let i = style.thresholds.length; i > 0; i--) {\n      if (value >= style.thresholds[i - 1]) {\n        return getColorFromHexRgbOrName(style.colors[i], this.theme);\n      }\n    }\n    return getColorFromHexRgbOrName(_.first(style.colors), this.theme);\n  }\n\n  defaultCellFormatter(v: any, style: ColumnStyle) {\n    if (v === null || v === void 0 || v === undefined) {\n      return '';\n    }\n\n    if (_.isArray(v)) {\n      v = v.join(', ');\n    }\n\n    if (style && style.sanitize) {\n      return this.sanitize(v);\n    } else {\n      return _.escape(v);\n    }\n  }\n\n  createColumnFormatter(column: ColumnRender) {\n    if (!column.style) {\n      return this.defaultCellFormatter;\n    }\n\n    if (column.style.type === 'hidden') {\n      return (v: any): undefined => undefined;\n    }\n\n    if (column.style.type === 'date') {\n      return (v: any) => {\n        if (v === undefined || v === null) {\n          return '-';\n        }\n\n        if (_.isArray(v)) {\n          v = v[0];\n        }\n\n        // if is an epoch (numeric string and len > 12)\n        if (_.isString(v) && !isNaN(v as any) && v.length > 12) {\n          v = parseInt(v, 10);\n        }\n\n        let date = dateTime(v);\n\n        if (this.isUtc) {\n          date = date.utc();\n        }\n\n        return date.format(column.style.dateFormat);\n      };\n    }\n\n    if (column.style.type === 'string') {\n      return (v: any): any => {\n        if (_.isArray(v)) {\n          v = v.join(', ');\n        }\n\n        const mappingType = column.style.mappingType || 0;\n\n        if (mappingType === 1 && column.style.valueMaps) {\n          for (let i = 0; i < column.style.valueMaps.length; i++) {\n            const map = column.style.valueMaps[i];\n\n            if (v === null) {\n              if (map.value === 'null') {\n                return map.text;\n              }\n              continue;\n            }\n\n            // Allow both numeric and string values to be mapped\n            if ((!_.isString(v) && Number(map.value) === Number(v)) || map.value === v) {\n              this.setColorState(v, column.style);\n              return this.defaultCellFormatter(map.text, column.style);\n            }\n          }\n        }\n\n        if (mappingType === 2 && column.style.rangeMaps) {\n          for (let i = 0; i < column.style.rangeMaps.length; i++) {\n            const map = column.style.rangeMaps[i];\n\n            if (v === null) {\n              if (map.from === 'null' && map.to === 'null') {\n                return map.text;\n              }\n              continue;\n            }\n\n            if (Number(map.from) <= Number(v) && Number(map.to) >= Number(v)) {\n              this.setColorState(v, column.style);\n              return this.defaultCellFormatter(map.text, column.style);\n            }\n          }\n        }\n\n        if (v === null || v === void 0) {\n          return '-';\n        }\n\n        this.setColorState(v, column.style);\n        return this.defaultCellFormatter(v, column.style);\n      };\n    }\n\n    if (column.style.type === 'number') {\n      const valueFormatter = getValueFormat(column.unit || column.style.unit);\n\n      return (v: any): any => {\n        if (v === null || v === void 0) {\n          return '-';\n        }\n\n        if (isNaN(v) || _.isArray(v)) {\n          return this.defaultCellFormatter(v, column.style);\n        }\n\n        this.setColorState(v, column.style);\n        return valueFormatter(v, column.style.decimals, null);\n      };\n    }\n\n    return (value: any) => {\n      return this.defaultCellFormatter(value, column.style);\n    };\n  }\n\n  setColorState(value: any, style: ColumnStyle) {\n    if (!style.colorMode) {\n      return;\n    }\n\n    if (value === null || value === void 0 || _.isArray(value)) {\n      return;\n    }\n\n    const numericValue = Number(value);\n    if (isNaN(numericValue)) {\n      return;\n    }\n\n    this.colorState[style.colorMode] = this.getColorForValue(numericValue, style);\n  }\n\n  renderRowVariables(rowIndex: number) {\n    const scopedVars: ScopedVars = {};\n    let cellVariable;\n    const row = this.table.rows[rowIndex];\n    for (let i = 0; i < row.length; i++) {\n      cellVariable = `__cell_${i}`;\n      scopedVars[cellVariable] = { value: row[i], text: row[i] ? row[i].toString() : '' };\n    }\n    return scopedVars;\n  }\n\n  formatColumnValue(colIndex: number, value: any) {\n    return this.formatters[colIndex] ? this.formatters[colIndex](value) : value;\n  }\n\n  renderCell(columnIndex: number, rowIndex: number, value: any, addWidthHack = false) {\n    value = this.formatColumnValue(columnIndex, value);\n\n    const column = this.table.columns[columnIndex];\n    let cellStyle = '';\n    let textStyle = '';\n    const cellClasses = [];\n    let cellClass = '';\n\n    if (this.colorState.cell) {\n      cellStyle = ' style=\"background-color:' + this.colorState.cell + '\"';\n      cellClasses.push('table-panel-color-cell');\n      this.colorState.cell = null;\n    } else if (this.colorState.value) {\n      textStyle = ' style=\"color:' + this.colorState.value + '\"';\n      this.colorState.value = null;\n    }\n    // because of the fixed table headers css only solution\n    // there is an issue if header cell is wider the cell\n    // this hack adds header content to cell (not visible)\n    let columnHtml = '';\n    if (addWidthHack) {\n      columnHtml = '<div class=\"table-panel-width-hack\">' + this.table.columns[columnIndex].title + '</div>';\n    }\n\n    if (value === undefined) {\n      cellStyle = ' style=\"display:none;\"';\n      column.hidden = true;\n    } else {\n      column.hidden = false;\n    }\n\n    if (column.hidden === true) {\n      return '';\n    }\n\n    if (column.style && column.style.preserveFormat) {\n      cellClasses.push('table-panel-cell-pre');\n    }\n\n    if (column.style && column.style.link) {\n      // Render cell as link\n      const scopedVars = this.renderRowVariables(rowIndex);\n      scopedVars['__cell'] = { value: value, text: value ? value.toString() : '' };\n\n      const cellLink = this.templateSrv.replace(column.style.linkUrl, scopedVars, encodeURIComponent);\n      const cellLinkTooltip = this.templateSrv.replace(column.style.linkTooltip, scopedVars);\n      const cellTarget = column.style.linkTargetBlank ? '_blank' : '';\n\n      cellClasses.push('table-panel-cell-link');\n\n      columnHtml += `\n        <a href=\"${cellLink}\" target=\"${cellTarget}\" data-link-tooltip data-original-title=\"${cellLinkTooltip}\" data-placement=\"right\"${textStyle}>\n          ${value}\n        </a>\n      `;\n    } else {\n      columnHtml += value;\n    }\n\n    if (column.filterable) {\n      cellClasses.push('table-panel-cell-filterable');\n      columnHtml += `\n        <a class=\"table-panel-filter-link\" data-link-tooltip data-original-title=\"Filter out value\" data-placement=\"bottom\"\n           data-row=\"${rowIndex}\" data-column=\"${columnIndex}\" data-operator=\"!=\">\n          <i class=\"fa fa-search-minus\"></i>\n        </a>\n        <a class=\"table-panel-filter-link\" data-link-tooltip data-original-title=\"Filter for value\" data-placement=\"bottom\"\n           data-row=\"${rowIndex}\" data-column=\"${columnIndex}\" data-operator=\"=\">\n          <i class=\"fa fa-search-plus\"></i>\n        </a>`;\n    }\n\n    if (cellClasses.length) {\n      cellClass = ' class=\"' + cellClasses.join(' ') + '\"';\n    }\n\n    columnHtml = '<td' + cellClass + cellStyle + textStyle + '>' + columnHtml + '</td>';\n    return columnHtml;\n  }\n\n  render(page: number) {\n    const pageSize = this.panel.pageSize || 100;\n    const startPos = page * pageSize;\n    const endPos = Math.min(startPos + pageSize, this.table.rows.length);\n    let html = '';\n\n    for (let y = startPos; y < endPos; y++) {\n      const row = this.table.rows[y];\n      let cellHtml = '';\n      let rowStyle = '';\n      const rowClasses = [];\n      let rowClass = '';\n      for (let i = 0; i < this.table.columns.length; i++) {\n        cellHtml += this.renderCell(i, y, row[i], y === startPos);\n      }\n\n      if (this.colorState.row) {\n        rowStyle = ' style=\"background-color:' + this.colorState.row + '\"';\n        rowClasses.push('table-panel-color-row');\n        this.colorState.row = null;\n      }\n\n      if (rowClasses.length) {\n        rowClass = ' class=\"' + rowClasses.join(' ') + '\"';\n      }\n\n      html += '<tr ' + rowClass + rowStyle + '>' + cellHtml + '</tr>';\n    }\n\n    return html;\n  }\n\n  render_values() {\n    const rows = [];\n\n    for (let y = 0; y < this.table.rows.length; y++) {\n      const row = this.table.rows[y];\n      const newRow = [];\n      for (let i = 0; i < this.table.columns.length; i++) {\n        newRow.push(this.formatColumnValue(i, row[i]));\n      }\n      rows.push(newRow);\n    }\n    return {\n      columns: this.table.columns,\n      rows: rows,\n    };\n  }\n}\n","import _ from 'lodash';\nimport $ from 'jquery';\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport config from 'app/core/config';\nimport { transformDataToTable } from './transformers';\nimport { tablePanelEditor } from './editor';\nimport { columnOptionsTab } from './column_options';\nimport { TableRenderer } from './renderer';\nimport { isTableData } from '@grafana/data';\nimport { TemplateSrv } from 'app/features/templating/template_srv';\n\nclass TablePanelCtrl extends MetricsPanelCtrl {\n  static templateUrl = 'module.html';\n\n  pageIndex: number;\n  dataRaw: any;\n  table: any;\n  renderer: any;\n\n  panelDefaults: any = {\n    targets: [{}],\n    transform: 'timeseries_to_columns',\n    pageSize: null,\n    showHeader: true,\n    styles: [\n      {\n        type: 'date',\n        pattern: 'Time',\n        alias: 'Time',\n        dateFormat: 'YYYY-MM-DD HH:mm:ss',\n      },\n      {\n        unit: 'short',\n        type: 'number',\n        alias: '',\n        decimals: 2,\n        colors: ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'],\n        colorMode: null,\n        pattern: '/.*/',\n        thresholds: [],\n      },\n    ],\n    columns: [],\n\n    fontSize: '100%',\n    sort: { col: 0, desc: true },\n  };\n\n  /** @ngInject */\n  constructor(\n    $scope: any,\n    $injector: any,\n    templateSrv: TemplateSrv,\n    private annotationsSrv: any,\n    private $sanitize: any,\n    private variableSrv: any\n  ) {\n    super($scope, $injector);\n\n    this.pageIndex = 0;\n\n    if (this.panel.styles === void 0) {\n      this.panel.styles = this.panel.columns;\n      this.panel.columns = this.panel.fields;\n      delete this.panel.columns;\n      delete this.panel.fields;\n    }\n\n    _.defaults(this.panel, this.panelDefaults);\n\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', tablePanelEditor, 2);\n    this.addEditorTab('Column Styles', columnOptionsTab, 3);\n  }\n\n  onInitPanelActions(actions: any[]) {\n    actions.push({ text: 'Export CSV', click: 'ctrl.exportCsv()' });\n  }\n\n  issueQueries(datasource: any) {\n    this.pageIndex = 0;\n\n    if (this.panel.transform === 'annotations') {\n      return this.annotationsSrv\n        .getAnnotations({\n          dashboard: this.dashboard,\n          panel: this.panel,\n          range: this.range,\n        })\n        .then((anno: any) => {\n          this.loading = false;\n          this.dataRaw = anno;\n          this.pageIndex = 0;\n          this.render();\n          return { data: this.dataRaw }; // Not used\n        });\n    }\n\n    return super.issueQueries(datasource);\n  }\n\n  onDataError(err: any) {\n    this.dataRaw = [];\n    this.render();\n  }\n\n  onDataReceived(dataList: any) {\n    this.dataRaw = dataList;\n    this.pageIndex = 0;\n\n    // automatically correct transform mode based on data\n    if (this.dataRaw && this.dataRaw.length) {\n      if (isTableData(this.dataRaw[0])) {\n        this.panel.transform = 'table';\n      } else {\n        if (this.dataRaw[0].type === 'docs') {\n          this.panel.transform = 'json';\n        } else {\n          if (this.panel.transform === 'table' || this.panel.transform === 'json') {\n            this.panel.transform = 'timeseries_to_rows';\n          }\n        }\n      }\n    }\n\n    this.render();\n  }\n\n  render() {\n    this.table = transformDataToTable(this.dataRaw, this.panel);\n    this.table.sort(this.panel.sort);\n\n    this.renderer = new TableRenderer(\n      this.panel,\n      this.table,\n      this.dashboard.isTimezoneUtc(),\n      this.$sanitize,\n      this.templateSrv,\n      config.theme.type\n    );\n\n    return super.render(this.table);\n  }\n\n  toggleColumnSort(col: any, colIndex: any) {\n    // remove sort flag from current column\n    if (this.table.columns[this.panel.sort.col]) {\n      this.table.columns[this.panel.sort.col].sort = false;\n    }\n\n    if (this.panel.sort.col === colIndex) {\n      if (this.panel.sort.desc) {\n        this.panel.sort.desc = false;\n      } else {\n        this.panel.sort.col = null;\n      }\n    } else {\n      this.panel.sort.col = colIndex;\n      this.panel.sort.desc = true;\n    }\n    this.render();\n  }\n\n  exportCsv() {\n    const scope = this.$scope.$new(true);\n    scope.tableData = this.renderer.render_values();\n    scope.panel = 'table';\n    this.publishAppEvent('show-modal', {\n      templateHtml: '<export-data-modal panel=\"panel\" data=\"tableData\"></export-data-modal>',\n      scope,\n      modalClass: 'modal--narrow',\n    });\n  }\n\n  link(scope: any, elem: JQuery, attrs: any, ctrl: TablePanelCtrl) {\n    let data: any;\n    const panel = ctrl.panel;\n    let pageCount = 0;\n\n    function getTableHeight() {\n      let panelHeight = ctrl.height;\n\n      if (pageCount > 1) {\n        panelHeight -= 26;\n      }\n\n      return panelHeight - 31 + 'px';\n    }\n\n    function appendTableRows(tbodyElem: JQuery) {\n      ctrl.renderer.setTable(data);\n      tbodyElem.empty();\n      tbodyElem.html(ctrl.renderer.render(ctrl.pageIndex));\n    }\n\n    function switchPage(e: any) {\n      const el = $(e.currentTarget);\n      ctrl.pageIndex = parseInt(el.text(), 10) - 1;\n      renderPanel();\n    }\n\n    function appendPaginationControls(footerElem: JQuery) {\n      footerElem.empty();\n\n      const pageSize = panel.pageSize || 100;\n      pageCount = Math.ceil(data.rows.length / pageSize);\n      if (pageCount === 1) {\n        return;\n      }\n\n      const startPage = Math.max(ctrl.pageIndex - 3, 0);\n      const endPage = Math.min(pageCount, startPage + 9);\n\n      const paginationList = $('<ul></ul>');\n\n      for (let i = startPage; i < endPage; i++) {\n        const activeClass = i === ctrl.pageIndex ? 'active' : '';\n        const pageLinkElem = $(\n          '<li><a class=\"table-panel-page-link pointer ' + activeClass + '\">' + (i + 1) + '</a></li>'\n        );\n        paginationList.append(pageLinkElem);\n      }\n\n      footerElem.append(paginationList);\n    }\n\n    function renderPanel() {\n      const panelElem = elem.parents('.panel-content');\n      const rootElem = elem.find('.table-panel-scroll');\n      const tbodyElem = elem.find('tbody');\n      const footerElem = elem.find('.table-panel-footer');\n\n      elem.css({ 'font-size': panel.fontSize });\n      panelElem.addClass('table-panel-content');\n\n      appendTableRows(tbodyElem);\n      appendPaginationControls(footerElem);\n\n      rootElem.css({ 'max-height': getTableHeight() });\n    }\n\n    // hook up link tooltips\n    elem.tooltip({\n      selector: '[data-link-tooltip]',\n    });\n\n    function addFilterClicked(e: any) {\n      const filterData = $(e.currentTarget).data();\n      const options = {\n        datasource: panel.datasource,\n        key: data.columns[filterData.column].text,\n        value: data.rows[filterData.row][filterData.column],\n        operator: filterData.operator,\n      };\n\n      ctrl.variableSrv.setAdhocFilter(options);\n    }\n\n    elem.on('click', '.table-panel-page-link', switchPage);\n    elem.on('click', '.table-panel-filter-link', addFilterClicked);\n\n    const unbindDestroy = scope.$on('$destroy', () => {\n      elem.off('click', '.table-panel-page-link');\n      elem.off('click', '.table-panel-filter-link');\n      unbindDestroy();\n    });\n\n    ctrl.events.on('render', (renderData: any) => {\n      data = renderData || data;\n      if (data) {\n        renderPanel();\n      }\n      ctrl.renderingCompleted();\n    });\n  }\n}\n\nexport { TablePanelCtrl, TablePanelCtrl as PanelCtrl };\n","//// Libraries\nimport _ from 'lodash';\nimport React, { PureComponent } from 'react';\n\n// Types\nimport { PanelEditorProps, Switch, FormField } from '@grafana/ui';\nimport { Options } from './types';\n\nexport class TablePanelEditor extends PureComponent<PanelEditorProps<Options>> {\n  onToggleShowHeader = () => {\n    this.props.onOptionsChange({ ...this.props.options, showHeader: !this.props.options.showHeader });\n  };\n\n  onToggleFixedHeader = () => {\n    this.props.onOptionsChange({ ...this.props.options, fixedHeader: !this.props.options.fixedHeader });\n  };\n\n  onToggleRotate = () => {\n    this.props.onOptionsChange({ ...this.props.options, rotate: !this.props.options.rotate });\n  };\n\n  onFixedColumnsChange = ({ target }: any) => {\n    this.props.onOptionsChange({ ...this.props.options, fixedColumns: target.value });\n  };\n\n  render() {\n    const { showHeader, fixedHeader, rotate, fixedColumns } = this.props.options;\n\n    return (\n      <div>\n        <div className=\"section gf-form-group\">\n          <h5 className=\"section-heading\">Header</h5>\n          <Switch label=\"Show\" labelClass=\"width-6\" checked={showHeader} onChange={this.onToggleShowHeader} />\n          <Switch label=\"Fixed\" labelClass=\"width-6\" checked={fixedHeader} onChange={this.onToggleFixedHeader} />\n        </div>\n\n        <div className=\"section gf-form-group\">\n          <h5 className=\"section-heading\">Display</h5>\n          <Switch label=\"Rotate\" labelClass=\"width-8\" checked={rotate} onChange={this.onToggleRotate} />\n          <FormField\n            label=\"Fixed Columns\"\n            labelWidth={8}\n            inputWidth={4}\n            type=\"number\"\n            step=\"1\"\n            min=\"0\"\n            max=\"100\"\n            onChange={this.onFixedColumnsChange}\n            value={fixedColumns}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","// Libraries\nimport React, { Component } from 'react';\n\n// Types\nimport { PanelProps, ThemeContext } from '@grafana/ui';\nimport { Options } from './types';\nimport Table from '@grafana/ui/src/components/Table/Table';\n\ninterface Props extends PanelProps<Options> {}\n\nexport class TablePanel extends Component<Props> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  render() {\n    const { data, options } = this.props;\n\n    if (data.series.length < 1) {\n      return <div>No Table Data...</div>;\n    }\n\n    return (\n      <ThemeContext.Consumer>\n        {theme => <Table {...this.props} {...options} theme={theme} data={data.series[0]} />}\n      </ThemeContext.Consumer>\n    );\n  }\n}\n","import { ColumnStyle } from '@grafana/ui/src/components/Table/TableCellBuilder';\n\nexport interface Options {\n  showHeader: boolean;\n  fixedHeader: boolean;\n  fixedColumns: number;\n  rotate: boolean;\n\n  styles: ColumnStyle[];\n}\n\nexport const defaults: Options = {\n  showHeader: true,\n  fixedHeader: true,\n  fixedColumns: 0,\n  rotate: false,\n  styles: [\n    {\n      type: 'date',\n      pattern: 'Time',\n      alias: 'Time',\n      dateFormat: 'YYYY-MM-DD HH:mm:ss',\n    },\n    {\n      unit: 'short',\n      type: 'number',\n      alias: '',\n      decimals: 2,\n      colors: ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'],\n      pattern: '/.*/',\n      thresholds: [],\n    },\n  ],\n};\n","import { PanelPlugin } from '@grafana/ui';\n\nimport { TablePanelEditor } from './TablePanelEditor';\nimport { TablePanel } from './TablePanel';\nimport { Options, defaults } from './types';\n\nexport const plugin = new PanelPlugin<Options>(TablePanel).setDefaults(defaults).setEditor(TablePanelEditor);\n","import _ from 'lodash';\nimport $ from 'jquery';\nimport 'vendor/flot/jquery.flot';\nimport 'vendor/flot/jquery.flot.gauge';\nimport 'app/features/panel/panellinks/link_srv';\nimport {\n  convertOldAngularValueMapping,\n  getColorFromHexRgbOrName,\n  getDisplayProcessor,\n  getFlotPairs,\n  LegacyResponseData,\n} from '@grafana/ui';\n\nimport kbn from 'app/core/utils/kbn';\nimport config from 'app/core/config';\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport {\n  DataFrame,\n  DisplayValue,\n  Field,\n  fieldReducers,\n  FieldType,\n  GraphSeriesValue,\n  KeyValue,\n  LinkModel,\n  reduceField,\n  ReducerID,\n} from '@grafana/data';\nimport { auto } from 'angular';\nimport { LinkSrv } from 'app/features/panel/panellinks/link_srv';\nimport { getProcessedDataFrames } from 'app/features/dashboard/state/runRequest';\n\nconst BASE_FONT_SIZE = 38;\n\nexport interface ShowData {\n  field: Field;\n  value: any;\n  sparkline: GraphSeriesValue[][];\n  display: DisplayValue;\n\n  scopedVars: any;\n\n  thresholds: any[];\n  colorMap: any;\n}\n\nclass SingleStatCtrl extends MetricsPanelCtrl {\n  static templateUrl = 'module.html';\n\n  data: Partial<ShowData> = {};\n\n  fontSizes: any[];\n  unitFormats: any[];\n  fieldNames: string[] = [];\n\n  invalidGaugeRange: boolean;\n  panel: any;\n  events: any;\n  valueNameOptions: any[] = [\n    { value: 'min', text: 'Min' },\n    { value: 'max', text: 'Max' },\n    { value: 'avg', text: 'Average' },\n    { value: 'current', text: 'Current' },\n    { value: 'total', text: 'Total' },\n    { value: 'name', text: 'Name' },\n    { value: 'first', text: 'First' },\n    { value: 'delta', text: 'Delta' },\n    { value: 'diff', text: 'Difference' },\n    { value: 'range', text: 'Range' },\n    { value: 'last_time', text: 'Time of last point' },\n  ];\n\n  // Set and populate defaults\n  panelDefaults: any = {\n    links: [],\n    datasource: null,\n    maxDataPoints: 100,\n    interval: null,\n    targets: [{}],\n    cacheTimeout: null,\n    format: 'none',\n    prefix: '',\n    postfix: '',\n    nullText: null,\n    valueMaps: [{ value: 'null', op: '=', text: 'N/A' }],\n    mappingTypes: [{ name: 'value to text', value: 1 }, { name: 'range to text', value: 2 }],\n    rangeMaps: [{ from: 'null', to: 'null', text: 'N/A' }],\n    mappingType: 1,\n    nullPointMode: 'connected',\n    valueName: 'avg',\n    prefixFontSize: '50%',\n    valueFontSize: '80%',\n    postfixFontSize: '50%',\n    thresholds: '',\n    colorBackground: false,\n    colorValue: false,\n    colors: ['#299c46', 'rgba(237, 129, 40, 0.89)', '#d44a3a'],\n    sparkline: {\n      show: false,\n      full: false,\n      ymin: null,\n      ymax: null,\n      lineColor: 'rgb(31, 120, 193)',\n      fillColor: 'rgba(31, 118, 189, 0.18)',\n    },\n    gauge: {\n      show: false,\n      minValue: 0,\n      maxValue: 100,\n      thresholdMarkers: true,\n      thresholdLabels: false,\n    },\n    tableColumn: '',\n  };\n\n  /** @ngInject */\n  constructor($scope: any, $injector: auto.IInjectorService, private linkSrv: LinkSrv, private $sanitize: any) {\n    super($scope, $injector);\n    _.defaults(this.panel, this.panelDefaults);\n\n    this.events.on('data-frames-received', this.onFramesReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onSnapshotLoad.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n\n    this.useDataFrames = true;\n\n    this.onSparklineColorChange = this.onSparklineColorChange.bind(this);\n    this.onSparklineFillChange = this.onSparklineFillChange.bind(this);\n  }\n\n  onInitEditMode() {\n    this.fontSizes = ['20%', '30%', '50%', '70%', '80%', '100%', '110%', '120%', '150%', '170%', '200%'];\n    this.addEditorTab('Options', 'public/app/plugins/panel/singlestat/editor.html', 2);\n    this.addEditorTab('Value Mappings', 'public/app/plugins/panel/singlestat/mappings.html', 3);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  migrateToGaugePanel(migrate: boolean) {\n    if (migrate) {\n      this.onPluginTypeChange(config.panels['gauge']);\n    } else {\n      this.panel.gauge.show = false;\n      this.render();\n    }\n  }\n\n  setUnitFormat(subItem: { value: any }) {\n    this.panel.format = subItem.value;\n    this.refresh();\n  }\n\n  onDataError(err: any) {\n    this.handleDataFrames([]);\n  }\n\n  onSnapshotLoad(dataList: LegacyResponseData[]) {\n    this.onFramesReceived(getProcessedDataFrames(dataList));\n  }\n\n  onFramesReceived(frames: DataFrame[]) {\n    const { panel } = this;\n\n    if (frames && frames.length > 1) {\n      this.data = {\n        value: 0,\n        display: {\n          text: 'Only queries that return single series/table is supported',\n          numeric: NaN,\n        },\n      };\n      this.render();\n      return;\n    }\n\n    const distinct = getDistinctNames(frames);\n    let fieldInfo = distinct.byName[panel.tableColumn]; //\n    this.fieldNames = distinct.names;\n\n    if (!fieldInfo) {\n      fieldInfo = distinct.first;\n    }\n\n    if (!fieldInfo) {\n      const processor = getDisplayProcessor({\n        config: {\n          mappings: convertOldAngularValueMapping(this.panel),\n          noValue: 'No Data',\n        },\n        theme: config.theme,\n      });\n      // When we don't have any field\n      this.data = {\n        value: null,\n        display: processor(null),\n      };\n    } else {\n      this.data = this.processField(fieldInfo);\n    }\n\n    this.render();\n  }\n\n  processField(fieldInfo: FieldInfo) {\n    const { panel, dashboard } = this;\n\n    const name = fieldInfo.field.config.title || fieldInfo.field.name;\n    let calc = panel.valueName;\n    let calcField = fieldInfo.field;\n    let val: any = undefined;\n\n    if ('name' === calc) {\n      val = name;\n    } else {\n      if ('last_time' === calc) {\n        if (fieldInfo.frame.firstTimeField) {\n          calcField = fieldInfo.frame.firstTimeField;\n          calc = ReducerID.last;\n        }\n      }\n\n      // Normalize functions (avg -> mean, etc)\n      const r = fieldReducers.getIfExists(calc);\n      if (r) {\n        calc = r.id;\n        // With strings, don't accidentally use a math function\n        if (calcField.type === FieldType.string) {\n          const avoid = [ReducerID.mean, ReducerID.sum];\n          if (avoid.includes(calc)) {\n            calc = panel.valueName = ReducerID.first;\n          }\n        }\n      } else {\n        calc = ReducerID.lastNotNull;\n      }\n\n      // Calculate the value\n      val = reduceField({\n        field: calcField,\n        reducers: [calc],\n      })[calc];\n    }\n\n    const processor = getDisplayProcessor({\n      config: {\n        ...fieldInfo.field.config,\n        unit: panel.format,\n        decimals: panel.decimals,\n        mappings: convertOldAngularValueMapping(panel),\n      },\n      theme: config.theme,\n      isUtc: dashboard.isTimezoneUtc && dashboard.isTimezoneUtc(),\n    });\n\n    const sparkline: any[] = [];\n    const data = {\n      field: fieldInfo.field,\n      value: val,\n      display: processor(val),\n      scopedVars: _.extend({}, panel.scopedVars),\n      sparkline,\n    };\n\n    data.scopedVars['__name'] = { value: name };\n    panel.tableColumn = this.fieldNames.length > 1 ? name : '';\n\n    // Get the fields for a sparkline\n    if (panel.sparkline && panel.sparkline.show && fieldInfo.frame.firstTimeField) {\n      data.sparkline = getFlotPairs({\n        xField: fieldInfo.frame.firstTimeField,\n        yField: fieldInfo.field,\n        nullValueMode: panel.nullPointMode,\n      });\n    }\n\n    return data;\n  }\n\n  canModifyText() {\n    return !this.panel.gauge.show;\n  }\n\n  setColoring(options: { background: any }) {\n    if (options.background) {\n      this.panel.colorValue = false;\n      this.panel.colors = ['rgba(71, 212, 59, 0.4)', 'rgba(245, 150, 40, 0.73)', 'rgba(225, 40, 40, 0.59)'];\n    } else {\n      this.panel.colorBackground = false;\n      this.panel.colors = ['rgba(50, 172, 45, 0.97)', 'rgba(237, 129, 40, 0.89)', 'rgba(245, 54, 54, 0.9)'];\n    }\n    this.render();\n  }\n\n  invertColorOrder() {\n    const tmp = this.panel.colors[0];\n    this.panel.colors[0] = this.panel.colors[2];\n    this.panel.colors[2] = tmp;\n    this.render();\n  }\n\n  onColorChange(panelColorIndex: number) {\n    return (color: string) => {\n      this.panel.colors[panelColorIndex] = color;\n      this.render();\n    };\n  }\n\n  onSparklineColorChange(newColor: string) {\n    this.panel.sparkline.lineColor = newColor;\n    this.render();\n  }\n\n  onSparklineFillChange(newColor: string) {\n    this.panel.sparkline.fillColor = newColor;\n    this.render();\n  }\n\n  removeValueMap(map: any) {\n    const index = _.indexOf(this.panel.valueMaps, map);\n    this.panel.valueMaps.splice(index, 1);\n    this.render();\n  }\n\n  addValueMap() {\n    this.panel.valueMaps.push({ value: '', op: '=', text: '' });\n  }\n\n  removeRangeMap(rangeMap: any) {\n    const index = _.indexOf(this.panel.rangeMaps, rangeMap);\n    this.panel.rangeMaps.splice(index, 1);\n    this.render();\n  }\n\n  addRangeMap() {\n    this.panel.rangeMaps.push({ from: '', to: '', text: '' });\n  }\n\n  link(scope: any, elem: JQuery, attrs: any, ctrl: any) {\n    const $location = this.$location;\n    const linkSrv = this.linkSrv;\n    const $timeout = this.$timeout;\n    const $sanitize = this.$sanitize;\n    const panel = ctrl.panel;\n    const templateSrv = this.templateSrv;\n    let linkInfo: LinkModel<any> | null = null;\n    const $panelContainer = elem.find('.panel-container');\n    elem = elem.find('.singlestat-panel');\n\n    function applyColoringThresholds(valueString: string) {\n      const data = ctrl.data;\n      const color = getColorForValue(data, data.value);\n      if (color) {\n        return '<span style=\"color:' + color + '\">' + valueString + '</span>';\n      }\n\n      return valueString;\n    }\n\n    function getSpan(className: string, fontSizePercent: string, applyColoring: any, value: string) {\n      value = $sanitize(templateSrv.replace(value, ctrl.data.scopedVars));\n      value = applyColoring ? applyColoringThresholds(value) : value;\n      const pixelSize = (parseInt(fontSizePercent, 10) / 100) * BASE_FONT_SIZE;\n      return '<span class=\"' + className + '\" style=\"font-size:' + pixelSize + 'px\">' + value + '</span>';\n    }\n\n    function getBigValueHtml() {\n      const data: ShowData = ctrl.data;\n      let body = '<div class=\"singlestat-panel-value-container\">';\n\n      if (panel.prefix) {\n        body += getSpan('singlestat-panel-prefix', panel.prefixFontSize, panel.colorPrefix, panel.prefix);\n      }\n\n      body += getSpan('singlestat-panel-value', panel.valueFontSize, panel.colorValue, data.display.text);\n\n      if (panel.postfix) {\n        body += getSpan('singlestat-panel-postfix', panel.postfixFontSize, panel.colorPostfix, panel.postfix);\n      }\n\n      body += '</div>';\n\n      return body;\n    }\n\n    function getValueText() {\n      const data: ShowData = ctrl.data;\n      let result = panel.prefix ? templateSrv.replace(panel.prefix, data.scopedVars) : '';\n      result += data.display.text;\n      result += panel.postfix ? templateSrv.replace(panel.postfix, data.scopedVars) : '';\n\n      return result;\n    }\n\n    function addGauge() {\n      const data: ShowData = ctrl.data;\n      const width = elem.width();\n      const height = elem.height();\n      // Allow to use a bit more space for wide gauges\n      const dimension = Math.min(width, height * 1.3);\n\n      ctrl.invalidGaugeRange = false;\n      if (panel.gauge.minValue > panel.gauge.maxValue) {\n        ctrl.invalidGaugeRange = true;\n        return;\n      }\n\n      const plotCanvas = $('<div></div>');\n      const plotCss = {\n        top: '5px',\n        margin: 'auto',\n        position: 'relative',\n        height: height * 0.9 + 'px',\n        width: dimension + 'px',\n      };\n\n      plotCanvas.css(plotCss);\n\n      const thresholds = [];\n\n      for (let i = 0; i < data.thresholds.length; i++) {\n        thresholds.push({\n          value: data.thresholds[i],\n          color: data.colorMap[i],\n        });\n      }\n      thresholds.push({\n        value: panel.gauge.maxValue,\n        color: data.colorMap[data.colorMap.length - 1],\n      });\n\n      const bgColor = config.bootData.user.lightTheme ? 'rgb(230,230,230)' : 'rgb(38,38,38)';\n\n      const fontScale = parseInt(panel.valueFontSize, 10) / 100;\n      const fontSize = Math.min(dimension / 5, 100) * fontScale;\n      // Reduce gauge width if threshold labels enabled\n      const gaugeWidthReduceRatio = panel.gauge.thresholdLabels ? 1.5 : 1;\n      const gaugeWidth = Math.min(dimension / 6, 60) / gaugeWidthReduceRatio;\n      const thresholdMarkersWidth = gaugeWidth / 5;\n      const thresholdLabelFontSize = fontSize / 2.5;\n\n      const options: any = {\n        series: {\n          gauges: {\n            gauge: {\n              min: panel.gauge.minValue,\n              max: panel.gauge.maxValue,\n              background: { color: bgColor },\n              border: { color: null },\n              shadow: { show: false },\n              width: gaugeWidth,\n            },\n            frame: { show: false },\n            label: { show: false },\n            layout: { margin: 0, thresholdWidth: 0 },\n            cell: { border: { width: 0 } },\n            threshold: {\n              values: thresholds,\n              label: {\n                show: panel.gauge.thresholdLabels,\n                margin: thresholdMarkersWidth + 1,\n                font: { size: thresholdLabelFontSize },\n              },\n              show: panel.gauge.thresholdMarkers,\n              width: thresholdMarkersWidth,\n            },\n            value: {\n              color: panel.colorValue ? getColorForValue(data, data.display.numeric) : null,\n              formatter: () => {\n                return getValueText();\n              },\n              font: {\n                size: fontSize,\n                family: config.theme.typography.fontFamily.sansSerif,\n              },\n            },\n            show: true,\n          },\n        },\n      };\n\n      elem.append(plotCanvas);\n\n      const plotSeries = {\n        data: [[0, data.value]],\n      };\n\n      $.plot(plotCanvas, [plotSeries], options);\n    }\n\n    function addSparkline() {\n      const data: ShowData = ctrl.data;\n      const width = elem.width();\n      if (width < 30) {\n        // element has not gotten it's width yet\n        // delay sparkline render\n        setTimeout(addSparkline, 30);\n        return;\n      }\n      if (!data.sparkline || !data.sparkline.length) {\n        // no sparkline data\n        return;\n      }\n\n      const height = ctrl.height;\n      const plotCanvas = $('<div></div>');\n      const plotCss: any = {};\n      plotCss.position = 'absolute';\n      plotCss.bottom = '0px';\n\n      if (panel.sparkline.full) {\n        plotCss.left = '0px';\n        plotCss.width = width + 'px';\n        const dynamicHeightMargin = height <= 100 ? 5 : Math.round(height / 100) * 15 + 5;\n        plotCss.height = height - dynamicHeightMargin + 'px';\n      } else {\n        plotCss.left = '0px';\n        plotCss.width = width + 'px';\n        plotCss.height = Math.floor(height * 0.25) + 'px';\n      }\n\n      plotCanvas.css(plotCss);\n\n      const options = {\n        legend: { show: false },\n        series: {\n          lines: {\n            show: true,\n            fill: 1,\n            lineWidth: 1,\n            fillColor: getColorFromHexRgbOrName(panel.sparkline.fillColor, config.theme.type),\n            zero: false,\n          },\n        },\n        yaxis: {\n          show: false,\n          min: panel.sparkline.ymin,\n          max: panel.sparkline.ymax,\n        },\n        xaxis: {\n          show: false,\n          mode: 'time',\n          min: ctrl.range.from.valueOf(),\n          max: ctrl.range.to.valueOf(),\n        },\n        grid: { hoverable: false, show: false },\n      };\n\n      elem.append(plotCanvas);\n\n      const plotSeries = {\n        data: data.sparkline,\n        color: getColorFromHexRgbOrName(panel.sparkline.lineColor, config.theme.type),\n      };\n\n      $.plot(plotCanvas, [plotSeries], options);\n    }\n\n    function render() {\n      if (!ctrl.data) {\n        return;\n      }\n      const { data, panel } = ctrl;\n\n      // get thresholds\n      data.thresholds = panel.thresholds\n        ? panel.thresholds.split(',').map((strVale: string) => {\n            return Number(strVale.trim());\n          })\n        : [];\n\n      // Map panel colors to hex or rgb/a values\n      if (panel.colors) {\n        data.colorMap = panel.colors.map((color: string) => getColorFromHexRgbOrName(color, config.theme.type));\n      }\n\n      const body = panel.gauge.show ? '' : getBigValueHtml();\n\n      if (panel.colorBackground) {\n        const color = getColorForValue(data, data.display.numeric);\n        if (color) {\n          $panelContainer.css('background-color', color);\n          if (scope.fullscreen) {\n            elem.css('background-color', color);\n          } else {\n            elem.css('background-color', '');\n          }\n        } else {\n          $panelContainer.css('background-color', '');\n          elem.css('background-color', '');\n        }\n      } else {\n        $panelContainer.css('background-color', '');\n        elem.css('background-color', '');\n      }\n\n      elem.html(body);\n\n      if (panel.sparkline.show) {\n        addSparkline();\n      }\n\n      if (panel.gauge.show) {\n        addGauge();\n      }\n\n      elem.toggleClass('pointer', panel.links.length > 0);\n\n      if (panel.links.length > 0) {\n        linkInfo = linkSrv.getDataLinkUIModel(panel.links[0], data.scopedVars, {});\n      } else {\n        linkInfo = null;\n      }\n    }\n\n    function hookupDrilldownLinkTooltip() {\n      // drilldown link tooltip\n      const drilldownTooltip = $('<div id=\"tooltip\" class=\"\">hello</div>\"');\n\n      elem.mouseleave(() => {\n        if (panel.links.length === 0) {\n          return;\n        }\n        $timeout(() => {\n          drilldownTooltip.detach();\n        });\n      });\n\n      elem.click(evt => {\n        if (!linkInfo) {\n          return;\n        }\n        // ignore title clicks in title\n        if ($(evt).parents('.panel-header').length > 0) {\n          return;\n        }\n\n        if (linkInfo.target === '_blank') {\n          window.open(linkInfo.href, '_blank');\n          return;\n        }\n\n        if (linkInfo.href.indexOf('http') === 0) {\n          window.location.href = linkInfo.href;\n        } else {\n          $timeout(() => {\n            $location.url(linkInfo.href);\n          });\n        }\n\n        drilldownTooltip.detach();\n      });\n\n      elem.mousemove(e => {\n        if (!linkInfo) {\n          return;\n        }\n\n        drilldownTooltip.text('click to go to: ' + linkInfo.title);\n        drilldownTooltip.place_tt(e.pageX, e.pageY - 50);\n      });\n    }\n\n    hookupDrilldownLinkTooltip();\n\n    this.events.on('render', () => {\n      render();\n      ctrl.renderingCompleted();\n    });\n  }\n}\n\nfunction getColorForValue(data: any, value: number) {\n  if (!_.isFinite(value)) {\n    return null;\n  }\n\n  for (let i = data.thresholds.length; i > 0; i--) {\n    if (value >= data.thresholds[i - 1]) {\n      return data.colorMap[i];\n    }\n  }\n\n  return _.first(data.colorMap);\n}\n\n//------------------------------------------------\n// Private utility functions\n// Somethign like this should be avaliable in a\n//  DataFrame[] abstraction helper\n//------------------------------------------------\n\ninterface FrameInfo {\n  firstTimeField?: Field;\n  frame: DataFrame;\n}\n\ninterface FieldInfo {\n  field: Field;\n  frame: FrameInfo;\n}\n\ninterface DistinctFieldsInfo {\n  first?: FieldInfo;\n  byName: KeyValue<FieldInfo>;\n  names: string[];\n}\n\nfunction getDistinctNames(data: DataFrame[]): DistinctFieldsInfo {\n  const distinct: DistinctFieldsInfo = {\n    byName: {},\n    names: [],\n  };\n  for (const frame of data) {\n    const info: FrameInfo = { frame };\n    for (const field of frame.fields) {\n      if (field.type === FieldType.time) {\n        if (!info.firstTimeField) {\n          info.firstTimeField = field;\n        }\n      } else {\n        const f = { field, frame: info };\n        if (!distinct.first) {\n          distinct.first = f;\n        }\n        let t = field.config.title;\n        if (t && !distinct.byName[t]) {\n          distinct.byName[t] = f;\n          distinct.names.push(t);\n        }\n        t = field.name;\n        if (t && !distinct.byName[t]) {\n          distinct.byName[t] = f;\n          distinct.names.push(t);\n        }\n      }\n    }\n  }\n  return distinct;\n}\n\nexport { SingleStatCtrl, SingleStatCtrl as PanelCtrl, getColorForValue };\n","import { VizOrientation, SingleStatBaseOptions, FieldDisplayOptions } from '@grafana/ui';\nimport { ReducerID } from '@grafana/data';\n\nexport interface SparklineOptions {\n  show: boolean;\n  full: boolean; // full height\n  fillColor: string;\n  lineColor: string;\n}\n\n// Structure copied from angular\nexport interface SingleStatOptions extends SingleStatBaseOptions {\n  prefixFontSize?: string;\n  valueFontSize?: string;\n  postfixFontSize?: string;\n  colorBackground: boolean;\n  colorValue: boolean;\n  colorPrefix: boolean;\n  colorPostfix: boolean;\n  sparkline: SparklineOptions;\n}\n\nexport const standardFieldDisplayOptions: FieldDisplayOptions = {\n  values: false,\n  calcs: [ReducerID.mean],\n  defaults: {\n    min: 0,\n    max: 100,\n    thresholds: [\n      { value: -Infinity, color: 'green' },\n      { value: 80, color: 'red' }, // 80%\n    ],\n    mappings: [],\n  },\n  override: {},\n};\n\nexport const defaults: SingleStatOptions = {\n  sparkline: {\n    show: true,\n    full: false,\n    lineColor: 'rgb(31, 120, 193)',\n    fillColor: 'rgba(31, 118, 189, 0.18)',\n  },\n  fieldOptions: standardFieldDisplayOptions,\n  orientation: VizOrientation.Auto,\n  colorBackground: false,\n  colorValue: false,\n  colorPrefix: false,\n  colorPostfix: false,\n};\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Utils & Services\nimport { config } from 'app/core/config';\n\n// Types\nimport { SingleStatOptions } from './types';\nimport {\n  PanelProps,\n  getFieldDisplayValues,\n  VizRepeater,\n  FieldDisplay,\n  BigValue,\n  DataLinksContextMenu,\n} from '@grafana/ui';\nimport { BigValueSparkline } from '@grafana/ui/src/components/BigValue/BigValue';\nimport { getFieldLinksSupplier } from 'app/features/panel/panellinks/linkSuppliers';\n\nexport class SingleStatPanel extends PureComponent<PanelProps<SingleStatOptions>> {\n  renderValue = (value: FieldDisplay, width: number, height: number): JSX.Element => {\n    let sparkline: BigValueSparkline;\n    if (value.sparkline) {\n      const { timeRange, options } = this.props;\n\n      sparkline = {\n        ...options.sparkline,\n        data: value.sparkline,\n        minX: timeRange.from.valueOf(),\n        maxX: timeRange.to.valueOf(),\n      };\n    }\n\n    return (\n      <DataLinksContextMenu links={getFieldLinksSupplier(value)}>\n        {({ openMenu, targetClassName }) => {\n          return (\n            <BigValue\n              value={value.display}\n              sparkline={sparkline}\n              width={width}\n              height={height}\n              theme={config.theme}\n              onClick={openMenu}\n              className={targetClassName}\n            />\n          );\n        }}\n      </DataLinksContextMenu>\n    );\n  };\n\n  getValues = (): FieldDisplay[] => {\n    const { data, options, replaceVariables } = this.props;\n    return getFieldDisplayValues({\n      ...options,\n      replaceVariables,\n      theme: config.theme,\n      data: data.series,\n      sparkline: options.sparkline.show,\n    });\n  };\n\n  render() {\n    const { height, width, options, data, renderCounter } = this.props;\n    return (\n      <VizRepeater\n        getValues={this.getValues}\n        renderValue={this.renderValue}\n        width={width}\n        height={height}\n        source={data}\n        renderCounter={renderCounter}\n        orientation={options.orientation}\n      />\n    );\n  }\n}\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Components\nimport { Switch, PanelOptionsGroup } from '@grafana/ui';\n\n// Types\nimport { SingleStatOptions } from './types';\n\nconst labelWidth = 6;\n\nexport interface Props {\n  options: SingleStatOptions;\n  onChange: (options: SingleStatOptions) => void;\n}\n\nexport class ColoringEditor extends PureComponent<Props> {\n  onToggleColorBackground = () =>\n    this.props.onChange({ ...this.props.options, colorBackground: !this.props.options.colorBackground });\n\n  onToggleColorValue = () => this.props.onChange({ ...this.props.options, colorValue: !this.props.options.colorValue });\n\n  onToggleColorPrefix = () =>\n    this.props.onChange({ ...this.props.options, colorPrefix: !this.props.options.colorPrefix });\n\n  onToggleColorPostfix = () =>\n    this.props.onChange({ ...this.props.options, colorPostfix: !this.props.options.colorPostfix });\n\n  render() {\n    const { colorBackground, colorValue, colorPrefix, colorPostfix } = this.props.options;\n\n    return (\n      <PanelOptionsGroup title=\"Coloring\">\n        <Switch\n          label=\"Background\"\n          labelClass={`width-${labelWidth}`}\n          checked={colorBackground!}\n          onChange={this.onToggleColorBackground}\n        />\n\n        <Switch\n          label=\"Value\"\n          labelClass={`width-${labelWidth}`}\n          checked={colorValue!}\n          onChange={this.onToggleColorValue}\n        />\n\n        <Switch\n          label=\"Prefix\"\n          labelClass={`width-${labelWidth}`}\n          checked={colorPrefix!}\n          onChange={this.onToggleColorPrefix}\n        />\n        <Switch\n          label=\"Postfix\"\n          labelClass={`width-${labelWidth}`}\n          checked={colorPostfix!}\n          onChange={this.onToggleColorPostfix}\n        />\n      </PanelOptionsGroup>\n    );\n  }\n}\n","import _ from 'lodash';\nimport * as sdk from 'app/plugins/sdk';\nimport kbn from 'app/core/utils/kbn';\n// tslint:disable:import-blacklist\nimport moment from 'moment';\nimport angular from 'angular';\nimport jquery from 'jquery';\n\n// Experimental module exports\nimport prismjs from 'prismjs';\nimport slate from 'slate';\n// @ts-ignore\nimport slateReact from '@grafana/slate-react';\n// @ts-ignore\nimport slatePlain from 'slate-plain-serializer';\nimport react from 'react';\nimport reactDom from 'react-dom';\nimport reactRedux from 'react-redux';\nimport redux from 'redux';\n\nimport config from 'app/core/config';\nimport TimeSeries from 'app/core/time_series2';\nimport TableModel from 'app/core/table_model';\nimport { coreModule, appEvents, contextSrv } from 'app/core/core';\nimport { DataSourcePlugin, AppPlugin, PanelPlugin, PluginMeta, DataSourcePluginMeta } from '@grafana/ui';\nimport { dateMath } from '@grafana/data';\nimport * as fileExport from 'app/core/utils/file_export';\nimport * as flatten from 'app/core/utils/flatten';\nimport * as ticks from 'app/core/utils/ticks';\nimport { BackendSrv, getBackendSrv } from 'app/core/services/backend_srv';\nimport impressionSrv from 'app/core/services/impression_srv';\nimport builtInPlugins from './built_in_plugins';\nimport * as d3 from 'd3';\nimport * as emotion from 'emotion';\nimport * as grafanaData from '@grafana/data';\nimport * as grafanaUI from '@grafana/ui';\nimport * as grafanaRuntime from '@grafana/runtime';\n\n// rxjs\nimport * as rxjs from 'rxjs';\nimport * as rxjsOperators from 'rxjs/operators';\n\n// add cache busting\nconst bust = `?_cache=${Date.now()}`;\nfunction locate(load: { address: string }) {\n  return load.address + bust;\n}\ngrafanaRuntime.SystemJS.registry.set('plugin-loader', grafanaRuntime.SystemJS.newModule({ locate: locate }));\n\ngrafanaRuntime.SystemJS.config({\n  baseURL: 'public',\n  defaultExtension: 'js',\n  packages: {\n    plugins: {\n      defaultExtension: 'js',\n    },\n  },\n  map: {\n    text: 'vendor/plugin-text/text.js',\n    css: 'vendor/plugin-css/css.js',\n  },\n  meta: {\n    '/*': {\n      esModule: true,\n      authorization: true,\n      loader: 'plugin-loader',\n    },\n  },\n});\n\nfunction exposeToPlugin(name: string, component: any) {\n  grafanaRuntime.SystemJS.registerDynamic(name, [], true, (require: any, exports: any, module: { exports: any }) => {\n    module.exports = component;\n  });\n}\n\nexposeToPlugin('@grafana/data', grafanaData);\nexposeToPlugin('@grafana/ui', grafanaUI);\nexposeToPlugin('@grafana/runtime', grafanaRuntime);\nexposeToPlugin('lodash', _);\nexposeToPlugin('moment', moment);\nexposeToPlugin('jquery', jquery);\nexposeToPlugin('angular', angular);\nexposeToPlugin('d3', d3);\nexposeToPlugin('rxjs', rxjs);\nexposeToPlugin('rxjs/operators', rxjsOperators);\n\n// Experimental modules\nexposeToPlugin('prismjs', prismjs);\nexposeToPlugin('slate', slate);\nexposeToPlugin('@grafana/slate-react', slateReact);\nexposeToPlugin('slate-plain-serializer', slatePlain);\nexposeToPlugin('react', react);\nexposeToPlugin('react-dom', reactDom);\nexposeToPlugin('react-redux', reactRedux);\nexposeToPlugin('redux', redux);\nexposeToPlugin('emotion', emotion);\n\nexposeToPlugin('app/features/dashboard/impression_store', {\n  impressions: impressionSrv,\n  __esModule: true,\n});\n\n/**\n * NOTE: this is added temporarily while we explore a long term solution\n * If you use this export, only use the:\n *  get/delete/post/patch/request methods\n */\nexposeToPlugin('app/core/services/backend_srv', {\n  BackendSrv,\n  getBackendSrv,\n});\n\nexposeToPlugin('app/plugins/sdk', sdk);\nexposeToPlugin('app/core/utils/datemath', dateMath);\nexposeToPlugin('app/core/utils/file_export', fileExport);\nexposeToPlugin('app/core/utils/flatten', flatten);\nexposeToPlugin('app/core/utils/kbn', kbn);\nexposeToPlugin('app/core/utils/ticks', ticks);\n\nexposeToPlugin('app/core/config', config);\nexposeToPlugin('app/core/time_series', TimeSeries);\nexposeToPlugin('app/core/time_series2', TimeSeries);\nexposeToPlugin('app/core/table_model', TableModel);\nexposeToPlugin('app/core/app_events', appEvents);\nexposeToPlugin('app/core/core_module', coreModule);\nexposeToPlugin('app/core/core', {\n  coreModule: coreModule,\n  appEvents: appEvents,\n  contextSrv: contextSrv,\n  __esModule: true,\n});\n\nimport 'vendor/flot/jquery.flot';\nimport 'vendor/flot/jquery.flot.selection';\nimport 'vendor/flot/jquery.flot.time';\nimport 'vendor/flot/jquery.flot.stack';\nimport 'vendor/flot/jquery.flot.pie';\nimport 'vendor/flot/jquery.flot.stackpercent';\nimport 'vendor/flot/jquery.flot.fillbelow';\nimport 'vendor/flot/jquery.flot.crosshair';\nimport 'vendor/flot/jquery.flot.dashes';\nimport 'vendor/flot/jquery.flot.gauge';\n\nconst flotDeps = [\n  'jquery.flot',\n  'jquery.flot.pie',\n  'jquery.flot.time',\n  'jquery.flot.fillbelow',\n  'jquery.flot.crosshair',\n  'jquery.flot.stack',\n  'jquery.flot.selection',\n  'jquery.flot.stackpercent',\n  'jquery.flot.events',\n  'jquery.flot.gauge',\n];\n\nfor (const flotDep of flotDeps) {\n  exposeToPlugin(flotDep, { fakeDep: 1 });\n}\n\nexport async function importPluginModule(path: string): Promise<any> {\n  const builtIn = builtInPlugins[path];\n  if (builtIn) {\n    // for handling dynamic imports\n    if (typeof builtIn === 'function') {\n      return await builtIn();\n    } else {\n      return Promise.resolve(builtIn);\n    }\n  }\n  return grafanaRuntime.SystemJS.import(path);\n}\n\nexport function importDataSourcePlugin(meta: DataSourcePluginMeta): Promise<DataSourcePlugin<any>> {\n  return importPluginModule(meta.module).then(pluginExports => {\n    if (pluginExports.plugin) {\n      const dsPlugin = pluginExports.plugin as DataSourcePlugin<any>;\n      dsPlugin.meta = meta;\n      return dsPlugin;\n    }\n\n    if (pluginExports.Datasource) {\n      const dsPlugin = new DataSourcePlugin(pluginExports.Datasource);\n      dsPlugin.setComponentsFromLegacyExports(pluginExports);\n      dsPlugin.meta = meta;\n      return dsPlugin;\n    }\n\n    throw new Error('Plugin module is missing DataSourcePlugin or Datasource constructor export');\n  });\n}\n\nexport function importAppPlugin(meta: PluginMeta): Promise<AppPlugin> {\n  return importPluginModule(meta.module).then(pluginExports => {\n    const plugin = pluginExports.plugin ? (pluginExports.plugin as AppPlugin) : new AppPlugin();\n    plugin.init(meta);\n    plugin.meta = meta;\n    plugin.setComponentsFromLegacyExports(pluginExports);\n    return plugin;\n  });\n}\n\nimport { getPanelPluginNotFound, getPanelPluginLoadError } from '../dashboard/dashgrid/PanelPluginError';\n\ninterface PanelCache {\n  [key: string]: PanelPlugin;\n}\nconst panelCache: PanelCache = {};\n\nexport function importPanelPlugin(id: string): Promise<PanelPlugin> {\n  const loaded = panelCache[id];\n  if (loaded) {\n    return Promise.resolve(loaded);\n  }\n  const meta = config.panels[id];\n  if (!meta) {\n    return Promise.resolve(getPanelPluginNotFound(id));\n  }\n\n  return importPluginModule(meta.module)\n    .then(pluginExports => {\n      if (pluginExports.plugin) {\n        return pluginExports.plugin as PanelPlugin;\n      } else if (pluginExports.PanelCtrl) {\n        const plugin = new PanelPlugin(null);\n        plugin.angularPanelCtrl = pluginExports.PanelCtrl;\n        return plugin;\n      }\n      throw new Error('missing export: plugin or PanelCtrl');\n    })\n    .then(plugin => {\n      plugin.meta = meta;\n      return (panelCache[meta.id] = plugin);\n    })\n    .catch(err => {\n      // TODO, maybe a different error plugin\n      console.warn('Error loading panel plugin: ' + id, err);\n      return getPanelPluginLoadError(meta, err);\n    });\n}\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Components\nimport { FormLabel, Select, PanelOptionsGroup } from '@grafana/ui';\n\n// Types\nimport { SingleStatOptions } from './types';\nimport { SelectableValue } from '@grafana/data';\n\nconst labelWidth = 6;\n\nexport interface Props {\n  options: SingleStatOptions;\n  onChange: (options: SingleStatOptions) => void;\n}\n\nconst percents = ['20%', '30%', '50%', '70%', '80%', '100%', '110%', '120%', '150%', '170%', '200%'];\nconst fontSizeOptions = percents.map(v => {\n  return { value: v, label: v };\n});\n\nexport class FontSizeEditor extends PureComponent<Props> {\n  setPrefixFontSize = (v: SelectableValue<string>) =>\n    this.props.onChange({ ...this.props.options, prefixFontSize: v.value });\n\n  setValueFontSize = (v: SelectableValue<string>) =>\n    this.props.onChange({ ...this.props.options, valueFontSize: v.value });\n\n  setPostfixFontSize = (v: SelectableValue<string>) =>\n    this.props.onChange({ ...this.props.options, postfixFontSize: v.value });\n\n  render() {\n    const { prefixFontSize, valueFontSize, postfixFontSize } = this.props.options;\n\n    return (\n      <PanelOptionsGroup title=\"Font Size\">\n        <div className=\"gf-form\">\n          <FormLabel width={labelWidth}>Prefix</FormLabel>\n          <Select\n            width={12}\n            options={fontSizeOptions}\n            onChange={this.setPrefixFontSize}\n            value={fontSizeOptions.find(option => option.value === prefixFontSize)}\n          />\n        </div>\n\n        <div className=\"gf-form\">\n          <FormLabel width={labelWidth}>Value</FormLabel>\n          <Select\n            width={12}\n            options={fontSizeOptions}\n            onChange={this.setValueFontSize}\n            value={fontSizeOptions.find(option => option.value === valueFontSize)}\n          />\n        </div>\n\n        <div className=\"gf-form\">\n          <FormLabel width={labelWidth}>Postfix</FormLabel>\n          <Select\n            width={12}\n            options={fontSizeOptions}\n            onChange={this.setPostfixFontSize}\n            value={fontSizeOptions.find(option => option.value === postfixFontSize)}\n          />\n        </div>\n      </PanelOptionsGroup>\n    );\n  }\n}\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Components\nimport { Switch, PanelOptionsGroup } from '@grafana/ui';\n\n// Types\nimport { SparklineOptions } from './types';\n\nconst labelWidth = 6;\n\nexport interface Props {\n  options: SparklineOptions;\n  onChange: (options: SparklineOptions) => void;\n}\n\nexport class SparklineEditor extends PureComponent<Props> {\n  onToggleShow = () => this.props.onChange({ ...this.props.options, show: !this.props.options.show });\n\n  onToggleFull = () => this.props.onChange({ ...this.props.options, full: !this.props.options.full });\n\n  render() {\n    const { show, full } = this.props.options;\n\n    return (\n      <PanelOptionsGroup title=\"Sparkline\">\n        <Switch label=\"Show\" labelClass={`width-${labelWidth}`} checked={show} onChange={this.onToggleShow} />\n\n        <Switch label=\"Full Height\" labelClass={`width-${labelWidth}`} checked={full} onChange={this.onToggleFull} />\n      </PanelOptionsGroup>\n    );\n  }\n}\n","// Libraries\nimport React, { PureComponent } from 'react';\nimport {\n  PanelEditorProps,\n  ThresholdsEditor,\n  PanelOptionsGrid,\n  ValueMappingsEditor,\n  FieldDisplayOptions,\n  FieldDisplayEditor,\n  FieldPropertiesEditor,\n  PanelOptionsGroup,\n  DataLinksEditor,\n} from '@grafana/ui';\nimport { Threshold, ValueMapping, FieldConfig, DataLink } from '@grafana/data';\n\nimport { SingleStatOptions, SparklineOptions } from './types';\nimport { ColoringEditor } from './ColoringEditor';\nimport { FontSizeEditor } from './FontSizeEditor';\nimport { SparklineEditor } from './SparklineEditor';\nimport {\n  getDataLinksVariableSuggestions,\n  getCalculationValueDataLinksVariableSuggestions,\n} from 'app/features/panel/panellinks/link_srv';\n\nexport class SingleStatEditor extends PureComponent<PanelEditorProps<SingleStatOptions>> {\n  onThresholdsChanged = (thresholds: Threshold[]) => {\n    const current = this.props.options.fieldOptions.defaults;\n    this.onDefaultsChange({\n      ...current,\n      thresholds,\n    });\n  };\n\n  onValueMappingsChanged = (mappings: ValueMapping[]) => {\n    const current = this.props.options.fieldOptions.defaults;\n    this.onDefaultsChange({\n      ...current,\n      mappings,\n    });\n  };\n\n  onDisplayOptionsChanged = (fieldOptions: FieldDisplayOptions) =>\n    this.props.onOptionsChange({\n      ...this.props.options,\n      fieldOptions,\n    });\n\n  onSparklineChanged = (sparkline: SparklineOptions) =>\n    this.props.onOptionsChange({\n      ...this.props.options,\n      sparkline,\n    });\n\n  onDefaultsChange = (field: FieldConfig) => {\n    this.onDisplayOptionsChanged({\n      ...this.props.options.fieldOptions,\n      defaults: field,\n    });\n  };\n\n  onDataLinksChanged = (links: DataLink[]) => {\n    this.onDefaultsChange({\n      ...this.props.options.fieldOptions.defaults,\n      links,\n    });\n  };\n\n  render() {\n    const { options } = this.props;\n    const { fieldOptions } = options;\n    const { defaults } = fieldOptions;\n    const suggestions = fieldOptions.values\n      ? getDataLinksVariableSuggestions(this.props.data.series)\n      : getCalculationValueDataLinksVariableSuggestions(this.props.data.series);\n\n    return (\n      <>\n        <PanelOptionsGrid>\n          <PanelOptionsGroup title=\"Display\">\n            <FieldDisplayEditor onChange={this.onDisplayOptionsChanged} value={fieldOptions} />\n          </PanelOptionsGroup>\n\n          <PanelOptionsGroup title=\"Field (default)\">\n            <FieldPropertiesEditor showMinMax={true} onChange={this.onDefaultsChange} value={defaults} />\n          </PanelOptionsGroup>\n\n          <FontSizeEditor options={options} onChange={this.props.onOptionsChange} />\n          <ColoringEditor options={options} onChange={this.props.onOptionsChange} />\n          <SparklineEditor options={options.sparkline} onChange={this.onSparklineChanged} />\n\n          <ThresholdsEditor onChange={this.onThresholdsChanged} thresholds={defaults.thresholds} />\n        </PanelOptionsGrid>\n\n        <ValueMappingsEditor onChange={this.onValueMappingsChanged} valueMappings={defaults.mappings} />\n\n        <PanelOptionsGroup title=\"Data links\">\n          <DataLinksEditor\n            value={defaults.links}\n            onChange={this.onDataLinksChanged}\n            suggestions={suggestions}\n            maxLinks={10}\n          />\n        </PanelOptionsGroup>\n      </>\n    );\n  }\n}\n","import { PanelPlugin, sharedSingleStatMigrationHandler, sharedSingleStatPanelChangedHandler } from '@grafana/ui';\nimport { SingleStatOptions, defaults } from './types';\nimport { SingleStatPanel } from './SingleStatPanel';\nimport { SingleStatEditor } from './SingleStatEditor';\n\nexport const plugin = new PanelPlugin<SingleStatOptions>(SingleStatPanel)\n  .setDefaults(defaults)\n  .setEditor(SingleStatEditor)\n  .setPanelChangeHandler(sharedSingleStatPanelChangedHandler)\n  .setMigrationHandler(sharedSingleStatMigrationHandler);\n","// Libraries\nimport React, { PureComponent } from 'react';\n\nimport { PanelProps } from '@grafana/ui';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport { getBackendSrv } from 'app/core/services/backend_srv';\nimport { contextSrv } from 'app/core/core';\nimport { getDashboardSrv } from 'app/features/dashboard/services/DashboardSrv';\n\ninterface Step {\n  title: string;\n  cta?: string;\n  icon: string;\n  href: string;\n  target?: string;\n  note?: string;\n  check: () => Promise<boolean>;\n  done?: boolean;\n}\n\ninterface State {\n  checksDone: boolean;\n}\n\nexport class GettingStarted extends PureComponent<PanelProps, State> {\n  stepIndex = 0;\n  readonly steps: Step[];\n\n  constructor(props: PanelProps) {\n    super(props);\n\n    this.state = {\n      checksDone: false,\n    };\n\n    this.steps = [\n      {\n        title: 'Install Grafana',\n        icon: 'icon-gf icon-gf-check',\n        href: 'http://docs.grafana.org/',\n        target: '_blank',\n        note: 'Review the installation docs',\n        check: () => Promise.resolve(true),\n      },\n      {\n        title: 'Create your first data source',\n        cta: 'Add data source',\n        icon: 'gicon gicon-datasources',\n        href: 'datasources/new?gettingstarted',\n        check: () => {\n          return new Promise(resolve => {\n            resolve(\n              getDatasourceSrv()\n                .getMetricSources()\n                .filter(item => {\n                  return item.meta.builtIn !== true;\n                }).length > 0\n            );\n          });\n        },\n      },\n      {\n        title: 'Create your first dashboard',\n        cta: 'New dashboard',\n        icon: 'gicon gicon-dashboard',\n        href: 'dashboard/new?gettingstarted',\n        check: () => {\n          return getBackendSrv()\n            .search({ limit: 1 })\n            .then(result => {\n              return result.length > 0;\n            });\n        },\n      },\n      {\n        title: 'Invite your team',\n        cta: 'Add Users',\n        icon: 'gicon gicon-team',\n        href: 'org/users?gettingstarted',\n        check: () => {\n          return getBackendSrv()\n            .get('/api/org/users/lookup')\n            .then((res: any) => {\n              return res.length > 1;\n            });\n        },\n      },\n      {\n        title: 'Install apps & plugins',\n        cta: 'Explore plugin repository',\n        icon: 'gicon gicon-plugins',\n        href: 'https://grafana.com/plugins?utm_source=grafana_getting_started',\n        check: () => {\n          return getBackendSrv()\n            .get('/api/plugins', { embedded: 0, core: 0 })\n            .then((plugins: any[]) => {\n              return plugins.length > 0;\n            });\n        },\n      },\n    ];\n  }\n\n  componentDidMount() {\n    this.stepIndex = -1;\n    return this.nextStep().then((res: any) => {\n      this.setState({ checksDone: true });\n    });\n  }\n\n  nextStep(): any {\n    if (this.stepIndex === this.steps.length - 1) {\n      return Promise.resolve();\n    }\n\n    this.stepIndex += 1;\n    const currentStep = this.steps[this.stepIndex];\n    return currentStep.check().then(passed => {\n      if (passed) {\n        currentStep.done = true;\n        return this.nextStep();\n      }\n      return Promise.resolve();\n    });\n  }\n\n  dismiss = () => {\n    const { id } = this.props;\n    const dashboard = getDashboardSrv().getCurrent();\n    const panel = dashboard.getPanelById(id);\n    dashboard.removePanel(panel);\n    getBackendSrv()\n      .request({\n        method: 'PUT',\n        url: '/api/user/helpflags/1',\n        showSuccessAlert: false,\n      })\n      .then((res: any) => {\n        contextSrv.user.helpFlags1 = res.helpFlags1;\n      });\n  };\n\n  render() {\n    const { checksDone } = this.state;\n    if (!checksDone) {\n      return <div>checking...</div>;\n    }\n\n    return (\n      <div className=\"progress-tracker-container\">\n        <button className=\"progress-tracker-close-btn\" onClick={this.dismiss}>\n          <i className=\"fa fa-remove\" />\n        </button>\n        <div className=\"progress-tracker\">\n          {this.steps.map((step, index) => {\n            return (\n              <div key={index} className={step.done ? 'progress-step completed' : 'progress-step active'}>\n                <a className=\"progress-link\" href={step.href} target={step.target} title={step.note}>\n                  <span className=\"progress-marker\">\n                    <i className={step.icon} />\n                  </span>\n                  <span className=\"progress-text\">{step.title}</span>\n                </a>\n                <a className=\"btn-small progress-step-cta\" href={step.href} target={step.target}>\n                  {step.cta}\n                </a>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","// Libraries\nimport React, { PureComponent } from 'react';\nimport {\n  PanelEditorProps,\n  ThresholdsEditor,\n  PanelOptionsGrid,\n  ValueMappingsEditor,\n  FieldDisplayOptions,\n  FieldDisplayEditor,\n  FieldPropertiesEditor,\n  Switch,\n  PanelOptionsGroup,\n  DataLinksEditor,\n} from '@grafana/ui';\nimport { Threshold, ValueMapping, FieldConfig, DataLink } from '@grafana/data';\n\nimport { GaugeOptions } from './types';\nimport {\n  getCalculationValueDataLinksVariableSuggestions,\n  getDataLinksVariableSuggestions,\n} from 'app/features/panel/panellinks/link_srv';\n\nexport class GaugePanelEditor extends PureComponent<PanelEditorProps<GaugeOptions>> {\n  labelWidth = 6;\n\n  onToggleThresholdLabels = () =>\n    this.props.onOptionsChange({ ...this.props.options, showThresholdLabels: !this.props.options.showThresholdLabels });\n\n  onToggleThresholdMarkers = () =>\n    this.props.onOptionsChange({\n      ...this.props.options,\n      showThresholdMarkers: !this.props.options.showThresholdMarkers,\n    });\n\n  onThresholdsChanged = (thresholds: Threshold[]) => {\n    const current = this.props.options.fieldOptions.defaults;\n    this.onDefaultsChange({\n      ...current,\n      thresholds,\n    });\n  };\n\n  onValueMappingsChanged = (mappings: ValueMapping[]) => {\n    const current = this.props.options.fieldOptions.defaults;\n    this.onDefaultsChange({\n      ...current,\n      mappings,\n    });\n  };\n\n  onDisplayOptionsChanged = (\n    fieldOptions: FieldDisplayOptions,\n    event?: React.SyntheticEvent<HTMLElement>,\n    callback?: () => void\n  ) =>\n    this.props.onOptionsChange(\n      {\n        ...this.props.options,\n        fieldOptions,\n      },\n      callback\n    );\n\n  onDefaultsChange = (field: FieldConfig, event?: React.SyntheticEvent<HTMLElement>, callback?: () => void) => {\n    this.onDisplayOptionsChanged(\n      {\n        ...this.props.options.fieldOptions,\n        defaults: field,\n      },\n      event,\n      callback\n    );\n  };\n\n  onDataLinksChanged = (links: DataLink[], callback?: () => void) => {\n    this.onDefaultsChange(\n      {\n        ...this.props.options.fieldOptions.defaults,\n        links,\n      },\n      undefined,\n      callback\n    );\n  };\n\n  render() {\n    const { options } = this.props;\n    const { fieldOptions, showThresholdLabels, showThresholdMarkers } = options;\n    const { defaults } = fieldOptions;\n\n    const suggestions = fieldOptions.values\n      ? getDataLinksVariableSuggestions(this.props.data.series)\n      : getCalculationValueDataLinksVariableSuggestions(this.props.data.series);\n\n    return (\n      <>\n        <PanelOptionsGrid>\n          <PanelOptionsGroup title=\"Display\">\n            <FieldDisplayEditor\n              onChange={this.onDisplayOptionsChanged}\n              value={fieldOptions}\n              labelWidth={this.labelWidth}\n            />\n            <Switch\n              label=\"Labels\"\n              labelClass={`width-${this.labelWidth}`}\n              checked={showThresholdLabels}\n              onChange={this.onToggleThresholdLabels}\n            />\n            <Switch\n              label=\"Markers\"\n              labelClass={`width-${this.labelWidth}`}\n              checked={showThresholdMarkers}\n              onChange={this.onToggleThresholdMarkers}\n            />\n          </PanelOptionsGroup>\n\n          <PanelOptionsGroup title=\"Field\">\n            <FieldPropertiesEditor showMinMax={true} onChange={this.onDefaultsChange} value={defaults} />\n          </PanelOptionsGroup>\n\n          <ThresholdsEditor onChange={this.onThresholdsChanged} thresholds={defaults.thresholds} />\n        </PanelOptionsGrid>\n\n        <ValueMappingsEditor onChange={this.onValueMappingsChanged} valueMappings={defaults.mappings} />\n\n        <PanelOptionsGroup title=\"Data links\">\n          <DataLinksEditor\n            value={defaults.links}\n            onChange={this.onDataLinksChanged}\n            suggestions={suggestions}\n            maxLinks={10}\n          />\n        </PanelOptionsGroup>\n      </>\n    );\n  }\n}\n","import { PanelPlugin } from '@grafana/ui';\nimport { GettingStarted } from './GettingStarted';\n\n// Simplest possible panel plugin\nexport const plugin = new PanelPlugin(GettingStarted);\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Services & Utils\nimport { config } from 'app/core/config';\n\n// Components\nimport { Gauge, FieldDisplay, getFieldDisplayValues, VizOrientation, DataLinksContextMenu } from '@grafana/ui';\n\n// Types\nimport { GaugeOptions } from './types';\nimport { PanelProps, VizRepeater } from '@grafana/ui';\nimport { getFieldLinksSupplier } from 'app/features/panel/panellinks/linkSuppliers';\n\nexport class GaugePanel extends PureComponent<PanelProps<GaugeOptions>> {\n  renderValue = (value: FieldDisplay, width: number, height: number): JSX.Element => {\n    const { options } = this.props;\n    const { field, display } = value;\n\n    return (\n      <DataLinksContextMenu links={getFieldLinksSupplier(value)}>\n        {({ openMenu, targetClassName }) => {\n          return (\n            <Gauge\n              value={display}\n              width={width}\n              height={height}\n              thresholds={field.thresholds}\n              showThresholdLabels={options.showThresholdLabels}\n              showThresholdMarkers={options.showThresholdMarkers}\n              minValue={field.min}\n              maxValue={field.max}\n              theme={config.theme}\n              onClick={openMenu}\n              className={targetClassName}\n            />\n          );\n        }}\n      </DataLinksContextMenu>\n    );\n  };\n\n  getValues = (): FieldDisplay[] => {\n    const { data, options, replaceVariables } = this.props;\n    return getFieldDisplayValues({\n      fieldOptions: options.fieldOptions,\n      replaceVariables,\n      theme: config.theme,\n      data: data.series,\n    });\n  };\n\n  render() {\n    const { height, width, data, renderCounter } = this.props;\n    return (\n      <VizRepeater\n        getValues={this.getValues}\n        renderValue={this.renderValue}\n        width={width}\n        height={height}\n        source={data}\n        renderCounter={renderCounter}\n        orientation={VizOrientation.Auto}\n      />\n    );\n  }\n}\n","import { VizOrientation, FieldDisplayOptions } from '@grafana/ui';\nimport { SingleStatBaseOptions } from '@grafana/ui/src/components/SingleStatShared/SingleStatBaseOptions';\nimport { standardFieldDisplayOptions } from '../singlestat2/types';\n\nexport interface GaugeOptions extends SingleStatBaseOptions {\n  showThresholdLabels: boolean;\n  showThresholdMarkers: boolean;\n}\n\nexport const standardGaugeFieldOptions: FieldDisplayOptions = {\n  ...standardFieldDisplayOptions,\n};\n\nexport const defaults: GaugeOptions = {\n  showThresholdMarkers: true,\n  showThresholdLabels: false,\n  fieldOptions: standardGaugeFieldOptions,\n  orientation: VizOrientation.Auto,\n};\n","import { PanelModel, sharedSingleStatPanelChangedHandler, sharedSingleStatMigrationHandler } from '@grafana/ui';\nimport { GaugeOptions } from './types';\n\n// This is called when the panel first loads\nexport const gaugePanelMigrationHandler = (panel: PanelModel<GaugeOptions>): Partial<GaugeOptions> => {\n  return sharedSingleStatMigrationHandler(panel);\n};\n\n// This is called when the panel changes from another panel\nexport const gaugePanelChangedHandler = (\n  options: Partial<GaugeOptions> | any,\n  prevPluginId: string,\n  prevOptions: any\n) => {\n  // This handles most config changes\n  const opts = sharedSingleStatPanelChangedHandler(options, prevPluginId, prevOptions) as GaugeOptions;\n\n  // Changing from angular singlestat\n  if (prevPluginId === 'singlestat' && prevOptions.angular) {\n    const gauge = prevOptions.angular.gauge;\n    if (gauge) {\n      opts.showThresholdMarkers = gauge.thresholdMarkers;\n      opts.showThresholdLabels = gauge.thresholdLabels;\n    }\n  }\n  return opts;\n};\n","import { PanelPlugin } from '@grafana/ui';\nimport { GaugePanelEditor } from './GaugePanelEditor';\nimport { GaugePanel } from './GaugePanel';\nimport { GaugeOptions, defaults } from './types';\nimport { gaugePanelMigrationHandler, gaugePanelChangedHandler } from './GaugeMigrations';\n\nexport const plugin = new PanelPlugin<GaugeOptions>(GaugePanel)\n  .setDefaults(defaults)\n  .setEditor(GaugePanelEditor)\n  .setPanelChangeHandler(gaugePanelChangedHandler)\n  .setMigrationHandler(gaugePanelMigrationHandler);\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Components\nimport { Select, FormLabel, PanelOptionsGroup } from '@grafana/ui';\n\n// Types\nimport { FormField, PanelEditorProps } from '@grafana/ui';\nimport { PieChartType } from '@grafana/ui';\nimport { PieChartOptions } from './types';\n\nconst labelWidth = 8;\n\nconst pieChartOptions = [{ value: PieChartType.PIE, label: 'Pie' }, { value: PieChartType.DONUT, label: 'Donut' }];\n\nexport class PieChartOptionsBox extends PureComponent<PanelEditorProps<PieChartOptions>> {\n  onPieTypeChange = (pieType: any) => this.props.onOptionsChange({ ...this.props.options, pieType: pieType.value });\n  onStrokeWidthChange = ({ target }: any) =>\n    this.props.onOptionsChange({ ...this.props.options, strokeWidth: target.value });\n\n  render() {\n    const { options } = this.props;\n    const { pieType, strokeWidth } = options;\n\n    return (\n      <PanelOptionsGroup title=\"PieChart\">\n        <div className=\"gf-form\">\n          <FormLabel width={labelWidth}>Type</FormLabel>\n          <Select\n            width={12}\n            options={pieChartOptions}\n            onChange={this.onPieTypeChange}\n            value={pieChartOptions.find(option => option.value === pieType)}\n          />\n        </div>\n        <div className=\"gf-form\">\n          <FormField\n            label=\"Divider width\"\n            labelWidth={labelWidth}\n            onChange={this.onStrokeWidthChange}\n            value={strokeWidth}\n          />\n        </div>\n      </PanelOptionsGroup>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  PanelEditorProps,\n  PanelOptionsGrid,\n  ValueMappingsEditor,\n  FieldDisplayEditor,\n  FieldDisplayOptions,\n  FieldPropertiesEditor,\n  PanelOptionsGroup,\n} from '@grafana/ui';\nimport { ValueMapping, FieldConfig } from '@grafana/data';\n\nimport { PieChartOptionsBox } from './PieChartOptionsBox';\nimport { PieChartOptions } from './types';\n\nexport class PieChartPanelEditor extends PureComponent<PanelEditorProps<PieChartOptions>> {\n  onValueMappingsChanged = (mappings: ValueMapping[]) => {\n    const current = this.props.options.fieldOptions.defaults;\n    this.onDefaultsChange({\n      ...current,\n      mappings,\n    });\n  };\n\n  onDisplayOptionsChanged = (fieldOptions: FieldDisplayOptions) =>\n    this.props.onOptionsChange({\n      ...this.props.options,\n      fieldOptions,\n    });\n\n  onDefaultsChange = (field: FieldConfig) => {\n    this.onDisplayOptionsChanged({\n      ...this.props.options.fieldOptions,\n      defaults: field,\n    });\n  };\n\n  render() {\n    const { onOptionsChange, options, data } = this.props;\n    const { fieldOptions } = options;\n    const { defaults } = fieldOptions;\n\n    return (\n      <>\n        <PanelOptionsGrid>\n          <PanelOptionsGroup title=\"Display\">\n            <FieldDisplayEditor onChange={this.onDisplayOptionsChanged} value={fieldOptions} />\n          </PanelOptionsGroup>\n\n          <PanelOptionsGroup title=\"Field (default)\">\n            <FieldPropertiesEditor showMinMax={true} onChange={this.onDefaultsChange} value={defaults} />\n          </PanelOptionsGroup>\n\n          <PieChartOptionsBox data={data} onOptionsChange={onOptionsChange} options={options} />\n        </PanelOptionsGrid>\n\n        <ValueMappingsEditor onChange={this.onValueMappingsChanged} valueMappings={defaults.mappings} />\n      </>\n    );\n  }\n}\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Services & Utils\nimport { config } from 'app/core/config';\n\n// Components\nimport { PieChart, getFieldDisplayValues } from '@grafana/ui';\n\n// Types\nimport { PieChartOptions } from './types';\nimport { PanelProps } from '@grafana/ui';\n\ninterface Props extends PanelProps<PieChartOptions> {}\n\nexport class PieChartPanel extends PureComponent<Props> {\n  render() {\n    const { width, height, options, data, replaceVariables } = this.props;\n\n    const values = getFieldDisplayValues({\n      fieldOptions: options.fieldOptions,\n      data: data.series,\n      theme: config.theme,\n      replaceVariables: replaceVariables,\n    }).map(v => v.display);\n\n    return (\n      <PieChart\n        width={width}\n        height={height}\n        values={values}\n        pieType={options.pieType}\n        strokeWidth={options.strokeWidth}\n        theme={config.theme}\n      />\n    );\n  }\n}\n","import { PieChartType, VizOrientation, SingleStatBaseOptions } from '@grafana/ui';\nimport { standardFieldDisplayOptions } from '../singlestat2/types';\nimport { ReducerID } from '@grafana/data';\n\nexport interface PieChartOptions extends SingleStatBaseOptions {\n  pieType: PieChartType;\n  strokeWidth: number;\n}\n\nexport const defaults: PieChartOptions = {\n  pieType: PieChartType.PIE,\n  strokeWidth: 1,\n  orientation: VizOrientation.Auto,\n  fieldOptions: {\n    ...standardFieldDisplayOptions,\n    calcs: [ReducerID.last],\n    defaults: {\n      unit: 'short',\n    },\n  },\n};\n","import { PanelPlugin } from '@grafana/ui';\nimport { PieChartPanelEditor } from './PieChartPanelEditor';\nimport { PieChartPanel } from './PieChartPanel';\nimport { PieChartOptions, defaults } from './types';\n\nexport const plugin = new PanelPlugin<PieChartOptions>(PieChartPanel)\n  .setDefaults(defaults)\n  .setEditor(PieChartPanelEditor);\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Services & Utils\nimport { config } from 'app/core/config';\n\n// Components\nimport { BarGauge, VizRepeater, getFieldDisplayValues, FieldDisplay, DataLinksContextMenu } from '@grafana/ui';\n\n// Types\nimport { BarGaugeOptions } from './types';\nimport { PanelProps } from '@grafana/ui';\nimport { getFieldLinksSupplier } from 'app/features/panel/panellinks/linkSuppliers';\n\nexport class BarGaugePanel extends PureComponent<PanelProps<BarGaugeOptions>> {\n  renderValue = (value: FieldDisplay, width: number, height: number): JSX.Element => {\n    const { options } = this.props;\n    const { field, display } = value;\n\n    return (\n      <DataLinksContextMenu links={getFieldLinksSupplier(value)}>\n        {({ openMenu, targetClassName }) => {\n          return (\n            <BarGauge\n              value={display}\n              width={width}\n              height={height}\n              orientation={options.orientation}\n              thresholds={field.thresholds}\n              theme={config.theme}\n              itemSpacing={this.getItemSpacing()}\n              displayMode={options.displayMode}\n              minValue={field.min}\n              maxValue={field.max}\n              onClick={openMenu}\n              className={targetClassName}\n            />\n          );\n        }}\n      </DataLinksContextMenu>\n    );\n  };\n\n  getValues = (): FieldDisplay[] => {\n    const { data, options, replaceVariables } = this.props;\n    return getFieldDisplayValues({\n      ...options,\n      replaceVariables,\n      theme: config.theme,\n      data: data.series,\n    });\n  };\n\n  getItemSpacing(): number {\n    if (this.props.options.displayMode === 'lcd') {\n      return 2;\n    }\n\n    return 10;\n  }\n\n  render() {\n    const { height, width, options, data, renderCounter } = this.props;\n\n    return (\n      <VizRepeater\n        source={data}\n        getValues={this.getValues}\n        renderValue={this.renderValue}\n        renderCounter={renderCounter}\n        width={width}\n        height={height}\n        itemSpacing={this.getItemSpacing()}\n        orientation={options.orientation}\n      />\n    );\n  }\n}\n","import { VizOrientation, SingleStatBaseOptions } from '@grafana/ui';\nimport { standardGaugeFieldOptions } from '../gauge/types';\nimport { SelectableValue } from '@grafana/data';\n\nexport interface BarGaugeOptions extends SingleStatBaseOptions {\n  displayMode: 'basic' | 'lcd' | 'gradient';\n}\n\nexport const displayModes: Array<SelectableValue<string>> = [\n  { value: 'gradient', label: 'Gradient' },\n  { value: 'lcd', label: 'Retro LCD' },\n  { value: 'basic', label: 'Basic' },\n];\n\nexport const orientationOptions: Array<SelectableValue<VizOrientation>> = [\n  { value: VizOrientation.Horizontal, label: 'Horizontal' },\n  { value: VizOrientation.Vertical, label: 'Vertical' },\n];\n\nexport const defaults: BarGaugeOptions = {\n  displayMode: 'lcd',\n  orientation: VizOrientation.Horizontal,\n  fieldOptions: standardGaugeFieldOptions,\n};\n","// Libraries\nimport React, { PureComponent } from 'react';\n\nimport {\n  ThresholdsEditor,\n  ValueMappingsEditor,\n  PanelOptionsGrid,\n  FieldDisplayEditor,\n  FieldDisplayOptions,\n  FieldPropertiesEditor,\n  PanelOptionsGroup,\n  FormLabel,\n  PanelEditorProps,\n  Select,\n  DataLinksEditor,\n} from '@grafana/ui';\nimport { FieldConfig, DataLink } from '@grafana/data';\n\nimport { Threshold, ValueMapping } from '@grafana/data';\nimport { BarGaugeOptions, orientationOptions, displayModes } from './types';\nimport {\n  getDataLinksVariableSuggestions,\n  getCalculationValueDataLinksVariableSuggestions,\n} from 'app/features/panel/panellinks/link_srv';\n\nexport class BarGaugePanelEditor extends PureComponent<PanelEditorProps<BarGaugeOptions>> {\n  onThresholdsChanged = (thresholds: Threshold[]) => {\n    const current = this.props.options.fieldOptions.defaults;\n    this.onDefaultsChange({\n      ...current,\n      thresholds,\n    });\n  };\n\n  onValueMappingsChanged = (mappings: ValueMapping[]) => {\n    const current = this.props.options.fieldOptions.defaults;\n    this.onDefaultsChange({\n      ...current,\n      mappings,\n    });\n  };\n\n  onDisplayOptionsChanged = (fieldOptions: FieldDisplayOptions) =>\n    this.props.onOptionsChange({\n      ...this.props.options,\n      fieldOptions,\n    });\n\n  onDefaultsChange = (field: FieldConfig) => {\n    this.onDisplayOptionsChanged({\n      ...this.props.options.fieldOptions,\n      defaults: field,\n    });\n  };\n\n  onOrientationChange = ({ value }: any) => this.props.onOptionsChange({ ...this.props.options, orientation: value });\n  onDisplayModeChange = ({ value }: any) => this.props.onOptionsChange({ ...this.props.options, displayMode: value });\n\n  onDataLinksChanged = (links: DataLink[]) => {\n    this.onDefaultsChange({\n      ...this.props.options.fieldOptions.defaults,\n      links,\n    });\n  };\n  render() {\n    const { options } = this.props;\n    const { fieldOptions } = options;\n    const { defaults } = fieldOptions;\n\n    const suggestions = fieldOptions.values\n      ? getDataLinksVariableSuggestions(this.props.data.series)\n      : getCalculationValueDataLinksVariableSuggestions(this.props.data.series);\n    const labelWidth = 6;\n\n    return (\n      <>\n        <PanelOptionsGrid>\n          <PanelOptionsGroup title=\"Display\">\n            <FieldDisplayEditor onChange={this.onDisplayOptionsChanged} value={fieldOptions} labelWidth={labelWidth} />\n            <div className=\"form-field\">\n              <FormLabel width={labelWidth}>Orientation</FormLabel>\n              <Select\n                width={12}\n                options={orientationOptions}\n                defaultValue={orientationOptions[0]}\n                onChange={this.onOrientationChange}\n                value={orientationOptions.find(item => item.value === options.orientation)}\n              />\n            </div>\n            <div className=\"form-field\">\n              <FormLabel width={labelWidth}>Mode</FormLabel>\n              <Select\n                width={12}\n                options={displayModes}\n                defaultValue={displayModes[0]}\n                onChange={this.onDisplayModeChange}\n                value={displayModes.find(item => item.value === options.displayMode)}\n              />\n            </div>\n          </PanelOptionsGroup>\n          <PanelOptionsGroup title=\"Field\">\n            <FieldPropertiesEditor showMinMax={true} onChange={this.onDefaultsChange} value={defaults} />\n          </PanelOptionsGroup>\n\n          <ThresholdsEditor onChange={this.onThresholdsChanged} thresholds={defaults.thresholds} />\n        </PanelOptionsGrid>\n\n        <ValueMappingsEditor onChange={this.onValueMappingsChanged} valueMappings={defaults.mappings} />\n\n        <PanelOptionsGroup title=\"Data links\">\n          <DataLinksEditor\n            value={defaults.links}\n            onChange={this.onDataLinksChanged}\n            suggestions={suggestions}\n            maxLinks={10}\n          />\n        </PanelOptionsGroup>\n      </>\n    );\n  }\n}\n","import { PanelModel, sharedSingleStatMigrationHandler } from '@grafana/ui';\nimport { BarGaugeOptions } from './types';\n\nexport const barGaugePanelMigrationHandler = (panel: PanelModel<BarGaugeOptions>): Partial<BarGaugeOptions> => {\n  return sharedSingleStatMigrationHandler(panel);\n};\n","import { PanelPlugin, sharedSingleStatPanelChangedHandler } from '@grafana/ui';\nimport { BarGaugePanel } from './BarGaugePanel';\nimport { BarGaugePanelEditor } from './BarGaugePanelEditor';\nimport { BarGaugeOptions, defaults } from './types';\nimport { barGaugePanelMigrationHandler } from './BarGaugeMigrations';\n\nexport const plugin = new PanelPlugin<BarGaugeOptions>(BarGaugePanel)\n  .setDefaults(defaults)\n  .setEditor(BarGaugePanelEditor)\n  .setPanelChangeHandler(sharedSingleStatPanelChangedHandler)\n  .setMigrationHandler(barGaugePanelMigrationHandler);\n","import { SortOrder } from 'app/core/utils/explore';\n\nexport interface Options {\n  showTime: boolean;\n  sortOrder: SortOrder;\n}\n\nexport const defaults: Options = {\n  showTime: true,\n  sortOrder: SortOrder.Descending,\n};\n","import React from 'react';\nimport { PanelProps, LogRows, CustomScrollbar } from '@grafana/ui';\nimport { Options } from './types';\nimport { LogsDedupStrategy } from '@grafana/data';\nimport { dataFrameToLogsModel } from 'app/core/logs_model';\nimport { sortLogsResult } from 'app/core/utils/explore';\n\ninterface LogsPanelProps extends PanelProps<Options> {}\n\nexport const LogsPanel: React.FunctionComponent<LogsPanelProps> = ({\n  data,\n  timeZone,\n  options: { showTime, sortOrder },\n  width,\n}) => {\n  if (!data) {\n    return (\n      <div className=\"panel-empty\">\n        <p>No data found in response</p>\n      </div>\n    );\n  }\n\n  const newResults = data ? dataFrameToLogsModel(data.series, data.request.intervalMs) : null;\n  const sortedNewResults = sortLogsResult(newResults, sortOrder);\n\n  return (\n    <CustomScrollbar autoHide>\n      <LogRows\n        data={sortedNewResults}\n        dedupStrategy={LogsDedupStrategy.none}\n        highlighterExpressions={[]}\n        showTime={showTime}\n        showLabels={false}\n        timeZone={timeZone}\n      />\n    </CustomScrollbar>\n  );\n};\n","// Libraries\nimport React, { PureComponent } from 'react';\nimport { PanelEditorProps, Switch, PanelOptionsGrid, PanelOptionsGroup, FormLabel, Select } from '@grafana/ui';\n\n// Types\nimport { Options } from './types';\nimport { SortOrder } from 'app/core/utils/explore';\nimport { SelectableValue } from '@grafana/data';\n\nconst sortOrderOptions = [\n  { value: SortOrder.Descending, label: 'Descending' },\n  { value: SortOrder.Ascending, label: 'Ascending' },\n];\n\nexport class LogsPanelEditor extends PureComponent<PanelEditorProps<Options>> {\n  onToggleTime = () => {\n    const { options, onOptionsChange } = this.props;\n    const { showTime } = options;\n\n    onOptionsChange({ ...options, showTime: !showTime });\n  };\n\n  onShowValuesChange = (item: SelectableValue<SortOrder>) => {\n    const { options, onOptionsChange } = this.props;\n    onOptionsChange({ ...options, sortOrder: item.value });\n  };\n\n  render() {\n    const { showTime, sortOrder } = this.props.options;\n    const value = sortOrderOptions.filter(option => option.value === sortOrder)[0];\n\n    return (\n      <>\n        <PanelOptionsGrid>\n          <PanelOptionsGroup title=\"Columns\">\n            <Switch label=\"Time\" labelClass=\"width-10\" checked={showTime} onChange={this.onToggleTime} />\n            <div className=\"gf-form\">\n              <FormLabel>Order</FormLabel>\n              <Select options={sortOrderOptions} value={value} onChange={this.onShowValuesChange} />\n            </div>\n          </PanelOptionsGroup>\n        </PanelOptionsGrid>\n      </>\n    );\n  }\n}\n","import { PanelPlugin } from '@grafana/ui';\nimport { Options, defaults } from './types';\nimport { LogsPanel } from './LogsPanel';\nimport { LogsPanelEditor } from './LogsPanelEditor';\n\nexport const plugin = new PanelPlugin<Options>(LogsPanel).setDefaults(defaults).setEditor(LogsPanelEditor);\n","const graphitePlugin = async () =>\n  await import(/* webpackChunkName: \"graphitePlugin\" */ 'app/plugins/datasource/graphite/module');\nconst cloudwatchPlugin = async () =>\n  await import(/* webpackChunkName: \"cloudwatchPlugin\" */ 'app/plugins/datasource/cloudwatch/module');\nconst dashboardDSPlugin = async () =>\n  await import(/* webpackChunkName \"dashboardDSPlugin\" */ 'app/plugins/datasource/dashboard/module');\nconst elasticsearchPlugin = async () =>\n  await import(/* webpackChunkName: \"elasticsearchPlugin\" */ 'app/plugins/datasource/elasticsearch/module');\nconst opentsdbPlugin = async () =>\n  await import(/* webpackChunkName: \"opentsdbPlugin\" */ 'app/plugins/datasource/opentsdb/module');\nconst grafanaPlugin = async () =>\n  await import(/* webpackChunkName: \"grafanaPlugin\" */ 'app/plugins/datasource/grafana/module');\nconst influxdbPlugin = async () =>\n  await import(/* webpackChunkName: \"influxdbPlugin\" */ 'app/plugins/datasource/influxdb/module');\nconst lokiPlugin = async () => await import(/* webpackChunkName: \"lokiPlugin\" */ 'app/plugins/datasource/loki/module');\nconst mixedPlugin = async () =>\n  await import(/* webpackChunkName: \"mixedPlugin\" */ 'app/plugins/datasource/mixed/module');\nconst mysqlPlugin = async () =>\n  await import(/* webpackChunkName: \"mysqlPlugin\" */ 'app/plugins/datasource/mysql/module');\nconst postgresPlugin = async () =>\n  await import(/* webpackChunkName: \"postgresPlugin\" */ 'app/plugins/datasource/postgres/module');\nconst prometheusPlugin = async () =>\n  await import(/* webpackChunkName: \"prometheusPlugin\" */ 'app/plugins/datasource/prometheus/module');\nconst mssqlPlugin = async () =>\n  await import(/* webpackChunkName: \"mssqlPlugin\" */ 'app/plugins/datasource/mssql/module');\nconst testDataDSPlugin = async () =>\n  await import(/* webpackChunkName: \"testDataDSPlugin\" */ 'app/plugins/datasource/testdata/module');\nconst inputDatasourcePlugin = async () =>\n  await import(/* webpackChunkName: \"inputDatasourcePlugin\" */ 'app/plugins/datasource/input/module');\nconst stackdriverPlugin = async () =>\n  await import(/* webpackChunkName: \"stackdriverPlugin\" */ 'app/plugins/datasource/stackdriver/module');\nconst azureMonitorPlugin = async () =>\n  await import(/* webpackChunkName: \"azureMonitorPlugin\" */ 'app/plugins/datasource/grafana-azure-monitor-datasource/module');\n\nimport * as textPanel from 'app/plugins/panel/text/module';\nimport * as text2Panel from 'app/plugins/panel/text2/module';\nimport * as graph2Panel from 'app/plugins/panel/graph2/module';\nimport * as graphPanel from 'app/plugins/panel/graph/module';\nimport * as dashListPanel from 'app/plugins/panel/dashlist/module';\nimport * as pluginsListPanel from 'app/plugins/panel/pluginlist/module';\nimport * as alertListPanel from 'app/plugins/panel/alertlist/module';\nimport * as annoListPanel from 'app/plugins/panel/annolist/module';\nimport * as heatmapPanel from 'app/plugins/panel/heatmap/module';\nimport * as tablePanel from 'app/plugins/panel/table/module';\nimport * as table2Panel from 'app/plugins/panel/table2/module';\nimport * as singlestatPanel from 'app/plugins/panel/singlestat/module';\nimport * as singlestatPanel2 from 'app/plugins/panel/singlestat2/module';\nimport * as gettingStartedPanel from 'app/plugins/panel/gettingstarted/module';\nimport * as gaugePanel from 'app/plugins/panel/gauge/module';\nimport * as pieChartPanel from 'app/plugins/panel/piechart/module';\nimport * as barGaugePanel from 'app/plugins/panel/bargauge/module';\nimport * as logsPanel from 'app/plugins/panel/logs/module';\n\nconst exampleApp = async () => await import(/* webpackChunkName: \"exampleApp\" */ 'app/plugins/app/example-app/module');\n\nconst builtInPlugins: any = {\n  'app/plugins/datasource/graphite/module': graphitePlugin,\n  'app/plugins/datasource/cloudwatch/module': cloudwatchPlugin,\n  'app/plugins/datasource/dashboard/module': dashboardDSPlugin,\n  'app/plugins/datasource/elasticsearch/module': elasticsearchPlugin,\n  'app/plugins/datasource/opentsdb/module': opentsdbPlugin,\n  'app/plugins/datasource/grafana/module': grafanaPlugin,\n  'app/plugins/datasource/influxdb/module': influxdbPlugin,\n  'app/plugins/datasource/loki/module': lokiPlugin,\n  'app/plugins/datasource/mixed/module': mixedPlugin,\n  'app/plugins/datasource/mysql/module': mysqlPlugin,\n  'app/plugins/datasource/postgres/module': postgresPlugin,\n  'app/plugins/datasource/mssql/module': mssqlPlugin,\n  'app/plugins/datasource/prometheus/module': prometheusPlugin,\n  'app/plugins/datasource/testdata/module': testDataDSPlugin,\n  'app/plugins/datasource/input/module': inputDatasourcePlugin,\n  'app/plugins/datasource/stackdriver/module': stackdriverPlugin,\n  'app/plugins/datasource/grafana-azure-monitor-datasource/module': azureMonitorPlugin,\n\n  'app/plugins/panel/text/module': textPanel,\n  'app/plugins/panel/text2/module': text2Panel,\n  'app/plugins/panel/graph2/module': graph2Panel,\n  'app/plugins/panel/graph/module': graphPanel,\n  'app/plugins/panel/dashlist/module': dashListPanel,\n  'app/plugins/panel/pluginlist/module': pluginsListPanel,\n  'app/plugins/panel/alertlist/module': alertListPanel,\n  'app/plugins/panel/annolist/module': annoListPanel,\n  'app/plugins/panel/heatmap/module': heatmapPanel,\n  'app/plugins/panel/table/module': tablePanel,\n  'app/plugins/panel/table2/module': table2Panel,\n  'app/plugins/panel/singlestat/module': singlestatPanel,\n  'app/plugins/panel/singlestat2/module': singlestatPanel2,\n  'app/plugins/panel/gettingstarted/module': gettingStartedPanel,\n  'app/plugins/panel/gauge/module': gaugePanel,\n  'app/plugins/panel/piechart/module': pieChartPanel,\n  'app/plugins/panel/bargauge/module': barGaugePanel,\n  'app/plugins/panel/logs/module': logsPanel,\n\n  'app/plugins/app/example-app/module': exampleApp,\n};\n\nexport default builtInPlugins;\n","// Libraries\nimport _ from 'lodash';\nimport React, { PureComponent, ReactNode } from 'react';\n\n// Components\nimport { AlertBox } from 'app/core/components/AlertBox/AlertBox';\n\n// Types\nimport { AppNotificationSeverity } from 'app/types';\nimport { PanelProps, PanelPlugin, PluginType, PanelPluginMeta } from '@grafana/ui';\n\ninterface Props {\n  title: string;\n  text?: ReactNode;\n}\n\nclass PanelPluginError extends PureComponent<Props> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  render() {\n    const style = {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%',\n    };\n\n    return (\n      <div style={style}>\n        <AlertBox severity={AppNotificationSeverity.Error} {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport function getPanelPluginLoadError(meta: PanelPluginMeta, err: any): PanelPlugin {\n  const LoadError = class LoadError extends PureComponent<PanelProps> {\n    render() {\n      const text = (\n        <>\n          Check the server startup logs for more information. <br />\n          If this plugin was loaded from git, make sure it was compiled.\n        </>\n      );\n      return <PanelPluginError title={`Error loading: ${meta.id}`} text={text} />;\n    }\n  };\n  const plugin = new PanelPlugin(LoadError);\n  plugin.meta = meta;\n  plugin.loadError = true;\n  return plugin;\n}\n\nexport function getPanelPluginNotFound(id: string): PanelPlugin {\n  const NotFound = class NotFound extends PureComponent<PanelProps> {\n    render() {\n      return <PanelPluginError title={`Panel plugin not found: ${id}`} />;\n    }\n  };\n\n  const plugin = new PanelPlugin(NotFound);\n  plugin.meta = {\n    id: id,\n    name: id,\n    sort: 100,\n    type: PluginType.panel,\n    module: '',\n    baseUrl: '',\n    info: {\n      author: {\n        name: '',\n      },\n      description: '',\n      links: [],\n      logos: {\n        large: '',\n        small: '',\n      },\n      screenshots: [],\n      updated: '',\n      version: '',\n    },\n  };\n  return plugin;\n}\n","var path = 'public/app/features/alerting/partials/notification_edit.html';\nvar html = \"<page-header model=ctrl.navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\">\\n\\n  <h3 class=page-sub-heading ng-hide=ctrl.isNew>Edit Notification Channel</h3>\\n  <h3 class=page-sub-heading ng-show=ctrl.isNew>New Notification Channel</h3>\\n\\n  <form name=ctrl.theForm ng-if=ctrl.notifiers>\\n    <div class=gf-form-group>\\n      <div class=gf-form>\\n        <span class=\\\"gf-form-label width-12\\\">Name</span>\\n        <input type=text required class=\\\"gf-form-input max-width-15\\\" ng-model=ctrl.model.name required>\\n      </div>\\n      <div class=gf-form>\\n        <span class=\\\"gf-form-label width-12\\\">Type</span>\\n        <div class=\\\"gf-form-select-wrapper width-15\\\">\\n          <select class=gf-form-input ng-model=ctrl.model.type ng-options=\\\"t.type as t.name for t in ctrl.notifiers\\\" ng-change=\\\"ctrl.typeChanged(notification, $index)\\\">\\n          </select>\\n        </div>\\n      </div>\\n      <gf-form-switch class=gf-form label=\\\"Default (send on all alerts)\\\" label-class=width-14 checked=ctrl.model.isDefault tooltip=\\\"Use this notification for all alerts\\\">\\n      </gf-form-switch>\\n      <gf-form-switch class=gf-form label=\\\"Include image\\\" label-class=width-14 checked=ctrl.model.settings.uploadImage tooltip=\\\"Captures an image and include it in the notification\\\">\\n      </gf-form-switch>\\n      <gf-form-switch class=gf-form label=\\\"Disable Resolve Message\\\" label-class=width-14 checked=ctrl.model.disableResolveMessage tooltip=\\\"Disable the resolve message [OK] that is sent when alerting state returns to false\\\">\\n      </gf-form-switch>\\n      <gf-form-switch class=gf-form label=\\\"Send reminders\\\" label-class=width-14 checked=ctrl.model.sendReminder tooltip=\\\"Send additional notifications for triggered alerts\\\">\\n      </gf-form-switch>\\n      <div class=gf-form-inline>\\n        <div class=gf-form ng-if=ctrl.model.sendReminder>\\n          <span class=\\\"gf-form-label width-12\\\">Send reminder every\\n            <info-popover mode=right-normal position=\\\"top center\\\">\\n              Specify how often reminders should be sent, e.g. every 30s, 1m, 10m, 30m or 1h etc.\\n            </info-popover>\\n          </span>\\n          <input type=text placeholder=\\\"Select or specify custom\\\" class=\\\"gf-form-input width-15\\\" ng-model=ctrl.model.frequency bs-typeahead=ctrl.getFrequencySuggestion data-min-length=0 ng-required=ctrl.model.sendReminder>\\n        </div>\\n      </div>\\n      <div class=gf-form>\\n          <span class=\\\"alert alert-info width-30\\\" ng-if=ctrl.model.sendReminder>\\n            Alert reminders are sent after rules are evaluated. Therefore a reminder can never be sent more frequently than a configured alert rule evaluation interval.\\n          </span>\\n        </div>\\n    </div>\\n\\n    <div class=gf-form-group ng-include src=ctrl.notifierTemplateId>\\n    </div>\\n\\n    <div class=\\\"gf-form-group gf-form-button-row\\\">\\n\\t\\t\\t<button type=submit ng-click=ctrl.save() class=\\\"btn btn-primary width-7\\\">Save</button>\\n\\t\\t\\t<button type=submit ng-click=ctrl.testNotification() class=\\\"btn btn-secondary width-7\\\">Send Test</button>\\n\\t\\t\\t<button type=delete ng-if=!ctrl.isNew ng-click=ctrl.deleteNotification() class=\\\"btn btn-danger width-7\\\">Delete</button>\\n\\t\\t\\t<a href=alerting/notifications class=\\\"btn btn-inverse\\\">Back</a>\\n    </div>\\n  </form>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/datasource/influxdb/partials/config.html';\nvar html = \"<datasource-http-settings current=ctrl.current suggest-url=http://localhost:8086>\\n</datasource-http-settings>\\n\\n<h3 class=page-heading>InfluxDB Details</h3>\\n\\n<div class=gf-form-group>\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=\\\"gf-form max-width-30\\\">\\n\\t\\t\\t<span class=\\\"gf-form-label width-10\\\">Database</span>\\n\\t\\t\\t<input type=text class=gf-form-input ng-model=ctrl.current.database placeholder=\\\"\\\" required>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=\\\"gf-form max-width-15\\\">\\n\\t\\t\\t<span class=\\\"gf-form-label width-10\\\">User</span>\\n\\t\\t\\t<input type=text class=gf-form-input ng-model=ctrl.current.user placeholder=\\\"\\\">\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n      <secret-form-field isconfigured=\\\"ctrl.current.password || ctrl.current.secureJsonFields.password\\\" value=\\\"ctrl.current.secureJsonData.password || ''\\\" on-reset=ctrl.onPasswordReset on-change=ctrl.onPasswordChange inputwidth=9 />\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=gf-form>\\n\\t\\t<label class=\\\"gf-form-label width-8\\\">HTTP Method</label>\\n\\t\\t<div class=\\\"gf-form-select-wrapper width-8 gf-form-select-wrapper--has-help-icon\\\">\\n\\t\\t\\t<select class=gf-form-input ng-model=ctrl.current.jsonData.httpMode ng-options=\\\"f.value as f.name for f in ctrl.httpMode\\\"></select>\\n      \\t\\t<info-popover mode=right-absolute>\\n        \\t\\tYou can use either <code>GET</code> or <code>POST</code> HTTP method to query your InfluxDB database. The <code>POST</code>\\n\\t\\t\\t\\tmethod allows you to perform heavy requests (with a lots of <code>WHERE</code> clause) while the <code>GET</code> method\\n\\t\\t\\t\\twill restrict you and return an error if the query is too large.\\n      \\t\\t</info-popover>\\n\\t\\t</div>\\n\\t</div>\\n\\n</div>\\n\\n\\n<div class=gf-form-group>\\n\\t<div class=grafana-info-box>\\n\\t\\t<h5>Database Access</h5>\\n\\t\\t<p>\\n\\t\\t\\tSetting the database for this datasource does not deny access to other databases.  The InfluxDB query syntax allows\\n\\t\\t\\tswitching the database in the query.  For example:\\n\\t\\t\\t<code>SHOW MEASUREMENTS ON _internal</code> or <code>SELECT * FROM \\\"_internal\\\"..\\\"database\\\" LIMIT 10</code>\\n\\t\\t\\t<br/><br/>\\n\\t\\t\\tTo support data isolation and security, make sure appropriate permissions are configured in InfluxDB.\\n\\t\\t</p>\\n\\t</div>\\n</div>\\n\\n<div class=gf-form-group>\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=gf-form-label>Min time interval</span>\\n\\t\\t\\t<input type=text class=\\\"gf-form-input width-6 gf-form-input--has-help-icon\\\" ng-model=ctrl.current.jsonData.timeInterval spellcheck=false placeholder=10s>\\n\\t\\t\\t<info-popover mode=right-absolute>\\n\\t\\t\\t\\tA lower limit for the auto group by time interval. Recommended to be set to write frequency,\\n\\t\\t\\t\\tfor example <code>1m</code> if your data is written every minute.\\n\\t\\t\\t</info-popover>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import _ from 'lodash';\n\nimport coreModule from 'app/core/core_module';\nimport appEvents from 'app/core/app_events';\nimport { getExploreUrl } from 'app/core/utils/explore';\nimport locationUtil from 'app/core/utils/location_util';\nimport { store } from 'app/store/store';\n\nimport Mousetrap from 'mousetrap';\nimport 'mousetrap-global-bind';\nimport { ContextSrv } from './context_srv';\nimport { ILocationService, ITimeoutService } from 'angular';\n\nexport class KeybindingSrv {\n  helpModal: boolean;\n  modalOpen = false;\n  timepickerOpen = false;\n\n  /** @ngInject */\n  constructor(\n    private $rootScope: any,\n    private $location: ILocationService,\n    private $timeout: ITimeoutService,\n    private datasourceSrv: any,\n    private timeSrv: any,\n    private contextSrv: ContextSrv\n  ) {\n    // clear out all shortcuts on route change\n    $rootScope.$on('$routeChangeSuccess', () => {\n      Mousetrap.reset();\n      // rebind global shortcuts\n      this.setupGlobal();\n    });\n\n    this.setupGlobal();\n    appEvents.on('show-modal', () => (this.modalOpen = true));\n    appEvents.on('timepickerOpen', () => (this.timepickerOpen = true));\n    appEvents.on('timepickerClosed', () => (this.timepickerOpen = false));\n  }\n\n  setupGlobal() {\n    if (!(this.$location.path() === '/login')) {\n      this.bind(['?', 'h'], this.showHelpModal);\n      this.bind('g h', this.goToHome);\n      this.bind('g a', this.openAlerting);\n      this.bind('g p', this.goToProfile);\n      this.bind('s o', this.openSearch);\n      this.bind('f', this.openSearch);\n      this.bind('esc', this.exit);\n      this.bindGlobal('esc', this.globalEsc);\n    }\n  }\n\n  globalEsc() {\n    const anyDoc = document as any;\n    const activeElement = anyDoc.activeElement;\n\n    // typehead needs to handle it\n    const typeaheads = document.querySelectorAll('.slate-typeahead--open');\n    if (typeaheads.length > 0) {\n      return;\n    }\n\n    // second check if we are in an input we can blur\n    if (activeElement && activeElement.blur) {\n      if (\n        activeElement.nodeName === 'INPUT' ||\n        activeElement.nodeName === 'TEXTAREA' ||\n        activeElement.hasAttribute('data-slate-editor')\n      ) {\n        anyDoc.activeElement.blur();\n        return;\n      }\n    }\n\n    // ok no focused input or editor that should block this, let exist!\n    this.exit();\n  }\n\n  openSearch() {\n    appEvents.emit('show-dash-search');\n  }\n\n  openAlerting() {\n    this.$location.url('/alerting');\n  }\n\n  goToHome() {\n    this.$location.url('/');\n  }\n\n  goToProfile() {\n    this.$location.url('/profile');\n  }\n\n  showHelpModal() {\n    appEvents.emit('show-modal', { templateHtml: '<help-modal></help-modal>' });\n  }\n\n  exit() {\n    appEvents.emit('hide-modal');\n\n    if (this.modalOpen) {\n      this.modalOpen = false;\n      return;\n    }\n\n    if (this.timepickerOpen) {\n      this.$rootScope.appEvent('closeTimepicker');\n      this.timepickerOpen = false;\n      return;\n    }\n\n    // close settings view\n    const search = this.$location.search();\n    if (search.editview) {\n      delete search.editview;\n      this.$location.search(search);\n      return;\n    }\n\n    if (search.fullscreen) {\n      appEvents.emit('panel-change-view', { fullscreen: false, edit: false });\n      return;\n    }\n\n    if (search.kiosk) {\n      this.$rootScope.appEvent('toggle-kiosk-mode', { exit: true });\n    }\n  }\n\n  bind(keyArg: string | string[], fn: () => void) {\n    Mousetrap.bind(\n      keyArg,\n      (evt: any) => {\n        evt.preventDefault();\n        evt.stopPropagation();\n        evt.returnValue = false;\n        return this.$rootScope.$apply(fn.bind(this));\n      },\n      'keydown'\n    );\n  }\n\n  bindGlobal(keyArg: string, fn: () => void) {\n    Mousetrap.bindGlobal(\n      keyArg,\n      (evt: any) => {\n        evt.preventDefault();\n        evt.stopPropagation();\n        evt.returnValue = false;\n        return this.$rootScope.$apply(fn.bind(this));\n      },\n      'keydown'\n    );\n  }\n\n  unbind(keyArg: string, keyType?: string) {\n    Mousetrap.unbind(keyArg, keyType);\n  }\n\n  showDashEditView() {\n    const search = _.extend(this.$location.search(), { editview: 'settings' });\n    this.$location.search(search);\n  }\n\n  setupDashboardBindings(scope: any, dashboard: any) {\n    this.bind('mod+o', () => {\n      dashboard.graphTooltip = (dashboard.graphTooltip + 1) % 3;\n      appEvents.emit('graph-hover-clear');\n      dashboard.startRefresh();\n    });\n\n    this.bind('mod+s', () => {\n      scope.appEvent('save-dashboard');\n    });\n\n    this.bind('t z', () => {\n      scope.appEvent('zoom-out', 2);\n    });\n\n    this.bind('ctrl+z', () => {\n      scope.appEvent('zoom-out', 2);\n    });\n\n    this.bind('t left', () => {\n      scope.appEvent('shift-time', -1);\n    });\n\n    this.bind('t right', () => {\n      scope.appEvent('shift-time', 1);\n    });\n\n    // edit panel\n    this.bind('e', () => {\n      if (dashboard.meta.focusPanelId && dashboard.meta.canEdit) {\n        appEvents.emit('panel-change-view', {\n          fullscreen: true,\n          edit: true,\n          panelId: dashboard.meta.focusPanelId,\n          toggle: true,\n        });\n      }\n    });\n\n    // view panel\n    this.bind('v', () => {\n      if (dashboard.meta.focusPanelId) {\n        appEvents.emit('panel-change-view', {\n          fullscreen: true,\n          panelId: dashboard.meta.focusPanelId,\n          toggle: true,\n        });\n      }\n    });\n\n    // jump to explore if permissions allow\n    if (this.contextSrv.hasAccessToExplore()) {\n      this.bind('x', async () => {\n        if (dashboard.meta.focusPanelId) {\n          const panel = dashboard.getPanelById(dashboard.meta.focusPanelId);\n          const datasource = await this.datasourceSrv.get(panel.datasource);\n          const url = await getExploreUrl(panel, panel.targets, datasource, this.datasourceSrv, this.timeSrv);\n          const urlWithoutBase = locationUtil.stripBaseFromUrl(url);\n\n          if (urlWithoutBase) {\n            this.$timeout(() => this.$location.url(urlWithoutBase));\n          }\n        }\n      });\n    }\n\n    // delete panel\n    this.bind('p r', () => {\n      if (dashboard.meta.focusPanelId && dashboard.meta.canEdit) {\n        appEvents.emit('remove-panel', dashboard.meta.focusPanelId);\n        dashboard.meta.focusPanelId = 0;\n      }\n    });\n\n    // duplicate panel\n    this.bind('p d', () => {\n      if (dashboard.meta.focusPanelId && dashboard.meta.canEdit) {\n        const panelIndex = dashboard.getPanelInfoById(dashboard.meta.focusPanelId).index;\n        dashboard.duplicatePanel(dashboard.panels[panelIndex]);\n      }\n    });\n\n    // share panel\n    this.bind('p s', () => {\n      if (dashboard.meta.focusPanelId) {\n        const shareScope = scope.$new();\n        const panelInfo = dashboard.getPanelInfoById(dashboard.meta.focusPanelId);\n        shareScope.panel = panelInfo.panel;\n        shareScope.dashboard = dashboard;\n\n        appEvents.emit('show-modal', {\n          src: 'public/app/features/dashboard/components/ShareModal/template.html',\n          scope: shareScope,\n        });\n      }\n    });\n\n    // toggle panel legend\n    this.bind('p l', () => {\n      if (dashboard.meta.focusPanelId) {\n        const panelInfo = dashboard.getPanelInfoById(dashboard.meta.focusPanelId);\n        if (panelInfo.panel.legend) {\n          const panelRef = dashboard.getPanelById(dashboard.meta.focusPanelId);\n          panelRef.legend.show = !panelRef.legend.show;\n          panelRef.render();\n        }\n      }\n    });\n\n    // toggle all panel legends\n    this.bind('d l', () => {\n      dashboard.toggleLegendsForAll();\n    });\n\n    // collapse all rows\n    this.bind('d shift+c', () => {\n      dashboard.collapseRows();\n    });\n\n    // expand all rows\n    this.bind('d shift+e', () => {\n      dashboard.expandRows();\n    });\n\n    this.bind('d n', () => {\n      this.$location.url('/dashboard/new');\n    });\n\n    this.bind('d r', () => {\n      dashboard.startRefresh();\n    });\n\n    this.bind('d s', () => {\n      this.showDashEditView();\n    });\n\n    this.bind('d k', () => {\n      appEvents.emit('toggle-kiosk-mode');\n    });\n\n    this.bind('d v', () => {\n      appEvents.emit('toggle-view-mode');\n    });\n\n    //Autofit panels\n    this.bind('d a', () => {\n      // this has to be a full page reload\n      const queryParams = store.getState().location.query;\n      const newUrlParam = queryParams.autofitpanels ? '' : '&autofitpanels';\n      window.location.href = window.location.href + newUrlParam;\n    });\n  }\n}\n\ncoreModule.service('keybindingSrv', KeybindingSrv);\n\n/**\n * Code below exports the service to react components\n */\n\nlet singletonInstance: KeybindingSrv;\n\nexport function setKeybindingSrv(instance: KeybindingSrv) {\n  singletonInstance = instance;\n}\n\nexport function getKeybindingSrv(): KeybindingSrv {\n  return singletonInstance;\n}\n","// Libraries\nimport _ from 'lodash';\nimport coreModule from 'app/core/core_module';\n\n// Services & Utils\nimport config from 'app/core/config';\nimport { importDataSourcePlugin } from './plugin_loader';\nimport { DataSourceSrv as DataSourceService, getDataSourceSrv as getDataSourceService } from '@grafana/runtime';\n\n// Types\nimport { DataSourceApi, DataSourceSelectItem } from '@grafana/ui';\nimport { ScopedVars } from '@grafana/data';\nimport { auto } from 'angular';\nimport { TemplateSrv } from '../templating/template_srv';\n\nexport class DatasourceSrv implements DataSourceService {\n  datasources: { [name: string]: DataSourceApi };\n\n  /** @ngInject */\n  constructor(\n    private $q: any,\n    private $injector: auto.IInjectorService,\n    private $rootScope: any,\n    private templateSrv: TemplateSrv\n  ) {\n    this.init();\n  }\n\n  init() {\n    this.datasources = {};\n  }\n\n  get(name?: string, scopedVars?: ScopedVars): Promise<DataSourceApi> {\n    if (!name) {\n      return this.get(config.defaultDatasource);\n    }\n\n    // Interpolation here is to support template variable in data source selection\n    name = this.templateSrv.replace(name, scopedVars, (value: any[], variable: any) => {\n      if (Array.isArray(value)) {\n        return value[0];\n      }\n      return value;\n    });\n\n    if (name === 'default') {\n      return this.get(config.defaultDatasource);\n    }\n\n    if (this.datasources[name]) {\n      return this.$q.when(this.datasources[name]);\n    }\n\n    return this.loadDatasource(name);\n  }\n\n  loadDatasource(name: string): Promise<DataSourceApi> {\n    const dsConfig = config.datasources[name];\n    if (!dsConfig) {\n      return this.$q.reject({ message: 'Datasource named ' + name + ' was not found' });\n    }\n\n    const deferred = this.$q.defer();\n\n    importDataSourcePlugin(dsConfig.meta)\n      .then(dsPlugin => {\n        // check if its in cache now\n        if (this.datasources[name]) {\n          deferred.resolve(this.datasources[name]);\n          return;\n        }\n\n        // If there is only one constructor argument it is instanceSettings\n        const useAngular = dsPlugin.DataSourceClass.length !== 1;\n        const instance: DataSourceApi = useAngular\n          ? this.$injector.instantiate(dsPlugin.DataSourceClass, {\n              instanceSettings: dsConfig,\n            })\n          : new dsPlugin.DataSourceClass(dsConfig);\n\n        instance.components = dsPlugin.components;\n        instance.meta = dsConfig.meta;\n\n        // store in instance cache\n        this.datasources[name] = instance;\n        deferred.resolve(instance);\n      })\n      .catch(err => {\n        this.$rootScope.appEvent('alert-error', [dsConfig.name + ' plugin failed', err.toString()]);\n      });\n\n    return deferred.promise;\n  }\n\n  getAll() {\n    const { datasources } = config;\n    return Object.keys(datasources).map(name => datasources[name]);\n  }\n\n  getExternal() {\n    const datasources = this.getAll().filter(ds => !ds.meta.builtIn);\n    return _.sortBy(datasources, ['name']);\n  }\n\n  getAnnotationSources() {\n    const sources: any[] = [];\n\n    this.addDataSourceVariables(sources);\n\n    _.each(config.datasources, value => {\n      if (value.meta && value.meta.annotations) {\n        sources.push(value);\n      }\n    });\n\n    return sources;\n  }\n\n  getMetricSources(options?: { skipVariables?: boolean }) {\n    const metricSources: DataSourceSelectItem[] = [];\n\n    _.each(config.datasources, (value, key) => {\n      if (value.meta && value.meta.metrics) {\n        let metricSource = { value: key, name: key, meta: value.meta, sort: key };\n\n        //Make sure grafana and mixed are sorted at the bottom\n        if (value.meta.id === 'grafana') {\n          metricSource.sort = String.fromCharCode(253);\n        } else if (value.meta.id === 'dashboard') {\n          metricSource.sort = String.fromCharCode(254);\n        } else if (value.meta.id === 'mixed') {\n          metricSource.sort = String.fromCharCode(255);\n        }\n\n        metricSources.push(metricSource);\n\n        if (key === config.defaultDatasource) {\n          metricSource = { value: null, name: 'default', meta: value.meta, sort: key };\n          metricSources.push(metricSource);\n        }\n      }\n    });\n\n    if (!options || !options.skipVariables) {\n      this.addDataSourceVariables(metricSources);\n    }\n\n    metricSources.sort((a, b) => {\n      if (a.sort.toLowerCase() > b.sort.toLowerCase()) {\n        return 1;\n      }\n      if (a.sort.toLowerCase() < b.sort.toLowerCase()) {\n        return -1;\n      }\n      return 0;\n    });\n\n    return metricSources;\n  }\n\n  addDataSourceVariables(list: any[]) {\n    // look for data source variables\n    for (let i = 0; i < this.templateSrv.variables.length; i++) {\n      const variable = this.templateSrv.variables[i];\n      if (variable.type !== 'datasource') {\n        continue;\n      }\n\n      let first = variable.current.value;\n      if (first === 'default') {\n        first = config.defaultDatasource;\n      }\n\n      const ds = config.datasources[first];\n\n      if (ds) {\n        const key = `$${variable.name}`;\n        list.push({\n          name: key,\n          value: key,\n          meta: ds.meta,\n          sort: key,\n        });\n      }\n    }\n  }\n}\n\nexport function getDatasourceSrv(): DatasourceSrv {\n  return getDataSourceService() as DatasourceSrv;\n}\n\ncoreModule.service('datasourceSrv', DatasourceSrv);\nexport default DatasourceSrv;\n","import React, { FC } from 'react';\n\nexport type LayoutMode = LayoutModes.Grid | LayoutModes.List;\n\nexport enum LayoutModes {\n  Grid = 'grid',\n  List = 'list',\n}\n\ninterface Props {\n  mode: LayoutMode;\n  onLayoutModeChanged: (mode: LayoutMode) => {};\n}\n\nconst LayoutSelector: FC<Props> = props => {\n  const { mode, onLayoutModeChanged } = props;\n  return (\n    <div className=\"layout-selector\">\n      <button\n        onClick={() => {\n          onLayoutModeChanged(LayoutModes.List);\n        }}\n        className={mode === LayoutModes.List ? 'active' : ''}\n      >\n        <i className=\"fa fa-list\" />\n      </button>\n      <button\n        onClick={() => {\n          onLayoutModeChanged(LayoutModes.Grid);\n        }}\n        className={mode === LayoutModes.Grid ? 'active' : ''}\n      >\n        <i className=\"fa fa-th\" />\n      </button>\n    </div>\n  );\n};\n\nexport default LayoutSelector;\n","var path = 'public/app/features/plugins/partials/update_instructions.html';\nvar html = \"<div class=modal-body>\\n\\t<div class=modal-header>\\n\\t\\t<h2 class=modal-header-title>\\n\\t\\t\\t<i class=\\\"fa fa-cloud-download\\\"></i>\\n\\t\\t\\t<span class=p-l-1>Update Plugin</span>\\n\\t\\t</h2>\\n\\n\\t\\t<a class=modal-header-close ng-click=dismiss();>\\n\\t\\t\\t<i class=\\\"fa fa-remove\\\"></i>\\n\\t\\t</a>\\n\\t</div>\\n\\n\\t<div class=modal-content>\\n\\t\\t<div class=gf-form-group>\\n\\t\\t\\t<p>Type the following on the command line to update {{model.name}}.</p>\\n\\t\\t\\t<pre><code>grafana-cli plugins update {{model.id}}</code></pre>\\n\\t\\t\\t<span class=small>Check out {{model.name}} on <a href=https://grafana.com/plugins/{{model.id}}>Grafana.com</a> for README and changelog. If you do not have access to the command line, ask your Grafana administator.</span>\\n\\t\\t</div>\\n\\t\\t<p class=pluginlist-none-installed><img class=pluginlist-inline-logo src=public/img/grafana_icon.svg><strong>Pro tip</strong>: To update all plugins at once, type <code class=code--small>grafana-cli plugins update-all</code> on the command line.</p></div>\\n\\t</div>\\n\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","// Libraries\nimport _ from 'lodash';\nimport React, { ReactElement } from 'react';\nimport { GridCellProps } from 'react-virtualized';\nimport { Table, Props } from './Table';\nimport { ValueFormatter, getValueFormat, getColorFromHexRgbOrName } from '../../utils/index';\nimport { GrafanaTheme } from '../../types/theme';\nimport { InterpolateFunction } from '../../types/panel';\nimport { Field, dateTime, FieldConfig } from '@grafana/data';\n\nexport interface TableCellBuilderOptions {\n  value: any;\n  column?: Field;\n  row?: any[];\n  table?: Table;\n  className?: string;\n  props: GridCellProps;\n}\n\nexport type TableCellBuilder = (cell: TableCellBuilderOptions) => ReactElement<'div'>;\n\n/** Simplest cell that just spits out the value */\nexport const simpleCellBuilder: TableCellBuilder = (cell: TableCellBuilderOptions) => {\n  const { props, value, className } = cell;\n  const { style } = props;\n\n  return (\n    <div style={style} className={'gf-table-cell ' + className}>\n      {value}\n    </div>\n  );\n};\n\n// ***************************************************************************\n// HERE BE DRAGONS!!!\n// ***************************************************************************\n//\n//  The following code has been migrated blindy two times from the angular\n//  table panel.  I don't understand all the options nor do I know if they\n//  are correct!\n//\n// ***************************************************************************\n\n// Made to match the existing (untyped) settings in the angular table\nexport interface ColumnStyle {\n  pattern: string;\n\n  alias?: string;\n  colorMode?: 'cell' | 'value';\n  colors?: any[];\n  decimals?: number;\n  thresholds?: any[];\n  type?: 'date' | 'number' | 'string' | 'hidden';\n  unit?: string;\n  dateFormat?: string;\n  sanitize?: boolean; // not used in react\n  mappingType?: any;\n  valueMaps?: any;\n  rangeMaps?: any;\n\n  link?: any;\n  linkUrl?: any;\n  linkTooltip?: any;\n  linkTargetBlank?: boolean;\n\n  preserveFormat?: boolean;\n}\n\n// private mapper:ValueMapper,\n// private style:ColumnStyle,\n// private theme:GrafanaTheme,\n// private column:Column,\n// private replaceVariables: InterpolateFunction,\n// private fmt?:ValueFormatter) {\n\nexport function getCellBuilder(schema: FieldConfig, style: ColumnStyle | null, props: Props): TableCellBuilder {\n  if (!style) {\n    return simpleCellBuilder;\n  }\n\n  if (style.type === 'hidden') {\n    // TODO -- for hidden, we either need to:\n    // 1. process the Table and remove hidden fields\n    // 2. do special math to pick the right column skipping hidden fields\n    throw new Error('hidden not supported!');\n  }\n\n  if (style.type === 'date') {\n    return new CellBuilderWithStyle(\n      (v: any) => {\n        if (v === undefined || v === null) {\n          return '-';\n        }\n\n        if (_.isArray(v)) {\n          v = v[0];\n        }\n        let date = dateTime(v);\n        if (false) {\n          // TODO?????? this.props.isUTC) {\n          date = date.utc();\n        }\n        return date.format(style.dateFormat);\n      },\n      style,\n      props.theme,\n      schema,\n      props.replaceVariables\n    ).build;\n  }\n\n  if (style.type === 'string') {\n    return new CellBuilderWithStyle(\n      (v: any) => {\n        if (_.isArray(v)) {\n          v = v.join(', ');\n        }\n        return v;\n      },\n      style,\n      props.theme,\n      schema,\n      props.replaceVariables\n    ).build;\n    // TODO!!!!  all the mapping stuff!!!!\n  }\n\n  if (style.type === 'number') {\n    const valueFormatter = getValueFormat(style.unit || schema.unit || 'none');\n    return new CellBuilderWithStyle(\n      (v: any) => {\n        if (v === null || v === void 0) {\n          return '-';\n        }\n        return v;\n      },\n      style,\n      props.theme,\n      schema,\n      props.replaceVariables,\n      valueFormatter\n    ).build;\n  }\n\n  return simpleCellBuilder;\n}\n\ntype ValueMapper = (value: any) => any;\n\n// Runs the value through a formatter and adds colors to the cell properties\nclass CellBuilderWithStyle {\n  constructor(\n    private mapper: ValueMapper,\n    private style: ColumnStyle,\n    private theme: GrafanaTheme,\n    private schema: FieldConfig,\n    private replaceVariables: InterpolateFunction,\n    private fmt?: ValueFormatter\n  ) {}\n\n  getColorForValue = (value: any): string | null => {\n    const { thresholds, colors } = this.style;\n    if (!thresholds || !colors) {\n      return null;\n    }\n\n    for (let i = thresholds.length; i > 0; i--) {\n      if (value >= thresholds[i - 1]) {\n        return getColorFromHexRgbOrName(colors[i], this.theme.type);\n      }\n    }\n    return getColorFromHexRgbOrName(_.first(colors), this.theme.type);\n  };\n\n  build = (cell: TableCellBuilderOptions) => {\n    let { props } = cell;\n    let value = this.mapper(cell.value);\n\n    if (_.isNumber(value)) {\n      if (this.fmt) {\n        value = this.fmt(value, this.style.decimals);\n      }\n\n      // For numeric values set the color\n      const { colorMode } = this.style;\n      if (colorMode) {\n        const color = this.getColorForValue(Number(value));\n        if (color) {\n          if (colorMode === 'cell') {\n            props = {\n              ...props,\n              style: {\n                ...props.style,\n                backgroundColor: color,\n                color: 'white',\n              },\n            };\n          } else if (colorMode === 'value') {\n            props = {\n              ...props,\n              style: {\n                ...props.style,\n                color: color,\n              },\n            };\n          }\n        }\n      }\n    }\n\n    const cellClasses = [];\n    if (this.style.preserveFormat) {\n      cellClasses.push('table-panel-cell-pre');\n    }\n\n    if (this.style.link) {\n      // Render cell as link\n      const { row } = cell;\n\n      const scopedVars: any = {};\n      if (row) {\n        for (let i = 0; i < row.length; i++) {\n          scopedVars[`__cell_${i}`] = { value: row[i] };\n        }\n      }\n      scopedVars['__cell'] = { value: value };\n\n      const cellLink = this.replaceVariables(this.style.linkUrl, scopedVars, encodeURIComponent);\n      const cellLinkTooltip = this.replaceVariables(this.style.linkTooltip, scopedVars);\n      const cellTarget = this.style.linkTargetBlank ? '_blank' : '';\n\n      cellClasses.push('table-panel-cell-link');\n      value = (\n        <a\n          href={cellLink}\n          target={cellTarget}\n          data-link-tooltip\n          data-original-title={cellLinkTooltip}\n          data-placement=\"right\"\n        >\n          {value}\n        </a>\n      );\n    }\n\n    // ??? I don't think this will still work!\n    if (this.schema.filterable) {\n      cellClasses.push('table-panel-cell-filterable');\n      value = (\n        <>\n          {value}\n          <span>\n            <a\n              className=\"table-panel-filter-link\"\n              data-link-tooltip\n              data-original-title=\"Filter out value\"\n              data-placement=\"bottom\"\n              data-row={props.rowIndex}\n              data-column={props.columnIndex}\n              data-operator=\"!=\"\n            >\n              <i className=\"fa fa-search-minus\" />\n            </a>\n            <a\n              className=\"table-panel-filter-link\"\n              data-link-tooltip\n              data-original-title=\"Filter for value\"\n              data-placement=\"bottom\"\n              data-row={props.rowIndex}\n              data-column={props.columnIndex}\n              data-operator=\"=\"\n            >\n              <i className=\"fa fa-search-plus\" />\n            </a>\n          </span>\n        </>\n      );\n    }\n\n    let className;\n    if (cellClasses.length) {\n      className = cellClasses.join(' ');\n    }\n\n    return simpleCellBuilder({ value, props, className });\n  };\n}\n","// Libraries\nimport _ from 'lodash';\nimport React, { Component, ReactElement } from 'react';\nimport {\n  SortDirectionType,\n  SortIndicator,\n  MultiGrid,\n  CellMeasurerCache,\n  CellMeasurer,\n  GridCellProps,\n  Index,\n} from 'react-virtualized';\nimport { Themeable } from '../../types/theme';\n\nimport { stringToJsRegex, DataFrame, sortDataFrame, getDataFrameRow, ArrayVector, FieldType } from '@grafana/data';\n\nimport {\n  TableCellBuilder,\n  ColumnStyle,\n  getCellBuilder,\n  TableCellBuilderOptions,\n  simpleCellBuilder,\n} from './TableCellBuilder';\nimport { InterpolateFunction } from '../../types/panel';\n\nexport interface Props extends Themeable {\n  data: DataFrame;\n\n  minColumnWidth: number;\n  showHeader: boolean;\n  fixedHeader: boolean;\n  fixedColumns: number;\n  rotate: boolean;\n  styles: ColumnStyle[];\n\n  replaceVariables: InterpolateFunction;\n  width: number;\n  height: number;\n  isUTC?: boolean;\n}\n\ninterface State {\n  sortBy?: number;\n  sortDirection?: SortDirectionType;\n  data: DataFrame;\n}\n\ninterface ColumnRenderInfo {\n  header: string;\n  width: number;\n  builder: TableCellBuilder;\n}\n\ninterface DataIndex {\n  column: number;\n  row: number; // -1 is the header!\n}\n\nexport class Table extends Component<Props, State> {\n  renderer: ColumnRenderInfo[];\n  measurer: CellMeasurerCache;\n  scrollToTop = false;\n  rotateWidth = 100;\n\n  static defaultProps = {\n    showHeader: true,\n    fixedHeader: true,\n    fixedColumns: 0,\n    rotate: false,\n    minColumnWidth: 150,\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      data: props.data,\n    };\n\n    this.renderer = this.initColumns(props);\n    this.measurer = new CellMeasurerCache({\n      defaultHeight: 30,\n      fixedWidth: true,\n    });\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    const { data, styles, showHeader, rotate } = this.props;\n    const { sortBy, sortDirection } = this.state;\n    const dataChanged = data !== prevProps.data;\n    const configsChanged =\n      showHeader !== prevProps.showHeader ||\n      this.props.rotate !== prevProps.rotate ||\n      this.props.fixedColumns !== prevProps.fixedColumns ||\n      this.props.fixedHeader !== prevProps.fixedHeader;\n\n    // Reset the size cache\n    if (dataChanged || configsChanged) {\n      this.measurer.clearAll();\n    }\n\n    // Update the renderer if options change\n    // We only *need* do to this if the header values changes, but this does every data update\n    if (dataChanged || styles !== prevProps.styles) {\n      this.renderer = this.initColumns(this.props);\n    }\n\n    if (dataChanged || rotate !== prevProps.rotate) {\n      const { width, minColumnWidth } = this.props;\n      this.rotateWidth = Math.max(width / data.length, minColumnWidth);\n    }\n\n    // Update the data when data or sort changes\n    if (dataChanged || sortBy !== prevState.sortBy || sortDirection !== prevState.sortDirection) {\n      this.scrollToTop = true;\n      this.setState({ data: sortDataFrame(data, sortBy, sortDirection === 'DESC') });\n    }\n  }\n\n  /** Given the configuration, setup how each column gets rendered */\n  initColumns(props: Props): ColumnRenderInfo[] {\n    const { styles, data, width, minColumnWidth } = props;\n    if (!data || !data.fields || !data.fields.length || !styles) {\n      return [];\n    }\n\n    const columnWidth = Math.max(width / data.fields.length, minColumnWidth);\n\n    return data.fields.map((col, index) => {\n      let title = col.name;\n      let style: ColumnStyle | null = null; // ColumnStyle\n\n      // Find the style based on the text\n      for (let i = 0; i < styles.length; i++) {\n        const s = styles[i];\n        const regex = stringToJsRegex(s.pattern);\n        if (title.match(regex)) {\n          style = s;\n          if (s.alias) {\n            title = title.replace(regex, s.alias);\n          }\n          break;\n        }\n      }\n\n      return {\n        header: title,\n        width: columnWidth,\n        builder: getCellBuilder(col.config || {}, style, this.props),\n      };\n    });\n  }\n\n  //----------------------------------------------------------------------\n  //----------------------------------------------------------------------\n\n  doSort = (columnIndex: number) => {\n    let sort: any = this.state.sortBy;\n    let dir = this.state.sortDirection;\n    if (sort !== columnIndex) {\n      dir = 'DESC';\n      sort = columnIndex;\n    } else if (dir === 'DESC') {\n      dir = 'ASC';\n    } else {\n      sort = null;\n    }\n    this.setState({ sortBy: sort, sortDirection: dir });\n  };\n\n  /** Converts the grid coordinates to DataFrame coordinates */\n  getCellRef = (rowIndex: number, columnIndex: number): DataIndex => {\n    const { showHeader, rotate } = this.props;\n    const rowOffset = showHeader ? -1 : 0;\n\n    if (rotate) {\n      return { column: rowIndex, row: columnIndex + rowOffset };\n    } else {\n      return { column: columnIndex, row: rowIndex + rowOffset };\n    }\n  };\n\n  onCellClick = (rowIndex: number, columnIndex: number) => {\n    const { row, column } = this.getCellRef(rowIndex, columnIndex);\n    if (row < 0) {\n      this.doSort(column);\n    } else {\n      const field = this.state.data.fields[columnIndex];\n      const value = field.values.get(rowIndex);\n      console.log('CLICK', value, field.name);\n    }\n  };\n\n  headerBuilder = (cell: TableCellBuilderOptions): ReactElement<'div'> => {\n    const { data, sortBy, sortDirection } = this.state;\n    const { columnIndex, rowIndex, style } = cell.props;\n    const { column } = this.getCellRef(rowIndex, columnIndex);\n\n    let col = data.fields[column];\n    const sorting = sortBy === column;\n    if (!col) {\n      col = {\n        name: '??' + columnIndex + '???',\n        config: {},\n        values: new ArrayVector(),\n        type: FieldType.other,\n      };\n    }\n\n    return (\n      <div className=\"gf-table-header\" style={style} onClick={() => this.onCellClick(rowIndex, columnIndex)}>\n        {col.name}\n        {sorting && <SortIndicator sortDirection={sortDirection} />}\n      </div>\n    );\n  };\n\n  getTableCellBuilder = (column: number): TableCellBuilder => {\n    const render = this.renderer[column];\n    if (render && render.builder) {\n      return render.builder;\n    }\n    return simpleCellBuilder; // the default\n  };\n\n  cellRenderer = (props: GridCellProps): React.ReactNode => {\n    const { rowIndex, columnIndex, key, parent } = props;\n    const { row, column } = this.getCellRef(rowIndex, columnIndex);\n    const { data } = this.state;\n\n    const isHeader = row < 0;\n    const rowData = isHeader ? data.fields : getDataFrameRow(data, row); // TODO! improve\n    const value = rowData ? rowData[column] : '';\n    const builder = isHeader ? this.headerBuilder : this.getTableCellBuilder(column);\n\n    return (\n      <CellMeasurer cache={this.measurer} columnIndex={columnIndex} key={key} parent={parent} rowIndex={rowIndex}>\n        {builder({\n          value,\n          row: rowData,\n          column: data.fields[column],\n          table: this,\n          props,\n        })}\n      </CellMeasurer>\n    );\n  };\n\n  getColumnWidth = (col: Index): number => {\n    if (this.props.rotate) {\n      return this.rotateWidth; // fixed for now\n    }\n    return this.renderer[col.index].width;\n  };\n\n  render() {\n    const { showHeader, fixedHeader, fixedColumns, rotate, width, height } = this.props;\n    const { data } = this.state;\n    if (!data || !data.fields || !data.fields.length) {\n      return <span>Missing Fields</span>; // nothing\n    }\n\n    let columnCount = data.fields.length;\n    let rowCount = data.length + (showHeader ? 1 : 0);\n\n    let fixedColumnCount = Math.min(fixedColumns, columnCount);\n    let fixedRowCount = showHeader && fixedHeader ? 1 : 0;\n\n    if (rotate) {\n      const temp = columnCount;\n      columnCount = rowCount;\n      rowCount = temp;\n\n      fixedRowCount = 0;\n      fixedColumnCount = Math.min(fixedColumns, rowCount) + (showHeader && fixedHeader ? 1 : 0);\n    }\n\n    // Called after sort or the data changes\n    const scroll = this.scrollToTop ? 1 : -1;\n    const scrollToRow = rotate ? -1 : scroll;\n    const scrollToColumn = rotate ? scroll : -1;\n    if (this.scrollToTop) {\n      this.scrollToTop = false;\n    }\n\n    // Force MultiGrid to rerender if these options change\n    // See: https://github.com/bvaughn/react-virtualized#pass-thru-props\n    const refreshKeys = {\n      ...this.state, // Includes data and sort parameters\n      d1: this.props.data,\n      s0: this.props.styles,\n    };\n    return (\n      <MultiGrid\n        {...refreshKeys}\n        scrollToRow={scrollToRow}\n        columnCount={columnCount}\n        scrollToColumn={scrollToColumn}\n        rowCount={rowCount}\n        overscanColumnCount={8}\n        overscanRowCount={8}\n        columnWidth={this.getColumnWidth}\n        deferredMeasurementCache={this.measurer}\n        cellRenderer={this.cellRenderer}\n        rowHeight={this.measurer.rowHeight}\n        width={width}\n        height={height}\n        fixedColumnCount={fixedColumnCount}\n        fixedRowCount={fixedRowCount}\n        classNameTopLeftGrid=\"gf-table-fixed-column\"\n        classNameBottomLeftGrid=\"gf-table-fixed-column\"\n      />\n    );\n  }\n}\n\nexport default Table;\n","import { Action } from 'redux';\n\nconst allActionCreators: string[] = [];\n\nexport interface ActionOf<Payload> extends Action {\n  readonly type: string;\n  readonly payload: Payload;\n}\n\nexport interface ActionCreator<Payload> {\n  readonly type: string;\n  (payload: Payload): ActionOf<Payload>;\n}\n\nexport interface NoPayloadActionCreator {\n  readonly type: string;\n  (): ActionOf<undefined>;\n}\n\nexport interface ActionCreatorFactory<Payload> {\n  create: () => ActionCreator<Payload>;\n}\n\nexport interface NoPayloadActionCreatorFactory {\n  create: () => NoPayloadActionCreator;\n}\n\nexport const actionCreatorFactory = <Payload>(type: string): ActionCreatorFactory<Payload> => {\n  const create = (): ActionCreator<Payload> => {\n    return Object.assign((payload: Payload): ActionOf<Payload> => ({ type, payload }), { type });\n  };\n\n  if (allActionCreators.some(t => (t && type ? t.toLocaleUpperCase() === type.toLocaleUpperCase() : false))) {\n    throw new Error(`There is already an actionCreator defined with the type ${type}`);\n  }\n\n  allActionCreators.push(type);\n\n  return { create };\n};\n\nexport const noPayloadActionCreatorFactory = (type: string): NoPayloadActionCreatorFactory => {\n  const create = (): NoPayloadActionCreator => {\n    return Object.assign((): ActionOf<undefined> => ({ type, payload: undefined }), { type });\n  };\n\n  if (allActionCreators.some(t => (t && type ? t.toLocaleUpperCase() === type.toLocaleUpperCase() : false))) {\n    throw new Error(`There is already an actionCreator defined with the type ${type}`);\n  }\n\n  allActionCreators.push(type);\n\n  return { create };\n};\n\nexport interface NoPayloadActionCreatorMock extends NoPayloadActionCreator {\n  calls: number;\n}\n\nexport const getNoPayloadActionCreatorMock = (creator: NoPayloadActionCreator): NoPayloadActionCreatorMock => {\n  const mock: NoPayloadActionCreatorMock = Object.assign(\n    (): ActionOf<undefined> => {\n      mock.calls++;\n      return { type: creator.type, payload: undefined };\n    },\n    { type: creator.type, calls: 0 }\n  );\n  return mock;\n};\n\nexport const mockActionCreator = (creator: ActionCreator<any>) => {\n  return Object.assign(jest.fn(), creator);\n};\n\n// Should only be used by tests\nexport const resetAllActionCreatorTypes = () => (allActionCreators.length = 0);\n","import { Emitter } from './utils/emitter';\n\nexport const appEvents = new Emitter();\n\nexport default appEvents;\n","var path = 'public/app/features/panel/partials/general_tab.html';\nvar html = \"<div class=panel-options-group>\\n  <!-- <div class=\\\"panel&#45;option&#45;section__header\\\">Information</div> -->\\n  <div class=panel-options-group__body>\\n    <div class=section>\\n      <div class=gf-form>\\n        <span class=\\\"gf-form-label width-7\\\">Title</span>\\n        <input type=text class=\\\"gf-form-input width-25\\\" ng-model=ctrl.panel.title ng-model-onblur>\\n      </div>\\n      <gf-form-switch class=gf-form label-class=width-7 switch-class=max-width-6 label=Transparent checked=ctrl.panel.transparent on-change=ctrl.render()></gf-form-switch>\\n    </div>\\n    <div class=section>\\n      <div class=\\\"gf-form gf-form--v-stretch\\\">\\n        <span class=\\\"gf-form-label width-7\\\">Description</span>\\n        <textarea class=\\\"gf-form-input width-25\\\" rows=5 ng-model=ctrl.panel.description ng-model-onblur placeholder=\\\"Panel description, supports markdown & links\\\"></textarea>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=panel-options-group>\\n  <div class=panel-options-group__header>\\n    <div class=panel-options-group__title>Repeating</div>\\n  </div>\\n  <div class=panel-options-group__body>\\n    <div class=section>\\n      <div class=gf-form>\\n        <span class=\\\"gf-form-label width-9\\\">Repeat</span>\\n        <dash-repeat-option panel=ctrl.panel></dash-repeat-option>\\n      </div>\\n      <div class=gf-form ng-show=ctrl.panel.repeat>\\n        <span class=\\\"gf-form-label width-9\\\">Direction</span>\\n        <select class=gf-form-input ng-model=ctrl.panel.repeatDirection ng-options=\\\"f.value as f.text for f in [{value: 'v', text: 'Vertical'}, {value: 'h', text: 'Horizontal'}]\\\">\\n          <option value=\\\"\\\"></option>\\n        </select>\\n      </div>\\n      <div class=gf-form ng-show=\\\"ctrl.panel.repeat && ctrl.panel.repeatDirection == 'h'\\\">\\n        <span class=\\\"gf-form-label width-9\\\">Max per row</span>\\n        <select class=gf-form-input ng-model=ctrl.panel.maxPerRow ng-options=\\\"f for f in [2,3,4,6,12,24]\\\">\\n          <option value=\\\"\\\"></option>\\n        </select>\\n      </div>\\n      <div class=gf-form-hint>\\n        <div class=\\\"gf-form-hint-text muted\\\">\\n          Note: You may need to change the variable selection to see this in action.\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/features/dashboard/components/FolderPicker/template.html';\nvar html = \"<div class=gf-form-inline>\\n  <div class=gf-form>\\n    <label class=\\\"gf-form-label {{ctrl.labelClass}}\\\">Folder</label>\\n    <div class=dropdown ng-hide=ctrl.createNewFolder>\\n      <gf-form-dropdown model=ctrl.folder get-options=ctrl.getOptions($query) on-change=ctrl.onFolderChange($option)>\\n      </gf-form-dropdown>\\n    </div>\\n    <input type=text class=\\\"gf-form-input max-width-10\\\" ng-if=ctrl.createNewFolder give-focus=ctrl.createNewFolder ng-model=ctrl.newFolderName ng-model-options=\\\"{ debounce: 400 }\\\" ng-change=ctrl.newFolderNameChanged() />\\n  </div>\\n  <div class=gf-form ng-if=ctrl.createNewFolder>\\n    <button class=\\\"btn btn-inverse\\\" ng-click=ctrl.createFolder($event) ng-disabled=\\\"!ctrl.newFolderNameTouched || ctrl.hasValidationError\\\">\\n      Create\\n    </button>\\n  </div>\\n  <div class=gf-form ng-if=ctrl.createNewFolder>\\n    <button class=\\\"btn btn-inverse\\\" ng-click=ctrl.cancelCreateFolder($event)>\\n      Cancel\\n  </button>\\n  </div>\\n</div>\\n<div class=gf-form-inline ng-if=\\\"ctrl.newFolderNameTouched && ctrl.hasValidationError\\\">\\n  <div class=\\\"gf-form gf-form--grow\\\">\\n    <label class=\\\"gf-form-label text-warning gf-form-label--grow\\\">\\n      <i class=\\\"fa fa-warning\\\"></i>\\n      {{ctrl.validationError}}\\n    </label>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { Plugin } from '@grafana/slate-react';\nimport { Editor as CoreEditor } from 'slate';\n\nimport { isKeyHotkey } from 'is-hotkey';\n\nconst isSelectLineHotkey = isKeyHotkey('mod+l');\n\n// Clears the rest of the line after the caret\nexport default function SelectionShortcutsPlugin(): Plugin {\n  return {\n    onKeyDown(event: KeyboardEvent, editor: CoreEditor, next: Function) {\n      if (isSelectLineHotkey(event)) {\n        event.preventDefault();\n        const { focusBlock, document } = editor.value;\n\n        editor.moveAnchorToStartOfBlock();\n\n        const nextBlock = document.getNextBlock(focusBlock.key);\n        if (nextBlock) {\n          editor.moveFocusToStartOfNextBlock();\n        } else {\n          editor.moveFocusToEndOfText();\n        }\n      } else {\n        return next();\n      }\n\n      return true;\n    },\n  };\n}\n","import { RangeJSON, Range as SlateRange, Editor as CoreEditor } from 'slate';\nimport { Plugin } from '@grafana/slate-react';\nimport { isKeyHotkey } from 'is-hotkey';\n\nconst isIndentLeftHotkey = isKeyHotkey('mod+[');\nconst isShiftTabHotkey = isKeyHotkey('shift+tab');\nconst isIndentRightHotkey = isKeyHotkey('mod+]');\n\nconst SLATE_TAB = '  ';\n\nconst handleTabKey = (event: KeyboardEvent, editor: CoreEditor, next: Function): void => {\n  const {\n    startBlock,\n    endBlock,\n    selection: {\n      start: { offset: startOffset, key: startKey },\n      end: { offset: endOffset, key: endKey },\n    },\n  } = editor.value;\n\n  const first = startBlock.getFirstText();\n\n  const startBlockIsSelected =\n    startOffset === 0 && startKey === first.key && endOffset === first.text.length && endKey === first.key;\n\n  if (startBlockIsSelected || !startBlock.equals(endBlock)) {\n    handleIndent(editor, 'right');\n  } else {\n    editor.insertText(SLATE_TAB);\n  }\n};\n\nconst handleIndent = (editor: CoreEditor, indentDirection: 'left' | 'right') => {\n  const curSelection = editor.value.selection;\n  const selectedBlocks = editor.value.document.getLeafBlocksAtRange(curSelection).toArray();\n\n  if (indentDirection === 'left') {\n    for (const block of selectedBlocks) {\n      const blockWhitespace = block.text.length - block.text.trimLeft().length;\n\n      const textKey = block.getFirstText().key;\n\n      const rangeProperties: RangeJSON = {\n        anchor: {\n          key: textKey,\n          offset: blockWhitespace,\n          path: [],\n        },\n        focus: {\n          key: textKey,\n          offset: blockWhitespace,\n          path: [],\n        },\n      };\n\n      editor.deleteBackwardAtRange(SlateRange.create(rangeProperties), Math.min(SLATE_TAB.length, blockWhitespace));\n    }\n  } else {\n    const { startText } = editor.value;\n    const textBeforeCaret = startText.text.slice(0, curSelection.start.offset);\n    const isWhiteSpace = /^\\s*$/.test(textBeforeCaret);\n\n    for (const block of selectedBlocks) {\n      editor.insertTextByKey(block.getFirstText().key, 0, SLATE_TAB);\n    }\n\n    if (isWhiteSpace) {\n      editor.moveStartBackward(SLATE_TAB.length);\n    }\n  }\n};\n\n// Clears the rest of the line after the caret\nexport default function IndentationPlugin(): Plugin {\n  return {\n    onKeyDown(event: KeyboardEvent, editor: CoreEditor, next: Function) {\n      if (isIndentLeftHotkey(event) || isShiftTabHotkey(event)) {\n        event.preventDefault();\n        handleIndent(editor, 'left');\n      } else if (isIndentRightHotkey(event)) {\n        event.preventDefault();\n        handleIndent(editor, 'right');\n      } else if (event.key === 'Tab') {\n        event.preventDefault();\n        handleTabKey(event, editor, next);\n      } else {\n        return next();\n      }\n\n      return true;\n    },\n  };\n}\n","import { Plugin } from '@grafana/slate-react';\nimport { Editor as CoreEditor } from 'slate';\n\nconst getCopiedText = (textBlocks: string[], startOffset: number, endOffset: number) => {\n  if (!textBlocks.length) {\n    return undefined;\n  }\n\n  const excludingLastLineLength = textBlocks.slice(0, -1).join('').length + textBlocks.length - 1;\n  return textBlocks.join('\\n').slice(startOffset, excludingLastLineLength + endOffset);\n};\n\nexport default function ClipboardPlugin(): Plugin {\n  const clipboardPlugin = {\n    onCopy(event: ClipboardEvent, editor: CoreEditor) {\n      event.preventDefault();\n\n      const { document, selection } = editor.value;\n      const {\n        start: { offset: startOffset },\n        end: { offset: endOffset },\n      } = selection;\n      const selectedBlocks = document\n        .getLeafBlocksAtRange(selection)\n        .toArray()\n        .map(block => block.text);\n\n      const copiedText = getCopiedText(selectedBlocks, startOffset, endOffset);\n      if (copiedText) {\n        event.clipboardData.setData('Text', copiedText);\n      }\n\n      return true;\n    },\n\n    onPaste(event: ClipboardEvent, editor: CoreEditor) {\n      event.preventDefault();\n      const pastedValue = event.clipboardData.getData('Text');\n      const lines = pastedValue.split('\\n');\n\n      if (lines.length) {\n        editor.insertText(lines[0]);\n        for (const line of lines.slice(1)) {\n          editor.splitBlock().insertText(line);\n        }\n      }\n\n      return true;\n    },\n  };\n\n  return {\n    ...clipboardPlugin,\n    onCut(event: ClipboardEvent, editor: CoreEditor) {\n      clipboardPlugin.onCopy(event, editor);\n      editor.deleteAtRange(editor.value.selection);\n\n      return true;\n    },\n  };\n}\n","import { GrafanaTheme } from '@grafana/ui';\nimport { default as calculateSize } from 'calculate-size';\n\nimport { CompletionItemGroup, CompletionItem, CompletionItemKind } from 'app/types';\n\nexport const flattenGroupItems = (groupedItems: CompletionItemGroup[]): CompletionItem[] => {\n  return groupedItems.reduce((all, current) => {\n    const titleItem: CompletionItem = {\n      label: current.label,\n      kind: CompletionItemKind.GroupTitle,\n    };\n    return all.concat(titleItem, current.items);\n  }, []);\n};\n\nexport const calculateLongestLabel = (allItems: CompletionItem[]): string => {\n  return allItems.reduce((longest, current) => {\n    return longest.length < current.label.length ? current.label : longest;\n  }, '');\n};\n\nexport const calculateListSizes = (theme: GrafanaTheme, allItems: CompletionItem[], longestLabel: string) => {\n  const size = calculateSize(longestLabel, {\n    font: theme.typography.fontFamily.monospace,\n    fontSize: theme.typography.size.sm,\n    fontWeight: 'normal',\n  });\n\n  const listWidth = calculateListWidth(size.width, theme);\n  const itemHeight = calculateItemHeight(size.height, theme);\n  const listHeight = calculateListHeight(itemHeight, allItems);\n\n  return {\n    listWidth,\n    listHeight,\n    itemHeight,\n  };\n};\n\nexport const calculateItemHeight = (longestLabelHeight: number, theme: GrafanaTheme) => {\n  const horizontalPadding = parseInt(theme.spacing.sm, 10) * 2;\n  const itemHeight = longestLabelHeight + horizontalPadding;\n\n  return itemHeight;\n};\n\nexport const calculateListWidth = (longestLabelWidth: number, theme: GrafanaTheme) => {\n  const verticalPadding = parseInt(theme.spacing.sm, 10) + parseInt(theme.spacing.md, 10);\n  const maxWidth = 800;\n  const listWidth = Math.min(Math.max(longestLabelWidth + verticalPadding, 200), maxWidth);\n\n  return listWidth;\n};\n\nexport const calculateListHeight = (itemHeight: number, allItems: CompletionItem[]) => {\n  const numberOfItemsToShow = Math.min(allItems.length, 10);\n  const minHeight = 100;\n  const totalHeight = numberOfItemsToShow * itemHeight;\n  const listHeight = Math.max(totalHeight, minHeight);\n\n  return listHeight;\n};\n","import React, { createRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport _ from 'lodash';\nimport { FixedSizeList } from 'react-window';\n\nimport { Themeable, withTheme } from '@grafana/ui';\n\nimport { CompletionItem, CompletionItemKind, CompletionItemGroup } from 'app/types/explore';\nimport { TypeaheadItem } from './TypeaheadItem';\nimport { TypeaheadInfo } from './TypeaheadInfo';\nimport { flattenGroupItems, calculateLongestLabel, calculateListSizes } from './utils/typeahead';\n\nconst modulo = (a: number, n: number) => a - n * Math.floor(a / n);\n\ninterface Props extends Themeable {\n  origin: string;\n  groupedItems: CompletionItemGroup[];\n  prefix?: string;\n  menuRef?: (el: Typeahead) => void;\n  onSelectSuggestion?: (suggestion: CompletionItem) => void;\n  isOpen?: boolean;\n}\n\ninterface State {\n  allItems: CompletionItem[];\n  listWidth: number;\n  listHeight: number;\n  itemHeight: number;\n  hoveredItem: number;\n  typeaheadIndex: number;\n}\n\nexport class Typeahead extends React.PureComponent<Props, State> {\n  listRef = createRef<FixedSizeList>();\n\n  constructor(props: Props) {\n    super(props);\n\n    const allItems = flattenGroupItems(props.groupedItems);\n    const longestLabel = calculateLongestLabel(allItems);\n    const { listWidth, listHeight, itemHeight } = calculateListSizes(props.theme, allItems, longestLabel);\n    this.state = { listWidth, listHeight, itemHeight, hoveredItem: null, typeaheadIndex: 1, allItems };\n  }\n\n  componentDidMount = () => {\n    this.props.menuRef(this);\n\n    document.addEventListener('selectionchange', this.handleSelectionChange);\n  };\n\n  componentWillUnmount = () => {\n    document.removeEventListener('selectionchange', this.handleSelectionChange);\n  };\n\n  handleSelectionChange = () => {\n    this.forceUpdate();\n  };\n\n  componentDidUpdate = (prevProps: Readonly<Props>, prevState: Readonly<State>) => {\n    if (prevState.typeaheadIndex !== this.state.typeaheadIndex && this.listRef && this.listRef.current) {\n      if (this.state.typeaheadIndex === 1) {\n        this.listRef.current.scrollToItem(0); // special case for handling the first group label\n        return;\n      }\n      this.listRef.current.scrollToItem(this.state.typeaheadIndex);\n    }\n\n    if (_.isEqual(prevProps.groupedItems, this.props.groupedItems) === false) {\n      const allItems = flattenGroupItems(this.props.groupedItems);\n      const longestLabel = calculateLongestLabel(allItems);\n      const { listWidth, listHeight, itemHeight } = calculateListSizes(this.props.theme, allItems, longestLabel);\n      this.setState({ listWidth, listHeight, itemHeight, allItems });\n    }\n  };\n\n  onMouseEnter = (index: number) => {\n    this.setState({\n      hoveredItem: index,\n    });\n  };\n\n  onMouseLeave = () => {\n    this.setState({\n      hoveredItem: null,\n    });\n  };\n\n  moveMenuIndex = (moveAmount: number) => {\n    const itemCount = this.state.allItems.length;\n    if (itemCount) {\n      // Select next suggestion\n      event.preventDefault();\n      let newTypeaheadIndex = modulo(this.state.typeaheadIndex + moveAmount, itemCount);\n\n      if (this.state.allItems[newTypeaheadIndex].kind === CompletionItemKind.GroupTitle) {\n        newTypeaheadIndex = modulo(newTypeaheadIndex + moveAmount, itemCount);\n      }\n\n      this.setState({\n        typeaheadIndex: newTypeaheadIndex,\n      });\n\n      return;\n    }\n  };\n\n  insertSuggestion = () => {\n    this.props.onSelectSuggestion(this.state.allItems[this.state.typeaheadIndex]);\n  };\n\n  get menuPosition(): string {\n    // Exit for unit tests\n    if (!window.getSelection) {\n      return '';\n    }\n\n    const selection = window.getSelection();\n    const node = selection.anchorNode;\n\n    // Align menu overlay to editor node\n    if (node) {\n      // Read from DOM\n      const rect = node.parentElement.getBoundingClientRect();\n      const scrollX = window.scrollX;\n      const scrollY = window.scrollY;\n\n      return `position: absolute; display: flex; top: ${rect.top + scrollY + rect.height + 6}px; left: ${rect.left +\n        scrollX -\n        2}px`;\n    }\n\n    return '';\n  }\n\n  render() {\n    const { prefix, theme, isOpen, origin } = this.props;\n    const { allItems, listWidth, listHeight, itemHeight, hoveredItem, typeaheadIndex } = this.state;\n\n    const showDocumentation = hoveredItem || typeaheadIndex;\n\n    return (\n      <Portal origin={origin} isOpen={isOpen} style={this.menuPosition}>\n        <ul className=\"typeahead\">\n          <FixedSizeList\n            ref={this.listRef}\n            itemCount={allItems.length}\n            itemSize={itemHeight}\n            itemKey={index => {\n              const item = allItems && allItems[index];\n              const key = item ? `${index}-${item.label}` : `${index}`;\n              return key;\n            }}\n            width={listWidth}\n            height={listHeight}\n          >\n            {({ index, style }) => {\n              const item = allItems && allItems[index];\n              if (!item) {\n                return null;\n              }\n\n              return (\n                <TypeaheadItem\n                  onClickItem={() => this.props.onSelectSuggestion(item)}\n                  isSelected={allItems[typeaheadIndex] === item}\n                  item={item}\n                  prefix={prefix}\n                  style={style}\n                  onMouseEnter={() => this.onMouseEnter(index)}\n                  onMouseLeave={this.onMouseLeave}\n                />\n              );\n            }}\n          </FixedSizeList>\n        </ul>\n\n        {showDocumentation && (\n          <TypeaheadInfo\n            width={listWidth}\n            height={listHeight}\n            theme={theme}\n            item={allItems[hoveredItem ? hoveredItem : typeaheadIndex]}\n          />\n        )}\n      </Portal>\n    );\n  }\n}\n\nexport const TypeaheadWithTheme = withTheme(Typeahead);\n\ninterface PortalProps {\n  index?: number;\n  isOpen: boolean;\n  origin: string;\n  style: string;\n}\n\nclass Portal extends React.PureComponent<PortalProps, {}> {\n  node: HTMLElement;\n\n  constructor(props: PortalProps) {\n    super(props);\n    const { index = 0, origin = 'query', style } = props;\n    this.node = document.createElement('div');\n    this.node.setAttribute('style', style);\n    this.node.classList.add(`slate-typeahead`, `slate-typeahead-${origin}-${index}`);\n    document.body.appendChild(this.node);\n  }\n\n  componentWillUnmount() {\n    document.body.removeChild(this.node);\n  }\n\n  render() {\n    if (this.props.isOpen) {\n      this.node.setAttribute('style', this.props.style);\n      this.node.classList.add(`slate-typeahead--open`);\n      return ReactDOM.createPortal(this.props.children, this.node);\n    } else {\n      this.node.classList.remove(`slate-typeahead--open`);\n    }\n\n    return null;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { css, cx } from 'emotion';\n\nimport { Themeable, selectThemeVariant } from '@grafana/ui';\n\nimport { CompletionItem } from 'app/types/explore';\n\ninterface Props extends Themeable {\n  item: CompletionItem;\n  width: number;\n  height: number;\n}\n\nexport class TypeaheadInfo extends PureComponent<Props> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  getStyles = (visible: boolean) => {\n    const { height, theme } = this.props;\n\n    return {\n      typeaheadItem: css`\n        label: type-ahead-item;\n        padding: ${theme.spacing.sm} ${theme.spacing.sm} ${theme.spacing.sm} ${theme.spacing.md};\n        border-radius: ${theme.border.radius.md};\n        border: ${selectThemeVariant(\n          { light: `solid 1px ${theme.colors.gray5}`, dark: `solid 1px ${theme.colors.dark1}` },\n          theme.type\n        )};\n        overflow-y: scroll;\n        overflow-x: hidden;\n        outline: none;\n        background: ${selectThemeVariant({ light: theme.colors.white, dark: theme.colors.dark4 }, theme.type)};\n        color: ${theme.colors.text};\n        box-shadow: ${selectThemeVariant(\n          { light: `0 5px 10px 0 ${theme.colors.gray5}`, dark: `0 5px 10px 0 ${theme.colors.black}` },\n          theme.type\n        )};\n        visibility: ${visible === true ? 'visible' : 'hidden'};\n        width: 250px;\n        height: ${height + parseInt(theme.spacing.xxs, 10)}px;\n        position: relative;\n      `,\n    };\n  };\n\n  render() {\n    const { item } = this.props;\n    const visible = item && !!item.documentation;\n    const label = item ? item.label : '';\n    const documentation = item && item.documentation ? item.documentation : '';\n    const styles = this.getStyles(visible);\n\n    return (\n      <div className={cx([styles.typeaheadItem])}>\n        <b>{label}</b>\n        <hr />\n        <span>{documentation}</span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport debounce from 'lodash/debounce';\nimport sortBy from 'lodash/sortBy';\n\nimport { Editor as CoreEditor } from 'slate';\nimport { Plugin as SlatePlugin } from '@grafana/slate-react';\nimport { TypeaheadOutput, CompletionItem, CompletionItemGroup } from 'app/types';\n\nimport { QueryField, TypeaheadInput } from '../QueryField';\nimport TOKEN_MARK from '@grafana/ui/src/slate-plugins/slate-prism/TOKEN_MARK';\nimport { TypeaheadWithTheme, Typeahead } from '../Typeahead';\n\nimport { makeFragment } from '@grafana/ui';\n\nexport const TYPEAHEAD_DEBOUNCE = 100;\n\nexport interface SuggestionsState {\n  groupedItems: CompletionItemGroup[];\n  typeaheadPrefix: string;\n  typeaheadContext: string;\n  typeaheadText: string;\n}\n\nlet state: SuggestionsState = {\n  groupedItems: [],\n  typeaheadPrefix: '',\n  typeaheadContext: '',\n  typeaheadText: '',\n};\n\nexport default function SuggestionsPlugin({\n  onTypeahead,\n  cleanText,\n  onWillApplySuggestion,\n  syntax,\n  portalOrigin,\n  component,\n}: {\n  onTypeahead: (typeahead: TypeaheadInput) => Promise<TypeaheadOutput>;\n  cleanText?: (text: string) => string;\n  onWillApplySuggestion?: (suggestion: string, state: SuggestionsState) => string;\n  syntax?: string;\n  portalOrigin: string;\n  component: QueryField; // Need to attach typeaheadRef here\n}): SlatePlugin {\n  return {\n    onBlur: (event, editor, next) => {\n      state = {\n        ...state,\n        groupedItems: [],\n      };\n\n      return next();\n    },\n\n    onClick: (event, editor, next) => {\n      state = {\n        ...state,\n        groupedItems: [],\n      };\n\n      return next();\n    },\n\n    onKeyDown: (event: KeyboardEvent, editor, next) => {\n      const currentSuggestions = state.groupedItems;\n\n      const hasSuggestions = currentSuggestions.length;\n\n      switch (event.key) {\n        case 'Escape': {\n          if (hasSuggestions) {\n            event.preventDefault();\n\n            state = {\n              ...state,\n              groupedItems: [],\n            };\n\n            // Bogus edit to re-render editor\n            return editor.insertText('');\n          }\n\n          break;\n        }\n\n        case 'ArrowDown':\n        case 'ArrowUp':\n          if (hasSuggestions) {\n            event.preventDefault();\n            component.typeaheadRef.moveMenuIndex(event.key === 'ArrowDown' ? 1 : -1);\n            return;\n          }\n\n          break;\n\n        case 'Enter':\n        case 'Tab': {\n          if (hasSuggestions) {\n            event.preventDefault();\n\n            component.typeaheadRef.insertSuggestion();\n            return handleTypeahead(event, editor, onTypeahead, cleanText);\n          }\n\n          break;\n        }\n\n        default: {\n          handleTypeahead(event, editor, onTypeahead, cleanText);\n          break;\n        }\n      }\n\n      return next();\n    },\n\n    commands: {\n      selectSuggestion: (editor: CoreEditor, suggestion: CompletionItem): CoreEditor => {\n        const suggestions = state.groupedItems;\n        if (!suggestions || !suggestions.length) {\n          return editor;\n        }\n\n        // @ts-ignore\n        return editor.applyTypeahead(suggestion);\n      },\n\n      applyTypeahead: (editor: CoreEditor, suggestion: CompletionItem): CoreEditor => {\n        let suggestionText = suggestion.insertText || suggestion.label;\n\n        const preserveSuffix = suggestion.kind === 'function';\n        const move = suggestion.move || 0;\n\n        const { typeaheadPrefix, typeaheadText, typeaheadContext } = state;\n\n        if (onWillApplySuggestion) {\n          suggestionText = onWillApplySuggestion(suggestionText, {\n            groupedItems: state.groupedItems,\n            typeaheadContext,\n            typeaheadPrefix,\n            typeaheadText,\n          });\n        }\n\n        // Remove the current, incomplete text and replace it with the selected suggestion\n        const backward = suggestion.deleteBackwards || typeaheadPrefix.length;\n        const text = cleanText ? cleanText(typeaheadText) : typeaheadText;\n        const suffixLength = text.length - typeaheadPrefix.length;\n        const offset = typeaheadText.indexOf(typeaheadPrefix);\n        const midWord = typeaheadPrefix && ((suffixLength > 0 && offset > -1) || suggestionText === typeaheadText);\n        const forward = midWord && !preserveSuffix ? suffixLength + offset : 0;\n\n        // If new-lines, apply suggestion as block\n        if (suggestionText.match(/\\n/)) {\n          const fragment = makeFragment(suggestionText);\n          return editor\n            .deleteBackward(backward)\n            .deleteForward(forward)\n            .insertFragment(fragment)\n            .focus();\n        }\n\n        state = {\n          ...state,\n          groupedItems: [],\n        };\n\n        return editor\n          .deleteBackward(backward)\n          .deleteForward(forward)\n          .insertText(suggestionText)\n          .moveForward(move)\n          .focus();\n      },\n    },\n\n    renderEditor: (props, editor, next) => {\n      if (editor.value.selection.isExpanded) {\n        return next();\n      }\n\n      const children = next();\n\n      return (\n        <>\n          {children}\n          <TypeaheadWithTheme\n            menuRef={(el: Typeahead) => (component.typeaheadRef = el)}\n            origin={portalOrigin}\n            prefix={state.typeaheadPrefix}\n            isOpen={!!state.groupedItems.length}\n            groupedItems={state.groupedItems}\n            //@ts-ignore\n            onSelectSuggestion={editor.selectSuggestion}\n          />\n        </>\n      );\n    },\n  };\n}\n\nconst handleTypeahead = debounce(\n  async (\n    event: Event,\n    editor: CoreEditor,\n    onTypeahead?: (typeahead: TypeaheadInput) => Promise<TypeaheadOutput>,\n    cleanText?: (text: string) => string\n  ) => {\n    if (!onTypeahead) {\n      return null;\n    }\n\n    const { value } = editor;\n    const { selection } = value;\n\n    // Get decorations associated with the current line\n    const parentBlock = value.document.getClosestBlock(value.focusBlock.key);\n    const myOffset = value.selection.start.offset - 1;\n    const decorations = parentBlock.getDecorations(editor as any);\n\n    const filteredDecorations = decorations\n      .filter(\n        decoration =>\n          decoration.start.offset <= myOffset && decoration.end.offset > myOffset && decoration.type === TOKEN_MARK\n      )\n      .toArray();\n\n    // Find the first label key to the left of the cursor\n    const labelKeyDec = decorations\n      .filter(decoration => {\n        return (\n          decoration.end.offset <= myOffset &&\n          decoration.type === TOKEN_MARK &&\n          decoration.data.get('className').includes('label-key')\n        );\n      })\n      .last();\n\n    const labelKey = labelKeyDec && value.focusText.text.slice(labelKeyDec.start.offset, labelKeyDec.end.offset);\n\n    const wrapperClasses = filteredDecorations\n      .map(decoration => decoration.data.get('className'))\n      .join(' ')\n      .split(' ')\n      .filter(className => className.length);\n\n    let text = value.focusText.text;\n    let prefix = text.slice(0, selection.focus.offset);\n\n    if (filteredDecorations.length) {\n      text = value.focusText.text.slice(filteredDecorations[0].start.offset, filteredDecorations[0].end.offset);\n      prefix = value.focusText.text.slice(filteredDecorations[0].start.offset, selection.focus.offset);\n    }\n\n    // Label values could have valid characters erased if `cleanText()` is\n    // blindly applied, which would undesirably interfere with suggestions\n    const labelValueMatch = prefix.match(/(?:!?=~?\"?|\")(.*)/);\n    if (labelValueMatch) {\n      prefix = labelValueMatch[1];\n    } else if (cleanText) {\n      prefix = cleanText(prefix);\n    }\n\n    const { suggestions, context } = await onTypeahead({\n      prefix,\n      text,\n      value,\n      wrapperClasses,\n      labelKey,\n    });\n\n    const filteredSuggestions = suggestions\n      .map(group => {\n        if (!group.items) {\n          return group;\n        }\n\n        if (prefix) {\n          // Filter groups based on prefix\n          if (!group.skipFilter) {\n            group.items = group.items.filter(c => (c.filterText || c.label).length >= prefix.length);\n            if (group.prefixMatch) {\n              group.items = group.items.filter(c => (c.filterText || c.label).startsWith(prefix));\n            } else {\n              group.items = group.items.filter(c => (c.filterText || c.label).includes(prefix));\n            }\n          }\n\n          // Filter out the already typed value (prefix) unless it inserts custom text\n          group.items = group.items.filter(c => c.insertText || (c.filterText || c.label) !== prefix);\n        }\n\n        if (!group.skipSort) {\n          group.items = sortBy(group.items, (item: CompletionItem) => item.sortText || item.label);\n        }\n\n        return group;\n      })\n      .filter(group => group.items && group.items.length); // Filter out empty groups\n\n    state = {\n      ...state,\n      groupedItems: filteredSuggestions,\n      typeaheadPrefix: prefix,\n      typeaheadContext: context,\n      typeaheadText: text,\n    };\n\n    // Bogus edit to force re-render\n    return editor.blur().focus();\n  },\n  TYPEAHEAD_DEBOUNCE\n);\n","import _ from 'lodash';\nimport React, { Context } from 'react';\n\nimport { Value, Editor as CoreEditor } from 'slate';\nimport { Editor, Plugin } from '@grafana/slate-react';\nimport Plain from 'slate-plain-serializer';\nimport classnames from 'classnames';\n\nimport { CompletionItemGroup, TypeaheadOutput } from 'app/types/explore';\n\nimport ClearPlugin from './slate-plugins/clear';\nimport NewlinePlugin from './slate-plugins/newline';\nimport SelectionShortcutsPlugin from './slate-plugins/selection_shortcuts';\nimport IndentationPlugin from './slate-plugins/indentation';\nimport ClipboardPlugin from './slate-plugins/clipboard';\nimport RunnerPlugin from './slate-plugins/runner';\nimport SuggestionsPlugin, { SuggestionsState } from './slate-plugins/suggestions';\nimport { Typeahead } from './Typeahead';\n\nimport { makeValue, SCHEMA } from '@grafana/ui';\n\nexport interface QueryFieldProps {\n  additionalPlugins?: Plugin[];\n  cleanText?: (text: string) => string;\n  disabled?: boolean;\n  // We have both value and local state. This is usually an antipattern but we need to keep local state\n  // for perf reasons and also have outside value in for example in Explore redux that is mutable from logs\n  // creating a two way binding.\n  query: string | null;\n  onRunQuery?: () => void;\n  onChange?: (value: string) => void;\n  onTypeahead?: (typeahead: TypeaheadInput) => Promise<TypeaheadOutput>;\n  onWillApplySuggestion?: (suggestion: string, state: SuggestionsState) => string;\n  placeholder?: string;\n  portalOrigin?: string;\n  syntax?: string;\n  syntaxLoaded?: boolean;\n}\n\nexport interface QueryFieldState {\n  suggestions: CompletionItemGroup[];\n  typeaheadContext: string | null;\n  typeaheadPrefix: string;\n  typeaheadText: string;\n  value: Value;\n}\n\nexport interface TypeaheadInput {\n  prefix: string;\n  selection?: Selection;\n  text: string;\n  value: Value;\n  wrapperClasses: string[];\n  labelKey?: string;\n}\n\n/**\n * Renders an editor field.\n * Pass initial value as initialQuery and listen to changes in props.onValueChanged.\n * This component can only process strings. Internally it uses Slate Value.\n * Implement props.onTypeahead to use suggestions, see PromQueryField.tsx as an example.\n */\nexport class QueryField extends React.PureComponent<QueryFieldProps, QueryFieldState> {\n  plugins: Plugin[];\n  resetTimer: NodeJS.Timer;\n  mounted: boolean;\n  runOnChangeDebounced: Function;\n  editor: Editor;\n  // Is required by SuggestionsPlugin\n  typeaheadRef: Typeahead;\n  lastExecutedValue: Value | null = null;\n\n  constructor(props: QueryFieldProps, context: Context<any>) {\n    super(props, context);\n\n    this.runOnChangeDebounced = _.debounce(this.runOnChange, 500);\n\n    const { onTypeahead, cleanText, portalOrigin, onWillApplySuggestion } = props;\n\n    // Base plugins\n    this.plugins = [\n      NewlinePlugin(),\n      SuggestionsPlugin({ onTypeahead, cleanText, portalOrigin, onWillApplySuggestion, component: this }),\n      ClearPlugin(),\n      RunnerPlugin({ handler: this.runOnChangeAndRunQuery }),\n      SelectionShortcutsPlugin(),\n      IndentationPlugin(),\n      ClipboardPlugin(),\n      ...(props.additionalPlugins || []),\n    ].filter(p => p);\n\n    this.state = {\n      suggestions: [],\n      typeaheadContext: null,\n      typeaheadPrefix: '',\n      typeaheadText: '',\n      value: makeValue(props.query || '', props.syntax),\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    clearTimeout(this.resetTimer);\n  }\n\n  componentDidUpdate(prevProps: QueryFieldProps, prevState: QueryFieldState) {\n    const { query, syntax } = this.props;\n    const { value } = this.state;\n\n    // Handle two way binging between local state and outside prop.\n    // if query changed from the outside\n    if (query !== prevProps.query) {\n      // and we have a version that differs\n      if (query !== Plain.serialize(value)) {\n        this.setState({ value: makeValue(query || '', syntax) });\n      }\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: QueryFieldProps) {\n    if (nextProps.syntaxLoaded && !this.props.syntaxLoaded) {\n      // Need a bogus edit to re-render the editor after syntax has fully loaded\n      const editor = this.editor.insertText(' ').deleteBackward(1);\n      this.onChange(editor.value, true);\n    }\n  }\n\n  /**\n   * Update local state, propagate change upstream and optionally run the query afterwards.\n   */\n  onChange = (value: Value, runQuery?: boolean) => {\n    const documentChanged = value.document !== this.state.value.document;\n    const prevValue = this.state.value;\n\n    // Update local state with new value and optionally change value upstream.\n    this.setState({ value }, () => {\n      // The diff is needed because the actual value of editor have much more metadata (for example text selection)\n      // that is not passed upstream so every change of editor value does not mean change of the query text.\n      if (documentChanged) {\n        const textChanged = Plain.serialize(prevValue) !== Plain.serialize(value);\n        if (textChanged && runQuery) {\n          this.runOnChangeAndRunQuery();\n        }\n        if (textChanged && !runQuery) {\n          // Debounce change propagation by default for perf reasons.\n          this.runOnChangeDebounced();\n        }\n      }\n    });\n  };\n\n  runOnChange = () => {\n    const { onChange } = this.props;\n\n    if (onChange) {\n      onChange(Plain.serialize(this.state.value));\n    }\n  };\n\n  runOnRunQuery = () => {\n    const { onRunQuery } = this.props;\n\n    if (onRunQuery) {\n      onRunQuery();\n      this.lastExecutedValue = this.state.value;\n    }\n  };\n\n  runOnChangeAndRunQuery = () => {\n    // onRunQuery executes query from Redux in Explore so it needs to be updated sync in case we want to run\n    // the query.\n    this.runOnChange();\n    this.runOnRunQuery();\n  };\n\n  /**\n   * We need to handle blur events here mainly because of dashboard panels which expect to have query executed on blur.\n   */\n  handleBlur = (event: Event, editor: CoreEditor, next: Function) => {\n    const previousValue = this.lastExecutedValue ? Plain.serialize(this.lastExecutedValue) : null;\n    const currentValue = Plain.serialize(editor.value);\n\n    if (previousValue !== currentValue) {\n      this.runOnChangeAndRunQuery();\n    }\n    return next();\n  };\n\n  render() {\n    const { disabled } = this.props;\n    const wrapperClassName = classnames('slate-query-field__wrapper', {\n      'slate-query-field__wrapper--disabled': disabled,\n    });\n\n    return (\n      <div className={wrapperClassName}>\n        <div className=\"slate-query-field\">\n          <Editor\n            ref={editor => (this.editor = editor)}\n            schema={SCHEMA}\n            autoCorrect={false}\n            readOnly={this.props.disabled}\n            onBlur={this.handleBlur}\n            // onKeyDown={this.onKeyDown}\n            onChange={(change: { value: Value }) => {\n              this.onChange(change.value, false);\n            }}\n            placeholder={this.props.placeholder}\n            plugins={this.plugins}\n            spellCheck={false}\n            value={this.state.value}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default QueryField;\n","var path = 'public/app/partials/reset_password.html';\nvar html = \"<page-header model=navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\">\\n\\t<div class=signup>\\n\\t\\t<h3 class=p-b-1>Reset password</h3>\\n\\n\\t\\t<div ng-if=\\\"ldapEnabled || authProxyEnabled\\\">\\n\\t\\t\\tYou cannot reset password when LDAP or Auth Proxy authentication is enabled.\\n\\t\\t</div>\\n\\t\\t<div ng-if=disableLoginForm>\\n\\t\\t\\tYou cannot reset password when login form is disabled.\\n\\t\\t</div>\\n\\t\\t<form name=sendResetForm class=\\\"login-form gf-form-group\\\" ng-show=\\\"mode === 'send'\\\" ng-hide=\\\"ldapEnabled || authProxyEnabled || disableLoginForm\\\">\\n\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t\\t<span class=\\\"gf-form-label width-7\\\">User</span>\\n\\t\\t\\t\\t\\t<input type=text name=username class=\\\"gf-form-input max-width-14\\\" required ng-model=formModel.userOrEmail placeholder=\\\"email or username\\\">\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=gf-form-button-row>\\n\\t\\t\\t\\t<button type=submit class=\\\"btn btn-primary\\\" ng-click=sendResetEmail(); ng-disabled=!sendResetForm.$valid>\\n\\t\\t\\t\\t\\tReset Password\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t<a href=login class=\\\"btn btn-inverse\\\">\\n\\t\\t\\t\\t\\tBack\\n\\t\\t\\t\\t</a>\\n\\n\\t\\t\\t</div>\\n\\t\\t</form>\\n\\t\\t<div ng-show=\\\"mode === 'email-sent'\\\">\\n\\t\\t\\tAn email with a reset link has been sent to the email address. <br>\\n\\t\\t\\tYou should receive it shortly.\\n\\t\\t\\t<div class=p-t-1>\\n\\t\\t\\t\\t<a href=login class=\\\"btn btn-primary p-t-1\\\">\\n\\t\\t\\t\\t\\tLogin\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<form name=resetForm class=\\\"login-form gf-form-group\\\" ng-show=\\\"mode === 'reset'\\\">\\n\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t<span class=\\\"gf-form-label width-9\\\">New Password</span>\\n\\t\\t\\t\\t<input type=password name=NewPassword class=\\\"gf-form-input max-width-14\\\" required ng-minlength=4 ng-model=formModel.newPassword placeholder=password watch-change=\\\"formModel.newPassword = inputValue;\\\">\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t<span class=\\\"gf-form-label width-9\\\">Confirm Password</span>\\n\\t\\t\\t\\t<input type=password name=ConfirmPassword class=\\\"gf-form-input max-width-14\\\" required ng-minlength=4 ng-model=formModel.confirmPassword placeholder=\\\"confirm password\\\">\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=signup__password-strength>\\n\\t\\t\\t\\t<password-strength password=formModel.newPassword></password-strength>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=gf-form-button-row>\\n\\t\\t\\t\\t<button type=submit class=\\\"btn btn-primary\\\" ng-click=submitReset(); ng-disabled=!resetForm.$valid>\\n\\t\\t\\t\\t\\tReset Password\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t</form>\\n\\t</div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { Vector } from '../types/vector';\nimport { vectorToArray } from './vectorToArray';\n\n/**\n * Values are returned in the order defined by the input parameter\n */\nexport class SortedVector<T = any> implements Vector<T> {\n  constructor(private source: Vector<T>, private order: number[]) {}\n\n  get length(): number {\n    return this.source.length;\n  }\n\n  get(index: number): T {\n    return this.source.get(this.order[index]);\n  }\n\n  toArray(): T[] {\n    return vectorToArray(this);\n  }\n\n  toJSON(): T[] {\n    return vectorToArray(this);\n  }\n}\n","import React, { FunctionComponent, useContext } from 'react';\n\n// @ts-ignore\nimport Highlighter from 'react-highlight-words';\nimport { css, cx } from 'emotion';\nimport { GrafanaTheme, ThemeContext, selectThemeVariant } from '@grafana/ui';\n\nimport { CompletionItem, CompletionItemKind } from 'app/types/explore';\n\ninterface Props {\n  isSelected: boolean;\n  item: CompletionItem;\n  style: any;\n  prefix?: string;\n\n  onClickItem?: (event: React.MouseEvent) => void;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n}\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  typeaheadItem: css`\n    label: type-ahead-item;\n    height: auto;\n    font-family: ${theme.typography.fontFamily.monospace};\n    padding: ${theme.spacing.sm} ${theme.spacing.sm} ${theme.spacing.sm} ${theme.spacing.md};\n    font-size: ${theme.typography.size.sm};\n    text-overflow: ellipsis;\n    overflow: hidden;\n    z-index: 1;\n    display: block;\n    white-space: nowrap;\n    cursor: pointer;\n    transition: color 0.3s cubic-bezier(0.645, 0.045, 0.355, 1), border-color 0.3s cubic-bezier(0.645, 0.045, 0.355, 1),\n      background 0.3s cubic-bezier(0.645, 0.045, 0.355, 1), padding 0.15s cubic-bezier(0.645, 0.045, 0.355, 1);\n  `,\n\n  typeaheadItemSelected: css`\n    label: type-ahead-item-selected;\n    background-color: ${selectThemeVariant({ light: theme.colors.gray6, dark: theme.colors.dark9 }, theme.type)};\n  `,\n\n  typeaheadItemMatch: css`\n    label: type-ahead-item-match;\n    color: ${theme.colors.yellow};\n    border-bottom: 1px solid ${theme.colors.yellow};\n    padding: inherit;\n    background: inherit;\n  `,\n\n  typeaheadItemGroupTitle: css`\n    label: type-ahead-item-group-title;\n    color: ${theme.colors.textWeak};\n    font-size: ${theme.typography.size.sm};\n    line-height: ${theme.typography.lineHeight.lg};\n    padding: ${theme.spacing.sm};\n  `,\n});\n\nexport const TypeaheadItem: FunctionComponent<Props> = (props: Props) => {\n  const theme = useContext(ThemeContext);\n  const styles = getStyles(theme);\n\n  const { isSelected, item, prefix, style, onMouseEnter, onMouseLeave, onClickItem } = props;\n  const className = isSelected ? cx([styles.typeaheadItem, styles.typeaheadItemSelected]) : cx([styles.typeaheadItem]);\n  const highlightClassName = cx([styles.typeaheadItemMatch]);\n  const itemGroupTitleClassName = cx([styles.typeaheadItemGroupTitle]);\n  const label = item.label || '';\n\n  if (item.kind === CompletionItemKind.GroupTitle) {\n    return (\n      <li className={itemGroupTitleClassName} style={style}>\n        <span>{label}</span>\n      </li>\n    );\n  }\n\n  return (\n    <li\n      className={className}\n      style={style}\n      onMouseDown={onClickItem}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n    >\n      <Highlighter textToHighlight={label} searchWords={[prefix]} highlightClassName={highlightClassName} />\n    </li>\n  );\n};\n","var path = 'public/app/plugins/panel/graph/axes_editor.html';\nvar html = \"<div class=editor-row>\\n\\t<div class=\\\"section gf-form-group\\\" ng-repeat=\\\"yaxis in ctrl.panel.yaxes\\\">\\n\\n\\t\\t<h5 class=section-heading ng-show=\\\"$index === 0\\\">Left Y</h5>\\n\\t\\t<h5 class=section-heading ng-show=\\\"$index === 1\\\">Right Y</h5>\\n\\n\\t\\t<gf-form-switch class=gf-form label=Show label-class=width-6 checked=yaxis.show on-change=ctrl.render()></gf-form-switch>\\n\\n\\t\\t<div ng-if=yaxis.show>\\n\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t<label class=\\\"gf-form-label width-6\\\">Unit</label>\\n\\t\\t\\t\\t<div class=\\\"gf-form-dropdown-typeahead max-width-20\\\" ng-model=yaxis.format dropdown-typeahead2=ctrl.unitFormats dropdown-typeahead-on-select=\\\"ctrl.setUnitFormat(yaxis, $subItem)\\\"></div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t<label class=\\\"gf-form-label width-6\\\">Scale</label>\\n\\t\\t\\t\\t<div class=\\\"gf-form-select-wrapper max-width-20\\\">\\n\\t\\t\\t\\t\\t<select class=gf-form-input ng-model=yaxis.logBase ng-options=\\\"v as k for (k, v) in ctrl.logScales\\\" ng-change=ctrl.render()></select>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=gf-form-inline>\\n\\t\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t\\t<label class=\\\"gf-form-label width-6\\\">Y-Min</label>\\n\\t\\t\\t\\t\\t<input type=text class=\\\"gf-form-input width-5\\\" placeholder=auto empty-to-null ng-model=yaxis.min ng-change=ctrl.render() ng-model-onblur>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t\\t<label class=\\\"gf-form-label width-6\\\">Y-Max</label>\\n\\t\\t\\t\\t\\t<input type=text class=\\\"gf-form-input width-5\\\" placeholder=auto empty-to-null ng-model=yaxis.max ng-change=ctrl.render() ng-model-onblur>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t<div ng-if=yaxis.show>\\n\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t<label class=\\\"gf-form-label width-6\\\">Decimals</label>\\n\\t\\t\\t\\t<input type=number class=\\\"gf-form-input max-width-20\\\" placeholder=auto empty-to-null bs-tooltip=\\\"'Override automatic decimal precision for y-axis'\\\" data-placement=right ng-model=yaxis.decimals ng-change=ctrl.render() ng-model-onblur>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t<label class=\\\"gf-form-label width-6\\\">Label</label>\\n\\t\\t\\t\\t<input type=text class=\\\"gf-form-input max-width-20\\\" ng-model=yaxis.label ng-change=ctrl.render() ng-model-onblur>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\\"section gf-form-group\\\" aria-label=\\\"X-Axis section\\\">\\n\\t\\t<h5 class=section-heading>X-Axis</h5>\\n\\t\\t<gf-form-switch class=gf-form label=Show label-class=width-6 checked=ctrl.panel.xaxis.show on-change=ctrl.render()></gf-form-switch>\\n\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<label class=\\\"gf-form-label width-6\\\">Mode</label>\\n\\t\\t\\t<div class=\\\"gf-form-select-wrapper max-width-15\\\">\\n\\t\\t\\t\\t<select class=gf-form-input ng-model=ctrl.panel.xaxis.mode ng-options=\\\"v as k for (k, v) in ctrl.xAxisModes\\\" ng-change=ctrl.xAxisModeChanged()> </select>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<!-- Series mode -->\\n\\t\\t<div class=gf-form ng-if=\\\"ctrl.panel.xaxis.mode === 'series'\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label width-6\\\">Value</label>\\n      <metric-segment-model property=ctrl.panel.xaxis.values[0] options=ctrl.xAxisStatOptions on-change=ctrl.xAxisValueChanged() custom=false css-class=width-10 select-mode=true></metric-segment-model>\\n\\t\\t</div>\\n\\n\\t\\t<!-- Histogram mode -->\\n\\t\\t<div class=gf-form ng-if=\\\"ctrl.panel.xaxis.mode === 'histogram'\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label width-6\\\">Buckets</label>\\n\\t\\t\\t<input type=number class=\\\"gf-form-input max-width-8\\\" ng-model=ctrl.panel.xaxis.buckets placeholder=auto ng-change=ctrl.render() ng-model-onblur bs-tooltip=\\\"'Number of buckets'\\\" data-placement=right>\\n\\t\\t</div>\\n\\n\\t\\t<div class=gf-form-inline ng-if=\\\"ctrl.panel.xaxis.mode === 'histogram'\\\">\\n\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t<label class=\\\"gf-form-label width-6\\\">X-Min</label>\\n\\t\\t\\t\\t<input type=number class=\\\"gf-form-input width-5\\\" placeholder=auto empty-to-null ng-model=ctrl.panel.xaxis.min ng-change=ctrl.render() ng-model-onblur>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t<label class=\\\"gf-form-label width-6\\\">X-Max</label>\\n\\t\\t\\t\\t<input type=number class=\\\"gf-form-input width-5\\\" placeholder=auto empty-to-null ng-model=ctrl.panel.xaxis.max ng-change=ctrl.render() ng-model-onblur>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<div>\\n\\t\\t\\t<br/>\\n\\t\\t\\t<h5 class=section-heading>Y-Axes</h5>\\n\\t\\t\\t<gf-form-switch class=gf-form label=Align tooltip=\\\"Align left and right Y-axes\\\" label-class=width-6 switch-class=width-5 checked=ctrl.panel.yaxis.align on-change=ctrl.render()></gf-form-switch>\\n\\t\\t\\t<div class=gf-form ng-show=ctrl.panel.yaxis.align>\\n\\t\\t\\t\\t<label class=\\\"gf-form-label width-6\\\">\\n\\t\\t\\t\\t\\tLevel\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t<input type=number class=\\\"gf-form-input width-5\\\" placeholder=0 ng-model=ctrl.panel.yaxis.alignLevel ng-change=ctrl.render() ng-model-onblur bs-tooltip=\\\"'Alignment of Y-axes are based on this value, starting from Y=0'\\\" data-placement=right>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { config, GrafanaBootConfig } from '@grafana/runtime';\n\n// Legacy binding paths\nexport { config, GrafanaBootConfig as Settings };\nexport default config;\n","import React, { FC } from 'react';\nimport { Tooltip } from '@grafana/ui';\n\ninterface Props {\n  appName: string;\n  buildVersion: string;\n  buildCommit: string;\n  newGrafanaVersionExists: boolean;\n  newGrafanaVersion: string;\n}\n\nexport const Footer: FC<Props> = React.memo(\n  ({ appName, buildVersion, buildCommit, newGrafanaVersionExists, newGrafanaVersion }) => {\n    return (\n      <footer className=\"footer\">\n        <div className=\"text-center\">\n          <ul>\n            <li>\n              <a href=\"http://docs.grafana.org\" target=\"_blank\" rel=\"noopener\">\n                <i className=\"fa fa-file-code-o\" /> Docs\n              </a>\n            </li>\n            <li>\n              <a href=\"https://grafana.com/services/support\" target=\"_blank\" rel=\"noopener\">\n                <i className=\"fa fa-support\" /> Support Plans\n              </a>\n            </li>\n            <li>\n              <a href=\"https://community.grafana.com/\" target=\"_blank\" rel=\"noopener\">\n                <i className=\"fa fa-comments-o\" /> Community\n              </a>\n            </li>\n            <li>\n              <a href=\"https://grafana.com\" target=\"_blank\" rel=\"noopener\">\n                {appName}\n              </a>{' '}\n              <span>\n                v{buildVersion} (commit: {buildCommit})\n              </span>\n            </li>\n            {newGrafanaVersionExists && (\n              <li>\n                <Tooltip placement=\"auto\" content={newGrafanaVersion}>\n                  <a href=\"https://grafana.com/get\" target=\"_blank\" rel=\"noopener\">\n                    New version available!\n                  </a>\n                </Tooltip>\n              </li>\n            )}\n          </ul>\n        </div>\n      </footer>\n    );\n  }\n);\n\nexport default Footer;\n","import React, { FC } from 'react';\nimport { LoadingPlaceholder } from '@grafana/ui';\n\ninterface Props {\n  pageName?: string;\n}\n\nconst PageLoader: FC<Props> = ({ pageName = '' }) => {\n  const loadingText = `Loading ${pageName}...`;\n  return (\n    <div className=\"page-loader-wrapper\">\n      <LoadingPlaceholder text={loadingText} />\n    </div>\n  );\n};\n\nexport default PageLoader;\n","// Libraries\nimport React, { Component } from 'react';\n\n// Components\nimport PageLoader from '../PageLoader/PageLoader';\n\ninterface Props {\n  isLoading?: boolean;\n  children: JSX.Element[] | JSX.Element;\n}\n\nclass PageContents extends Component<Props> {\n  render() {\n    const { isLoading } = this.props;\n\n    return <div className=\"page-container page-body\">{isLoading ? <PageLoader /> : this.props.children}</div>;\n  }\n}\n\nexport default PageContents;\n","// Libraries\nimport React, { Component } from 'react';\nimport config from 'app/core/config';\nimport { getTitleFromNavModel } from 'app/core/selectors/navModel';\n\n// Components\nimport PageHeader from '../PageHeader/PageHeader';\nimport Footer from '../Footer/Footer';\nimport PageContents from './PageContents';\nimport { CustomScrollbar } from '@grafana/ui';\nimport { NavModel } from '@grafana/data';\nimport { isEqual } from 'lodash';\n\ninterface Props {\n  children: JSX.Element[] | JSX.Element;\n  navModel: NavModel;\n}\n\nclass Page extends Component<Props> {\n  static Header = PageHeader;\n  static Contents = PageContents;\n\n  componentDidMount() {\n    this.updateTitle();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!isEqual(prevProps.navModel, this.props.navModel)) {\n      this.updateTitle();\n    }\n  }\n\n  updateTitle = () => {\n    const title = this.getPageTitle;\n    document.title = title ? title + ' - Grafana' : 'Grafana';\n  };\n\n  get getPageTitle() {\n    const { navModel } = this.props;\n    if (navModel) {\n      return getTitleFromNavModel(navModel) || undefined;\n    }\n    return undefined;\n  }\n\n  render() {\n    const { navModel } = this.props;\n    const { buildInfo } = config;\n    return (\n      <div className=\"page-scrollbar-wrapper\">\n        <CustomScrollbar autoHeightMin={'100%'} className=\"custom-scrollbar--page\">\n          <div className=\"page-scrollbar-content\">\n            <PageHeader model={navModel} />\n            {this.props.children}\n            <Footer\n              appName=\"Grafana\"\n              buildCommit={buildInfo.commit}\n              buildVersion={buildInfo.version}\n              newGrafanaVersion={buildInfo.latestVersion}\n              newGrafanaVersionExists={buildInfo.hasUpdate}\n            />\n          </div>\n        </CustomScrollbar>\n      </div>\n    );\n  }\n}\n\nexport default Page;\n","import React from 'react';\n\n// Ignoring because I couldn't get @types/react-select work wih Torkel's fork\n// @ts-ignore\nimport { components } from '@torkelo/react-select';\n\nexport const IndicatorsContainer = (props: any) => {\n  const isOpen = props.selectProps.menuIsOpen;\n  return (\n    <components.IndicatorsContainer {...props}>\n      <span\n        className={`gf-form-select-box__select-arrow ${isOpen ? `gf-form-select-box__select-arrow--reversed` : ''}`}\n      />\n    </components.IndicatorsContainer>\n  );\n};\n\nexport default IndicatorsContainer;\n","var path = 'public/app/features/manage-dashboards/partials/snapshot_list.html';\nvar html = \"<page-header model=ctrl.navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\">\\n   <table class=filter-table>\\n    <thead>\\n      <th><strong>Name</strong></th>\\n      <th><strong>Snapshot url</strong></th>\\n      <th style=width:70px></th>\\n      <th style=width:30px></th>\\n      <th style=width:25px></th>\\n\\t\\t</thead>\\n\\t\\t<tr ng-repeat=\\\"snapshot in ctrl.snapshots\\\">\\n      <td>\\n        <a href={{snapshot.url}}>{{snapshot.name}}</a>\\n      </td>\\n      <td>\\n        <a href={{snapshot.url}}>{{snapshot.url}}</a>\\n      </td>\\n      <td>\\n        <span class=query-keyword ng-if=snapshot.external>External</span>\\n      </td>\\n      <td class=text-center>\\n        <a href={{snapshot.url}} class=\\\"btn btn-inverse btn-small\\\">\\n          <i class=\\\"gicon gicon-viewer\\\"></i>\\n          View\\n        </a>\\n      </td>\\n      <td class=text-right>\\n        <a ng-click=ctrl.removeSnapshot(snapshot) class=\\\"btn btn-danger btn-small\\\">\\n          <i class=\\\"fa fa-remove\\\"></i>\\n        </a>\\n      </td>\\n    </tr>\\n  </table>\\n\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import React, { PureComponent, SyntheticEvent } from 'react';\n\ninterface Props {\n  onConfirm(): void;\n  disabled?: boolean;\n}\n\ninterface State {\n  showConfirm: boolean;\n}\n\nexport class DeleteButton extends PureComponent<Props, State> {\n  state: State = {\n    showConfirm: false,\n  };\n\n  onClickDelete = (event: SyntheticEvent) => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    this.setState({\n      showConfirm: true,\n    });\n  };\n\n  onClickCancel = (event: SyntheticEvent) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({\n      showConfirm: false,\n    });\n  };\n\n  render() {\n    const { onConfirm, disabled } = this.props;\n    const showConfirmClass = this.state.showConfirm ? 'show' : 'hide';\n    const showDeleteButtonClass = this.state.showConfirm ? 'hide' : 'show';\n    const disabledClass = disabled ? 'disabled btn-inverse' : '';\n    const onClick = disabled ? () => {} : this.onClickDelete;\n\n    return (\n      <span className=\"delete-button-container\">\n        <a\n          className={`delete-button ${showDeleteButtonClass} btn btn-danger btn-small ${disabledClass}`}\n          onClick={onClick}\n        >\n          <i className=\"fa fa-remove\" />\n        </a>\n        <span className=\"confirm-delete-container\">\n          <span className={`confirm-delete ${showConfirmClass}`}>\n            <a className=\"btn btn-small\" onClick={this.onClickCancel}>\n              Cancel\n            </a>\n            <a className=\"btn btn-danger btn-small\" onClick={onConfirm}>\n              Confirm Delete\n            </a>\n          </span>\n        </span>\n      </span>\n    );\n  }\n}\n","import React, { InputHTMLAttributes, FunctionComponent } from 'react';\nimport { FormLabel } from '../FormLabel/FormLabel';\nimport { PopoverContent } from '../Tooltip/Tooltip';\nimport { cx } from 'emotion';\n\nexport interface Props extends InputHTMLAttributes<HTMLInputElement> {\n  label: string;\n  tooltip?: PopoverContent;\n  labelWidth?: number;\n  inputWidth?: number;\n  inputEl?: React.ReactNode;\n}\n\nconst defaultProps = {\n  labelWidth: 6,\n  inputWidth: 12,\n};\n\n/**\n * Default form field including label used in Grafana UI. Default input element is simple <input />. You can also pass\n * custom inputEl if required in which case inputWidth and inputProps are ignored.\n */\nexport const FormField: FunctionComponent<Props> = ({\n  label,\n  tooltip,\n  labelWidth,\n  inputWidth,\n  inputEl,\n  className,\n  ...inputProps\n}) => {\n  return (\n    <div className={cx('form-field', className)}>\n      <FormLabel width={labelWidth} tooltip={tooltip}>\n        {label}\n      </FormLabel>\n      {inputEl || (\n        <input type=\"text\" className={`gf-form-input ${inputWidth ? `width-${inputWidth}` : ''}`} {...inputProps} />\n      )}\n    </div>\n  );\n};\n\nFormField.displayName = 'FormField';\nFormField.defaultProps = defaultProps;\n","import React, { AnchorHTMLAttributes, ButtonHTMLAttributes } from 'react';\nimport tinycolor from 'tinycolor2';\nimport { css, cx } from 'emotion';\nimport { Themeable, GrafanaTheme } from '../../types';\nimport { selectThemeVariant } from '../../themes/selectThemeVariant';\nimport { stylesFactory } from '../../themes/stylesFactory';\n\nexport type ButtonVariant = 'primary' | 'secondary' | 'danger' | 'inverse' | 'transparent';\n\nexport type ButtonSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n\nexport interface CommonButtonProps {\n  size?: ButtonSize;\n  variant?: ButtonVariant;\n  /**\n   * icon prop is a temporary solution. It accepts lefacy icon class names for the icon to be rendered.\n   * TODO: migrate to a component when we are going to migrate icons to @grafana/ui\n   */\n  icon?: string;\n  className?: string;\n}\n\nexport interface LinkButtonProps extends CommonButtonProps, AnchorHTMLAttributes<HTMLAnchorElement> {\n  disabled?: boolean;\n}\nexport interface ButtonProps extends CommonButtonProps, ButtonHTMLAttributes<HTMLButtonElement> {}\n\ninterface AbstractButtonProps extends CommonButtonProps, Themeable {\n  renderAs: React.ComponentType<CommonButtonProps> | string;\n}\n\nconst buttonVariantStyles = (\n  from: string,\n  to: string,\n  textColor: string,\n  textShadowColor = 'rgba(0, 0, 0, 0.1)',\n  invert = false\n) => css`\n  background: linear-gradient(to bottom, ${from}, ${to});\n  color: ${textColor};\n  text-shadow: 0 ${invert ? '1px' : '-1px'} ${textShadowColor};\n  &:hover {\n    background: ${from};\n    color: ${textColor};\n  }\n\n  &:focus {\n    background: ${from};\n    outline: none;\n  }\n`;\n\ninterface StyleDeps {\n  theme: GrafanaTheme;\n  size: ButtonSize;\n  variant: ButtonVariant;\n  withIcon: boolean;\n}\nconst getButtonStyles = stylesFactory(({ theme, size, variant, withIcon }: StyleDeps) => {\n  const borderRadius = theme.border.radius.sm;\n  let padding,\n    background,\n    fontSize,\n    iconDistance,\n    height,\n    fontWeight = theme.typography.weight.semibold;\n\n  switch (size) {\n    case 'sm':\n      padding = `${theme.spacing.xs} ${theme.spacing.sm}`;\n      fontSize = theme.typography.size.sm;\n      iconDistance = theme.spacing.xs;\n      height = theme.height.sm;\n      break;\n    case 'md':\n      padding = `${theme.spacing.sm} ${theme.spacing.md}`;\n      fontSize = theme.typography.size.md;\n      iconDistance = theme.spacing.sm;\n      height = theme.height.md;\n      break;\n    case 'lg':\n      padding = `${theme.spacing.md} ${theme.spacing.lg}`;\n      fontSize = theme.typography.size.lg;\n      fontWeight = theme.typography.weight.regular;\n      iconDistance = theme.spacing.sm;\n      height = theme.height.lg;\n      break;\n    default:\n      padding = `${theme.spacing.sm} ${theme.spacing.md}`;\n      iconDistance = theme.spacing.sm;\n      fontSize = theme.typography.size.base;\n      height = theme.height.md;\n  }\n\n  switch (variant) {\n    case 'primary':\n      background = buttonVariantStyles(theme.colors.greenBase, theme.colors.greenShade, theme.colors.white);\n      break;\n    case 'secondary':\n      background = buttonVariantStyles(theme.colors.blueBase, theme.colors.blueShade, theme.colors.white);\n      break;\n    case 'danger':\n      background = buttonVariantStyles(theme.colors.redBase, theme.colors.redShade, theme.colors.white);\n      break;\n    case 'inverse':\n      const from = selectThemeVariant({ light: theme.colors.gray5, dark: theme.colors.dark6 }, theme.type) as string;\n      const to = selectThemeVariant(\n        {\n          light: tinycolor(from)\n            .darken(5)\n            .toString(),\n          dark: tinycolor(from)\n            .lighten(4)\n            .toString(),\n        },\n        theme.type\n      ) as string;\n\n      background = buttonVariantStyles(from, to, theme.colors.link, 'rgba(0, 0, 0, 0.1)', true);\n      break;\n    case 'transparent':\n      background = css`\n        ${buttonVariantStyles('', '', theme.colors.link, 'rgba(0, 0, 0, 0.1)', true)};\n        background: transparent;\n      `;\n      break;\n  }\n\n  return {\n    button: css`\n      label: button;\n      display: inline-flex;\n      align-items: center;\n      font-weight: ${fontWeight};\n      font-size: ${fontSize};\n      font-family: ${theme.typography.fontFamily.sansSerif};\n      line-height: ${theme.typography.lineHeight.xs};\n      padding: ${padding};\n      text-align: ${withIcon ? 'left' : 'center'};\n      vertical-align: middle;\n      cursor: pointer;\n      border: none;\n      height: ${height};\n      border-radius: ${borderRadius};\n      ${background};\n\n      &[disabled],\n      &:disabled {\n        cursor: not-allowed;\n        opacity: 0.65;\n        box-shadow: none;\n      }\n    `,\n    iconWrap: css`\n      label: button-icon-wrap;\n      display: flex;\n      align-items: center;\n    `,\n    icon: css`\n      label: button-icon;\n      margin-right: ${iconDistance};\n      filter: brightness(100);\n    `,\n  };\n});\n\nexport const AbstractButton: React.FunctionComponent<AbstractButtonProps> = ({\n  renderAs,\n  theme,\n  size = 'md',\n  variant = 'primary',\n  className,\n  icon,\n  children,\n  ...otherProps\n}) => {\n  const buttonStyles = getButtonStyles({ theme, size, variant, withIcon: !!icon });\n  const nonHtmlProps = {\n    theme,\n    size,\n    variant,\n  };\n\n  const finalClassName = cx(buttonStyles.button, className);\n  const finalChildren = icon ? (\n    <span className={buttonStyles.iconWrap}>\n      <i className={cx([icon, buttonStyles.icon])} />\n      <span>{children}</span>\n    </span>\n  ) : (\n    children\n  );\n\n  const finalProps =\n    typeof renderAs === 'string'\n      ? {\n          ...otherProps,\n          className: finalClassName,\n          children: finalChildren,\n        }\n      : {\n          ...otherProps,\n          ...nonHtmlProps,\n          className: finalClassName,\n          children: finalChildren,\n        };\n\n  return React.createElement(renderAs, finalProps);\n};\n\nAbstractButton.displayName = 'AbstractButton';\n","import React, { useContext } from 'react';\nimport { AbstractButton, ButtonProps, LinkButtonProps } from './AbstractButton';\nimport { ThemeContext } from '../../themes';\n\nexport const Button: React.FunctionComponent<ButtonProps> = props => {\n  const theme = useContext(ThemeContext);\n  return <AbstractButton {...props} renderAs=\"button\" theme={theme} />;\n};\nButton.displayName = 'Button';\n\nexport const LinkButton: React.FunctionComponent<LinkButtonProps> = props => {\n  const theme = useContext(ThemeContext);\n  return <AbstractButton {...props} renderAs=\"a\" theme={theme} />;\n};\nLinkButton.displayName = 'LinkButton';\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport classNames from 'classnames';\nimport { Tooltip, PopoverContent } from '../Tooltip/Tooltip';\n\ninterface Props {\n  children: ReactNode;\n  className?: string;\n  htmlFor?: string;\n  isFocused?: boolean;\n  isInvalid?: boolean;\n  tooltip?: PopoverContent;\n  width?: number;\n}\n\nexport const FormLabel: FunctionComponent<Props> = ({\n  children,\n  isFocused,\n  isInvalid,\n  className,\n  htmlFor,\n  tooltip,\n  width,\n  ...rest\n}) => {\n  const classes = classNames(`gf-form-label width-${width ? width : '10'}`, className, {\n    'gf-form-label--is-focused': isFocused,\n    'gf-form-label--is-invalid': isInvalid,\n  });\n\n  return (\n    <label className={classes} {...rest} htmlFor={htmlFor}>\n      {children}\n      {tooltip && (\n        <Tooltip placement=\"top\" content={tooltip} theme={'info'}>\n          <div className=\"gf-form-help-icon gf-form-help-icon--right-normal\">\n            <i className=\"fa fa-info-circle\" />\n          </div>\n        </Tooltip>\n      )}\n    </label>\n  );\n};\n","import omit from 'lodash/omit';\nimport React, { InputHTMLAttributes, FunctionComponent } from 'react';\nimport { FormField } from '..';\n\ninterface Props extends InputHTMLAttributes<HTMLInputElement> {\n  // Function to use when reset is clicked. Means you have to reset the input value yourself as this is  uncontrolled\n  // component (or do something else if required).\n  onReset: () => void;\n  isConfigured: boolean;\n\n  label?: string;\n  labelWidth?: number;\n  inputWidth?: number;\n  // Placeholder of the input field when in non configured state.\n  placeholder?: string;\n}\n\nconst defaultProps = {\n  inputWidth: 12,\n  placeholder: 'Password',\n  label: 'Password',\n};\n\n/**\n * Form field that has 2 states configured and not configured. If configured it will not show its contents and adds\n * a reset button that will clear the input and makes it accessible. In non configured state it behaves like normal\n * form field. This is used for passwords or anything that is encrypted on the server and is later returned encrypted\n * to the user (like datasource passwords).\n */\nexport const SecretFormField: FunctionComponent<Props> = ({\n  label,\n  labelWidth,\n  inputWidth,\n  onReset,\n  isConfigured,\n  placeholder,\n  ...inputProps\n}: Props) => {\n  return (\n    <FormField\n      label={label!}\n      labelWidth={labelWidth}\n      inputEl={\n        isConfigured ? (\n          <>\n            <input\n              type=\"text\"\n              className={`gf-form-input width-${inputWidth! - 2}`}\n              disabled={true}\n              value=\"configured\"\n              {...omit(inputProps, 'value')}\n            />\n            <button className=\"btn btn-secondary gf-form-btn\" onClick={onReset}>\n              reset\n            </button>\n          </>\n        ) : (\n          <input\n            type=\"password\"\n            className={`gf-form-input width-${inputWidth}`}\n            placeholder={placeholder}\n            {...inputProps}\n          />\n        )\n      }\n    />\n  );\n};\n\nSecretFormField.defaultProps = defaultProps;\nSecretFormField.displayName = 'SecretFormField';\n","import React, { SFC } from 'react';\n\ninterface LoadingPlaceholderProps {\n  text: string;\n}\n\nexport const LoadingPlaceholder: SFC<LoadingPlaceholderProps> = ({ text }) => (\n  <div className=\"gf-form-group\">\n    {text} <i className=\"fa fa-spinner fa-spin\" />\n  </div>\n);\n","import React, { FunctionComponent } from 'react';\nimport { Themeable } from '../../types';\nimport { ColorDefinition, getColorForTheme } from '../../utils/namedColorsPalette';\nimport { Color } from 'csstype';\nimport upperFirst from 'lodash/upperFirst';\nimport find from 'lodash/find';\nimport { selectThemeVariant } from '../../themes/selectThemeVariant';\n\ntype ColorChangeHandler = (color: ColorDefinition) => void;\n\nexport enum ColorSwatchVariant {\n  Small = 'small',\n  Large = 'large',\n}\n\ninterface ColorSwatchProps extends Themeable, React.DOMAttributes<HTMLDivElement> {\n  color: string;\n  label?: string;\n  variant?: ColorSwatchVariant;\n  isSelected?: boolean;\n}\n\nexport const ColorSwatch: FunctionComponent<ColorSwatchProps> = ({\n  color,\n  label,\n  variant = ColorSwatchVariant.Small,\n  isSelected,\n  theme,\n  ...otherProps\n}) => {\n  const isSmall = variant === ColorSwatchVariant.Small;\n  const swatchSize = isSmall ? '16px' : '32px';\n\n  const selectedSwatchBorder = selectThemeVariant(\n    {\n      light: theme.colors.white,\n      dark: theme.colors.black,\n    },\n    theme.type\n  );\n\n  const swatchStyles = {\n    width: swatchSize,\n    height: swatchSize,\n    borderRadius: '50%',\n    background: `${color}`,\n    marginRight: isSmall ? '0px' : '8px',\n    boxShadow: isSelected ? `inset 0 0 0 2px ${color}, inset 0 0 0 4px ${selectedSwatchBorder}` : 'none',\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'pointer',\n      }}\n      {...otherProps}\n    >\n      <div style={swatchStyles} />\n      {variant === ColorSwatchVariant.Large && <span>{label}</span>}\n    </div>\n  );\n};\n\ninterface NamedColorsGroupProps extends Themeable {\n  colors: ColorDefinition[];\n  selectedColor?: Color;\n  onColorSelect: ColorChangeHandler;\n  key?: string;\n}\n\nconst NamedColorsGroup: FunctionComponent<NamedColorsGroupProps> = ({\n  colors,\n  selectedColor,\n  onColorSelect,\n  theme,\n  ...otherProps\n}) => {\n  const primaryColor = find(colors, color => !!color.isPrimary);\n\n  return (\n    <div {...otherProps} style={{ display: 'flex', flexDirection: 'column' }}>\n      {primaryColor && (\n        <ColorSwatch\n          key={primaryColor.name}\n          isSelected={primaryColor.name === selectedColor}\n          variant={ColorSwatchVariant.Large}\n          color={getColorForTheme(primaryColor, theme.type)}\n          label={upperFirst(primaryColor.hue)}\n          onClick={() => onColorSelect(primaryColor)}\n          theme={theme}\n        />\n      )}\n      <div\n        style={{\n          display: 'flex',\n          marginTop: '8px',\n        }}\n      >\n        {colors.map(\n          color =>\n            !color.isPrimary && (\n              <div key={color.name} style={{ marginRight: '4px' }}>\n                <ColorSwatch\n                  key={color.name}\n                  isSelected={color.name === selectedColor}\n                  color={getColorForTheme(color, theme.type)}\n                  onClick={() => onColorSelect(color)}\n                  theme={theme}\n                />\n              </div>\n            )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default NamedColorsGroup;\n","import React from 'react';\nimport { Color, getNamedColorPalette } from '../../utils/namedColorsPalette';\nimport { Themeable } from '../../types/index';\nimport NamedColorsGroup from './NamedColorsGroup';\n\ninterface NamedColorsPaletteProps extends Themeable {\n  color?: Color;\n  onChange: (colorName: string) => void;\n}\n\nexport const NamedColorsPalette = ({ color, onChange, theme }: NamedColorsPaletteProps) => {\n  const swatches: JSX.Element[] = [];\n  getNamedColorPalette().forEach((colors, hue) => {\n    swatches.push(\n      <NamedColorsGroup\n        key={hue}\n        theme={theme}\n        selectedColor={color}\n        colors={colors}\n        onColorSelect={color => {\n          onChange(color.name);\n        }}\n      />\n    );\n  });\n\n  return (\n    <div\n      style={{\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3, 1fr)',\n        gridRowGap: '24px',\n        gridColumnGap: '24px',\n      }}\n    >\n      {swatches}\n    </div>\n  );\n};\n","import React from 'react';\nimport tinycolor from 'tinycolor2';\nimport debounce from 'lodash/debounce';\n\nimport { ColorPickerProps } from './ColorPickerPopover';\nimport { Input } from '../Input/Input';\n\ninterface ColorInputState {\n  previousColor: string;\n  value: string;\n}\n\ninterface ColorInputProps extends ColorPickerProps {\n  style?: React.CSSProperties;\n}\n\nclass ColorInput extends React.PureComponent<ColorInputProps, ColorInputState> {\n  constructor(props: ColorInputProps) {\n    super(props);\n    this.state = {\n      previousColor: props.color,\n      value: props.color,\n    };\n\n    this.updateColor = debounce(this.updateColor, 100);\n  }\n\n  static getDerivedStateFromProps(props: ColorPickerProps, state: ColorInputState) {\n    const newColor = tinycolor(props.color);\n    if (newColor.isValid() && props.color !== state.previousColor) {\n      return {\n        ...state,\n        previousColor: props.color,\n        value: newColor.toString(),\n      };\n    }\n\n    return state;\n  }\n  updateColor = (color: string) => {\n    this.props.onChange(color);\n  };\n\n  onChange = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    const newColor = tinycolor(event.currentTarget.value);\n\n    this.setState({\n      value: event.currentTarget.value,\n    });\n\n    if (newColor.isValid()) {\n      this.updateColor(newColor.toString());\n    }\n  };\n\n  onBlur = () => {\n    const newColor = tinycolor(this.state.value);\n\n    if (!newColor.isValid()) {\n      this.setState({\n        value: this.props.color,\n      });\n    }\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <div\n        style={{\n          display: 'flex',\n          ...this.props.style,\n        }}\n      >\n        <div\n          style={{\n            background: this.props.color,\n            width: '35px',\n            height: '35px',\n            flexGrow: 0,\n            borderRadius: '3px 0 0 3px',\n          }}\n        />\n        <div\n          style={{\n            flexGrow: 1,\n          }}\n        >\n          <Input className=\"gf-form-input\" value={value} onChange={this.onChange} onBlur={this.onBlur} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ColorInput;\n","import React from 'react';\nimport { Themeable } from '../../types';\nimport { selectThemeVariant } from '../../themes/selectThemeVariant';\n\nexport interface SpectrumPalettePointerProps extends Themeable {\n  direction?: string;\n}\n\nconst SpectrumPalettePointer: React.FunctionComponent<SpectrumPalettePointerProps> = ({ theme, direction }) => {\n  const styles = {\n    picker: {\n      width: '16px',\n      height: '16px',\n      transform: direction === 'vertical' ? 'translate(0, -8px)' : 'translate(-8px, 0)',\n    },\n  };\n\n  const pointerColor = selectThemeVariant(\n    {\n      light: theme.colors.dark3,\n      dark: theme.colors.gray2,\n    },\n    theme.type\n  );\n\n  let pointerStyles: React.CSSProperties = {\n    position: 'absolute',\n    left: '6px',\n    width: '0',\n    height: '0',\n    borderStyle: 'solid',\n    background: 'none',\n  };\n\n  let topArrowStyles: React.CSSProperties = {\n    top: '-7px',\n    borderWidth: '6px 3px 0px 3px',\n    borderColor: `${pointerColor} transparent transparent transparent`,\n  };\n\n  let bottomArrowStyles: React.CSSProperties = {\n    bottom: '-7px',\n    borderWidth: '0px 3px 6px 3px',\n    borderColor: ` transparent transparent ${pointerColor} transparent`,\n  };\n\n  if (direction === 'vertical') {\n    pointerStyles = {\n      ...pointerStyles,\n      left: 'auto',\n    };\n    topArrowStyles = {\n      borderWidth: '3px 0px 3px 6px',\n      borderColor: `transparent transparent transparent ${pointerColor}`,\n      left: '-7px',\n      top: '7px',\n    };\n    bottomArrowStyles = {\n      borderWidth: '3px 6px 3px 0px',\n      borderColor: `transparent ${pointerColor} transparent transparent`,\n      right: '-7px',\n      top: '7px',\n    };\n  }\n\n  return (\n    <div style={styles.picker}>\n      <div\n        style={{\n          ...pointerStyles,\n          ...topArrowStyles,\n        }}\n      />\n      <div\n        style={{\n          ...pointerStyles,\n          ...bottomArrowStyles,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default SpectrumPalettePointer;\n","import React from 'react';\nimport { CustomPicker, ColorResult } from 'react-color';\n\nimport { Saturation, Hue, Alpha } from 'react-color/lib/components/common';\nimport { getColorFromHexRgbOrName } from '../../utils/namedColorsPalette';\nimport tinycolor from 'tinycolor2';\nimport ColorInput from './ColorInput';\nimport { Themeable, GrafanaTheme } from '../../types';\nimport SpectrumPalettePointer, { SpectrumPalettePointerProps } from './SpectrumPalettePointer';\n\nexport interface SpectrumPaletteProps extends Themeable {\n  color: string;\n  onChange: (color: string) => void;\n}\n\nconst renderPointer = (theme: GrafanaTheme) => (props: SpectrumPalettePointerProps) => (\n  <SpectrumPalettePointer {...props} theme={theme} />\n);\n\n// @ts-ignore\nconst SpectrumPicker = CustomPicker<Themeable>(({ rgb, hsl, onChange, theme }) => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        width: '100%',\n        flexDirection: 'column',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            flexGrow: 1,\n            flexDirection: 'column',\n          }}\n        >\n          <div\n            style={{\n              position: 'relative',\n              height: '100px',\n              width: '100%',\n            }}\n          >\n            {/*\n      // @ts-ignore */}\n            <Saturation onChange={onChange} hsl={hsl} hsv={tinycolor(hsl).toHsv()} />\n          </div>\n          <div\n            style={{\n              width: '100%',\n              height: '16px',\n              marginTop: '16px',\n              position: 'relative',\n              background: 'white',\n            }}\n          >\n            {/*\n      // @ts-ignore */}\n            <Alpha rgb={rgb} hsl={hsl} a={rgb.a} onChange={onChange} pointer={renderPointer(theme)} />\n          </div>\n        </div>\n\n        <div\n          style={{\n            position: 'relative',\n            width: '16px',\n            height: '100px',\n            marginLeft: '16px',\n          }}\n        >\n          {/*\n        // @ts-ignore */}\n          <Hue onChange={onChange} hsl={hsl} direction=\"vertical\" pointer={renderPointer(theme)} />\n        </div>\n      </div>\n    </div>\n  );\n});\n\nconst SpectrumPalette: React.FunctionComponent<SpectrumPaletteProps> = ({ color, onChange, theme }) => {\n  return (\n    <div>\n      <SpectrumPicker\n        color={tinycolor(getColorFromHexRgbOrName(color)).toRgb()}\n        onChange={(a: ColorResult) => {\n          onChange(tinycolor(a.rgb).toString());\n        }}\n        theme={theme}\n      />\n      <ColorInput theme={theme} color={color} onChange={onChange} style={{ marginTop: '16px' }} />\n    </div>\n  );\n};\n\nexport default SpectrumPalette;\n","import { deprecationWarning } from '@grafana/data';\nimport { ColorPickerProps } from './ColorPickerPopover';\n\nexport const warnAboutColorPickerPropsDeprecation = (componentName: string, props: ColorPickerProps) => {\n  const { onColorChange } = props;\n  if (onColorChange) {\n    deprecationWarning(componentName, 'onColorChange', 'onChange');\n  }\n};\n","import React from 'react';\nimport { NamedColorsPalette } from './NamedColorsPalette';\nimport { getColorName, getColorFromHexRgbOrName } from '../../utils/namedColorsPalette';\nimport { PopoverContentProps } from '../Tooltip/Tooltip';\nimport SpectrumPalette from './SpectrumPalette';\nimport { GrafanaThemeType, Themeable } from '../../types/theme';\nimport { warnAboutColorPickerPropsDeprecation } from './warnAboutColorPickerPropsDeprecation';\n\nexport type ColorPickerChangeHandler = (color: string) => void;\n\nexport interface ColorPickerProps extends Themeable {\n  color: string;\n  onChange: ColorPickerChangeHandler;\n\n  /**\n   * @deprecated Use onChange instead\n   */\n  onColorChange?: ColorPickerChangeHandler;\n  enableNamedColors?: boolean;\n}\n\nexport interface Props<T> extends ColorPickerProps, PopoverContentProps {\n  customPickers?: T;\n}\n\ntype PickerType = 'palette' | 'spectrum';\n\nexport interface CustomPickersDescriptor {\n  [key: string]: {\n    tabComponent: React.ComponentType<ColorPickerProps>;\n    name: string;\n  };\n}\n\ninterface State<T> {\n  activePicker: PickerType | keyof T;\n}\n\nexport class ColorPickerPopover<T extends CustomPickersDescriptor> extends React.Component<Props<T>, State<T>> {\n  constructor(props: Props<T>) {\n    super(props);\n    this.state = {\n      activePicker: 'palette',\n    };\n    warnAboutColorPickerPropsDeprecation('ColorPickerPopover', props);\n  }\n\n  getTabClassName = (tabName: PickerType | keyof T) => {\n    const { activePicker } = this.state;\n    return `ColorPickerPopover__tab ${activePicker === tabName && 'ColorPickerPopover__tab--active'}`;\n  };\n\n  handleChange = (color: any) => {\n    const { onColorChange, onChange, enableNamedColors, theme } = this.props;\n    const changeHandler = onColorChange || onChange;\n\n    if (enableNamedColors) {\n      return changeHandler(color);\n    }\n    changeHandler(getColorFromHexRgbOrName(color, theme.type));\n  };\n\n  onTabChange = (tab: PickerType | keyof T) => {\n    return () => this.setState({ activePicker: tab });\n  };\n\n  renderPicker = () => {\n    const { activePicker } = this.state;\n    const { color, theme } = this.props;\n\n    switch (activePicker) {\n      case 'spectrum':\n        return <SpectrumPalette color={color} onChange={this.handleChange} theme={theme} />;\n      case 'palette':\n        return (\n          <NamedColorsPalette color={getColorName(color, theme.type)} onChange={this.handleChange} theme={theme} />\n        );\n      default:\n        return this.renderCustomPicker(activePicker);\n    }\n  };\n\n  renderCustomPicker = (tabKey: keyof T) => {\n    const { customPickers, color, theme } = this.props;\n    if (!customPickers) {\n      return null;\n    }\n\n    return React.createElement(customPickers[tabKey].tabComponent, {\n      color,\n      theme,\n      onChange: this.handleChange,\n    });\n  };\n\n  renderCustomPickerTabs = () => {\n    const { customPickers } = this.props;\n\n    if (!customPickers) {\n      return null;\n    }\n\n    return (\n      <>\n        {Object.keys(customPickers).map(key => {\n          return (\n            <div className={this.getTabClassName(key)} onClick={this.onTabChange(key)} key={key}>\n              {customPickers[key].name}\n            </div>\n          );\n        })}\n      </>\n    );\n  };\n\n  render() {\n    const { theme } = this.props;\n    const colorPickerTheme = theme.type || GrafanaThemeType.Dark;\n    return (\n      <div className={`ColorPickerPopover ColorPickerPopover--${colorPickerTheme}`}>\n        <div className=\"ColorPickerPopover__tabs\">\n          <div className={this.getTabClassName('palette')} onClick={this.onTabChange('palette')}>\n            Colors\n          </div>\n          <div className={this.getTabClassName('spectrum')} onClick={this.onTabChange('spectrum')}>\n            Custom\n          </div>\n          {this.renderCustomPickerTabs()}\n        </div>\n\n        <div className=\"ColorPickerPopover__content\">{this.renderPicker()}</div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport uniqueId from 'lodash/uniqueId';\nimport { Tooltip } from '../Tooltip/Tooltip';\nimport * as PopperJS from 'popper.js';\n\nexport interface Props {\n  label: string;\n  checked: boolean;\n  className?: string;\n  labelClass?: string;\n  switchClass?: string;\n  tooltip?: string;\n  tooltipPlacement?: PopperJS.Placement;\n  transparent?: boolean;\n  onChange: (event?: React.SyntheticEvent<HTMLInputElement>) => void;\n}\n\nexport interface State {\n  id: string;\n}\n\nexport class Switch extends PureComponent<Props, State> {\n  state = {\n    id: uniqueId(),\n  };\n\n  internalOnChange = (event: React.FormEvent<HTMLInputElement>) => {\n    event.stopPropagation();\n    this.props.onChange(event);\n  };\n\n  render() {\n    const {\n      labelClass = '',\n      switchClass = '',\n      label,\n      checked,\n      transparent,\n      className,\n      tooltip,\n      tooltipPlacement,\n    } = this.props;\n\n    const labelId = this.state.id;\n    const labelClassName = `gf-form-label ${labelClass} ${transparent ? 'gf-form-label--transparent' : ''} pointer`;\n    const switchClassName = `gf-form-switch ${switchClass} ${transparent ? 'gf-form-switch--transparent' : ''}`;\n\n    return (\n      <div className=\"gf-form-switch-container-react\">\n        <label htmlFor={labelId} className={`gf-form gf-form-switch-container ${className || ''}`}>\n          {label && (\n            <div className={labelClassName}>\n              {label}\n              {tooltip && (\n                <Tooltip placement={tooltipPlacement ? tooltipPlacement : 'auto'} content={tooltip} theme={'info'}>\n                  <div className=\"gf-form-help-icon gf-form-help-icon--right-normal\">\n                    <i className=\"fa fa-info-circle\" />\n                  </div>\n                </Tooltip>\n              )}\n            </div>\n          )}\n          <div className={switchClassName}>\n            <input id={labelId} type=\"checkbox\" checked={checked} onChange={this.internalOnChange} />\n            <span className=\"gf-form-switch__slider\" />\n          </div>\n        </label>\n      </div>\n    );\n  }\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { ColorPickerPopover, ColorPickerProps } from './ColorPickerPopover';\nimport { PopoverContentProps } from '../Tooltip/Tooltip';\nimport { Switch } from '../Switch/Switch';\nimport { withTheme } from '../../themes/ThemeContext';\n\nexport interface SeriesColorPickerPopoverProps extends ColorPickerProps, PopoverContentProps {\n  yaxis?: number;\n  onToggleAxis?: () => void;\n}\n\nexport const SeriesColorPickerPopover: FunctionComponent<SeriesColorPickerPopoverProps> = props => {\n  const { yaxis, onToggleAxis, color, ...colorPickerProps } = props;\n  return (\n    <ColorPickerPopover\n      {...colorPickerProps}\n      color={color || '#000000'}\n      customPickers={{\n        yaxis: {\n          name: 'Y-Axis',\n          tabComponent: () => (\n            <Switch\n              key=\"yaxisSwitch\"\n              label=\"Use right y-axis\"\n              className=\"ColorPicker__axisSwitch\"\n              labelClass=\"ColorPicker__axisSwitchLabel\"\n              checked={yaxis === 2}\n              onChange={() => {\n                if (onToggleAxis) {\n                  onToggleAxis();\n                }\n              }}\n            />\n          ),\n        },\n      }}\n    />\n  );\n};\n\ninterface AxisSelectorProps {\n  yaxis: number;\n  onToggleAxis?: () => void;\n}\n\ninterface AxisSelectorState {\n  yaxis: number;\n}\n\nexport class AxisSelector extends React.PureComponent<AxisSelectorProps, AxisSelectorState> {\n  constructor(props: AxisSelectorProps) {\n    super(props);\n    this.state = {\n      yaxis: this.props.yaxis,\n    };\n    this.onToggleAxis = this.onToggleAxis.bind(this);\n  }\n\n  onToggleAxis() {\n    this.setState({\n      yaxis: this.state.yaxis === 2 ? 1 : 2,\n    });\n\n    if (this.props.onToggleAxis) {\n      this.props.onToggleAxis();\n    }\n  }\n\n  render() {\n    const leftButtonClass = this.state.yaxis === 1 ? 'btn-primary' : 'btn-inverse';\n    const rightButtonClass = this.state.yaxis === 2 ? 'btn-primary' : 'btn-inverse';\n\n    return (\n      <div className=\"p-b-1\">\n        <label className=\"small p-r-1\">Y Axis:</label>\n        <button onClick={this.onToggleAxis} className={'btn btn-small ' + leftButtonClass}>\n          Left\n        </button>\n        <button onClick={this.onToggleAxis} className={'btn btn-small ' + rightButtonClass}>\n          Right\n        </button>\n      </div>\n    );\n  }\n}\n\n// This component is to enable SeriecColorPickerPopover usage via series-color-picker-popover directive\nexport const SeriesColorPickerPopoverWithTheme = withTheme(SeriesColorPickerPopover);\n","import React, { forwardRef } from 'react';\n\ninterface ColorPickerTriggerProps {\n  onClick: () => void;\n  onMouseLeave: () => void;\n  color: string;\n}\n\nexport const ColorPickerTrigger = forwardRef(function ColorPickerTrigger(\n  props: ColorPickerTriggerProps,\n  ref: React.Ref<HTMLDivElement>\n) {\n  return (\n    <div\n      ref={ref}\n      onClick={props.onClick}\n      onMouseLeave={props.onMouseLeave}\n      style={{\n        overflow: 'hidden',\n        background: 'inherit',\n        border: 'none',\n        color: 'inherit',\n        padding: 0,\n        borderRadius: 10,\n        cursor: 'pointer',\n      }}\n    >\n      <div\n        style={{\n          position: 'relative',\n          width: 15,\n          height: 15,\n          border: 'none',\n          margin: 0,\n          float: 'left',\n          zIndex: 0,\n          backgroundImage:\n            // tslint:disable-next-line:max-line-length\n            'url(data:image/png,base64,iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAIAAADZF8uwAAAAGUlEQVQYV2M4gwH+YwCGIasIUwhT25BVBADtzYNYrHvv4gAAAABJRU5ErkJggg==)',\n        }}\n      >\n        <div\n          style={{\n            backgroundColor: props.color,\n            display: 'block',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0,\n          }}\n        />\n      </div>\n    </div>\n  );\n});\n","import React, { Component, createRef } from 'react';\nimport omit from 'lodash/omit';\nimport { PopoverController } from '../Tooltip/PopoverController';\nimport { Popover } from '../Tooltip/Popover';\nimport { ColorPickerPopover, ColorPickerProps, ColorPickerChangeHandler } from './ColorPickerPopover';\nimport { getColorFromHexRgbOrName } from '../../utils/namedColorsPalette';\nimport { SeriesColorPickerPopover } from './SeriesColorPickerPopover';\n\nimport { withTheme } from '../../themes/ThemeContext';\nimport { ColorPickerTrigger } from './ColorPickerTrigger';\n\n/**\n * If you need custom trigger for the color picker you can do that with a render prop pattern and supply a function\n * as a child. You will get show/hide function which you can map to desired interaction (like onClick or onMouseLeave)\n * and a ref which needs to be passed to an HTMLElement for correct positioning. If you want to use class or functional\n * component as a custom trigger you will need to forward the reference to first HTMLElement child.\n */\ntype ColorPickerTriggerRenderer = (props: {\n  // This should be a React.RefObject<HTMLElement> but due to how object refs are defined you cannot downcast from that\n  // to a specific type like React.RefObject<HTMLDivElement> even though it would be fine in runtime.\n  ref: React.RefObject<any>;\n  showColorPicker: () => void;\n  hideColorPicker: () => void;\n}) => React.ReactNode;\n\nexport const colorPickerFactory = <T extends ColorPickerProps>(\n  popover: React.ComponentType<T>,\n  displayName = 'ColorPicker'\n) => {\n  return class ColorPicker extends Component<T & { children?: ColorPickerTriggerRenderer }, any> {\n    static displayName = displayName;\n    pickerTriggerRef = createRef<any>();\n\n    onColorChange = (color: string) => {\n      const { onColorChange, onChange } = this.props;\n      const changeHandler = (onColorChange || onChange) as ColorPickerChangeHandler;\n\n      return changeHandler(color);\n    };\n\n    render() {\n      const { theme, children } = this.props;\n      const popoverElement = React.createElement(popover, {\n        ...omit(this.props, 'children'),\n        onChange: this.onColorChange,\n      });\n\n      return (\n        <PopoverController content={popoverElement} hideAfter={300}>\n          {(showPopper, hidePopper, popperProps) => {\n            return (\n              <>\n                {this.pickerTriggerRef.current && (\n                  <Popover\n                    {...popperProps}\n                    referenceElement={this.pickerTriggerRef.current}\n                    wrapperClassName=\"ColorPicker\"\n                    onMouseLeave={hidePopper}\n                    onMouseEnter={showPopper}\n                  />\n                )}\n\n                {children ? (\n                  // Children have a bit weird type due to intersection used in the definition so we need to cast here,\n                  // but the definition is correct and should not allow to pass a children that does not conform to\n                  // ColorPickerTriggerRenderer type.\n                  (children as ColorPickerTriggerRenderer)({\n                    ref: this.pickerTriggerRef,\n                    showColorPicker: showPopper,\n                    hideColorPicker: hidePopper,\n                  })\n                ) : (\n                  <ColorPickerTrigger\n                    ref={this.pickerTriggerRef}\n                    onClick={showPopper}\n                    onMouseLeave={hidePopper}\n                    color={getColorFromHexRgbOrName(this.props.color || '#000000', theme.type)}\n                  />\n                )}\n              </>\n            );\n          }}\n        </PopoverController>\n      );\n    }\n  };\n};\n\nexport const ColorPicker = withTheme(colorPickerFactory(ColorPickerPopover, 'ColorPicker'));\nexport const SeriesColorPicker = withTheme(colorPickerFactory(SeriesColorPickerPopover, 'SeriesColorPicker'));\n","// Libraries\nimport React, { FunctionComponent } from 'react';\n\ninterface Props {\n  title?: string | JSX.Element;\n  onClose?: () => void;\n  children: JSX.Element | JSX.Element[] | boolean;\n  onAdd?: () => void;\n}\n\nexport const PanelOptionsGroup: FunctionComponent<Props> = props => {\n  return (\n    <div className=\"panel-options-group\">\n      {props.onAdd ? (\n        <div className=\"panel-options-group__header\">\n          <button className=\"panel-options-group__add-btn\" onClick={props.onAdd}>\n            <div className=\"panel-options-group__add-circle\">\n              <i className=\"fa fa-plus\" />\n            </div>\n            <span className=\"panel-options-group__title\">{props.title}</span>\n          </button>\n        </div>\n      ) : (\n        props.title && (\n          <div className=\"panel-options-group__header\">\n            <span className=\"panel-options-group__title\">{props.title}</span>\n            {props.onClose && (\n              <button className=\"btn btn-link\" onClick={props.onClose}>\n                <i className=\"fa fa-remove\" />\n              </button>\n            )}\n          </div>\n        )\n      )}\n      {props.children && <div className=\"panel-options-group__body\">{props.children}</div>}\n    </div>\n  );\n};\n","import React, { SFC } from 'react';\n\ninterface Props {\n  cols?: number;\n  children: JSX.Element[] | JSX.Element;\n}\n\nexport const PanelOptionsGrid: SFC<Props> = ({ children }) => {\n  return <div className=\"panel-options-grid\">{children}</div>;\n};\n","import React, { ChangeEvent, PureComponent } from 'react';\n\nimport { FormField, FormLabel, Input, Select } from '..';\n\nimport { MappingType, ValueMapping } from '@grafana/data';\n\nexport interface Props {\n  valueMapping: ValueMapping;\n  updateValueMapping: (valueMapping: ValueMapping) => void;\n  removeValueMapping: () => void;\n}\n\ninterface State {\n  from?: string;\n  id: number;\n  operator: string;\n  text: string;\n  to?: string;\n  type: MappingType;\n  value?: string;\n}\n\nconst mappingOptions = [\n  { value: MappingType.ValueToText, label: 'Value' },\n  { value: MappingType.RangeToText, label: 'Range' },\n];\n\nexport default class MappingRow extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = { ...props.valueMapping };\n  }\n\n  onMappingValueChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ value: event.target.value });\n  };\n\n  onMappingFromChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ from: event.target.value });\n  };\n\n  onMappingToChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ to: event.target.value });\n  };\n\n  onMappingTextChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ text: event.target.value });\n  };\n\n  onMappingTypeChange = (mappingType: MappingType) => {\n    this.setState({ type: mappingType });\n  };\n\n  updateMapping = () => {\n    this.props.updateValueMapping({ ...this.state } as ValueMapping);\n  };\n\n  renderRow() {\n    const { from, text, to, type, value } = this.state;\n\n    if (type === MappingType.RangeToText) {\n      return (\n        <>\n          <FormField\n            label=\"From\"\n            labelWidth={4}\n            inputWidth={8}\n            onBlur={this.updateMapping}\n            onChange={this.onMappingFromChange}\n            value={from}\n          />\n          <FormField\n            label=\"To\"\n            labelWidth={4}\n            inputWidth={8}\n            onBlur={this.updateMapping}\n            onChange={this.onMappingToChange}\n            value={to}\n          />\n          <div className=\"gf-form gf-form--grow\">\n            <FormLabel width={4}>Text</FormLabel>\n            <Input\n              className=\"gf-form-input\"\n              onBlur={this.updateMapping}\n              value={text}\n              onChange={this.onMappingTextChange}\n            />\n          </div>\n        </>\n      );\n    }\n\n    return (\n      <>\n        <FormField\n          label=\"Value\"\n          labelWidth={4}\n          onBlur={this.updateMapping}\n          onChange={this.onMappingValueChange}\n          value={value}\n          inputWidth={8}\n        />\n        <div className=\"gf-form gf-form--grow\">\n          <FormLabel width={4}>Text</FormLabel>\n          <Input\n            className=\"gf-form-input\"\n            onBlur={this.updateMapping}\n            value={text}\n            onChange={this.onMappingTextChange}\n          />\n        </div>\n      </>\n    );\n  }\n\n  render() {\n    const { type } = this.state;\n\n    return (\n      <div className=\"gf-form-inline\">\n        <div className=\"gf-form\">\n          <FormLabel width={5}>Type</FormLabel>\n          <Select\n            placeholder=\"Choose type\"\n            isSearchable={false}\n            options={mappingOptions}\n            value={mappingOptions.find(o => o.value === type)}\n            // @ts-ignore\n            onChange={type => this.onMappingTypeChange(type.value)}\n            width={7}\n          />\n        </div>\n        {this.renderRow()}\n        <div className=\"gf-form\">\n          <button onClick={this.props.removeValueMapping} className=\"gf-form-label gf-form-label--btn\">\n            <i className=\"fa fa-times\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\n\nimport MappingRow from './MappingRow';\nimport { MappingType, ValueMapping } from '@grafana/data';\nimport { Button } from '../index';\nimport { PanelOptionsGroup } from '../PanelOptionsGroup/PanelOptionsGroup';\n\nexport interface Props {\n  valueMappings?: ValueMapping[];\n  onChange: (valueMappings: ValueMapping[]) => void;\n}\n\ninterface State {\n  valueMappings: ValueMapping[];\n  nextIdToAdd: number;\n}\n\nexport class ValueMappingsEditor extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const mappings = props.valueMappings || [];\n\n    this.state = {\n      valueMappings: mappings,\n      nextIdToAdd: mappings.length > 0 ? this.getMaxIdFromValueMappings(mappings) : 1,\n    };\n  }\n\n  getMaxIdFromValueMappings(mappings: ValueMapping[]) {\n    return Math.max.apply(null, mappings.map(mapping => mapping.id).map(m => m)) + 1;\n  }\n\n  onAddMapping = () =>\n    this.setState(prevState => ({\n      valueMappings: [\n        ...prevState.valueMappings,\n        {\n          id: prevState.nextIdToAdd,\n          operator: '',\n          value: '',\n          text: '',\n          type: MappingType.ValueToText,\n          from: '',\n          to: '',\n        },\n      ],\n      nextIdToAdd: prevState.nextIdToAdd + 1,\n    }));\n\n  onRemoveMapping = (id: number) => {\n    this.setState(\n      prevState => ({\n        valueMappings: prevState.valueMappings.filter(m => {\n          return m.id !== id;\n        }),\n      }),\n      () => {\n        this.props.onChange(this.state.valueMappings);\n      }\n    );\n  };\n\n  updateGauge = (mapping: ValueMapping) => {\n    this.setState(\n      prevState => ({\n        valueMappings: prevState.valueMappings.map(m => {\n          if (m.id === mapping.id) {\n            return { ...mapping };\n          }\n\n          return m;\n        }),\n      }),\n      () => {\n        this.props.onChange(this.state.valueMappings);\n      }\n    );\n  };\n\n  render() {\n    const { valueMappings } = this.state;\n\n    return (\n      <PanelOptionsGroup title=\"Value mappings\">\n        <div>\n          {valueMappings.length > 0 &&\n            valueMappings.map((valueMapping, index) => (\n              <MappingRow\n                key={`${valueMapping.text}-${index}`}\n                valueMapping={valueMapping}\n                updateValueMapping={this.updateGauge}\n                removeValueMapping={() => this.onRemoveMapping(valueMapping.id)}\n              />\n            ))}\n          <Button variant=\"inverse\" icon=\"fa fa-plus\" onClick={this.onAddMapping}>\n            Add mapping\n          </Button>\n        </div>\n      </PanelOptionsGroup>\n    );\n  }\n}\n","import React, { FC } from 'react';\n\nexport interface Props {\n  children: JSX.Element | string;\n}\n\nconst EmptySearchResult: FC<Props> = ({ children }) => {\n  return <div className=\"empty-search-result\">{children}</div>;\n};\n\nexport { EmptySearchResult };\n","import React, { PureComponent } from 'react';\nimport { select, pie, arc, event } from 'd3';\nimport sum from 'lodash/sum';\nimport { DisplayValue } from '@grafana/data';\n\nimport { GrafanaThemeType } from '../../types';\nimport { Themeable } from '../../index';\nimport { colors as grafana_colors } from '../../utils/index';\n\nexport enum PieChartType {\n  PIE = 'pie',\n  DONUT = 'donut',\n}\n\nexport interface Props extends Themeable {\n  height: number;\n  width: number;\n  values: DisplayValue[];\n\n  pieType: PieChartType;\n  strokeWidth: number;\n}\n\nexport class PieChart extends PureComponent<Props> {\n  containerElement: any;\n  svgElement: any;\n  tooltipElement: any;\n  tooltipValueElement: any;\n\n  static defaultProps = {\n    pieType: 'pie',\n    format: 'short',\n    stat: 'current',\n    strokeWidth: 1,\n    theme: GrafanaThemeType.Dark,\n  };\n\n  componentDidMount() {\n    this.draw();\n  }\n\n  componentDidUpdate() {\n    this.draw();\n  }\n\n  draw() {\n    const { values, pieType, strokeWidth } = this.props;\n\n    if (values.length === 0) {\n      return;\n    }\n\n    const data = values.map(datapoint => datapoint.numeric);\n    const names = values.map(datapoint => datapoint.text);\n    const colors = values.map((p, idx) => {\n      if (p.color) {\n        return p.color;\n      }\n      return grafana_colors[idx % grafana_colors.length];\n    });\n\n    const total = sum(data) || 1;\n    const percents = data.map((item: number) => (item / total) * 100);\n\n    const width = this.containerElement.offsetWidth;\n    const height = this.containerElement.offsetHeight;\n    const radius = Math.min(width, height) / 2;\n\n    const outerRadius = radius - radius / 10;\n    const innerRadius = pieType === PieChartType.PIE ? 0 : radius - radius / 3;\n\n    const svg = select(this.svgElement)\n      .html('')\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .attr('transform', `translate(${width / 2},${height / 2})`);\n\n    const pieChart = pie();\n\n    const customArc = arc()\n      .outerRadius(outerRadius)\n      .innerRadius(innerRadius)\n      .padAngle(0);\n\n    svg\n      .selectAll('path')\n      .data(pieChart(data))\n      .enter()\n      .append('path')\n      .attr('d', customArc as any)\n      .attr('fill', (d: any, idx: number) => colors[idx])\n      .style('fill-opacity', 0.15)\n      .style('stroke', (d: any, idx: number) => colors[idx])\n      .style('stroke-width', `${strokeWidth}px`)\n      .on('mouseover', (d: any, idx: any) => {\n        select(this.tooltipElement).style('opacity', 1);\n        select(this.tooltipValueElement).text(`${names[idx]} (${percents[idx].toFixed(2)}%)`);\n      })\n      .on('mousemove', () => {\n        select(this.tooltipElement)\n          .style('top', `${event.pageY - height / 2}px`)\n          .style('left', `${event.pageX}px`);\n      })\n      .on('mouseout', () => {\n        select(this.tooltipElement).style('opacity', 0);\n      });\n  }\n\n  render() {\n    const { height, width, values } = this.props;\n\n    if (values.length > 0) {\n      return (\n        <div className=\"piechart-panel\">\n          <div\n            ref={element => (this.containerElement = element)}\n            className=\"piechart-container\"\n            style={{\n              height: `${height * 0.9}px`,\n              width: `${Math.min(width, height * 1.3)}px`,\n            }}\n          >\n            <svg ref={element => (this.svgElement = element)} />\n          </div>\n          <div className=\"piechart-tooltip\" ref={element => (this.tooltipElement = element)}>\n            <div className=\"piechart-tooltip-time\">\n              <div\n                id=\"tooltip-value\"\n                className=\"piechart-tooltip-value\"\n                ref={element => (this.tooltipValueElement = element)}\n              />\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"piechart-panel\">\n          <div className=\"datapoints-warning\">\n            <span className=\"small\">No data points</span>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n","import React, { PureComponent } from 'react';\n\nimport { Select } from '..';\n\nimport { getValueFormats } from '../../utils';\n\ninterface Props {\n  onChange: (item: any) => void;\n  defaultValue?: string;\n  width?: number;\n}\n\nexport class UnitPicker extends PureComponent<Props> {\n  static defaultProps = {\n    width: 12,\n  };\n\n  render() {\n    const { defaultValue, onChange, width } = this.props;\n\n    const unitGroups = getValueFormats();\n\n    // Need to transform the data structure to work well with Select\n    const groupOptions = unitGroups.map(group => {\n      const options = group.submenu.map(unit => {\n        return {\n          label: unit.text,\n          value: unit.value,\n        };\n      });\n\n      return {\n        label: group.text,\n        options,\n      };\n    });\n\n    const value = groupOptions.map(group => {\n      return group.options.find(option => option.value === defaultValue);\n    });\n\n    return (\n      <Select\n        width={width}\n        defaultValue={value}\n        isSearchable={true}\n        options={groupOptions}\n        placeholder=\"Choose\"\n        onChange={onChange}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\n\nimport isArray from 'lodash/isArray';\nimport difference from 'lodash/difference';\n\nimport { Select } from '../index';\n\nimport { fieldReducers, SelectableValue } from '@grafana/data';\n\ninterface Props {\n  placeholder?: string;\n  onChange: (stats: string[]) => void;\n  stats: string[];\n  width?: number;\n  allowMultiple?: boolean;\n  defaultStat?: string;\n}\n\nexport class StatsPicker extends PureComponent<Props> {\n  static defaultProps = {\n    width: 12,\n    allowMultiple: false,\n  };\n\n  componentDidMount() {\n    this.checkInput();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.checkInput();\n  }\n\n  checkInput = () => {\n    const { stats, allowMultiple, defaultStat, onChange } = this.props;\n\n    const current = fieldReducers.list(stats);\n    if (current.length !== stats.length) {\n      const found = current.map(v => v.id);\n      const notFound = difference(stats, found);\n      console.warn('Unknown stats', notFound, stats);\n      onChange(current.map(stat => stat.id));\n    }\n\n    // Make sure there is only one\n    if (!allowMultiple && stats.length > 1) {\n      console.warn('Removing extra stat', stats);\n      onChange([stats[0]]);\n    }\n\n    // Set the reducer from callback\n    if (defaultStat && stats.length < 1) {\n      onChange([defaultStat]);\n    }\n  };\n\n  onSelectionChange = (item: SelectableValue<string>) => {\n    const { onChange } = this.props;\n    if (isArray(item)) {\n      onChange(item.map(v => v.value));\n    } else {\n      onChange(item.value ? [item.value] : []);\n    }\n  };\n\n  render() {\n    const { width, stats, allowMultiple, defaultStat, placeholder } = this.props;\n\n    const select = fieldReducers.selectOptions(stats);\n    return (\n      <Select\n        width={width}\n        value={select.current}\n        isClearable={!defaultStat}\n        isMulti={allowMultiple}\n        isSearchable={true}\n        options={select.options}\n        placeholder={placeholder}\n        onChange={this.onSelectionChange}\n      />\n    );\n  }\n}\n","import React, { FC } from 'react';\nimport RcTimePicker from 'rc-time-picker';\nimport { dateTime, DateTime, dateTimeAsMoment } from '@grafana/data';\n\ninterface Props {\n  onChange: (value: DateTime) => void;\n  value: DateTime;\n  showHour?: boolean;\n  minuteStep?: number;\n}\n\nexport const TimeOfDayPicker: FC<Props> = ({ minuteStep = 1, showHour = true, onChange, value }) => {\n  return (\n    <div>\n      <RcTimePicker\n        defaultValue={dateTimeAsMoment()}\n        onChange={(value: any) => onChange(dateTime(value))}\n        allowEmpty={false}\n        showSecond={false}\n        value={dateTimeAsMoment(value)}\n        showHour={showHour}\n        minuteStep={minuteStep}\n      />\n    </div>\n  );\n};\n","import { PureComponent } from 'react';\nimport { interval, Subscription, Subject, of, NEVER } from 'rxjs';\nimport { tap, switchMap } from 'rxjs/operators';\nimport _ from 'lodash';\n\nimport { stringToMs, SelectableValue } from '@grafana/data';\nimport { isLive } from '../RefreshPicker/RefreshPicker';\n\nexport function getIntervalFromString(strInterval: string): SelectableValue<number> {\n  return {\n    label: strInterval,\n    value: stringToMs(strInterval),\n  };\n}\n\ninterface Props {\n  func: () => any; // TODO\n  loading: boolean;\n  interval: string;\n}\n\nexport class SetInterval extends PureComponent<Props> {\n  private propsSubject: Subject<Props>;\n  private subscription: Subscription | null;\n\n  constructor(props: Props) {\n    super(props);\n    this.propsSubject = new Subject<Props>();\n    this.subscription = null;\n  }\n\n  componentDidMount() {\n    // Creating a subscription to propsSubject. This subject pushes values every time\n    // SetInterval's props change\n    this.subscription = this.propsSubject\n      .pipe(\n        // switchMap creates a new observables based on the input stream,\n        // which becomes part of the propsSubject stream\n        switchMap(props => {\n          // If the query is live, empty value is emited. `of` creates single value,\n          // which is merged to propsSubject stream\n          if (isLive(props.interval)) {\n            return of({});\n          }\n\n          // When query is loading, a new stream is merged. But it's a stream that emits no values(NEVER),\n          // hence next call of this function will happen when query changes, and new props are passed into this component\n          // When query is NOT loading, a new value is emited, this time it's an interval value,\n          // which makes tap function below execute on that interval basis.\n          return props.loading ? NEVER : interval(stringToMs(props.interval));\n        }),\n        // tap will execute function passed via func prop\n        // * on value from `of` stream merged if query is live\n        // * on specified interval (triggered by values emited by interval)\n        tap(() => this.props.func())\n      )\n      .subscribe();\n\n    // When component has mounted, propsSubject emits it's first value\n    this.propsSubject.next(this.props);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if ((isLive(prevProps.interval) && isLive(this.props.interval)) || _.isEqual(prevProps, this.props)) {\n      return;\n    }\n    // if props changed, a new value is emited from propsSubject\n    this.propsSubject.next(this.props);\n  }\n\n  componentWillUnmount() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n\n    this.propsSubject.unsubscribe();\n  }\n\n  render(): null {\n    return null;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport $ from 'jquery';\nimport { Threshold, DisplayValue } from '@grafana/data';\n\nimport { getColorFromHexRgbOrName } from '../../utils';\nimport { Themeable } from '../../types';\nimport { selectThemeVariant } from '../../themes';\n\nexport interface Props extends Themeable {\n  height: number;\n  maxValue: number;\n  minValue: number;\n  thresholds: Threshold[];\n  showThresholdMarkers: boolean;\n  showThresholdLabels: boolean;\n  width: number;\n  value: DisplayValue;\n  onClick?: React.MouseEventHandler<HTMLElement>;\n  className?: string;\n}\n\nconst FONT_SCALE = 1;\n\nexport class Gauge extends PureComponent<Props> {\n  canvasElement: any;\n\n  static defaultProps: Partial<Props> = {\n    maxValue: 100,\n    minValue: 0,\n    showThresholdMarkers: true,\n    showThresholdLabels: false,\n    thresholds: [],\n  };\n\n  componentDidMount() {\n    this.draw();\n  }\n\n  componentDidUpdate() {\n    this.draw();\n  }\n\n  getFormattedThresholds() {\n    const { maxValue, minValue, thresholds, theme } = this.props;\n\n    const lastThreshold = thresholds[thresholds.length - 1];\n\n    return [\n      ...thresholds.map((threshold, index) => {\n        if (index === 0) {\n          return { value: minValue, color: getColorFromHexRgbOrName(threshold.color, theme.type) };\n        }\n\n        const previousThreshold = thresholds[index - 1];\n        return { value: threshold.value, color: getColorFromHexRgbOrName(previousThreshold.color, theme.type) };\n      }),\n      { value: maxValue, color: getColorFromHexRgbOrName(lastThreshold.color, theme.type) },\n    ];\n  }\n\n  getFontScale(length: number): number {\n    if (length > 12) {\n      return FONT_SCALE - (length * 5) / 110;\n    }\n    return FONT_SCALE - (length * 5) / 101;\n  }\n\n  draw() {\n    const { maxValue, minValue, showThresholdLabels, showThresholdMarkers, width, height, theme, value } = this.props;\n\n    const autoProps = calculateGaugeAutoProps(width, height, value.title);\n    const dimension = Math.min(width, autoProps.gaugeHeight);\n\n    const backgroundColor = selectThemeVariant(\n      {\n        dark: theme.colors.dark8,\n        light: theme.colors.gray6,\n      },\n      theme.type\n    );\n\n    const gaugeWidthReduceRatio = showThresholdLabels ? 1.5 : 1;\n    const gaugeWidth = Math.min(dimension / 5.5, 40) / gaugeWidthReduceRatio;\n    const thresholdMarkersWidth = gaugeWidth / 5;\n    const fontSize = Math.min(dimension / 4, 100) * (value.text !== null ? this.getFontScale(value.text.length) : 1);\n\n    const thresholdLabelFontSize = fontSize / 2.5;\n\n    const options: any = {\n      series: {\n        gauges: {\n          gauge: {\n            min: minValue,\n            max: maxValue,\n            background: { color: backgroundColor },\n            border: { color: null },\n            shadow: { show: false },\n            width: gaugeWidth,\n          },\n          frame: { show: false },\n          label: { show: false },\n          layout: { margin: 0, thresholdWidth: 0, vMargin: 0 },\n          cell: { border: { width: 0 } },\n          threshold: {\n            values: this.getFormattedThresholds(),\n            label: {\n              show: showThresholdLabels,\n              margin: thresholdMarkersWidth + 1,\n              font: { size: thresholdLabelFontSize },\n            },\n            show: showThresholdMarkers,\n            width: thresholdMarkersWidth,\n          },\n          value: {\n            color: value.color,\n            formatter: () => {\n              return value.text;\n            },\n            font: { size: fontSize, family: theme.typography.fontFamily.sansSerif },\n          },\n          show: true,\n        },\n      },\n    };\n\n    const plotSeries = {\n      data: [[0, value.numeric]],\n      label: value.title,\n    };\n\n    try {\n      $.plot(this.canvasElement, [plotSeries], options);\n    } catch (err) {\n      console.log('Gauge rendering error', err, options, value);\n    }\n  }\n\n  renderVisualization = () => {\n    const { width, value, height, onClick } = this.props;\n    const autoProps = calculateGaugeAutoProps(width, height, value.title);\n\n    return (\n      <>\n        <div\n          style={{ height: `${autoProps.gaugeHeight}px`, width: '100%' }}\n          ref={element => (this.canvasElement = element)}\n          onClick={onClick}\n        />\n        {autoProps.showLabel && (\n          <div\n            style={{\n              textAlign: 'center',\n              fontSize: autoProps.titleFontSize,\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              whiteSpace: 'nowrap',\n              position: 'relative',\n              width: '100%',\n              top: '-4px',\n              cursor: 'default',\n            }}\n          >\n            {value.title}\n          </div>\n        )}\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          overflow: 'hidden',\n        }}\n        className={this.props.className}\n      >\n        {this.renderVisualization()}\n      </div>\n    );\n  }\n}\n\ninterface GaugeAutoProps {\n  titleFontSize: number;\n  gaugeHeight: number;\n  showLabel: boolean;\n}\n\nfunction calculateGaugeAutoProps(width: number, height: number, title: string | undefined): GaugeAutoProps {\n  const showLabel = title !== null && title !== undefined;\n  const titleFontSize = Math.min((width * 0.15) / 1.5, 20); // 20% of height * line-height, max 40px\n  const titleHeight = titleFontSize * 1.5;\n  const availableHeight = showLabel ? height - titleHeight : height;\n  const gaugeHeight = Math.min(availableHeight, width);\n\n  return {\n    showLabel,\n    gaugeHeight,\n    titleFontSize,\n  };\n}\n","import React from 'react';\nimport debounce from 'lodash/debounce';\nimport { DataFrame, CSVConfig, readCSV } from '@grafana/data';\n\ninterface Props {\n  config?: CSVConfig;\n  text: string;\n  width: string | number;\n  height: string | number;\n  onSeriesParsed: (data: DataFrame[], text: string) => void;\n}\n\ninterface State {\n  text: string;\n  data: DataFrame[];\n}\n\n/**\n * Expects the container div to have size set and will fill it 100%\n */\nexport class TableInputCSV extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const { text, config } = props;\n    this.state = {\n      text,\n      data: readCSV(text, { config }),\n    };\n  }\n\n  readCSV: any = debounce(() => {\n    const { config } = this.props;\n    const { text } = this.state;\n\n    this.setState({ data: readCSV(text, { config }) });\n  }, 150);\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    const { text } = this.state;\n\n    if (text !== prevState.text || this.props.config !== prevProps.config) {\n      this.readCSV();\n    }\n\n    // If the props text has changed, replace our local version\n    if (this.props.text !== prevProps.text && this.props.text !== text) {\n      this.setState({ text: this.props.text });\n    }\n\n    if (this.state.data !== prevState.data) {\n      this.props.onSeriesParsed(this.state.data, this.state.text);\n    }\n  }\n\n  onTextChange = (event: any) => {\n    this.setState({ text: event.target.value });\n  };\n\n  render() {\n    const { width, height } = this.props;\n    const { data } = this.state;\n    return (\n      <div className=\"gf-table-input-csv\">\n        <textarea\n          style={{ width, height }}\n          placeholder=\"Enter CSV here...\"\n          value={this.state.text}\n          onChange={this.onTextChange}\n          className=\"gf-form-input\"\n        />\n        {data && (\n          <footer>\n            {data.map((frame, index) => {\n              return (\n                <span key={index}>\n                  Rows:{frame.length}, Columns:{frame.fields.length} &nbsp;\n                  <i className=\"fa fa-check-circle\" />\n                </span>\n              );\n            })}\n          </footer>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default TableInputCSV;\n","// Library\nimport React, { PureComponent, ReactNode, CSSProperties } from 'react';\nimport $ from 'jquery';\nimport { css, cx } from 'emotion';\nimport { DisplayValue } from '@grafana/data';\n\n// Utils\nimport { getColorFromHexRgbOrName } from '../../utils';\n\n// Types\nimport { Themeable } from '../../types';\nimport { stylesFactory } from '../../themes/stylesFactory';\n\nexport interface BigValueSparkline {\n  data: any[][]; // [[number,number]]\n  minX: number;\n  maxX: number;\n  full: boolean; // full height\n  fillColor: string;\n  lineColor: string;\n}\n\nexport interface Props extends Themeable {\n  height: number;\n  width: number;\n  value: DisplayValue;\n  prefix?: DisplayValue;\n  suffix?: DisplayValue;\n  sparkline?: BigValueSparkline;\n  backgroundColor?: string;\n  onClick?: React.MouseEventHandler<HTMLElement>;\n  className?: string;\n}\n\nconst getStyles = stylesFactory(() => {\n  return {\n    wrapper: css`\n      position: 'relative';\n      display: 'table';\n    `,\n    title: css`\n      line-height: 1;\n      text-align: 'center';\n      z-index: 1;\n      display: 'block';\n      width: '100%';\n      position: 'absolute';\n    `,\n    value: css`\n      line-height: 1;\n      text-align: 'center';\n      z-index: 1;\n      display: 'table-cell';\n      vertical-align: 'middle';\n      position: 'relative';\n      font-size: '3em';\n      font-weight: 500;\n    `,\n  };\n});\n\n/*\n * This visualization is still in POC state, needed more tests & better structure\n */\nexport class BigValue extends PureComponent<Props> {\n  canvasElement: any;\n\n  componentDidMount() {\n    this.draw();\n  }\n\n  componentDidUpdate() {\n    this.draw();\n  }\n\n  draw() {\n    const { sparkline, theme } = this.props;\n\n    if (sparkline && this.canvasElement) {\n      const { data, minX, maxX, fillColor, lineColor } = sparkline;\n\n      const options = {\n        legend: { show: false },\n        series: {\n          lines: {\n            show: true,\n            fill: 1,\n            zero: false,\n            lineWidth: 1,\n            fillColor: getColorFromHexRgbOrName(fillColor, theme.type),\n          },\n        },\n        yaxes: { show: false },\n        xaxis: {\n          show: false,\n          min: minX,\n          max: maxX,\n        },\n        grid: { hoverable: false, show: false },\n      };\n\n      const plotSeries = {\n        data,\n        color: getColorFromHexRgbOrName(lineColor, theme.type),\n      };\n\n      try {\n        $.plot(this.canvasElement, [plotSeries], options);\n      } catch (err) {\n        console.log('sparkline rendering error', err, options);\n      }\n    }\n  }\n\n  renderText = (value?: DisplayValue, padding?: string): ReactNode => {\n    if (!value || !value.text) {\n      return null;\n    }\n    const css: CSSProperties = {};\n    if (padding) {\n      css.padding = padding;\n    }\n    if (value.color) {\n      css.color = value.color;\n    }\n    if (value.fontSize) {\n      css.fontSize = value.fontSize;\n    }\n\n    return <span style={css}>{value.text}</span>;\n  };\n\n  renderSparkline(sparkline: BigValueSparkline) {\n    const { height, width } = this.props;\n\n    const plotCss: CSSProperties = {};\n    plotCss.position = 'absolute';\n    plotCss.bottom = '0px';\n    plotCss.left = '0px';\n    plotCss.width = width + 'px';\n\n    if (sparkline.full) {\n      const dynamicHeightMargin = height <= 100 ? 5 : Math.round(height / 100) * 15 + 5;\n      plotCss.height = height - dynamicHeightMargin + 'px';\n    } else {\n      plotCss.height = Math.floor(height * 0.25) + 'px';\n    }\n    return <div style={plotCss} ref={element => (this.canvasElement = element)} />;\n  }\n\n  render() {\n    const { height, width, value, prefix, suffix, sparkline, backgroundColor, onClick, className } = this.props;\n    const styles = getStyles();\n    return (\n      <div className={cx(styles.wrapper, className)} style={{ width, height, backgroundColor }} onClick={onClick}>\n        {value.title && <div className={styles.title}>{value.title}</div>}\n\n        <span className={styles.value}>\n          {this.renderText(prefix, '0px 2px 0px 0px')}\n          {this.renderText(value)}\n          {this.renderText(suffix)}\n        </span>\n\n        {sparkline && this.renderSparkline(sparkline)}\n      </div>\n    );\n  }\n}\n","// Libraries\nimport $ from 'jquery';\nimport React, { PureComponent } from 'react';\nimport uniqBy from 'lodash/uniqBy';\n// Types\nimport { TimeRange, GraphSeriesXY, TimeZone, DefaultTimeZone } from '@grafana/data';\n\nexport interface GraphProps {\n  series: GraphSeriesXY[];\n  timeRange: TimeRange; // NOTE: we should aim to make `time` a property of the axis, not force it for all graphs\n  timeZone: TimeZone; // NOTE: we should aim to make `time` a property of the axis, not force it for all graphs\n  showLines?: boolean;\n  showPoints?: boolean;\n  showBars?: boolean;\n  width: number;\n  height: number;\n  isStacked?: boolean;\n  lineWidth?: number;\n  onHorizontalRegionSelected?: (from: number, to: number) => void;\n}\n\nexport class Graph extends PureComponent<GraphProps> {\n  static defaultProps = {\n    showLines: true,\n    showPoints: false,\n    showBars: false,\n    isStacked: false,\n    lineWidth: 1,\n  };\n\n  element: HTMLElement | null = null;\n  $element: any;\n\n  componentDidUpdate() {\n    this.draw();\n  }\n\n  componentDidMount() {\n    this.draw();\n    if (this.element) {\n      this.$element = $(this.element);\n      this.$element.bind('plotselected', this.onPlotSelected);\n    }\n  }\n\n  componentWillUnmount() {\n    this.$element.unbind('plotselected', this.onPlotSelected);\n  }\n\n  onPlotSelected = (event: JQueryEventObject, ranges: { xaxis: { from: number; to: number } }) => {\n    const { onHorizontalRegionSelected } = this.props;\n    if (onHorizontalRegionSelected) {\n      onHorizontalRegionSelected(ranges.xaxis.from, ranges.xaxis.to);\n    }\n  };\n\n  getYAxes(series: GraphSeriesXY[]) {\n    if (series.length === 0) {\n      return [{ show: true, min: -1, max: 1 }];\n    }\n    return uniqBy(\n      series.map(s => {\n        const index = s.yAxis ? s.yAxis.index : 1;\n        const min = s.yAxis && !isNaN(s.yAxis.min as number) ? s.yAxis.min : null;\n        const tickDecimals = s.yAxis && !isNaN(s.yAxis.tickDecimals as number) ? s.yAxis.tickDecimals : null;\n        return {\n          show: true,\n          index,\n          position: index === 1 ? 'left' : 'right',\n          min,\n          tickDecimals,\n        };\n      }),\n      yAxisConfig => yAxisConfig.index\n    );\n  }\n\n  draw() {\n    if (this.element === null) {\n      return;\n    }\n\n    const {\n      width,\n      series,\n      timeRange,\n      showLines,\n      showBars,\n      showPoints,\n      isStacked,\n      lineWidth,\n      timeZone,\n      onHorizontalRegionSelected,\n    } = this.props;\n\n    if (!width) {\n      return;\n    }\n\n    const ticks = width / 100;\n    const min = timeRange.from.valueOf();\n    const max = timeRange.to.valueOf();\n    const yaxes = this.getYAxes(series);\n\n    const flotOptions: any = {\n      legend: {\n        show: false,\n      },\n      series: {\n        stack: isStacked,\n        lines: {\n          show: showLines,\n          linewidth: lineWidth,\n          zero: false,\n        },\n        points: {\n          show: showPoints,\n          fill: 1,\n          fillColor: false,\n          radius: 2,\n        },\n        bars: {\n          show: showBars,\n          fill: 1,\n          barWidth: 1,\n          zero: false,\n          lineWidth: lineWidth,\n        },\n        shadowSize: 0,\n      },\n      xaxis: {\n        show: true,\n        mode: 'time',\n        min: min,\n        max: max,\n        label: 'Datetime',\n        ticks: ticks,\n        timeformat: timeFormat(ticks, min, max),\n        timezone: timeZone ? timeZone : DefaultTimeZone,\n      },\n      yaxes,\n      grid: {\n        minBorderMargin: 0,\n        markings: [],\n        backgroundColor: null,\n        borderWidth: 0,\n        // hoverable: true,\n        clickable: true,\n        color: '#a1a1a1',\n        margin: { left: 0, right: 0 },\n        labelMarginX: 0,\n      },\n      selection: {\n        mode: onHorizontalRegionSelected ? 'x' : null,\n        color: '#666',\n      },\n    };\n\n    try {\n      $.plot(this.element, series, flotOptions);\n    } catch (err) {\n      console.log('Graph rendering error', err, flotOptions, series);\n      throw new Error('Error rendering panel');\n    }\n  }\n\n  render() {\n    const { height, series } = this.props;\n    const noDataToBeDisplayed = series.length === 0;\n    return (\n      <div className=\"graph-panel\">\n        <div className=\"graph-panel__chart\" ref={e => (this.element = e)} style={{ height }} />\n        {noDataToBeDisplayed && <div className=\"datapoints-warning\">No data</div>}\n      </div>\n    );\n  }\n}\n\n// Copied from graph.ts\nfunction timeFormat(ticks: number, min: number, max: number): string {\n  if (min && max && ticks) {\n    const range = max - min;\n    const secPerTick = range / ticks / 1000;\n    const oneDay = 86400000;\n    const oneYear = 31536000000;\n\n    if (secPerTick <= 45) {\n      return '%H:%M:%S';\n    }\n    if (secPerTick <= 7200 || range <= oneDay) {\n      return '%H:%M';\n    }\n    if (secPerTick <= 80000) {\n      return '%m/%d %H:%M';\n    }\n    if (secPerTick <= 2419200 || range <= oneYear) {\n      return '%m/%d';\n    }\n    return '%Y-%m';\n  }\n\n  return '%H:%M';\n}\n\nexport default Graph;\n","import React from 'react';\nimport { InlineList } from '../List/InlineList';\nimport { css } from 'emotion';\nimport { DisplayValue } from '@grafana/data';\nimport capitalize from 'lodash/capitalize';\n\nconst LegendItemStat: React.FunctionComponent<{ stat: DisplayValue }> = ({ stat }) => {\n  return (\n    <div\n      className={css`\n        margin-left: 6px;\n      `}\n    >\n      {stat.title && `${capitalize(stat.title)}:`} {stat.text}\n    </div>\n  );\n};\n\nLegendItemStat.displayName = 'LegendItemStat';\n\nexport const LegendStatsList: React.FunctionComponent<{ stats: DisplayValue[] }> = ({ stats }) => {\n  if (stats.length === 0) {\n    return null;\n  }\n  return <InlineList items={stats} renderItem={stat => <LegendItemStat stat={stat} />} />;\n};\n\nLegendStatsList.displayName = 'LegendStatsList';\n","import React from 'react';\nimport { cx } from 'emotion';\n\nexport interface SeriesIconProps {\n  color: string;\n  className?: string;\n}\nexport const SeriesIcon: React.FunctionComponent<SeriesIconProps> = ({ color, className }) => {\n  return <i className={cx('fa', 'fa-minus', className)} style={{ color }} />;\n};\n","import React from 'react';\nimport { css, cx } from 'emotion';\nimport { SeriesColorPicker } from '../ColorPicker/ColorPicker';\nimport { SeriesIcon, SeriesIconProps } from './SeriesIcon';\n\ninterface LegendSeriesIconProps {\n  disabled: boolean;\n  color: string;\n  yAxis: number;\n  onColorChange: (color: string) => void;\n  onToggleAxis?: () => void;\n}\n\nexport const LegendSeriesIcon: React.FunctionComponent<LegendSeriesIconProps> = ({\n  disabled,\n  yAxis,\n  color,\n  onColorChange,\n  onToggleAxis,\n}) => {\n  let iconProps: SeriesIconProps = {\n    color,\n  };\n\n  if (!disabled) {\n    iconProps = {\n      ...iconProps,\n      className: 'pointer',\n    };\n  }\n\n  return disabled ? (\n    <span\n      className={cx(\n        'graph-legend-icon',\n        disabled &&\n          css`\n            cursor: default;\n          `\n      )}\n    >\n      <SeriesIcon {...iconProps} />\n    </span>\n  ) : (\n    <SeriesColorPicker\n      yaxis={yAxis}\n      color={color}\n      onChange={onColorChange}\n      onToggleAxis={onToggleAxis}\n      enableNamedColors\n    >\n      {({ ref, showColorPicker, hideColorPicker }) => (\n        <span ref={ref} onClick={showColorPicker} onMouseLeave={hideColorPicker} className=\"graph-legend-icon\">\n          <SeriesIcon {...iconProps} />\n        </span>\n      )}\n    </SeriesColorPicker>\n  );\n};\n\nLegendSeriesIcon.displayName = 'LegendSeriesIcon';\n","import React, { useContext } from 'react';\nimport { css, cx } from 'emotion';\nimport { LegendSeriesIcon } from '../Legend/LegendSeriesIcon';\nimport { LegendItem } from '../Legend/Legend';\nimport { SeriesColorChangeHandler } from './GraphWithLegend';\nimport { LegendStatsList } from '../Legend/LegendStatsList';\nimport { ThemeContext } from '../../themes/ThemeContext';\nimport { stylesFactory } from '../../themes';\nimport { GrafanaTheme } from '../../types';\n\nexport interface GraphLegendItemProps {\n  key?: React.Key;\n  item: LegendItem;\n  className?: string;\n  onLabelClick?: (item: LegendItem, event: React.MouseEvent<HTMLDivElement>) => void;\n  onSeriesColorChange?: SeriesColorChangeHandler;\n  onToggleAxis?: () => void;\n}\n\nexport const GraphLegendListItem: React.FunctionComponent<GraphLegendItemProps> = ({\n  item,\n  onSeriesColorChange,\n  onToggleAxis,\n  onLabelClick,\n}) => {\n  const theme = useContext(ThemeContext);\n\n  return (\n    <>\n      <LegendSeriesIcon\n        disabled={!onSeriesColorChange}\n        color={item.color}\n        onColorChange={color => {\n          if (onSeriesColorChange) {\n            onSeriesColorChange(item.label, color);\n          }\n        }}\n        onToggleAxis={onToggleAxis}\n        yAxis={item.yAxis}\n      />\n      <div\n        onClick={event => {\n          if (onLabelClick) {\n            onLabelClick(item, event);\n          }\n        }}\n        className={css`\n          cursor: pointer;\n          white-space: pre-wrap;\n          color: ${!item.isVisible && theme.colors.linkDisabled};\n        `}\n      >\n        {item.label}\n      </div>\n\n      {item.displayValues && <LegendStatsList stats={item.displayValues} />}\n    </>\n  );\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    row: css`\n      font-size: ${theme.typography.size.sm};\n      td {\n        padding: ${theme.spacing.xxs} ${theme.spacing.sm};\n        white-space: nowrap;\n      }\n    `,\n    label: css`\n      cursor: pointer;\n      white-space: nowrap;\n    `,\n    itemWrapper: css`\n      display: flex;\n      white-space: nowrap;\n    `,\n    value: css`\n      text-align: right;\n    `,\n    yAxisLabel: css`\n      color: ${theme.colors.gray2};\n    `,\n  };\n});\n\nexport const GraphLegendTableRow: React.FunctionComponent<GraphLegendItemProps> = ({\n  item,\n  onSeriesColorChange,\n  onToggleAxis,\n  onLabelClick,\n  className,\n}) => {\n  const theme = useContext(ThemeContext);\n  const styles = getStyles(theme);\n  return (\n    <tr className={cx(styles.row, className)}>\n      <td>\n        <span className={styles.itemWrapper}>\n          <LegendSeriesIcon\n            disabled={!!onSeriesColorChange}\n            color={item.color}\n            onColorChange={color => {\n              if (onSeriesColorChange) {\n                onSeriesColorChange(item.label, color);\n              }\n            }}\n            onToggleAxis={onToggleAxis}\n            yAxis={item.yAxis}\n          />\n          <div\n            onClick={event => {\n              if (onLabelClick) {\n                onLabelClick(item, event);\n              }\n            }}\n            className={styles.label}\n          >\n            {item.label} {item.yAxis === 2 && <span className={styles.yAxisLabel}>(right y-axis)</span>}\n          </div>\n        </span>\n      </td>\n      {item.displayValues &&\n        item.displayValues.map((stat, index) => {\n          return (\n            <td className={styles.value} key={`${stat.title}-${index}`}>\n              {stat.text}\n            </td>\n          );\n        })}\n    </tr>\n  );\n};\n","import React, { useContext } from 'react';\nimport { LegendProps, LegendItem, LegendDisplayMode } from '../Legend/Legend';\nimport { GraphLegendListItem, GraphLegendTableRow } from './GraphLegendItem';\nimport { SeriesColorChangeHandler, SeriesAxisToggleHandler } from './GraphWithLegend';\nimport { LegendTable } from '../Legend/LegendTable';\nimport { LegendList } from '../Legend/LegendList';\nimport union from 'lodash/union';\nimport sortBy from 'lodash/sortBy';\nimport { ThemeContext } from '../../themes/ThemeContext';\nimport { css } from 'emotion';\nimport { selectThemeVariant } from '../../themes/index';\n\ninterface GraphLegendProps extends LegendProps {\n  displayMode: LegendDisplayMode;\n  sortBy?: string;\n  sortDesc?: boolean;\n  onSeriesColorChange?: SeriesColorChangeHandler;\n  onSeriesAxisToggle?: SeriesAxisToggleHandler;\n  onToggleSort?: (sortBy: string) => void;\n  onLabelClick?: (item: LegendItem, event: React.MouseEvent<HTMLElement>) => void;\n}\n\nexport const GraphLegend: React.FunctionComponent<GraphLegendProps> = ({\n  items,\n  displayMode,\n  sortBy: sortKey,\n  sortDesc,\n  onToggleSort,\n  onSeriesAxisToggle,\n  placement,\n  className,\n  ...graphLegendItemProps\n}) => {\n  const theme = useContext(ThemeContext);\n\n  if (displayMode === LegendDisplayMode.Table) {\n    const columns = items\n      .map(item => {\n        if (item.displayValues) {\n          return item.displayValues.map(i => i.title);\n        }\n        return [];\n      })\n      .reduce(\n        (acc, current) => {\n          return union(acc, current.filter(item => !!item));\n        },\n        ['']\n      ) as string[];\n\n    const sortedItems = sortKey\n      ? sortBy(items, item => {\n          if (item.displayValues) {\n            const stat = item.displayValues.filter(stat => stat.title === sortKey)[0];\n            return stat && stat.numeric;\n          }\n          return undefined;\n        })\n      : items;\n\n    const legendTableEvenRowBackground = selectThemeVariant(\n      {\n        dark: theme.colors.dark6,\n        light: theme.colors.gray5,\n      },\n      theme.type\n    );\n\n    return (\n      <LegendTable\n        className={css`\n          font-size: ${theme.typography.size.sm};\n          th {\n            padding: ${theme.spacing.xxs} ${theme.spacing.sm};\n          }\n        `}\n        items={sortDesc ? sortedItems.reverse() : sortedItems}\n        columns={columns}\n        placement={placement}\n        sortBy={sortKey}\n        sortDesc={sortDesc}\n        itemRenderer={(item, index) => (\n          <GraphLegendTableRow\n            key={`${item.label}-${index}`}\n            item={item}\n            onToggleAxis={() => {\n              if (onSeriesAxisToggle) {\n                onSeriesAxisToggle(item.label, item.yAxis === 1 ? 2 : 1);\n              }\n            }}\n            className={css`\n              background: ${index % 2 === 0 ? legendTableEvenRowBackground : 'none'};\n            `}\n            {...graphLegendItemProps}\n          />\n        )}\n        onToggleSort={onToggleSort}\n      />\n    );\n  }\n  return (\n    <LegendList\n      items={items}\n      placement={placement}\n      itemRenderer={item => (\n        <GraphLegendListItem\n          item={item}\n          onToggleAxis={() => {\n            if (onSeriesAxisToggle) {\n              onSeriesAxisToggle(item.label, item.yAxis === 1 ? 2 : 1);\n            }\n          }}\n          {...graphLegendItemProps}\n        />\n      )}\n    />\n  );\n};\n\nGraphLegend.displayName = 'GraphLegend';\n","// Libraries\n\nimport React from 'react';\nimport { css } from 'emotion';\nimport { GraphSeriesValue } from '@grafana/data';\n\nimport { Graph, GraphProps } from './Graph';\nimport { LegendRenderOptions, LegendItem, LegendDisplayMode } from '../Legend/Legend';\nimport { GraphLegend } from './GraphLegend';\nimport { CustomScrollbar } from '../CustomScrollbar/CustomScrollbar';\nimport { stylesFactory } from '../../themes';\n\nexport type SeriesOptionChangeHandler<TOption> = (label: string, option: TOption) => void;\nexport type SeriesColorChangeHandler = SeriesOptionChangeHandler<string>;\nexport type SeriesAxisToggleHandler = SeriesOptionChangeHandler<number>;\n\nexport interface GraphWithLegendProps extends GraphProps, LegendRenderOptions {\n  isLegendVisible: boolean;\n  displayMode: LegendDisplayMode;\n  sortLegendBy?: string;\n  sortLegendDesc?: boolean;\n  onSeriesColorChange?: SeriesColorChangeHandler;\n  onSeriesAxisToggle?: SeriesAxisToggleHandler;\n  onSeriesToggle?: (label: string, event: React.MouseEvent<HTMLElement>) => void;\n  onToggleSort: (sortBy: string) => void;\n}\n\nconst getGraphWithLegendStyles = stylesFactory(({ placement }: GraphWithLegendProps) => ({\n  wrapper: css`\n    display: flex;\n    flex-direction: ${placement === 'under' ? 'column' : 'row'};\n    height: 100%;\n  `,\n  graphContainer: css`\n    min-height: 65%;\n    flex-grow: 1;\n  `,\n  legendContainer: css`\n    padding: 10px 0;\n    max-height: ${placement === 'under' ? '35%' : 'none'};\n  `,\n}));\n\nconst shouldHideLegendItem = (data: GraphSeriesValue[][], hideEmpty = false, hideZero = false) => {\n  const isZeroOnlySeries = data.reduce((acc, current) => acc + (current[1] || 0), 0) === 0;\n  const isNullOnlySeries = !data.reduce((acc, current) => acc && current[1] !== null, true);\n\n  return (hideEmpty && isNullOnlySeries) || (hideZero && isZeroOnlySeries);\n};\n\nexport const GraphWithLegend: React.FunctionComponent<GraphWithLegendProps> = (props: GraphWithLegendProps) => {\n  const {\n    series,\n    timeRange,\n    width,\n    height,\n    showBars,\n    showLines,\n    showPoints,\n    sortLegendBy,\n    sortLegendDesc,\n    isLegendVisible,\n    displayMode,\n    placement,\n    onSeriesAxisToggle,\n    onSeriesColorChange,\n    onSeriesToggle,\n    onToggleSort,\n    hideEmpty,\n    hideZero,\n    isStacked,\n    lineWidth,\n    onHorizontalRegionSelected,\n    timeZone,\n  } = props;\n  const { graphContainer, wrapper, legendContainer } = getGraphWithLegendStyles(props);\n\n  const legendItems = series.reduce<LegendItem[]>((acc, s) => {\n    return shouldHideLegendItem(s.data, hideEmpty, hideZero)\n      ? acc\n      : acc.concat([\n          {\n            label: s.label,\n            color: s.color,\n            isVisible: s.isVisible,\n            yAxis: s.yAxis.index,\n            displayValues: s.info || [],\n          },\n        ]);\n  }, []);\n\n  return (\n    <div className={wrapper}>\n      <div className={graphContainer}>\n        <Graph\n          series={series.filter(s => !!s.isVisible)}\n          timeRange={timeRange}\n          timeZone={timeZone}\n          showLines={showLines}\n          showPoints={showPoints}\n          showBars={showBars}\n          width={width}\n          height={height}\n          key={isLegendVisible ? 'legend-visible' : 'legend-invisible'}\n          isStacked={isStacked}\n          lineWidth={lineWidth}\n          onHorizontalRegionSelected={onHorizontalRegionSelected}\n        />\n      </div>\n\n      {isLegendVisible && (\n        <div className={legendContainer}>\n          <CustomScrollbar hideHorizontalTrack>\n            <GraphLegend\n              items={legendItems}\n              displayMode={displayMode}\n              placement={placement}\n              sortBy={sortLegendBy}\n              sortDesc={sortLegendDesc}\n              onLabelClick={(item, event) => {\n                if (onSeriesToggle) {\n                  onSeriesToggle(item.label, event);\n                }\n              }}\n              onSeriesColorChange={onSeriesColorChange}\n              onSeriesAxisToggle={onSeriesAxisToggle}\n              onToggleSort={onToggleSort}\n            />\n          </CustomScrollbar>\n        </div>\n      )}\n    </div>\n  );\n};\n","// Library\nimport React, { PureComponent, CSSProperties, ReactNode } from 'react';\nimport tinycolor from 'tinycolor2';\nimport { Threshold, TimeSeriesValue, getActiveThreshold, DisplayValue } from '@grafana/data';\n\n// Utils\nimport { getColorFromHexRgbOrName } from '../../utils';\n\n// Types\nimport { Themeable, VizOrientation } from '../../types';\n\nconst MIN_VALUE_HEIGHT = 18;\nconst MAX_VALUE_HEIGHT = 50;\nconst MIN_VALUE_WIDTH = 50;\nconst MAX_VALUE_WIDTH = 150;\nconst TITLE_LINE_HEIGHT = 1.5;\nconst VALUE_LINE_HEIGHT = 1;\n\nexport interface Props extends Themeable {\n  height: number;\n  width: number;\n  thresholds: Threshold[];\n  value: DisplayValue;\n  maxValue: number;\n  minValue: number;\n  orientation: VizOrientation;\n  itemSpacing?: number;\n  displayMode: 'basic' | 'lcd' | 'gradient';\n  onClick?: React.MouseEventHandler<HTMLElement>;\n  className?: string;\n}\n\nexport class BarGauge extends PureComponent<Props> {\n  static defaultProps: Partial<Props> = {\n    maxValue: 100,\n    minValue: 0,\n    value: {\n      text: '100',\n      numeric: 100,\n    },\n    displayMode: 'lcd',\n    orientation: VizOrientation.Horizontal,\n    thresholds: [],\n    itemSpacing: 10,\n  };\n\n  render() {\n    const { onClick, className } = this.props;\n    const { title } = this.props.value;\n    const styles = getTitleStyles(this.props);\n\n    if (!title) {\n      return (\n        <div style={styles.wrapper} onClick={onClick} className={className}>\n          {this.renderBarAndValue()}\n        </div>\n      );\n    }\n\n    return (\n      <div style={styles.wrapper} onClick={onClick} className={className}>\n        <div style={styles.title}>{title}</div>\n        {this.renderBarAndValue()}\n      </div>\n    );\n  }\n\n  renderBarAndValue() {\n    switch (this.props.displayMode) {\n      case 'lcd':\n        return this.renderRetroBars();\n      case 'basic':\n      case 'gradient':\n      default:\n        return this.renderBasicAndGradientBars();\n    }\n  }\n\n  renderBasicAndGradientBars(): ReactNode {\n    const { value } = this.props;\n\n    const styles = getBasicAndGradientStyles(this.props);\n\n    return (\n      <div style={styles.wrapper}>\n        <div className=\"bar-gauge__value\" style={styles.value}>\n          {value.text}\n        </div>\n        <div style={styles.bar} />\n      </div>\n    );\n  }\n\n  getCellColor(positionValue: TimeSeriesValue): CellColors {\n    const { thresholds, theme, value } = this.props;\n    if (positionValue === null) {\n      return {\n        background: 'gray',\n        border: 'gray',\n      };\n    }\n\n    const activeThreshold = getActiveThreshold(positionValue, thresholds);\n    if (activeThreshold !== null) {\n      const color = getColorFromHexRgbOrName(activeThreshold.color, theme.type);\n\n      // if we are past real value the cell is not \"on\"\n      if (value === null || (positionValue !== null && positionValue > value.numeric)) {\n        return {\n          background: tinycolor(color)\n            .setAlpha(0.18)\n            .toRgbString(),\n          border: 'transparent',\n          isLit: false,\n        };\n      } else {\n        return {\n          background: tinycolor(color)\n            .setAlpha(0.95)\n            .toRgbString(),\n          backgroundShade: tinycolor(color)\n            .setAlpha(0.55)\n            .toRgbString(),\n          border: tinycolor(color)\n            .setAlpha(0.9)\n            .toRgbString(),\n          isLit: true,\n        };\n      }\n    }\n\n    return {\n      background: 'gray',\n      border: 'gray',\n    };\n  }\n\n  renderRetroBars(): ReactNode {\n    const { maxValue, minValue, value, itemSpacing } = this.props;\n    const {\n      valueHeight,\n      valueWidth,\n      maxBarHeight,\n      maxBarWidth,\n      wrapperWidth,\n      wrapperHeight,\n    } = calculateBarAndValueDimensions(this.props);\n\n    const isVert = isVertical(this.props);\n    const valueRange = maxValue - minValue;\n    const maxSize = isVert ? maxBarHeight : maxBarWidth;\n    const cellSpacing = itemSpacing!;\n    const cellWidth = 12;\n    const cellCount = Math.floor(maxSize / cellWidth);\n    const cellSize = Math.floor((maxSize - cellSpacing * cellCount) / cellCount);\n    const valueColor = getValueColor(this.props);\n    const valueStyles = getValueStyles(value.text, valueColor, valueWidth, valueHeight);\n\n    const containerStyles: CSSProperties = {\n      width: `${wrapperWidth}px`,\n      height: `${wrapperHeight}px`,\n      display: 'flex',\n    };\n\n    if (isVert) {\n      containerStyles.flexDirection = 'column-reverse';\n      containerStyles.alignItems = 'center';\n      valueStyles.justifyContent = 'center';\n    } else {\n      containerStyles.flexDirection = 'row';\n      containerStyles.alignItems = 'center';\n      valueStyles.justifyContent = 'flex-end';\n    }\n\n    const cells: JSX.Element[] = [];\n\n    for (let i = 0; i < cellCount; i++) {\n      const currentValue = minValue + (valueRange / cellCount) * i;\n      const cellColor = this.getCellColor(currentValue);\n      const cellStyles: CSSProperties = {\n        borderRadius: '2px',\n      };\n\n      if (cellColor.isLit) {\n        cellStyles.backgroundImage = `radial-gradient(${cellColor.background} 10%, ${cellColor.backgroundShade})`;\n      } else {\n        cellStyles.backgroundColor = cellColor.background;\n      }\n\n      if (isVert) {\n        cellStyles.height = `${cellSize}px`;\n        cellStyles.width = `${maxBarWidth}px`;\n        cellStyles.marginTop = `${cellSpacing}px`;\n      } else {\n        cellStyles.width = `${cellSize}px`;\n        cellStyles.height = `${maxBarHeight}px`;\n        cellStyles.marginRight = `${cellSpacing}px`;\n      }\n\n      cells.push(<div key={i.toString()} style={cellStyles} />);\n    }\n\n    return (\n      <div style={containerStyles}>\n        {cells}\n        <div className=\"bar-gauge__value\" style={valueStyles}>\n          {value.text}\n        </div>\n      </div>\n    );\n  }\n}\n\ninterface CellColors {\n  background: string;\n  backgroundShade?: string;\n  border: string;\n  isLit?: boolean;\n}\n\ninterface TitleDimensions {\n  fontSize: number;\n  placement: 'above' | 'left' | 'below';\n  width: number;\n  height: number;\n}\n\nfunction isVertical(props: Props) {\n  return props.orientation === VizOrientation.Vertical;\n}\n\nfunction calculateTitleDimensions(props: Props): TitleDimensions {\n  const { title } = props.value;\n  const { height, width } = props;\n\n  if (!title) {\n    return { fontSize: 0, width: 0, height: 0, placement: 'above' };\n  }\n\n  if (isVertical(props)) {\n    return {\n      fontSize: 14,\n      width: width,\n      height: 14 * TITLE_LINE_HEIGHT,\n      placement: 'below',\n    };\n  }\n\n  // if height above 40 put text to above bar\n  if (height > 40) {\n    const maxTitleHeightRatio = 0.35;\n    const titleHeight = Math.max(Math.min(height * maxTitleHeightRatio, MAX_VALUE_HEIGHT), 17);\n\n    return {\n      fontSize: titleHeight / TITLE_LINE_HEIGHT,\n      width: 0,\n      height: titleHeight,\n      placement: 'above',\n    };\n  }\n\n  // title to left of bar scenario\n  const maxTitleHeightRatio = 0.6;\n  const maxTitleWidthRatio = 0.2;\n  const titleHeight = Math.max(height * maxTitleHeightRatio, MIN_VALUE_HEIGHT);\n\n  return {\n    fontSize: titleHeight / TITLE_LINE_HEIGHT,\n    height: 0,\n    width: Math.min(Math.max(width * maxTitleWidthRatio, 50), 200),\n    placement: 'left',\n  };\n}\n\nexport function getTitleStyles(props: Props): { wrapper: CSSProperties; title: CSSProperties } {\n  const wrapperStyles: CSSProperties = {\n    display: 'flex',\n    overflow: 'hidden',\n  };\n\n  const titleDim = calculateTitleDimensions(props);\n\n  const titleStyles: CSSProperties = {\n    fontSize: `${titleDim.fontSize}px`,\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    width: '100%',\n    alignItems: 'center',\n    alignSelf: 'center',\n  };\n\n  if (isVertical(props)) {\n    wrapperStyles.flexDirection = 'column-reverse';\n    titleStyles.textAlign = 'center';\n  } else {\n    if (titleDim.placement === 'above') {\n      wrapperStyles.flexDirection = 'column';\n    } else {\n      wrapperStyles.flexDirection = 'row';\n\n      titleStyles.width = `${titleDim.width}px`;\n      titleStyles.textAlign = 'right';\n      titleStyles.paddingRight = '10px';\n    }\n  }\n\n  return {\n    wrapper: wrapperStyles,\n    title: titleStyles,\n  };\n}\n\ninterface BasicAndGradientStyles {\n  wrapper: CSSProperties;\n  bar: CSSProperties;\n  value: CSSProperties;\n}\n\ninterface BarAndValueDimensions {\n  valueWidth: number;\n  valueHeight: number;\n  maxBarWidth: number;\n  maxBarHeight: number;\n  wrapperHeight: number;\n  wrapperWidth: number;\n}\n\nfunction calculateBarAndValueDimensions(props: Props): BarAndValueDimensions {\n  const { height, width } = props;\n  const titleDim = calculateTitleDimensions(props);\n\n  let maxBarHeight = 0;\n  let maxBarWidth = 0;\n  let valueHeight = 0;\n  let valueWidth = 0;\n  let wrapperWidth = 0;\n  let wrapperHeight = 0;\n\n  if (isVertical(props)) {\n    valueHeight = Math.min(Math.max(height * 0.1, MIN_VALUE_HEIGHT), MAX_VALUE_HEIGHT);\n    valueWidth = width;\n    maxBarHeight = height - (titleDim.height + valueHeight);\n    maxBarWidth = width;\n    wrapperWidth = width;\n    wrapperHeight = height - titleDim.height;\n  } else {\n    valueHeight = height - titleDim.height;\n    valueWidth = Math.max(Math.min(width * 0.2, MAX_VALUE_WIDTH), MIN_VALUE_WIDTH);\n    maxBarHeight = height - titleDim.height;\n    maxBarWidth = width - valueWidth - titleDim.width;\n\n    if (titleDim.placement === 'above') {\n      wrapperWidth = width;\n      wrapperHeight = height - titleDim.height;\n    } else {\n      wrapperWidth = width - titleDim.width;\n      wrapperHeight = height;\n    }\n  }\n\n  return {\n    valueWidth,\n    valueHeight,\n    maxBarWidth,\n    maxBarHeight,\n    wrapperHeight,\n    wrapperWidth,\n  };\n}\n\nexport function getValuePercent(value: number, minValue: number, maxValue: number): number {\n  return Math.min((value - minValue) / (maxValue - minValue), 1);\n}\n\n/**\n * Only exported to for unit test\n */\nexport function getBasicAndGradientStyles(props: Props): BasicAndGradientStyles {\n  const { displayMode, maxValue, minValue, value } = props;\n  const { valueWidth, valueHeight, maxBarHeight, maxBarWidth } = calculateBarAndValueDimensions(props);\n\n  const valuePercent = getValuePercent(value.numeric, minValue, maxValue);\n  const valueColor = getValueColor(props);\n  const valueStyles = getValueStyles(value.text, valueColor, valueWidth, valueHeight);\n  const isBasic = displayMode === 'basic';\n\n  const wrapperStyles: CSSProperties = {\n    display: 'flex',\n  };\n\n  const barStyles: CSSProperties = {\n    borderRadius: '3px',\n  };\n\n  if (isVertical(props)) {\n    const barHeight = Math.max(valuePercent * maxBarHeight, 1);\n\n    // vertical styles\n    wrapperStyles.flexDirection = 'column';\n    wrapperStyles.justifyContent = 'flex-end';\n\n    barStyles.transition = 'height 1s';\n    barStyles.height = `${barHeight}px`;\n    barStyles.width = `${maxBarWidth}px`;\n\n    // value styles centered\n    valueStyles.justifyContent = 'center';\n\n    if (isBasic) {\n      // Basic styles\n      barStyles.background = `${tinycolor(valueColor)\n        .setAlpha(0.25)\n        .toRgbString()}`;\n      barStyles.borderTop = `2px solid ${valueColor}`;\n    } else {\n      // Gradient styles\n      barStyles.background = getBarGradient(props, maxBarHeight);\n    }\n  } else {\n    const barWidth = Math.max(valuePercent * maxBarWidth, 1);\n\n    // Custom styles for horizontal orientation\n    wrapperStyles.flexDirection = 'row-reverse';\n    wrapperStyles.justifyContent = 'flex-end';\n    wrapperStyles.alignItems = 'center';\n\n    barStyles.transition = 'width 1s';\n    barStyles.height = `${maxBarHeight}px`;\n    barStyles.width = `${barWidth}px`;\n\n    valueStyles.paddingLeft = '10px';\n\n    if (isBasic) {\n      // Basic styles\n      barStyles.background = `${tinycolor(valueColor)\n        .setAlpha(0.25)\n        .toRgbString()}`;\n      barStyles.borderRight = `2px solid ${valueColor}`;\n    } else {\n      // Gradient styles\n      barStyles.background = getBarGradient(props, maxBarWidth);\n    }\n  }\n\n  return {\n    wrapper: wrapperStyles,\n    bar: barStyles,\n    value: valueStyles,\n  };\n}\n\n/**\n * Only exported to for unit test\n */\nexport function getBarGradient(props: Props, maxSize: number): string {\n  const { minValue, maxValue, thresholds, value } = props;\n  const cssDirection = isVertical(props) ? '0deg' : '90deg';\n\n  let gradient = '';\n  let lastpos = 0;\n\n  for (let i = 0; i < thresholds.length; i++) {\n    const threshold = thresholds[i];\n    const color = getColorFromHexRgbOrName(threshold.color);\n    const valuePercent = getValuePercent(threshold.value, minValue, maxValue);\n    const pos = valuePercent * maxSize;\n    const offset = Math.round(pos - (pos - lastpos) / 2);\n\n    if (gradient === '') {\n      gradient = `linear-gradient(${cssDirection}, ${color}, ${color}`;\n    } else if (value.numeric < threshold.value) {\n      break;\n    } else {\n      lastpos = pos;\n      gradient += ` ${offset}px, ${color}`;\n    }\n  }\n\n  return gradient + ')';\n}\n\n/**\n * Only exported to for unit test\n */\nexport function getValueColor(props: Props): string {\n  const { thresholds, theme, value } = props;\n\n  const activeThreshold = getActiveThreshold(value.numeric, thresholds);\n\n  if (activeThreshold !== null) {\n    return getColorFromHexRgbOrName(activeThreshold.color, theme.type);\n  }\n\n  return getColorFromHexRgbOrName('gray', theme.type);\n}\n\n/**\n * Only exported to for unit test\n */\nfunction getValueStyles(value: string, color: string, width: number, height: number): CSSProperties {\n  const heightFont = height / VALUE_LINE_HEIGHT;\n  const guess = width / (value.length * 1.1);\n  const fontSize = Math.min(Math.max(guess, 14), heightFont);\n\n  return {\n    color: color,\n    height: `${height}px`,\n    width: `${width}px`,\n    display: 'flex',\n    alignItems: 'center',\n    lineHeight: VALUE_LINE_HEIGHT,\n    fontSize: fontSize.toFixed(4) + 'px',\n  };\n}\n\n// function getTextWidth(text: string): number {\n//   const canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement(\"canvas\"));\n//   var context = canvas.getContext(\"2d\");\n//   context.font = \"'Roboto', 'Helvetica Neue', Arial, sans-serif\";\n//   var metrics = context.measureText(text);\n//   return metrics.width;\n// }\n","import React, { PureComponent } from 'react';\nimport { VizOrientation } from '../../types';\n\ninterface Props<T> {\n  renderValue: (value: T, width: number, height: number) => JSX.Element;\n  height: number;\n  width: number;\n  source: any; // If this changes, new values will be requested\n  getValues: () => T[];\n  renderCounter: number; // force update of values & render\n  orientation: VizOrientation;\n  itemSpacing?: number;\n}\n\ninterface DefaultProps {\n  itemSpacing: number;\n}\n\ntype PropsWithDefaults<T> = Props<T> & DefaultProps;\n\ninterface State<T> {\n  values: T[];\n}\n\nexport class VizRepeater<T> extends PureComponent<Props<T>, State<T>> {\n  static defaultProps: DefaultProps = {\n    itemSpacing: 10,\n  };\n\n  constructor(props: Props<T>) {\n    super(props);\n\n    this.state = {\n      values: props.getValues(),\n    };\n  }\n\n  componentDidUpdate(prevProps: Props<T>) {\n    const { renderCounter, source } = this.props;\n    if (renderCounter !== prevProps.renderCounter || source !== prevProps.source) {\n      this.setState({ values: this.props.getValues() });\n    }\n  }\n\n  getOrientation(): VizOrientation {\n    const { orientation, width, height } = this.props;\n\n    if (orientation === VizOrientation.Auto) {\n      if (width > height) {\n        return VizOrientation.Vertical;\n      } else {\n        return VizOrientation.Horizontal;\n      }\n    }\n\n    return orientation;\n  }\n\n  render() {\n    const { renderValue, height, width, itemSpacing } = this.props as PropsWithDefaults<T>;\n    const { values } = this.state;\n    const orientation = this.getOrientation();\n\n    const itemStyles: React.CSSProperties = {\n      display: 'flex',\n    };\n\n    const repeaterStyle: React.CSSProperties = {\n      display: 'flex',\n    };\n\n    let vizHeight = height;\n    let vizWidth = width;\n\n    if (orientation === VizOrientation.Horizontal) {\n      repeaterStyle.flexDirection = 'column';\n      itemStyles.marginBottom = `${itemSpacing}px`;\n      vizWidth = width;\n      vizHeight = height / values.length - itemSpacing;\n    } else {\n      repeaterStyle.flexDirection = 'row';\n      itemStyles.marginRight = `${itemSpacing}px`;\n      vizHeight = height;\n      vizWidth = width / values.length - itemSpacing;\n    }\n\n    itemStyles.width = `${vizWidth}px`;\n    itemStyles.height = `${vizHeight}px`;\n\n    return (\n      <div style={repeaterStyle}>\n        {values.map((value, index) => {\n          return (\n            <div key={index} style={itemStyles}>\n              {renderValue(value, vizWidth, vizHeight)}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { css, cx } from 'emotion';\nimport { LogLabelStatsModel } from '@grafana/data';\n\nimport { LogLabelStatsRow } from './LogLabelStatsRow';\nimport { Themeable, GrafanaTheme } from '../../types/theme';\nimport { selectThemeVariant } from '../../themes/selectThemeVariant';\nimport { withTheme } from '../../themes/index';\n\nconst STATS_ROW_LIMIT = 5;\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  logsStats: css`\n    label: logs-stats;\n    background-color: ${selectThemeVariant({ light: theme.colors.pageBg, dark: theme.colors.dark2 }, theme.type)};\n    color: ${theme.colors.text};\n    border: 1px solid ${selectThemeVariant({ light: theme.colors.gray5, dark: theme.colors.dark9 }, theme.type)};\n    border-radius: ${theme.border.radius.md};\n    max-width: 500px;\n  `,\n  logsStatsHeader: css`\n    label: logs-stats__header;\n    background: ${selectThemeVariant({ light: theme.colors.gray5, dark: theme.colors.dark9 }, theme.type)};\n    padding: 6px 10px;\n    display: flex;\n  `,\n  logsStatsTitle: css`\n    label: logs-stats__title;\n    font-weight: ${theme.typography.weight.semibold};\n    padding-right: ${theme.spacing.d};\n    overflow: hidden;\n    display: inline-block;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    flex-grow: 1;\n  `,\n  logsStatsClose: css`\n    label: logs-stats__close;\n    cursor: pointer;\n  `,\n  logsStatsBody: css`\n    label: logs-stats__body;\n    padding: 20px 10px 10px 10px;\n  `,\n});\n\ninterface Props extends Themeable {\n  stats: LogLabelStatsModel[];\n  label: string;\n  value: string;\n  rowCount: number;\n  onClickClose: () => void;\n}\n\nclass UnThemedLogLabelStats extends PureComponent<Props> {\n  render() {\n    const { label, rowCount, stats, value, onClickClose, theme } = this.props;\n    const style = getStyles(theme);\n    const topRows = stats.slice(0, STATS_ROW_LIMIT);\n    let activeRow = topRows.find(row => row.value === value);\n    let otherRows = stats.slice(STATS_ROW_LIMIT);\n    const insertActiveRow = !activeRow;\n\n    // Remove active row from other to show extra\n    if (insertActiveRow) {\n      activeRow = otherRows.find(row => row.value === value);\n      otherRows = otherRows.filter(row => row.value !== value);\n    }\n\n    const otherCount = otherRows.reduce((sum, row) => sum + row.count, 0);\n    const topCount = topRows.reduce((sum, row) => sum + row.count, 0);\n    const total = topCount + otherCount;\n    const otherProportion = otherCount / total;\n\n    return (\n      <div className={cx([style.logsStats])}>\n        <div className={cx([style.logsStatsHeader])}>\n          <span className={cx([style.logsStatsTitle])}>\n            {label}: {total} of {rowCount} rows have that label\n          </span>\n          <span className={cx([style.logsStatsClose, 'fa fa-remove'])} onClick={onClickClose} />\n        </div>\n        <div className={cx([style.logsStatsBody])}>\n          {topRows.map(stat => (\n            <LogLabelStatsRow key={stat.value} {...stat} active={stat.value === value} />\n          ))}\n          {insertActiveRow && activeRow && <LogLabelStatsRow key={activeRow.value} {...activeRow} active />}\n          {otherCount > 0 && (\n            <LogLabelStatsRow key=\"__OTHERS__\" count={otherCount} value=\"Other\" proportion={otherProportion} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const LogLabelStats = withTheme(UnThemedLogLabelStats);\nLogLabelStats.displayName = 'LogLabelStats';\n","import React, { FC, ReactNode } from 'react';\n\ninterface Props {\n  title: string;\n  button?: {\n    text: string;\n    onClick: (event: React.MouseEvent) => void;\n  };\n  children?: ReactNode;\n}\n\nexport const Alert: FC<Props> = props => {\n  const { title, button, children } = props;\n  return (\n    <div className=\"alert-container\">\n      <div className=\"alert-error alert\">\n        <div className=\"alert-icon\">\n          <i className=\"fa fa-exclamation-triangle\" />\n        </div>\n        <div className=\"alert-body\">\n          <div className=\"alert-title\">{title}</div>\n          {children && <div className=\"alert-text\">{children}</div>}\n        </div>\n        {button && (\n          <div className=\"alert-button\">\n            <button className=\"btn btn-outline-danger\" onClick={button.onClick}>\n              {button.text}\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { GraphSeriesXY } from '@grafana/data';\nimport difference from 'lodash/difference';\nimport isEqual from 'lodash/isEqual';\n\nexport interface GraphSeriesTogglerAPI {\n  onSeriesToggle: (label: string, event: React.MouseEvent<HTMLElement>) => void;\n  toggledSeries: GraphSeriesXY[];\n}\n\nexport interface GraphSeriesTogglerProps {\n  children: (api: GraphSeriesTogglerAPI) => JSX.Element;\n  series: GraphSeriesXY[];\n  onHiddenSeriesChanged?: (hiddenSeries: string[]) => void;\n}\n\nexport interface GraphSeriesTogglerState {\n  hiddenSeries: string[];\n  toggledSeries: GraphSeriesXY[];\n}\n\nexport class GraphSeriesToggler extends React.Component<GraphSeriesTogglerProps, GraphSeriesTogglerState> {\n  constructor(props: GraphSeriesTogglerProps) {\n    super(props);\n\n    this.onSeriesToggle = this.onSeriesToggle.bind(this);\n\n    this.state = {\n      hiddenSeries: [],\n      toggledSeries: props.series,\n    };\n  }\n\n  componentDidUpdate(prevProps: Readonly<GraphSeriesTogglerProps>) {\n    const { series } = this.props;\n    if (!isEqual(prevProps.series, series)) {\n      this.setState({ hiddenSeries: [], toggledSeries: series });\n    }\n  }\n\n  onSeriesToggle(label: string, event: React.MouseEvent<HTMLElement>) {\n    const { series, onHiddenSeriesChanged } = this.props;\n    const { hiddenSeries } = this.state;\n\n    if (event.ctrlKey || event.metaKey || event.shiftKey) {\n      // Toggling series with key makes the series itself to toggle\n      const newHiddenSeries =\n        hiddenSeries.indexOf(label) > -1\n          ? hiddenSeries.filter(series => series !== label)\n          : hiddenSeries.concat([label]);\n\n      const toggledSeries = series.map(series => ({\n        ...series,\n        isVisible: newHiddenSeries.indexOf(series.label) === -1,\n      }));\n      this.setState({ hiddenSeries: newHiddenSeries, toggledSeries }, () =>\n        onHiddenSeriesChanged ? onHiddenSeriesChanged(newHiddenSeries) : undefined\n      );\n      return;\n    }\n\n    // Toggling series with out key toggles all the series but the clicked one\n    const allSeriesLabels = series.map(series => series.label);\n    const newHiddenSeries =\n      hiddenSeries.length + 1 === allSeriesLabels.length ? [] : difference(allSeriesLabels, [label]);\n    const toggledSeries = series.map(series => ({\n      ...series,\n      isVisible: newHiddenSeries.indexOf(series.label) === -1,\n    }));\n\n    this.setState({ hiddenSeries: newHiddenSeries, toggledSeries }, () =>\n      onHiddenSeriesChanged ? onHiddenSeriesChanged(newHiddenSeries) : undefined\n    );\n  }\n\n  render() {\n    const { children } = this.props;\n    const { toggledSeries } = this.state;\n\n    return children({\n      onSeriesToggle: this.onSeriesToggle,\n      toggledSeries,\n    });\n  }\n}\n","import React, { FunctionComponent, useContext } from 'react';\nimport { css, cx } from 'emotion';\n\nimport { GrafanaTheme } from '../../types/theme';\nimport { selectThemeVariant } from '../../themes/selectThemeVariant';\nimport { ThemeContext } from '../../themes/ThemeContext';\nimport { stylesFactory } from '../../themes/stylesFactory';\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => ({\n  collapse: css`\n    label: collapse;\n    margin-top: ${theme.spacing.sm};\n  `,\n  collapseBody: css`\n    label: collapse__body;\n    padding: ${theme.panelPadding}px;\n  `,\n  loader: css`\n    label: collapse__loader;\n    height: 2px;\n    position: relative;\n    overflow: hidden;\n    background: none;\n    margin: ${theme.spacing.xs};\n  `,\n  loaderActive: css`\n    label: collapse__loader_active;\n    &:after {\n      content: ' ';\n      display: block;\n      width: 25%;\n      top: 0;\n      top: -50%;\n      height: 250%;\n      position: absolute;\n      animation: loader 2s cubic-bezier(0.17, 0.67, 0.83, 0.67) 500ms;\n      animation-iteration-count: 100;\n      left: -25%;\n      background: ${theme.colors.blue};\n    }\n    @keyframes loader {\n      from {\n        left: -25%;\n        opacity: 0.1;\n      }\n      to {\n        left: 100%;\n        opacity: 1;\n      }\n    }\n  `,\n  header: css`\n    label: collapse__header;\n    padding: ${theme.spacing.sm} ${theme.spacing.md} 0 ${theme.spacing.md};\n    display: flex;\n    cursor: inherit;\n    transition: all 0.1s linear;\n    cursor: pointer;\n  `,\n  headerCollapsed: css`\n    label: collapse__header--collapsed;\n    cursor: pointer;\n    padding: ${theme.spacing.sm} ${theme.spacing.md} 0 ${theme.spacing.md};\n  `,\n  headerButtons: css`\n    label: collapse__header-buttons;\n    margin-right: ${theme.spacing.sm};\n    font-size: ${theme.typography.size.lg};\n    line-height: ${theme.typography.heading.h6};\n    display: inherit;\n  `,\n  headerButtonsCollapsed: css`\n    label: collapse__header-buttons--collapsed;\n    display: none;\n  `,\n  headerLabel: css`\n    label: collapse__header-label;\n    font-weight: ${theme.typography.weight.semibold};\n    margin-right: ${theme.spacing.sm};\n    font-size: ${theme.typography.heading.h6};\n    box-shadow: ${selectThemeVariant({ light: 'none', dark: '1px 1px 4px rgb(45, 45, 45)' }, theme.type)};\n  `,\n}));\n\ninterface Props {\n  isOpen: boolean;\n  label: string;\n  loading?: boolean;\n  collapsible?: boolean;\n  onToggle?: (isOpen: boolean) => void;\n}\n\nexport const Collapse: FunctionComponent<Props> = ({ isOpen, label, loading, collapsible, onToggle, children }) => {\n  const theme = useContext(ThemeContext);\n  const style = getStyles(theme);\n  const onClickToggle = () => {\n    if (onToggle) {\n      onToggle(!isOpen);\n    }\n  };\n\n  const panelClass = cx([style.collapse, 'panel-container']);\n  const iconClass = isOpen ? 'fa fa-caret-up' : 'fa fa-caret-down';\n  const loaderClass = loading ? cx([style.loader, style.loaderActive]) : cx([style.loader]);\n  const headerClass = collapsible ? cx([style.header]) : cx([style.headerCollapsed]);\n  const headerButtonsClass = collapsible ? cx([style.headerButtons]) : cx([style.headerButtonsCollapsed]);\n\n  return (\n    <div className={panelClass}>\n      <div className={headerClass} onClick={onClickToggle}>\n        <div className={headerButtonsClass}>\n          <span className={iconClass} />\n        </div>\n        <div className={cx([style.headerLabel])}>{label}</div>\n      </div>\n      {isOpen && (\n        <div className={cx([style.collapseBody])}>\n          <div className={loaderClass} />\n          {children}\n        </div>\n      )}\n    </div>\n  );\n};\n\nCollapse.displayName = 'Collapse';\n","import React, { FunctionComponent, useContext } from 'react';\nimport { css, cx } from 'emotion';\n\nimport { ThemeContext } from '../../themes/ThemeContext';\nimport { GrafanaTheme } from '../../types/theme';\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  logsStatsRow: css`\n    label: logs-stats-row;\n    margin: ${parseInt(theme.spacing.d, 10) / 1.75}px 0;\n  `,\n  logsStatsRowActive: css`\n    label: logs-stats-row--active;\n    color: ${theme.colors.blue};\n    position: relative;\n\n    ::after {\n      display: inline;\n      content: '*';\n      position: absolute;\n      top: 0;\n      left: -8px;\n    }\n  `,\n  logsStatsRowLabel: css`\n    label: logs-stats-row__label;\n    display: flex;\n    margin-bottom: 1px;\n  `,\n  logsStatsRowValue: css`\n    label: logs-stats-row__value;\n    flex: 1;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  `,\n  logsStatsRowCount: css`\n    label: logs-stats-row__count;\n    text-align: right;\n    margin-left: 0.5em;\n  `,\n  logsStatsRowPercent: css`\n    label: logs-stats-row__percent;\n    text-align: right;\n    margin-left: 0.5em;\n    width: 3em;\n  `,\n  logsStatsRowBar: css`\n    label: logs-stats-row__bar;\n    height: 4px;\n    overflow: hidden;\n    background: ${theme.colors.textFaint};\n  `,\n  logsStatsRowInnerBar: css`\n    label: logs-stats-row__innerbar;\n    height: 4px;\n    overflow: hidden;\n    background: ${theme.colors.textFaint};\n    background: ${theme.colors.blue};\n  `,\n});\n\nexport interface Props {\n  active?: boolean;\n  count: number;\n  proportion: number;\n  value?: string;\n}\n\nexport const LogLabelStatsRow: FunctionComponent<Props> = ({ active, count, proportion, value }) => {\n  const theme = useContext(ThemeContext);\n  const style = getStyles(theme);\n  const percent = `${Math.round(proportion * 100)}%`;\n  const barStyle = { width: percent };\n  const className = active ? cx([style.logsStatsRow, style.logsStatsRowActive]) : cx([style.logsStatsRow]);\n\n  return (\n    <div className={className}>\n      <div className={cx([style.logsStatsRowLabel])}>\n        <div className={cx([style.logsStatsRowValue])} title={value}>\n          {value}\n        </div>\n        <div className={cx([style.logsStatsRowCount])}>{count}</div>\n        <div className={cx([style.logsStatsRowPercent])}>{percent}</div>\n      </div>\n      <div className={cx([style.logsStatsRowBar])}>\n        <div className={cx([style.logsStatsRowInnerBar])} style={barStyle} />\n      </div>\n    </div>\n  );\n};\n\nLogLabelStatsRow.displayName = 'LogLabelStatsRow';\n","import React, { PureComponent } from 'react';\nimport { css, cx } from 'emotion';\nimport { LogRowModel, LogLabelStatsModel, calculateLogsLabelStats } from '@grafana/data';\n\nimport { LogLabelStats } from './LogLabelStats';\nimport { GrafanaTheme, Themeable } from '../../types/theme';\nimport { selectThemeVariant } from '../../themes/selectThemeVariant';\nimport { withTheme } from '../../themes/ThemeContext';\n\nconst getStyles = (theme: GrafanaTheme) => {\n  return {\n    logsLabel: css`\n      label: logs-label;\n      display: flex;\n      padding: 0 2px;\n      background-color: ${selectThemeVariant({ light: theme.colors.gray5, dark: theme.colors.dark6 }, theme.type)};\n      border-radius: ${theme.border.radius};\n      margin: 0 4px 2px 0;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      overflow: hidden;\n    `,\n    logsLabelValue: css`\n      label: logs-label__value;\n      display: inline-block;\n      max-width: 20em;\n      text-overflow: ellipsis;\n      overflow: hidden;\n    `,\n    logsLabelIcon: css`\n      label: logs-label__icon;\n      border-left: solid 1px ${selectThemeVariant({ light: theme.colors.gray5, dark: theme.colors.dark1 }, theme.type)};\n      padding: 0 2px;\n      cursor: pointer;\n      margin-left: 2px;\n    `,\n    logsLabelStats: css`\n      position: absolute;\n      top: 1.25em;\n      left: -10px;\n      z-index: 100;\n      justify-content: space-between;\n      box-shadow: 0 0 20px ${selectThemeVariant({ light: theme.colors.white, dark: theme.colors.black }, theme.type)};\n    `,\n  };\n};\n\ninterface Props extends Themeable {\n  value: string;\n  label: string;\n  getRows: () => LogRowModel[];\n  plain?: boolean;\n  onClickLabel?: (label: string, value: string) => void;\n}\n\ninterface State {\n  showStats: boolean;\n  stats: LogLabelStatsModel[];\n}\n\nclass UnThemedLogLabel extends PureComponent<Props, State> {\n  state: State = {\n    stats: [],\n    showStats: false,\n  };\n\n  onClickClose = () => {\n    this.setState({ showStats: false });\n  };\n\n  onClickLabel = () => {\n    const { onClickLabel, label, value } = this.props;\n    if (onClickLabel) {\n      onClickLabel(label, value);\n    }\n  };\n\n  onClickStats = () => {\n    this.setState(state => {\n      if (state.showStats) {\n        return { showStats: false, stats: [] };\n      }\n      const allRows = this.props.getRows();\n      const stats = calculateLogsLabelStats(allRows, this.props.label);\n      return { showStats: true, stats };\n    });\n  };\n\n  render() {\n    const { getRows, label, plain, value, theme } = this.props;\n    const styles = getStyles(theme);\n    const { showStats, stats } = this.state;\n    const tooltip = `${label}: ${value}`;\n    return (\n      <span className={cx([styles.logsLabel])}>\n        <span className={cx([styles.logsLabelValue])} title={tooltip}>\n          {value}\n        </span>\n        {!plain && (\n          <span\n            title=\"Filter for label\"\n            onClick={this.onClickLabel}\n            className={cx([styles.logsLabelIcon, 'fa fa-search-plus'])}\n          />\n        )}\n        {!plain && getRows && (\n          <span onClick={this.onClickStats} className={cx([styles.logsLabelIcon, 'fa fa-signal'])} />\n        )}\n        {showStats && (\n          <span className={cx([styles.logsLabelStats])}>\n            <LogLabelStats\n              stats={stats}\n              rowCount={getRows().length}\n              label={label}\n              value={value}\n              onClickClose={this.onClickClose}\n            />\n          </span>\n        )}\n      </span>\n    );\n  }\n}\n\nexport const LogLabel = withTheme(UnThemedLogLabel);\nLogLabel.displayName = 'LogLabel';\n","import React, { FunctionComponent, useContext } from 'react';\nimport { css, cx } from 'emotion';\nimport { Labels, LogRowModel } from '@grafana/data';\n\nimport { LogLabel } from './LogLabel';\nimport { GrafanaTheme } from '../../types/theme';\nimport { ThemeContext } from '../../themes/ThemeContext';\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  logsLabels: css`\n    display: flex;\n    flex-wrap: wrap;\n  `,\n});\n\ninterface Props {\n  labels: Labels;\n  getRows: () => LogRowModel[];\n  plain?: boolean;\n  onClickLabel?: (label: string, value: string) => void;\n}\n\nexport const LogLabels: FunctionComponent<Props> = ({ getRows, labels, onClickLabel, plain }) => {\n  const theme = useContext(ThemeContext);\n  const styles = getStyles(theme);\n\n  return (\n    <span className={cx([styles.logsLabels])}>\n      {Object.keys(labels).map(key => (\n        <LogLabel\n          key={key}\n          getRows={getRows}\n          label={key}\n          value={labels[key]}\n          plain={plain}\n          onClickLabel={onClickLabel}\n        />\n      ))}\n    </span>\n  );\n};\n\nLogLabels.displayName = 'LogLabels';\n","import { LogRowModel, toDataFrame, Field } from '@grafana/data';\nimport { useState, useEffect } from 'react';\nimport flatten from 'lodash/flatten';\nimport useAsync from 'react-use/lib/useAsync';\n\nimport { DataQueryResponse, DataQueryError } from '../../types/datasource';\n\nexport interface LogRowContextRows {\n  before?: string[];\n  after?: string[];\n}\nexport interface LogRowContextQueryErrors {\n  before?: string;\n  after?: string;\n}\n\nexport interface HasMoreContextRows {\n  before: boolean;\n  after: boolean;\n}\n\ninterface ResultType {\n  data: string[][];\n  errors: string[];\n}\n\ninterface LogRowContextProviderProps {\n  row: LogRowModel;\n  getRowContext: (row: LogRowModel, options?: any) => Promise<DataQueryResponse>;\n  children: (props: {\n    result: LogRowContextRows;\n    errors: LogRowContextQueryErrors;\n    hasMoreContextRows: HasMoreContextRows;\n    updateLimit: () => void;\n  }) => JSX.Element;\n}\n\nexport const getRowContexts = async (\n  getRowContext: (row: LogRowModel, options?: any) => Promise<DataQueryResponse>,\n  row: LogRowModel,\n  limit: number\n) => {\n  const promises = [\n    getRowContext(row, {\n      limit,\n    }),\n    getRowContext(row, {\n      limit: limit + 1, // Lets add one more to the limit as we're filtering out one row see comment below\n      direction: 'FORWARD',\n    }),\n  ];\n\n  const results: Array<DataQueryResponse | DataQueryError> = await Promise.all(promises.map(p => p.catch(e => e)));\n\n  return {\n    data: results.map(result => {\n      const dataResult: DataQueryResponse = result as DataQueryResponse;\n      if (!dataResult.data) {\n        return [];\n      }\n\n      const data: any[] = [];\n      for (let index = 0; index < dataResult.data.length; index++) {\n        const dataFrame = toDataFrame(dataResult.data[index]);\n        const timestampField: Field<string> = dataFrame.fields.filter(field => field.name === 'ts')[0];\n\n        for (let fieldIndex = 0; fieldIndex < timestampField.values.length; fieldIndex++) {\n          const timestamp = timestampField.values.get(fieldIndex);\n\n          // We need to filter out the row we're basing our search from because of how start/end params work in Loki API\n          // see https://github.com/grafana/loki/issues/597#issuecomment-506408980\n          // the alternative to create our own add 1 nanosecond method to the a timestamp string would be quite complex\n          if (timestamp === row.timestamp) {\n            continue;\n          }\n\n          const lineField: Field<string> = dataFrame.fields.filter(field => field.name === 'line')[0];\n          const line = lineField.values.get(fieldIndex); // assuming that both fields have same length\n\n          if (data.length === 0) {\n            data[0] = [line];\n          } else {\n            data[0].push(line);\n          }\n        }\n      }\n\n      return data;\n    }),\n    errors: results.map(result => {\n      const errorResult: DataQueryError = result as DataQueryError;\n      if (!errorResult.message) {\n        return '';\n      }\n\n      return errorResult.message;\n    }),\n  };\n};\n\nexport const LogRowContextProvider: React.FunctionComponent<LogRowContextProviderProps> = ({\n  getRowContext,\n  row,\n  children,\n}) => {\n  // React Hook that creates a number state value called limit to component state and a setter function called setLimit\n  // The intial value for limit is 10\n  // Used for the number of rows to retrieve from backend from a specific point in time\n  const [limit, setLimit] = useState(10);\n\n  // React Hook that creates an object state value called result to component state and a setter function called setResult\n  // The intial value for result is null\n  // Used for sorting the response from backend\n  const [result, setResult] = useState<ResultType>((null as any) as ResultType);\n\n  // React Hook that creates an object state value called hasMoreContextRows to component state and a setter function called setHasMoreContextRows\n  // The intial value for hasMoreContextRows is {before: true, after: true}\n  // Used for indicating in UI if there are more rows to load in a given direction\n  const [hasMoreContextRows, setHasMoreContextRows] = useState({\n    before: true,\n    after: true,\n  });\n\n  // React Hook that resolves two promises every time the limit prop changes\n  // First promise fetches limit number of rows backwards in time from a specific point in time\n  // Second promise fetches limit number of rows forwards in time from a specific point in time\n  const { value } = useAsync(async () => {\n    return await getRowContexts(getRowContext, row, limit); // Moved it to a separate function for debugging purposes\n  }, [limit]);\n\n  // React Hook that performs a side effect every time the value (from useAsync hook) prop changes\n  // The side effect changes the result state with the response from the useAsync hook\n  // The side effect changes the hasMoreContextRows state if there are more context rows before or after the current result\n  useEffect(() => {\n    if (value) {\n      setResult((currentResult: any) => {\n        let hasMoreLogsBefore = true,\n          hasMoreLogsAfter = true;\n\n        if (currentResult && currentResult.data[0].length === value.data[0].length) {\n          hasMoreLogsBefore = false;\n        }\n\n        if (currentResult && currentResult.data[1].length === value.data[1].length) {\n          hasMoreLogsAfter = false;\n        }\n\n        setHasMoreContextRows({\n          before: hasMoreLogsBefore,\n          after: hasMoreLogsAfter,\n        });\n\n        return value;\n      });\n    }\n  }, [value]);\n\n  return children({\n    result: {\n      before: result ? flatten(result.data[0]) : [],\n      after: result ? flatten(result.data[1]) : [],\n    },\n    errors: {\n      before: result ? result.errors[0] : undefined,\n      after: result ? result.errors[1] : undefined,\n    },\n    hasMoreContextRows,\n    updateLimit: () => setLimit(limit + 10),\n  });\n};\n","import { css } from 'emotion';\nimport { LogLevel } from '@grafana/data';\n\nimport { GrafanaTheme } from '../../types/theme';\nimport { selectThemeVariant } from '../../themes/selectThemeVariant';\n\nexport const getLogRowStyles = (theme: GrafanaTheme, logLevel?: LogLevel) => {\n  let logColor = selectThemeVariant({ light: theme.colors.gray5, dark: theme.colors.gray2 }, theme.type);\n  switch (logLevel) {\n    case LogLevel.crit:\n    case LogLevel.critical:\n      logColor = '#705da0';\n      break;\n    case LogLevel.error:\n    case LogLevel.err:\n      logColor = '#e24d42';\n      break;\n    case LogLevel.warning:\n    case LogLevel.warn:\n      logColor = theme.colors.yellow;\n      break;\n    case LogLevel.info:\n      logColor = '#7eb26d';\n      break;\n    case LogLevel.debug:\n      logColor = '#1f78c1';\n      break;\n    case LogLevel.trace:\n      logColor = '#6ed0e0';\n      break;\n  }\n\n  return {\n    logsRowFieldHighLight: css`\n      label: logs-row__field-highlight;\n      background: inherit;\n      padding: inherit;\n      border-bottom: 1px dotted ${theme.colors.yellow};\n\n      .logs-row__field-highlight--icon {\n        margin-left: 0.5em;\n        cursor: pointer;\n        display: none;\n      }\n\n      &:hover {\n        color: ${theme.colors.yellow};\n        border-bottom-style: solid;\n\n        .logs-row__field-highlight--icon {\n          display: inline;\n        }\n      }\n    `,\n    logsRowMatchHighLight: css`\n      label: logs-row__match-highlight;\n      background: inherit;\n      padding: inherit;\n\n      color: ${theme.colors.yellow};\n      border-bottom: 1px solid ${theme.colors.yellow};\n      background-color: rgba(${theme.colors.yellow}, 0.1);\n    `,\n    logsRowMatchHighLightPreview: css`\n      label: logs-row__match-highlight--preview;\n      background-color: rgba(${theme.colors.yellow}, 0.2);\n      border-bottom-style: dotted;\n    `,\n    logsRows: css`\n      label: logs-rows;\n      font-family: ${theme.typography.fontFamily.monospace};\n      font-size: ${theme.typography.size.sm};\n      display: table;\n      table-layout: fixed;\n      width: 100%;\n    `,\n    logsRow: css`\n      label: logs-row;\n      display: table-row;\n\n      > div {\n        display: table-cell;\n        padding-right: 10px;\n        border-top: 1px solid transparent;\n        border-bottom: 1px solid transparent;\n        height: 100%;\n      }\n\n      &:hover {\n        background: ${theme.colors.pageBg};\n      }\n    `,\n    logsRowDuplicates: css`\n      label: logs-row__duplicates;\n      text-align: right;\n      width: 4em;\n    `,\n    logsRowLevel: css`\n      label: logs-row__level;\n      position: relative;\n      width: 10px;\n\n      &::after {\n        content: '';\n        display: block;\n        position: absolute;\n        top: 1px;\n        bottom: 1px;\n        width: 3px;\n        background-color: ${logColor};\n      }\n    `,\n    logsRowLocalTime: css`\n      label: logs-row__localtime;\n      white-space: nowrap;\n      width: 12.5em;\n    `,\n    logsRowLabels: css`\n      label: logs-row__labels;\n      width: 20%;\n      line-height: 1.2;\n      position: relative;\n    `,\n    logsRowMessage: css`\n      label: logs-row__message;\n      word-break: break-all;\n    `,\n    logsRowStats: css`\n      label: logs-row__stats;\n      margin: 5px 0;\n    `,\n  };\n};\n","import React, { useContext, useRef, useState, useLayoutEffect } from 'react';\nimport { LogRowModel } from '@grafana/data';\nimport { css, cx } from 'emotion';\n\nimport { Alert } from '../Alert/Alert';\nimport { LogRowContextRows, LogRowContextQueryErrors, HasMoreContextRows } from './LogRowContextProvider';\nimport { GrafanaTheme } from '../../types/theme';\nimport { selectThemeVariant } from '../../themes/selectThemeVariant';\nimport { DataQueryError } from '../../types/datasource';\nimport { ThemeContext } from '../../themes/ThemeContext';\nimport { CustomScrollbar } from '../CustomScrollbar/CustomScrollbar';\nimport { List } from '../List/List';\nimport { ClickOutsideWrapper } from '../ClickOutsideWrapper/ClickOutsideWrapper';\n\ninterface LogRowContextProps {\n  row: LogRowModel;\n  context: LogRowContextRows;\n  errors?: LogRowContextQueryErrors;\n  hasMoreContextRows?: HasMoreContextRows;\n  onOutsideClick: () => void;\n  onLoadMoreContext: () => void;\n}\n\nconst getLogRowContextStyles = (theme: GrafanaTheme) => {\n  const gradientTop = selectThemeVariant(\n    {\n      light: theme.colors.white,\n      dark: theme.colors.dark1,\n    },\n    theme.type\n  );\n  const gradientBottom = selectThemeVariant(\n    {\n      light: theme.colors.gray7,\n      dark: theme.colors.dark2,\n    },\n    theme.type\n  );\n\n  const boxShadowColor = selectThemeVariant(\n    {\n      light: theme.colors.gray5,\n      dark: theme.colors.black,\n    },\n    theme.type\n  );\n  const borderColor = selectThemeVariant(\n    {\n      light: theme.colors.gray5,\n      dark: theme.colors.dark9,\n    },\n    theme.type\n  );\n\n  return {\n    commonStyles: css`\n      position: absolute;\n      width: calc(100% + 20px);\n      left: -10px;\n      height: 250px;\n      z-index: 2;\n      overflow: hidden;\n      background: ${theme.colors.pageBg};\n      background: linear-gradient(180deg, ${gradientTop} 0%, ${gradientBottom} 104.25%);\n      box-shadow: 0px 2px 4px ${boxShadowColor}, 0px 0px 2px ${boxShadowColor};\n      border: 1px solid ${borderColor};\n      border-radius: ${theme.border.radius.md};\n    `,\n    header: css`\n      height: 30px;\n      padding: 0 10px;\n      display: flex;\n      align-items: center;\n      background: ${borderColor};\n    `,\n    logs: css`\n      height: 220px;\n      padding: 10px;\n    `,\n  };\n};\n\ninterface LogRowContextGroupHeaderProps {\n  row: LogRowModel;\n  rows: Array<string | DataQueryError>;\n  onLoadMoreContext: () => void;\n  shouldScrollToBottom?: boolean;\n  canLoadMoreRows?: boolean;\n}\ninterface LogRowContextGroupProps extends LogRowContextGroupHeaderProps {\n  rows: Array<string | DataQueryError>;\n  className: string;\n  error?: string;\n}\n\nconst LogRowContextGroupHeader: React.FunctionComponent<LogRowContextGroupHeaderProps> = ({\n  row,\n  rows,\n  onLoadMoreContext,\n  canLoadMoreRows,\n}) => {\n  const theme = useContext(ThemeContext);\n  const { header } = getLogRowContextStyles(theme);\n\n  return (\n    <div className={header}>\n      <span\n        className={css`\n          opacity: 0.6;\n        `}\n      >\n        Found {rows.length} rows.\n      </span>\n      {(rows.length >= 10 || (rows.length > 10 && rows.length % 10 !== 0)) && canLoadMoreRows && (\n        <span\n          className={css`\n            margin-left: 10px;\n            &:hover {\n              text-decoration: underline;\n              cursor: pointer;\n            }\n          `}\n          onClick={() => onLoadMoreContext()}\n        >\n          Load 10 more\n        </span>\n      )}\n    </div>\n  );\n};\n\nconst LogRowContextGroup: React.FunctionComponent<LogRowContextGroupProps> = ({\n  row,\n  rows,\n  error,\n  className,\n  shouldScrollToBottom,\n  canLoadMoreRows,\n  onLoadMoreContext,\n}) => {\n  const theme = useContext(ThemeContext);\n  const { commonStyles, logs } = getLogRowContextStyles(theme);\n  const [scrollTop, setScrollTop] = useState(0);\n  const listContainerRef = useRef<HTMLDivElement>() as React.RefObject<HTMLDivElement>;\n\n  useLayoutEffect(() => {\n    if (shouldScrollToBottom && listContainerRef.current) {\n      setScrollTop(listContainerRef.current.offsetHeight);\n    }\n  });\n\n  const headerProps = {\n    row,\n    rows,\n    onLoadMoreContext,\n    canLoadMoreRows,\n  };\n\n  return (\n    <div className={cx(className, commonStyles)}>\n      {/* When displaying \"after\" context */}\n      {shouldScrollToBottom && !error && <LogRowContextGroupHeader {...headerProps} />}\n      <div className={logs}>\n        <CustomScrollbar autoHide scrollTop={scrollTop}>\n          <div ref={listContainerRef}>\n            {!error && (\n              <List\n                items={rows}\n                renderItem={item => {\n                  return (\n                    <div\n                      className={css`\n                        padding: 5px 0;\n                      `}\n                    >\n                      {item}\n                    </div>\n                  );\n                }}\n              />\n            )}\n            {error && <Alert title={error} />}\n          </div>\n        </CustomScrollbar>\n      </div>\n      {/* When displaying \"before\" context */}\n      {!shouldScrollToBottom && !error && <LogRowContextGroupHeader {...headerProps} />}\n    </div>\n  );\n};\n\nexport const LogRowContext: React.FunctionComponent<LogRowContextProps> = ({\n  row,\n  context,\n  errors,\n  onOutsideClick,\n  onLoadMoreContext,\n  hasMoreContextRows,\n}) => {\n  return (\n    <ClickOutsideWrapper onClick={onOutsideClick}>\n      <div>\n        {context.after && (\n          <LogRowContextGroup\n            rows={context.after}\n            error={errors && errors.after}\n            row={row}\n            className={css`\n              top: -250px;\n            `}\n            shouldScrollToBottom\n            canLoadMoreRows={hasMoreContextRows ? hasMoreContextRows.after : false}\n            onLoadMoreContext={onLoadMoreContext}\n          />\n        )}\n\n        {context.before && (\n          <LogRowContextGroup\n            onLoadMoreContext={onLoadMoreContext}\n            canLoadMoreRows={hasMoreContextRows ? hasMoreContextRows.before : false}\n            row={row}\n            rows={context.before}\n            error={errors && errors.before}\n            className={css`\n              top: 100%;\n            `}\n          />\n        )}\n      </div>\n    </ClickOutsideWrapper>\n  );\n};\n","import React, { PureComponent } from 'react';\nimport ansicolor from '../../utils/ansicolor';\n\ninterface Style {\n  [key: string]: string;\n}\n\ninterface ParsedChunk {\n  style: Style;\n  text: string;\n}\n\nfunction convertCSSToStyle(css: string): Style {\n  return css.split(/;\\s*/).reduce((accumulated, line) => {\n    const match = line.match(/([^:\\s]+)\\s*:\\s*(.+)/);\n\n    if (match && match[1] && match[2]) {\n      const key = match[1].replace(/-(a-z)/g, (_, character) => character.toUpperCase());\n      // @ts-ignore\n      accumulated[key] = match[2];\n    }\n\n    return accumulated;\n  }, {});\n}\n\ninterface Props {\n  value: string;\n}\n\ninterface State {\n  chunks: ParsedChunk[];\n  prevValue: string;\n}\n\nexport class LogMessageAnsi extends PureComponent<Props, State> {\n  state: State = {\n    chunks: [],\n    prevValue: '',\n  };\n\n  static getDerivedStateFromProps(props: Props, state: State) {\n    if (props.value === state.prevValue) {\n      return null;\n    }\n\n    const parsed = ansicolor.parse(props.value);\n\n    return {\n      chunks: parsed.spans.map(span => {\n        return span.css\n          ? {\n              style: convertCSSToStyle(span.css),\n              text: span.text,\n            }\n          : { text: span.text };\n      }),\n      prevValue: props.value,\n    };\n  }\n\n  render() {\n    const { chunks } = this.state;\n\n    return chunks.map((chunk, index) =>\n      chunk.style ? (\n        <span key={index} style={chunk.style}>\n          {chunk.text}\n        </span>\n      ) : (\n        chunk.text\n      )\n    );\n  }\n}\n","import React, { PureComponent, FunctionComponent, useContext } from 'react';\nimport _ from 'lodash';\n// @ts-ignore\nimport Highlighter from 'react-highlight-words';\nimport {\n  LogRowModel,\n  LogLabelStatsModel,\n  LogsParser,\n  TimeZone,\n  calculateFieldStats,\n  getParser,\n  findHighlightChunksInText,\n} from '@grafana/data';\nimport tinycolor from 'tinycolor2';\nimport { css, cx } from 'emotion';\nimport { DataQueryResponse, GrafanaTheme, selectThemeVariant, ThemeContext } from '../../index';\nimport {\n  LogRowContextRows,\n  LogRowContextQueryErrors,\n  HasMoreContextRows,\n  LogRowContextProvider,\n} from './LogRowContextProvider';\nimport { LogRowContext } from './LogRowContext';\nimport { LogLabels } from './LogLabels';\nimport { LogMessageAnsi } from './LogMessageAnsi';\nimport { LogLabelStats } from './LogLabelStats';\nimport { Themeable } from '../../types/theme';\nimport { withTheme } from '../../themes/index';\nimport { getLogRowStyles } from './getLogRowStyles';\n\ninterface Props extends Themeable {\n  highlighterExpressions?: string[];\n  row: LogRowModel;\n  showDuplicates: boolean;\n  showLabels: boolean;\n  showTime: boolean;\n  timeZone: TimeZone;\n  getRows: () => LogRowModel[];\n  onClickLabel?: (label: string, value: string) => void;\n  onContextClick?: () => void;\n  getRowContext: (row: LogRowModel, options?: any) => Promise<DataQueryResponse>;\n}\n\ninterface State {\n  fieldCount: number;\n  fieldLabel: string;\n  fieldStats: LogLabelStatsModel[];\n  fieldValue: string;\n  parsed: boolean;\n  parser?: LogsParser;\n  parsedFieldHighlights: string[];\n  showFieldStats: boolean;\n  showContext: boolean;\n}\n\n/**\n * Renders a highlighted field.\n * When hovering, a stats icon is shown.\n */\nconst FieldHighlight = (onClick: any): FunctionComponent<any> => (props: any) => {\n  const theme = useContext(ThemeContext);\n  const style = getLogRowStyles(theme);\n  return (\n    <span className={props.className} style={props.style}>\n      {props.children}\n      <span\n        className={cx([style, 'logs-row__field-highlight--icon', 'fa fa-signal'])}\n        onClick={() => onClick(props.children)}\n      />\n    </span>\n  );\n};\n\nconst logRowStyles = css`\n  position: relative;\n  /* z-index: 0; */\n  /* outline: none; */\n`;\n\nconst getLogRowWithContextStyles = (theme: GrafanaTheme, state: State) => {\n  const outlineColor = selectThemeVariant(\n    {\n      light: theme.colors.white,\n      dark: theme.colors.black,\n    },\n    theme.type\n  );\n\n  return {\n    row: css`\n      z-index: 1;\n      outline: 9999px solid\n        ${tinycolor(outlineColor as tinycolor.ColorInput)\n          .setAlpha(0.7)\n          .toRgbString()};\n    `,\n  };\n};\n\n/**\n * Renders a log line.\n *\n * When user hovers over it for a certain time, it lazily parses the log line.\n * Once a parser is found, it will determine fields, that will be highlighted.\n * When the user requests stats for a field, they will be calculated and rendered below the row.\n */\nclass UnThemedLogRow extends PureComponent<Props, State> {\n  mouseMessageTimer: number | null = null;\n\n  state: any = {\n    fieldCount: 0,\n    fieldLabel: null,\n    fieldStats: null,\n    fieldValue: null,\n    parsed: false,\n    parser: undefined,\n    parsedFieldHighlights: [],\n    showFieldStats: false,\n    showContext: false,\n  };\n\n  componentWillUnmount() {\n    this.clearMouseMessageTimer();\n  }\n\n  onClickClose = () => {\n    this.setState({ showFieldStats: false });\n  };\n\n  onClickHighlight = (fieldText: string) => {\n    const { getRows } = this.props;\n    const { parser } = this.state;\n    const allRows = getRows();\n\n    // Build value-agnostic row matcher based on the field label\n    const fieldLabel = parser.getLabelFromField(fieldText);\n    const fieldValue = parser.getValueFromField(fieldText);\n    const matcher = parser.buildMatcher(fieldLabel);\n    const fieldStats = calculateFieldStats(allRows, matcher);\n    const fieldCount = fieldStats.reduce((sum, stat) => sum + stat.count, 0);\n\n    this.setState({ fieldCount, fieldLabel, fieldStats, fieldValue, showFieldStats: true });\n  };\n\n  onMouseOverMessage = () => {\n    if (this.state.showContext || this.isTextSelected()) {\n      // When showing context we don't want to the LogRow rerender as it will mess up state of context block\n      // making the \"after\" context to be scrolled to the top, what is desired only on open\n      // The log row message needs to be refactored to separate component that encapsulates parsing and parsed message state\n      return;\n    }\n    // Don't parse right away, user might move along\n    this.mouseMessageTimer = window.setTimeout(this.parseMessage, 500);\n  };\n\n  onMouseOutMessage = () => {\n    if (this.state.showContext) {\n      // See comment in onMouseOverMessage method\n      return;\n    }\n    this.clearMouseMessageTimer();\n    this.setState({ parsed: false });\n  };\n\n  clearMouseMessageTimer = () => {\n    if (this.mouseMessageTimer) {\n      clearTimeout(this.mouseMessageTimer);\n    }\n  };\n\n  parseMessage = () => {\n    if (!this.state.parsed) {\n      const { row } = this.props;\n      const parser = getParser(row.entry);\n      if (parser) {\n        // Use parser to highlight detected fields\n        const parsedFieldHighlights = parser.getFields(this.props.row.entry);\n        this.setState({ parsedFieldHighlights, parsed: true, parser });\n      }\n    }\n  };\n\n  isTextSelected() {\n    if (!window.getSelection) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n\n    if (!selection) {\n      return false;\n    }\n\n    return selection.anchorNode !== null && selection.isCollapsed === false;\n  }\n\n  toggleContext = () => {\n    this.setState(state => {\n      return {\n        showContext: !state.showContext,\n      };\n    });\n  };\n\n  onContextToggle = (e: React.SyntheticEvent<HTMLElement>) => {\n    e.stopPropagation();\n    this.toggleContext();\n  };\n\n  renderLogRow(\n    context?: LogRowContextRows,\n    errors?: LogRowContextQueryErrors,\n    hasMoreContextRows?: HasMoreContextRows,\n    updateLimit?: () => void\n  ) {\n    const {\n      getRows,\n      highlighterExpressions,\n      onClickLabel,\n      row,\n      showDuplicates,\n      showLabels,\n      timeZone,\n      showTime,\n      theme,\n    } = this.props;\n    const {\n      fieldCount,\n      fieldLabel,\n      fieldStats,\n      fieldValue,\n      parsed,\n      parsedFieldHighlights,\n      showFieldStats,\n      showContext,\n    } = this.state;\n    const style = getLogRowStyles(theme, row.logLevel);\n    const { entry, hasAnsi, raw } = row;\n    const previewHighlights = highlighterExpressions && !_.isEqual(highlighterExpressions, row.searchWords);\n    const highlights = previewHighlights ? highlighterExpressions : row.searchWords;\n    const needsHighlighter = highlights && highlights.length > 0 && highlights[0] && highlights[0].length > 0;\n    const highlightClassName = previewHighlights\n      ? cx([style.logsRowMatchHighLight, style.logsRowMatchHighLightPreview])\n      : cx([style.logsRowMatchHighLight]);\n\n    const showUtc = timeZone === 'utc';\n\n    return (\n      <ThemeContext.Consumer>\n        {theme => {\n          const styles = this.state.showContext\n            ? cx(logRowStyles, getLogRowWithContextStyles(theme, this.state).row)\n            : logRowStyles;\n          return (\n            <div className={cx([style.logsRow])}>\n              {showDuplicates && (\n                <div className={cx([style.logsRowDuplicates])}>\n                  {row.duplicates && row.duplicates > 0 ? `${row.duplicates + 1}x` : null}\n                </div>\n              )}\n              <div className={cx([style.logsRowLevel])} />\n              {showTime && showUtc && (\n                <div className={cx([style.logsRowLocalTime])} title={`Local: ${row.timeLocal} (${row.timeFromNow})`}>\n                  {row.timeUtc}\n                </div>\n              )}\n              {showTime && !showUtc && (\n                <div className={cx([style.logsRowLocalTime])} title={`${row.timeUtc} (${row.timeFromNow})`}>\n                  {row.timeLocal}\n                </div>\n              )}\n              {showLabels && (\n                <div className={cx([style.logsRowLabels])}>\n                  <LogLabels\n                    getRows={getRows}\n                    labels={row.uniqueLabels ? row.uniqueLabels : {}}\n                    onClickLabel={onClickLabel}\n                  />\n                </div>\n              )}\n              <div\n                className={cx([style.logsRowMessage])}\n                onMouseEnter={this.onMouseOverMessage}\n                onMouseLeave={this.onMouseOutMessage}\n              >\n                <div\n                  className={css`\n                    position: relative;\n                  `}\n                >\n                  {showContext && context && (\n                    <LogRowContext\n                      row={row}\n                      context={context}\n                      errors={errors}\n                      hasMoreContextRows={hasMoreContextRows}\n                      onOutsideClick={this.toggleContext}\n                      onLoadMoreContext={() => {\n                        if (updateLimit) {\n                          updateLimit();\n                        }\n                      }}\n                    />\n                  )}\n                  <span className={styles}>\n                    {parsed && (\n                      <Highlighter\n                        style={{ whiteSpace: 'pre-wrap' }}\n                        autoEscape\n                        highlightTag={FieldHighlight(this.onClickHighlight)}\n                        textToHighlight={entry}\n                        searchWords={parsedFieldHighlights}\n                        highlightClassName={cx([style.logsRowFieldHighLight])}\n                      />\n                    )}\n                    {!parsed && needsHighlighter && (\n                      <Highlighter\n                        style={{ whiteSpace: 'pre-wrap' }}\n                        textToHighlight={entry}\n                        searchWords={highlights}\n                        findChunks={findHighlightChunksInText}\n                        highlightClassName={highlightClassName}\n                      />\n                    )}\n                    {hasAnsi && !parsed && !needsHighlighter && <LogMessageAnsi value={raw} />}\n                    {!hasAnsi && !parsed && !needsHighlighter && entry}\n                    {showFieldStats && (\n                      <div className={cx([style.logsRowStats])}>\n                        <LogLabelStats\n                          stats={fieldStats}\n                          label={fieldLabel}\n                          value={fieldValue}\n                          onClickClose={this.onClickClose}\n                          rowCount={fieldCount}\n                        />\n                      </div>\n                    )}\n                  </span>\n                  {row.searchWords && row.searchWords.length > 0 && (\n                    <span\n                      onClick={this.onContextToggle}\n                      className={css`\n                        visibility: hidden;\n                        white-space: nowrap;\n                        position: relative;\n                        z-index: ${showContext ? 1 : 0};\n                        cursor: pointer;\n                        .${style.logsRow}:hover & {\n                          visibility: visible;\n                          margin-left: 10px;\n                          text-decoration: underline;\n                        }\n                      `}\n                    >\n                      {showContext ? 'Hide' : 'Show'} context\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n          );\n        }}\n      </ThemeContext.Consumer>\n    );\n  }\n\n  render() {\n    const { showContext } = this.state;\n\n    if (showContext) {\n      return (\n        <>\n          <LogRowContextProvider row={this.props.row} getRowContext={this.props.getRowContext}>\n            {({ result, errors, hasMoreContextRows, updateLimit }) => {\n              return <>{this.renderLogRow(result, errors, hasMoreContextRows, updateLimit)}</>;\n            }}\n          </LogRowContextProvider>\n        </>\n      );\n    }\n\n    return this.renderLogRow();\n  }\n}\n\nexport const LogRow = withTheme(UnThemedLogRow);\nLogRow.displayName = 'LogRow';\n","import React, { PureComponent } from 'react';\nimport { cx } from 'emotion';\nimport { LogsModel, TimeZone, LogsDedupStrategy, LogRowModel } from '@grafana/data';\n\nimport { LogRow } from './LogRow';\nimport { Themeable } from '../../types/theme';\nimport { withTheme } from '../../themes/index';\nimport { getLogRowStyles } from './getLogRowStyles';\n\nconst PREVIEW_LIMIT = 100;\nconst RENDER_LIMIT = 500;\n\nexport interface Props extends Themeable {\n  data: LogsModel;\n  dedupStrategy: LogsDedupStrategy;\n  highlighterExpressions: string[];\n  showTime: boolean;\n  showLabels: boolean;\n  timeZone: TimeZone;\n  deduplicatedData?: LogsModel;\n  rowLimit?: number;\n  onClickLabel?: (label: string, value: string) => void;\n  getRowContext?: (row: LogRowModel, options?: any) => Promise<any>;\n}\n\ninterface State {\n  deferLogs: boolean;\n  renderAll: boolean;\n}\n\nclass UnThemedLogRows extends PureComponent<Props, State> {\n  deferLogsTimer: number | null = null;\n  renderAllTimer: number | null = null;\n\n  state: State = {\n    deferLogs: true,\n    renderAll: false,\n  };\n\n  componentDidMount() {\n    // Staged rendering\n    if (this.state.deferLogs) {\n      const { data } = this.props;\n      const rowCount = data && data.rows ? data.rows.length : 0;\n      // Render all right away if not too far over the limit\n      const renderAll = rowCount <= PREVIEW_LIMIT * 2;\n      this.deferLogsTimer = window.setTimeout(() => this.setState({ deferLogs: false, renderAll }), rowCount);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    // Staged rendering\n    if (prevState.deferLogs && !this.state.deferLogs && !this.state.renderAll) {\n      this.renderAllTimer = window.setTimeout(() => this.setState({ renderAll: true }), 2000);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.deferLogsTimer) {\n      clearTimeout(this.deferLogsTimer);\n    }\n\n    if (this.renderAllTimer) {\n      clearTimeout(this.renderAllTimer);\n    }\n  }\n\n  render() {\n    const {\n      dedupStrategy,\n      showTime,\n      data,\n      deduplicatedData,\n      highlighterExpressions,\n      showLabels,\n      timeZone,\n      onClickLabel,\n      rowLimit,\n      theme,\n    } = this.props;\n    const { deferLogs, renderAll } = this.state;\n    const dedupedData = deduplicatedData ? deduplicatedData : data;\n    const hasData = data && data.rows && data.rows.length > 0;\n    const hasLabel = hasData && dedupedData && dedupedData.hasUniqueLabels ? true : false;\n    const dedupCount = dedupedData\n      ? dedupedData.rows.reduce((sum, row) => (row.duplicates ? sum + row.duplicates : sum), 0)\n      : 0;\n    const showDuplicates = dedupStrategy !== LogsDedupStrategy.none && dedupCount > 0;\n\n    // Staged rendering\n    const processedRows = dedupedData ? dedupedData.rows : [];\n    const firstRows = processedRows.slice(0, PREVIEW_LIMIT);\n    const renderLimit = rowLimit || RENDER_LIMIT;\n    const rowCount = Math.min(processedRows.length, renderLimit);\n    const lastRows = processedRows.slice(PREVIEW_LIMIT, rowCount);\n\n    // React profiler becomes unusable if we pass all rows to all rows and their labels, using getter instead\n    const getRows = () => processedRows;\n    const getRowContext = this.props.getRowContext ? this.props.getRowContext : () => Promise.resolve([]);\n    const { logsRows } = getLogRowStyles(theme);\n\n    return (\n      <div className={cx([logsRows])}>\n        {hasData &&\n        !deferLogs && // Only inject highlighterExpression in the first set for performance reasons\n          firstRows.map((row, index) => (\n            <LogRow\n              key={index}\n              getRows={getRows}\n              getRowContext={getRowContext}\n              highlighterExpressions={highlighterExpressions}\n              row={row}\n              showDuplicates={showDuplicates}\n              showLabels={showLabels && hasLabel}\n              showTime={showTime}\n              timeZone={timeZone}\n              onClickLabel={onClickLabel}\n            />\n          ))}\n        {hasData &&\n          !deferLogs &&\n          renderAll &&\n          lastRows.map((row, index) => (\n            <LogRow\n              key={PREVIEW_LIMIT + index}\n              getRows={getRows}\n              getRowContext={getRowContext}\n              row={row}\n              showDuplicates={showDuplicates}\n              showLabels={showLabels && hasLabel}\n              showTime={showTime}\n              timeZone={timeZone}\n              onClickLabel={onClickLabel}\n            />\n          ))}\n        {hasData && deferLogs && <span>Rendering {rowCount} rows...</span>}\n      </div>\n    );\n  }\n}\n\nexport const LogRows = withTheme(UnThemedLogRows);\nLogRows.displayName = 'LogsRows';\n","import React, { FC, ReactNode, PureComponent } from 'react';\nimport { Tooltip } from '../Tooltip/Tooltip';\n\ninterface ToggleButtonGroupProps {\n  label?: string;\n  children: JSX.Element[];\n  transparent?: boolean;\n}\n\nexport class ToggleButtonGroup extends PureComponent<ToggleButtonGroupProps> {\n  render() {\n    const { children, label, transparent } = this.props;\n\n    return (\n      <div className=\"gf-form gf-form--align-center\">\n        {label && <label className={`gf-form-label ${transparent ? 'gf-form-label--transparent' : ''}`}>{label}</label>}\n        <div className={`toggle-button-group ${transparent ? 'toggle-button-group--transparent' : ''}`}>{children}</div>\n      </div>\n    );\n  }\n}\n\ninterface ToggleButtonProps {\n  onChange?: (value: any) => void;\n  selected?: boolean;\n  value: any;\n  className?: string;\n  children: ReactNode;\n  tooltip?: string;\n}\n\nexport const ToggleButton: FC<ToggleButtonProps> = ({\n  children,\n  selected,\n  className = '',\n  value = null,\n  tooltip,\n  onChange,\n}) => {\n  const onClick = (event: React.SyntheticEvent) => {\n    event.stopPropagation();\n    if (!selected && onChange) {\n      onChange(value);\n    }\n  };\n\n  const btnClassName = `btn ${className}${selected ? ' active' : ''}`;\n  const button = (\n    <button className={btnClassName} onClick={onClick}>\n      <span>{children}</span>\n    </button>\n  );\n\n  if (tooltip) {\n    return (\n      <Tooltip content={tooltip} placement=\"bottom\">\n        {button}\n      </Tooltip>\n    );\n  } else {\n    return button;\n  }\n};\n","import React, { PureComponent, ChangeEvent } from 'react';\nimport { Threshold, sortThresholds } from '@grafana/data';\nimport { colors } from '../../utils';\nimport { ThemeContext } from '../../themes';\nimport { getColorFromHexRgbOrName } from '../../utils';\nimport { Input } from '../Input/Input';\nimport { ColorPicker } from '../ColorPicker/ColorPicker';\nimport { PanelOptionsGroup } from '../PanelOptionsGroup/PanelOptionsGroup';\n\nexport interface Props {\n  thresholds?: Threshold[];\n  onChange: (thresholds: Threshold[]) => void;\n}\n\ninterface State {\n  thresholds: ThresholdWithKey[];\n}\n\ninterface ThresholdWithKey extends Threshold {\n  key: number;\n}\n\nlet counter = 100;\n\nfunction toThresholdsWithKey(thresholds?: Threshold[]): ThresholdWithKey[] {\n  if (!thresholds || thresholds.length === 0) {\n    thresholds = [{ value: -Infinity, color: 'green' }];\n  }\n\n  return thresholds.map(t => {\n    return {\n      color: t.color,\n      value: t.value === null ? -Infinity : t.value,\n      key: counter++,\n    };\n  });\n}\n\nexport class ThresholdsEditor extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const thresholds = toThresholdsWithKey(props.thresholds);\n    thresholds[0].value = -Infinity;\n\n    this.state = { thresholds };\n  }\n\n  onAddThresholdAfter = (threshold: ThresholdWithKey) => {\n    const { thresholds } = this.state;\n\n    const maxValue = 100;\n    const minValue = 0;\n\n    let prev: ThresholdWithKey | undefined = undefined;\n    let next: ThresholdWithKey | undefined = undefined;\n    for (const t of thresholds) {\n      if (prev && prev.key === threshold.key) {\n        next = t;\n        break;\n      }\n      prev = t;\n    }\n\n    const prevValue = prev && isFinite(prev.value) ? prev.value : minValue;\n    const nextValue = next && isFinite(next.value) ? next.value : maxValue;\n\n    const color = colors.filter(c => !thresholds.some(t => t.color === c))[1];\n    const add = {\n      value: prevValue + (nextValue - prevValue) / 2.0,\n      color: color,\n      key: counter++,\n    };\n    const newThresholds = [...thresholds, add];\n    sortThresholds(newThresholds);\n\n    this.setState(\n      {\n        thresholds: newThresholds,\n      },\n      () => this.onChange()\n    );\n  };\n\n  onRemoveThreshold = (threshold: ThresholdWithKey) => {\n    const { thresholds } = this.state;\n    if (!thresholds.length) {\n      return;\n    }\n    // Don't remove index 0\n    if (threshold.key === thresholds[0].key) {\n      return;\n    }\n    this.setState(\n      {\n        thresholds: thresholds.filter(t => t.key !== threshold.key),\n      },\n      () => this.onChange()\n    );\n  };\n\n  onChangeThresholdValue = (event: ChangeEvent<HTMLInputElement>, threshold: ThresholdWithKey) => {\n    const cleanValue = event.target.value.replace(/,/g, '.');\n    const parsedValue = parseFloat(cleanValue);\n    const value = isNaN(parsedValue) ? '' : parsedValue;\n\n    const thresholds = this.state.thresholds.map(t => {\n      if (t.key === threshold.key) {\n        t = { ...t, value: value as number };\n      }\n      return t;\n    });\n    if (thresholds.length) {\n      thresholds[0].value = -Infinity;\n    }\n    this.setState({ thresholds });\n  };\n\n  onChangeThresholdColor = (threshold: ThresholdWithKey, color: string) => {\n    const { thresholds } = this.state;\n\n    const newThresholds = thresholds.map(t => {\n      if (t.key === threshold.key) {\n        t = { ...t, color: color };\n      }\n\n      return t;\n    });\n\n    this.setState(\n      {\n        thresholds: newThresholds,\n      },\n      () => this.onChange()\n    );\n  };\n\n  onBlur = () => {\n    const thresholds = [...this.state.thresholds];\n    sortThresholds(thresholds);\n    this.setState(\n      {\n        thresholds,\n      },\n      () => this.onChange()\n    );\n  };\n\n  onChange = () => {\n    const { thresholds } = this.state;\n    this.props.onChange(thresholdsWithoutKey(thresholds));\n  };\n\n  renderInput = (threshold: ThresholdWithKey) => {\n    return (\n      <div className=\"thresholds-row-input-inner\">\n        <span className=\"thresholds-row-input-inner-arrow\" />\n        <div className=\"thresholds-row-input-inner-color\">\n          {threshold.color && (\n            <div className=\"thresholds-row-input-inner-color-colorpicker\">\n              <ColorPicker\n                color={threshold.color}\n                onChange={color => this.onChangeThresholdColor(threshold, color)}\n                enableNamedColors={true}\n              />\n            </div>\n          )}\n        </div>\n        {!isFinite(threshold.value) ? (\n          <div className=\"thresholds-row-input-inner-value\">\n            <Input type=\"text\" value=\"Base\" readOnly />\n          </div>\n        ) : (\n          <>\n            <div className=\"thresholds-row-input-inner-value\">\n              <Input\n                type=\"number\"\n                step=\"0.0001\"\n                onChange={(event: ChangeEvent<HTMLInputElement>) => this.onChangeThresholdValue(event, threshold)}\n                value={threshold.value}\n                onBlur={this.onBlur}\n              />\n            </div>\n            <div className=\"thresholds-row-input-inner-remove\" onClick={() => this.onRemoveThreshold(threshold)}>\n              <i className=\"fa fa-times\" />\n            </div>\n          </>\n        )}\n      </div>\n    );\n  };\n\n  render() {\n    const { thresholds } = this.state;\n    return (\n      <ThemeContext.Consumer>\n        {theme => {\n          return (\n            <PanelOptionsGroup title=\"Thresholds\">\n              <div className=\"thresholds\">\n                {thresholds\n                  .slice(0)\n                  .reverse()\n                  .map(threshold => {\n                    return (\n                      <div className=\"thresholds-row\" key={`${threshold.key}`}>\n                        <div className=\"thresholds-row-add-button\" onClick={() => this.onAddThresholdAfter(threshold)}>\n                          <i className=\"fa fa-plus\" />\n                        </div>\n                        <div\n                          className=\"thresholds-row-color-indicator\"\n                          style={{ backgroundColor: getColorFromHexRgbOrName(threshold.color, theme.type) }}\n                        />\n                        <div className=\"thresholds-row-input\">{this.renderInput(threshold)}</div>\n                      </div>\n                    );\n                  })}\n              </div>\n            </PanelOptionsGroup>\n          );\n        }}\n      </ThemeContext.Consumer>\n    );\n  }\n}\n\nexport function thresholdsWithoutKey(thresholds: ThresholdWithKey[]): Threshold[] {\n  return thresholds.map(t => {\n    const { key, ...rest } = t;\n    return rest; // everything except key\n  });\n}\n","// Libraries\nimport React, { PureComponent, ChangeEvent } from 'react';\n\n// Components\nimport { FormLabel } from '../FormLabel/FormLabel';\nimport { FormField } from '../FormField/FormField';\nimport { StatsPicker } from '../StatsPicker/StatsPicker';\n\n// Types\nimport { FieldDisplayOptions, DEFAULT_FIELD_DISPLAY_VALUES_LIMIT } from '../../utils/fieldDisplay';\nimport Select from '../Select/Select';\nimport { ReducerID, toNumberString, toIntegerOrUndefined, SelectableValue, FieldConfig } from '@grafana/data';\n\nconst showOptions: Array<SelectableValue<boolean>> = [\n  {\n    value: true,\n    label: 'All Values',\n    description: 'Each row in the response data',\n  },\n  {\n    value: false,\n    label: 'Calculation',\n    description: 'Calculate a value based on the response',\n  },\n];\n\nexport interface Props {\n  labelWidth?: number;\n  value: FieldDisplayOptions;\n  onChange: (value: FieldDisplayOptions, event?: React.SyntheticEvent<HTMLElement>) => void;\n}\n\nexport class FieldDisplayEditor extends PureComponent<Props> {\n  onShowValuesChange = (item: SelectableValue<boolean>) => {\n    const val = item.value === true;\n    this.props.onChange({ ...this.props.value, values: val });\n  };\n\n  onCalcsChange = (calcs: string[]) => {\n    this.props.onChange({ ...this.props.value, calcs });\n  };\n\n  onDefaultsChange = (value: FieldConfig) => {\n    this.props.onChange({ ...this.props.value, defaults: value });\n  };\n\n  onLimitChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange({\n      ...this.props.value,\n      limit: toIntegerOrUndefined(event.target.value),\n    });\n  };\n\n  render() {\n    const { value } = this.props;\n    const { calcs, values, limit } = value;\n\n    const labelWidth = this.props.labelWidth || 5;\n\n    return (\n      <>\n        <div className=\"gf-form\">\n          <FormLabel width={labelWidth}>Show</FormLabel>\n          <Select\n            options={showOptions}\n            value={values ? showOptions[0] : showOptions[1]}\n            onChange={this.onShowValuesChange}\n          />\n        </div>\n        {values ? (\n          <FormField\n            label=\"Limit\"\n            labelWidth={labelWidth}\n            placeholder={`${DEFAULT_FIELD_DISPLAY_VALUES_LIMIT}`}\n            onChange={this.onLimitChange}\n            value={toNumberString(limit)}\n            type=\"number\"\n          />\n        ) : (\n          <div className=\"gf-form\">\n            <FormLabel width={labelWidth}>Calc</FormLabel>\n            <StatsPicker\n              width={12}\n              placeholder=\"Choose Stat\"\n              defaultStat={ReducerID.mean}\n              allowMultiple={false}\n              stats={calcs}\n              onChange={this.onCalcsChange}\n            />\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","// Libraries\nimport React, { ChangeEvent, useState, useCallback } from 'react';\n\n// Components\nimport { FormField } from '../FormField/FormField';\nimport { FormLabel } from '../FormLabel/FormLabel';\nimport { UnitPicker } from '../UnitPicker/UnitPicker';\n\n// Types\nimport { toIntegerOrUndefined, SelectableValue, FieldConfig, toFloatOrUndefined, toNumberString } from '@grafana/data';\n\nimport { VAR_SERIES_NAME, VAR_FIELD_NAME, VAR_CALC, VAR_CELL_PREFIX } from '../../utils/fieldDisplay';\n\nconst labelWidth = 6;\n\nexport interface Props {\n  showMinMax: boolean;\n  value: FieldConfig;\n  onChange: (value: FieldConfig, event?: React.SyntheticEvent<HTMLElement>) => void;\n}\n\nexport const FieldPropertiesEditor: React.FC<Props> = ({ value, onChange, showMinMax }) => {\n  const { unit, title } = value;\n\n  const [decimals, setDecimals] = useState(\n    value.decimals !== undefined && value.decimals !== null ? value.decimals.toString() : ''\n  );\n  const [min, setMin] = useState(toNumberString(value.min));\n  const [max, setMax] = useState(toNumberString(value.max));\n\n  const onTitleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    onChange({ ...value, title: event.target.value });\n  };\n\n  const onDecimalChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      setDecimals(event.target.value);\n    },\n    [value.decimals, onChange]\n  );\n\n  const onMinChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      setMin(event.target.value);\n    },\n    [value.min, onChange]\n  );\n\n  const onMaxChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      setMax(event.target.value);\n    },\n    [value.max, onChange]\n  );\n\n  const onUnitChange = (unit: SelectableValue<string>) => {\n    onChange({ ...value, unit: unit.value });\n  };\n\n  const commitChanges = useCallback(() => {\n    onChange({\n      ...value,\n      decimals: toIntegerOrUndefined(decimals),\n      min: toFloatOrUndefined(min),\n      max: toFloatOrUndefined(max),\n    });\n  }, [min, max, decimals]);\n\n  const titleTooltip = (\n    <div>\n      Template Variables:\n      <br />\n      {'${' + VAR_SERIES_NAME + '}'}\n      <br />\n      {'${' + VAR_FIELD_NAME + '}'}\n      <br />\n      {'$' + VAR_CELL_PREFIX + '{N}'} / {'$' + VAR_CALC}\n    </div>\n  );\n\n  return (\n    <>\n      <FormField\n        label=\"Title\"\n        labelWidth={labelWidth}\n        onChange={onTitleChange}\n        value={title}\n        tooltip={titleTooltip}\n        placeholder=\"Auto\"\n      />\n\n      <div className=\"gf-form\">\n        <FormLabel width={labelWidth}>Unit</FormLabel>\n        <UnitPicker defaultValue={unit} onChange={onUnitChange} />\n      </div>\n      {showMinMax && (\n        <>\n          <FormField\n            label=\"Min\"\n            labelWidth={labelWidth}\n            onChange={onMinChange}\n            onBlur={commitChanges}\n            value={min}\n            type=\"number\"\n          />\n          <FormField\n            label=\"Max\"\n            labelWidth={labelWidth}\n            onChange={onMaxChange}\n            onBlur={commitChanges}\n            value={max}\n            type=\"number\"\n          />\n        </>\n      )}\n      <FormField\n        label=\"Decimals\"\n        labelWidth={labelWidth}\n        placeholder=\"auto\"\n        onChange={onDecimalChange}\n        onBlur={commitChanges}\n        value={decimals}\n        type=\"number\"\n      />\n    </>\n  );\n};\n","import cloneDeep from 'lodash/cloneDeep';\nimport omit from 'lodash/omit';\n\nimport { VizOrientation, PanelModel } from '../../types/panel';\nimport { FieldDisplayOptions } from '../../utils/fieldDisplay';\nimport {\n  fieldReducers,\n  Threshold,\n  sortThresholds,\n  FieldConfig,\n  ReducerID,\n  ValueMapping,\n  MappingType,\n} from '@grafana/data';\n\nexport interface SingleStatBaseOptions {\n  fieldOptions: FieldDisplayOptions;\n  orientation: VizOrientation;\n}\n\nconst optionsToKeep = ['fieldOptions', 'orientation'];\n\nexport function sharedSingleStatPanelChangedHandler(\n  options: Partial<SingleStatBaseOptions> | any,\n  prevPluginId: string,\n  prevOptions: any\n) {\n  // Migrating from angular singlestat\n  if (prevPluginId === 'singlestat' && prevOptions.angular) {\n    const panel = prevOptions.angular;\n    const reducer = fieldReducers.getIfExists(panel.valueName);\n    const options = {\n      fieldOptions: {\n        defaults: {} as FieldConfig,\n        override: {} as FieldConfig,\n        calcs: [reducer ? reducer.id : ReducerID.mean],\n      },\n      orientation: VizOrientation.Horizontal,\n    };\n\n    const defaults = options.fieldOptions.defaults;\n    if (panel.format) {\n      defaults.unit = panel.format;\n    }\n    if (panel.nullPointMode) {\n      defaults.nullValueMode = panel.nullPointMode;\n    }\n    if (panel.nullText) {\n      defaults.noValue = panel.nullText;\n    }\n    if (panel.decimals || panel.decimals === 0) {\n      defaults.decimals = panel.decimals;\n    }\n\n    // Convert thresholds and color values\n    if (panel.thresholds && panel.colors) {\n      const levels = panel.thresholds.split(',').map((strVale: string) => {\n        return Number(strVale.trim());\n      });\n\n      // One more color than threshold\n      const thresholds: Threshold[] = [];\n      for (const color of panel.colors) {\n        const idx = thresholds.length - 1;\n        if (idx >= 0) {\n          thresholds.push({ value: levels[idx], color });\n        } else {\n          thresholds.push({ value: -Infinity, color });\n        }\n      }\n      defaults.thresholds = thresholds;\n    }\n\n    // Convert value mappings\n    const mappings = convertOldAngularValueMapping(panel);\n    if (mappings && mappings.length) {\n      defaults.mappings = mappings;\n    }\n\n    if (panel.gauge) {\n      defaults.min = panel.gauge.minValue;\n      defaults.max = panel.gauge.maxValue;\n    }\n    return options;\n  }\n\n  for (const k of optionsToKeep) {\n    if (prevOptions.hasOwnProperty(k)) {\n      options[k] = cloneDeep(prevOptions[k]);\n    }\n  }\n  return options;\n}\n\nexport function sharedSingleStatMigrationHandler(panel: PanelModel<SingleStatBaseOptions>): SingleStatBaseOptions {\n  if (!panel.options) {\n    // This happens on the first load or when migrating from angular\n    return {} as any;\n  }\n\n  const previousVersion = parseFloat(panel.pluginVersion || '6.1');\n  let options = panel.options as any;\n\n  if (previousVersion < 6.2) {\n    options = migrateFromValueOptions(options);\n  }\n\n  if (previousVersion < 6.3) {\n    options = moveThresholdsAndMappingsToField(options);\n  }\n\n  return options as SingleStatBaseOptions;\n}\n\nexport function moveThresholdsAndMappingsToField(old: any) {\n  const { fieldOptions } = old;\n\n  if (!fieldOptions) {\n    return old;\n  }\n\n  const { mappings, thresholds, ...rest } = old.fieldOptions;\n\n  return {\n    ...old,\n    fieldOptions: {\n      ...rest,\n      defaults: {\n        ...fieldOptions.defaults,\n        mappings,\n        thresholds: migrateOldThresholds(thresholds),\n      },\n    },\n  };\n}\n\n/*\n * Moves valueMappings and thresholds from root to new fieldOptions object\n * Renames valueOptions to to defaults and moves it under fieldOptions\n */\nexport function migrateFromValueOptions(old: any) {\n  const { valueOptions } = old;\n  if (!valueOptions) {\n    return old;\n  }\n\n  const fieldOptions: any = {};\n  const fieldDefaults: any = {};\n\n  fieldOptions.mappings = old.valueMappings;\n  fieldOptions.thresholds = old.thresholds;\n  fieldOptions.defaults = fieldDefaults;\n\n  fieldDefaults.unit = valueOptions.unit;\n  fieldDefaults.decimals = valueOptions.decimals;\n\n  // Make sure the stats have a valid name\n  if (valueOptions.stat) {\n    const reducer = fieldReducers.get(valueOptions.stat);\n    if (reducer) {\n      fieldOptions.calcs = [reducer.id];\n    }\n  }\n\n  fieldDefaults.min = old.minValue;\n  fieldDefaults.max = old.maxValue;\n\n  const newOptions = {\n    ...old,\n    fieldOptions,\n  };\n\n  return omit(newOptions, 'valueMappings', 'thresholds', 'valueOptions', 'minValue', 'maxValue');\n}\n\nexport function migrateOldThresholds(thresholds?: any[]): Threshold[] | undefined {\n  if (!thresholds || !thresholds.length) {\n    return undefined;\n  }\n  const copy = thresholds.map(t => {\n    return {\n      // Drops 'index'\n      value: t.value === null ? -Infinity : t.value,\n      color: t.color,\n    };\n  });\n  sortThresholds(copy);\n  copy[0].value = -Infinity;\n  return copy;\n}\n\n/**\n * Convert the angular single stat mapping to new react style\n */\nexport function convertOldAngularValueMapping(panel: any): ValueMapping[] {\n  const mappings: ValueMapping[] = [];\n\n  // Guess the right type based on options\n  let mappingType = panel.mappingType;\n  if (!panel.mappingType) {\n    if (panel.valueMaps && panel.valueMaps.length) {\n      mappingType = 1;\n    } else if (panel.rangeMaps && panel.rangeMaps.length) {\n      mappingType = 2;\n    }\n  }\n\n  // check value to text mappings if its enabled\n  if (mappingType === 1) {\n    for (let i = 0; i < panel.valueMaps.length; i++) {\n      const map = panel.valueMaps[i];\n      mappings.push({\n        ...map,\n        id: i, // used for order\n        type: MappingType.ValueToText,\n      });\n    }\n  } else if (mappingType === 2) {\n    for (let i = 0; i < panel.rangeMaps.length; i++) {\n      const map = panel.rangeMaps[i];\n      mappings.push({\n        ...map,\n        id: i, // used for order\n        type: MappingType.RangeToText,\n      });\n    }\n  }\n\n  return mappings;\n}\n","import React from 'react';\nimport { Themeable, GrafanaTheme } from '../../types/theme';\nimport { selectThemeVariant } from '../../themes/selectThemeVariant';\nimport { css, cx } from 'emotion';\nimport { stylesFactory } from '../../themes';\n\nexport interface CallToActionCardProps extends Themeable {\n  message?: string | JSX.Element;\n  callToActionElement: JSX.Element;\n  footer?: string | JSX.Element;\n  className?: string;\n}\n\nconst getCallToActionCardStyles = stylesFactory((theme: GrafanaTheme) => ({\n  wrapper: css`\n    label: call-to-action-card;\n    padding: ${theme.spacing.lg};\n    background: ${selectThemeVariant({ light: theme.colors.gray6, dark: theme.colors.grayBlue }, theme.type)};\n    border-radius: ${theme.border.radius.md};\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  `,\n  message: css`\n    margin-bottom: ${theme.spacing.lg};\n    font-style: italic;\n  `,\n  footer: css`\n    margin-top: ${theme.spacing.lg};\n  `,\n}));\n\nexport const CallToActionCard: React.FunctionComponent<CallToActionCardProps> = ({\n  message,\n  callToActionElement,\n  footer,\n  theme,\n  className,\n}) => {\n  const css = getCallToActionCardStyles(theme);\n\n  return (\n    <div className={cx([css.wrapper, className])}>\n      {message && <div className={css.message}>{message}</div>}\n      {callToActionElement}\n      {footer && <div className={css.footer}>{footer}</div>}\n    </div>\n  );\n};\n","import React, { useContext, useRef, useState, useLayoutEffect } from 'react';\nimport { css, cx } from 'emotion';\nimport useClickAway from 'react-use/lib/useClickAway';\nimport { GrafanaTheme, selectThemeVariant, ThemeContext } from '../../index';\nimport { stylesFactory } from '../../themes/stylesFactory';\nimport { Portal, List } from '../index';\nimport { LinkTarget } from '@grafana/data';\n\nexport interface ContextMenuItem {\n  label: string;\n  target?: LinkTarget;\n  icon?: string;\n  url?: string;\n  onClick?: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  group?: string;\n}\n\nexport interface ContextMenuGroup {\n  label?: string;\n  items: ContextMenuItem[];\n}\nexport interface ContextMenuProps {\n  x: number;\n  y: number;\n  onClose: () => void;\n  items?: ContextMenuGroup[];\n  renderHeader?: () => JSX.Element;\n}\n\nconst getContextMenuStyles = stylesFactory((theme: GrafanaTheme) => {\n  const linkColor = selectThemeVariant(\n    {\n      light: theme.colors.dark2,\n      dark: theme.colors.text,\n    },\n    theme.type\n  );\n  const linkColorHover = selectThemeVariant(\n    {\n      light: theme.colors.link,\n      dark: theme.colors.white,\n    },\n    theme.type\n  );\n  const wrapperBg = selectThemeVariant(\n    {\n      light: theme.colors.gray7,\n      dark: theme.colors.dark2,\n    },\n    theme.type\n  );\n  const wrapperShadow = selectThemeVariant(\n    {\n      light: theme.colors.gray3,\n      dark: theme.colors.black,\n    },\n    theme.type\n  );\n  const itemColor = selectThemeVariant(\n    {\n      light: theme.colors.black,\n      dark: theme.colors.white,\n    },\n    theme.type\n  );\n\n  const groupLabelColor = selectThemeVariant(\n    {\n      light: theme.colors.gray1,\n      dark: theme.colors.textWeak,\n    },\n    theme.type\n  );\n\n  const itemBgHover = selectThemeVariant(\n    {\n      light: theme.colors.gray5,\n      dark: theme.colors.dark7,\n    },\n    theme.type\n  );\n  const headerBg = selectThemeVariant(\n    {\n      light: theme.colors.white,\n      dark: theme.colors.dark1,\n    },\n    theme.type\n  );\n  const headerSeparator = selectThemeVariant(\n    {\n      light: theme.colors.white,\n      dark: theme.colors.dark7,\n    },\n    theme.type\n  );\n\n  return {\n    header: css`\n      padding: 4px;\n      border-bottom: 1px solid ${headerSeparator};\n      background: ${headerBg};\n      margin-bottom: ${theme.spacing.xs};\n      border-radius: ${theme.border.radius.sm} ${theme.border.radius.sm} 0 0;\n    `,\n    wrapper: css`\n      background: ${wrapperBg};\n      z-index: 1;\n      box-shadow: 0 2px 5px 0 ${wrapperShadow};\n      min-width: 200px;\n      display: inline-block;\n      border-radius: ${theme.border.radius.sm};\n    `,\n    link: css`\n      color: ${linkColor};\n      display: flex;\n      cursor: pointer;\n      &:hover {\n        color: ${linkColorHover};\n        text-decoration: none;\n      }\n    `,\n    item: css`\n      background: none;\n      padding: 4px 8px;\n      color: ${itemColor};\n      border-left: 2px solid transparent;\n      cursor: pointer;\n      &:hover {\n        background: ${itemBgHover};\n        border-image: linear-gradient(#f05a28 30%, #fbca0a 99%);\n        border-image-slice: 1;\n      }\n    `,\n    groupLabel: css`\n      color: ${groupLabelColor};\n      font-size: ${theme.typography.size.sm};\n      line-height: ${theme.typography.lineHeight.lg};\n      padding: ${theme.spacing.xs} ${theme.spacing.sm};\n    `,\n    icon: css`\n      opacity: 0.7;\n      width: 12px;\n      height: 12px;\n      display: inline-block;\n      margin-right: 10px;\n      color: ${theme.colors.linkDisabled};\n      position: relative;\n      top: 4px;\n    `,\n  };\n});\n\nexport const ContextMenu: React.FC<ContextMenuProps> = React.memo(({ x, y, onClose, items, renderHeader }) => {\n  const theme = useContext(ThemeContext);\n  const menuRef = useRef<HTMLDivElement>(null);\n  const [positionStyles, setPositionStyles] = useState({});\n\n  useLayoutEffect(() => {\n    const menuElement = menuRef.current;\n    if (menuElement) {\n      const rect = menuElement.getBoundingClientRect();\n      const OFFSET = 5;\n      const collisions = {\n        right: window.innerWidth < x + rect.width,\n        bottom: window.innerHeight < rect.bottom + rect.height + OFFSET,\n      };\n\n      setPositionStyles({\n        position: 'fixed',\n        left: collisions.right ? x - rect.width - OFFSET : x - OFFSET,\n        top: collisions.bottom ? y - rect.height - OFFSET : y + OFFSET,\n      });\n    }\n  }, [menuRef.current]);\n\n  useClickAway(menuRef, () => {\n    if (onClose) {\n      onClose();\n    }\n  });\n\n  const styles = getContextMenuStyles(theme);\n  return (\n    <Portal>\n      <div ref={menuRef} style={positionStyles} className={styles.wrapper}>\n        {renderHeader && <div className={styles.header}>{renderHeader()}</div>}\n        <List\n          items={items || []}\n          renderItem={(item, index) => {\n            return (\n              <>\n                <ContextMenuGroup group={item} onItemClick={onClose} />\n              </>\n            );\n          }}\n        />\n      </div>\n    </Portal>\n  );\n});\n\ninterface ContextMenuItemProps {\n  label: string;\n  icon?: string;\n  url?: string;\n  target?: string;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n  className?: string;\n}\n\nconst ContextMenuItem: React.FC<ContextMenuItemProps> = React.memo(\n  ({ url, icon, label, target, onClick, className }) => {\n    const theme = useContext(ThemeContext);\n    const styles = getContextMenuStyles(theme);\n    return (\n      <div className={styles.item}>\n        <a\n          href={url}\n          target={target || '_self'}\n          className={cx(className, styles.link)}\n          onClick={e => {\n            if (onClick) {\n              onClick(e);\n            }\n          }}\n        >\n          {icon && <i className={cx(`${icon}`, styles.icon)} />} {label}\n        </a>\n      </div>\n    );\n  }\n);\n\ninterface ContextMenuGroupProps {\n  group: ContextMenuGroup;\n  onItemClick?: () => void;\n}\n\nconst ContextMenuGroup: React.FC<ContextMenuGroupProps> = ({ group, onItemClick }) => {\n  const theme = useContext(ThemeContext);\n  const styles = getContextMenuStyles(theme);\n\n  if (group.items.length === 0) {\n    return null;\n  }\n\n  return (\n    <div>\n      {group.label && <div className={styles.groupLabel}>{group.label}</div>}\n      <List\n        items={group.items || []}\n        renderItem={item => {\n          return (\n            <ContextMenuItem\n              url={item.url}\n              label={item.label}\n              target={item.target}\n              icon={item.icon}\n              onClick={(e: React.MouseEvent<HTMLElement>) => {\n                if (item.onClick) {\n                  item.onClick(e);\n                }\n\n                if (onItemClick) {\n                  onItemClick();\n                }\n              }}\n            />\n          );\n        }}\n      />\n    </div>\n  );\n};\nContextMenu.displayName = 'ContextMenu';\n","import { GrafanaTheme, selectThemeVariant, ThemeContext } from '../../index';\nimport { css, cx } from 'emotion';\nimport _ from 'lodash';\nimport React, { useRef, useContext, useMemo } from 'react';\nimport useClickAway from 'react-use/lib/useClickAway';\nimport { List } from '../index';\nimport tinycolor from 'tinycolor2';\nimport { stylesFactory } from '../../themes';\n\nexport enum VariableOrigin {\n  Series = 'series',\n  Field = 'field',\n  Value = 'value',\n  BuiltIn = 'built-in',\n  Template = 'template',\n}\n\nexport interface VariableSuggestion {\n  value: string;\n  label: string;\n  documentation?: string;\n  origin: VariableOrigin;\n}\n\ninterface DataLinkSuggestionsProps {\n  suggestions: VariableSuggestion[];\n  activeIndex: number;\n  onSuggestionSelect: (suggestion: VariableSuggestion) => void;\n  onClose?: () => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  const wrapperBg = selectThemeVariant(\n    {\n      light: theme.colors.white,\n      dark: theme.colors.dark2,\n    },\n    theme.type\n  );\n\n  const wrapperShadow = selectThemeVariant(\n    {\n      light: theme.colors.gray5,\n      dark: theme.colors.black,\n    },\n    theme.type\n  );\n\n  const itemColor = selectThemeVariant(\n    {\n      light: theme.colors.black,\n      dark: theme.colors.white,\n    },\n    theme.type\n  );\n\n  const itemDocsColor = selectThemeVariant(\n    {\n      light: theme.colors.dark3,\n      dark: theme.colors.gray2,\n    },\n    theme.type\n  );\n\n  const itemBgHover = selectThemeVariant(\n    {\n      light: theme.colors.gray5,\n      dark: theme.colors.dark7,\n    },\n    theme.type\n  );\n\n  const itemBgActive = selectThemeVariant(\n    {\n      light: theme.colors.gray6,\n      dark: theme.colors.dark9,\n    },\n    theme.type\n  );\n\n  const separatorColor = selectThemeVariant(\n    {\n      light: tinycolor(wrapperBg.toString())\n        .darken(10)\n        .toString(),\n      dark: tinycolor(wrapperBg.toString())\n        .lighten(10)\n        .toString(),\n    },\n    theme.type\n  );\n\n  return {\n    list: css`\n      border-bottom: 1px solid ${separatorColor};\n      &:last-child {\n        border: none;\n      }\n    `,\n    wrapper: css`\n      background: ${wrapperBg};\n      z-index: 1;\n      width: 250px;\n      box-shadow: 0 5px 10px 0 ${wrapperShadow};\n    `,\n    item: css`\n      background: none;\n      padding: 2px 8px;\n      color: ${itemColor};\n      cursor: pointer;\n      &:hover {\n        background: ${itemBgHover};\n      }\n    `,\n    label: css`\n      color: ${theme.colors.textWeak};\n    `,\n    activeItem: css`\n      background: ${itemBgActive};\n      &:hover {\n        background: ${itemBgActive};\n      }\n    `,\n    itemValue: css`\n      font-family: ${theme.typography.fontFamily.monospace};\n      font-size: ${theme.typography.size.sm};\n    `,\n    itemDocs: css`\n      margin-top: ${theme.spacing.xs};\n      color: ${itemDocsColor};\n    `,\n  };\n});\n\nexport const DataLinkSuggestions: React.FC<DataLinkSuggestionsProps> = ({ suggestions, ...otherProps }) => {\n  const ref = useRef(null);\n  const theme = useContext(ThemeContext);\n  useClickAway(ref, () => {\n    if (otherProps.onClose) {\n      otherProps.onClose();\n    }\n  });\n\n  const groupedSuggestions = useMemo(() => {\n    return _.groupBy(suggestions, s => s.origin);\n  }, [suggestions]);\n\n  const styles = getStyles(theme);\n  return (\n    <div ref={ref} className={styles.wrapper}>\n      {Object.keys(groupedSuggestions).map((key, i) => {\n        const indexOffset =\n          i === 0\n            ? 0\n            : Object.keys(groupedSuggestions).reduce((acc, current, index) => {\n                if (index >= i) {\n                  return acc;\n                }\n                return acc + groupedSuggestions[current].length;\n              }, 0);\n\n        return (\n          <DataLinkSuggestionsList\n            {...otherProps}\n            suggestions={groupedSuggestions[key]}\n            label={`${_.capitalize(key)}`}\n            activeIndex={otherProps.activeIndex}\n            activeIndexOffset={indexOffset}\n            key={key}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nDataLinkSuggestions.displayName = 'DataLinkSuggestions';\n\ninterface DataLinkSuggestionsListProps extends DataLinkSuggestionsProps {\n  label: string;\n  activeIndexOffset: number;\n}\n\nconst DataLinkSuggestionsList: React.FC<DataLinkSuggestionsListProps> = React.memo(\n  ({ activeIndex, activeIndexOffset, label, onClose, onSuggestionSelect, suggestions }) => {\n    const theme = useContext(ThemeContext);\n    const styles = getStyles(theme);\n\n    return (\n      <>\n        <List\n          className={styles.list}\n          items={suggestions}\n          renderItem={(item, index) => {\n            return (\n              <div\n                className={cx(styles.item, index + activeIndexOffset === activeIndex && styles.activeItem)}\n                onClick={() => {\n                  onSuggestionSelect(item);\n                }}\n                title={item.documentation}\n              >\n                <span className={styles.itemValue}>\n                  <span className={styles.label}>{label}</span> {item.label}\n                </span>\n              </div>\n            );\n          }}\n        />\n      </>\n    );\n  }\n);\n\nDataLinkSuggestionsList.displayName = 'DataLinkSuggestionsList';\n","export class SelectionReference {\n  getBoundingClientRect() {\n    const selection = window.getSelection();\n    const node = selection && selection.anchorNode;\n\n    if (node && node.parentElement) {\n      const rect = node.parentElement.getBoundingClientRect();\n      return rect;\n    }\n\n    return {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      width: 0,\n      height: 0,\n    };\n  }\n\n  get clientWidth() {\n    return this.getBoundingClientRect().width;\n  }\n\n  get clientHeight() {\n    return this.getBoundingClientRect().height;\n  }\n}\n","import React, { useState, useMemo, useContext, useRef, RefObject, memo, useEffect } from 'react';\nimport usePrevious from 'react-use/lib/usePrevious';\nimport { VariableSuggestion, VariableOrigin, DataLinkSuggestions } from './DataLinkSuggestions';\nimport { ThemeContext, DataLinkBuiltInVars, makeValue } from '../../index';\nimport { SelectionReference } from './SelectionReference';\nimport { Portal } from '../index';\n\nimport { Editor } from '@grafana/slate-react';\nimport { Value } from 'slate';\nimport Plain from 'slate-plain-serializer';\nimport { Popper as ReactPopper } from 'react-popper';\nimport { css, cx } from 'emotion';\n\nimport { SlatePrism } from '../../slate-plugins';\nimport { SCHEMA } from '../../utils/slate';\nimport { stylesFactory } from '../../themes';\nimport { GrafanaTheme } from '../../types';\n\nconst modulo = (a: number, n: number) => a - n * Math.floor(a / n);\n\ninterface DataLinkInputProps {\n  value: string;\n  onChange: (url: string, callback?: () => void) => void;\n  suggestions: VariableSuggestion[];\n}\n\nconst plugins = [\n  SlatePrism({\n    onlyIn: (node: any) => node.type === 'code_block',\n    getSyntax: () => 'links',\n  }),\n];\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => ({\n  editor: css`\n    .token.builtInVariable {\n      color: ${theme.colors.queryGreen};\n    }\n    .token.variable {\n      color: ${theme.colors.queryKeyword};\n    }\n  `,\n}));\n\n// This memoised also because rerendering the slate editor grabs focus which created problem in some cases this\n// was used and changes to different state were propagated here.\nexport const DataLinkInput: React.FC<DataLinkInputProps> = memo(({ value, onChange, suggestions }) => {\n  const editorRef = useRef<Editor>() as RefObject<Editor>;\n  const theme = useContext(ThemeContext);\n  const styles = getStyles(theme);\n  const [showingSuggestions, setShowingSuggestions] = useState(false);\n  const [suggestionsIndex, setSuggestionsIndex] = useState(0);\n  const [linkUrl, setLinkUrl] = useState<Value>(makeValue(value));\n  const prevLinkUrl = usePrevious<Value>(linkUrl);\n\n  // Workaround for https://github.com/ianstormtaylor/slate/issues/2927\n  const stateRef = useRef({ showingSuggestions, suggestions, suggestionsIndex, linkUrl, onChange });\n  stateRef.current = { showingSuggestions, suggestions, suggestionsIndex, linkUrl, onChange };\n\n  // SelectionReference is used to position the variables suggestion relatively to current DOM selection\n  const selectionRef = useMemo(() => new SelectionReference(), [setShowingSuggestions, linkUrl]);\n\n  const onKeyDown = React.useCallback((event: KeyboardEvent, next: () => any) => {\n    if (!stateRef.current.showingSuggestions) {\n      if (event.key === '=' || event.key === '$' || (event.keyCode === 32 && event.ctrlKey)) {\n        return setShowingSuggestions(true);\n      }\n      return next();\n    }\n\n    switch (event.key) {\n      case 'Backspace':\n      case 'Escape':\n        setShowingSuggestions(false);\n        return setSuggestionsIndex(0);\n\n      case 'Enter':\n        event.preventDefault();\n        return onVariableSelect(stateRef.current.suggestions[stateRef.current.suggestionsIndex]);\n\n      case 'ArrowDown':\n      case 'ArrowUp':\n        event.preventDefault();\n        const direction = event.key === 'ArrowDown' ? 1 : -1;\n        return setSuggestionsIndex(index => modulo(index + direction, stateRef.current.suggestions.length));\n      default:\n        return next();\n    }\n  }, []);\n\n  useEffect(() => {\n    // Update the state of the link in the parent. This is basically done on blur but we need to do it after\n    // our state have been updated. The duplicity of state is done for perf reasons and also because local\n    // state also contains things like selection and formating.\n    if (prevLinkUrl && prevLinkUrl.selection.isFocused && !linkUrl.selection.isFocused) {\n      stateRef.current.onChange(Plain.serialize(linkUrl));\n    }\n  }, [linkUrl, prevLinkUrl]);\n\n  const onUrlChange = React.useCallback(({ value }: { value: Value }) => {\n    setLinkUrl(value);\n  }, []);\n\n  const onVariableSelect = (item: VariableSuggestion, editor = editorRef.current!) => {\n    const includeDollarSign = Plain.serialize(editor.value).slice(-1) !== '$';\n    if (item.origin !== VariableOrigin.Template || item.value === DataLinkBuiltInVars.includeVars) {\n      editor.insertText(`${includeDollarSign ? '$' : ''}\\{${item.value}}`);\n    } else {\n      editor.insertText(`var-${item.value}=$\\{${item.value}}`);\n    }\n\n    setLinkUrl(editor.value);\n    setShowingSuggestions(false);\n\n    setSuggestionsIndex(0);\n    onChange(Plain.serialize(editor.value));\n  };\n\n  return (\n    <div\n      className={cx(\n        'gf-form-input',\n        css`\n          position: relative;\n          height: auto;\n        `\n      )}\n    >\n      <div className=\"slate-query-field\">\n        {showingSuggestions && (\n          <Portal>\n            <ReactPopper\n              referenceElement={selectionRef}\n              placement=\"top-end\"\n              modifiers={{\n                preventOverflow: { enabled: true, boundariesElement: 'window' },\n                arrow: { enabled: false },\n                offset: { offset: 250 }, // width of the suggestions menu\n              }}\n            >\n              {({ ref, style, placement }) => {\n                return (\n                  <div ref={ref} style={style} data-placement={placement}>\n                    <DataLinkSuggestions\n                      suggestions={stateRef.current.suggestions}\n                      onSuggestionSelect={onVariableSelect}\n                      onClose={() => setShowingSuggestions(false)}\n                      activeIndex={suggestionsIndex}\n                    />\n                  </div>\n                );\n              }}\n            </ReactPopper>\n          </Portal>\n        )}\n        <Editor\n          schema={SCHEMA}\n          ref={editorRef}\n          placeholder=\"http://your-grafana.com/d/000000010/annotations\"\n          value={stateRef.current.linkUrl}\n          onChange={onUrlChange}\n          onKeyDown={(event, _editor, next) => onKeyDown(event as KeyboardEvent, next)}\n          plugins={plugins}\n          className={styles.editor}\n        />\n      </div>\n    </div>\n  );\n});\n\nDataLinkInput.displayName = 'DataLinkInput';\n","// Libraries\nimport React, { FC, useContext } from 'react';\n// @ts-ignore\nimport Prism from 'prismjs';\n// Components\nimport { css } from 'emotion';\nimport { DataLink } from '@grafana/data';\nimport { ThemeContext } from '../../index';\nimport { Button } from '../index';\nimport { DataLinkEditor } from './DataLinkEditor';\nimport { VariableSuggestion } from './DataLinkSuggestions';\n\ninterface DataLinksEditorProps {\n  value: DataLink[];\n  onChange: (links: DataLink[], callback?: () => void) => void;\n  suggestions: VariableSuggestion[];\n  maxLinks?: number;\n}\n\nPrism.languages['links'] = {\n  builtInVariable: {\n    pattern: /(\\${\\S+?})/,\n  },\n};\n\nexport const DataLinksEditor: FC<DataLinksEditorProps> = React.memo(({ value, onChange, suggestions, maxLinks }) => {\n  const theme = useContext(ThemeContext);\n\n  const onAdd = () => {\n    onChange(value ? [...value, { url: '', title: '' }] : [{ url: '', title: '' }]);\n  };\n\n  const onLinkChanged = (linkIndex: number, newLink: DataLink, callback?: () => void) => {\n    onChange(\n      value.map((item, listIndex) => {\n        if (linkIndex === listIndex) {\n          return newLink;\n        }\n        return item;\n      }),\n      callback\n    );\n  };\n\n  const onRemove = (link: DataLink) => {\n    onChange(value.filter(item => item !== link));\n  };\n\n  return (\n    <>\n      {value && value.length > 0 && (\n        <div\n          className={css`\n            margin-bottom: ${theme.spacing.sm};\n          `}\n        >\n          {value.map((link, index) => (\n            <DataLinkEditor\n              key={index.toString()}\n              index={index}\n              isLast={index === value.length - 1}\n              value={link}\n              onChange={onLinkChanged}\n              onRemove={onRemove}\n              suggestions={suggestions}\n            />\n          ))}\n        </div>\n      )}\n\n      {(!value || (value && value.length < (maxLinks || Infinity))) && (\n        <Button variant=\"inverse\" icon=\"fa fa-plus\" onClick={() => onAdd()}>\n          Add link\n        </Button>\n      )}\n    </>\n  );\n});\n\nDataLinksEditor.displayName = 'DataLinksEditor';\n","import React, { useState, ChangeEvent, useContext } from 'react';\nimport { DataLink } from '@grafana/data';\nimport { FormField, Switch } from '../index';\nimport { VariableSuggestion } from './DataLinkSuggestions';\nimport { css } from 'emotion';\nimport { ThemeContext, stylesFactory } from '../../themes/index';\nimport { DataLinkInput } from './DataLinkInput';\nimport { GrafanaTheme } from '../../types';\n\ninterface DataLinkEditorProps {\n  index: number;\n  isLast: boolean;\n  value: DataLink;\n  suggestions: VariableSuggestion[];\n  onChange: (index: number, link: DataLink, callback?: () => void) => void;\n  onRemove: (link: DataLink) => void;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => ({\n  listItem: css`\n    margin-bottom: ${theme.spacing.sm};\n  `,\n  infoText: css`\n    padding-bottom: ${theme.spacing.md};\n    margin-left: 66px;\n    color: ${theme.colors.textWeak};\n  `,\n}));\n\nexport const DataLinkEditor: React.FC<DataLinkEditorProps> = React.memo(\n  ({ index, value, onChange, onRemove, suggestions, isLast }) => {\n    const theme = useContext(ThemeContext);\n    const styles = getStyles(theme);\n    const [title, setTitle] = useState(value.title);\n\n    const onUrlChange = (url: string, callback?: () => void) => {\n      onChange(index, { ...value, url }, callback);\n    };\n    const onTitleChange = (event: ChangeEvent<HTMLInputElement>) => {\n      setTitle(event.target.value);\n    };\n\n    const onTitleBlur = () => {\n      onChange(index, { ...value, title: title });\n    };\n\n    const onRemoveClick = () => {\n      onRemove(value);\n    };\n\n    const onOpenInNewTabChanged = () => {\n      onChange(index, { ...value, targetBlank: !value.targetBlank });\n    };\n\n    return (\n      <div className={styles.listItem}>\n        <div className=\"gf-form gf-form--inline\">\n          <FormField\n            className=\"gf-form--grow\"\n            label=\"Title\"\n            value={title}\n            onChange={onTitleChange}\n            onBlur={onTitleBlur}\n            inputWidth={0}\n            labelWidth={5}\n            placeholder=\"Show details\"\n          />\n          <Switch label=\"Open in new tab\" checked={value.targetBlank || false} onChange={onOpenInNewTabChanged} />\n          <button className=\"gf-form-label gf-form-label--btn\" onClick={onRemoveClick} title=\"Remove link\">\n            <i className=\"fa fa-times\" />\n          </button>\n        </div>\n        <FormField\n          label=\"URL\"\n          labelWidth={5}\n          inputEl={<DataLinkInput value={value.url} onChange={onUrlChange} suggestions={suggestions} />}\n          className={css`\n            width: 100%;\n          `}\n        />\n        {isLast && (\n          <div className={styles.infoText}>\n            With data links you can reference data variables like series name, labels and values. Type CMD+Space,\n            CTRL+Space, or $ to open variable suggestions.\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nDataLinkEditor.displayName = 'DataLinkEditor';\n","import React from 'react';\nimport { WithContextMenu } from '../ContextMenu/WithContextMenu';\nimport { LinkModelSupplier } from '@grafana/data';\nimport { linkModelToContextMenuItems } from '../../utils/dataLinks';\nimport { css } from 'emotion';\n\ninterface DataLinksContextMenuProps {\n  children: (props: { openMenu?: React.MouseEventHandler<HTMLElement>; targetClassName?: string }) => JSX.Element;\n  links?: LinkModelSupplier<any>;\n}\n\nexport const DataLinksContextMenu: React.FC<DataLinksContextMenuProps> = ({ children, links }) => {\n  if (!links) {\n    return children({});\n  }\n\n  const getDataLinksContextMenuItems = () => {\n    return [{ items: linkModelToContextMenuItems(links), label: 'Data links' }];\n  };\n\n  // Use this class name (exposed via render prop) to add context menu indicator to the click target of the visualization\n  const targetClassName = css`\n    cursor: context-menu;\n  `;\n\n  return (\n    <WithContextMenu getContextMenuItems={getDataLinksContextMenuItems}>\n      {({ openMenu }) => {\n        return children({ openMenu, targetClassName });\n      }}\n    </WithContextMenu>\n  );\n};\n","import React, { useState } from 'react';\nimport { ContextMenu, ContextMenuGroup } from '../ContextMenu/ContextMenu';\n\ninterface WithContextMenuProps {\n  children: (props: { openMenu: React.MouseEventHandler<HTMLElement> }) => JSX.Element;\n  getContextMenuItems: () => ContextMenuGroup[];\n}\n\nexport const WithContextMenu: React.FC<WithContextMenuProps> = ({ children, getContextMenuItems }) => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPositon] = useState({ x: 0, y: 0 });\n\n  return (\n    <>\n      {children({\n        openMenu: e => {\n          setIsMenuOpen(true);\n          setMenuPositon({\n            x: e.pageX,\n            y: e.pageY,\n          });\n        },\n      })}\n\n      {isMenuOpen && (\n        <ContextMenu\n          onClose={() => setIsMenuOpen(false)}\n          x={menuPosition.x}\n          y={menuPosition.y}\n          items={getContextMenuItems()}\n        />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { StatsPicker } from '../StatsPicker/StatsPicker';\nimport { ReduceTransformerOptions, DataTransformerID, ReducerID, transformersRegistry } from '@grafana/data';\nimport { TransformerUIRegistyItem, TransformerUIProps } from './types';\n\n// TODO:  Minimal implementation, needs some <3\nexport const ReduceTransformerEditor: React.FC<TransformerUIProps<ReduceTransformerOptions>> = ({\n  options,\n  onChange,\n  input,\n}) => {\n  return (\n    <StatsPicker\n      width={25}\n      placeholder=\"Choose Stat\"\n      allowMultiple\n      stats={options.reducers || []}\n      onChange={stats => {\n        onChange({\n          ...options,\n          reducers: stats as ReducerID[],\n        });\n      }}\n    />\n  );\n};\n\nexport const reduceTransformRegistryItem: TransformerUIRegistyItem<ReduceTransformerOptions> = {\n  id: DataTransformerID.reduce,\n  component: ReduceTransformerEditor,\n  transformer: transformersRegistry.get(DataTransformerID.reduce),\n  name: 'Reduce',\n  description: 'UI for reduce transformation',\n};\n","import React, { useContext } from 'react';\nimport { FilterFieldsByNameTransformerOptions, DataTransformerID, transformersRegistry, KeyValue } from '@grafana/data';\nimport { TransformerUIProps, TransformerUIRegistyItem } from './types';\nimport { ThemeContext } from '../../themes/ThemeContext';\nimport { css, cx } from 'emotion';\nimport { InlineList } from '../List/InlineList';\n\ninterface FilterByNameTransformerEditorProps extends TransformerUIProps<FilterFieldsByNameTransformerOptions> {}\n\ninterface FilterByNameTransformerEditorState {\n  include: string;\n  options: FieldNameInfo[];\n  selected: string[];\n}\n\ninterface FieldNameInfo {\n  name: string;\n  count: number;\n}\nexport class FilterByNameTransformerEditor extends React.PureComponent<\n  FilterByNameTransformerEditorProps,\n  FilterByNameTransformerEditorState\n> {\n  constructor(props: FilterByNameTransformerEditorProps) {\n    super(props);\n    this.state = {\n      include: props.options.include || '',\n      options: [],\n      selected: [],\n    };\n  }\n\n  componentDidMount() {\n    this.initOptions();\n  }\n\n  private initOptions() {\n    const { input, options } = this.props;\n    const configuredOptions = options.include ? options.include.split('|') : [];\n\n    const allNames: FieldNameInfo[] = [];\n    const byName: KeyValue<FieldNameInfo> = {};\n    for (const frame of input) {\n      for (const field of frame.fields) {\n        let v = byName[field.name];\n        if (!v) {\n          v = byName[field.name] = {\n            name: field.name,\n            count: 0,\n          };\n          allNames.push(v);\n        }\n        v.count++;\n      }\n    }\n\n    if (configuredOptions.length) {\n      const options: FieldNameInfo[] = [];\n      const selected: FieldNameInfo[] = [];\n      for (const v of allNames) {\n        if (configuredOptions.includes(v.name)) {\n          selected.push(v);\n        }\n        options.push(v);\n      }\n\n      this.setState({\n        options,\n        selected: selected.map(s => s.name),\n      });\n    } else {\n      this.setState({ options: allNames, selected: [] });\n    }\n  }\n\n  onFieldToggle = (fieldName: string) => {\n    const { selected } = this.state;\n    if (selected.indexOf(fieldName) > -1) {\n      this.onChange(selected.filter(s => s !== fieldName));\n    } else {\n      this.onChange([...selected, fieldName]);\n    }\n  };\n\n  onChange = (selected: string[]) => {\n    this.setState({ selected });\n    this.props.onChange({\n      ...this.props.options,\n      include: selected.join('|'),\n    });\n  };\n\n  render() {\n    const { options, selected } = this.state;\n    return (\n      <>\n        <InlineList\n          items={options}\n          renderItem={(o, i) => {\n            const label = `${o.name}${o.count > 1 ? ' (' + o.count + ')' : ''}`;\n            return (\n              <span\n                className={css`\n                  margin-right: ${i === options.length - 1 ? '0' : '10px'};\n                `}\n              >\n                <FilterPill\n                  onClick={() => {\n                    this.onFieldToggle(o.name);\n                  }}\n                  label={label}\n                  selected={selected.indexOf(o.name) > -1}\n                />\n              </span>\n            );\n          }}\n        />\n      </>\n    );\n  }\n}\n\ninterface FilterPillProps {\n  selected: boolean;\n  label: string;\n  onClick: React.MouseEventHandler<HTMLElement>;\n}\nconst FilterPill: React.FC<FilterPillProps> = ({ label, selected, onClick }) => {\n  const theme = useContext(ThemeContext);\n  return (\n    <div\n      className={css`\n        padding: ${theme.spacing.xxs} ${theme.spacing.sm};\n        color: white;\n        background: ${selected ? theme.colors.blueLight : theme.colors.blueShade};\n        border-radius: 16px;\n        display: inline-block;\n        cursor: pointer;\n      `}\n      onClick={onClick}\n    >\n      {selected && (\n        <i\n          className={cx(\n            'fa fa-check',\n            css`\n              margin-right: 4px;\n            `\n          )}\n        />\n      )}\n      {label}\n    </div>\n  );\n};\n\nexport const filterFieldsByNameTransformRegistryItem: TransformerUIRegistyItem<FilterFieldsByNameTransformerOptions> = {\n  id: DataTransformerID.filterFieldsByName,\n  component: FilterByNameTransformerEditor,\n  transformer: transformersRegistry.get(DataTransformerID.filterFieldsByName),\n  name: 'Filter by name',\n  description: 'UI for filter by name transformation',\n};\n","// Based on work https://github.com/mohsen1/json-formatter-js\n// License MIT, Copyright (c) 2015 Mohsen Azimi\n\n/*\n * Escapes `\"` characters from string\n */\nfunction escapeString(str: string): string {\n  return str.replace('\"', '\"');\n}\n\n/*\n * Determines if a value is an object\n */\nexport function isObject(value: any): boolean {\n  const type = typeof value;\n  return !!value && type === 'object';\n}\n\n/*\n * Gets constructor name of an object.\n * From http://stackoverflow.com/a/332429\n *\n */\nexport function getObjectName(object: object): string {\n  if (object === undefined) {\n    return '';\n  }\n  if (object === null) {\n    return 'Object';\n  }\n  if (typeof object === 'object' && !object.constructor) {\n    return 'Object';\n  }\n\n  const funcNameRegex = /function ([^(]*)/;\n  const results = funcNameRegex.exec(object.constructor.toString());\n  if (results && results.length > 1) {\n    return results[1];\n  } else {\n    return '';\n  }\n}\n\n/*\n * Gets type of an object. Returns \"null\" for null objects\n */\nexport function getType(object: object): string {\n  if (object === null) {\n    return 'null';\n  }\n  return typeof object;\n}\n\n/*\n * Generates inline preview for a JavaScript object based on a value\n */\nexport function getValuePreview(object: object, value: string): string {\n  const type = getType(object);\n\n  if (type === 'null' || type === 'undefined') {\n    return type;\n  }\n\n  if (type === 'string') {\n    value = '\"' + escapeString(value) + '\"';\n  }\n  if (type === 'function') {\n    // Remove content of the function\n    return (\n      object\n        .toString()\n        .replace(/[\\r\\n]/g, '')\n        .replace(/\\{.*\\}/, '') + '{…}'\n    );\n  }\n  return value;\n}\n\n/*\n * Generates inline preview for a JavaScript object\n */\nlet value = '';\nexport function getPreview(obj: object): string {\n  if (isObject(obj)) {\n    value = getObjectName(obj);\n    if (Array.isArray(obj)) {\n      value += '[' + obj.length + ']';\n    }\n  } else {\n    value = getValuePreview(obj, obj.toString());\n  }\n  return value;\n}\n\n/*\n * Generates a prefixed CSS class name\n */\nexport function cssClass(className: string): string {\n  return `json-formatter-${className}`;\n}\n\n/*\n * Creates a new DOM element with given type and class\n * TODO: move me to helpers\n */\nexport function createElement(type: string, className?: string, content?: Element | string): Element {\n  const el = document.createElement(type);\n  if (className) {\n    el.classList.add(cssClass(className));\n  }\n  if (content !== undefined) {\n    if (content instanceof Node) {\n      el.appendChild(content);\n    } else {\n      el.appendChild(document.createTextNode(String(content)));\n    }\n  }\n  return el;\n}\n","import { Registry } from '@grafana/data';\nimport { reduceTransformRegistryItem } from './ReduceTransformerEditor';\nimport { filterFieldsByNameTransformRegistryItem } from './FilterByNameTransformerEditor';\nimport { TransformerUIRegistyItem } from './types';\n\nexport const transformersUIRegistry = new Registry<TransformerUIRegistyItem<any>>(() => {\n  return [reduceTransformRegistryItem, filterFieldsByNameTransformRegistryItem];\n});\n","// Based on work https://github.com/mohsen1/json-formatter-js\n// License MIT, Copyright (c) 2015 Mohsen Azimi\n\nimport { isObject, getObjectName, getType, getValuePreview, cssClass, createElement } from './helpers';\n\nimport _ from 'lodash';\n\nconst DATE_STRING_REGEX = /(^\\d{1,4}[\\.|\\\\/|-]\\d{1,2}[\\.|\\\\/|-]\\d{1,4})(\\s*(?:0?[1-9]:[0-5]|1(?=[012])\\d:[0-5])\\d\\s*[ap]m)?$/;\nconst PARTIAL_DATE_REGEX = /\\d{2}:\\d{2}:\\d{2} GMT-\\d{4}/;\nconst JSON_DATE_REGEX = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z/;\n\n// When toggleing, don't animated removal or addition of more than a few items\nconst MAX_ANIMATED_TOGGLE_ITEMS = 10;\n\nconst requestAnimationFrame =\n  window.requestAnimationFrame ||\n  ((cb: () => void) => {\n    cb();\n    return 0;\n  });\n\nexport interface JsonExplorerConfig {\n  animateOpen?: boolean;\n  animateClose?: boolean;\n  theme?: string;\n}\n\nconst _defaultConfig: JsonExplorerConfig = {\n  animateOpen: true,\n  animateClose: true,\n};\n\n/**\n * @class JsonExplorer\n *\n * JsonExplorer allows you to render JSON objects in HTML with a\n * **collapsible** navigation.\n */\nexport class JsonExplorer {\n  // Hold the open state after the toggler is used\n  private _isOpen: boolean | null = null;\n\n  // A reference to the element that we render to\n  private element: Element | null = null;\n\n  private skipChildren = false;\n\n  /**\n   * @param {object} json The JSON object you want to render. It has to be an\n   * object or array. Do NOT pass raw JSON string.\n   *\n   * @param {number} [open=1] his number indicates up to how many levels the\n   * rendered tree should expand. Set it to `0` to make the whole tree collapsed\n   * or set it to `Infinity` to expand the tree deeply\n   *\n   * @param {object} [config=defaultConfig] -\n   *  defaultConfig = {\n   *   hoverPreviewEnabled: false,\n   *   hoverPreviewArrayCount: 100,\n   *   hoverPreviewFieldCount: 5\n   * }\n   *\n   * Available configurations:\n   *  #####Hover Preview\n   * * `hoverPreviewEnabled`:  enable preview on hover\n   * * `hoverPreviewArrayCount`: number of array items to show in preview Any\n   *    array larger than this number will be shown as `Array[XXX]` where `XXX`\n   *    is length of the array.\n   * * `hoverPreviewFieldCount`: number of object properties to show for object\n   *   preview. Any object with more properties that thin number will be\n   *   truncated.\n   *\n   * @param {string} [key=undefined] The key that this object in it's parent\n   * context\n   */\n  constructor(\n    public json: any,\n    private open = 1,\n    private config: JsonExplorerConfig = _defaultConfig,\n    private key?: string\n  ) {}\n\n  /*\n   * is formatter open?\n   */\n  private get isOpen(): boolean {\n    if (this._isOpen !== null) {\n      return this._isOpen;\n    } else {\n      return this.open > 0;\n    }\n  }\n\n  /*\n   * set open state (from toggler)\n   */\n  private set isOpen(value: boolean) {\n    this._isOpen = value;\n  }\n\n  /*\n   * is this a date string?\n   */\n  private get isDate(): boolean {\n    return (\n      this.type === 'string' &&\n      (DATE_STRING_REGEX.test(this.json) || JSON_DATE_REGEX.test(this.json) || PARTIAL_DATE_REGEX.test(this.json))\n    );\n  }\n\n  /*\n   * is this a URL string?\n   */\n  private get isUrl(): boolean {\n    return this.type === 'string' && this.json.indexOf('http') === 0;\n  }\n\n  /*\n   * is this an array?\n   */\n  private get isArray(): boolean {\n    return Array.isArray(this.json);\n  }\n\n  /*\n   * is this an object?\n   * Note: In this context arrays are object as well\n   */\n  private get isObject(): boolean {\n    return isObject(this.json);\n  }\n\n  /*\n   * is this an empty object with no properties?\n   */\n  private get isEmptyObject(): boolean {\n    return !this.keys.length && !this.isArray;\n  }\n\n  /*\n   * is this an empty object or array?\n   */\n  private get isEmpty(): boolean {\n    return this.isEmptyObject || (this.keys && !this.keys.length && this.isArray);\n  }\n\n  /*\n   * did we receive a key argument?\n   * This means that the formatter was called as a sub formatter of a parent formatter\n   */\n  private get hasKey(): boolean {\n    return typeof this.key !== 'undefined';\n  }\n\n  /*\n   * if this is an object, get constructor function name\n   */\n  private get constructorName(): string {\n    return getObjectName(this.json);\n  }\n\n  /*\n   * get type of this value\n   * Possible values: all JavaScript primitive types plus \"array\" and \"null\"\n   */\n  private get type(): string {\n    return getType(this.json);\n  }\n\n  /*\n   * get object keys\n   * If there is an empty key we pad it wit quotes to make it visible\n   */\n  private get keys(): string[] {\n    if (this.isObject) {\n      return Object.keys(this.json).map(key => (key ? key : '\"\"'));\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Toggles `isOpen` state\n   *\n   */\n  toggleOpen() {\n    this.isOpen = !this.isOpen;\n\n    if (this.element) {\n      if (this.isOpen) {\n        this.appendChildren(this.config.animateOpen);\n      } else {\n        this.removeChildren(this.config.animateClose);\n      }\n      this.element.classList.toggle(cssClass('open'));\n    }\n  }\n\n  /**\n   * Open all children up to a certain depth.\n   * Allows actions such as expand all/collapse all\n   *\n   */\n  openAtDepth(depth = 1) {\n    if (depth < 0) {\n      return;\n    }\n\n    this.open = depth;\n    this.isOpen = depth !== 0;\n\n    if (this.element) {\n      this.removeChildren(false);\n\n      if (depth === 0) {\n        this.element.classList.remove(cssClass('open'));\n      } else {\n        this.appendChildren(this.config.animateOpen);\n        this.element.classList.add(cssClass('open'));\n      }\n    }\n  }\n\n  isNumberArray() {\n    return this.json.length > 0 && this.json.length < 4 && (_.isNumber(this.json[0]) || _.isNumber(this.json[1]));\n  }\n\n  renderArray() {\n    const arrayWrapperSpan = createElement('span');\n    arrayWrapperSpan.appendChild(createElement('span', 'bracket', '['));\n\n    // some pretty handling of number arrays\n    if (this.isNumberArray()) {\n      this.json.forEach((val: any, index: number) => {\n        if (index > 0) {\n          arrayWrapperSpan.appendChild(createElement('span', 'array-comma', ','));\n        }\n        arrayWrapperSpan.appendChild(createElement('span', 'number', val));\n      });\n      this.skipChildren = true;\n    } else {\n      arrayWrapperSpan.appendChild(createElement('span', 'number', this.json.length));\n    }\n\n    arrayWrapperSpan.appendChild(createElement('span', 'bracket', ']'));\n    return arrayWrapperSpan;\n  }\n\n  /**\n   * Renders an HTML element and installs event listeners\n   *\n   * @returns {HTMLDivElement}\n   */\n  render(skipRoot = false): HTMLDivElement {\n    // construct the root element and assign it to this.element\n    this.element = createElement('div', 'row');\n\n    // construct the toggler link\n    const togglerLink = createElement('a', 'toggler-link');\n    const togglerIcon = createElement('span', 'toggler');\n\n    // if this is an object we need a wrapper span (toggler)\n    if (this.isObject) {\n      togglerLink.appendChild(togglerIcon);\n    }\n\n    // if this is child of a parent formatter we need to append the key\n    if (this.hasKey) {\n      togglerLink.appendChild(createElement('span', 'key', `${this.key}:`));\n    }\n\n    // Value for objects and arrays\n    if (this.isObject) {\n      // construct the value holder element\n      const value = createElement('span', 'value');\n\n      // we need a wrapper span for objects\n      const objectWrapperSpan = createElement('span');\n\n      // get constructor name and append it to wrapper span\n      const constructorName = createElement('span', 'constructor-name', this.constructorName);\n      objectWrapperSpan.appendChild(constructorName);\n\n      // if it's an array append the array specific elements like brackets and length\n      if (this.isArray) {\n        const arrayWrapperSpan = this.renderArray();\n        objectWrapperSpan.appendChild(arrayWrapperSpan);\n      }\n\n      // append object wrapper span to toggler link\n      value.appendChild(objectWrapperSpan);\n      togglerLink.appendChild(value);\n      // Primitive values\n    } else {\n      // make a value holder element\n      const value = this.isUrl ? createElement('a') : createElement('span');\n\n      // add type and other type related CSS classes\n      value.classList.add(cssClass(this.type));\n      if (this.isDate) {\n        value.classList.add(cssClass('date'));\n      }\n      if (this.isUrl) {\n        value.classList.add(cssClass('url'));\n        value.setAttribute('href', this.json);\n      }\n\n      // Append value content to value element\n      const valuePreview = getValuePreview(this.json, this.json);\n      value.appendChild(document.createTextNode(valuePreview));\n\n      // append the value element to toggler link\n      togglerLink.appendChild(value);\n    }\n\n    // construct a children element\n    const children = createElement('div', 'children');\n\n    // set CSS classes for children\n    if (this.isObject) {\n      children.classList.add(cssClass('object'));\n    }\n    if (this.isArray) {\n      children.classList.add(cssClass('array'));\n    }\n    if (this.isEmpty) {\n      children.classList.add(cssClass('empty'));\n    }\n\n    // set CSS classes for root element\n    if (this.config && this.config.theme) {\n      this.element.classList.add(cssClass(this.config.theme));\n    }\n    if (this.isOpen) {\n      this.element.classList.add(cssClass('open'));\n    }\n\n    // append toggler and children elements to root element\n    if (!skipRoot) {\n      this.element.appendChild(togglerLink);\n    }\n\n    if (!this.skipChildren) {\n      this.element.appendChild(children);\n    } else {\n      // remove togglerIcon\n      togglerLink.removeChild(togglerIcon);\n    }\n\n    // if formatter is set to be open call appendChildren\n    if (this.isObject && this.isOpen) {\n      this.appendChildren();\n    }\n\n    // add event listener for toggling\n    if (this.isObject) {\n      togglerLink.addEventListener('click', this.toggleOpen.bind(this));\n    }\n\n    return this.element as HTMLDivElement;\n  }\n\n  /**\n   * Appends all the children to children element\n   * Animated option is used when user triggers this via a click\n   */\n  appendChildren(animated = false) {\n    const children = this.element && this.element.querySelector(`div.${cssClass('children')}`);\n\n    if (!children || this.isEmpty) {\n      return;\n    }\n\n    if (animated) {\n      let index = 0;\n      const addAChild = () => {\n        const key = this.keys[index];\n        const formatter = new JsonExplorer(this.json[key], this.open - 1, this.config, key);\n        children.appendChild(formatter.render());\n\n        index += 1;\n\n        if (index < this.keys.length) {\n          if (index > MAX_ANIMATED_TOGGLE_ITEMS) {\n            addAChild();\n          } else {\n            requestAnimationFrame(addAChild);\n          }\n        }\n      };\n\n      requestAnimationFrame(addAChild);\n    } else {\n      this.keys.forEach(key => {\n        const formatter = new JsonExplorer(this.json[key], this.open - 1, this.config, key);\n        children.appendChild(formatter.render());\n      });\n    }\n  }\n\n  /**\n   * Removes all the children from children element\n   * Animated option is used when user triggers this via a click\n   */\n  removeChildren(animated = false) {\n    const childrenElement =\n      this.element && (this.element.querySelector(`div.${cssClass('children')}`) as HTMLDivElement);\n\n    if (animated) {\n      let childrenRemoved = 0;\n      const removeAChild = () => {\n        if (childrenElement && childrenElement.children.length) {\n          childrenElement.removeChild(childrenElement.children[0]);\n          childrenRemoved += 1;\n          if (childrenRemoved > MAX_ANIMATED_TOGGLE_ITEMS) {\n            removeAChild();\n          } else {\n            requestAnimationFrame(removeAChild);\n          }\n        }\n      };\n      requestAnimationFrame(removeAChild);\n    } else {\n      if (childrenElement) {\n        childrenElement.innerHTML = '';\n      }\n    }\n  }\n}\n","import { DataTransformerID, DataTransformerConfig, DataFrame, transformDataFrame } from '@grafana/data';\nimport { Select } from '../Select/Select';\nimport { transformersUIRegistry } from './transformers';\nimport React from 'react';\nimport { TransformationRow } from './TransformationRow';\nimport { Button } from '../Button/Button';\nimport { css } from 'emotion';\n\ninterface TransformationsEditorState {\n  updateCounter: number;\n}\n\ninterface TransformationsEditorProps {\n  onChange: (transformations: DataTransformerConfig[]) => void;\n  transformations: DataTransformerConfig[];\n  dataFrames: DataFrame[];\n}\n\nexport class TransformationsEditor extends React.PureComponent<TransformationsEditorProps, TransformationsEditorState> {\n  state = { updateCounter: 0 };\n\n  onTransformationAdd = () => {\n    const { transformations, onChange } = this.props;\n    onChange([\n      ...transformations,\n      {\n        id: DataTransformerID.noop,\n        options: {},\n      },\n    ]);\n    this.setState({ updateCounter: this.state.updateCounter + 1 });\n  };\n\n  onTransformationChange = (idx: number, config: DataTransformerConfig) => {\n    const { transformations, onChange } = this.props;\n    transformations[idx] = config;\n    onChange(transformations);\n    this.setState({ updateCounter: this.state.updateCounter + 1 });\n  };\n\n  onTransformationRemove = (idx: number) => {\n    const { transformations, onChange } = this.props;\n    transformations.splice(idx, 1);\n    onChange(transformations);\n    this.setState({ updateCounter: this.state.updateCounter + 1 });\n  };\n\n  renderTransformationEditors = () => {\n    const { transformations, dataFrames } = this.props;\n    const hasTransformations = transformations.length > 0;\n    const preTransformData = dataFrames;\n\n    if (!hasTransformations) {\n      return undefined;\n    }\n\n    const availableTransformers = transformersUIRegistry.list().map(t => {\n      return {\n        value: t.transformer.id,\n        label: t.transformer.name,\n      };\n    });\n\n    return (\n      <>\n        {transformations.map((t, i) => {\n          let editor, input;\n          if (t.id === DataTransformerID.noop) {\n            return (\n              <Select\n                className={css`\n                  margin-bottom: 10px;\n                `}\n                key={`${t.id}-${i}`}\n                options={availableTransformers}\n                placeholder=\"Select transformation\"\n                onChange={v => {\n                  this.onTransformationChange(i, {\n                    id: v.value as string,\n                    options: {},\n                  });\n                }}\n              />\n            );\n          }\n          const transformationUI = transformersUIRegistry.getIfExists(t.id);\n          input = transformDataFrame(transformations.slice(0, i), preTransformData);\n\n          if (transformationUI) {\n            editor = React.createElement(transformationUI.component, {\n              options: { ...transformationUI.transformer.defaultOptions, ...t.options },\n              input,\n              onChange: (options: any) => {\n                this.onTransformationChange(i, {\n                  id: t.id,\n                  options,\n                });\n              },\n            });\n          }\n\n          return (\n            <TransformationRow\n              key={`${t.id}-${i}`}\n              input={input || []}\n              onRemove={() => this.onTransformationRemove(i)}\n              editor={editor}\n              name={transformationUI ? transformationUI.name : ''}\n              description={transformationUI ? transformationUI.description : ''}\n            />\n          );\n        })}\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <>\n        {this.renderTransformationEditors()}\n        <Button variant=\"inverse\" icon=\"fa fa-plus\" onClick={this.onTransformationAdd}>\n          Add transformation\n        </Button>\n      </>\n    );\n  }\n}\n","export { DeleteButton } from './DeleteButton/DeleteButton';\nexport { Tooltip, PopoverContent } from './Tooltip/Tooltip';\nexport { PopoverController } from './Tooltip/PopoverController';\nexport { Popover } from './Tooltip/Popover';\nexport { Portal } from './Portal/Portal';\nexport { CustomScrollbar } from './CustomScrollbar/CustomScrollbar';\n\nexport * from './Button/Button';\nexport { ButtonVariant } from './Button/AbstractButton';\n\n// Select\nexport { Select, AsyncSelect } from './Select/Select';\nexport { IndicatorsContainer } from './Select/IndicatorsContainer';\nexport { NoOptionsMessage } from './Select/NoOptionsMessage';\nexport { default as resetSelectStyles } from './Select/resetSelectStyles';\nexport { ButtonSelect } from './Select/ButtonSelect';\n\n// Forms\nexport { FormLabel } from './FormLabel/FormLabel';\nexport { FormField } from './FormField/FormField';\nexport { SecretFormField } from './SecretFormFied/SecretFormField';\n\nexport { LoadingPlaceholder } from './LoadingPlaceholder/LoadingPlaceholder';\nexport { ColorPicker, SeriesColorPicker } from './ColorPicker/ColorPicker';\nexport { SeriesColorPickerPopover, SeriesColorPickerPopoverWithTheme } from './ColorPicker/SeriesColorPickerPopover';\n\nexport { PanelOptionsGroup } from './PanelOptionsGroup/PanelOptionsGroup';\nexport { PanelOptionsGrid } from './PanelOptionsGrid/PanelOptionsGrid';\nexport { ValueMappingsEditor } from './ValueMappingsEditor/ValueMappingsEditor';\nexport { Switch } from './Switch/Switch';\nexport { EmptySearchResult } from './EmptySearchResult/EmptySearchResult';\nexport { PieChart, PieChartType } from './PieChart/PieChart';\nexport { UnitPicker } from './UnitPicker/UnitPicker';\nexport { StatsPicker } from './StatsPicker/StatsPicker';\nexport { Input, InputStatus } from './Input/Input';\nexport { RefreshPicker } from './RefreshPicker/RefreshPicker';\nexport { TimePicker } from './TimePicker/TimePicker';\nexport { TimeOfDayPicker } from './TimePicker/TimeOfDayPicker';\nexport { List } from './List/List';\n\n// Renderless\nexport { SetInterval } from './SetInterval/SetInterval';\n\nexport { Table } from './Table/Table';\nexport { TableInputCSV } from './Table/TableInputCSV';\n\n// Visualizations\nexport { BigValue } from './BigValue/BigValue';\nexport { Gauge } from './Gauge/Gauge';\nexport { Graph } from './Graph/Graph';\nexport { GraphLegend } from './Graph/GraphLegend';\nexport { GraphWithLegend } from './Graph/GraphWithLegend';\nexport { BarGauge } from './BarGauge/BarGauge';\nexport { VizRepeater } from './VizRepeater/VizRepeater';\nexport {\n  LegendOptions,\n  LegendBasicOptions,\n  LegendRenderOptions,\n  LegendList,\n  LegendTable,\n  LegendItem,\n  LegendPlacement,\n  LegendDisplayMode,\n} from './Legend/Legend';\nexport { Alert } from './Alert/Alert';\nexport { GraphSeriesToggler, GraphSeriesTogglerAPI } from './Graph/GraphSeriesToggler';\nexport { Collapse } from './Collapse/Collapse';\nexport { LogLabels } from './Logs/LogLabels';\nexport { LogRows } from './Logs/LogRows';\nexport { getLogRowStyles } from './Logs/getLogRowStyles';\nexport { ToggleButtonGroup, ToggleButton } from './ToggleButtonGroup/ToggleButtonGroup';\n// Panel editors\nexport { ThresholdsEditor } from './ThresholdsEditor/ThresholdsEditor';\nexport { ClickOutsideWrapper } from './ClickOutsideWrapper/ClickOutsideWrapper';\nexport * from './SingleStatShared/index';\nexport { CallToActionCard } from './CallToActionCard/CallToActionCard';\nexport { ContextMenu, ContextMenuItem, ContextMenuGroup, ContextMenuProps } from './ContextMenu/ContextMenu';\nexport { VariableSuggestion, VariableOrigin } from './DataLinks/DataLinkSuggestions';\nexport { DataLinksEditor } from './DataLinks/DataLinksEditor';\nexport { DataLinksContextMenu } from './DataLinks/DataLinksContextMenu';\nexport { SeriesIcon } from './Legend/SeriesIcon';\nexport { transformersUIRegistry } from './TransformersUI/transformers';\nexport { TransformationRow } from './TransformersUI/TransformationRow';\nexport { TransformationsEditor } from './TransformersUI/TransformationsEditor';\nexport { JSONFormatter } from './JSONFormatter/JSONFormatter';\nexport { JsonExplorer } from './JSONFormatter/json_explorer/json_explorer';\nexport { ErrorBoundary, ErrorBoundaryAlert } from './ErrorBoundary/ErrorBoundary';\nexport { AlphaNotice } from './AlphaNotice/AlphaNotice';\n","import React, { PureComponent, createRef } from 'react';\nimport { JsonExplorer } from './json_explorer/json_explorer'; // We have made some monkey-patching of json-formatter-js so we can't switch right now\n\ninterface Props {\n  className?: string;\n  json: {};\n  config?: any;\n  open?: number;\n  onDidRender?: (formattedJson: any) => void;\n}\n\nexport class JSONFormatter extends PureComponent<Props> {\n  private wrapperRef = createRef<HTMLDivElement>();\n\n  static defaultProps = {\n    open: 3,\n    config: {\n      animateOpen: true,\n    },\n  };\n\n  componentDidMount() {\n    this.renderJson();\n  }\n\n  componentDidUpdate() {\n    this.renderJson();\n  }\n\n  renderJson = () => {\n    const { json, config, open, onDidRender } = this.props;\n    const wrapperEl = this.wrapperRef.current;\n    const formatter = new JsonExplorer(json, open, config);\n    // @ts-ignore\n    const hasChildren: boolean = wrapperEl.hasChildNodes();\n    if (hasChildren) {\n      // @ts-ignore\n      wrapperEl.replaceChild(formatter.render(), wrapperEl.lastChild);\n    } else {\n      // @ts-ignore\n      wrapperEl.appendChild(formatter.render());\n    }\n\n    if (onDidRender) {\n      onDidRender(formatter.json);\n    }\n  };\n\n  render() {\n    const { className } = this.props;\n    return <div className={className} ref={this.wrapperRef} />;\n  }\n}\n","import React, { useContext, useState } from 'react';\nimport { ThemeContext } from '../../themes/ThemeContext';\nimport { css } from 'emotion';\nimport { DataFrame } from '@grafana/data';\nimport { JSONFormatter } from '../JSONFormatter/JSONFormatter';\nimport { GrafanaTheme } from '../../types/theme';\n\ninterface TransformationRowProps {\n  name: string;\n  description: string;\n  editor?: JSX.Element;\n  onRemove: () => void;\n  input: DataFrame[];\n}\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  title: css`\n    display: flex;\n    padding: 4px 8px 4px 8px;\n    position: relative;\n    height: 35px;\n    background: ${theme.colors.textFaint};\n    border-radius: 4px 4px 0 0;\n    flex-wrap: nowrap;\n    justify-content: space-between;\n    align-items: center;\n  `,\n  name: css`\n    font-weight: ${theme.typography.weight.semibold};\n    color: ${theme.colors.blue};\n  `,\n  iconRow: css`\n    display: flex;\n  `,\n  icon: css`\n    background: transparent;\n    border: none;\n    box-shadow: none;\n    cursor: pointer;\n    color: ${theme.colors.textWeak};\n    margin-left: ${theme.spacing.sm};\n    &:hover {\n      color: ${theme.colors.text};\n    }\n  `,\n  editor: css`\n    border: 2px dashed ${theme.colors.textFaint};\n    border-top: none;\n    border-radius: 0 0 4px 4px;\n    padding: 8px;\n  `,\n});\n\nexport const TransformationRow = ({ onRemove, editor, name, input }: TransformationRowProps) => {\n  const theme = useContext(ThemeContext);\n  const [viewDebug, setViewDebug] = useState(false);\n  const styles = getStyles(theme);\n  return (\n    <div\n      className={css`\n        margin-bottom: 10px;\n      `}\n    >\n      <div className={styles.title}>\n        <div className={styles.name}>{name}</div>\n        <div className={styles.iconRow}>\n          <div onClick={() => setViewDebug(!viewDebug)} className={styles.icon}>\n            <i className=\"fa fa-fw fa-bug\" />\n          </div>\n          <div onClick={onRemove} className={styles.icon}>\n            <i className=\"fa fa-fw fa-trash\" />\n          </div>\n        </div>\n      </div>\n      <div className={styles.editor}>\n        {editor}\n        {viewDebug && (\n          <div>\n            <JSONFormatter json={input} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { PureComponent, ReactNode } from 'react';\nimport { Alert } from '../Alert/Alert';\nimport { css } from 'emotion';\nimport { stylesFactory } from '../../themes';\n\ninterface ErrorInfo {\n  componentStack: string;\n}\n\ninterface RenderProps {\n  error: Error | null;\n  errorInfo: ErrorInfo | null;\n}\n\ninterface Props {\n  children: (r: RenderProps) => ReactNode;\n}\n\ninterface State {\n  error: Error | null;\n  errorInfo: ErrorInfo | null;\n}\n\nexport class ErrorBoundary extends PureComponent<Props, State> {\n  readonly state: State = {\n    error: null,\n    errorInfo: null,\n  };\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n    });\n  }\n\n  render() {\n    const { children } = this.props;\n    const { error, errorInfo } = this.state;\n\n    return children({\n      error,\n      errorInfo,\n    });\n  }\n}\n\nconst getStyles = stylesFactory(() => {\n  return css`\n    width: 500px;\n    margin: 64px auto;\n  `;\n});\n\ninterface WithAlertBoxProps {\n  title?: string;\n  children: ReactNode;\n  style?: 'page' | 'alertbox';\n}\n\nexport class ErrorBoundaryAlert extends PureComponent<WithAlertBoxProps> {\n  static defaultProps: Partial<WithAlertBoxProps> = {\n    title: 'An unexpected error happened',\n    style: 'alertbox',\n  };\n\n  render() {\n    const { title, children, style } = this.props;\n\n    return (\n      <ErrorBoundary>\n        {({ error, errorInfo }) => {\n          if (!errorInfo) {\n            return children;\n          }\n\n          if (style === 'alertbox') {\n            return (\n              <Alert title={title || ''}>\n                <details style={{ whiteSpace: 'pre-wrap' }}>\n                  {error && error.toString()}\n                  <br />\n                  {errorInfo.componentStack}\n                </details>\n              </Alert>\n            );\n          } else {\n            return (\n              <div className={getStyles()}>\n                <h2>{title}</h2>\n                <details style={{ whiteSpace: 'pre-wrap' }}>\n                  {error && error.toString()}\n                  <br />\n                  {errorInfo.componentStack}\n                </details>\n              </div>\n            );\n          }\n        }}\n      </ErrorBoundary>\n    );\n  }\n}\n","import React, { FC, useContext } from 'react';\nimport { css, cx } from 'emotion';\nimport { PluginState, ThemeContext } from '../../index';\n\ninterface Props {\n  state?: PluginState;\n  text?: string;\n  className?: string;\n}\n\nexport const AlphaNotice: FC<Props> = ({ state, text, className }) => {\n  const tooltipContent = text || 'This feature is a work in progress and updates may include breaking changes';\n  const theme = useContext(ThemeContext);\n\n  const styles = cx(\n    className,\n    css`\n      background: linear-gradient(to bottom, ${theme.colors.blueBase}, ${theme.colors.blueShade});\n      color: ${theme.colors.gray7};\n      white-space: nowrap;\n      border-radius: 3px;\n      text-shadow: none;\n      font-size: 13px;\n      padding: 4px 8px;\n      cursor: help;\n      display: inline-block;\n    `\n  );\n\n  return (\n    <div className={styles} title={tooltipContent}>\n      <i className=\"fa fa-warning\" /> {state}\n    </div>\n  );\n};\n","import map from 'lodash/map';\nimport sortBy from 'lodash/sortBy';\nimport flattenDeep from 'lodash/flattenDeep';\nimport chunk from 'lodash/chunk';\nimport zip from 'lodash/zip';\nimport tinycolor from 'tinycolor2';\n\nexport const PALETTE_ROWS = 4;\nexport const PALETTE_COLUMNS = 14;\nexport const DEFAULT_ANNOTATION_COLOR = 'rgba(0, 211, 255, 1)';\nexport const OK_COLOR = 'rgba(11, 237, 50, 1)';\nexport const ALERTING_COLOR = 'rgba(237, 46, 24, 1)';\nexport const NO_DATA_COLOR = 'rgba(150, 150, 150, 1)';\nexport const PENDING_COLOR = 'rgba(247, 149, 32, 1)';\nexport const REGION_FILL_ALPHA = 0.09;\nexport const colors = [\n  '#7EB26D', // 0: pale green\n  '#EAB839', // 1: mustard\n  '#6ED0E0', // 2: light blue\n  '#EF843C', // 3: orange\n  '#E24D42', // 4: red\n  '#1F78C1', // 5: ocean\n  '#BA43A9', // 6: purple\n  '#705DA0', // 7: violet\n  '#508642', // 8: dark green\n  '#CCA300', // 9: dark sand\n  '#447EBC',\n  '#C15C17',\n  '#890F02',\n  '#0A437C',\n  '#6D1F62',\n  '#584477',\n  '#B7DBAB',\n  '#F4D598',\n  '#70DBED',\n  '#F9BA8F',\n  '#F29191',\n  '#82B5D8',\n  '#E5A8E2',\n  '#AEA2E0',\n  '#629E51',\n  '#E5AC0E',\n  '#64B0C8',\n  '#E0752D',\n  '#BF1B00',\n  '#0A50A1',\n  '#962D82',\n  '#614D93',\n  '#9AC48A',\n  '#F2C96D',\n  '#65C5DB',\n  '#F9934E',\n  '#EA6460',\n  '#5195CE',\n  '#D683CE',\n  '#806EB7',\n  '#3F6833',\n  '#967302',\n  '#2F575E',\n  '#99440A',\n  '#58140C',\n  '#052B51',\n  '#511749',\n  '#3F2B5B',\n  '#E0F9D7',\n  '#FCEACA',\n  '#CFFAFF',\n  '#F9E2D2',\n  '#FCE2DE',\n  '#BADFF4',\n  '#F9D9F9',\n  '#DEDAF7',\n];\n\nfunction sortColorsByHue(hexColors: string[]) {\n  const hslColors = map(hexColors, hexToHsl);\n\n  const sortedHSLColors = sortBy(hslColors, ['h']);\n  const chunkedHSLColors = chunk(sortedHSLColors, PALETTE_ROWS);\n  const sortedChunkedHSLColors = map(chunkedHSLColors, chunk => {\n    return sortBy(chunk, 'l');\n  });\n  const flattenedZippedSortedChunkedHSLColors = flattenDeep(zip(...sortedChunkedHSLColors));\n\n  return map(flattenedZippedSortedChunkedHSLColors, hslToHex);\n}\n\nfunction hexToHsl(color: string) {\n  return tinycolor(color).toHsl();\n}\n\nfunction hslToHex(color: any) {\n  return tinycolor(color).toHexString();\n}\n\nexport let sortedColors = sortColorsByHue(colors);\n","import { ValidationRule, ValidationEvents } from '../types/input';\n\nexport enum EventsWithValidation {\n  onBlur = 'onBlur',\n  onFocus = 'onFocus',\n  onChange = 'onChange',\n}\n\nexport const validate = (value: string, validationRules: ValidationRule[]) => {\n  const errors = validationRules.reduce(\n    (acc, currRule) => {\n      if (!currRule.rule(value)) {\n        return acc.concat(currRule.errorMessage);\n      }\n      return acc;\n    },\n    [] as string[]\n  );\n  return errors.length > 0 ? errors : null;\n};\n\nexport const hasValidationEvent = (event: EventsWithValidation, validationEvents: ValidationEvents | undefined) => {\n  return validationEvents && validationEvents[event];\n};\n","// Node.closest() polyfill\nif ('Element' in window && !Element.prototype.closest) {\n  Element.prototype.closest = function(this: any, s: string) {\n    const matches = (this.document || this.ownerDocument).querySelectorAll(s);\n    let el = this;\n    let i;\n    // eslint-disable-next-line\n    do {\n      i = matches.length;\n      // eslint-disable-next-line\n      while (--i >= 0 && matches.item(i) !== el) {}\n      el = el.parentElement;\n    } while (i < 0 && el);\n    return el;\n  };\n}\n\nexport function getPreviousCousin(node: any, selector: string) {\n  let sibling = node.parentElement.previousSibling;\n  let el;\n  while (sibling) {\n    el = sibling.querySelector(selector);\n    if (el) {\n      return el;\n    }\n    sibling = sibling.previousSibling;\n  }\n  return undefined;\n}\n\nexport function getNextCharacter(global = window) {\n  const selection = global.getSelection();\n  if (!selection || !selection.anchorNode) {\n    return null;\n  }\n\n  const range = selection.getRangeAt(0);\n  const text = selection.anchorNode.textContent;\n  const offset = range.startOffset;\n  return text!.substr(offset, 1);\n}\n","export * from './valueFormats/valueFormats';\nexport * from './colors';\nexport * from './namedColorsPalette';\nexport * from './displayProcessor';\nexport * from './fieldDisplay';\nexport * from './validate';\nexport { getFlotPairs, getFlotPairsConstant } from './flotPairs';\nexport * from './slate';\nexport * from './dataLinks';\nexport { default as ansicolor } from './ansicolor';\n\n// Export with a namespace\nimport * as DOMUtil from './dom'; // includes Element.closest polyfil\nexport { DOMUtil };\n","import {\n  ReducerID,\n  reduceField,\n  FieldType,\n  DataFrame,\n  FieldConfig,\n  DisplayValue,\n  GraphSeriesValue,\n  DataFrameView,\n  getTimeField,\n  ScopedVars,\n} from '@grafana/data';\n\nimport toNumber from 'lodash/toNumber';\nimport toString from 'lodash/toString';\n\nimport { GrafanaTheme, InterpolateFunction } from '../types/index';\nimport { getDisplayProcessor } from './displayProcessor';\nimport { getFlotPairs } from './flotPairs';\n\nexport interface FieldDisplayOptions {\n  values?: boolean; // If true show each row value\n  limit?: number; // if showing all values limit\n  calcs: string[]; // when !values, pick one value for the whole field\n\n  defaults: FieldConfig; // Use these values unless otherwise stated\n  override: FieldConfig; // Set these values regardless of the source\n}\n// TODO: use built in variables, same as for data links?\nexport const VAR_SERIES_NAME = '__series.name';\nexport const VAR_FIELD_NAME = '__field.name';\nexport const VAR_CALC = '__calc';\nexport const VAR_CELL_PREFIX = '__cell_'; // consistent with existing table templates\n\nfunction getTitleTemplate(title: string | undefined, stats: string[], data?: DataFrame[]): string {\n  // If the title exists, use it as a template variable\n  if (title) {\n    return title;\n  }\n  if (!data || !data.length) {\n    return 'No Data';\n  }\n\n  let fieldCount = 0;\n  for (const field of data[0].fields) {\n    if (field.type === FieldType.number) {\n      fieldCount++;\n    }\n  }\n\n  const parts: string[] = [];\n  if (stats.length > 1) {\n    parts.push('${' + VAR_CALC + '}');\n  }\n  if (data.length > 1) {\n    parts.push('${' + VAR_SERIES_NAME + '}');\n  }\n  if (fieldCount > 1 || !parts.length) {\n    parts.push('${' + VAR_FIELD_NAME + '}');\n  }\n  return parts.join(' ');\n}\n\nexport interface FieldDisplay {\n  name: string; // The field name (title is in display)\n  field: FieldConfig;\n  display: DisplayValue;\n  sparkline?: GraphSeriesValue[][];\n\n  // Expose to the original values for delayed inspection (DataLinks etc)\n  view?: DataFrameView;\n  colIndex?: number; // The field column index\n  rowIndex?: number; // only filled in when the value is from a row (ie, not a reduction)\n}\n\nexport interface GetFieldDisplayValuesOptions {\n  data?: DataFrame[];\n  fieldOptions: FieldDisplayOptions;\n  replaceVariables: InterpolateFunction;\n  sparkline?: boolean; // Calculate the sparkline\n  theme: GrafanaTheme;\n}\n\nexport const DEFAULT_FIELD_DISPLAY_VALUES_LIMIT = 25;\n\nexport const getFieldDisplayValues = (options: GetFieldDisplayValuesOptions): FieldDisplay[] => {\n  const { data, replaceVariables, fieldOptions } = options;\n  const { defaults, override } = fieldOptions;\n  const calcs = fieldOptions.calcs.length ? fieldOptions.calcs : [ReducerID.last];\n\n  const values: FieldDisplay[] = [];\n\n  if (data) {\n    let hitLimit = false;\n    const limit = fieldOptions.limit ? fieldOptions.limit : DEFAULT_FIELD_DISPLAY_VALUES_LIMIT;\n    const defaultTitle = getTitleTemplate(fieldOptions.defaults.title, calcs, data);\n    const scopedVars: ScopedVars = {};\n\n    for (let s = 0; s < data.length && !hitLimit; s++) {\n      let series = data[s];\n      if (!series.name) {\n        series = {\n          ...series,\n          name: series.refId ? series.refId : `Series[${s}]`,\n        };\n      }\n\n      scopedVars['__series'] = { text: 'Series', value: { name: series.name } };\n\n      const { timeField } = getTimeField(series);\n      const view = new DataFrameView(series);\n\n      for (let i = 0; i < series.fields.length && !hitLimit; i++) {\n        const field = series.fields[i];\n\n        // Show all number fields\n        if (field.type !== FieldType.number) {\n          continue;\n        }\n        const config = getFieldProperties(defaults, field.config || {}, override);\n\n        let name = field.name;\n        if (!name) {\n          name = `Field[${s}]`;\n        }\n\n        scopedVars['__field'] = { text: 'Field', value: { name } };\n\n        const display = getDisplayProcessor({\n          config,\n          theme: options.theme,\n        });\n\n        const title = config.title ? config.title : defaultTitle;\n        // Show all rows\n        if (fieldOptions.values) {\n          const usesCellValues = title.indexOf(VAR_CELL_PREFIX) >= 0;\n\n          for (let j = 0; j < field.values.length; j++) {\n            // Add all the row variables\n            if (usesCellValues) {\n              for (let k = 0; k < series.fields.length; k++) {\n                const f = series.fields[k];\n                const v = f.values.get(j);\n                scopedVars[VAR_CELL_PREFIX + k] = {\n                  value: v,\n                  text: toString(v),\n                };\n              }\n            }\n\n            const displayValue = display(field.values.get(j));\n            displayValue.title = replaceVariables(title, scopedVars);\n            values.push({\n              name,\n              field: config,\n              display: displayValue,\n              view,\n              colIndex: i,\n              rowIndex: j,\n            });\n\n            if (values.length >= limit) {\n              hitLimit = true;\n              break;\n            }\n          }\n        } else {\n          const results = reduceField({\n            field,\n            reducers: calcs, // The stats to calculate\n          });\n          let sparkline: GraphSeriesValue[][] | undefined = undefined;\n\n          // Single sparkline for every reducer\n          if (options.sparkline && timeField) {\n            sparkline = getFlotPairs({\n              xField: timeField,\n              yField: series.fields[i],\n            });\n          }\n\n          for (const calc of calcs) {\n            scopedVars[VAR_CALC] = { value: calc, text: calc };\n            const displayValue = display(results[calc]);\n            displayValue.title = replaceVariables(title, scopedVars);\n            values.push({\n              name: calc,\n              field: config,\n              display: displayValue,\n              sparkline,\n              view,\n              colIndex: i,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  if (values.length === 0) {\n    values.push({\n      name: 'No data',\n      field: {\n        ...defaults,\n      },\n      display: {\n        numeric: 0,\n        text: 'No data',\n      },\n    });\n  } else if (values.length === 1 && !fieldOptions.defaults.title) {\n    // Don't show title for single item\n    values[0].display.title = undefined;\n  }\n\n  return values;\n};\n\nconst numericFieldProps: any = {\n  decimals: true,\n  min: true,\n  max: true,\n};\n\n/**\n * Returns a version of the field with the overries applied.  Any property with\n * value: null | undefined | empty string are skipped.\n *\n * For numeric values, only valid numbers will be applied\n * for units, 'none' will be skipped\n */\nexport function applyFieldProperties(field: FieldConfig, props?: FieldConfig): FieldConfig {\n  if (!props) {\n    return field;\n  }\n  const keys = Object.keys(props);\n  if (!keys.length) {\n    return field;\n  }\n  const copy = { ...field } as any; // make a copy that we will manipulate directly\n  for (const key of keys) {\n    const val = (props as any)[key];\n    if (val === null || val === undefined) {\n      continue;\n    }\n\n    if (numericFieldProps[key]) {\n      const num = toNumber(val);\n      if (!isNaN(num)) {\n        copy[key] = num;\n      }\n    } else if (val) {\n      // skips empty string\n      if (key === 'unit' && val === 'none') {\n        continue;\n      }\n      copy[key] = val;\n    }\n  }\n  return copy as FieldConfig;\n}\n\nexport function getFieldProperties(...props: FieldConfig[]): FieldConfig {\n  let field = props[0] as FieldConfig;\n  for (let i = 1; i < props.length; i++) {\n    field = applyFieldProperties(field, props[i]);\n  }\n\n  // First value is always -Infinity\n  if (field.thresholds && field.thresholds.length) {\n    field.thresholds[0].value = -Infinity;\n  }\n\n  // Verify that max > min\n  if (field.hasOwnProperty('min') && field.hasOwnProperty('max') && field.min! > field.max!) {\n    return {\n      ...field,\n      min: field.max,\n      max: field.min,\n    };\n  }\n  return field;\n}\n","import React, { PureComponent, ReactElement } from 'react';\nimport Select from './Select';\nimport { PopoverContent } from '../Tooltip/Tooltip';\nimport { SelectableValue } from '@grafana/data';\n\ninterface ButtonComponentProps {\n  label: ReactElement | string | undefined;\n  className: string | undefined;\n  iconClass?: string;\n}\n\nconst ButtonComponent = (buttonProps: ButtonComponentProps) => (props: any) => {\n  const { label, className, iconClass } = buttonProps;\n\n  return (\n    <div // changed to div because of FireFox on MacOs issue below\n      ref={props.innerRef}\n      className={`btn navbar-button navbar-button--tight ${className}`}\n      onClick={props.selectProps.menuIsOpen ? props.selectProps.onMenuClose : props.selectProps.onMenuOpen}\n      onBlur={props.selectProps.onMenuClose}\n      tabIndex={0} // necessary to get onBlur to work https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n    >\n      <div className=\"select-button\">\n        {iconClass && <i className={`select-button-icon ${iconClass}`} />}\n        <span className=\"select-button-value\">{label ? label : ''}</span>\n        {!props.menuIsOpen && <i className=\"fa fa-caret-down fa-fw\" />}\n        {props.menuIsOpen && <i className=\"fa fa-caret-up fa-fw\" />}\n      </div>\n    </div>\n  );\n};\n\nexport interface Props<T> {\n  className: string | undefined;\n  options: Array<SelectableValue<T>>;\n  value?: SelectableValue<T>;\n  label?: ReactElement | string;\n  iconClass?: string;\n  components?: any;\n  maxMenuHeight?: number;\n  onChange: (item: SelectableValue<T>) => void;\n  tooltipContent?: PopoverContent;\n  isMenuOpen?: boolean;\n  onOpenMenu?: () => void;\n  onCloseMenu?: () => void;\n  tabSelectsValue?: boolean;\n  autoFocus?: boolean;\n}\n\nexport class ButtonSelect<T> extends PureComponent<Props<T>> {\n  onChange = (item: SelectableValue<T>) => {\n    const { onChange } = this.props;\n    onChange(item);\n  };\n\n  render() {\n    const {\n      className,\n      options,\n      value,\n      label,\n      iconClass,\n      components,\n      maxMenuHeight,\n      tooltipContent,\n      isMenuOpen,\n      onOpenMenu,\n      onCloseMenu,\n      tabSelectsValue,\n      autoFocus = true,\n    } = this.props;\n    const combinedComponents = {\n      ...components,\n      Control: ButtonComponent({ label, className, iconClass }),\n    };\n\n    return (\n      <Select\n        autoFocus={autoFocus}\n        backspaceRemovesValue={false}\n        isClearable={false}\n        isSearchable={false}\n        options={options}\n        onChange={this.onChange}\n        value={value}\n        isOpen={isMenuOpen}\n        onOpenMenu={onOpenMenu}\n        onCloseMenu={onCloseMenu}\n        maxMenuHeight={maxMenuHeight}\n        components={combinedComponents}\n        className=\"gf-form-select-box-button-select\"\n        tooltipContent={tooltipContent}\n        tabSelectsValue={tabSelectsValue}\n      />\n    );\n  }\n}\n","import _ from 'lodash';\nimport { DataQuery } from '@grafana/ui/';\n\nexport const getNextRefIdChar = (queries: DataQuery[]): string => {\n  const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n  return _.find(letters, refId => {\n    return _.every(queries, other => {\n      return other.refId !== refId;\n    });\n  });\n};\n","var path = 'public/app/plugins/datasource/elasticsearch/partials/query.editor.html';\nvar html = \"<query-editor-row query-ctrl=ctrl can-collapse=true>\\n\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=\\\"gf-form gf-form--grow\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword width-7\\\">Query</label>\\n\\t\\t\\t<input type=text class=gf-form-input ng-model=ctrl.target.query spellcheck=false placeholder=\\\"Lucene query\\\" ng-blur=ctrl.refresh()>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"gf-form max-width-15\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword\\\">Alias</label>\\n\\t\\t\\t<input type=text class=gf-form-input ng-model=ctrl.target.alias spellcheck=false placeholder=\\\"alias patterns\\\" ng-blur=ctrl.refresh()>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div ng-repeat=\\\"agg in ctrl.target.metrics\\\">\\n\\t\\t<elastic-metric-agg target=ctrl.target index=$index get-fields=ctrl.getFields($fieldType) on-change=ctrl.queryUpdated() es-version=ctrl.esVersion>\\n\\t\\t</elastic-metric-agg>\\n\\t</div>\\n\\n\\t<div ng-repeat=\\\"agg in ctrl.target.bucketAggs\\\">\\n\\t\\t<elastic-bucket-agg target=ctrl.target index=$index get-fields=ctrl.getFields($fieldType) on-change=ctrl.queryUpdated()>\\n\\t\\t</elastic-bucket-agg>\\n\\t</div>\\n\\n</query-editor-row>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { PureComponent } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport interface Props {\n  onClick: () => void;\n}\n\ninterface State {\n  hasEventListener: boolean;\n}\n\nexport class ClickOutsideWrapper extends PureComponent<Props, State> {\n  state = {\n    hasEventListener: false,\n  };\n\n  componentDidMount() {\n    window.addEventListener('click', this.onOutsideClick, false);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.onOutsideClick, false);\n  }\n\n  onOutsideClick = (event: any) => {\n    const domNode = ReactDOM.findDOMNode(this) as Element;\n\n    if (!domNode || !domNode.contains(event.target)) {\n      this.props.onClick();\n    }\n  };\n\n  render() {\n    return this.props.children;\n  }\n}\n","var path = 'public/app/plugins/panel/graph/tab_drilldown_links.html';\nvar html = \"<drilldown-links-editor value=ctrl.panel.options.dataLinks suggestions=ctrl.linkVariableSuggestions on-change=ctrl.onDataLinksChange></drilldown-links-editor>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/features/dashboard/components/SubMenu/template.html';\nvar html = \"<div class=submenu-controls>\\n  <div ng-repeat=\\\"variable in ctrl.variables\\\" ng-hide=\\\"variable.hide === 2\\\" class=\\\"submenu-item gf-form-inline\\\">\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label template-variable\\\" ng-hide=\\\"variable.hide === 1\\\">\\n        {{variable.label || variable.name}}\\n      </label>\\n      <value-select-dropdown ng-if=\\\"variable.type !== 'adhoc' && variable.type !== 'textbox'\\\" dashboard=ctrl.dashboard variable=variable on-updated=ctrl.variableUpdated(variable)></value-select-dropdown>\\n      <input type=text ng-if=\\\"variable.type === 'textbox'\\\" ng-model=variable.query class=\\\"gf-form-input width-12\\\" ng-blur=\\\"variable.current.value != variable.query && variable.updateOptions() && ctrl.variableUpdated(variable);\\\" ng-keydown=\\\"$event.keyCode === 13 && variable.current.value != variable.query && variable.updateOptions() && ctrl.variableUpdated(variable);\\\">\\n    </div>\\n    <ad-hoc-filters ng-if=\\\"variable.type === 'adhoc'\\\" variable=variable dashboard=ctrl.dashboard></ad-hoc-filters>\\n  </div>\\n\\n  <div ng-if=\\\"ctrl.dashboard.annotations.list.length > 0\\\">\\n    <div ng-repeat=\\\"annotation in ctrl.dashboard.annotations.list\\\" ng-hide=annotation.hide class=submenu-item ng-class=\\\"{'annotation-disabled': !annotation.enable}\\\">\\n\\t\\t\\t<gf-form-switch class=gf-form label={{annotation.name}} checked=annotation.enable on-change=ctrl.annotationStateChanged()></gf-form-switch>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"gf-form gf-form--grow\\\">\\n  </div>\\n\\n  <div ng-if=\\\"ctrl.dashboard.links.length > 0\\\">\\n    <dash-links-container links=ctrl.dashboard.links dashboard=ctrl.dashboard class=gf-form-inline></dash-links-container>\\n  </div>\\n\\n  <div class=clearfix></div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/datasource/stackdriver/partials/annotations.editor.html';\nvar html = \"<stackdriver-annotation-query-editor target=ctrl.annotation.target on-query-change=(ctrl.onQueryChange) datasource=ctrl.datasource template-srv=ctrl.templateSrv></stackdriver-annotation-query-editor>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/datasource/grafana/partials/query.editor.html';\nvar html = \"<query-editor-row query-ctrl=ctrl can-collapse=false>\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<label class=gf-form-label>Test data: random walk</label>\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"gf-form gf-form--grow\\\">\\n\\t\\t\\t<div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n\\t\\t</div>\\n\\t</div>\\n</query-editor-row>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import React, { PureComponent, ChangeEvent } from 'react';\nimport classNames from 'classnames';\nimport { validate, EventsWithValidation, hasValidationEvent } from '../../utils';\nimport { ValidationEvents, ValidationRule } from '../../types';\n\nexport enum InputStatus {\n  Invalid = 'invalid',\n  Valid = 'valid',\n}\n\ninterface Props extends React.HTMLProps<HTMLInputElement> {\n  validationEvents?: ValidationEvents;\n  hideErrorMessage?: boolean;\n\n  // Override event props and append status as argument\n  onBlur?: (event: React.FocusEvent<HTMLInputElement>, status?: InputStatus) => void;\n  onFocus?: (event: React.FocusEvent<HTMLInputElement>, status?: InputStatus) => void;\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>, status?: InputStatus) => void;\n}\n\ninterface State {\n  error: string | null;\n}\n\nexport class Input extends PureComponent<Props, State> {\n  static defaultProps = {\n    className: '',\n  };\n\n  state: State = {\n    error: null,\n  };\n\n  get status() {\n    return this.state.error ? InputStatus.Invalid : InputStatus.Valid;\n  }\n\n  get isInvalid() {\n    return this.status === InputStatus.Invalid;\n  }\n\n  validatorAsync = (validationRules: ValidationRule[]) => {\n    return (evt: ChangeEvent<HTMLInputElement>) => {\n      const errors = validate(evt.target.value, validationRules);\n      this.setState(prevState => {\n        return { ...prevState, error: errors ? errors[0] : null };\n      });\n    };\n  };\n\n  populateEventPropsWithStatus = (restProps: any, validationEvents: ValidationEvents | undefined) => {\n    const inputElementProps = { ...restProps };\n    if (!validationEvents) {\n      return inputElementProps;\n    }\n    Object.keys(EventsWithValidation).forEach(eventName => {\n      if (hasValidationEvent(eventName as EventsWithValidation, validationEvents) || restProps[eventName]) {\n        inputElementProps[eventName] = async (evt: ChangeEvent<HTMLInputElement>) => {\n          evt.persist(); // Needed for async. https://reactjs.org/docs/events.html#event-pooling\n          if (hasValidationEvent(eventName as EventsWithValidation, validationEvents)) {\n            await this.validatorAsync(validationEvents[eventName]).apply(this, [evt]);\n          }\n          if (restProps[eventName]) {\n            restProps[eventName].apply(null, [evt, this.status]);\n          }\n        };\n      }\n    });\n    return inputElementProps;\n  };\n\n  render() {\n    const { validationEvents, className, hideErrorMessage, ...restProps } = this.props;\n    const { error } = this.state;\n    const inputClassName = classNames('gf-form-input', { invalid: this.isInvalid }, className);\n    const inputElementProps = this.populateEventPropsWithStatus(restProps, validationEvents);\n\n    return (\n      <div style={{ flexGrow: 1 }}>\n        <input {...inputElementProps} className={inputClassName} />\n        {error && !hideErrorMessage && <span>{error}</span>}\n      </div>\n    );\n  }\n}\n","var path = 'public/app/plugins/datasource/postgres/partials/config.html';\nvar html = \"\\n<h3 class=page-heading>PostgreSQL Connection</h3>\\n\\n<div class=gf-form-group>\\n\\t<div class=\\\"gf-form max-width-30\\\">\\n\\t\\t<span class=\\\"gf-form-label width-7\\\">Host</span>\\n\\t\\t<input type=text class=gf-form-input ng-model=ctrl.current.url placeholder=localhost:5432 bs-typeahead=\\\"{{['localhost:5432', 'localhost:5433']}}\\\" required>\\n\\t</div>\\n\\n\\t<div class=\\\"gf-form max-width-30\\\">\\n\\t\\t<span class=\\\"gf-form-label width-7\\\">Database</span>\\n\\t\\t<input type=text class=gf-form-input ng-model=ctrl.current.database placeholder=\\\"database name\\\" required>\\n\\t</div>\\n\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=\\\"gf-form max-width-15\\\">\\n\\t\\t\\t<span class=\\\"gf-form-label width-7\\\">User</span>\\n\\t\\t\\t<input type=text class=gf-form-input ng-model=ctrl.current.user placeholder=user>\\n\\t\\t</div>\\n    <div class=gf-form>\\n      <secret-form-field isconfigured=ctrl.current.secureJsonFields.password value=ctrl.current.secureJsonData.password on-reset=ctrl.onPasswordReset on-change=ctrl.onPasswordChange inputwidth=9 />\\n    </div>\\n\\t</div>\\n\\n\\t<div class=gf-form>\\n\\t\\t<label class=\\\"gf-form-label width-7\\\">SSL Mode</label>\\n\\t\\t<div class=\\\"gf-form-select-wrapper max-width-15 gf-form-select-wrapper--has-help-icon\\\">\\n\\t\\t\\t<select class=gf-form-input ng-model=ctrl.current.jsonData.sslmode ng-options=\\\"mode for mode in ['disable', 'require', 'verify-ca', 'verify-full']\\\" ng-init=ctrl.current.jsonData.sslmode></select>\\n\\t\\t\\t<info-popover mode=right-absolute>\\n\\t\\t\\t\\tThis option determines whether or with what priority a secure SSL TCP/IP connection will be negotiated with the server.\\n\\t\\t\\t</info-popover>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<b>Connection limits</b>\\n\\n<div class=gf-form-group>\\n\\t<div class=\\\"gf-form max-width-15\\\">\\n\\t\\t<span class=\\\"gf-form-label width-7\\\">Max open</span>\\n\\t\\t<input type=number min=0 class=\\\"gf-form-input gf-form-input--has-help-icon\\\" ng-model=ctrl.current.jsonData.maxOpenConns placeholder=unlimited>\\n\\t\\t<info-popover mode=right-absolute>\\n\\t\\t\\tThe maximum number of open connections to the database. If <i>Max idle connections</i> is greater than 0 and the\\n\\t\\t\\t<i>Max open connections</i> is less than <i>Max idle connections</i>, then <i>Max idle connections</i> will be\\n\\t\\t\\treduced to match the <i>Max open connections</i> limit. If set to 0, there is no limit on the number of open\\n\\t\\t\\tconnections.\\n\\t\\t</info-popover>\\n\\t</div>\\n\\t<div class=\\\"gf-form max-width-15\\\">\\n\\t\\t<span class=\\\"gf-form-label width-7\\\">Max idle</span>\\n\\t\\t<input type=number min=0 class=\\\"gf-form-input gf-form-input--has-help-icon\\\" ng-model=ctrl.current.jsonData.maxIdleConns placeholder=2>\\n\\t\\t<info-popover mode=right-absolute>\\n\\t\\t\\tThe maximum number of connections in the idle connection pool. If <i>Max open connections</i> is greater than 0 but\\n\\t\\t\\tless than the <i>Max idle connections</i>, then the <i>Max idle connections</i> will be reduced to match the\\n\\t\\t\\t<i>Max open connections</i> limit. If set to 0, no idle connections are retained.\\n\\t\\t</info-popover>\\n\\t</div>\\n\\t<div class=\\\"gf-form max-width-15\\\">\\n\\t\\t<span class=\\\"gf-form-label width-7\\\">Max lifetime</span>\\n\\t\\t<input type=number min=0 class=\\\"gf-form-input gf-form-input--has-help-icon\\\" ng-model=ctrl.current.jsonData.connMaxLifetime placeholder=14400>\\n\\t\\t<info-popover mode=right-absolute>\\n\\t\\t\\tThe maximum amount of time in seconds a connection may be reused. If set to 0, connections are reused forever.\\n\\t\\t</info-popover>\\n\\t</div>\\n</div>\\n\\n<h3 class=page-heading>PostgreSQL details</h3>\\n\\n<div class=gf-form-group>\\n\\t<div class=gf-form>\\n\\t\\t<span class=\\\"gf-form-label width-9\\\">\\n\\t\\t\\tVersion\\n\\t\\t\\t<info-popover mode=right-normal position=\\\"top center\\\">\\n\\t\\t\\t\\tThis option controls what functions are available in the PostgreSQL query builder.\\n\\t\\t\\t</info-popover>\\n\\t\\t</span>\\n\\t\\t<span class=gf-form-select-wrapper>\\n\\t\\t\\t<select class=\\\"gf-form-input gf-size-auto\\\" ng-model=ctrl.current.jsonData.postgresVersion ng-options=\\\"f.value as f.name for f in ctrl.postgresVersions\\\"></select>\\n\\t\\t</span>\\n\\t</div>\\n\\t<div class=gf-form>\\n\\t\\t<gf-form-switch class=gf-form label=TimescaleDB label-class=width-9 checked=ctrl.current.jsonData.timescaledb switch-class=max-width-6></gf-form-switch>\\n    <label class=\\\"gf-form-label query-keyword pointer\\\" ng-click=ctrl.toggleTimescaleDBHelp()>\\n      Help&nbsp;\\n      <i class=\\\"fa fa-caret-down\\\" ng-show=ctrl.showTimescaleDBHelp></i>\\n      <i class=\\\"fa fa-caret-right\\\" ng-hide=ctrl.showTimescaleDBHelp>&nbsp;</i>\\n    </label>\\n\\t</div>\\n\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=\\\"gf-form-label width-9\\\">Min time interval</span>\\n\\t\\t\\t<input type=text class=\\\"gf-form-input width-6 gf-form-input--has-help-icon\\\" ng-model=ctrl.current.jsonData.timeInterval spellcheck=false placeholder=1m ng-pattern=/^\\\\d+(ms|[Mwdhmsy])$/ >\\n\\t\\t\\t<info-popover mode=right-absolute>\\n\\t\\t\\t\\tA lower limit for the auto group by time interval. Recommended to be set to write frequency,\\n\\t\\t\\t\\tfor example <code>1m</code> if your data is written every minute.\\n\\t\\t\\t</info-popover>\\n\\t\\t</div>\\n\\t</div>\\n<div class=\\\"grafana-info-box alert alert-info\\\" ng-show=ctrl.showTimescaleDBHelp>\\n  <div class=alert-body>\\n    <p>\\n\\t\\t\\t<a href=https://github.com/timescale/timescaledb class=pointer target=_blank>TimescaleDB</a> is a time-series database built as a PostgreSQL extension. If enabled, Grafana will use <code>time_bucket</code> in the <code>$__timeGroup</code> macro and display TimescaleDB specific aggregate functions in the query builder.\\n    </p>\\n  </div>\\n</div>\\n\\n</div>\\n\\n\\n<div class=gf-form-group>\\n\\t<div class=grafana-info-box>\\n\\t\\t<h5>User Permission</h5>\\n\\t\\t<p>\\n\\t\\t\\tThe database user should only be granted SELECT permissions on the specified database &amp; tables you want to query.\\n\\t\\t\\tGrafana does not validate that queries are safe so queries can contain any SQL statement. For example, statements\\n\\t\\t\\tlike <code>DELETE FROM user;</code> and <code>DROP TABLE user;</code> would be executed. To protect against this we\\n\\t\\t\\t<strong>Highly</strong> recommmend you create a specific PostgreSQL user with restricted permissions.\\n\\t\\t</p>\\n\\t</div>\\n</div>\\n\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { Plugin } from '@grafana/slate-react';\nimport { Editor as CoreEditor } from 'slate';\n\nconst BRACES: any = {\n  '[': ']',\n  '{': '}',\n  '(': ')',\n};\n\nexport default function BracesPlugin(): Plugin {\n  return {\n    onKeyDown(event: KeyboardEvent, editor: CoreEditor, next: Function) {\n      const { value } = editor;\n\n      switch (event.key) {\n        case '(':\n        case '{':\n        case '[': {\n          event.preventDefault();\n          const {\n            start: { offset: startOffset, key: startKey },\n            end: { offset: endOffset, key: endKey },\n            focus: { offset: focusOffset },\n          } = value.selection;\n          const text = value.focusText.text;\n\n          // If text is selected, wrap selected text in parens\n          if (value.selection.isExpanded) {\n            editor\n              .insertTextByKey(startKey, startOffset, event.key)\n              .insertTextByKey(endKey, endOffset + 1, BRACES[event.key])\n              .moveEndBackward(1);\n          } else if (\n            focusOffset === text.length ||\n            text[focusOffset] === ' ' ||\n            Object.values(BRACES).includes(text[focusOffset])\n          ) {\n            editor.insertText(`${event.key}${BRACES[event.key]}`).moveBackward(1);\n          } else {\n            editor.insertText(event.key);\n          }\n\n          return true;\n        }\n\n        case 'Backspace': {\n          const text = value.anchorText.text;\n          const offset = value.selection.anchor.offset;\n          const previousChar = text[offset - 1];\n          const nextChar = text[offset];\n          if (BRACES[previousChar] && BRACES[previousChar] === nextChar) {\n            event.preventDefault();\n            // Remove closing brace if directly following\n            editor\n              .deleteBackward(1)\n              .deleteForward(1)\n              .focus();\n            return true;\n          }\n        }\n\n        default: {\n          break;\n        }\n      }\n\n      return next();\n    },\n  };\n}\n","import { GrafanaThemeType } from '../types/theme';\n\ntype VariantDescriptor = { [key in GrafanaThemeType]: string | number };\n\nexport const selectThemeVariant = (variants: VariantDescriptor, currentTheme?: GrafanaThemeType) => {\n  return variants[currentTheme || GrafanaThemeType.Dark];\n};\n","import { PanelModel } from 'app/features/dashboard/state';\n\nexport class ThresholdMapper {\n  static alertToGraphThresholds(panel: PanelModel) {\n    for (let i = 0; i < panel.alert.conditions.length; i++) {\n      const condition = panel.alert.conditions[i];\n      if (condition.type !== 'query') {\n        continue;\n      }\n\n      const evaluator = condition.evaluator;\n      const thresholds: any[] = (panel.thresholds = []);\n\n      switch (evaluator.type) {\n        case 'gt': {\n          const value = evaluator.params[0];\n          thresholds.push({ value: value, op: 'gt' });\n          break;\n        }\n        case 'lt': {\n          const value = evaluator.params[0];\n          thresholds.push({ value: value, op: 'lt' });\n          break;\n        }\n        case 'outside_range': {\n          const value1 = evaluator.params[0];\n          const value2 = evaluator.params[1];\n\n          if (value1 > value2) {\n            thresholds.push({ value: value1, op: 'gt' });\n            thresholds.push({ value: value2, op: 'lt' });\n          } else {\n            thresholds.push({ value: value1, op: 'lt' });\n            thresholds.push({ value: value2, op: 'gt' });\n          }\n\n          break;\n        }\n        case 'within_range': {\n          const value1 = evaluator.params[0];\n          const value2 = evaluator.params[1];\n\n          if (value1 > value2) {\n            thresholds.push({ value: value1, op: 'lt' });\n            thresholds.push({ value: value2, op: 'gt' });\n          } else {\n            thresholds.push({ value: value1, op: 'gt' });\n            thresholds.push({ value: value2, op: 'lt' });\n          }\n          break;\n        }\n      }\n      break;\n    }\n\n    for (const t of panel.thresholds) {\n      t.fill = true;\n      t.line = true;\n      t.colorMode = 'critical';\n    }\n\n    const updated = true;\n    return updated;\n  }\n}\n","import _ from 'lodash';\nimport coreModule from 'app/core/core_module';\nimport { ThresholdMapper } from './state/ThresholdMapper';\nimport { QueryPart } from 'app/core/components/query_part/query_part';\nimport alertDef from './state/alertDef';\nimport config from 'app/core/config';\nimport appEvents from 'app/core/app_events';\nimport { BackendSrv } from 'app/core/services/backend_srv';\nimport { DashboardSrv } from '../dashboard/services/DashboardSrv';\nimport DatasourceSrv from '../plugins/datasource_srv';\nimport { DataQuery } from '@grafana/ui/src/types/datasource';\nimport { PanelModel } from 'app/features/dashboard/state';\nimport { getDefaultCondition } from './getAlertingValidationMessage';\n\nexport class AlertTabCtrl {\n  panel: PanelModel;\n  panelCtrl: any;\n  subTabIndex: number;\n  conditionTypes: any;\n  alert: any;\n  conditionModels: any;\n  evalFunctions: any;\n  evalOperators: any;\n  noDataModes: any;\n  executionErrorModes: any;\n  addNotificationSegment: any;\n  notifications: any;\n  alertNotifications: any;\n  error: string;\n  appSubUrl: string;\n  alertHistory: any;\n  newAlertRuleTag: any;\n\n  /** @ngInject */\n  constructor(\n    private $scope: any,\n    private backendSrv: BackendSrv,\n    private dashboardSrv: DashboardSrv,\n    private uiSegmentSrv: any,\n    private $q: any,\n    private datasourceSrv: DatasourceSrv\n  ) {\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n    this.$scope.ctrl = this;\n    this.subTabIndex = 0;\n    this.evalFunctions = alertDef.evalFunctions;\n    this.evalOperators = alertDef.evalOperators;\n    this.conditionTypes = alertDef.conditionTypes;\n    this.noDataModes = alertDef.noDataModes;\n    this.executionErrorModes = alertDef.executionErrorModes;\n    this.appSubUrl = config.appSubUrl;\n    this.panelCtrl._enableAlert = this.enable;\n  }\n\n  $onInit() {\n    this.addNotificationSegment = this.uiSegmentSrv.newPlusButton();\n\n    // subscribe to graph threshold handle changes\n    const thresholdChangedEventHandler = this.graphThresholdChanged.bind(this);\n    this.panelCtrl.events.on('threshold-changed', thresholdChangedEventHandler);\n\n    // set panel alert edit mode\n    this.$scope.$on('$destroy', () => {\n      this.panelCtrl.events.off('threshold-changed', thresholdChangedEventHandler);\n      this.panelCtrl.editingThresholds = false;\n      this.panelCtrl.render();\n    });\n\n    // build notification model\n    this.notifications = [];\n    this.alertNotifications = [];\n    this.alertHistory = [];\n\n    return this.backendSrv.get('/api/alert-notifications/lookup').then((res: any) => {\n      this.notifications = res;\n\n      this.initModel();\n      this.validateModel();\n    });\n  }\n\n  getAlertHistory() {\n    this.backendSrv\n      .get(`/api/annotations?dashboardId=${this.panelCtrl.dashboard.id}&panelId=${this.panel.id}&limit=50&type=alert`)\n      .then((res: any) => {\n        this.alertHistory = _.map(res, ah => {\n          ah.time = this.dashboardSrv.getCurrent().formatDate(ah.time, 'MMM D, YYYY HH:mm:ss');\n          ah.stateModel = alertDef.getStateDisplayModel(ah.newState);\n          ah.info = alertDef.getAlertAnnotationInfo(ah);\n          return ah;\n        });\n      });\n  }\n\n  getNotificationIcon(type: string): string {\n    switch (type) {\n      case 'email':\n        return 'fa fa-envelope';\n      case 'slack':\n        return 'fa fa-slack';\n      case 'victorops':\n        return 'fa fa-pagelines';\n      case 'webhook':\n        return 'fa fa-cubes';\n      case 'pagerduty':\n        return 'fa fa-bullhorn';\n      case 'opsgenie':\n        return 'fa fa-bell';\n      case 'hipchat':\n        return 'fa fa-mail-forward';\n      case 'pushover':\n        return 'fa fa-mobile';\n      case 'kafka':\n        return 'fa fa-random';\n      case 'teams':\n        return 'fa fa-windows';\n    }\n    return 'fa fa-bell';\n  }\n\n  getNotifications() {\n    return this.$q.when(\n      this.notifications.map((item: any) => {\n        return this.uiSegmentSrv.newSegment(item.name);\n      })\n    );\n  }\n\n  notificationAdded() {\n    const model: any = _.find(this.notifications, {\n      name: this.addNotificationSegment.value,\n    });\n    if (!model) {\n      return;\n    }\n\n    this.alertNotifications.push({\n      name: model.name,\n      iconClass: this.getNotificationIcon(model.type),\n      isDefault: false,\n      uid: model.uid,\n    });\n\n    // avoid duplicates using both id and uid to be backwards compatible.\n    if (!_.find(this.alert.notifications, n => n.id === model.id || n.uid === model.uid)) {\n      this.alert.notifications.push({ uid: model.uid });\n    }\n\n    // reset plus button\n    this.addNotificationSegment.value = this.uiSegmentSrv.newPlusButton().value;\n    this.addNotificationSegment.html = this.uiSegmentSrv.newPlusButton().html;\n    this.addNotificationSegment.fake = true;\n  }\n\n  removeNotification(an: any) {\n    // remove notifiers refeered to by id and uid to support notifiers added\n    // before and after we added support for uid\n    _.remove(this.alert.notifications, (n: any) => n.uid === an.uid || n.id === an.id);\n    _.remove(this.alertNotifications, (n: any) => n.uid === an.uid || n.id === an.id);\n  }\n\n  addAlertRuleTag() {\n    if (this.newAlertRuleTag.name) {\n      this.alert.alertRuleTags[this.newAlertRuleTag.name] = this.newAlertRuleTag.value;\n    }\n    this.newAlertRuleTag.name = '';\n    this.newAlertRuleTag.value = '';\n  }\n\n  removeAlertRuleTag(tagName: string) {\n    delete this.alert.alertRuleTags[tagName];\n  }\n\n  initModel() {\n    const alert = (this.alert = this.panel.alert);\n    if (!alert) {\n      return;\n    }\n\n    alert.conditions = alert.conditions || [];\n    if (alert.conditions.length === 0) {\n      alert.conditions.push(getDefaultCondition());\n    }\n\n    alert.noDataState = alert.noDataState || config.alertingNoDataOrNullValues;\n    alert.executionErrorState = alert.executionErrorState || config.alertingErrorOrTimeout;\n    alert.frequency = alert.frequency || '1m';\n    alert.handler = alert.handler || 1;\n    alert.notifications = alert.notifications || [];\n    alert.for = alert.for || '0m';\n    alert.alertRuleTags = alert.alertRuleTags || {};\n\n    const defaultName = this.panel.title + ' alert';\n    alert.name = alert.name || defaultName;\n\n    this.conditionModels = _.reduce(\n      alert.conditions,\n      (memo, value) => {\n        memo.push(this.buildConditionModel(value));\n        return memo;\n      },\n      []\n    );\n\n    ThresholdMapper.alertToGraphThresholds(this.panel);\n\n    for (const addedNotification of alert.notifications) {\n      // lookup notifier type by uid\n      let model: any = _.find(this.notifications, { uid: addedNotification.uid });\n\n      // fallback to using id if uid is missing\n      if (!model) {\n        model = _.find(this.notifications, { id: addedNotification.id });\n      }\n\n      if (model && model.isDefault === false) {\n        model.iconClass = this.getNotificationIcon(model.type);\n        this.alertNotifications.push(model);\n      }\n    }\n\n    for (const notification of this.notifications) {\n      if (notification.isDefault) {\n        notification.iconClass = this.getNotificationIcon(notification.type);\n        notification.bgColor = '#00678b';\n        this.alertNotifications.push(notification);\n      }\n    }\n\n    this.panelCtrl.editingThresholds = true;\n    this.panelCtrl.render();\n  }\n\n  graphThresholdChanged(evt: any) {\n    for (const condition of this.alert.conditions) {\n      if (condition.type === 'query') {\n        condition.evaluator.params[evt.handleIndex] = evt.threshold.value;\n        this.evaluatorParamsChanged();\n        break;\n      }\n    }\n  }\n\n  validateModel() {\n    if (!this.alert) {\n      return;\n    }\n\n    let firstTarget;\n    let foundTarget: DataQuery = null;\n\n    for (const condition of this.alert.conditions) {\n      if (condition.type !== 'query') {\n        continue;\n      }\n\n      for (const target of this.panel.targets) {\n        if (!firstTarget) {\n          firstTarget = target;\n        }\n        if (condition.query.params[0] === target.refId) {\n          foundTarget = target;\n          break;\n        }\n      }\n\n      if (!foundTarget) {\n        if (firstTarget) {\n          condition.query.params[0] = firstTarget.refId;\n          foundTarget = firstTarget;\n        } else {\n          this.error = 'Could not find any metric queries';\n        }\n      }\n\n      const datasourceName = foundTarget.datasource || this.panel.datasource;\n      this.datasourceSrv.get(datasourceName).then(ds => {\n        if (!ds.meta.alerting) {\n          this.error = 'The datasource does not support alerting queries';\n        } else if (ds.targetContainsTemplate && ds.targetContainsTemplate(foundTarget)) {\n          this.error = 'Template variables are not supported in alert queries';\n        } else {\n          this.error = '';\n        }\n      });\n    }\n  }\n\n  buildConditionModel(source: any) {\n    const cm: any = { source: source, type: source.type };\n\n    cm.queryPart = new QueryPart(source.query, alertDef.alertQueryDef);\n    cm.reducerPart = alertDef.createReducerPart(source.reducer);\n    cm.evaluator = source.evaluator;\n    cm.operator = source.operator;\n\n    return cm;\n  }\n\n  handleQueryPartEvent(conditionModel: any, evt: any) {\n    switch (evt.name) {\n      case 'action-remove-part': {\n        break;\n      }\n      case 'get-part-actions': {\n        return this.$q.when([]);\n      }\n      case 'part-param-changed': {\n        this.validateModel();\n      }\n      case 'get-param-options': {\n        const result = this.panel.targets.map(target => {\n          return this.uiSegmentSrv.newSegment({ value: target.refId });\n        });\n\n        return this.$q.when(result);\n      }\n    }\n  }\n\n  handleReducerPartEvent(conditionModel: any, evt: any) {\n    switch (evt.name) {\n      case 'action': {\n        conditionModel.source.reducer.type = evt.action.value;\n        conditionModel.reducerPart = alertDef.createReducerPart(conditionModel.source.reducer);\n        break;\n      }\n      case 'get-part-actions': {\n        const result = [];\n        for (const type of alertDef.reducerTypes) {\n          if (type.value !== conditionModel.source.reducer.type) {\n            result.push(type);\n          }\n        }\n        return this.$q.when(result);\n      }\n    }\n  }\n\n  addCondition(type: string) {\n    const condition = getDefaultCondition();\n    // add to persited model\n    this.alert.conditions.push(condition);\n    // add to view model\n    this.conditionModels.push(this.buildConditionModel(condition));\n  }\n\n  removeCondition(index: number) {\n    this.alert.conditions.splice(index, 1);\n    this.conditionModels.splice(index, 1);\n  }\n\n  delete() {\n    appEvents.emit('confirm-modal', {\n      title: 'Delete Alert',\n      text: 'Are you sure you want to delete this alert rule?',\n      text2: 'You need to save dashboard for the delete to take effect',\n      icon: 'fa-trash',\n      yesText: 'Delete',\n      onConfirm: () => {\n        delete this.panel.alert;\n        this.alert = null;\n        this.panel.thresholds = [];\n        this.conditionModels = [];\n        this.panelCtrl.alertState = null;\n        this.panelCtrl.render();\n      },\n    });\n  }\n\n  enable = () => {\n    this.panel.alert = {};\n    this.initModel();\n    this.panel.alert.for = '5m'; //default value for new alerts. for existing alerts we use 0m to avoid breaking changes\n  };\n\n  evaluatorParamsChanged() {\n    ThresholdMapper.alertToGraphThresholds(this.panel);\n    this.panelCtrl.render();\n  }\n\n  evaluatorTypeChanged(evaluator: any) {\n    // ensure params array is correct length\n    switch (evaluator.type) {\n      case 'lt':\n      case 'gt': {\n        evaluator.params = [evaluator.params[0]];\n        break;\n      }\n      case 'within_range':\n      case 'outside_range': {\n        evaluator.params = [evaluator.params[0], evaluator.params[1]];\n        break;\n      }\n      case 'no_value': {\n        evaluator.params = [];\n      }\n    }\n\n    this.evaluatorParamsChanged();\n  }\n\n  clearHistory() {\n    appEvents.emit('confirm-modal', {\n      title: 'Delete Alert History',\n      text: 'Are you sure you want to remove all history & annotations for this alert?',\n      icon: 'fa-trash',\n      yesText: 'Yes',\n      onConfirm: () => {\n        this.backendSrv\n          .post('/api/annotations/mass-delete', {\n            dashboardId: this.panelCtrl.dashboard.id,\n            panelId: this.panel.id,\n          })\n          .then(() => {\n            this.alertHistory = [];\n            this.panelCtrl.refresh();\n          });\n      },\n    });\n  }\n}\n\n/** @ngInject */\nexport function alertTab() {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/app/features/alerting/partials/alert_tab.html',\n    controller: AlertTabCtrl,\n  };\n}\n\ncoreModule.directive('alertTab', alertTab);\n","(function ($) {\n  \"use strict\";\n\n  var defaultOptions = {\n    tagClass: function(item) {\n      return 'label label-info';\n    },\n    itemValue: function(item) {\n      return item ? item.toString() : item;\n    },\n    itemText: function(item) {\n      return this.itemValue(item);\n    },\n    freeInput: true,\n    maxTags: undefined,\n    confirmKeys: [13],\n    onTagExists: function(item, $tag) {\n      $tag.hide().fadeIn();\n    }\n  };\n\n  /**\n   * Constructor function\n   */\n  function TagsInput(element, options) {\n    this.itemsArray = [];\n\n    this.$element = $(element);\n    this.$element.hide();\n\n    this.widthClass = options.widthClass || 'width-9';\n    this.isSelect = (element.tagName === 'SELECT');\n    this.multiple = (this.isSelect && element.hasAttribute('multiple'));\n    this.objectItems = options && options.itemValue;\n    this.placeholderText = element.hasAttribute('placeholder') ? this.$element.attr('placeholder') : '';\n\n    this.$container = $('<div class=\"bootstrap-tagsinput\"></div>');\n    this.$input = $('<input class=\"gf-form-input ' + this.widthClass + '\" type=\"text\" placeholder=\"' + this.placeholderText + '\"/>').appendTo(this.$container);\n\n    this.$element.after(this.$container);\n\n    this.build(options);\n  }\n\n  TagsInput.prototype = {\n    constructor: TagsInput,\n\n    /**\n     * Adds the given item as a new tag. Pass true to dontPushVal to prevent\n     * updating the elements val()\n     */\n    add: function(item, dontPushVal) {\n      var self = this;\n\n      if (self.options.maxTags && self.itemsArray.length >= self.options.maxTags)\n        return;\n\n      // Ignore falsey values, except false\n      if (item !== false && !item)\n        return;\n\n      // Throw an error when trying to add an object while the itemValue option was not set\n      if (typeof item === \"object\" && !self.objectItems)\n        throw(\"Can't add objects when itemValue option is not set\");\n\n      // Ignore strings only containg whitespace\n      if (item.toString().match(/^\\s*$/))\n        return;\n\n      // If SELECT but not multiple, remove current tag\n      if (self.isSelect && !self.multiple && self.itemsArray.length > 0)\n        self.remove(self.itemsArray[0]);\n\n      if (typeof item === \"string\" && this.$element[0].tagName === 'INPUT') {\n        var items = item.split(',');\n        if (items.length > 1) {\n          for (var i = 0; i < items.length; i++) {\n            this.add(items[i], true);\n          }\n\n          if (!dontPushVal)\n            self.pushVal();\n          return;\n        }\n      }\n\n      var itemValue = self.options.itemValue(item),\n          itemText = self.options.itemText(item),\n          tagClass = self.options.tagClass(item);\n\n      // Ignore items allready added\n      var existing = $.grep(self.itemsArray, function(item) { return self.options.itemValue(item) === itemValue; } )[0];\n      if (existing) {\n        // Invoke onTagExists\n        if (self.options.onTagExists) {\n          var $existingTag = $(\".tag\", self.$container).filter(function() { return $(this).data(\"item\") === existing; });\n          self.options.onTagExists(item, $existingTag);\n        }\n        return;\n      }\n\n      // register item in internal array and map\n      self.itemsArray.push(item);\n\n      // add a tag element\n      var $tag = $('<span class=\"tag ' + htmlEncode(tagClass) + '\">' + htmlEncode(itemText) + '<span data-role=\"remove\"></span></span>');\n      $tag.data('item', item);\n      self.findInputWrapper().before($tag);\n      $tag.after(' ');\n\n      // add <option /> if item represents a value not present in one of the <select />'s options\n      if (self.isSelect && !$('option[value=\"' + escape(itemValue) + '\"]',self.$element)[0]) {\n        var $option = $('<option selected>' + htmlEncode(itemText) + '</option>');\n        $option.data('item', item);\n        $option.attr('value', itemValue);\n        self.$element.append($option);\n      }\n\n      if (!dontPushVal)\n        self.pushVal();\n\n      // Add class when reached maxTags\n      if (self.options.maxTags === self.itemsArray.length)\n        self.$container.addClass('bootstrap-tagsinput-max');\n\n      self.$element.trigger($.Event('itemAdded', { item: item }));\n    },\n\n    /**\n     * Removes the given item. Pass true to dontPushVal to prevent updating the\n     * elements val()\n     */\n    remove: function(item, dontPushVal) {\n      var self = this;\n\n      if (self.objectItems) {\n        if (typeof item === \"object\")\n          item = $.grep(self.itemsArray, function(other) { return self.options.itemValue(other) ==  self.options.itemValue(item); } )[0];\n        else\n          item = $.grep(self.itemsArray, function(other) { return self.options.itemValue(other) ==  item; } )[0];\n      }\n\n      if (item) {\n        $('.tag', self.$container).filter(function() { return $(this).data('item') === item; }).remove();\n        $('option', self.$element).filter(function() { return $(this).data('item') === item; }).remove();\n        self.itemsArray.splice($.inArray(item, self.itemsArray), 1);\n      }\n\n      if (!dontPushVal)\n        self.pushVal();\n\n      // Remove class when reached maxTags\n      if (self.options.maxTags > self.itemsArray.length)\n        self.$container.removeClass('bootstrap-tagsinput-max');\n\n      self.$element.trigger($.Event('itemRemoved',  { item: item }));\n    },\n\n    /**\n     * Removes all items\n     */\n    removeAll: function() {\n      var self = this;\n\n      $('.tag', self.$container).remove();\n      $('option', self.$element).remove();\n\n      while(self.itemsArray.length > 0)\n        self.itemsArray.pop();\n\n      self.pushVal();\n\n      if (self.options.maxTags && !this.isEnabled())\n        this.enable();\n    },\n\n    /**\n     * Refreshes the tags so they match the text/value of their corresponding\n     * item.\n     */\n    refresh: function() {\n      var self = this;\n      $('.tag', self.$container).each(function() {\n        var $tag = $(this),\n            item = $tag.data('item'),\n            itemValue = self.options.itemValue(item),\n            itemText = self.options.itemText(item),\n            tagClass = self.options.tagClass(item);\n\n          // Update tag's class and inner text\n          $tag.attr('class', null);\n          $tag.addClass('tag ' + htmlEncode(tagClass));\n          $tag.contents().filter(function() {\n            return this.nodeType == 3;\n          })[0].nodeValue = htmlEncode(itemText);\n\n          if (self.isSelect) {\n            var option = $('option', self.$element).filter(function() { return $(this).data('item') === item; });\n            option.attr('value', itemValue);\n          }\n      });\n    },\n\n    /**\n     * Returns the items added as tags\n     */\n    items: function() {\n      return this.itemsArray;\n    },\n\n    /**\n     * Assembly value by retrieving the value of each item, and set it on the\n     * element.\n     */\n    pushVal: function() {\n      var self = this,\n          val = $.map(self.items(), function(item) {\n            return self.options.itemValue(item).toString();\n          });\n\n      self.$element.val(val, true).trigger('change');\n    },\n\n    /**\n     * Initializes the tags input behaviour on the element\n     */\n    build: function(options) {\n      var self = this;\n\n      self.options = $.extend({}, defaultOptions, options);\n      var typeahead = self.options.typeahead || {};\n\n      // When itemValue is set, freeInput should always be false\n      if (self.objectItems)\n        self.options.freeInput = false;\n\n      makeOptionItemFunction(self.options, 'itemValue');\n      makeOptionItemFunction(self.options, 'itemText');\n      makeOptionItemFunction(self.options, 'tagClass');\n\n      // for backwards compatibility, self.options.source is deprecated\n      if (self.options.source)\n        typeahead.source = self.options.source;\n\n      if (typeahead.source && $.fn.typeahead) {\n        makeOptionFunction(typeahead, 'source');\n\n        self.$input.typeahead({\n          source: function (query, process) {\n            function processItems(items) {\n              var texts = [];\n\n              for (var i = 0; i < items.length; i++) {\n                var text = self.options.itemText(items[i]);\n                map[text] = items[i];\n                texts.push(text);\n              }\n              process(texts);\n            }\n\n            this.map = {};\n            var map = this.map,\n                data = typeahead.source(query);\n\n            if ($.isFunction(data.success)) {\n              // support for Angular promises\n              data.success(processItems);\n            } else {\n              // support for functions and jquery promises\n              $.when(data)\n               .then(processItems);\n            }\n          },\n          updater: function (text) {\n            self.add(this.map[text]);\n          },\n          matcher: function (text) {\n            return (text.toLowerCase().indexOf(this.query.trim().toLowerCase()) !== -1);\n          },\n          sorter: function (texts) {\n            return texts.sort();\n          },\n          highlighter: function (text) {\n            var regex = new RegExp( '(' + this.query + ')', 'gi' );\n            return text.replace( regex, \"<strong>$1</strong>\" );\n          }\n        });\n      }\n\n      self.$container.on('click', $.proxy(function(event) {\n        self.$input.focus();\n      }, self));\n\n      self.$container.on('blur', 'input', $.proxy(function(event) {\n        var $input = $(event.target);\n        self.add($input.val());\n        $input.val('');\n        event.preventDefault();\n      }, self));\n\n      self.$container.on('keydown', 'input', $.proxy(function(event) {\n        var $input = $(event.target),\n            $inputWrapper = self.findInputWrapper();\n\n        switch (event.which) {\n          // BACKSPACE\n          case 8:\n            if (doGetCaretPosition($input[0]) === 0) {\n              var prev = $inputWrapper.prev();\n              if (prev) {\n                self.remove(prev.data('item'));\n              }\n            }\n            break;\n\n          // DELETE\n          case 46:\n            if (doGetCaretPosition($input[0]) === 0) {\n              var next = $inputWrapper.next();\n              if (next) {\n                self.remove(next.data('item'));\n              }\n            }\n            break;\n\n          // LEFT ARROW\n          case 37:\n            // Try to move the input before the previous tag\n            var $prevTag = $inputWrapper.prev();\n            if ($input.val().length === 0 && $prevTag[0]) {\n              $prevTag.before($inputWrapper);\n              $input.focus();\n            }\n            break;\n          // RIGHT ARROW\n          case 39:\n            // Try to move the input after the next tag\n            var $nextTag = $inputWrapper.next();\n            if ($input.val().length === 0 && $nextTag[0]) {\n              $nextTag.after($inputWrapper);\n              $input.focus();\n            }\n            break;\n         default:\n            // When key corresponds one of the confirmKeys, add current input\n            // as a new tag\n            if (self.options.freeInput && $.inArray(event.which, self.options.confirmKeys) >= 0) {\n              self.add($input.val());\n              $input.val('');\n              event.preventDefault();\n            }\n        }\n\n        // Reset internal input's size\n        $input.attr('size', Math.max(this.inputSize, $input.val().length));\n      }, self));\n\n      // Remove icon clicked\n      self.$container.on('click', '[data-role=remove]', $.proxy(function(event) {\n        self.remove($(event.target).closest('.tag').data('item'));\n        // Grafana mod, if tags input used in popover the click event will bubble up and hide popover\n        event.stopPropagation();\n      }, self));\n\n      // Only add existing value as tags when using strings as tags\n      if (self.options.itemValue === defaultOptions.itemValue) {\n        if (self.$element[0].tagName === 'INPUT') {\n            self.add(self.$element.val());\n        } else {\n          $('option', self.$element).each(function() {\n            self.add($(this).attr('value'), true);\n          });\n        }\n      }\n    },\n\n    /**\n     * Removes all tagsinput behaviour and unregsiter all event handlers\n     */\n    destroy: function() {\n      var self = this;\n\n      // Unbind events\n      self.$container.off('keypress', 'input');\n      self.$container.off('click', '[role=remove]');\n\n      self.$container.remove();\n      self.$element.removeData('tagsinput');\n      self.$element.show();\n    },\n\n    /**\n     * Sets focus on the tagsinput\n     */\n    focus: function() {\n      this.$input.focus();\n    },\n\n    /**\n     * Returns the internal input element\n     */\n    input: function() {\n      return this.$input;\n    },\n\n    /**\n     * Returns the element which is wrapped around the internal input. This\n     * is normally the $container, but typeahead.js moves the $input element.\n     */\n    findInputWrapper: function() {\n      var elt = this.$input[0],\n          container = this.$container[0];\n      while(elt && elt.parentNode !== container)\n        elt = elt.parentNode;\n\n      return $(elt);\n    }\n  };\n\n  /**\n   * Register JQuery plugin\n   */\n  $.fn.tagsinput = function(arg1, arg2) {\n    var results = [];\n\n    this.each(function() {\n      var tagsinput = $(this).data('tagsinput');\n\n      // Initialize a new tags input\n      if (!tagsinput) {\n        tagsinput = new TagsInput(this, arg1);\n        $(this).data('tagsinput', tagsinput);\n        results.push(tagsinput);\n\n        if (this.tagName === 'SELECT') {\n          $('option', $(this)).attr('selected', 'selected');\n        }\n\n        // Init tags from $(this).val()\n        $(this).val($(this).val());\n      } else {\n        // Invoke function on existing tags input\n        var retVal = tagsinput[arg1](arg2);\n        if (retVal !== undefined)\n          results.push(retVal);\n      }\n    });\n\n    if ( typeof arg1 == 'string') {\n      // Return the results from the invoked function calls\n      return results.length > 1 ? results : results[0];\n    } else {\n      return results;\n    }\n  };\n\n  $.fn.tagsinput.Constructor = TagsInput;\n\n  /**\n   * Most options support both a string or number as well as a function as\n   * option value. This function makes sure that the option with the given\n   * key in the given options is wrapped in a function\n   */\n  function makeOptionItemFunction(options, key) {\n    if (typeof options[key] !== 'function') {\n      var propertyName = options[key];\n      options[key] = function(item) { return item[propertyName]; };\n    }\n  }\n  function makeOptionFunction(options, key) {\n    if (typeof options[key] !== 'function') {\n      var value = options[key];\n      options[key] = function() { return value; };\n    }\n  }\n  /**\n   * HtmlEncodes the given value\n   */\n  var htmlEncodeContainer = $('<div />');\n  function htmlEncode(value) {\n    if (value) {\n      return htmlEncodeContainer.text(value).html();\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * Returns the position of the caret in the given input field\n   * http://flightschool.acylt.com/devnotes/caret-position-woes/\n   */\n  function doGetCaretPosition(oField) {\n    var iCaretPos = 0;\n    if (document.selection) {\n      oField.focus ();\n      var oSel = document.selection.createRange();\n      oSel.moveStart ('character', -oField.value.length);\n      iCaretPos = oSel.text.length;\n    } else if (oField.selectionStart || oField.selectionStart == '0') {\n      iCaretPos = oField.selectionStart;\n    }\n    return (iCaretPos);\n  }\n\n  /**\n   * Initialize tagsinput behaviour on inputs and selects which have\n   * data-role=tagsinput\n   */\n  $(function() {\n    $(\"input[data-role=tagsinput], select[multiple][data-role=tagsinput]\").tagsinput();\n  });\n})(window.jQuery);\n","var path = 'public/app/plugins/panel/dashlist/module.html';\nvar html = \"<div>\\n  <div class=dashlist ng-repeat=\\\"group in ctrl.groups\\\">\\n    <div class=dashlist-section ng-if=group.show>\\n      <h6 class=dashlist-section-header ng-show=ctrl.panel.headings>\\n        {{group.header}}\\n      </h6>\\n      <div class=dashlist-item ng-repeat=\\\"dash in group.list\\\">\\n        <a class=\\\"dashlist-link dashlist-link-{{dash.type}}\\\" href={{dash.url}}>\\n          <span class=dashlist-title>\\n            {{dash.title}}\\n          </span>\\n          <span class=dashlist-star ng-click=\\\"ctrl.starDashboard(dash, $event)\\\">\\n            <i class=fa ng-class=\\\"{'fa-star': dash.isStarred, 'fa-star-o': dash.isStarred === false}\\\"></i>\\n          </span>\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/datasource/graphite/partials/query.editor.html';\nvar html = \"<query-editor-row query-ctrl=ctrl has-text-edit-mode=true>\\n\\n  <div class=gf-form ng-show=ctrl.target.textEditor>\\n    <input type=text class=gf-form-input ng-model=ctrl.target.target spellcheck=false ng-blur=ctrl.targetTextChanged()>\\n  </div>\\n\\n  <div ng-hide=ctrl.target.textEditor>\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-6 query-keyword\\\">Series</label>\\n      </div>\\n\\n      <div ng-if=ctrl.queryModel.seriesByTagUsed ng-repeat=\\\"tag in ctrl.queryModel.tags\\\" class=gf-form>\\n        <gf-form-dropdown model=tag.key allow-custom=true label-mode=true debounce=true placeholder=\\\"Tag key\\\" css-class=query-segment-key get-options=\\\"ctrl.getTags($index, $query)\\\" on-change=\\\"ctrl.tagChanged(tag, $index)\\\"/>\\n        <gf-form-dropdown model=tag.operator label-mode=true css-class=query-segment-operator get-options=ctrl.getTagOperators() on-change=\\\"ctrl.tagChanged(tag, $index)\\\" min-input-width=30 />\\n        <gf-form-dropdown model=tag.value allow-custom=true label-mode=true debounce=true css-class=query-segment-value placeholder=\\\"Tag value\\\" get-options=\\\"ctrl.getTagValues(tag, $index, $query)\\\" on-change=\\\"ctrl.tagChanged(tag, $index)\\\"/>\\n        <label class=\\\"gf-form-label query-keyword\\\" ng-if=ctrl.showDelimiter($index)>AND</label>\\n      </div>\\n\\n      <div ng-if=ctrl.queryModel.seriesByTagUsed ng-repeat=\\\"segment in ctrl.addTagSegments\\\" role=menuitem class=gf-form>\\n        <metric-segment segment=segment get-options=ctrl.getTagsAsSegments($query) on-change=ctrl.addNewTag(segment) debounce=true />\\n      </div>\\n\\n      <div ng-if=!ctrl.queryModel.seriesByTagUsed ng-repeat=\\\"segment in ctrl.segments\\\" role=menuitem class=gf-form>\\n        <metric-segment segment=segment get-options=\\\"ctrl.getAltSegments($index, $query)\\\" on-change=\\\"ctrl.segmentValueChanged(segment, $index)\\\"/>\\n      </div>\\n\\n      <div ng-if=ctrl.paused class=gf-form>\\n        <a ng-click=ctrl.unpause() class=\\\"gf-form-label query-part\\\"><i class=\\\"fa fa-play\\\"></i></a>\\n      </div>\\n\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n    </div>\\n\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-6 query-keyword\\\">Functions</label>\\n      </div>\\n\\n      <div ng-repeat=\\\"func in ctrl.queryModel.functions\\\" class=gf-form>\\n        <span graphite-func-editor class=\\\"gf-form-label query-part\\\" ng-hide=func.hidden></span>\\n      </div>\\n\\n      <div class=\\\"gf-form dropdown\\\">\\n        <span graphite-add-func></span>\\n      </div>\\n\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</query-editor-row>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/features/admin/partials/orgs.html';\nvar html = \"<page-header model=navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\">\\n  <div class=page-action-bar>\\n    <div class=page-action-bar__spacer></div>\\n    <a class=\\\"page-header__cta btn btn-primary\\\" href=org/new>\\n      New org\\n    </a>\\n  </div>\\n\\n  <table class=\\\"filter-table form-inline filter-table--hover\\\">\\n    <thead>\\n      <tr>\\n        <th>Id</th>\\n        <th>Name</th>\\n        <th style=width:1%></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr ng-repeat=\\\"org in orgs\\\">\\n        <td class=link-td>\\n          <a href=admin/orgs/edit/{{org.id}}>\\n            {{org.id}}\\n          </a>\\n        </td>\\n        <td class=link-td>\\n          <a href=admin/orgs/edit/{{org.id}}>\\n            {{org.name}}\\n          </a>\\n        </td>\\n        <td class=text-right>\\n          <a ng-click=deleteOrg(org) class=\\\"btn btn-danger btn-small\\\">\\n            <i class=\\\"fa fa-remove\\\"></i>\\n          </a>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","export const GRID_CELL_HEIGHT = 30;\nexport const GRID_CELL_VMARGIN = 10;\nexport const GRID_COLUMN_COUNT = 24;\nexport const REPEAT_DIR_VERTICAL = 'v';\n\nexport const DEFAULT_PANEL_SPAN = 4;\nexport const DEFAULT_ROW_HEIGHT = 250;\nexport const MIN_PANEL_HEIGHT = GRID_CELL_HEIGHT * 3;\n\nexport const LS_PANEL_COPY_KEY = 'panel-copy';\n\nexport const PANEL_BORDER = 2;\n","import _ from 'lodash';\nimport { auto } from 'angular';\n\nexport class QueryCtrl {\n  target: any;\n  datasource: any;\n  panelCtrl: any;\n  panel: any;\n  hasRawMode: boolean;\n  error: string;\n  isLastQuery: boolean;\n\n  constructor(public $scope: any, public $injector: auto.IInjectorService) {\n    this.panel = this.panelCtrl.panel;\n    this.isLastQuery = _.indexOf(this.panel.targets, this.target) === this.panel.targets.length - 1;\n  }\n\n  refresh() {\n    this.panelCtrl.refresh();\n  }\n}\n","import { NavModelItem } from '@grafana/data';\n\nexport enum ActionTypes {\n  UpdateNavIndex = 'UPDATE_NAV_INDEX',\n}\n\nexport type Action = UpdateNavIndexAction;\n\nexport interface UpdateNavIndexAction {\n  type: ActionTypes.UpdateNavIndex;\n  payload: NavModelItem;\n}\n\nexport const updateNavIndex = (item: NavModelItem): UpdateNavIndexAction => ({\n  type: ActionTypes.UpdateNavIndex,\n  payload: item,\n});\n","var path = 'public/app/plugins/datasource/mysql/partials/query.editor.html';\nvar html = \"<query-editor-row query-ctrl=ctrl has-text-edit-mode=true>\\n\\n  <div ng-if=ctrl.target.rawQuery>\\n    <div class=gf-form-inline>\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <code-editor content=ctrl.target.rawSql datasource=ctrl.datasource on-change=ctrl.panelCtrl.refresh() data-mode=sql>\\n        </code-editor>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div ng-if=!ctrl.target.rawQuery>\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-6\\\">FROM</label>\\n        <metric-segment segment=ctrl.tableSegment get-options=ctrl.getTableSegments() on-change=ctrl.tableChanged()></metric-segment>\\n\\n        <label class=\\\"gf-form-label query-keyword width-7\\\">Time column</label>\\n        <metric-segment segment=ctrl.timeColumnSegment get-options=ctrl.getTimeColumnSegments() on-change=ctrl.timeColumnChanged()></metric-segment>\\n\\n        <label class=\\\"gf-form-label query-keyword width-9\\\">\\n          Metric column\\n          <info-popover mode=right-normal>Column to be used as metric name for the value column.</info-popover>\\n        </label>\\n        <metric-segment segment=ctrl.metricColumnSegment get-options=ctrl.getMetricColumnSegments() on-change=ctrl.metricColumnChanged()></metric-segment>\\n      </div>\\n\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=gf-form-inline ng-repeat=\\\"selectParts in ctrl.selectParts\\\">\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-6\\\">\\n          <span ng-show=\\\"$index === 0\\\">SELECT</span>&nbsp;\\n        </label>\\n      </div>\\n\\n      <div class=gf-form ng-repeat=\\\"part in selectParts\\\">\\n        <sql-part-editor class=\\\"gf-form-label sql-part\\\" part=part handle-event=\\\"ctrl.handleSelectPartEvent(selectParts, part, $event)\\\">\\n        </sql-part-editor>\\n      </div>\\n\\n      <div class=gf-form>\\n        <label class=dropdown dropdown-typeahead2=ctrl.selectMenu dropdown-typeahead-on-select=\\\"ctrl.addSelectPart(selectParts, $item, $subItem)\\\" button-template-class=\\\"gf-form-label query-part\\\">\\n        </label>\\n      </div>\\n\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n    </div>\\n\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-6\\\">WHERE</label>\\n      </div>\\n\\n      <div class=gf-form ng-repeat=\\\"part in ctrl.whereParts\\\">\\n        <sql-part-editor class=\\\"gf-form-label sql-part\\\" part=part handle-event=\\\"ctrl.handleWherePartEvent(ctrl.whereParts, part, $event, $index)\\\">\\n        </sql-part-editor>\\n      </div>\\n\\n      <div class=gf-form>\\n        <metric-segment segment=ctrl.whereAdd get-options=ctrl.getWhereOptions() on-change=\\\"ctrl.addWhereAction(part, $index)\\\"></metric-segment>\\n      </div>\\n\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label query-keyword width-6\\\">\\n          <span>GROUP BY</span>\\n        </label>\\n\\n        <sql-part-editor ng-repeat=\\\"part in ctrl.groupParts\\\" part=part class=\\\"gf-form-label sql-part\\\" handle-event=\\\"ctrl.handleGroupPartEvent(part, $index, $event)\\\">\\n        </sql-part-editor>\\n      </div>\\n\\n      <div class=gf-form>\\n        <metric-segment segment=ctrl.groupAdd get-options=ctrl.getGroupOptions() on-change=\\\"ctrl.addGroupAction(part, $index)\\\"></metric-segment>\\n      </div>\\n\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <div class=gf-form-inline>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label query-keyword\\\">Format as</label>\\n      <div class=gf-form-select-wrapper>\\n        <select class=\\\"gf-form-input gf-size-auto\\\" ng-model=ctrl.target.format ng-options=\\\"f.value as f.text for f in ctrl.formats\\\" ng-change=ctrl.refresh()></select>\\n      </div>\\n    </div>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label query-keyword pointer\\\" ng-click=ctrl.toggleEditorMode() ng-show=\\\"ctrl.panelCtrl.panel.type !== 'table'\\\">\\n        <span ng-show=ctrl.target.rawQuery>Query Builder</span>\\n        <span ng-hide=ctrl.target.rawQuery>Edit SQL</span>\\n      </label>\\n    </div>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label query-keyword pointer\\\" ng-click=\\\"ctrl.showHelp = !ctrl.showHelp\\\">\\n        Show Help\\n        <i class=\\\"fa fa-caret-down\\\" ng-show=ctrl.showHelp></i>\\n        <i class=\\\"fa fa-caret-right\\\" ng-hide=ctrl.showHelp></i>\\n      </label>\\n    </div>\\n    <div class=gf-form ng-show=ctrl.lastQueryMeta>\\n      <label class=\\\"gf-form-label query-keyword pointer\\\" ng-click=\\\"ctrl.showLastQuerySQL = !ctrl.showLastQuerySQL\\\">\\n        Generated SQL\\n        <i class=\\\"fa fa-caret-down\\\" ng-show=ctrl.showLastQuerySQL></i>\\n        <i class=\\\"fa fa-caret-right\\\" ng-hide=ctrl.showLastQuerySQL></i>\\n      </label>\\n    </div>\\n    <div class=\\\"gf-form gf-form--grow\\\">\\n      <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n    </div>\\n  </div>\\n\\n  <div class=gf-form ng-show=ctrl.showLastQuerySQL>\\n    <pre class=gf-form-pre>{{ctrl.lastQueryMeta.sql}}</pre>\\n  </div>\\n\\n  <div class=gf-form ng-show=ctrl.showHelp>\\n    <pre class=\\\"gf-form-pre alert alert-info\\\">Time series:\\n- return column named time or time_sec (in UTC), as a unix time stamp or any sql native date data type. You can use the macros below.\\n- return column(s) with numeric datatype as values\\nOptional:\\n  - return column named <i>metric</i> to represent the series name.\\n  - If multiple value columns are returned the metric column is used as prefix.\\n  - If no column named metric is found the column name of the value column is used as series name\\n\\nResultsets of time series queries need to be sorted by time.\\n\\nTable:\\n- return any set of columns\\n\\nMacros:\\n- $__time(column) -&gt; UNIX_TIMESTAMP(column) as time_sec\\n- $__timeEpoch(column) -&gt; UNIX_TIMESTAMP(column) as time_sec\\n- $__timeFilter(column) -&gt; column BETWEEN FROM_UNIXTIME(1492750877) AND FROM_UNIXTIME(1492750877)\\n- $__unixEpochFilter(column) -&gt;  time_unix_epoch &gt; 1492750877 AND time_unix_epoch &lt; 1492750877\\n- $__unixEpochNanoFilter(column) -&gt;  column &gt;= 1494410783152415214 AND column &lt;= 1494497183142514872\\n- $__timeGroup(column,'5m'[, fillvalue]) -&gt; cast(cast(UNIX_TIMESTAMP(column)/(300) as signed)*300 as signed)\\n     by setting fillvalue grafana will fill in missing values according to the interval\\n     fillvalue can be either a literal value, NULL or previous; previous will fill in the previous seen value or NULL if none has been seen yet\\n- $__timeGroupAlias(column,'5m') -&gt; cast(cast(UNIX_TIMESTAMP(column)/(300) as signed)*300 as signed) AS \\\"time\\\"\\n- $__unixEpochGroup(column,'5m') -&gt; column DIV 300 * 300\\n- $__unixEpochGroupAlias(column,'5m') -&gt; column DIV 300 * 300 AS \\\"time\\\"\\n\\nExample of group by and order by with $__timeGroup:\\nSELECT\\n  $__timeGroupAlias(timestamp_col, '1h'),\\n  sum(value_double) as value\\nFROM yourtable\\nGROUP BY 1\\nORDER BY 1\\n\\nOr build your own conditionals using these macros which just return the values:\\n- $__timeFrom() -&gt; FROM_UNIXTIME(1492750877)\\n- $__timeTo() -&gt;  FROM_UNIXTIME(1492750877)\\n- $__unixEpochFrom() -&gt;  1492750877\\n- $__unixEpochTo() -&gt;  1492750877\\n- $__unixEpochNanoFrom() -&gt;  1494410783152415214\\n- $__unixEpochNanoTo() -&gt;  1494497183142514872\\n    </pre>\\n  </div>\\n\\n  \\n\\n  <div class=gf-form ng-show=ctrl.lastQueryError>\\n    <pre class=\\\"gf-form-pre alert alert-error\\\">{{ctrl.lastQueryError}}</pre>\\n  </div>\\n\\n</query-editor-row>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { ThunkAction } from 'redux-thunk';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { StoreState, Team, TeamGroup, TeamMember } from 'app/types';\nimport { updateNavIndex, UpdateNavIndexAction } from 'app/core/actions';\nimport { buildNavModel } from './navModel';\n\nexport enum ActionTypes {\n  LoadTeams = 'LOAD_TEAMS',\n  LoadTeam = 'LOAD_TEAM',\n  SetSearchQuery = 'SET_TEAM_SEARCH_QUERY',\n  SetSearchMemberQuery = 'SET_TEAM_MEMBER_SEARCH_QUERY',\n  LoadTeamMembers = 'TEAM_MEMBERS_LOADED',\n  LoadTeamGroups = 'TEAM_GROUPS_LOADED',\n}\n\nexport interface LoadTeamsAction {\n  type: ActionTypes.LoadTeams;\n  payload: Team[];\n}\n\nexport interface LoadTeamAction {\n  type: ActionTypes.LoadTeam;\n  payload: Team;\n}\n\nexport interface LoadTeamMembersAction {\n  type: ActionTypes.LoadTeamMembers;\n  payload: TeamMember[];\n}\n\nexport interface LoadTeamGroupsAction {\n  type: ActionTypes.LoadTeamGroups;\n  payload: TeamGroup[];\n}\n\nexport interface SetSearchQueryAction {\n  type: ActionTypes.SetSearchQuery;\n  payload: string;\n}\n\nexport interface SetSearchMemberQueryAction {\n  type: ActionTypes.SetSearchMemberQuery;\n  payload: string;\n}\n\nexport type Action =\n  | LoadTeamsAction\n  | SetSearchQueryAction\n  | LoadTeamAction\n  | LoadTeamMembersAction\n  | SetSearchMemberQueryAction\n  | LoadTeamGroupsAction;\n\ntype ThunkResult<R> = ThunkAction<R, StoreState, undefined, Action | UpdateNavIndexAction>;\n\nconst teamsLoaded = (teams: Team[]): LoadTeamsAction => ({\n  type: ActionTypes.LoadTeams,\n  payload: teams,\n});\n\nconst teamLoaded = (team: Team): LoadTeamAction => ({\n  type: ActionTypes.LoadTeam,\n  payload: team,\n});\n\nconst teamMembersLoaded = (teamMembers: TeamMember[]): LoadTeamMembersAction => ({\n  type: ActionTypes.LoadTeamMembers,\n  payload: teamMembers,\n});\n\nconst teamGroupsLoaded = (teamGroups: TeamGroup[]): LoadTeamGroupsAction => ({\n  type: ActionTypes.LoadTeamGroups,\n  payload: teamGroups,\n});\n\nexport const setSearchMemberQuery = (searchQuery: string): SetSearchMemberQueryAction => ({\n  type: ActionTypes.SetSearchMemberQuery,\n  payload: searchQuery,\n});\n\nexport const setSearchQuery = (searchQuery: string): SetSearchQueryAction => ({\n  type: ActionTypes.SetSearchQuery,\n  payload: searchQuery,\n});\n\nexport function loadTeams(): ThunkResult<void> {\n  return async dispatch => {\n    const response = await getBackendSrv().get('/api/teams/search', { perpage: 1000, page: 1 });\n    dispatch(teamsLoaded(response.teams));\n  };\n}\n\nexport function loadTeam(id: number): ThunkResult<void> {\n  return async dispatch => {\n    const response = await getBackendSrv().get(`/api/teams/${id}`);\n    dispatch(teamLoaded(response));\n    dispatch(updateNavIndex(buildNavModel(response)));\n  };\n}\n\nexport function loadTeamMembers(): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    const response = await getBackendSrv().get(`/api/teams/${team.id}/members`);\n    dispatch(teamMembersLoaded(response));\n  };\n}\n\nexport function addTeamMember(id: number): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().post(`/api/teams/${team.id}/members`, { userId: id });\n    dispatch(loadTeamMembers());\n  };\n}\n\nexport function removeTeamMember(id: number): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().delete(`/api/teams/${team.id}/members/${id}`);\n    dispatch(loadTeamMembers());\n  };\n}\n\nexport function updateTeam(name: string, email: string): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().put(`/api/teams/${team.id}`, { name, email });\n    dispatch(loadTeam(team.id));\n  };\n}\n\nexport function loadTeamGroups(): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    const response = await getBackendSrv().get(`/api/teams/${team.id}/groups`);\n    dispatch(teamGroupsLoaded(response));\n  };\n}\n\nexport function addTeamGroup(groupId: string): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().post(`/api/teams/${team.id}/groups`, { groupId: groupId });\n    dispatch(loadTeamGroups());\n  };\n}\n\nexport function removeTeamGroup(groupId: string): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const team = getStore().team.team;\n    await getBackendSrv().delete(`/api/teams/${team.id}/groups/${groupId}`);\n    dispatch(loadTeamGroups());\n  };\n}\n\nexport function deleteTeam(id: number): ThunkResult<void> {\n  return async dispatch => {\n    await getBackendSrv().delete(`/api/teams/${id}`);\n    dispatch(loadTeams());\n  };\n}\n\nexport function updateTeamMember(member: TeamMember): ThunkResult<void> {\n  return async dispatch => {\n    await getBackendSrv().put(`/api/teams/${member.teamId}/members/${member.userId}`, {\n      permission: member.permission,\n    });\n    dispatch(loadTeamMembers());\n  };\n}\n","import store from 'app/core/store';\nimport _ from 'lodash';\nimport config from 'app/core/config';\n\nexport class ImpressionSrv {\n  constructor() {}\n\n  addDashboardImpression(dashboardId: number) {\n    const impressionsKey = this.impressionKey();\n    let impressions = [];\n    if (store.exists(impressionsKey)) {\n      impressions = JSON.parse(store.get(impressionsKey));\n      if (!_.isArray(impressions)) {\n        impressions = [];\n      }\n    }\n\n    impressions = impressions.filter(imp => {\n      return dashboardId !== imp;\n    });\n\n    impressions.unshift(dashboardId);\n\n    if (impressions.length > 50) {\n      impressions.pop();\n    }\n    store.set(impressionsKey, JSON.stringify(impressions));\n  }\n\n  getDashboardOpened() {\n    let impressions = store.get(this.impressionKey()) || '[]';\n\n    impressions = JSON.parse(impressions);\n\n    impressions = _.filter(impressions, el => {\n      return _.isNumber(el);\n    });\n\n    return impressions;\n  }\n\n  impressionKey() {\n    return 'dashboard_impressions-' + config.bootData.user.orgId;\n  }\n}\n\nconst impressionSrv = new ImpressionSrv();\nexport default impressionSrv;\n","var path = 'public/app/plugins/panel/singlestat/editor.html';\nvar html = \"<div class=editor-row>\\n\\n  <div class=grafana-info-box ng-if=ctrl.panel.gauge.show>\\n    <h5>Gauge Migration</h5>\\n    <p>\\n      Gauge visualizations within the Singlestat panel are deprecated.  Please\\n      migrate this panel to use the Gauge panel\\n    \\n      </p><div class=gf-form-button-row>\\n        <button class=\\\"btn btn-primary\\\" ng-click=ctrl.migrateToGaugePanel(true)>\\n          Migrate to Gauge Panel\\n        </button>\\n        <button class=\\\"btn btn-inverse\\\" ng-click=ctrl.migrateToGaugePanel(false)>\\n          Show as single stat\\n        </button>\\n      </div>\\n    \\n      <br/>\\n      \\n      <div ng-if=ctrl.panel.sparkline.show>\\n        <b>NOTE:</b> Sparklines are not supported in the gauge panel\\n      </div>\\n\\n      <div ng-if=ctrl.panel.prefix>\\n        <b>NOTE:</b> Prefix will not be show in the gauge panel\\n      </div>\\n\\n      <div ng-if=ctrl.panel.postfix>\\n        <b>NOTE:</b> Postfix will not be show in the gauge panel\\n      </div>\\n\\n      <div ng-if=\\\"ctrl.panel.links && ctrl.panel.links.length\\\">\\n        <b>NOTE:</b> Links will be in the upper left corner, rather than anywhere on the gauge\\n      </div>\\n    <p></p>\\n  </div>\\n    \\n\\n  <div class=\\\"section gf-form-group\\\">\\n    <h5 class=section-heading>Value</h5>\\n\\n    <div class=gf-form-inline>\\n      <div class=gf-form ng-if=\\\"ctrl.fieldNames.length > 1\\\">\\n        <label class=\\\"gf-form-label width-6\\\">Field</label>\\n        <div class=\\\"gf-form-select-wrapper width-12\\\">\\n          <select class=gf-form-input ng-model=ctrl.panel.tableColumn ng-options=\\\"f for f in ctrl.fieldNames\\\" ng-change=ctrl.refresh()></select>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-6\\\">Show</label>\\n        <div class=\\\"gf-form-select-wrapper width-12\\\">\\n          <select class=gf-form-input ng-model=ctrl.panel.valueName ng-options=\\\"f.value as f.text for f in ctrl.valueNameOptions\\\" ng-change=ctrl.refresh()></select>\\n        </div>\\n      </div>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-6\\\">Font size</label>\\n        <div class=gf-form-select-wrapper>\\n          <select class=gf-form-input ng-model=ctrl.panel.valueFontSize ng-options=\\\"f for f in ctrl.fontSizes\\\" ng-change=ctrl.render()></select>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-6\\\">Prefix</label>\\n        <input type=text class=\\\"gf-form-input width-12\\\" ng-model=ctrl.panel.prefix ng-change=ctrl.render() ng-model-onblur>\\n      </div>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-6\\\">Font size</label>\\n        <div class=gf-form-select-wrapper>\\n          <select class=gf-form-input ng-model=ctrl.panel.prefixFontSize ng-options=\\\"f for f in ctrl.fontSizes\\\" ng-change=ctrl.render() ng-disabled=!ctrl.canModifyText()></select>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-6\\\">Postfix</label>\\n        <input type=text class=\\\"gf-form-input width-12\\\" ng-model=ctrl.panel.postfix ng-change=ctrl.render() ng-model-onblur>\\n      </div>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-6\\\">Font size</label>\\n        <div class=gf-form-select-wrapper>\\n          <select class=\\\"input-small gf-form-input\\\" ng-model=ctrl.panel.postfixFontSize ng-options=\\\"f for f in ctrl.fontSizes\\\" ng-change=ctrl.render() ng-disabled=!ctrl.canModifyText()></select>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label width-6\\\">Unit</label>\\n      <div class=\\\"gf-form-dropdown-typeahead width-18\\\" ng-model=ctrl.panel.format dropdown-typeahead2=ctrl.unitFormats dropdown-typeahead-on-select=ctrl.setUnitFormat($subItem)></div>\\n    </div>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label width-6\\\">Decimals</label>\\n      <input type=number class=\\\"gf-form-input width-18\\\" placeholder=auto data-placement=right bs-tooltip=\\\"'Override automatic decimal precision for legend and tooltips'\\\" ng-model=ctrl.panel.decimals ng-change=ctrl.refresh() ng-model-onblur>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"section gf-form-group\\\">\\n    <h5 class=section-heading>Coloring</h5>\\n    <div class=gf-form-inline>\\n      <gf-form-switch class=gf-form label-class=width-8 label=Background checked=ctrl.panel.colorBackground on-change=ctrl.render()></gf-form-switch>\\n      <gf-form-switch class=gf-form label-class=width-6 label=Value checked=ctrl.panel.colorValue on-change=ctrl.render()></gf-form-switch>\\n    </div>\\n    <div class=gf-form-inline>\\n      <gf-form-switch class=gf-form label-class=width-8 label=Prefix checked=ctrl.panel.colorPrefix on-change=ctrl.render() ng-disabled=!ctrl.canModifyText()></gf-form-switch>\\n      <gf-form-switch class=gf-form label-class=width-6 label=Postfix checked=ctrl.panel.colorPostfix on-change=ctrl.render() ng-disabled=!ctrl.canModifyText()></gf-form-switch>\\n    </div>\\n    <div class=gf-form-inline>\\n      <div class=\\\"gf-form max-width-21\\\">\\n        <label class=\\\"gf-form-label width-8\\\">Thresholds\\n          <tip>Define two threshold values&lt;br /&gt; 50,80 will produce: value &lt; 50 = Green, 50 &lt;= value &lt; 80 = Yellow, value &gt;= 80 = Red</tip>\\n        </label>\\n        <input type=text class=gf-form-input ng-model=ctrl.panel.thresholds ng-blur=ctrl.render() placeholder=50,80>\\n      </div>\\n    </div>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label width-8\\\">Colors</label>\\n      <span class=gf-form-label ng-repeat=\\\"color in ctrl.panel.colors track by $index\\\">\\n        <color-picker color=color onchange=ctrl.onColorChange($index)></color-picker>\\n      </span>\\n      <span class=gf-form-label>\\n        <a ng-click=ctrl.invertColorOrder()>\\n          Invert\\n        </a>\\n      </span>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"section gf-form-group\\\">\\n    <h5 class=section-heading>Spark lines</h5>\\n    <gf-form-switch class=gf-form label-class=width-9 label=Show checked=ctrl.panel.sparkline.show on-change=ctrl.refresh()></gf-form-switch>\\n    <div ng-if=ctrl.panel.sparkline.show>\\n      <gf-form-switch class=gf-form label-class=width-9 label=\\\"Full height\\\" checked=ctrl.panel.sparkline.full on-change=ctrl.render()></gf-form-switch>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-9\\\">Y-Min</label>\\n        <input type=number class=\\\"gf-form-input width-5\\\" placeholder=auto data-placement=right ng-model=ctrl.panel.sparkline.ymin ng-change=ctrl.render() ng-model-onblur empty-to-null>\\n      </div>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-9\\\">Y-Max</label>\\n        <input type=number class=\\\"gf-form-input width-5\\\" placeholder=auto data-placement=right ng-model=ctrl.panel.sparkline.ymax ng-change=ctrl.render() ng-model-onblur empty-to-null>\\n      </div>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-9\\\">Line Color</label>\\n        <span class=gf-form-label>\\n          <color-picker color=ctrl.panel.sparkline.lineColor onchange=ctrl.onSparklineColorChange></color-picker>\\n        </span>\\n      </div>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-9\\\">Fill Color</label>\\n        <span class=gf-form-label>\\n          <color-picker color=ctrl.panel.sparkline.fillColor onchange=ctrl.onSparklineFillChange></color-picker>\\n        </span>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"section gf-form-group\\\" ng-if=ctrl.panel.gauge.show>\\n    <h5 class=section-heading>Gauge</h5>\\n    <gf-form-switch class=gf-form label-class=width-10 switch-class=max-width-6 label=Show checked=ctrl.panel.gauge.show on-change=ctrl.render()></gf-form-switch>\\n    <div ng-if=ctrl.panel.gauge.show>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-10\\\">Min</label>\\n        <input type=number class=\\\"gf-form-input width-6\\\" placeholder=0 data-placement=right ng-model=ctrl.panel.gauge.minValue ng-change=ctrl.refresh() ng-model-onblur>\\n        <label class=\\\"gf-form-label alert-state-critical\\\" ng-show=ctrl.invalidGaugeRange>\\n          &nbsp; <i class=\\\"fa fa-warning\\\"></i>\\n          Min value is bigger than max.\\n        </label>\\n      </div>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-10\\\">Max</label>\\n        <input type=number class=\\\"gf-form-input width-6\\\" placeholder=0 data-placement=right ng-model=ctrl.panel.gauge.maxValue ng-change=ctrl.refresh() ng-model-onblur>\\n      </div>\\n      <gf-form-switch class=gf-form label-class=width-10 switch-class=max-width-6 label=\\\"Threshold labels\\\" checked=ctrl.panel.gauge.thresholdLabels on-change=ctrl.render()></gf-form-switch>\\n      <gf-form-switch class=gf-form label-class=width-10 switch-class=max-width-6 label=\\\"Threshold markers\\\" checked=ctrl.panel.gauge.thresholdMarkers on-change=ctrl.render()></gf-form-switch>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/datasource/cloudwatch/partials/query.parameter.html';\nvar html = \"<div class=gf-form-inline>\\n        <div class=gf-form>\\n                <label class=\\\"gf-form-label query-keyword width-8\\\">Region</label>\\n                <metric-segment segment=regionSegment get-options=getRegions() on-change=regionChanged()></metric-segment>\\n        </div>\\n\\n        <div class=\\\"gf-form gf-form--grow\\\">\\n                <div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n        </div>\\n</div>\\n\\n<div class=gf-form-inline ng-if=\\\"target.expression.length === 0\\\">\\n\\t<div class=gf-form>\\n\\t\\t<label class=\\\"gf-form-label query-keyword width-8\\\">Metric</label>\\n\\n\\t\\t<metric-segment segment=namespaceSegment get-options=getNamespaces() on-change=namespaceChanged()></metric-segment>\\n\\t\\t<metric-segment segment=metricSegment get-options=getMetrics() on-change=metricChanged()></metric-segment>\\n\\t</div>\\n\\n\\t<div class=gf-form>\\n\\t\\t<label class=\\\"gf-form-label query-keyword\\\">Stats</label>\\n\\t</div>\\n\\n\\t<div class=gf-form ng-repeat=\\\"segment in statSegments\\\">\\n\\t\\t<metric-segment segment=segment get-options=\\\"getStatSegments(segment, $index)\\\" on-change=\\\"statSegmentChanged(segment, $index)\\\"></metric-segment>\\n\\t</div>\\n\\n\\t<div class=\\\"gf-form gf-form--grow\\\">\\n\\t\\t<div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n\\t</div>\\n</div>\\n\\n<div class=gf-form-inline ng-if=\\\"target.expression.length === 0\\\">\\n\\t<div class=gf-form>\\n\\t\\t<label class=\\\"gf-form-label query-keyword width-8\\\">Dimensions</label>\\n\\t\\t<metric-segment ng-repeat=\\\"segment in dimSegments\\\" segment=segment get-options=\\\"getDimSegments(segment, $index)\\\" on-change=\\\"dimSegmentChanged(segment, $index)\\\"></metric-segment>\\n\\t</div>\\n\\n\\t<div class=\\\"gf-form gf-form--grow\\\">\\n\\t\\t<div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n\\t</div>\\n</div>\\n\\n<div class=gf-form-inline ng-if=\\\"target.statistics.length === 1\\\">\\n\\t<div class=gf-form>\\n\\t\\t<label class=\\\"gf-form-label query-keyword width-8\\\">\\n\\t\\t\\tId\\n\\t\\t\\t<info-popover mode=\\\"right-normal \\\">Id can include numbers, letters, and underscore, and must start with a lowercase letter.</info-popover>\\n\\t\\t</label>\\n\\t\\t<input type=\\\"text \\\" class=gf-form-input ng-model=\\\"target.id \\\" spellcheck=false ng-pattern=/^[a-z][a-zA-Z0-9_]*$/ ng-model-onblur ng-change=\\\"onChange() \\\">\\n\\t</div>\\n\\t<div class=\\\"gf-form max-width-30\\\">\\n\\t\\t<label class=\\\"gf-form-label query-keyword width-7\\\">Expression</label>\\n\\t\\t<input type=\\\"text \\\" class=gf-form-input ng-model=\\\"target.expression\\n\\t \\\" spellcheck=false ng-model-onblur ng-change=\\\"onChange() \\\">\\n\\t</div>\\n</div>\\n\\n<div class=gf-form-inline>\\n\\t<div class=gf-form>\\n\\t\\t<label class=\\\"gf-form-label query-keyword width-8\\\">\\n\\t\\t\\tMin period\\n\\t\\t\\t<info-popover mode=\\\"right-normal \\\">Minimum interval between points in seconds</info-popover>\\n\\t\\t</label>\\n\\t\\t<input type=\\\"text \\\" class=gf-form-input ng-model=\\\"target.period \\\" spellcheck=false placeholder=\\\"auto\\n\\t \\\" ng-model-onblur ng-change=\\\"onChange() \\\"/>\\n\\t</div>\\n\\t<div class=\\\"gf-form max-width-30\\\">\\n\\t\\t<label class=\\\"gf-form-label query-keyword width-7\\\">Alias</label>\\n\\t\\t<input type=\\\"text \\\" class=gf-form-input ng-model=\\\"target.alias \\\" spellcheck=false ng-model-onblur ng-change=\\\"onChange() \\\">\\n\\t\\t<info-popover mode=\\\"right-absolute \\\">\\n\\t\\t\\tAlias replacement variables:\\n\\t\\t\\t<ul ng-non-bindable>\\n\\t\\t\\t\\t<li>{{metric}}</li>\\n\\t\\t\\t\\t<li>{{stat}}</li>\\n\\t\\t\\t\\t<li>{{namespace}}</li>\\n\\t\\t\\t\\t<li>{{region}}</li>\\n\\t\\t\\t\\t<li>{{period}}</li>\\n\\t\\t\\t\\t<li>{{label}}</li>\\n\\t\\t\\t\\t<li>{{YOUR_DIMENSION_NAME}}</li>\\n\\t\\t\\t</ul>\\n\\t\\t</info-popover>\\n\\t</div>\\n\\t<div class=gf-form>\\n\\t\\t<gf-form-switch class=gf-form label=\\\"HighRes \\\" label-class=\\\"width-5 \\\" checked=\\\"target.highResolution \\\" on-change=\\\"onChange() \\\">\\n\\t\\t</gf-form-switch>\\n\\t</div>\\n\\n\\t<div class=\\\"gf-form gf-form--grow\\\">\\n\\t\\t<div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n\\t</div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","// Libraries\nimport React, { FunctionComponent } from 'react';\n\n// Components\nimport { Tooltip } from '@grafana/ui';\n\ninterface Props {\n  icon: string;\n  tooltip: string;\n  classSuffix: string;\n  onClick?: () => void;\n  href?: string;\n}\n\nexport const DashNavButton: FunctionComponent<Props> = ({ icon, tooltip, classSuffix, onClick, href }) => {\n  if (onClick) {\n    return (\n      <Tooltip content={tooltip}>\n        <button\n          className={`btn navbar-button navbar-button--${classSuffix}`}\n          onClick={onClick}\n          aria-label={`${tooltip} navbar button`}\n        >\n          <i className={icon} />\n        </button>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Tooltip content={tooltip}>\n      <a className={`btn navbar-button navbar-button--${classSuffix}`} href={href}>\n        <i className={icon} />\n      </a>\n    </Tooltip>\n  );\n};\n","// Libaries\nimport React, { Component } from 'react';\nimport { dateMath } from '@grafana/data';\n\n// Types\nimport { DashboardModel } from '../../state';\nimport { LocationState } from 'app/types';\nimport { TimeRange, TimeOption, RawTimeRange } from '@grafana/data';\n\n// State\nimport { updateLocation } from 'app/core/actions';\n\n// Components\nimport { TimePicker, RefreshPicker } from '@grafana/ui';\n\n// Utils & Services\nimport { getTimeSrv, TimeSrv } from 'app/features/dashboard/services/TimeSrv';\nimport { defaultSelectOptions } from '@grafana/ui/src/components/TimePicker/TimePicker';\n\nexport interface Props {\n  $injector: any;\n  dashboard: DashboardModel;\n  updateLocation: typeof updateLocation;\n  location: LocationState;\n}\n\nexport class DashNavTimeControls extends Component<Props> {\n  timeSrv: TimeSrv = getTimeSrv();\n  $rootScope = this.props.$injector.get('$rootScope');\n\n  get refreshParamInUrl(): string {\n    return this.props.location.query.refresh as string;\n  }\n\n  onChangeRefreshInterval = (interval: string) => {\n    this.timeSrv.setAutoRefresh(interval);\n    this.forceUpdate();\n  };\n\n  onRefresh = () => {\n    this.timeSrv.refreshDashboard();\n    return Promise.resolve();\n  };\n\n  onMoveBack = () => {\n    this.$rootScope.appEvent('shift-time', -1);\n  };\n  onMoveForward = () => {\n    this.$rootScope.appEvent('shift-time', 1);\n  };\n\n  onChangeTimePicker = (timeRange: TimeRange) => {\n    const { dashboard } = this.props;\n    const panel = dashboard.timepicker;\n    const hasDelay = panel.nowDelay && timeRange.raw.to === 'now';\n\n    const adjustedFrom = dateMath.isMathString(timeRange.raw.from) ? timeRange.raw.from : timeRange.from;\n    const adjustedTo = dateMath.isMathString(timeRange.raw.to) ? timeRange.raw.to : timeRange.to;\n    const nextRange = {\n      from: adjustedFrom,\n      to: hasDelay ? 'now-' + panel.nowDelay : adjustedTo,\n    };\n\n    this.timeSrv.setTime(nextRange);\n  };\n\n  onZoom = () => {\n    this.$rootScope.appEvent('zoom-out', 2);\n  };\n\n  setActiveTimeOption = (timeOptions: TimeOption[], rawTimeRange: RawTimeRange): TimeOption[] => {\n    return timeOptions.map(option => {\n      if (option.to === rawTimeRange.to && option.from === rawTimeRange.from) {\n        return {\n          ...option,\n          active: true,\n        };\n      }\n      return {\n        ...option,\n        active: false,\n      };\n    });\n  };\n\n  render() {\n    const { dashboard } = this.props;\n    const intervals = dashboard.timepicker.refresh_intervals;\n    const timePickerValue = this.timeSrv.timeRange();\n    const timeZone = dashboard.getTimezone();\n\n    return (\n      <div className=\"dashboard-timepicker-wrapper\">\n        <TimePicker\n          value={timePickerValue}\n          onChange={this.onChangeTimePicker}\n          timeZone={timeZone}\n          onMoveBackward={this.onMoveBack}\n          onMoveForward={this.onMoveForward}\n          onZoom={this.onZoom}\n          selectOptions={this.setActiveTimeOption(defaultSelectOptions, timePickerValue.raw)}\n        />\n        <RefreshPicker\n          onIntervalChanged={this.onChangeRefreshInterval}\n          onRefresh={this.onRefresh}\n          value={dashboard.refresh}\n          intervals={intervals}\n          tooltip=\"Refresh dashboard\"\n        />\n      </div>\n    );\n  }\n}\n","// Libaries\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\n// Utils & Services\nimport { appEvents } from 'app/core/app_events';\nimport { PlaylistSrv } from 'app/features/playlist/playlist_srv';\n\n// Components\nimport { DashNavButton } from './DashNavButton';\nimport { DashNavTimeControls } from './DashNavTimeControls';\nimport { Tooltip } from '@grafana/ui';\n\n// State\nimport { updateLocation } from 'app/core/actions';\n\n// Types\nimport { DashboardModel } from '../../state';\nimport { StoreState } from 'app/types';\n\nexport interface OwnProps {\n  dashboard: DashboardModel;\n  editview: string;\n  isEditing: boolean;\n  isFullscreen: boolean;\n  $injector: any;\n  updateLocation: typeof updateLocation;\n  onAddPanel: () => void;\n}\n\nexport interface StateProps {\n  location: any;\n}\n\ntype Props = StateProps & OwnProps;\n\nexport class DashNav extends PureComponent<Props> {\n  playlistSrv: PlaylistSrv;\n\n  constructor(props: Props) {\n    super(props);\n    this.playlistSrv = this.props.$injector.get('playlistSrv');\n  }\n\n  onDahboardNameClick = () => {\n    appEvents.emit('show-dash-search');\n  };\n\n  onFolderNameClick = () => {\n    appEvents.emit('show-dash-search', {\n      query: 'folder:current',\n    });\n  };\n\n  onClose = () => {\n    if (this.props.editview) {\n      this.props.updateLocation({\n        query: { editview: null },\n        partial: true,\n      });\n    } else {\n      this.props.updateLocation({\n        query: { panelId: null, edit: null, fullscreen: null, tab: null },\n        partial: true,\n      });\n    }\n  };\n\n  onToggleTVMode = () => {\n    appEvents.emit('toggle-kiosk-mode');\n  };\n\n  onSave = () => {\n    const { $injector } = this.props;\n    const dashboardSrv = $injector.get('dashboardSrv');\n    dashboardSrv.saveDashboard();\n  };\n\n  onOpenSettings = () => {\n    this.props.updateLocation({\n      query: { editview: 'settings' },\n      partial: true,\n    });\n  };\n\n  onStarDashboard = () => {\n    const { dashboard, $injector } = this.props;\n    const dashboardSrv = $injector.get('dashboardSrv');\n\n    dashboardSrv.starDashboard(dashboard.id, dashboard.meta.isStarred).then((newState: any) => {\n      dashboard.meta.isStarred = newState;\n      this.forceUpdate();\n    });\n  };\n\n  onPlaylistPrev = () => {\n    this.playlistSrv.prev();\n  };\n\n  onPlaylistNext = () => {\n    this.playlistSrv.next();\n  };\n\n  onPlaylistStop = () => {\n    this.playlistSrv.stop();\n    this.forceUpdate();\n  };\n\n  onOpenShare = () => {\n    const $rootScope = this.props.$injector.get('$rootScope');\n    const modalScope = $rootScope.$new();\n    modalScope.tabIndex = 0;\n    modalScope.dashboard = this.props.dashboard;\n\n    appEvents.emit('show-modal', {\n      src: 'public/app/features/dashboard/components/ShareModal/template.html',\n      scope: modalScope,\n    });\n  };\n\n  renderDashboardTitleSearchButton() {\n    const { dashboard } = this.props;\n\n    const folderTitle = dashboard.meta.folderTitle;\n    const haveFolder = dashboard.meta.folderId > 0;\n\n    return (\n      <>\n        <div>\n          <div className=\"navbar-page-btn\">\n            {!this.isInFullscreenOrSettings && <i className=\"gicon gicon-dashboard\" />}\n            {haveFolder && (\n              <>\n                <a className=\"navbar-page-btn__folder\" onClick={this.onFolderNameClick}>\n                  {folderTitle}\n                </a>\n                <i className=\"fa fa-chevron-right navbar-page-btn__folder-icon\" />\n              </>\n            )}\n            <a onClick={this.onDahboardNameClick}>\n              {dashboard.title} <i className=\"fa fa-caret-down navbar-page-btn__search\" />\n            </a>\n          </div>\n        </div>\n        {this.isSettings && <span className=\"navbar-settings-title\">&nbsp;/ Settings</span>}\n        <div className=\"navbar__spacer\" />\n      </>\n    );\n  }\n\n  get isInFullscreenOrSettings() {\n    return this.props.editview || this.props.isFullscreen;\n  }\n\n  get isSettings() {\n    return this.props.editview;\n  }\n\n  renderBackButton() {\n    return (\n      <div className=\"navbar-edit\">\n        <Tooltip content=\"Go back (Esc)\">\n          <button className=\"navbar-edit__back-btn\" onClick={this.onClose}>\n            <i className=\"fa fa-arrow-left\" />\n          </button>\n        </Tooltip>\n      </div>\n    );\n  }\n\n  render() {\n    const { dashboard, onAddPanel, location, $injector } = this.props;\n    const { canStar, canSave, canShare, showSettings, isStarred } = dashboard.meta;\n    const { snapshot } = dashboard;\n    const snapshotUrl = snapshot && snapshot.originalUrl;\n    return (\n      <div className=\"navbar\">\n        {this.isInFullscreenOrSettings && this.renderBackButton()}\n        {this.renderDashboardTitleSearchButton()}\n\n        {this.playlistSrv.isPlaying && (\n          <div className=\"navbar-buttons navbar-buttons--playlist\">\n            <DashNavButton\n              tooltip=\"Go to previous dashboard\"\n              classSuffix=\"tight\"\n              icon=\"fa fa-step-backward\"\n              onClick={this.onPlaylistPrev}\n            />\n            <DashNavButton\n              tooltip=\"Stop playlist\"\n              classSuffix=\"tight\"\n              icon=\"fa fa-stop\"\n              onClick={this.onPlaylistStop}\n            />\n            <DashNavButton\n              tooltip=\"Go to next dashboard\"\n              classSuffix=\"tight\"\n              icon=\"fa fa-forward\"\n              onClick={this.onPlaylistNext}\n            />\n          </div>\n        )}\n\n        <div className=\"navbar-buttons navbar-buttons--actions\">\n          {canSave && (\n            <DashNavButton\n              tooltip=\"Add panel\"\n              classSuffix=\"add-panel\"\n              icon=\"gicon gicon-add-panel\"\n              onClick={onAddPanel}\n            />\n          )}\n\n          {canStar && (\n            <DashNavButton\n              tooltip=\"Mark as favorite\"\n              classSuffix=\"star\"\n              icon={`${isStarred ? 'fa fa-star' : 'fa fa-star-o'}`}\n              onClick={this.onStarDashboard}\n            />\n          )}\n\n          {canShare && (\n            <DashNavButton\n              tooltip=\"Share dashboard\"\n              classSuffix=\"share\"\n              icon=\"fa fa-share-square-o\"\n              onClick={this.onOpenShare}\n            />\n          )}\n\n          {canSave && (\n            <DashNavButton tooltip=\"Save dashboard\" classSuffix=\"save\" icon=\"fa fa-save\" onClick={this.onSave} />\n          )}\n\n          {snapshotUrl && (\n            <DashNavButton\n              tooltip=\"Open original dashboard\"\n              classSuffix=\"snapshot-origin\"\n              icon=\"gicon gicon-link\"\n              href={snapshotUrl}\n            />\n          )}\n\n          {showSettings && (\n            <DashNavButton\n              tooltip=\"Dashboard settings\"\n              classSuffix=\"settings\"\n              icon=\"gicon gicon-cog\"\n              onClick={this.onOpenSettings}\n            />\n          )}\n        </div>\n\n        <div className=\"navbar-buttons navbar-buttons--tv\">\n          <DashNavButton\n            tooltip=\"Cycle view mode\"\n            classSuffix=\"tv\"\n            icon=\"fa fa-desktop\"\n            onClick={this.onToggleTVMode}\n          />\n        </div>\n\n        {!dashboard.timepicker.hidden && (\n          <div className=\"navbar-buttons\">\n            <DashNavTimeControls\n              $injector={$injector}\n              dashboard={dashboard}\n              location={location}\n              updateLocation={updateLocation}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n  location: state.location,\n});\n\nconst mapDispatchToProps = {\n  updateLocation,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DashNav);\n","import DashNav from './DashNav';\nexport { DashNav };\n","var path = 'public/app/plugins/panel/graph/tab_thresholds_time_regions.html';\nvar html = \"<graph-threshold-form panel-ctrl=ctrl></graph-threshold-form>\\n<graph-time-region-form panel-ctrl=ctrl></graph-time-region-form>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import React, { PureComponent } from 'react';\nimport { dateTime } from '@grafana/data';\nimport { SyncInfo } from 'app/types';\n\ninterface Props {\n  ldapSyncInfo: SyncInfo;\n}\n\ninterface State {\n  isSyncing: boolean;\n}\n\nconst syncTimeFormat = 'dddd YYYY-MM-DD HH:mm zz';\n\nexport class LdapSyncInfo extends PureComponent<Props, State> {\n  state = {\n    isSyncing: false,\n  };\n\n  handleSyncClick = () => {\n    console.log('Bulk-sync now');\n    this.setState({ isSyncing: !this.state.isSyncing });\n  };\n\n  render() {\n    const { ldapSyncInfo } = this.props;\n    const { isSyncing } = this.state;\n    const nextSyncTime = dateTime(ldapSyncInfo.nextSync).format(syncTimeFormat);\n    const prevSyncSuccessful = ldapSyncInfo && ldapSyncInfo.prevSync;\n    const prevSyncTime = prevSyncSuccessful ? dateTime(ldapSyncInfo.prevSync.started).format(syncTimeFormat) : '';\n\n    return (\n      <>\n        <h3 className=\"page-heading\">\n          LDAP Synchronisation\n          <button className={`btn btn-secondary pull-right`} onClick={this.handleSyncClick} hidden={true}>\n            <span className=\"btn-title\">Bulk-sync now</span>\n            {isSyncing && <i className=\"fa fa-spinner fa-fw fa-spin run-icon\" />}\n          </button>\n        </h3>\n        <div className=\"gf-form-group\">\n          <div className=\"gf-form\">\n            <table className=\"filter-table form-inline\">\n              <tbody>\n                <tr>\n                  <td>Active synchronisation</td>\n                  <td colSpan={2}>{ldapSyncInfo.enabled ? 'Enabled' : 'Disabled'}</td>\n                </tr>\n                <tr>\n                  <td>Scheduled</td>\n                  <td>{ldapSyncInfo.schedule}</td>\n                </tr>\n                <tr>\n                  <td>Next scheduled synchronisation</td>\n                  <td>{nextSyncTime}</td>\n                </tr>\n                <tr>\n                  <td>Last synchronisation</td>\n                  {prevSyncSuccessful && (\n                    <>\n                      <td>{prevSyncTime}</td>\n                      <td>Successful</td>\n                    </>\n                  )}\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","var path = 'public/app/features/org/partials/newOrg.html';\nvar html = \"<page-header model=navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\" ng-form=playlistEditForm>\\n\\t<h3 class=page-sub-heading>\\n\\t\\tNew Organization\\n\\t</h3>\\n\\n\\t<p class=playlist-description>Each organization contains their own dashboards, data sources and configuration, and cannot be shared between orgs. While users may belong to more than one, multiple organization are most frequently used in multi-tenant deployments. </p>\\n\\n\\t<form>\\n\\t\\t<div class=gf-form-group>\\n\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t<span class=\\\"gf-form-label width-10\\\">Org. name</span>\\n\\t\\t\\t\\t<input type=text ng-model=newOrg.name required class=\\\"gf-form-input max-width-21\\\" placeholder=\\\"organization name\\\">\\n\\t\\t\\t</div>\\n\\t\\t\\t<br>\\n\\t\\t\\t<div class=gf-form-buttons-row>\\n\\t\\t\\t\\t<button type=submit class=\\\"btn btn-primary\\\" ng-click=createOrg()>Create</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</form>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/partials/confirm_modal.html';\nvar html = \"<div class=modal-body ng-cloak>\\n\\t<div class=modal-header>\\n\\t\\t<h2 class=modal-header-title>\\n\\t\\t\\t<i class=\\\"fa {{icon}}\\\"></i>\\n\\t\\t\\t<span class=p-l-1>\\n\\t\\t\\t\\t{{title}}\\n\\t\\t\\t</span>\\n\\t\\t</h2>\\n\\n\\t\\t<a class=modal-header-close ng-click=dismiss();>\\n\\t\\t\\t<i class=\\\"fa fa-remove\\\"></i>\\n\\t\\t</a>\\n\\t</div>\\n\\n\\t<div class=\\\"modal-content text-center\\\">\\n\\n\\t\\t<div class=confirm-modal-text>\\n\\t\\t\\t{{text}}\\n\\t\\t\\t<div ng-if=\\\"text2 && text2htmlBind\\\" class=confirm-modal-text2 ng-bind-html=text2></div>\\n      <div ng-if=\\\"text2 && !text2htmlBind\\\" class=confirm-modal-text2>{{text2}}</div>\\n\\t\\t</div>\\n\\n\\t\\t<div class=modal-content-confirm-text ng-if=confirmText>\\n\\t\\t\\t<input type=text class=\\\"gf-form-input width-16\\\" style=display:inline-block placeholder=\\\"Type {{confirmText}} to confirm\\\" ng-model=confirmInput ng-change=updateConfirmText(confirmInput)>\\n\\t\\t</div>\\n\\n\\t\\t<div class=confirm-modal-buttons>\\n\\t\\t\\t<button ng-show=onAltAction type=button class=\\\"btn btn-primary\\\" ng-click=dismiss();onAltAction();>{{altActionText}}</button>\\n\\t\\t\\t<button ng-show=onConfirm type=button class=\\\"btn btn-danger\\\" ng-click=onConfirm();dismiss(); ng-disabled=!confirmTextValid give-focus=true>{{yesText}}</button>\\n\\t\\t\\t<button type=button class=\\\"btn btn-inverse\\\" ng-click=dismiss()>{{noText}}</button>\\n\\t\\t</div>\\n\\t</div>\\n\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","export let store: any;\n\nexport function setStore(newStore: any) {\n  store = newStore;\n}\n","var path = 'public/app/features/admin/partials/stats.html';\nvar html = \"<page-header model=ctrl.navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\">\\n\\t<table class=\\\"filter-table form-inline\\\">\\n\\t\\t<thead>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<th>Name</th>\\n\\t\\t\\t\\t<th>Value</th>\\n\\t\\t\\t</tr>\\n\\t\\t</thead>\\n\\t\\t<tbody>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<td>Total dashboards</td>\\n\\t\\t\\t\\t<td>{{ctrl.stats.dashboards}}</td>\\n\\t\\t\\t</tr>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<td>Total users</td>\\n\\t\\t\\t\\t<td>{{ctrl.stats.users}}</td>\\n\\t\\t\\t</tr>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<td>Active users (seen last 14 days)</td>\\n\\t\\t\\t\\t<td>{{ctrl.stats.activeUsers}}</td>\\n\\t\\t\\t</tr>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<td>Total organizations</td>\\n\\t\\t\\t\\t<td>{{ctrl.stats.orgs}}</td>\\n\\t\\t\\t</tr>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<td>Total datasources</td>\\n\\t\\t\\t\\t<td>{{ctrl.stats.datasources}}</td>\\n\\t\\t\\t</tr>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<td>Total playlists</td>\\n\\t\\t\\t\\t<td>{{ctrl.stats.playlists}}</td>\\n\\t\\t\\t</tr>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<td>Total snapshots</td>\\n\\t\\t\\t\\t<td>{{ctrl.stats.snapshots}}</td>\\n\\t\\t\\t</tr>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<td>Total dashboard tags</td>\\n\\t\\t\\t\\t<td>{{ctrl.stats.tags}}</td>\\n\\t\\t\\t</tr>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<td>Total starred dashboards</td>\\n\\t\\t\\t\\t<td>{{ctrl.stats.stars}}</td>\\n\\t\\t\\t</tr>\\n      <tr>\\n\\t\\t\\t\\t<td>Total alerts</td>\\n\\t\\t\\t\\t<td>{{ctrl.stats.alerts}}</td>\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t</table>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import _ from 'lodash';\nimport { Column, TableData } from '@grafana/data';\n\n/**\n * Extends the standard Column class with variables that get\n * mutated in the angular table panel.\n */\ninterface MutableColumn extends Column {\n  title?: string;\n  sort?: boolean;\n  desc?: boolean;\n  type?: string;\n}\n\nexport default class TableModel implements TableData {\n  columns: MutableColumn[];\n  rows: any[];\n  type: string;\n  columnMap: any;\n\n  constructor(table?: any) {\n    this.columns = [];\n    this.columnMap = {};\n    this.rows = [];\n    this.type = 'table';\n\n    if (table) {\n      if (table.columns) {\n        for (const col of table.columns) {\n          this.addColumn(col);\n        }\n      }\n      if (table.rows) {\n        for (const row of table.rows) {\n          this.addRow(row);\n        }\n      }\n    }\n  }\n\n  sort(options: { col: number; desc: boolean }) {\n    if (options.col === null || this.columns.length <= options.col) {\n      return;\n    }\n\n    this.rows.sort((a, b) => {\n      a = a[options.col];\n      b = b[options.col];\n      // Sort null or undefined separately from comparable values\n      return +(a == null) - +(b == null) || +(a > b) || -(a < b);\n    });\n\n    if (options.desc) {\n      this.rows.reverse();\n    }\n\n    this.columns[options.col].sort = true;\n    this.columns[options.col].desc = options.desc;\n  }\n\n  addColumn(col: Column) {\n    if (!this.columnMap[col.text]) {\n      this.columns.push(col);\n      this.columnMap[col.text] = col;\n    }\n  }\n\n  addRow(row: any[]) {\n    this.rows.push(row);\n  }\n}\n\n// Returns true if both rows have matching non-empty fields as well as matching\n// indexes where one field is empty and the other is not\nfunction areRowsMatching(columns: Column[], row: any[], otherRow: any[]) {\n  let foundFieldToMatch = false;\n  for (let columnIndex = 0; columnIndex < columns.length; columnIndex++) {\n    if (row[columnIndex] !== undefined && otherRow[columnIndex] !== undefined) {\n      if (row[columnIndex] !== otherRow[columnIndex]) {\n        return false;\n      }\n    } else if (row[columnIndex] === undefined || otherRow[columnIndex] === undefined) {\n      foundFieldToMatch = true;\n    }\n  }\n  return foundFieldToMatch;\n}\n\nexport function mergeTablesIntoModel(dst?: TableModel, ...tables: TableModel[]): TableModel {\n  const model = dst || new TableModel();\n\n  if (arguments.length === 1) {\n    return model;\n  }\n  // Single query returns data columns and rows as is\n  if (arguments.length === 2) {\n    model.columns = tables[0].hasOwnProperty('columns') ? [...tables[0].columns] : [];\n    model.rows = tables[0].hasOwnProperty('rows') ? [...tables[0].rows] : [];\n    return model;\n  }\n\n  // Track column indexes of union: name -> index\n  const columnNames: { [key: string]: any } = {};\n\n  // Union of all non-value columns\n  const columnsUnion = tables.slice().reduce(\n    (acc, series) => {\n      series.columns.forEach(col => {\n        const { text } = col;\n        if (columnNames[text] === undefined) {\n          columnNames[text] = acc.length;\n          acc.push(col);\n        }\n      });\n      return acc;\n    },\n    [] as MutableColumn[]\n  );\n\n  // Map old column index to union index per series, e.g.,\n  // given columnNames {A: 0, B: 1} and\n  // data [{columns: [{ text: 'A' }]}, {columns: [{ text: 'B' }]}] => [[0], [1]]\n  const columnIndexMapper = tables.map(series => series.columns.map(col => columnNames[col.text]));\n\n  // Flatten rows of all series and adjust new column indexes\n  const flattenedRows = tables.reduce(\n    (acc, series, seriesIndex) => {\n      const mapper = columnIndexMapper[seriesIndex];\n      series.rows.forEach(row => {\n        const alteredRow: MutableColumn[] = [];\n        // Shifting entries according to index mapper\n        mapper.forEach((to, from) => {\n          alteredRow[to] = row[from];\n        });\n        acc.push(alteredRow);\n      });\n      return acc;\n    },\n    [] as MutableColumn[][]\n  );\n\n  // Merge rows that have same values for columns\n  const mergedRows: { [key: string]: any } = {};\n\n  const compactedRows = flattenedRows.reduce(\n    (acc, row, rowIndex) => {\n      if (!mergedRows[rowIndex]) {\n        // Look from current row onwards\n        let offset = rowIndex + 1;\n        // More than one row can be merged into current row\n        while (offset < flattenedRows.length) {\n          // Find next row that could be merged\n          const match = _.findIndex(flattenedRows, otherRow => areRowsMatching(columnsUnion, row, otherRow), offset);\n          if (match > -1) {\n            const matchedRow = flattenedRows[match];\n            // Merge values from match into current row if there is a gap in the current row\n            for (let columnIndex = 0; columnIndex < columnsUnion.length; columnIndex++) {\n              if (row[columnIndex] === undefined && matchedRow[columnIndex] !== undefined) {\n                row[columnIndex] = matchedRow[columnIndex];\n              }\n            }\n            // Don't visit this row again\n            mergedRows[match] = matchedRow;\n            // Keep looking for more rows to merge\n            offset = match + 1;\n          } else {\n            // No match found, stop looking\n            break;\n          }\n        }\n        acc.push(row);\n      }\n      return acc;\n    },\n    [] as MutableColumn[][]\n  );\n\n  model.columns = columnsUnion;\n  model.rows = compactedRows;\n  return model;\n}\n","import { Field, FieldType } from '../types/dataFrame';\nimport { guessFieldTypeFromValue } from '../dataframe/processDataFrame';\n\nexport function makeFieldParser(value: any, field: Field): (value: string) => any {\n  if (!field.type) {\n    if (field.name === 'time' || field.name === 'Time') {\n      field.type = FieldType.time;\n    } else {\n      field.type = guessFieldTypeFromValue(value);\n    }\n  }\n\n  if (field.type === FieldType.number) {\n    return (value: string) => {\n      return parseFloat(value);\n    };\n  }\n\n  // Will convert anything that starts with \"T\" to true\n  if (field.type === FieldType.boolean) {\n    return (value: string) => {\n      return !(value[0] === 'F' || value[0] === 'f' || value[0] === '0');\n    };\n  }\n\n  // Just pass the string back\n  return (value: string) => value;\n}\n","import { Field, DataFrame, DataFrameDTO, FieldDTO, FieldType } from '../types/dataFrame';\nimport { KeyValue, QueryResultMeta, Labels } from '../types/data';\nimport { guessFieldTypeFromValue, guessFieldTypeForField, toDataFrameDTO } from './processDataFrame';\nimport isArray from 'lodash/isArray';\nimport isString from 'lodash/isString';\nimport { makeFieldParser } from '../utils/fieldParser';\nimport { MutableVector, Vector } from '../types/vector';\nimport { ArrayVector } from '../vector/ArrayVector';\nimport { vectorToArray } from '../vector/vectorToArray';\n\nexport type MutableField<T = any> = Field<T, MutableVector<T>>;\n\ntype MutableVectorCreator = (buffer?: any[]) => MutableVector;\n\nexport const MISSING_VALUE: any = null;\n\nexport class MutableDataFrame<T = any> implements DataFrame, MutableVector<T> {\n  name?: string;\n  labels?: Labels;\n  refId?: string;\n  meta?: QueryResultMeta;\n\n  fields: MutableField[] = [];\n  values: KeyValue<MutableVector> = {};\n\n  private first: Vector = new ArrayVector();\n  private creator: MutableVectorCreator;\n\n  constructor(source?: DataFrame | DataFrameDTO, creator?: MutableVectorCreator) {\n    // This creates the underlying storage buffers\n    this.creator = creator\n      ? creator\n      : (buffer?: any[]) => {\n          return new ArrayVector(buffer);\n        };\n\n    // Copy values from\n    if (source) {\n      const { name, labels, refId, meta, fields } = source;\n      if (name) {\n        this.name = name;\n      }\n      if (labels) {\n        this.labels = labels;\n      }\n      if (refId) {\n        this.refId = refId;\n      }\n      if (meta) {\n        this.meta = meta;\n      }\n      if (fields) {\n        for (const f of fields) {\n          this.addField(f);\n        }\n      }\n    }\n\n    // Get Length to show up if you use spread\n    Object.defineProperty(this, 'length', {\n      enumerable: true,\n      get: () => {\n        return this.first.length;\n      },\n    });\n  }\n\n  // Defined for Vector interface\n  get length() {\n    return this.first.length;\n  }\n\n  addFieldFor(value: any, name?: string): MutableField {\n    return this.addField({\n      name: name || '', // Will be filled in\n      type: guessFieldTypeFromValue(value),\n    });\n  }\n\n  addField(f: Field | FieldDTO, startLength?: number): MutableField {\n    let buffer: any[] | undefined = undefined;\n\n    if (f.values) {\n      if (isArray(f.values)) {\n        buffer = f.values as any[];\n      } else {\n        buffer = (f.values as Vector).toArray();\n      }\n    }\n\n    let type = f.type;\n\n    if (!type && ('time' === f.name || 'Time' === f.name)) {\n      type = FieldType.time;\n    } else {\n      if (!type && buffer && buffer.length) {\n        type = guessFieldTypeFromValue(buffer[0]);\n      }\n      if (!type) {\n        type = FieldType.other;\n      }\n    }\n\n    // Make sure it has a name\n    let name = f.name;\n    if (!name) {\n      if (type === FieldType.time) {\n        name = this.values['Time'] ? `Time ${this.fields.length + 1}` : 'Time';\n      } else {\n        name = `Field ${this.fields.length + 1}`;\n      }\n    }\n\n    const field: MutableField = {\n      name,\n      type,\n      config: f.config || {},\n      values: this.creator(buffer),\n    };\n\n    if (type === FieldType.other) {\n      type = guessFieldTypeForField(field);\n      if (type) {\n        field.type = type;\n      }\n    }\n\n    this.fields.push(field);\n    this.first = this.fields[0].values;\n\n    // The Field Already exists\n    if (this.values[name]) {\n      console.warn(`Duplicate field names found: ${name}, only the first will be accessible`);\n    } else {\n      this.values[name] = field.values;\n    }\n\n    // Make sure the field starts with a given length\n    if (startLength) {\n      while (field.values.length < startLength) {\n        field.values.add(MISSING_VALUE);\n      }\n    } else {\n      this.validate();\n    }\n\n    return field;\n  }\n\n  validate() {\n    // Make sure all arrays are the same length\n    const length = this.fields.reduce((v: number, f) => {\n      return Math.max(v, f.values.length);\n    }, 0);\n\n    // Add empty elements until everything mastches\n    for (const field of this.fields) {\n      while (field.values.length !== length) {\n        field.values.add(MISSING_VALUE);\n      }\n    }\n  }\n\n  private addMissingFieldsFor(value: any) {\n    for (const key of Object.keys(value)) {\n      if (!this.values[key]) {\n        this.addField({\n          name: key,\n          type: guessFieldTypeFromValue(value[key]),\n        });\n      }\n    }\n  }\n\n  /**\n   * Reverse all values\n   */\n  reverse() {\n    for (const f of this.fields) {\n      f.values.reverse();\n    }\n  }\n\n  /**\n   * This will add each value to the corresponding column\n   */\n  appendRow(row: any[]) {\n    // Add any extra columns\n    for (let i = this.fields.length; i < row.length; i++) {\n      this.addField({\n        name: `Field ${i + 1}`,\n        type: guessFieldTypeFromValue(row[i]),\n      });\n    }\n\n    // The first line may change the field types\n    if (this.length < 1) {\n      for (let i = 0; i < this.fields.length; i++) {\n        const f = this.fields[i];\n        if (!f.type || f.type === FieldType.other) {\n          f.type = guessFieldTypeFromValue(row[i]);\n        }\n      }\n    }\n\n    for (let i = 0; i < this.fields.length; i++) {\n      const f = this.fields[i];\n      let v = row[i];\n      if (f.type !== FieldType.string && isString(v)) {\n        if (!f.parse) {\n          f.parse = makeFieldParser(v, f);\n        }\n        v = f.parse(v);\n      }\n      f.values.add(v);\n    }\n  }\n\n  /**\n   * Add all properties of the value as fields on the frame\n   */\n  add(value: T, addMissingFields?: boolean) {\n    if (addMissingFields) {\n      this.addMissingFieldsFor(value);\n    }\n\n    // Will add one value for every field\n    const obj = value as any;\n    for (const field of this.fields) {\n      let val = obj[field.name];\n\n      if (field.type !== FieldType.string && isString(val)) {\n        if (!field.parse) {\n          field.parse = makeFieldParser(val, field);\n        }\n        val = field.parse(val);\n      }\n\n      if (val === undefined) {\n        val = MISSING_VALUE;\n      }\n\n      field.values.add(val);\n    }\n  }\n\n  set(index: number, value: T, addMissingFields?: boolean) {\n    if (index > this.length) {\n      throw new Error('Unable ot set value beyond current length');\n    }\n\n    if (addMissingFields) {\n      this.addMissingFieldsFor(value);\n    }\n\n    const obj = (value as any) || {};\n    for (const field of this.fields) {\n      field.values.set(index, obj[field.name]);\n    }\n  }\n\n  /**\n   * Get an object with a property for each field in the DataFrame\n   */\n  get(idx: number): T {\n    const v: any = {};\n    for (const field of this.fields) {\n      v[field.name] = field.values.get(idx);\n    }\n    return v as T;\n  }\n\n  toArray(): T[] {\n    return vectorToArray(this);\n  }\n\n  /**\n   * The simplified JSON values used in JSON.stringify()\n   */\n  toJSON() {\n    return toDataFrameDTO(this);\n  }\n}\n","var path = 'public/app/features/dashboard/components/RowOptions/template.html';\nvar html = \"<div class=modal-body>\\n\\t<div class=modal-header>\\n\\t\\t<h2 class=modal-header-title>\\n\\t\\t\\t<i class=\\\"fa fa-copy\\\"></i>\\n\\t\\t\\t<span class=p-l-1>Row Options</span>\\n\\t\\t</h2>\\n\\n\\t\\t<a class=modal-header-close ng-click=ctrl.dismiss();>\\n\\t\\t\\t<i class=\\\"fa fa-remove\\\"></i>\\n\\t\\t</a>\\n\\t</div>\\n\\n\\t<form name=ctrl.saveForm ng-submit=ctrl.save() class=\\\"modal-content text-center\\\" novalidate>\\n\\t\\t<div class=section>\\n\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t<span class=\\\"gf-form-label width-7\\\">Title</span>\\n\\t\\t\\t\\t<input type=text class=\\\"gf-form-input max-width-13\\\" ng-model=ctrl.row.title>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t<span class=\\\"gf-form-label width-7\\\">Repeat for</span>\\n\\t\\t\\t\\t<dash-repeat-option panel=ctrl.row></dash-repeat-option>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=gf-form-button-row>\\n\\t\\t\\t\\t<button type=submit class=\\\"btn btn-primary\\\" ng-click=ctrl.update()>Update</button>\\n\\t\\t\\t\\t<button type=button class=\\\"btn btn-inverse\\\" ng-click=ctrl.dismiss()>Cancel</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</form>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","// Types\nimport { NullValueMode, GraphSeriesValue, Field, TimeRange } from '@grafana/data';\n\nexport interface FlotPairsOptions {\n  xField: Field;\n  yField: Field;\n  nullValueMode?: NullValueMode;\n}\n\nexport function getFlotPairs({ xField, yField, nullValueMode }: FlotPairsOptions): GraphSeriesValue[][] {\n  const vX = xField.values;\n  const vY = yField.values;\n  const length = vX.length;\n  if (vY.length !== length) {\n    throw new Error('Unexpected field length');\n  }\n\n  const ignoreNulls = nullValueMode === NullValueMode.Ignore;\n  const nullAsZero = nullValueMode === NullValueMode.AsZero;\n\n  const pairs: any[][] = [];\n\n  for (let i = 0; i < length; i++) {\n    const x = vX.get(i);\n    let y = vY.get(i);\n\n    if (y === null) {\n      if (ignoreNulls) {\n        continue;\n      }\n      if (nullAsZero) {\n        y = 0;\n      }\n    }\n\n    // X must be a value\n    if (x === null) {\n      continue;\n    }\n\n    pairs.push([x, y]);\n  }\n  return pairs;\n}\n\n/**\n * Returns a constant series based on the first value from the provide series.\n * @param seriesData Series\n * @param range Start and end time for the constant series\n */\nexport function getFlotPairsConstant(seriesData: GraphSeriesValue[][], range: TimeRange): GraphSeriesValue[][] {\n  if (!range.from || !range.to || !seriesData || seriesData.length === 0) {\n    return [];\n  }\n\n  const from = range.from.valueOf();\n  const to = range.to.valueOf();\n  const value = seriesData[0][1];\n  return [[from, value], [to, value]];\n}\n","import { StoreState } from 'app/types';\nimport { ThunkAction } from 'redux-thunk';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { LayoutMode } from '../../../core/components/LayoutSelector/LayoutSelector';\nimport { PluginDashboard } from '../../../types/plugins';\nimport { PluginMeta } from '@grafana/ui';\n\nexport enum ActionTypes {\n  LoadPlugins = 'LOAD_PLUGINS',\n  LoadPluginDashboards = 'LOAD_PLUGIN_DASHBOARDS',\n  LoadedPluginDashboards = 'LOADED_PLUGIN_DASHBOARDS',\n  SetPluginsSearchQuery = 'SET_PLUGIN_SEARCH_QUERY',\n  SetLayoutMode = 'SET_LAYOUT_MODE',\n}\n\nexport interface LoadPluginsAction {\n  type: ActionTypes.LoadPlugins;\n  payload: PluginMeta[];\n}\n\nexport interface LoadPluginDashboardsAction {\n  type: ActionTypes.LoadPluginDashboards;\n}\n\nexport interface LoadedPluginDashboardsAction {\n  type: ActionTypes.LoadedPluginDashboards;\n  payload: PluginDashboard[];\n}\n\nexport interface SetPluginsSearchQueryAction {\n  type: ActionTypes.SetPluginsSearchQuery;\n  payload: string;\n}\n\nexport interface SetLayoutModeAction {\n  type: ActionTypes.SetLayoutMode;\n  payload: LayoutMode;\n}\n\nexport const setPluginsLayoutMode = (mode: LayoutMode): SetLayoutModeAction => ({\n  type: ActionTypes.SetLayoutMode,\n  payload: mode,\n});\n\nexport const setPluginsSearchQuery = (query: string): SetPluginsSearchQueryAction => ({\n  type: ActionTypes.SetPluginsSearchQuery,\n  payload: query,\n});\n\nconst pluginsLoaded = (plugins: PluginMeta[]): LoadPluginsAction => ({\n  type: ActionTypes.LoadPlugins,\n  payload: plugins,\n});\n\nconst pluginDashboardsLoad = (): LoadPluginDashboardsAction => ({\n  type: ActionTypes.LoadPluginDashboards,\n});\n\nconst pluginDashboardsLoaded = (dashboards: PluginDashboard[]): LoadedPluginDashboardsAction => ({\n  type: ActionTypes.LoadedPluginDashboards,\n  payload: dashboards,\n});\n\nexport type Action =\n  | LoadPluginsAction\n  | LoadPluginDashboardsAction\n  | LoadedPluginDashboardsAction\n  | SetPluginsSearchQueryAction\n  | SetLayoutModeAction;\n\ntype ThunkResult<R> = ThunkAction<R, StoreState, undefined, Action>;\n\nexport function loadPlugins(): ThunkResult<void> {\n  return async dispatch => {\n    const result = await getBackendSrv().get('api/plugins', { embedded: 0 });\n    dispatch(pluginsLoaded(result));\n  };\n}\n\nexport function loadPluginDashboards(): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    dispatch(pluginDashboardsLoad());\n    const dataSourceType = getStore().dataSources.dataSource.type;\n    const response = await getBackendSrv().get(`api/plugins/${dataSourceType}/dashboards`);\n    dispatch(pluginDashboardsLoaded(response));\n  };\n}\n","var path = 'public/app/plugins/datasource/prometheus/partials/annotations.editor.html';\nvar html = \"<div class=gf-form-group>\\n\\t<div class=gf-form>\\n\\t\\t<span class=\\\"gf-form-label width-10\\\">Search expression</span>\\n\\t\\t<input type=text class=gf-form-input ng-model=ctrl.annotation.expr placeholder=ALERTS>\\n\\t</div>\\n\\t<div class=gf-form>\\n\\t\\t<span class=\\\"gf-form-label width-10\\\">step</span>\\n\\t\\t<input type=text class=\\\"gf-form-input max-width-6\\\" ng-model=ctrl.annotation.step placeholder=60s>\\n\\t</div>\\n</div>\\n\\n<div class=gf-form-group>\\n\\t<h5 class=section-heading>Field formats</h5>\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=\\\"gf-form-label width-5\\\">Title</span>\\n\\t\\t\\t<input type=text class=\\\"gf-form-input max-width-9\\\" ng-model=ctrl.annotation.titleFormat placeholder=alertname>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=\\\"gf-form-label width-5\\\">Tags</span>\\n\\t\\t\\t<input type=text class=\\\"gf-form-input max-width-9\\\" ng-model=ctrl.annotation.tagKeys placeholder=label1,label2>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form-inline>\\n\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t<span class=\\\"gf-form-label width-5\\\">Text</span>\\n\\t\\t\\t\\t<input type=text class=\\\"gf-form-input max-width-9\\\" ng-model=ctrl.annotation.textFormat placeholder=instance>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<h5 class=section-heading>Other options</h5>\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<gf-form-switch class=gf-form label=\\\"Series value as timestamp\\\" label-class=width-14 checked=ctrl.annotation.useValueForTime tooltip=\\\"The unit of timestamp is milliseconds. If the unit of the series value is seconds, multiply its range vector by 1000.\\\">\\n\\t\\t\\t</gf-form-switch>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/features/dashboard/components/DashboardSettings/template.html';\nvar html = \"<aside class=dashboard-settings__aside>\\n\\t<a href={{::section.url}} class=dashboard-settings__nav-item ng-class=\\\"{active: ctrl.viewId === section.id}\\\" ng-repeat=\\\"section in ctrl.sections\\\">\\n    <i class={{::section.icon}}></i>\\n\\t\\t{{::section.title}}\\n\\t</a>\\n\\n\\t<div class=dashboard-settings__aside-actions>\\n    <button class=\\\"btn btn-primary\\\" ng-click=ctrl.saveDashboard() ng-show=ctrl.canSave>\\n\\t\\t\\tSave\\n\\t\\t</button>\\n\\t\\t<button class=\\\"btn btn-inverse\\\" ng-click=ctrl.openSaveAsModal() ng-show=ctrl.canSaveAs>\\n\\t\\t\\tSave As...\\n\\t\\t</button>\\n\\t</div>\\n</aside>\\n\\n<div class=dashboard-settings__content ng-if=\\\"ctrl.viewId === 'settings'\\\">\\n\\t<h3 class=dashboard-settings__header>\\n\\t\\tGeneral\\n\\t</h3>\\n\\n\\t<div class=gf-form-group>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<label class=\\\"gf-form-label width-7\\\">Name</label>\\n\\t\\t\\t<input type=text class=\\\"gf-form-input width-30\\\" ng-model=ctrl.dashboard.title>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<label class=\\\"gf-form-label width-7\\\">Description</label>\\n\\t\\t\\t<input type=text class=\\\"gf-form-input width-30\\\" ng-model=ctrl.dashboard.description>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<label class=\\\"gf-form-label width-7\\\">\\n\\t\\t\\t\\tTags\\n\\t\\t\\t\\t<info-popover mode=right-normal>Press enter to add a tag</info-popover>\\n\\t\\t\\t</label>\\n\\t\\t\\t<bootstrap-tagsinput ng-model=ctrl.dashboard.tags tagclass=\\\"label label-tag\\\" placeholder=\\\"add tags\\\">\\n\\t\\t\\t</bootstrap-tagsinput>\\n\\t\\t</div>\\n\\t\\t<folder-picker initial-title=ctrl.dashboard.meta.folderTitle initial-folder-id=ctrl.dashboard.meta.folderId on-change=ctrl.onFolderChange($folder) enable-create-new=true is-valid-selection=true label-class=width-7 dashboard-id=ctrl.dashboard.id>\\n\\t\\t</folder-picker>\\n\\t\\t<gf-form-switch class=gf-form label=Editable tooltip=\\\"Uncheck, then save and reload to disable all dashboard editing\\\" checked=ctrl.dashboard.editable label-class=width-7>\\n\\t\\t</gf-form-switch>\\n\\t</div>\\n\\n\\t<gf-time-picker-settings dashboard=ctrl.dashboard></gf-time-picker-settings>\\n\\n\\t<h5 class=section-heading>Panel Options</h5>\\n\\t<div class=gf-form>\\n\\t\\t<label class=\\\"gf-form-label width-11\\\">\\n\\t\\t\\tGraph Tooltip\\n\\t\\t\\t<info-popover mode=right-normal>\\n\\t\\t\\t\\tCycle between options using Shortcut: CTRL+O or CMD+O\\n\\t\\t\\t</info-popover>\\n\\t\\t</label>\\n\\t\\t<div class=gf-form-select-wrapper>\\n\\t\\t\\t<select ng-model=ctrl.dashboard.graphTooltip class=gf-form-input ng-options=\\\"f.value as f.text for f in [{value: 0, text: 'Default'}, {value: 1, text: 'Shared crosshair'},{value: 2, text: 'Shared Tooltip'}]\\\"></select>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=gf-form-button-row>\\n\\t  <button class=\\\"btn btn-danger\\\" ng-click=ctrl.deleteDashboard() ng-show=ctrl.canDelete>\\n\\t\\t  Delete Dashboard\\n\\t  </button>\\n  </div>\\n</div>\\n\\n<div class=dashboard-settings__content ng-if=\\\"ctrl.viewId === 'annotations'\\\" ng-include=\\\"'public/app/features/annotations/partials/editor.html'\\\">\\n</div>\\n\\n<div class=dashboard-settings__content ng-if=\\\"ctrl.viewId === 'templating'\\\" ng-include=\\\"'public/app/features/templating/partials/editor.html'\\\">\\n</div>\\n\\n<div class=dashboard-settings__content ng-if=\\\"ctrl.viewId === 'links'\\\">\\n\\t<dash-links-editor dashboard=ctrl.dashboard></dash-links-editor>\\n</div>\\n\\n<div class=dashboard-settings__content ng-if=\\\"ctrl.viewId === 'versions'\\\">\\n\\t<gf-dashboard-history dashboard=dashboard></gf-dashboard-history>\\n</div>\\n\\n<div class=dashboard-settings__content ng-if=\\\"ctrl.viewId === 'dashboard_json'\\\">\\n\\t<h3 class=dashboard-settings__header>JSON Model</h3>\\n  <div class=dashboard-settings__subheader>\\n    The JSON Model below is data structure that defines the dashboard. Including settings, panel settings & layout,\\n    queries etc.\\n  </div>\\n\\n\\t<div class=gf-form>\\n\\t\\t<code-editor content=ctrl.json data-mode=json data-max-lines=30></code-editor>\\n\\t</div>\\n\\n  <div class=gf-form-button-row>\\n    <button class=\\\"btn btn-primary\\\" ng-click=ctrl.saveDashboardJson() ng-show=ctrl.canSave>\\n      Save Changes\\n    </button>\\n  </div>\\n</div>\\n\\n<div class=dashboard-settings__content ng-if=\\\"ctrl.viewId === 'permissions'\\\">\\n  <dashboard-permissions ng-if=\\\"ctrl.dashboard && !ctrl.hasUnsavedFolderChange\\\" dashboardid=ctrl.dashboard.id backendsrv=ctrl.backendSrv folder=ctrl.getFolder() />\\n  <div ng-if=ctrl.hasUnsavedFolderChange>\\n    <h5>You have changed folder, please save to view permissions.</h5>\\n  </div>\\n</div>\\n\\n<div class=dashboard-settings__content ng-if=\\\"ctrl.viewId === '404'\\\">\\n  <h3 class=dashboard-settings__header>Settings view not found</h3>\\n\\n  <div>\\n    <h5>The settings page could not be found or you do not have permission to access it</h5>\\n  </div>\\n</div>\\n\\n<div class=dashboard-settings__content ng-if=\\\"ctrl.viewId === 'make_editable'\\\">\\n  <h3 class=dashboard-settings__header>Make Editable</h3>\\n\\n  <button class=\\\"btn btn-primary\\\" ng-click=ctrl.makeEditable()>\\n    Make Editable\\n  </button>\\n</div>\\n\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","export * from './components';\nexport * from './types';\nexport * from './utils';\nexport * from './themes';\nexport * from './slate-plugins';\n","// Libraries\nimport { Observable, of, timer, merge, from } from 'rxjs';\nimport { flatten, map as lodashMap, isArray, isString } from 'lodash';\nimport { map, catchError, takeUntil, mapTo, share, finalize } from 'rxjs/operators';\n// Utils & Services\nimport { getBackendSrv } from 'app/core/services/backend_srv';\n// Types\nimport {\n  DataSourceApi,\n  DataQueryRequest,\n  PanelData,\n  DataQueryResponse,\n  DataQueryResponseData,\n  DataQueryError,\n} from '@grafana/ui';\nimport { LoadingState, dateMath, toDataFrame, DataFrame, guessFieldTypes } from '@grafana/data';\n\ntype MapOfResponsePackets = { [str: string]: DataQueryResponse };\n\ninterface RunningQueryState {\n  packets: { [key: string]: DataQueryResponse };\n  panelData: PanelData;\n}\n\n/*\n * This function should handle composing a PanelData from multiple responses\n */\nexport function processResponsePacket(packet: DataQueryResponse, state: RunningQueryState): RunningQueryState {\n  const request = state.panelData.request;\n  const packets: MapOfResponsePackets = {\n    ...state.packets,\n  };\n\n  packets[packet.key || 'A'] = packet;\n\n  // Update the time range\n  const range = { ...request.range };\n  const timeRange = isString(range.raw.from)\n    ? {\n        from: dateMath.parse(range.raw.from, false),\n        to: dateMath.parse(range.raw.to, true),\n        raw: range.raw,\n      }\n    : range;\n\n  const combinedData = flatten(\n    lodashMap(packets, (packet: DataQueryResponse) => {\n      return packet.data;\n    })\n  );\n\n  const panelData = {\n    state: packet.state || LoadingState.Done,\n    series: combinedData,\n    request,\n    timeRange,\n  };\n\n  return { packets, panelData };\n}\n\n/**\n * This function handles the excecution of requests & and processes the single or multiple response packets into\n * a combined PanelData response.\n * It will\n *  * Merge multiple responses into a single DataFrame array based on the packet key\n *  * Will emit a loading state if no response after 50ms\n *  * Cancel any still runnning network requests on unsubscribe (using request.requestId)\n */\nexport function runRequest(datasource: DataSourceApi, request: DataQueryRequest): Observable<PanelData> {\n  let state: RunningQueryState = {\n    panelData: {\n      state: LoadingState.Loading,\n      series: [],\n      request: request,\n      timeRange: request.range,\n    },\n    packets: {},\n  };\n\n  // Return early if there are no queries to run\n  if (!request.targets.length) {\n    request.endTime = Date.now();\n    state.panelData.state = LoadingState.Done;\n    return of(state.panelData);\n  }\n\n  const dataObservable = callQueryMethod(datasource, request).pipe(\n    // Transform response packets into PanelData with merged results\n    map((packet: DataQueryResponse) => {\n      if (!isArray(packet.data)) {\n        throw new Error(`Expected response data to be array, got ${typeof packet.data}.`);\n      }\n\n      request.endTime = Date.now();\n\n      state = processResponsePacket(packet, state);\n\n      return state.panelData;\n    }),\n    // handle errors\n    catchError(err =>\n      of({\n        ...state.panelData,\n        state: LoadingState.Error,\n        error: processQueryError(err),\n      })\n    ),\n    // finalize is triggered when subscriber unsubscribes\n    // This makes sure any still running network requests are cancelled\n    finalize(cancelNetworkRequestsOnUnsubscribe(request)),\n    // this makes it possible to share this observable in takeUntil\n    share()\n  );\n\n  // If 50ms without a response emit a loading state\n  // mapTo will translate the timer event into state.panelData (which has state set to loading)\n  // takeUntil will cancel the timer emit when first response packet is received on the dataObservable\n  return merge(\n    timer(200).pipe(\n      mapTo(state.panelData),\n      takeUntil(dataObservable)\n    ),\n    dataObservable\n  );\n}\n\nfunction cancelNetworkRequestsOnUnsubscribe(req: DataQueryRequest) {\n  return () => {\n    getBackendSrv().resolveCancelerIfExists(req.requestId);\n  };\n}\n\nexport function callQueryMethod(datasource: DataSourceApi, request: DataQueryRequest) {\n  const returnVal = datasource.query(request);\n  return from(returnVal);\n}\n\nexport function processQueryError(err: any): DataQueryError {\n  const error = (err || {}) as DataQueryError;\n\n  if (!error.message) {\n    if (typeof err === 'string' || err instanceof String) {\n      return { message: err } as DataQueryError;\n    }\n\n    let message = 'Query error';\n    if (error.message) {\n      message = error.message;\n    } else if (error.data && error.data.message) {\n      message = error.data.message;\n    } else if (error.data && error.data.error) {\n      message = error.data.error;\n    } else if (error.status) {\n      message = `Query error: ${error.status} ${error.statusText}`;\n    }\n    error.message = message;\n  }\n\n  return error;\n}\n\n/**\n * All panels will be passed tables that have our best guess at colum type set\n *\n * This is also used by PanelChrome for snapshot support\n */\nexport function getProcessedDataFrames(results?: DataQueryResponseData[]): DataFrame[] {\n  if (!isArray(results)) {\n    return [];\n  }\n\n  const dataFrames: DataFrame[] = [];\n\n  for (const result of results) {\n    const dataFrame = guessFieldTypes(toDataFrame(result));\n\n    // clear out any cached calcs\n    for (const field of dataFrame.fields) {\n      field.calcs = null;\n    }\n\n    dataFrames.push(dataFrame);\n  }\n\n  return dataFrames;\n}\n\nexport function preProcessPanelData(data: PanelData, lastResult: PanelData): PanelData {\n  const { series } = data;\n\n  //  for loading states with no data, use last result\n  if (data.state === LoadingState.Loading && series.length === 0) {\n    if (!lastResult) {\n      lastResult = data;\n    }\n\n    return { ...lastResult, state: LoadingState.Loading };\n  }\n\n  // Make sure the data frames are properly formatted\n  return {\n    ...data,\n    series: getProcessedDataFrames(series),\n  };\n}\n","/* ===================================================\n * bootstrap-transition.js v2.3.2\n * http://getbootstrap.com/2.3.2/javascript.html#transitions\n * ===================================================\n * Copyright 2013 Twitter, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ========================================================== */\n\n\n!function ($) {\n\n  \"use strict\"; // jshint ;_;\n\n\n  /* CSS TRANSITION SUPPORT (http://www.modernizr.com/)\n   * ======================================================= */\n\n  $(function () {\n\n    $.support.transition = (function () {\n\n      var transitionEnd = (function () {\n\n        var el = document.createElement('bootstrap')\n          , transEndEventNames = {\n               'WebkitTransition' : 'webkitTransitionEnd'\n            ,  'MozTransition'    : 'transitionend'\n            ,  'OTransition'      : 'oTransitionEnd otransitionend'\n            ,  'transition'       : 'transitionend'\n            }\n          , name\n\n        for (name in transEndEventNames){\n          if (el.style[name] !== undefined) {\n            return transEndEventNames[name]\n          }\n        }\n\n      }())\n\n      return transitionEnd && {\n        end: transitionEnd\n      }\n\n    })()\n\n  })\n\n}(window.jQuery);/* ==========================================================\n * bootstrap-alert.js v2.3.2\n * http://getbootstrap.com/2.3.2/javascript.html#alerts\n * ==========================================================\n * Copyright 2013 Twitter, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ========================================================== */\n\n\n!function ($) {\n\n  \"use strict\"; // jshint ;_;\n\n/* ============================================================\n * bootstrap-dropdown.js v2.3.2\n * http://getbootstrap.com/2.3.2/javascript.html#dropdowns\n * ============================================================\n * Copyright 2013 Twitter, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ============================================================ */\n\n\n /* DROPDOWN CLASS DEFINITION\n  * ========================= */\n\n  var toggle = '[data-toggle=dropdown]'\n    , Dropdown = function (element) {\n        var $el = $(element).on('click.dropdown.data-api', this.toggle)\n        $('html').on('click.dropdown.data-api', function () {\n          $el.parent().removeClass('open')\n        })\n      }\n\n  Dropdown.prototype = {\n\n    constructor: Dropdown\n\n  , toggle: function (e) {\n      var $this = $(this)\n        , $parent\n        , isActive\n\n      if ($this.is('.disabled, :disabled')) return\n\n      $parent = getParent($this)\n\n      isActive = $parent.hasClass('open')\n\n      clearMenus()\n\n      if (!isActive) {\n        if ('ontouchstart' in document.documentElement) {\n          // if mobile we we use a backdrop because click events don't delegate\n          $('<div class=\"dropdown-backdrop\"/>').insertBefore($(this)).on('click', clearMenus)\n        }\n        $parent.toggleClass('open')\n      }\n\n      $this.focus()\n\n      return false\n    }\n\n  , keydown: function (e) {\n      var $this\n        , $items\n        , $active\n        , $parent\n        , isActive\n        , index\n\n      if (!/(38|40|27)/.test(e.keyCode)) return\n\n      $this = $(this)\n\n      e.preventDefault()\n      e.stopPropagation()\n\n      if ($this.is('.disabled, :disabled')) return\n\n      $parent = getParent($this)\n\n      isActive = $parent.hasClass('open')\n\n      if (!isActive || (isActive && e.keyCode == 27)) {\n        if (e.which == 27) $parent.find(toggle).focus()\n        return $this.click()\n      }\n\n      $items = $('[role=menu] li:not(.divider):visible a', $parent)\n\n      if (!$items.length) return\n\n      index = $items.index($items.filter(':focus'))\n\n      if (e.keyCode == 38 && index > 0) index--                                        // up\n      if (e.keyCode == 40 && index < $items.length - 1) index++                        // down\n      if (!~index) index = 0\n\n      $items\n        .eq(index)\n        .focus()\n    }\n\n  }\n\n  function clearMenus() {\n    $('.dropdown-backdrop').remove()\n    $(toggle).each(function () {\n      getParent($(this)).removeClass('open')\n    })\n  }\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n      , $parent\n\n    if (!selector) {\n      selector = $this.attr('href')\n      // grafana backport fix from bootstrap 3\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') //strip for ie7\n    }\n\n    $parent = selector && $(selector)\n\n    if (!$parent || !$parent.length) $parent = $this.parent()\n\n    return $parent\n  }\n\n\n  /* DROPDOWN PLUGIN DEFINITION\n   * ========================== */\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown = function (option) {\n    return this.each(function () {\n      var $this = $(this)\n        , data = $this.data('dropdown')\n      if (!data) $this.data('dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  $.fn.dropdown.Constructor = Dropdown\n\n\n /* DROPDOWN NO CONFLICT\n  * ==================== */\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n  /* APPLY TO STANDARD DROPDOWN ELEMENTS\n   * =================================== */\n\n  $(document)\n    .on('click.dropdown.data-api', clearMenus)\n    .on('click.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n    .on('click.dropdown.data-api'  , toggle, Dropdown.prototype.toggle)\n    .on('keydown.dropdown.data-api', toggle + ', [role=menu]' , Dropdown.prototype.keydown)\n\n}(window.jQuery);\n/* =========================================================\n * bootstrap-modal.js v2.3.2\n * http://getbootstrap.com/2.3.2/javascript.html#modals\n * =========================================================\n * Copyright 2013 Twitter, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ========================================================= */\n\n\n!function ($) {\n\n  \"use strict\"; // jshint ;_;\n\n\n /* MODAL CLASS DEFINITION\n  * ====================== */\n\n  var Modal = function (element, options) {\n    this.options = options\n    this.$element = $(element)\n      .delegate('[data-dismiss=\"modal\"]', 'click.dismiss.modal', $.proxy(this.hide, this))\n    this.options.remote && this.$element.find('.modal-body').load(this.options.remote)\n  }\n\n  Modal.prototype = {\n\n      constructor: Modal\n\n    , toggle: function () {\n        return this[!this.isShown ? 'show' : 'hide']()\n      }\n\n    , show: function () {\n        var that = this\n          , e = $.Event('show')\n\n        this.$element.trigger(e)\n\n        if (this.isShown || e.isDefaultPrevented()) return\n\n        this.isShown = true\n\n        this.escape()\n\n        this.backdrop(function () {\n          var transition = $.support.transition && that.$element.hasClass('fade')\n\n          if (!that.$element.parent().length) {\n            that.$element.appendTo(document.body) //don't move modals dom position\n          }\n\n          that.$element.show()\n\n          if (transition) {\n            that.$element[0].offsetWidth // force reflow\n          }\n\n          that.$element\n            .addClass('in')\n            .attr('aria-hidden', false)\n\n          that.enforceFocus()\n\n          transition ?\n            that.$element.one($.support.transition.end, function () { that.$element.focus().trigger('shown') }) :\n            that.$element.focus().trigger('shown')\n\n        })\n      }\n\n    , hide: function (e) {\n        e && e.preventDefault()\n\n        var that = this\n\n        e = $.Event('hide')\n\n        this.$element.trigger(e)\n\n        if (!this.isShown || e.isDefaultPrevented()) return\n\n        this.isShown = false\n\n        this.escape()\n\n        $(document).off('focusin.modal')\n\n        this.$element\n          .removeClass('in')\n          .attr('aria-hidden', true)\n\n        $.support.transition && this.$element.hasClass('fade') ?\n          this.hideWithTransition() :\n          this.hideModal()\n      }\n\n    , enforceFocus: function () {\n        var that = this\n        $(document).on('focusin.modal', function (e) {\n          if (that.$element[0] !== e.target && !that.$element.has(e.target).length) {\n            that.$element.focus()\n          }\n        })\n      }\n\n    , escape: function () {\n        var that = this\n        if (this.isShown && this.options.keyboard) {\n          this.$element.on('keyup.dismiss.modal', function ( e ) {\n            e.which == 27 && that.hide()\n          })\n        } else if (!this.isShown) {\n          this.$element.off('keyup.dismiss.modal')\n        }\n      }\n\n    , hideWithTransition: function () {\n        var that = this\n          , timeout = setTimeout(function () {\n              that.$element.off($.support.transition.end)\n              that.hideModal()\n            }, 500)\n\n        this.$element.one($.support.transition.end, function () {\n          clearTimeout(timeout)\n          that.hideModal()\n        })\n      }\n\n    , hideModal: function () {\n        var that = this\n        this.$element.hide()\n        this.backdrop(function () {\n          that.removeBackdrop()\n          that.$element.trigger('hidden')\n        })\n      }\n\n    , removeBackdrop: function () {\n        this.$backdrop && this.$backdrop.remove()\n        this.$backdrop = null\n      }\n\n    , backdrop: function (callback) {\n        var that = this\n          , animate = this.$element.hasClass('fade') ? 'fade' : ''\n\n        if (this.isShown && this.options.backdrop) {\n          var doAnimate = $.support.transition && animate\n\n          this.$backdrop = $('<div class=\"modal-backdrop ' + animate + '\" />')\n            .appendTo(document.body)\n\n          this.$backdrop.click(\n            this.options.backdrop == 'static' ?\n              $.proxy(this.$element[0].focus, this.$element[0])\n            : $.proxy(this.hide, this)\n          )\n\n          if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\n\n          this.$backdrop.addClass('in')\n\n          if (!callback) return\n\n          doAnimate ?\n            this.$backdrop.one($.support.transition.end, callback) :\n            callback()\n\n        } else if (!this.isShown && this.$backdrop) {\n          this.$backdrop.removeClass('in')\n\n          $.support.transition && this.$element.hasClass('fade')?\n            this.$backdrop.one($.support.transition.end, callback) :\n            callback()\n\n        } else if (callback) {\n          callback()\n        }\n      }\n  }\n\n\n /* MODAL PLUGIN DEFINITION\n  * ======================= */\n\n  var old = $.fn.modal\n\n  $.fn.modal = function (option) {\n    return this.each(function () {\n      var $this = $(this)\n        , data = $this.data('modal')\n        , options = $.extend({}, $.fn.modal.defaults, $this.data(), typeof option == 'object' && option)\n      if (!data) $this.data('modal', (data = new Modal(this, options)))\n      if (typeof option == 'string') data[option]()\n      else if (options.show) data.show()\n    })\n  }\n\n  $.fn.modal.defaults = {\n      backdrop: true\n    , keyboard: true\n    , show: true\n  }\n\n  $.fn.modal.Constructor = Modal\n\n\n /* MODAL NO CONFLICT\n  * ================= */\n\n  $.fn.modal.noConflict = function () {\n    $.fn.modal = old\n    return this\n  }\n\n\n /* MODAL DATA-API\n  * ============== */\n\n  $(document).on('click.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\n    var $this = $(this)\n      , href = $this.attr('href')\n      , $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) //strip for ie7\n      , option = $target.data('modal') ? 'toggle' : $.extend({ remote:!/#/.test(href) && href }, $target.data(), $this.data())\n\n    e.preventDefault()\n\n    $target\n      .modal(option)\n      .one('hide', function () {\n        $this.focus()\n      })\n  })\n\n}(window.jQuery);\n/* ===========================================================\n * bootstrap-tooltip.js v2.3.2\n * http://getbootstrap.com/2.3.2/javascript.html#tooltips\n * Inspired by the original jQuery.tipsy by Jason Frame\n * ===========================================================\n * Copyright 2013 Twitter, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ========================================================== */\n\n\n!function ($) {\n\n  \"use strict\"; // jshint ;_;\n\n\n /* TOOLTIP PUBLIC CLASS DEFINITION\n  * =============================== */\n\n  var Tooltip = function (element, options) {\n    this.init('tooltip', element, options)\n  }\n\n  Tooltip.prototype = {\n\n    constructor: Tooltip\n\n  , init: function (type, element, options) {\n      var eventIn\n        , eventOut\n        , triggers\n        , trigger\n        , i\n\n      this.type = type\n      this.$element = $(element)\n      this.options = this.getOptions(options)\n      this.enabled = true\n\n      triggers = this.options.trigger.split(' ')\n\n      for (i = triggers.length; i--;) {\n        trigger = triggers[i]\n        if (trigger == 'click') {\n          this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n        } else if (trigger != 'manual') {\n          eventIn = trigger == 'hover' ? 'mouseenter' : 'focus'\n          eventOut = trigger == 'hover' ? 'mouseleave' : 'blur'\n          this.$element.on(eventIn + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n          this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n        }\n      }\n\n      this.options.selector ?\n        (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n        this.fixTitle()\n    }\n\n  , getOptions: function (options) {\n      options = $.extend({}, $.fn[this.type].defaults, this.$element.data(), options)\n\n      if (options.delay && typeof options.delay == 'number') {\n        options.delay = {\n          show: options.delay\n        , hide: options.delay\n        }\n      }\n\n      return options\n    }\n\n  , enter: function (e) {\n      var defaults = $.fn[this.type].defaults\n        , options = {}\n        , self\n\n      this._options && $.each(this._options, function (key, value) {\n        if (defaults[key] != value) options[key] = value\n      }, this)\n\n      self = $(e.currentTarget)[this.type](options).data(this.type)\n\n      if (!self.options.delay || !self.options.delay.show) return self.show()\n\n      clearTimeout(this.timeout)\n      self.hoverState = 'in'\n      this.timeout = setTimeout(function() {\n        if (self.hoverState == 'in') self.show()\n      }, self.options.delay.show)\n    }\n\n  , leave: function (e) {\n      var self = $(e.currentTarget)[this.type](this._options).data(this.type)\n\n      if (this.timeout) clearTimeout(this.timeout)\n      if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n      self.hoverState = 'out'\n      this.timeout = setTimeout(function() {\n        if (self.hoverState == 'out') self.hide()\n      }, self.options.delay.hide)\n    }\n\n  , show: function () {\n      var $tip\n        , pos\n        , actualWidth\n        , actualHeight\n        , placement\n        , tp\n        , e = $.Event('show')\n\n      if (this.hasContent() && this.enabled) {\n        this.$element.trigger(e)\n        if (e.isDefaultPrevented()) return\n        $tip = this.tip()\n        this.setContent()\n\n        if (this.options.animation) {\n          $tip.addClass('fade')\n        }\n\n        placement = typeof this.options.placement == 'function' ?\n          this.options.placement.call(this, $tip[0], this.$element[0]) :\n          this.options.placement\n\n        $tip\n          .detach()\n          .css({ top: 0, left: 0, display: 'block' })\n\n        this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n\n        pos = this.getPosition()\n\n        actualWidth = $tip[0].offsetWidth\n        actualHeight = $tip[0].offsetHeight\n\n        switch (placement) {\n          case 'bottom':\n            tp = {top: pos.top + pos.height, left: pos.left + pos.width / 2 - actualWidth / 2}\n            break\n          case 'top':\n            tp = {top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2}\n            break\n          case 'left':\n            tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth}\n            break\n          case 'right':\n            tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width}\n            break\n\n          // extend placements (top)\n          case 'topLeft':\n            tp = {top: pos.top - actualHeight,  left: pos.left + pos.width / 2 - (actualWidth * .10)};\n            break;\n          case 'topRight':\n            tp = {top: pos.top - actualHeight, left: pos.left + pos.width / 2 - (actualWidth * .90)};\n            break;\n\n          // extend placements (right)\n          case 'rightTop':\n            tp = {top: pos.top + pos.height / 2 - (actualHeight *.10), left: pos.left + pos.width};\n            break;\n          case 'rightBottom':\n            tp = {top: pos.top + pos.height / 2 - (actualHeight * .90), left: pos.left + pos.width};\n            break;\n\n          // extend placements (bottom)\n          case 'bottomLeft':\n            tp = {top: pos.top + pos.height, left: pos.left + pos.width / 2 - (actualWidth * .10)};\n            break;\n          case 'bottomRight':\n            tp = {top: pos.top + pos.height, left: pos.left + pos.width / 2 - (actualWidth * .90)};\n            break;\n\n          // extend placements (left)\n          case 'leftTop':\n            tp = {top: pos.top + pos.height / 2 - (actualHeight *.10), left: pos.left - actualWidth};\n            break;\n          case 'leftBottom':\n            tp = {top: pos.top + pos.height / 2 - (actualHeight * .90), left: pos.left - actualWidth};\n            break;\n\n\n        }\n\n        this.applyPlacement(tp, placement)\n        this.$element.trigger('shown')\n      }\n    }\n\n  , applyPlacement: function(offset, placement){\n      var $tip = this.tip()\n        , width = $tip[0].offsetWidth\n        , height = $tip[0].offsetHeight\n        , actualWidth\n        , actualHeight\n        , delta\n        , replace\n\n      $tip\n        .offset(offset)\n        .addClass(placement)\n        .addClass('in')\n\n      actualWidth = $tip[0].offsetWidth\n      actualHeight = $tip[0].offsetHeight\n\n      if (placement == 'top' && actualHeight != height) {\n        offset.top = offset.top + height - actualHeight\n        replace = true\n      }\n\n      if (placement == 'bottom' || placement == 'top') {\n        delta = 0\n\n        if (offset.left < 0){\n          delta = offset.left * -2\n          offset.left = 0\n          $tip.offset(offset)\n          actualWidth = $tip[0].offsetWidth\n          actualHeight = $tip[0].offsetHeight\n        }\n\n        this.replaceArrow(delta - width + actualWidth, actualWidth, 'left')\n      } else {\n        this.replaceArrow(actualHeight - height, actualHeight, 'top')\n      }\n\n      if (replace) $tip.offset(offset)\n    }\n\n  , replaceArrow: function(delta, dimension, position){\n      this\n        .arrow()\n        .css(position, delta ? (50 * (1 - delta / dimension) + \"%\") : '')\n    }\n\n  , setContent: function () {\n      var $tip = this.tip()\n        , title = this.getTitle()\n\n      $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n      $tip.removeClass('fade in top bottom left right')\n    }\n\n  , hide: function () {\n      var that = this\n        , $tip = this.tip()\n        , e = $.Event('hide')\n\n      this.$element.trigger(e)\n      if (e.isDefaultPrevented()) return\n\n      $tip.removeClass('in')\n\n      function removeWithAnimation() {\n        var timeout = setTimeout(function () {\n          $tip.off($.support.transition.end).detach()\n        }, 500)\n\n        $tip.one($.support.transition.end, function () {\n          clearTimeout(timeout)\n          $tip.detach()\n        })\n      }\n\n      $.support.transition && this.$tip.hasClass('fade') ?\n        removeWithAnimation() :\n        $tip.detach()\n\n      this.$element.trigger('hidden')\n\n      return this\n    }\n\n  , fixTitle: function () {\n      var $e = this.$element\n      if ($e.attr('title') || typeof($e.attr('data-original-title')) != 'string') {\n        $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n      }\n    }\n\n  , hasContent: function () {\n      return this.getTitle()\n    }\n\n  , getPosition: function () {\n      var el = this.$element[0]\n      return $.extend({}, (typeof el.getBoundingClientRect == 'function') ? el.getBoundingClientRect() : {\n        width: el.offsetWidth\n      , height: el.offsetHeight\n      }, this.$element.offset())\n    }\n\n  , getTitle: function () {\n      var title\n        , $e = this.$element\n        , o = this.options\n\n      title = $e.attr('data-original-title')\n        || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n      return title\n    }\n\n  , tip: function () {\n      return this.$tip = this.$tip || $(this.options.template)\n    }\n\n  , arrow: function(){\n      return this.$arrow = this.$arrow || this.tip().find(\".tooltip-arrow\")\n    }\n\n  , validate: function () {\n      if (!this.$element[0].parentNode) {\n        this.hide()\n        this.$element = null\n        this.options = null\n      }\n    }\n\n  , enable: function () {\n      this.enabled = true\n    }\n\n  , disable: function () {\n      this.enabled = false\n    }\n\n  , toggleEnabled: function () {\n      this.enabled = !this.enabled\n    }\n\n  , toggle: function (e) {\n      var self = e ? $(e.currentTarget)[this.type](this._options).data(this.type) : this\n      self.tip().hasClass('in') ? self.hide() : self.show()\n    }\n\n  , destroy: function () {\n      this.hide().$element.off('.' + this.type).removeData(this.type)\n    }\n\n  }\n\n\n /* TOOLTIP PLUGIN DEFINITION\n  * ========================= */\n\n  var old = $.fn.tooltip\n\n  $.fn.tooltip = function ( option ) {\n    return this.each(function () {\n      var $this = $(this)\n        , data = $this.data('tooltip')\n        , options = typeof option == 'object' && option\n      if (!data) $this.data('tooltip', (data = new Tooltip(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  $.fn.tooltip.Constructor = Tooltip\n\n  $.fn.tooltip.defaults = {\n    animation: true\n  , placement: 'top'\n  , selector: false\n  , template: '<div class=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>'\n  , trigger: 'hover focus'\n  , title: ''\n  , delay: 0\n  , html: false\n  , container: false\n  }\n\n\n /* TOOLTIP NO CONFLICT\n  * =================== */\n\n  $.fn.tooltip.noConflict = function () {\n    $.fn.tooltip = old\n    return this\n  }\n\n}(window.jQuery);\n\n/* ========================================================\n * bootstrap-tab.js v2.3.2\n * http://getbootstrap.com/2.3.2/javascript.html#tabs\n * ========================================================\n * Copyright 2013 Twitter, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ======================================================== */\n\n\n!function ($) {\n\n  \"use strict\"; // jshint ;_;\n\n\n /* TAB CLASS DEFINITION\n  * ==================== */\n\n  var Tab = function (element) {\n    this.element = $(element)\n  }\n\n  Tab.prototype = {\n\n    constructor: Tab\n\n  , show: function () {\n      var $this = this.element\n        , $ul = $this.closest('ul:not(.dropdown-menu)')\n        , selector = $this.attr('data-target')\n        , previous\n        , $target\n        , e\n\n      if (!selector) {\n        selector = $this.attr('href')\n        selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') //strip for ie7\n      }\n\n      if ( $this.parent('li').hasClass('active') ) return\n\n      previous = $ul.find('.active:last a')[0]\n\n      e = $.Event('show', {\n        relatedTarget: previous\n      })\n\n      $this.trigger(e)\n\n      if (e.isDefaultPrevented()) return\n\n      $target = $(selector)\n\n      this.activate($this.parent('li'), $ul)\n      this.activate($target, $target.parent(), function () {\n        $this.trigger({\n          type: 'shown'\n        , relatedTarget: previous\n        })\n      })\n    }\n\n  , activate: function ( element, container, callback) {\n      var $active = container.find('> .active')\n        , transition = callback\n            && $.support.transition\n            && $active.hasClass('fade')\n\n      function next() {\n        $active\n          .removeClass('active')\n          .find('> .dropdown-menu > .active')\n          .removeClass('active')\n\n        element.addClass('active')\n\n        if (transition) {\n          element[0].offsetWidth // reflow for transition\n          element.addClass('in')\n        } else {\n          element.removeClass('fade')\n        }\n\n        if ( element.parent('.dropdown-menu') ) {\n          element.closest('li.dropdown').addClass('active')\n        }\n\n        callback && callback()\n      }\n\n      transition ?\n        $active.one($.support.transition.end, next) :\n        next()\n\n      $active.removeClass('in')\n    }\n  }\n\n\n /* TAB PLUGIN DEFINITION\n  * ===================== */\n\n  var old = $.fn.tab\n\n  $.fn.tab = function ( option ) {\n    return this.each(function () {\n      var $this = $(this)\n        , data = $this.data('tab')\n      if (!data) $this.data('tab', (data = new Tab(this)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  $.fn.tab.Constructor = Tab\n\n\n /* TAB NO CONFLICT\n  * =============== */\n\n  $.fn.tab.noConflict = function () {\n    $.fn.tab = old\n    return this\n  }\n\n\n /* TAB DATA-API\n  * ============ */\n\n  $(document).on('click.tab.data-api', '[data-toggle=\"tab\"], [data-toggle=\"pill\"]', function (e) {\n    e.preventDefault()\n    $(this).tab('show')\n  })\n\n}(window.jQuery);/* =============================================================\n * bootstrap-typeahead.js v2.3.2\n * http://getbootstrap.com/2.3.2/javascript.html#typeahead\n * =============================================================\n * Copyright 2013 Twitter, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ============================================================ */\n\n\n!function($){\n\n  \"use strict\"; // jshint ;_;\n\n\n /* TYPEAHEAD PUBLIC CLASS DEFINITION\n  * ================================= */\n\n  var Typeahead = function (element, options) {\n    this.$element = $(element)\n    this.options = $.extend({}, $.fn.typeahead.defaults, options)\n    this.matcher = this.options.matcher || this.matcher\n    this.sorter = this.options.sorter || this.sorter\n    this.highlighter = this.options.highlighter || this.highlighter\n    this.updater = this.options.updater || this.updater\n    this.source = this.options.source\n    this.$menu = $(this.options.menu)\n    this.shown = false\n    this.listen()\n  }\n\n  Typeahead.prototype = {\n\n    constructor: Typeahead\n\n  , select: function () {\n    // CHANGE (rashidkpc) If nothing is selected, use existing value\n      var val = this.$menu.find('.active').attr('data-value') || this.$element.val();\n      this.$element\n        .val(this.updater(val))\n        .change()\n      return this.hide()\n    }\n\n  , updater: function (item) {\n      return item\n    }\n\n  , show: function () {\n      var pos = $.extend({}, this.$element.position(), {\n        height: this.$element[0].offsetHeight\n      })\n\n      this.$menu\n        .insertAfter(this.$element)\n        .css({\n          top: pos.top + pos.height\n        , left: pos.left\n        })\n        .show()\n\n      this.shown = true\n      return this\n    }\n\n  , hide: function () {\n      this.$menu.hide()\n      this.shown = false\n      return this\n    }\n\n  , lookup: function (event) {\n      var items\n\n      this.query = this.$element.val()\n\n      if (!this.query || this.query.length < this.options.minLength) {\n        return this.shown ? this.hide() : this\n      }\n\n      items = $.isFunction(this.source) ? this.source(this.query, $.proxy(this.process, this)) : this.source\n\n      return items ? this.process(items) : this\n    }\n\n    , process: function (items) {\n      var that = this\n\n      items = $.grep(items, function (item) {\n        return that.matcher(item)\n      })\n\n      items = this.sorter(items)\n\n      if (!items.length) {\n        return this.shown ? this.hide() : this\n      }\n\n      return this.render(items.slice(0, this.options.items)).show()\n    }\n\n  , matcher: function (item) {\n      return ~item.toLowerCase().indexOf(this.query.toLowerCase())\n    }\n\n  , sorter: function (items) {\n      var beginswith = []\n        , caseSensitive = []\n        , caseInsensitive = []\n        , item\n\n      while (item = items.shift()) {\n        if (!item.toLowerCase().indexOf(this.query.toLowerCase())) beginswith.push(item)\n        else if (~item.indexOf(this.query)) caseSensitive.push(item)\n        else caseInsensitive.push(item)\n      }\n\n      return beginswith.concat(caseSensitive, caseInsensitive)\n    }\n\n  , highlighter: function (item) {\n      var query = this.query.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&')\n      if (!query) {\n        return item;\n      }\n      return item.replace(new RegExp('(' + query + ')', 'ig'), function ($1, match) {\n        return '<strong>' + match + '</strong>'\n      });\n    }\n\n  , render: function (items) {\n      var that = this\n\n      items = $(items).map(function (i, item) {\n        i = $(that.options.item).attr('data-value', item)\n        i.find('a').html(that.highlighter(item))\n        return i[0]\n      })\n\n      // CHANGE (rashidpc) Do not select first element by default\n      // items.first().addClass('active')\n      this.$menu.html(items)\n      return this\n    }\n\n  , next: function (event) {\n      var active = this.$menu.find('.active').removeClass('active')\n        , next = active.next()\n\n      if (!next.length) {\n        next = $(this.$menu.find('li')[0])\n      }\n\n      next.addClass('active')\n    }\n\n  , prev: function (event) {\n      var active = this.$menu.find('.active').removeClass('active')\n        , prev = active.prev()\n\n      if (!prev.length) {\n        prev = this.$menu.find('li').last()\n      }\n\n      prev.addClass('active')\n    }\n\n  , listen: function () {\n      this.$element\n        .on('focus',    $.proxy(this.focus, this))\n        .on('blur',     $.proxy(this.blur, this))\n        .on('keypress', $.proxy(this.keypress, this))\n        .on('keyup',    $.proxy(this.keyup, this))\n\n      if (this.eventSupported('keydown')) {\n        this.$element.on('keydown', $.proxy(this.keydown, this))\n      }\n\n      this.$menu\n        .on('click', $.proxy(this.click, this))\n        .on('mouseenter', 'li', $.proxy(this.mouseenter, this))\n        .on('mouseleave', 'li', $.proxy(this.mouseleave, this))\n    },\n\n    destroy: function () {\n      this.$element.off().removeData('typeahead');\n      this.$menu.off();\n    }\n\n  , eventSupported: function(eventName) {\n      var isSupported = eventName in this.$element\n      if (!isSupported) {\n        this.$element.setAttribute(eventName, 'return;')\n        isSupported = typeof this.$element[eventName] === 'function'\n      }\n      return isSupported\n    }\n\n  , move: function (e) {\n      if (!this.shown) return\n\n      // grafana change, shift+left parenthesis\n      if (e.shiftKey && e.keyCode === 40) {\n        return;\n      }\n\n      switch(e.keyCode) {\n        case 9: // tab\n        case 13: // enter\n        case 27: // escape\n          e.preventDefault()\n          break\n\n        case 38: // up arrow\n          e.preventDefault()\n          this.prev()\n          break\n\n        case 40: // down arrow\n          e.preventDefault()\n          this.next()\n          break\n      }\n\n      e.stopPropagation()\n    }\n\n  , keydown: function (e) {\n      this.suppressKeyPressRepeat = ~$.inArray(e.keyCode, [40,38,9,13,27,57])\n      this.move(e)\n    }\n\n  , keypress: function (e) {\n      if (this.suppressKeyPressRepeat) return\n      this.move(e)\n    }\n\n  , keyup: function (e) {\n      switch(e.keyCode) {\n        case 40: // down arrow\n        case 38: // up arrow\n        case 16: // shift\n        case 17: // ctrl\n        case 18: // alt\n          break\n\n        case 9: // tab\n        case 13: // enter\n          if (!this.shown) return\n          this.select()\n          break\n\n        case 27: // escape\n          if (!this.shown) return\n          this.hide()\n          break\n\n        default:\n          this.lookup();\n      }\n\n      if(e.keyCode === 13 && typeof this.$menu.find('.active').attr('data-value') === 'undefined') {\n        // CHANGE (rashidkpc). Enter was hit, nothing was selected from typeahead, submit form\n        this.$element.submit();\n      } else {\n        e.stopPropagation()\n        e.preventDefault()\n      }\n\n  }\n\n  , focus: function (e) {\n      this.focused = true\n    }\n\n  , blur: function (e) {\n      this.focused = false\n      if (!this.mousedover && this.shown) this.hide()\n    }\n\n  , click: function (e) {\n      e.stopPropagation()\n      e.preventDefault()\n      this.select()\n      this.$element.focus()\n    }\n\n  , mouseenter: function (e) {\n      this.mousedover = true\n      this.$menu.find('.active').removeClass('active')\n      $(e.currentTarget).addClass('active')\n    }\n\n  , mouseleave: function (e) {\n      this.mousedover = false\n      if (!this.focused && this.shown) this.hide()\n    }\n\n  }\n\n\n  /* TYPEAHEAD PLUGIN DEFINITION\n   * =========================== */\n\n  var old = $.fn.typeahead\n\n  $.fn.typeahead = function (option) {\n    return this.each(function () {\n      var $this = $(this)\n        , data = $this.data('typeahead')\n        , options = typeof option == 'object' && option\n      if (!data) $this.data('typeahead', (data = new Typeahead(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  $.fn.typeahead.defaults = {\n    source: []\n  , items: 8\n  , menu: '<ul class=\"typeahead dropdown-menu\"></ul>'\n  , item: '<li><a href=\"#\"></a></li>'\n  , minLength: 1\n  }\n\n  $.fn.typeahead.Constructor = Typeahead\n\n\n /* TYPEAHEAD NO CONFLICT\n  * =================== */\n\n  $.fn.typeahead.noConflict = function () {\n    $.fn.typeahead = old\n    return this\n  }\n\n\n /* TYPEAHEAD DATA-API\n  * ================== */\n\n  $(document).on('focus.typeahead.data-api', '[data-provide=\"typeahead\"]', function (e) {\n    var $this = $(this)\n    if ($this.data('typeahead')) return\n    $this.typeahead($this.data())\n  })\n\n}(window.jQuery);\n/* ==========================================================\n * bootstrap-affix.js v2.3.2\n * http://getbootstrap.com/2.3.2/javascript.html#affix\n * ==========================================================\n * Copyright 2013 Twitter, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ========================================================== */\n\n\n!function ($) {\n\n  \"use strict\"; // jshint ;_;\n\n\n /* AFFIX CLASS DEFINITION\n  * ====================== */\n\n  var Affix = function (element, options) {\n    this.options = $.extend({}, $.fn.affix.defaults, options)\n    this.$window = $(window)\n      .on('scroll.affix.data-api', $.proxy(this.checkPosition, this))\n      .on('click.affix.data-api',  $.proxy(function () { setTimeout($.proxy(this.checkPosition, this), 1) }, this))\n    this.$element = $(element)\n    this.checkPosition()\n  }\n\n  Affix.prototype.checkPosition = function () {\n    if (!this.$element.is(':visible')) return\n\n    var scrollHeight = $(document).height()\n      , scrollTop = this.$window.scrollTop()\n      , position = this.$element.offset()\n      , offset = this.options.offset\n      , offsetBottom = offset.bottom\n      , offsetTop = offset.top\n      , reset = 'affix affix-top affix-bottom'\n      , affix\n\n    if (typeof offset != 'object') offsetBottom = offsetTop = offset\n    if (typeof offsetTop == 'function') offsetTop = offset.top()\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom()\n\n    affix = this.unpin != null && (scrollTop + this.unpin <= position.top) ?\n      false    : offsetBottom != null && (position.top + this.$element.height() >= scrollHeight - offsetBottom) ?\n      'bottom' : offsetTop != null && scrollTop <= offsetTop ?\n      'top'    : false\n\n    if (this.affixed === affix) return\n\n    this.affixed = affix\n    this.unpin = affix == 'bottom' ? position.top - scrollTop : null\n\n    this.$element.removeClass(reset).addClass('affix' + (affix ? '-' + affix : ''))\n  }\n\n\n /* AFFIX PLUGIN DEFINITION\n  * ======================= */\n\n  var old = $.fn.affix\n\n  $.fn.affix = function (option) {\n    return this.each(function () {\n      var $this = $(this)\n        , data = $this.data('affix')\n        , options = typeof option == 'object' && option\n      if (!data) $this.data('affix', (data = new Affix(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  $.fn.affix.Constructor = Affix\n\n  $.fn.affix.defaults = {\n    offset: 0\n  }\n\n\n /* AFFIX NO CONFLICT\n  * ================= */\n\n  $.fn.affix.noConflict = function () {\n    $.fn.affix = old\n    return this\n  }\n\n\n /* AFFIX DATA-API\n  * ============== */\n\n  $(window).on('load', function () {\n    $('[data-spy=\"affix\"]').each(function () {\n      var $spy = $(this)\n        , data = $spy.data()\n\n      data.offset = data.offset || {}\n\n      data.offsetBottom && (data.offset.bottom = data.offsetBottom)\n      data.offsetTop && (data.offset.top = data.offsetTop)\n\n      $spy.affix(data)\n    })\n  })\n\n\n}(window.jQuery);\n","(function($) {\n    \"use strict\";\n\n    var options = {\n        series: {\n            fillBelowTo: null\n        }\n    };\n\n    function init(plot) {\n        function findBelowSeries( series, allseries ) {\n\n            var i;\n\n            for ( i = 0; i < allseries.length; ++i ) {\n                if ( allseries[ i ].id === series.fillBelowTo ) {\n                    return allseries[ i ];\n                }\n            }\n\n            return null;\n        }\n\n        /* top and bottom doesn't actually matter for this, we're just using it to help make this easier to think about */\n        /* this is a vector cross product operation */\n        function segmentIntersection(top_left_x, top_left_y, top_right_x, top_right_y, bottom_left_x, bottom_left_y, bottom_right_x, bottom_right_y) {\n            var top_delta_x, top_delta_y, bottom_delta_x, bottom_delta_y,\n                s, t;\n\n            top_delta_x = top_right_x - top_left_x;\n            top_delta_y = top_right_y - top_left_y;\n            bottom_delta_x = bottom_right_x - bottom_left_x;\n            bottom_delta_y = bottom_right_y - bottom_left_y;\n\n            s = (\n                (-top_delta_y * (top_left_x - bottom_left_x)) + (top_delta_x * (top_left_y - bottom_left_y))\n            ) / (\n                -bottom_delta_x * top_delta_y + top_delta_x * bottom_delta_y\n            );\n\n            t = (\n                (bottom_delta_x * (top_left_y - bottom_left_y)) - (bottom_delta_y * (top_left_x - bottom_left_x))\n            ) / (\n                -bottom_delta_x * top_delta_y + top_delta_x * bottom_delta_y\n            );\n\n            // Collision detected\n            if (s >= 0 && s <= 1 && t >= 0 && t <= 1) {\n                return [\n                    top_left_x + (t * top_delta_x), // X\n                    top_left_y + (t * top_delta_y) // Y\n                ];\n            }\n\n            // No collision\n            return null;\n        }\n\n        function plotDifferenceArea(plot, ctx, series) {\n            if ( series.fillBelowTo === null ) {\n                return;\n            }\n\n            var otherseries,\n\n                ps,\n                points,\n\n                otherps,\n                otherpoints,\n\n                plotOffset,\n                fillStyle;\n\n            function openPolygon(x, y) {\n                ctx.beginPath();\n                ctx.moveTo(\n                    series.xaxis.p2c(x) + plotOffset.left,\n                    series.yaxis.p2c(y) + plotOffset.top\n                );\n\n            }\n\n            function closePolygon() {\n                ctx.closePath();\n                ctx.fill();\n            }\n\n            function validateInput() {\n                if (points.length/ps !== otherpoints.length/otherps) {\n                    console.error(\"Refusing to graph inconsistent number of points\");\n                    return false;\n                }\n\n                var i;\n                for (i = 0; i < (points.length / ps); i++) {\n                    if (\n                        points[i * ps] !== null &&\n                        otherpoints[i * otherps] !== null &&\n                        points[i * ps] !== otherpoints[i * otherps]\n                    ) {\n                        console.error(\"Refusing to graph points without matching value\");\n                        return false;\n                    }\n                }\n\n                return true;\n            }\n\n            function findNextStart(start_i, end_i) {\n                console.assert(end_i > start_i, \"expects the end index to be greater than the start index\");\n\n                var start = (\n                        start_i === 0 ||\n                        points[start_i - 1] === null ||\n                        otherpoints[start_i - 1] === null\n                    ),\n                    equal = false,\n                    i,\n                    intersect;\n\n                for (i = start_i; i < end_i; i++) {\n                    // Take note of null points\n                    if (\n                        points[(i * ps) + 1] === null ||\n                        otherpoints[(i * ps) + 1] === null\n                    ) {\n                        equal = false;\n                        start = true;\n                    }\n\n                    // Take note of equal points\n                    else if (points[(i * ps) + 1] === otherpoints[(i * otherps) + 1]) {\n                        equal = true;\n                        start = false;\n                    }\n\n\n                    else if (points[(i * ps) + 1] > otherpoints[(i * otherps) + 1]) {\n                        // If we begin above the desired point\n                        if (start) {\n                            openPolygon(points[i * ps], points[(i * ps) + 1]);\n                        }\n\n                        // If an equal point preceeds this, start the polygon at that equal point\n                        else if (equal) {\n                            openPolygon(points[(i - 1) * ps], points[((i - 1) * ps) + 1]);\n                        }\n\n                        // Otherwise, find the intersection point, and start it there\n                        else {\n                            intersect = intersectionPoint(i);\n                            openPolygon(intersect[0], intersect[1]);\n                        }\n\n                        topTraversal(i, end_i);\n                        return;\n                    }\n\n                    // If we go below equal, equal at any preceeding point is irrelevant\n                    else {\n                        start = false;\n                        equal = false;\n                    }\n                }\n            }\n\n            function intersectionPoint(right_i) {\n                console.assert(right_i > 0, \"expects the second point in the series line segment\");\n\n                var i, intersect;\n\n                for (i = 1; i < (otherpoints.length/otherps); i++) {\n                    intersect = segmentIntersection(\n                        points[(right_i - 1) * ps], points[((right_i - 1) * ps) + 1],\n                        points[right_i * ps], points[(right_i * ps) + 1],\n\n                        otherpoints[(i - 1) * otherps], otherpoints[((i - 1) * otherps) + 1],\n                        otherpoints[i * otherps], otherpoints[(i * otherps) + 1]\n                    );\n\n                    if (intersect !== null) {\n                        return intersect;\n                    }\n                }\n\n                console.error(\"intersectionPoint() should only be called when an intersection happens\");\n            }\n\n            function bottomTraversal(start_i, end_i) {\n                console.assert(start_i >= end_i, \"the start should be the rightmost point, and the end should be the leftmost (excluding the equal or intersecting point)\");\n\n                var i;\n\n                for (i = start_i; i >= end_i; i--) {\n                    ctx.lineTo(\n                        otherseries.xaxis.p2c(otherpoints[i * otherps]) + plotOffset.left,\n                        otherseries.yaxis.p2c(otherpoints[(i * otherps) + 1]) + plotOffset.top\n                    );\n                }\n\n                closePolygon();\n            }\n\n            function topTraversal(start_i, end_i) {\n                console.assert(start_i <= end_i, \"the start should be the rightmost point, and the end should be the leftmost (excluding the equal or intersecting point)\");\n\n                var i,\n                    intersect;\n\n                for (i = start_i; i < end_i; i++) {\n                    if (points[(i * ps) + 1] === null && i > start_i) {\n                        bottomTraversal(i - 1, start_i);\n                        findNextStart(i, end_i);\n                        return;\n                    }\n\n                    else if (points[(i * ps) + 1] === otherpoints[(i * otherps) + 1]) {\n                        bottomTraversal(i, start_i);\n                        findNextStart(i, end_i);\n                        return;\n                    }\n\n                    else if (points[(i * ps) + 1] < otherpoints[(i * otherps) + 1]) {\n                        intersect = intersectionPoint(i);\n                        ctx.lineTo(\n                            series.xaxis.p2c(intersect[0]) + plotOffset.left,\n                            series.yaxis.p2c(intersect[1]) + plotOffset.top\n                        );\n                        bottomTraversal(i, start_i);\n                        findNextStart(i, end_i);\n                        return;\n\n                    }\n\n                    else {\n                        ctx.lineTo(\n                            series.xaxis.p2c(points[i * ps]) + plotOffset.left,\n                            series.yaxis.p2c(points[(i * ps) + 1]) + plotOffset.top\n                        );\n                    }\n                }\n\n                bottomTraversal(end_i, start_i);\n            }\n\n\n            // Begin processing\n\n            otherseries = findBelowSeries( series, plot.getData() );\n\n            if ( !otherseries ) {\n                return;\n            }\n\n            ps = series.datapoints.pointsize;\n            points = series.datapoints.points;\n            otherps = otherseries.datapoints.pointsize;\n            otherpoints = otherseries.datapoints.points;\n            plotOffset = plot.getPlotOffset();\n\n            if (!validateInput()) {\n                return;\n            }\n\n\n            // Flot's getFillStyle() should probably be exposed somewhere\n            fillStyle = $.color.parse(series.color);\n            fillStyle.a = 0.4;\n            fillStyle.normalize();\n            ctx.fillStyle = fillStyle.toString();\n\n\n            // Begin recursive bi-directional traversal\n            findNextStart(0, points.length/ps);\n        }\n\n        plot.hooks.drawSeries.push(plotDifferenceArea);\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: \"fillbelow\",\n        version: \"0.1.0\"\n    });\n\n})(jQuery);\n","var path = 'public/app/features/playlist/partials/playlist.html';\nvar html = \"<page-header model=ctrl.navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\" ng-form=ctrl.playlistEditForm>\\n\\n\\t<h3 class=page-sub-heading ng-hide=ctrl.isNew>Edit Playlist</h3>\\n\\t<h3 class=page-sub-heading ng-show=ctrl.isNew>New Playlist</h3>\\n\\n\\t<p class=playlist-description>A playlist rotates through a pre-selected list of Dashboards. A Playlist can be a great way to build situational awareness, or just show off your metrics to your team or visitors.</p>\\n\\n\\t<div class=gf-form-group>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=\\\"gf-form-label width-7\\\">Name</span>\\n\\t\\t\\t<input type=text required ng-model=ctrl.playlist.name class=\\\"gf-form-input max-width-21\\\">\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=\\\"gf-form-label width-7\\\">Interval</span>\\n\\t\\t\\t<input type=text required ng-model=ctrl.playlist.interval placeholder=5m class=\\\"gf-form-input max-width-21\\\">\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=gf-form-group>\\n\\t\\t<h3 class=page-headering>Dashboards</h3>\\n\\n\\t\\t<table class=\\\"filter-table playlist-available-list\\\">\\n\\t\\t\\t<tr ng-repeat=\\\"playlistItem in ctrl.playlistItems\\\">\\n\\t\\t\\t\\t<td ng-if=\\\"playlistItem.type === 'dashboard_by_id'\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"gicon gicon-dashboard\\\"></i>&nbsp;&nbsp;{{playlistItem.title}}\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t<td ng-if=\\\"playlistItem.type === 'dashboard_by_tag'\\\">\\n\\t\\t\\t\\t\\t<a class=\\\"search-result-tag label label-tag\\\" tag-color-from-name=playlistItem.title>\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-tag\\\"></i>\\n\\t\\t\\t\\t\\t\\t<span>{{playlistItem.title}}</span>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</td>\\n\\n\\t\\t\\t\\t<td class=selected-playlistitem-settings>\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-inverse btn-small\\\" ng-hide=$first ng-click=ctrl.movePlaylistItemUp(playlistItem)>\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-arrow-up\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-inverse btn-small\\\" ng-hide=$last ng-click=ctrl.movePlaylistItemDown(playlistItem)>\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-arrow-down\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-inverse btn-small\\\" ng-click=ctrl.removePlaylistItem(playlistItem)>\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-remove\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t</tr>\\n\\t\\t\\t<tr ng-if=\\\"ctrl.playlistItems.length === 0\\\">\\n\\t\\t\\t\\t<td><em>Playlist is empty, add dashboards below.</em></td>\\n\\t\\t\\t</tr>\\n\\t\\t</table>\\n\\t</div>\\n\\n\\t<div class=gf-form-group>\\n\\t\\t<h3 class=page-headering>Add dashboards</h3>\\n\\t\\t<playlist-search class=playlist-search-container search-started=ctrl.searchStarted(promise)></playlist-search>\\n\\n\\t\\t<div ng-if=\\\"ctrl.filteredDashboards.length > 0\\\">\\n\\t\\t\\t<table class=\\\"filter-table playlist-available-list\\\">\\n\\t\\t\\t\\t<tr ng-repeat=\\\"playlistItem in ctrl.filteredDashboards\\\">\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<i class=\\\"gicon gicon-dashboard\\\"></i>\\n\\t\\t\\t\\t\\t\\t&nbsp;&nbsp;{{playlistItem.title}}\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-star\\\" ng-show=playlistItem.isStarred></i>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t<td class=add-dashboard>\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-inverse btn-small pull-right\\\" ng-click=ctrl.addPlaylistItem(playlistItem)>\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-plus\\\"></i>\\n\\t\\t\\t\\t\\t\\t\\tAdd to playlist\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</table>\\n\\t\\t</div>\\n\\t\\t<div class=playlist-search-results-container ng-if=\\\"ctrl.filteredTags.length > 0;\\\">\\n\\t\\t\\t<table class=\\\"filter-table playlist-available-list\\\">\\n\\t\\t\\t\\t<tr ng-repeat=\\\"tag in ctrl.filteredTags\\\">\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<a class=\\\"search-result-tag label label-tag\\\" tag-color-from-name=tag.term>\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-tag\\\"></i>\\n\\t\\t\\t\\t\\t\\t\\t<span>{{tag.term}} &nbsp;({{tag.count}})</span>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t<td class=add-dashboard>\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-inverse btn-small pull-right\\\" ng-click=ctrl.addTagPlaylistItem(tag)>\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-plus\\\"></i>\\n\\t\\t\\t\\t\\t\\t\\tAdd to playlist\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</table>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=clearfix></div>\\n\\n\\t<div class=gf-form-button-row>\\n\\t\\t<a class=\\\"btn btn-primary\\\" ng-show=ctrl.isNew ng-disabled=\\\"ctrl.playlistEditForm.$invalid || ctrl.isPlaylistEmpty()\\\" ng-click=\\\"ctrl.savePlaylist(ctrl.playlist, ctrl.playlistItems)\\\">Create</a>\\n\\t\\t<a class=\\\"btn btn-primary\\\" ng-show=!ctrl.isNew ng-disabled=\\\"ctrl.playlistEditForm.$invalid || ctrl.isPlaylistEmpty()\\\" ng-click=\\\"ctrl.savePlaylist(ctrl.playlist, ctrl.playlistItems)\\\">Save</a>\\n\\t\\t<a class=btn-text ng-click=ctrl.backToList()>Cancel</a>\\n\\t</div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import coreModule from 'app/core/core_module';\nimport config from 'app/core/config';\nimport _ from 'lodash';\nimport { NavModel } from '@grafana/data';\n\nexport class NavModelSrv {\n  navItems: any;\n\n  /** @ngInject */\n  constructor() {\n    this.navItems = config.bootData.navTree;\n  }\n\n  getCfgNode() {\n    return _.find(this.navItems, { id: 'cfg' });\n  }\n\n  getNav(...args: Array<string | number>) {\n    let children = this.navItems;\n    const nav = {\n      breadcrumbs: [],\n    } as NavModel;\n\n    for (const id of args) {\n      // if its a number then it's the index to use for main\n      if (_.isNumber(id)) {\n        nav.main = nav.breadcrumbs[id];\n        break;\n      }\n\n      const node: any = _.find(children, { id: id });\n      nav.breadcrumbs.push(node);\n      nav.node = node;\n      nav.main = node;\n      children = node.children;\n    }\n\n    if (nav.main.children) {\n      for (const item of nav.main.children) {\n        item.active = false;\n\n        if (item.url === nav.node.url) {\n          item.active = true;\n        }\n      }\n    }\n\n    return nav;\n  }\n\n  getNotFoundNav() {\n    return getNotFoundNav(); // the exported function\n  }\n}\n\nexport function getNotFoundNav(): NavModel {\n  return getWarningNav('Page not found', '404 Error');\n}\n\nexport function getWarningNav(text: string, subTitle?: string): NavModel {\n  const node = {\n    text,\n    subTitle,\n    icon: 'fa fa-fw fa-warning',\n  };\n  return {\n    breadcrumbs: [node],\n    node: node,\n    main: node,\n  };\n}\n\ncoreModule.service('navModelSrv', NavModelSrv);\n","import { KeyValue } from '../types';\n\n// Avoid writing the warning message more than once every 10s\nconst history: KeyValue<number> = {};\n\nexport const deprecationWarning = (file: string, oldName: string, newName?: string) => {\n  let message = `[Deprecation warning] ${file}: ${oldName} is deprecated`;\n  if (newName) {\n    message += `.  Use ${newName} instead`;\n  }\n  const now = Date.now();\n  const last = history[message];\n  if (!last || now - last > 10000) {\n    console.warn(message);\n    history[message] = now;\n  }\n};\n","import React from 'react';\nimport { cx, css } from 'emotion';\nimport { stylesFactory } from '../../themes';\n\nexport interface ListProps<T> {\n  items: T[];\n  renderItem: (item: T, index: number) => JSX.Element;\n  getItemKey?: (item: T) => string;\n  className?: string;\n}\n\ninterface AbstractListProps<T> extends ListProps<T> {\n  inline?: boolean;\n}\n\nconst getStyles = stylesFactory((inlineList = false) => ({\n  list: css`\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n  `,\n\n  item: css`\n    display: ${(inlineList && 'inline-block') || 'block'};\n  `,\n}));\n\nexport class AbstractList<T> extends React.PureComponent<AbstractListProps<T>> {\n  constructor(props: AbstractListProps<T>) {\n    super(props);\n  }\n\n  render() {\n    const { items, renderItem, getItemKey, className, inline } = this.props;\n    const styles = getStyles(inline);\n\n    return (\n      <ul className={cx(styles.list, className)}>\n        {items.map((item, i) => {\n          return (\n            <li className={styles.item} key={getItemKey ? getItemKey(item) : i}>\n              {renderItem(item, i)}\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n","var path = 'public/app/features/admin/partials/users.html';\nvar html = \"<page-header model=ctrl.navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\">\\n\\t<div class=page-action-bar>\\n    <label class=\\\"gf-form gf-form--grow gf-form--has-input-icon\\\">\\n      <input type=text class=\\\"gf-form-input max-width-30\\\" placeholder=\\\"Find user by name/login/email\\\" tabindex=1 give-focus=true ng-model=ctrl.query ng-model-options=\\\"{ debounce: 500 }\\\" spellcheck=false ng-change=ctrl.getUsers() />\\n      <i class=\\\"gf-form-input-icon fa fa-search\\\"></i>\\n    </label>\\n    <div class=page-action-bar__spacer></div>\\n    <a class=\\\"btn btn-primary\\\" href=admin/users/create>\\n      New user\\n    </a>\\n  </div>\\n\\n  <div class=admin-list-table>\\n    <table class=\\\"filter-table form-inline filter-table--hover\\\">\\n      <thead>\\n        <tr>\\n          <th></th>\\n          <th>Login</th>\\n          <th>Email</th>\\n          <th>\\n            Seen\\n            <tip>Time since user was seen using Grafana</tip>\\n          </th>\\n          <th></th>\\n          <th style=width:1%></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr ng-repeat=\\\"user in ctrl.users\\\">\\n          <td class=\\\"width-4 text-center link-td\\\">\\n            <a href=admin/users/edit/{{user.id}}>\\n              <img class=filter-table__avatar ng-src={{user.avatarUrl}}>\\n            </a>\\n          </td>\\n          <td class=link-td>\\n            <a href=admin/users/edit/{{user.id}}>\\n              {{user.login}}\\n            </a>\\n          </td>\\n          <td class=link-td>\\n            <a href=admin/users/edit/{{user.id}}>\\n              {{user.email}}\\n            </a>\\n          </td>\\n          <td class=link-td>\\n            <a href=admin/users/edit/{{user.id}}>\\n              {{user.lastSeenAtAge}}\\n            </a>\\n          </td>\\n          <td class=link-td>\\n            <a href=admin/users/edit/{{user.id}}>\\n              <i class=\\\"fa fa-shield\\\" ng-show=user.isAdmin bs-tooltip=\\\"'Grafana Admin'\\\"></i>\\n            </a>\\n          </td>\\n          <td class=text-right>\\n            <span class=\\\"label label-tag\\\" ng-style=user.authLabelStyle ng-if=user.authLabel>\\n              {{user.authLabel}}\\n            </span>\\n          </td>\\n          <td class=text-right>\\n            <span class=\\\"label label-tag label-tag--gray\\\" ng-if=user.isDisabled>Disabled</span>\\n          </td>\\n        </tr>\\n      </tbody>\\n\\n    </table>\\n  </div>\\n\\n  <div class=admin-list-paging ng-if=ctrl.showPaging>\\n    <ol>\\n      <li ng-repeat=\\\"page in ctrl.pages\\\">\\n        <button class=\\\"btn btn-small\\\" ng-class=\\\"{'btn-secondary': page.current, 'btn-inverse': !page.current}\\\" ng-click=ctrl.navigateToPage(page)>{{page.page}}</button>\\n      </li>\\n    </ol>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { NavModel, NavModelItem, NavIndex } from '@grafana/data';\n\nfunction getNotFoundModel(): NavModel {\n  const node: NavModelItem = {\n    id: 'not-found',\n    text: 'Page not found',\n    icon: 'fa fa-fw fa-warning',\n    subTitle: '404 Error',\n    url: 'not-found',\n  };\n\n  return {\n    node: node,\n    main: node,\n  };\n}\n\nexport function getNavModel(navIndex: NavIndex, id: string, fallback?: NavModel): NavModel {\n  if (navIndex[id]) {\n    const node = navIndex[id];\n    const main = {\n      ...node.parentItem,\n    };\n\n    main.children = main.children.map(item => {\n      return {\n        ...item,\n        active: item.url === node.url,\n      };\n    });\n\n    return {\n      node: node,\n      main: main,\n    };\n  }\n\n  if (fallback) {\n    return fallback;\n  }\n\n  return getNotFoundModel();\n}\n\nexport const getTitleFromNavModel = (navModel: NavModel) => {\n  return `${navModel.main.text}${navModel.node.text ? ': ' + navModel.node.text : ''}`;\n};\n","import { ThunkAction } from 'redux-thunk';\nimport { getBackendSrv } from 'app/core/services/backend_srv';\nimport { StoreState, ApiKey } from 'app/types';\n\nexport enum ActionTypes {\n  LoadApiKeys = 'LOAD_API_KEYS',\n  SetApiKeysSearchQuery = 'SET_API_KEYS_SEARCH_QUERY',\n}\n\nexport interface LoadApiKeysAction {\n  type: ActionTypes.LoadApiKeys;\n  payload: ApiKey[];\n}\n\nexport interface SetSearchQueryAction {\n  type: ActionTypes.SetApiKeysSearchQuery;\n  payload: string;\n}\n\nexport type Action = LoadApiKeysAction | SetSearchQueryAction;\n\ntype ThunkResult<R> = ThunkAction<R, StoreState, undefined, Action>;\n\nconst apiKeysLoaded = (apiKeys: ApiKey[]): LoadApiKeysAction => ({\n  type: ActionTypes.LoadApiKeys,\n  payload: apiKeys,\n});\n\nexport function addApiKey(apiKey: ApiKey, openModal: (key: string) => void): ThunkResult<void> {\n  return async dispatch => {\n    const result = await getBackendSrv().post('/api/auth/keys', apiKey);\n    dispatch(setSearchQuery(''));\n    dispatch(loadApiKeys());\n    openModal(result.key);\n  };\n}\n\nexport function loadApiKeys(): ThunkResult<void> {\n  return async dispatch => {\n    const response = await getBackendSrv().get('/api/auth/keys');\n    dispatch(apiKeysLoaded(response));\n  };\n}\n\nexport function deleteApiKey(id: number): ThunkResult<void> {\n  return async dispatch => {\n    getBackendSrv()\n      .delete('/api/auth/keys/' + id)\n      .then(dispatch(loadApiKeys()));\n  };\n}\n\nexport const setSearchQuery = (searchQuery: string): SetSearchQueryAction => ({\n  type: ActionTypes.SetApiKeysSearchQuery,\n  payload: searchQuery,\n});\n","// Libraries\nimport _ from 'lodash';\nimport { Unsubscribable } from 'rxjs';\nimport { isLive } from '@grafana/ui/src/components/RefreshPicker/RefreshPicker';\n// Services & Utils\nimport {\n  dateMath,\n  toUtc,\n  TimeRange,\n  RawTimeRange,\n  TimeZone,\n  TimeFragment,\n  LogRowModel,\n  LogsModel,\n  LogsDedupStrategy,\n  IntervalValues,\n  DefaultTimeZone,\n} from '@grafana/data';\nimport { renderUrl } from 'app/core/utils/url';\nimport store from 'app/core/store';\nimport kbn from 'app/core/utils/kbn';\nimport { getNextRefIdChar } from './query';\n// Types\nimport { DataQuery, DataSourceApi, DataQueryError, DataQueryRequest, PanelModel } from '@grafana/ui';\nimport { ExploreUrlState, HistoryItem, QueryTransaction, QueryOptions, ExploreMode } from 'app/types/explore';\nimport { config } from '../config';\nimport { TimeSrv } from 'app/features/dashboard/services/TimeSrv';\n\nexport const DEFAULT_RANGE = {\n  from: 'now-1h',\n  to: 'now',\n};\n\nexport const DEFAULT_UI_STATE = {\n  showingTable: true,\n  showingGraph: true,\n  showingLogs: true,\n  dedupStrategy: LogsDedupStrategy.none,\n};\n\nconst MAX_HISTORY_ITEMS = 100;\n\nexport const LAST_USED_DATASOURCE_KEY = 'grafana.explore.datasource';\nexport const lastUsedDatasourceKeyForOrgId = (orgId: number) => `${LAST_USED_DATASOURCE_KEY}.${orgId}`;\n\n/**\n * Returns an Explore-URL that contains a panel's queries and the dashboard time range.\n *\n * @param panelTargets The origin panel's query targets\n * @param panelDatasource The origin panel's datasource\n * @param datasourceSrv Datasource service to query other datasources in case the panel datasource is mixed\n * @param timeSrv Time service to get the current dashboard range from\n */\nexport async function getExploreUrl(\n  panel: PanelModel,\n  panelTargets: DataQuery[],\n  panelDatasource: any,\n  datasourceSrv: any,\n  timeSrv: TimeSrv\n) {\n  let exploreDatasource = panelDatasource;\n  let exploreTargets: DataQuery[] = panelTargets;\n  let url: string;\n\n  // Mixed datasources need to choose only one datasource\n  if (panelDatasource.meta.id === 'mixed' && exploreTargets) {\n    // Find first explore datasource among targets\n    for (const t of exploreTargets) {\n      const datasource = await datasourceSrv.get(t.datasource);\n      if (datasource) {\n        exploreDatasource = datasource;\n        exploreTargets = panelTargets.filter(t => t.datasource === datasource.name);\n        break;\n      }\n    }\n  }\n\n  if (exploreDatasource) {\n    const range = timeSrv.timeRangeForUrl();\n    let state: Partial<ExploreUrlState> = { range };\n    if (exploreDatasource.getExploreState) {\n      state = { ...state, ...exploreDatasource.getExploreState(exploreTargets) };\n    } else {\n      state = {\n        ...state,\n        datasource: exploreDatasource.name,\n        queries: exploreTargets.map(t => ({ ...t, datasource: exploreDatasource.name })),\n      };\n    }\n\n    const exploreState = JSON.stringify({ ...state, originPanelId: panel.id });\n    url = renderUrl('/explore', { left: exploreState });\n  }\n  const finalUrl = config.appSubUrl + url;\n  return finalUrl;\n}\n\nexport function buildQueryTransaction(\n  queries: DataQuery[],\n  queryOptions: QueryOptions,\n  range: TimeRange,\n  scanning: boolean\n): QueryTransaction {\n  const configuredQueries = queries.map(query => ({ ...query, ...queryOptions }));\n  const key = queries.reduce((combinedKey, query) => {\n    combinedKey += query.key;\n    return combinedKey;\n  }, '');\n\n  const { interval, intervalMs } = getIntervals(range, queryOptions.minInterval, queryOptions.maxDataPoints);\n\n  // Most datasource is using `panelId + query.refId` for cancellation logic.\n  // Using `format` here because it relates to the view panel that the request is for.\n  // However, some datasources don't use `panelId + query.refId`, but only `panelId`.\n  // Therefore panel id has to be unique.\n  const panelId = `${key}`;\n\n  const request: DataQueryRequest = {\n    dashboardId: 0,\n    // TODO probably should be taken from preferences but does not seem to be used anyway.\n    timezone: DefaultTimeZone,\n    startTime: Date.now(),\n    interval,\n    intervalMs,\n    // TODO: the query request expects number and we are using string here. Seems like it works so far but can create\n    // issues down the road.\n    panelId: panelId as any,\n    targets: configuredQueries, // Datasources rely on DataQueries being passed under the targets key.\n    range,\n    requestId: 'explore',\n    rangeRaw: range.raw,\n    scopedVars: {\n      __interval: { text: interval, value: interval },\n      __interval_ms: { text: intervalMs, value: intervalMs },\n    },\n    maxDataPoints: queryOptions.maxDataPoints,\n  };\n\n  return {\n    queries,\n    request,\n    scanning,\n    id: generateKey(), // reusing for unique ID\n    done: false,\n    latency: 0,\n  };\n}\n\nexport const clearQueryKeys: (query: DataQuery) => object = ({ key, refId, ...rest }) => rest;\n\nconst isSegment = (segment: { [key: string]: string }, ...props: string[]) =>\n  props.some(prop => segment.hasOwnProperty(prop));\n\nenum ParseUrlStateIndex {\n  RangeFrom = 0,\n  RangeTo = 1,\n  Datasource = 2,\n  SegmentsStart = 3,\n}\n\nenum ParseUiStateIndex {\n  Graph = 0,\n  Logs = 1,\n  Table = 2,\n  Strategy = 3,\n}\n\nexport const safeParseJson = (text: string) => {\n  if (!text) {\n    return;\n  }\n\n  try {\n    return JSON.parse(decodeURI(text));\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const safeStringifyValue = (value: any, space?: number) => {\n  if (!value) {\n    return '';\n  }\n\n  try {\n    return JSON.stringify(value, null, space);\n  } catch (error) {\n    console.error(error);\n  }\n\n  return '';\n};\n\nexport function parseUrlState(initial: string | undefined): ExploreUrlState {\n  const parsed = safeParseJson(initial);\n  const errorResult: any = {\n    datasource: null,\n    queries: [],\n    range: DEFAULT_RANGE,\n    ui: DEFAULT_UI_STATE,\n    mode: null,\n    originPanelId: null,\n  };\n\n  if (!parsed) {\n    return errorResult;\n  }\n\n  if (!Array.isArray(parsed)) {\n    return parsed;\n  }\n\n  if (parsed.length <= ParseUrlStateIndex.SegmentsStart) {\n    console.error('Error parsing compact URL state for Explore.');\n    return errorResult;\n  }\n\n  const range = {\n    from: parsed[ParseUrlStateIndex.RangeFrom],\n    to: parsed[ParseUrlStateIndex.RangeTo],\n  };\n  const datasource = parsed[ParseUrlStateIndex.Datasource];\n  const parsedSegments = parsed.slice(ParseUrlStateIndex.SegmentsStart);\n  const metricProperties = ['expr', 'target', 'datasource', 'query'];\n  const queries = parsedSegments.filter(segment => isSegment(segment, ...metricProperties));\n  const modeObj = parsedSegments.filter(segment => isSegment(segment, 'mode'))[0];\n  const mode = modeObj ? modeObj.mode : ExploreMode.Metrics;\n\n  const uiState = parsedSegments.filter(segment => isSegment(segment, 'ui'))[0];\n  const ui = uiState\n    ? {\n        showingGraph: uiState.ui[ParseUiStateIndex.Graph],\n        showingLogs: uiState.ui[ParseUiStateIndex.Logs],\n        showingTable: uiState.ui[ParseUiStateIndex.Table],\n        dedupStrategy: uiState.ui[ParseUiStateIndex.Strategy],\n      }\n    : DEFAULT_UI_STATE;\n\n  const originPanelId = parsedSegments.filter(segment => isSegment(segment, 'originPanelId'))[0];\n  return { datasource, queries, range, ui, mode, originPanelId };\n}\n\nexport function serializeStateToUrlParam(urlState: ExploreUrlState, compact?: boolean): string {\n  if (compact) {\n    return JSON.stringify([\n      urlState.range.from,\n      urlState.range.to,\n      urlState.datasource,\n      ...urlState.queries,\n      { mode: urlState.mode },\n      {\n        ui: [\n          !!urlState.ui.showingGraph,\n          !!urlState.ui.showingLogs,\n          !!urlState.ui.showingTable,\n          urlState.ui.dedupStrategy,\n        ],\n      },\n    ]);\n  }\n  return JSON.stringify(urlState);\n}\n\nexport function generateKey(index = 0): string {\n  return `Q-${Date.now()}-${Math.random()}-${index}`;\n}\n\nexport function generateEmptyQuery(queries: DataQuery[], index = 0): DataQuery {\n  return { refId: getNextRefIdChar(queries), key: generateKey(index) };\n}\n\nexport const generateNewKeyAndAddRefIdIfMissing = (target: DataQuery, queries: DataQuery[], index = 0): DataQuery => {\n  const key = generateKey(index);\n  const refId = target.refId || getNextRefIdChar(queries);\n\n  return { ...target, refId, key };\n};\n\n/**\n * Ensure at least one target exists and that targets have the necessary keys\n */\nexport function ensureQueries(queries?: DataQuery[]): DataQuery[] {\n  if (queries && typeof queries === 'object' && queries.length > 0) {\n    const allQueries = [];\n    for (let index = 0; index < queries.length; index++) {\n      const query = queries[index];\n      const key = generateKey(index);\n      let refId = query.refId;\n      if (!refId) {\n        refId = getNextRefIdChar(allQueries);\n      }\n\n      allQueries.push({\n        ...query,\n        refId,\n        key,\n      });\n    }\n    return allQueries;\n  }\n  return [{ ...generateEmptyQuery(queries) }];\n}\n\n/**\n * A target is non-empty when it has keys (with non-empty values) other than refId, key and context.\n */\nconst validKeys = ['refId', 'key', 'context'];\nexport function hasNonEmptyQuery<TQuery extends DataQuery = any>(queries: TQuery[]): boolean {\n  return (\n    queries &&\n    queries.some((query: any) => {\n      const keys = Object.keys(query)\n        .filter(key => validKeys.indexOf(key) === -1)\n        .map(k => query[k])\n        .filter(v => v);\n      return keys.length > 0;\n    })\n  );\n}\n\n/**\n * Update the query history. Side-effect: store history in local storage\n */\nexport function updateHistory<T extends DataQuery = any>(\n  history: Array<HistoryItem<T>>,\n  datasourceId: string,\n  queries: T[]\n): Array<HistoryItem<T>> {\n  const ts = Date.now();\n  queries.forEach(query => {\n    history = [{ query, ts }, ...history];\n  });\n\n  if (history.length > MAX_HISTORY_ITEMS) {\n    history = history.slice(0, MAX_HISTORY_ITEMS);\n  }\n\n  // Combine all queries of a datasource type into one history\n  const historyKey = `grafana.explore.history.${datasourceId}`;\n  store.setObject(historyKey, history);\n  return history;\n}\n\nexport function clearHistory(datasourceId: string) {\n  const historyKey = `grafana.explore.history.${datasourceId}`;\n  store.delete(historyKey);\n}\n\nexport const getQueryKeys = (queries: DataQuery[], datasourceInstance: DataSourceApi): string[] => {\n  const queryKeys = queries.reduce((newQueryKeys, query, index) => {\n    const primaryKey = datasourceInstance && datasourceInstance.name ? datasourceInstance.name : query.key;\n    return newQueryKeys.concat(`${primaryKey}-${index}`);\n  }, []);\n\n  return queryKeys;\n};\n\nexport const getTimeRange = (timeZone: TimeZone, rawRange: RawTimeRange): TimeRange => {\n  return {\n    from: dateMath.parse(rawRange.from, false, timeZone as any),\n    to: dateMath.parse(rawRange.to, true, timeZone as any),\n    raw: rawRange,\n  };\n};\n\nconst parseRawTime = (value: any): TimeFragment => {\n  if (value === null) {\n    return null;\n  }\n\n  if (value.indexOf('now') !== -1) {\n    return value;\n  }\n  if (value.length === 8) {\n    return toUtc(value, 'YYYYMMDD');\n  }\n  if (value.length === 15) {\n    return toUtc(value, 'YYYYMMDDTHHmmss');\n  }\n  // Backward compatibility\n  if (value.length === 19) {\n    return toUtc(value, 'YYYY-MM-DD HH:mm:ss');\n  }\n\n  if (!isNaN(value)) {\n    const epoch = parseInt(value, 10);\n    return toUtc(epoch);\n  }\n\n  return null;\n};\n\nexport const getTimeRangeFromUrl = (range: RawTimeRange, timeZone: TimeZone): TimeRange => {\n  const raw = {\n    from: parseRawTime(range.from),\n    to: parseRawTime(range.to),\n  };\n\n  return {\n    from: dateMath.parse(raw.from, false, timeZone as any),\n    to: dateMath.parse(raw.to, true, timeZone as any),\n    raw,\n  };\n};\n\nexport const getValueWithRefId = (value: any): any | null => {\n  if (!value) {\n    return null;\n  }\n\n  if (typeof value !== 'object') {\n    return null;\n  }\n\n  if (value.refId) {\n    return value;\n  }\n\n  const keys = Object.keys(value);\n  for (let index = 0; index < keys.length; index++) {\n    const key = keys[index];\n    const refId = getValueWithRefId(value[key]);\n    if (refId) {\n      return refId;\n    }\n  }\n\n  return null;\n};\n\nexport const getFirstQueryErrorWithoutRefId = (errors: DataQueryError[]) => {\n  if (!errors) {\n    return null;\n  }\n\n  return errors.filter(error => (error && error.refId ? false : true))[0];\n};\n\nexport const getRefIds = (value: any): string[] => {\n  if (!value) {\n    return [];\n  }\n\n  if (typeof value !== 'object') {\n    return [];\n  }\n\n  const keys = Object.keys(value);\n  const refIds = [];\n  for (let index = 0; index < keys.length; index++) {\n    const key = keys[index];\n    if (key === 'refId') {\n      refIds.push(value[key]);\n      continue;\n    }\n    refIds.push(getRefIds(value[key]));\n  }\n\n  return _.uniq(_.flatten(refIds));\n};\n\nexport const sortInAscendingOrder = (a: LogRowModel, b: LogRowModel) => {\n  if (a.timestamp < b.timestamp) {\n    return -1;\n  }\n\n  if (a.timestamp > b.timestamp) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst sortInDescendingOrder = (a: LogRowModel, b: LogRowModel) => {\n  if (a.timestamp > b.timestamp) {\n    return -1;\n  }\n\n  if (a.timestamp < b.timestamp) {\n    return 1;\n  }\n\n  return 0;\n};\n\nexport enum SortOrder {\n  Descending = 'Descending',\n  Ascending = 'Ascending',\n}\n\nexport const refreshIntervalToSortOrder = (refreshInterval: string) =>\n  isLive(refreshInterval) ? SortOrder.Ascending : SortOrder.Descending;\n\nexport const sortLogsResult = (logsResult: LogsModel, sortOrder: SortOrder): LogsModel => {\n  const rows = logsResult ? logsResult.rows : [];\n  sortOrder === SortOrder.Ascending ? rows.sort(sortInAscendingOrder) : rows.sort(sortInDescendingOrder);\n  const result: LogsModel = logsResult ? { ...logsResult, rows } : { hasUniqueLabels: false, rows };\n\n  return result;\n};\n\nexport const convertToWebSocketUrl = (url: string) => {\n  const protocol = window.location.protocol === 'https:' ? 'wss://' : 'ws://';\n  let backend = `${protocol}${window.location.host}${config.appSubUrl}`;\n  if (backend.endsWith('/')) {\n    backend = backend.slice(0, backend.length - 1);\n  }\n  return `${backend}${url}`;\n};\n\nexport const stopQueryState = (querySubscription: Unsubscribable) => {\n  if (querySubscription) {\n    querySubscription.unsubscribe();\n  }\n};\n\nexport function getIntervals(range: TimeRange, lowLimit: string, resolution: number): IntervalValues {\n  if (!resolution) {\n    return { interval: '1s', intervalMs: 1000 };\n  }\n\n  return kbn.calculateInterval(range, resolution, lowLimit);\n}\n","import React, { PureComponent } from 'react';\n\nimport { FormLabel, Select } from '@grafana/ui';\n\nimport { DashboardSearchHit, DashboardSearchHitType } from 'app/types';\nimport { getBackendSrv } from 'app/core/services/backend_srv';\n\nexport interface Props {\n  resourceUri: string;\n}\n\nexport interface State {\n  homeDashboardId: number;\n  theme: string;\n  timezone: string;\n  dashboards: DashboardSearchHit[];\n}\n\nconst themes = [{ value: '', label: 'Default' }, { value: 'dark', label: 'Dark' }, { value: 'light', label: 'Light' }];\n\nconst timezones = [\n  { value: '', label: 'Default' },\n  { value: 'browser', label: 'Local browser time' },\n  { value: 'utc', label: 'UTC' },\n];\n\nexport class SharedPreferences extends PureComponent<Props, State> {\n  backendSrv = getBackendSrv();\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      homeDashboardId: 0,\n      theme: '',\n      timezone: '',\n      dashboards: [],\n    };\n  }\n\n  async componentDidMount() {\n    const prefs = await this.backendSrv.get(`/api/${this.props.resourceUri}/preferences`);\n    const dashboards = await this.backendSrv.search({ starred: true });\n    const defaultDashboardHit: DashboardSearchHit = {\n      id: 0,\n      title: 'Default',\n      tags: [],\n      type: '' as DashboardSearchHitType,\n      uid: '',\n      uri: '',\n      url: '',\n      folderId: 0,\n      folderTitle: '',\n      folderUid: '',\n      folderUrl: '',\n      isStarred: false,\n      slug: '',\n    };\n\n    if (prefs.homeDashboardId > 0 && !dashboards.find(d => d.id === prefs.homeDashboardId)) {\n      const missing = await this.backendSrv.search({ dashboardIds: [prefs.homeDashboardId] });\n      if (missing && missing.length > 0) {\n        dashboards.push(missing[0]);\n      }\n    }\n\n    this.setState({\n      homeDashboardId: prefs.homeDashboardId,\n      theme: prefs.theme,\n      timezone: prefs.timezone,\n      dashboards: [defaultDashboardHit, ...dashboards],\n    });\n  }\n\n  onSubmitForm = async (event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    const { homeDashboardId, theme, timezone } = this.state;\n\n    await this.backendSrv.put(`/api/${this.props.resourceUri}/preferences`, {\n      homeDashboardId,\n      theme,\n      timezone,\n    });\n    window.location.reload();\n  };\n\n  onThemeChanged = (theme: string) => {\n    this.setState({ theme });\n  };\n\n  onTimeZoneChanged = (timezone: string) => {\n    this.setState({ timezone });\n  };\n\n  onHomeDashboardChanged = (dashboardId: number) => {\n    this.setState({ homeDashboardId: dashboardId });\n  };\n\n  getFullDashName = (dashboard: DashboardSearchHit) => {\n    if (typeof dashboard.folderTitle === 'undefined' || dashboard.folderTitle === '') {\n      return dashboard.title;\n    }\n    return dashboard.folderTitle + ' / ' + dashboard.title;\n  };\n\n  render() {\n    const { theme, timezone, homeDashboardId, dashboards } = this.state;\n\n    return (\n      <form className=\"section gf-form-group\" onSubmit={this.onSubmitForm}>\n        <h3 className=\"page-heading\">Preferences</h3>\n        <div className=\"gf-form\">\n          <span className=\"gf-form-label width-11\">UI Theme</span>\n          <Select\n            isSearchable={false}\n            value={themes.find(item => item.value === theme)}\n            options={themes}\n            onChange={theme => this.onThemeChanged(theme.value)}\n            width={20}\n          />\n        </div>\n        <div className=\"gf-form\">\n          <FormLabel\n            width={11}\n            tooltip=\"Not finding dashboard you want? Star it first, then it should appear in this select box.\"\n          >\n            Home Dashboard\n          </FormLabel>\n          <Select\n            value={dashboards.find(dashboard => dashboard.id === homeDashboardId)}\n            getOptionValue={i => i.id}\n            getOptionLabel={this.getFullDashName}\n            onChange={(dashboard: DashboardSearchHit) => this.onHomeDashboardChanged(dashboard.id)}\n            options={dashboards}\n            placeholder=\"Choose default dashboard\"\n            width={20}\n          />\n        </div>\n        <div className=\"gf-form\">\n          <label className=\"gf-form-label width-11\">Timezone</label>\n          <Select\n            isSearchable={false}\n            value={timezones.find(item => item.value === timezone)}\n            onChange={timezone => this.onTimeZoneChanged(timezone.value)}\n            options={timezones}\n            width={20}\n          />\n        </div>\n        <div className=\"gf-form-button-row\">\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Save\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default SharedPreferences;\n","import { Editor as SlateEditor } from 'slate';\n\nexport default function RunnerPlugin({ handler }: any) {\n  return {\n    onKeyDown(event: KeyboardEvent, editor: SlateEditor, next: Function) {\n      // Handle enter\n      if (handler && event.key === 'Enter' && !event.shiftKey) {\n        // Submit on Enter\n        event.preventDefault();\n        handler(event);\n        return true;\n      }\n\n      return next();\n    },\n  };\n}\n","import { ThunkAction } from 'redux-thunk';\nimport { StoreState } from '../../../types';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { Invitee, OrgUser } from 'app/types';\n\nexport enum ActionTypes {\n  LoadUsers = 'LOAD_USERS',\n  LoadInvitees = 'LOAD_INVITEES',\n  SetUsersSearchQuery = 'SET_USERS_SEARCH_QUERY',\n}\n\nexport interface LoadUsersAction {\n  type: ActionTypes.LoadUsers;\n  payload: OrgUser[];\n}\n\nexport interface LoadInviteesAction {\n  type: ActionTypes.LoadInvitees;\n  payload: Invitee[];\n}\n\nexport interface SetUsersSearchQueryAction {\n  type: ActionTypes.SetUsersSearchQuery;\n  payload: string;\n}\n\nconst usersLoaded = (users: OrgUser[]): LoadUsersAction => ({\n  type: ActionTypes.LoadUsers,\n  payload: users,\n});\n\nconst inviteesLoaded = (invitees: Invitee[]): LoadInviteesAction => ({\n  type: ActionTypes.LoadInvitees,\n  payload: invitees,\n});\n\nexport const setUsersSearchQuery = (query: string): SetUsersSearchQueryAction => ({\n  type: ActionTypes.SetUsersSearchQuery,\n  payload: query,\n});\n\nexport type Action = LoadUsersAction | SetUsersSearchQueryAction | LoadInviteesAction;\n\ntype ThunkResult<R> = ThunkAction<R, StoreState, undefined, Action>;\n\nexport function loadUsers(): ThunkResult<void> {\n  return async dispatch => {\n    const users = await getBackendSrv().get('/api/org/users');\n    dispatch(usersLoaded(users));\n  };\n}\n\nexport function loadInvitees(): ThunkResult<void> {\n  return async dispatch => {\n    const invitees = await getBackendSrv().get('/api/org/invites');\n    dispatch(inviteesLoaded(invitees));\n  };\n}\n\nexport function updateUser(user: OrgUser): ThunkResult<void> {\n  return async dispatch => {\n    await getBackendSrv().patch(`/api/org/users/${user.userId}`, { role: user.role });\n    dispatch(loadUsers());\n  };\n}\n\nexport function removeUser(userId: number): ThunkResult<void> {\n  return async dispatch => {\n    await getBackendSrv().delete(`/api/org/users/${userId}`);\n    dispatch(loadUsers());\n  };\n}\n\nexport function revokeInvite(code: string): ThunkResult<void> {\n  return async dispatch => {\n    await getBackendSrv().patch(`/api/org/invites/${code}/revoke`, {});\n    dispatch(loadInvitees());\n  };\n}\n","import { LocationUpdate } from '@grafana/runtime';\nimport { actionCreatorFactory } from 'app/core/redux';\n\nexport const updateLocation = actionCreatorFactory<LocationUpdate>('UPDATE_LOCATION').create();\n","import { ContextMenuItem } from '../components/ContextMenu/ContextMenu';\nimport { LinkModelSupplier } from '@grafana/data';\n\nexport const DataLinkBuiltInVars = {\n  keepTime: '__url_time_range',\n  timeRangeFrom: '__from',\n  timeRangeTo: '__to',\n  includeVars: '__all_variables',\n  seriesName: '__series.name',\n  fieldName: '__field.name',\n  valueTime: '__value.time',\n  valueNumeric: '__value.numeric',\n  valueText: '__value.text',\n  valueRaw: '__value.raw',\n  // name of the calculation represented by the value\n  valueCalc: '__value.calc',\n};\n\n/**\n * Delays creating links until we need to open the ContextMenu\n */\nexport const linkModelToContextMenuItems: (links: LinkModelSupplier<any>) => ContextMenuItem[] = links => {\n  return links.getLinks().map(link => {\n    return {\n      label: link.title,\n      // TODO: rename to href\n      url: link.href,\n      target: link.target,\n      icon: `fa ${link.target === '_self' ? 'fa-link' : 'fa-external-link'}`,\n    };\n  });\n};\n","/**\n * Calculate tick step.\n * Implementation from d3-array (ticks.js)\n * https://github.com/d3/d3-array/blob/master/src/ticks.js\n * @param start Start value\n * @param stop End value\n * @param count Ticks count\n */\nexport function tickStep(start: number, stop: number, count: number): number {\n  const e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\n  const step0 = Math.abs(stop - start) / Math.max(0, count);\n  let step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10));\n  const error = step0 / step1;\n\n  if (error >= e10) {\n    step1 *= 10;\n  } else if (error >= e5) {\n    step1 *= 5;\n  } else if (error >= e2) {\n    step1 *= 2;\n  }\n\n  return stop < start ? -step1 : step1;\n}\n\nexport function getScaledDecimals(decimals: number, tickSize: number) {\n  return decimals - Math.floor(Math.log(tickSize) / Math.LN10);\n}\n\n/**\n * Calculate tick size based on min and max values, number of ticks and precision.\n * Implementation from Flot.\n * @param min           Axis minimum\n * @param max           Axis maximum\n * @param noTicks       Number of ticks\n * @param tickDecimals  Tick decimal precision\n */\nexport function getFlotTickSize(min: number, max: number, noTicks: number, tickDecimals: number) {\n  const delta = (max - min) / noTicks;\n  let dec = -Math.floor(Math.log(delta) / Math.LN10);\n  const maxDec = tickDecimals;\n\n  const magn = Math.pow(10, -dec);\n  const norm = delta / magn; // norm is between 1.0 and 10.0\n  let size;\n\n  if (norm < 1.5) {\n    size = 1;\n  } else if (norm < 3) {\n    size = 2;\n    // special case for 2.5, requires an extra decimal\n    if (norm > 2.25 && (maxDec == null || dec + 1 <= maxDec)) {\n      size = 2.5;\n      ++dec;\n    }\n  } else if (norm < 7.5) {\n    size = 5;\n  } else {\n    size = 10;\n  }\n\n  size *= magn;\n\n  return size;\n}\n\n/**\n * Calculate axis range (min and max).\n * Implementation from Flot.\n */\nexport function getFlotRange(panelMin: any, panelMax: any, datamin: number, datamax: number) {\n  const autoscaleMargin = 0.02;\n\n  let min = +(panelMin != null ? panelMin : datamin);\n  let max = +(panelMax != null ? panelMax : datamax);\n  const delta = max - min;\n\n  if (delta === 0.0) {\n    // Grafana fix: wide Y min and max using increased wideFactor\n    // when all series values are the same\n    const wideFactor = 0.25;\n    const widen = Math.abs(max === 0 ? 1 : max * wideFactor);\n\n    if (panelMin === null) {\n      min -= widen;\n    }\n    // always widen max if we couldn't widen min to ensure we\n    // don't fall into min == max which doesn't work\n    if (panelMax == null || panelMin != null) {\n      max += widen;\n    }\n  } else {\n    // consider autoscaling\n    const margin = autoscaleMargin;\n    if (margin != null) {\n      if (panelMin == null) {\n        min -= delta * margin;\n        // make sure we don't go below zero if all values\n        // are positive\n        if (min < 0 && datamin != null && datamin >= 0) {\n          min = 0;\n        }\n      }\n      if (panelMax == null) {\n        max += delta * margin;\n        if (max > 0 && datamax != null && datamax <= 0) {\n          max = 0;\n        }\n      }\n    }\n  }\n  return { min, max };\n}\n\n/**\n * Calculate tick decimals.\n * Implementation from Flot.\n */\nexport function getFlotTickDecimals(datamin: number, datamax: number, axis: { min: any; max: any }, height: number) {\n  const { min, max } = getFlotRange(axis.min, axis.max, datamin, datamax);\n  const noTicks = 0.3 * Math.sqrt(height);\n  const delta = (max - min) / noTicks;\n  const dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n  const magn = Math.pow(10, -dec);\n  // norm is between 1.0 and 10.0\n  const norm = delta / magn;\n  let size;\n\n  if (norm < 1.5) {\n    size = 1;\n  } else if (norm < 3) {\n    size = 2;\n    // special case for 2.5, requires an extra decimal\n    if (norm > 2.25) {\n      size = 2.5;\n    }\n  } else if (norm < 7.5) {\n    size = 5;\n  } else {\n    size = 10;\n  }\n  size *= magn;\n\n  const tickDecimals = Math.max(0, -Math.floor(Math.log(delta) / Math.LN10) + 1);\n  // grafana addition\n  const scaledDecimals = tickDecimals - Math.floor(Math.log(size) / Math.LN10);\n  return { tickDecimals, scaledDecimals };\n}\n\n/**\n * Format timestamp similar to Grafana graph panel.\n * @param ticks Number of ticks\n * @param min Time from (in milliseconds)\n * @param max Time to (in milliseconds)\n */\nexport function grafanaTimeFormat(ticks: number, min: number, max: number) {\n  if (min && max && ticks) {\n    const range = max - min;\n    const secPerTick = range / ticks / 1000;\n    const oneDay = 86400000;\n    const oneYear = 31536000000;\n\n    if (secPerTick <= 45) {\n      return '%H:%M:%S';\n    }\n    if (secPerTick <= 7200 || range <= oneDay) {\n      return '%H:%M';\n    }\n    if (secPerTick <= 80000) {\n      return '%m/%d %H:%M';\n    }\n    if (secPerTick <= 2419200 || range <= oneYear) {\n      return '%m/%d';\n    }\n    return '%Y-%m';\n  }\n\n  return '%H:%M';\n}\n\n/**\n * Logarithm of value for arbitrary base.\n */\nexport function logp(value: number, base: number) {\n  return Math.log(value) / Math.log(base);\n}\n\n/**\n * Get decimal precision of number (3.14 => 2)\n */\nexport function getPrecision(num: number): number {\n  const str = num.toString();\n  return getStringPrecision(str);\n}\n\n/**\n * Get decimal precision of number stored as a string (\"3.14\" => 2)\n */\nexport function getStringPrecision(num: string): number {\n  if (isNaN((num as unknown) as number)) {\n    return 0;\n  }\n\n  const dotIndex = num.indexOf('.');\n  if (dotIndex === -1) {\n    return 0;\n  } else {\n    return num.length - dotIndex - 1;\n  }\n}\n","var path = 'public/app/features/panel/partials/query_editor_row.html';\nvar html = \"<div ng-transclude class=gf-form-query-content></div>\\n\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","export function stringToJsRegex(str: string): RegExp {\n  if (str[0] !== '/') {\n    return new RegExp('^' + str + '$');\n  }\n\n  const match = str.match(new RegExp('^/(.*?)/(g?i?m?y?)$'));\n\n  if (!match) {\n    throw new Error(`'${str}' is not a valid regular expression.`);\n  }\n\n  return new RegExp(match[1], match[2]);\n}\n\nexport function stringToMs(str: string): number {\n  if (!str) {\n    return 0;\n  }\n\n  const nr = parseInt(str, 10);\n  const unit = str.substr(String(nr).length);\n  const s = 1000;\n  const m = s * 60;\n  const h = m * 60;\n  const d = h * 24;\n\n  switch (unit) {\n    case 's':\n      return nr * s;\n    case 'm':\n      return nr * m;\n    case 'h':\n      return nr * h;\n    case 'd':\n      return nr * d;\n    default:\n      if (!unit) {\n        return isNaN(nr) ? 0 : nr;\n      }\n      throw new Error('Not supported unit: ' + unit);\n  }\n}\n\nexport function toNumberString(value: number | undefined | null): string {\n  if (value !== null && value !== undefined && Number.isFinite(value as number)) {\n    return value.toString();\n  }\n  return '';\n}\n\nexport function toIntegerOrUndefined(value: string): number | undefined {\n  if (!value) {\n    return undefined;\n  }\n  const v = parseInt(value, 10);\n  return isNaN(v) ? undefined : v;\n}\n\nexport function toFloatOrUndefined(value: string): number | undefined {\n  if (!value) {\n    return undefined;\n  }\n  const v = parseFloat(value);\n  return isNaN(v) ? undefined : v;\n}\n","import { AppNotification } from 'app/types/';\n\nexport enum ActionTypes {\n  AddAppNotification = 'ADD_APP_NOTIFICATION',\n  ClearAppNotification = 'CLEAR_APP_NOTIFICATION',\n}\n\ninterface AddAppNotificationAction {\n  type: ActionTypes.AddAppNotification;\n  payload: AppNotification;\n}\n\ninterface ClearAppNotificationAction {\n  type: ActionTypes.ClearAppNotification;\n  payload: number;\n}\n\nexport type Action = AddAppNotificationAction | ClearAppNotificationAction;\n\nexport const clearAppNotification = (appNotificationId: number) => ({\n  type: ActionTypes.ClearAppNotification,\n  payload: appNotificationId,\n});\n\nexport const notifyApp = (appNotification: AppNotification) => ({\n  type: ActionTypes.AddAppNotification,\n  payload: appNotification,\n});\n","var path = 'public/app/features/panel/partials/panelTime.html';\nvar html = \"<div class=gf-form-group>\\n\\t<div class=gf-form>\\n\\t\\t<span class=gf-form-label>\\n\\t\\t\\t<i class=\\\"fa fa-clock-o\\\"></i>\\n\\t\\t</span>\\n\\n\\t\\t<span class=\\\"gf-form-label width-12\\\">Override relative time</span>\\n\\t\\t<span class=\\\"gf-form-label width-6\\\">Last</span>\\n\\n\\t\\t<input type=text class=\\\"gf-form-input max-width-8\\\" placeholder=1h empty-to-null ng-model=ctrl.panel.timeFrom valid-time-span ng-change=ctrl.refresh() ng-model-onblur>\\n\\t</div>\\n\\n\\t<div class=gf-form>\\n\\t\\t<span class=gf-form-label>\\n\\t\\t\\t<i class=\\\"fa fa-clock-o\\\"></i>\\n\\t\\t</span>\\n\\t\\t<span class=\\\"gf-form-label width-12\\\">Add time shift</span>\\n\\t\\t<span class=\\\"gf-form-label width-6\\\">Amount</span>\\n\\t\\t<input type=text class=\\\"gf-form-input max-width-8\\\" placeholder=1h empty-to-null ng-model=ctrl.panel.timeShift valid-time-span ng-change=ctrl.refresh() ng-model-onblur>\\n\\t</div>\\n\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=gf-form-label>\\n\\t\\t\\t\\t<i class=\\\"fa fa-clock-o\\\"></i>\\n\\t\\t\\t</span>\\n\\t\\t</div>\\n\\t\\t<gf-form-switch class=\\\"gf-form max-width-30\\\" label=\\\"Hide time override info\\\" label-class=width-12 checked=ctrl.panel.hideTimeOverride switch-class=max-width-6 on-change=ctrl.refresh()>\\n\\t\\t</gf-form-switch>\\n\\t</div>\\n</div>\\n\\n\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { getBackendSrv } from 'app/core/services/backend_srv';\nimport { PluginMeta } from '@grafana/ui';\n\ntype PluginCache = {\n  [key: string]: PluginMeta;\n};\n\nconst pluginInfoCache: PluginCache = {};\n\nexport function getPluginSettings(pluginId: string): Promise<PluginMeta> {\n  const v = pluginInfoCache[pluginId];\n  if (v) {\n    return Promise.resolve(v);\n  }\n  return getBackendSrv()\n    .get(`/api/plugins/${pluginId}/settings`)\n    .then((settings: any) => {\n      pluginInfoCache[pluginId] = settings;\n      return settings;\n    })\n    .catch((err: any) => {\n      // err.isHandled = true;\n      return Promise.reject('Unknown Plugin');\n    });\n}\n","import coreModule from 'app/core/core_module';\nimport { appEvents } from 'app/core/app_events';\nimport locationUtil from 'app/core/utils/location_util';\nimport { DashboardModel } from '../state/DashboardModel';\nimport { removePanel } from '../utils/panel';\nimport { DashboardMeta } from 'app/types';\nimport { BackendSrv } from 'app/core/services/backend_srv';\nimport { ILocationService } from 'angular';\n\ninterface DashboardSaveOptions {\n  folderId?: number;\n  overwrite?: boolean;\n  message?: string;\n  makeEditable?: boolean;\n}\n\nexport class DashboardSrv {\n  dashboard: DashboardModel;\n\n  /** @ngInject */\n  constructor(private backendSrv: BackendSrv, private $rootScope: any, private $location: ILocationService) {\n    appEvents.on('save-dashboard', this.saveDashboard.bind(this), $rootScope);\n    appEvents.on('panel-change-view', this.onPanelChangeView);\n    appEvents.on('remove-panel', this.onRemovePanel);\n\n    // Export to react\n    setDashboardSrv(this);\n  }\n\n  create(dashboard: any, meta: DashboardMeta) {\n    return new DashboardModel(dashboard, meta);\n  }\n\n  setCurrent(dashboard: DashboardModel) {\n    this.dashboard = dashboard;\n  }\n\n  getCurrent(): DashboardModel {\n    return this.dashboard;\n  }\n\n  onRemovePanel = (panelId: number) => {\n    const dashboard = this.getCurrent();\n    removePanel(dashboard, dashboard.getPanelById(panelId), true);\n  };\n\n  onPanelChangeView = ({\n    fullscreen = false,\n    edit = false,\n    panelId,\n  }: {\n    fullscreen?: boolean;\n    edit?: boolean;\n    panelId?: number;\n  }) => {\n    const urlParams = this.$location.search();\n\n    // handle toggle logic\n    // I hate using these truthy converters (!!) but in this case\n    // I think it's appropriate. edit can be null/false/undefined and\n    // here i want all of those to compare the same\n    if (fullscreen === urlParams.fullscreen && edit === !!urlParams.edit) {\n      const paramsToRemove = ['fullscreen', 'edit', 'panelId', 'tab'];\n      for (const key of paramsToRemove) {\n        delete urlParams[key];\n      }\n\n      this.$location.search(urlParams);\n      return;\n    }\n\n    const newUrlParams = {\n      ...urlParams,\n      fullscreen: fullscreen || undefined,\n      edit: edit || undefined,\n      tab: edit ? urlParams.tab : undefined,\n      panelId,\n    };\n\n    Object.keys(newUrlParams).forEach(key => {\n      if (newUrlParams[key] === undefined) {\n        delete newUrlParams[key];\n      }\n    });\n\n    this.$location.search(newUrlParams);\n  };\n\n  handleSaveDashboardError(\n    clone: any,\n    options: DashboardSaveOptions,\n    err: { data: { status: string; message: any }; isHandled: boolean }\n  ) {\n    options.overwrite = true;\n\n    if (err.data && err.data.status === 'version-mismatch') {\n      err.isHandled = true;\n\n      this.$rootScope.appEvent('confirm-modal', {\n        title: 'Conflict',\n        text: 'Someone else has updated this dashboard.',\n        text2: 'Would you still like to save this dashboard?',\n        yesText: 'Save & Overwrite',\n        icon: 'fa-warning',\n        onConfirm: () => {\n          this.save(clone, options);\n        },\n      });\n    }\n\n    if (err.data && err.data.status === 'name-exists') {\n      err.isHandled = true;\n\n      this.$rootScope.appEvent('confirm-modal', {\n        title: 'Conflict',\n        text: 'A dashboard with the same name in selected folder already exists.',\n        text2: 'Would you still like to save this dashboard?',\n        yesText: 'Save & Overwrite',\n        icon: 'fa-warning',\n        onConfirm: () => {\n          this.save(clone, options);\n        },\n      });\n    }\n\n    if (err.data && err.data.status === 'plugin-dashboard') {\n      err.isHandled = true;\n\n      this.$rootScope.appEvent('confirm-modal', {\n        title: 'Plugin Dashboard',\n        text: err.data.message,\n        text2: 'Your changes will be lost when you update the plugin. Use Save As to create custom version.',\n        yesText: 'Overwrite',\n        icon: 'fa-warning',\n        altActionText: 'Save As',\n        onAltAction: () => {\n          this.showSaveAsModal();\n        },\n        onConfirm: () => {\n          this.save(clone, { ...options, overwrite: true });\n        },\n      });\n    }\n  }\n\n  postSave(data: { version: number; url: string }) {\n    this.dashboard.version = data.version;\n\n    // important that these happen before location redirect below\n    this.$rootScope.appEvent('dashboard-saved', this.dashboard);\n    this.$rootScope.appEvent('alert-success', ['Dashboard saved']);\n\n    const newUrl = locationUtil.stripBaseFromUrl(data.url);\n    const currentPath = this.$location.path();\n\n    if (newUrl !== currentPath) {\n      this.$location.url(newUrl).replace();\n    }\n\n    return this.dashboard;\n  }\n\n  save(clone: any, options?: DashboardSaveOptions) {\n    options.folderId = options.folderId >= 0 ? options.folderId : this.dashboard.meta.folderId || clone.folderId;\n\n    return this.backendSrv\n      .saveDashboard(clone, options)\n      .then((data: any) => this.postSave(data))\n      .catch(this.handleSaveDashboardError.bind(this, clone, { folderId: options.folderId }));\n  }\n\n  saveDashboard(\n    clone?: DashboardModel,\n    { makeEditable = false, folderId, overwrite = false, message }: DashboardSaveOptions = {}\n  ) {\n    if (clone) {\n      this.setCurrent(this.create(clone, this.dashboard.meta));\n    }\n\n    if (this.dashboard.meta.provisioned) {\n      return this.showDashboardProvisionedModal();\n    }\n\n    if (!(this.dashboard.meta.canSave || makeEditable)) {\n      return Promise.resolve();\n    }\n\n    if (this.dashboard.title === 'New dashboard') {\n      return this.showSaveAsModal();\n    }\n\n    if (this.dashboard.version > 0) {\n      return this.showSaveModal();\n    }\n\n    return this.save(this.dashboard.getSaveModelClone(), { folderId, overwrite, message });\n  }\n\n  saveJSONDashboard(json: string) {\n    return this.save(JSON.parse(json), {});\n  }\n\n  showDashboardProvisionedModal() {\n    this.$rootScope.appEvent('show-modal', {\n      templateHtml: '<save-provisioned-dashboard-modal dismiss=\"dismiss()\"></save-provisioned-dashboard-modal>',\n    });\n  }\n\n  showSaveAsModal() {\n    this.$rootScope.appEvent('show-modal', {\n      templateHtml: '<save-dashboard-as-modal dismiss=\"dismiss()\"></save-dashboard-as-modal>',\n      modalClass: 'modal--narrow',\n    });\n  }\n\n  showSaveModal() {\n    this.$rootScope.appEvent('show-modal', {\n      templateHtml: '<save-dashboard-modal dismiss=\"dismiss()\"></save-dashboard-modal>',\n      modalClass: 'modal--narrow',\n    });\n  }\n\n  starDashboard(dashboardId: string, isStarred: any) {\n    let promise;\n\n    if (isStarred) {\n      promise = this.backendSrv.delete('/api/user/stars/dashboard/' + dashboardId).then(() => {\n        return false;\n      });\n    } else {\n      promise = this.backendSrv.post('/api/user/stars/dashboard/' + dashboardId).then(() => {\n        return true;\n      });\n    }\n\n    return promise.then((res: boolean) => {\n      if (this.dashboard && this.dashboard.id === dashboardId) {\n        this.dashboard.meta.isStarred = res;\n      }\n      return res;\n    });\n  }\n}\n\ncoreModule.service('dashboardSrv', DashboardSrv);\n\n//\n// Code below is to export the service to react components\n//\n\nlet singletonInstance: DashboardSrv;\n\nexport function setDashboardSrv(instance: DashboardSrv) {\n  singletonInstance = instance;\n}\n\nexport function getDashboardSrv(): DashboardSrv {\n  return singletonInstance;\n}\n","var path = 'public/app/plugins/datasource/testdata/partials/query.editor.html';\nvar html = \"<query-editor-row query-ctrl=ctrl has-text-edit-mode=false>\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword width-7\\\">Scenario</label>\\n\\t\\t\\t<div class=\\\"gf-form-select-wrapper width-15\\\">\\n\\t\\t\\t\\t<select class=gf-form-input ng-model=ctrl.target.scenarioId ng-options=\\\"v.id as v.name for v in ctrl.scenarioList\\\" ng-change=ctrl.scenarioChanged() aria-label=\\\"Scenario Select\\\"></select>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"gf-form gf-form gf-form--grow\\\" ng-if=ctrl.scenario.stringInput>\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword\\\">String Input</label>\\n      <input type=text class=gf-form-input placeholder={{ctrl.scenario.stringInput}} ng-model=ctrl.target.stringInput ng-change=ctrl.refresh() ng-model-onblur>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword\\\">Alias</label>\\n\\t\\t\\t<input type=text class=\\\"gf-form-input max-width-7\\\" placeholder=optional ng-model=ctrl.target.alias ng-change=ctrl.refresh() ng-model-onblur>\\n\\t\\t</div>\\n\\t\\t<div ng-if=ctrl.showLabels class=\\\"gf-form gf-form--grow\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword\\\">\\n\\t\\t\\t\\tLabels\\n\\t\\t\\t\\t<info-popover mode=right-normal>\\n\\t\\t\\t\\t\\tSet labels using a key=value syntax:<br/>\\n\\t\\t\\t\\t\\t{key=\\\"value\\\", key2=\\\"value\\\"}<br/>\\n\\t\\t\\t\\t\\tkey=\\\"value\\\", key2=\\\"value\\\"<br/>\\n\\t\\t\\t\\t\\tkey=value, key2=value<br/>\\n\\t\\t\\t\\t</info-popover>\\n\\t\\t\\t</label>\\n\\t\\t\\t<input type=text class=\\\"gf-form-input gf-form--grow\\\" placeholder=\\\"key=value, key2=value2\\\" ng-model=ctrl.target.labels ng-change=ctrl.refresh() ng-model-onblur>\\n\\t\\t</div>\\n\\t\\t<div ng-if=!ctrl.showLabels class=\\\"gf-form gf-form--grow\\\">\\n\\t\\t\\t<div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=gf-form-inline ng-if=\\\"ctrl.scenario.id === 'manual_entry'\\\">\\n\\t\\t<div class=\\\"gf-form gf-form\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword width-7\\\">New value</label>\\n      <input type=number class=\\\"gf-form-input width-15\\\" placeholder=value ng-model=ctrl.newPointValue>\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword\\\">Time</label>\\n      <input type=string class=\\\"gf-form-input width-12\\\" placeholder=time ng-model=ctrl.newPointTime input-datetime>\\n\\t\\t\\t<button class=\\\"btn btn-secondary gf-form-btn\\\" ng-click=ctrl.addPoint()>Add</button>\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword\\\">All values</label>\\n\\t\\t\\t<gf-form-dropdown css-class=width-12 model=ctrl.selectedPoint get-options=ctrl.getPoints() on-change=ctrl.pointSelected($option)>\\n\\t\\t\\t</gf-form-dropdown>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"gf-form gf-form\\\" ng-if=\\\"ctrl.selectedPoint.value !== null\\\">\\n\\t\\t\\t<button class=\\\"btn btn-danger gf-form-btn\\\" ng-click=ctrl.deletePoint()>Delete</button>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"gf-form gf-form--grow\\\">\\n\\t\\t\\t<div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=gf-form-inline ng-if=\\\"ctrl.scenario.id === 'streaming_client'\\\">\\n\\t\\t<div class=\\\"gf-form gf-form\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword width-7\\\">Type</label>\\n\\t\\t\\t<div class=gf-form-select-wrapper>\\n\\t\\t\\t\\t<select ng-model=ctrl.target.stream.type class=gf-form-input ng-options=\\\"type for type in ['signal','logs', 'fetch']\\\" ng-change=ctrl.streamChanged() />\\n\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword\\\">Speed (ms)</label>\\n\\t\\t\\t<input type=number class=\\\"gf-form-input width-5\\\" placeholder=value ng-model=ctrl.target.stream.speed min=10 step=10 ng-change=ctrl.streamChanged() />\\n\\t\\t</div>\\n\\t\\t<div class=gf-form ng-if=\\\"ctrl.target.stream.type === 'signal'\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword\\\">Spread</label>\\n\\t\\t\\t<input type=number class=\\\"gf-form-input width-5\\\" placeholder=value ng-model=ctrl.target.stream.spread min=0.5 step=0.1 ng-change=ctrl.streamChanged() />\\n\\t\\t</div>\\n\\t\\t<div class=gf-form ng-if=\\\"ctrl.target.stream.type === 'signal'\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword\\\">Noise</label>\\n\\t\\t\\t<input type=number class=\\\"gf-form-input width-5\\\" placeholder=value ng-model=ctrl.target.stream.noise min=0 step=0.1 ng-change=ctrl.streamChanged() />\\n\\t\\t</div>\\n\\t\\t<div class=gf-form ng-if=\\\"ctrl.target.stream.type === 'signal'\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword\\\">Bands</label>\\n\\t\\t\\t<input type=number class=\\\"gf-form-input width-5\\\" placeholder=bands ng-model=ctrl.target.stream.bands min=0 step=1 ng-change=ctrl.streamChanged() />\\n\\t\\t</div>\\n\\t\\t<div class=\\\"gf-form gf-form--grow\\\" ng-if=\\\"ctrl.target.stream.type === 'fetch'\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword\\\">URL</label>\\n\\t\\t\\t<input type=string class=\\\"gf-form-input gf-form-label--grow\\\" placeholder=\\\"Fetch URL\\\" ng-model=ctrl.target.stream.url ng-change=ctrl.streamChanged() ng-model-onblur/>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"gf-form gf-form--grow\\\" ng-if=\\\"ctrl.target.stream.type !== 'fetch'\\\">\\n\\t\\t\\t<div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=gf-form-inline ng-if=\\\"ctrl.scenario.id === 'logs'\\\">\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword\\\">Lines</label>\\n\\t\\t\\t<input type=number class=\\\"gf-form-input width-5\\\" placeholder=10 ng-model=ctrl.target.lines ng-change=ctrl.refresh() ng-model-onblur/>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<gf-form-switch class=gf-form label=Level label-class=\\\"query-keyword width-5\\\" checked=ctrl.target.levelColumn switch-class=max-width-6 on-change=ctrl.refresh()></gf-form-switch>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<!-- Predictable Pulse Scenario Options Form -->\\n\\t<div class=gf-form-inline ng-if=\\\"ctrl.scenario.id === 'predictable_pulse'\\\">\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword width-7\\\">\\n\\t\\t\\t\\tStep\\n\\t\\t\\t\\t<info-popover mode=right-normal>The number of seconds between datapoints.</info-popover>\\n\\t\\t\\t</label>\\n\\t\\t\\t\\t<input type=number class=\\\"gf-form-input width-5\\\" placeholder=60 ng-model=ctrl.target.pulseWave.timeStep ng-change=ctrl.refresh() ng-model-onblur/>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword width-7\\\">\\n\\t\\t\\t\\tOn Count\\n\\t\\t\\t\\t<info-popover mode=right-normal>The number of values within a cycle, at the start of the cycle, that should have the onValue.</info-popover>\\n\\t\\t\\t</label>\\n\\t\\t\\t<input type=number class=\\\"gf-form-input width-3\\\" placeholder=3 ng-model=ctrl.target.pulseWave.onCount ng-change=ctrl.refresh() ng-model-onblur/>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword width-7\\\">\\n\\t\\t\\t\\tOff Count\\n\\t\\t\\t\\t<info-popover mode=right-normal>The number of offValues within the cycle.</info-popover>\\n\\t\\t\\t</label>\\n\\t\\t\\t<input type=number class=\\\"gf-form-input width-3\\\" placeholder=6 ng-model=ctrl.target.pulseWave.offCount ng-change=ctrl.refresh() ng-model-onblur/>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword width-7\\\">\\n\\t\\t\\t\\tOn Value\\n\\t\\t\\t\\t<info-popover mode=right-normal>The value for \\\"on values\\\", may be a int, float, or null.</info-popover>\\n\\t\\t\\t</label>\\n\\t\\t\\t<input type=string class=\\\"gf-form-input width-5\\\" placeholder=1 ng-model=ctrl.target.pulseWave.onValue ng-change=ctrl.refresh() ng-model-onblur/>\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword width-7\\\">\\n\\t\\t\\t\\tOff Value\\n\\t\\t\\t\\t<info-popover mode=right-normal>The value for \\\"off values\\\", may be a int, float, or null.</info-popover>\\n\\t\\t\\t</label>\\n\\t\\t\\t<input type=string class=\\\"gf-form-input width-5\\\" placeholder=1 ng-model=ctrl.target.pulseWave.offValue ng-change=ctrl.refresh() ng-model-onblur/>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<!-- Predictable CSV Wave Scenario Options Form -->\\n\\t<div class=gf-form-inline ng-if=\\\"ctrl.scenario.id === 'predictable_csv_wave'\\\">\\n\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t<label class=\\\"gf-form-label query-keyword width-7\\\">\\n\\t\\t\\t\\t\\tStep\\n\\t\\t\\t\\t\\t<info-popover mode=right-normal>The number of seconds between datapoints.</info-popover>\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t<input type=number class=\\\"gf-form-input width-5\\\" placeholder=60 ng-model=ctrl.target.csvWave.timeStep ng-change=ctrl.refresh() ng-model-onblur/>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"gf-form gf-form--grow\\\">\\n\\t\\t\\t\\t\\t<label class=\\\"gf-form-label query-keyword width-10\\\">\\n\\t\\t\\t\\t\\t\\t\\tCSV Values\\n\\t\\t\\t\\t\\t\\t\\t<info-popover mode=right-normal>Comma separated values. Each value may be an int, float, or null and must not be empty. Whitespace and trailing commas are removed.</info-popover>\\n\\t\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t<input type=string class=\\\"gf-form-input gf-form-label--grow\\\" placeholder=1,2,3,2 ng-model=ctrl.target.csvWave.valuesCSV ng-change=ctrl.refresh() ng-model-onblur/>\\n\\t\\t\\t\\t</div>\\n\\t\\t</div>\\n</query-editor-row>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/plugins/panel/graph/time_regions_form.html';\nvar html = \"<div class=gf-form-group>\\n  <div class=gf-form-inline ng-repeat=\\\"timeRegion in ctrl.panel.timeRegions\\\">\\n    <div class=gf-form>\\n      <label class=gf-form-label>T{{$index+1}}</label>\\n    </div>\\n\\n    <div class=gf-form>\\n      <label class=gf-form-label>From</label>\\n      <div class=gf-form-select-wrapper>\\n        <select class=\\\"gf-form-input width-6\\\" ng-model=timeRegion.fromDayOfWeek ng-options=\\\"f.d as f.value for f in [{d: undefined, value: 'Any'}, {d:1, value: 'Mon'}, {d:2, value: 'Tue'}, {d:3, value: 'Wed'}, {d:4, value: 'Thu'}, {d:5, value: 'Fri'}, {d:6, value: 'Sat'}, {d:7, value: 'Sun'}]\\\" ng-change=ctrl.render()></select>\\n      </div>\\n      <input type=text ng-maxlength=5 ng-model=timeRegion.from class=\\\"gf-form-input width-5\\\" ng-change=ctrl.render() placeholder=hh:mm>\\n      <label class=gf-form-label>To</label>\\n      <div class=gf-form-select-wrapper>\\n        <select class=\\\"gf-form-input width-6\\\" ng-model=timeRegion.toDayOfWeek ng-options=\\\"f.d as f.value for f in [{d: undefined, value: 'Any'}, {d:1, value: 'Mon'}, {d:2, value: 'Tue'}, {d:3, value: 'Wed'}, {d:4, value: 'Thu'}, {d:5, value: 'Fri'}, {d:6, value: 'Sat'}, {d:7, value: 'Sun'}]\\\" ng-change=ctrl.render()></select>\\n      </div>\\n      <input type=text ng-maxlength=5 ng-model=timeRegion.to class=\\\"gf-form-input width-5\\\" ng-change=ctrl.render() placeholder=hh:mm>\\n    </div>\\n\\n    <div class=gf-form>\\n      <label class=gf-form-label>Color</label>\\n      <div class=gf-form-select-wrapper>\\n        <select class=gf-form-input ng-model=timeRegion.colorMode ng-options=\\\"f.key as f.value for f in ctrl.colorModes\\\" ng-change=ctrl.render()>\\n        </select>\\n      </div>\\n    </div>\\n\\n    <gf-form-switch class=gf-form label=Fill checked=timeRegion.fill on-change=ctrl.render()></gf-form-switch>\\n\\n    <div class=gf-form ng-if=\\\"timeRegion.fill && timeRegion.colorMode === 'custom'\\\">\\n      <label class=gf-form-label>Fill color</label>\\n      <span class=gf-form-label>\\n        <color-picker color=timeRegion.fillColor onchange=ctrl.onFillColorChange($index)></color-picker>\\n      </span>\\n    </div>\\n\\n    <gf-form-switch class=gf-form label=Line checked=timeRegion.line on-change=ctrl.render()></gf-form-switch>\\n\\n    <div class=gf-form ng-if=\\\"timeRegion.line && timeRegion.colorMode === 'custom'\\\">\\n      <label class=gf-form-label>Line color</label>\\n      <span class=gf-form-label>\\n        <color-picker color=timeRegion.lineColor onchange=ctrl.onLineColorChange($index)></color-picker>\\n      </span>\\n    </div>\\n\\n    <div class=gf-form>\\n      <label class=gf-form-label>\\n        <a class=pointer ng-click=ctrl.removeTimeRegion($index)>\\n          <i class=\\\"fa fa-trash\\\"></i>\\n        </a>\\n      </label>\\n    </div>\\n  </div>\\n\\n  <div class=gf-form-button-row>\\n    <button class=\\\"btn btn-inverse\\\" ng-click=ctrl.addTimeRegion()>\\n      <i class=\\\"fa fa-plus\\\"></i>&nbsp;Add time region<tip>All configured time regions refers to UTC time</tip>\\n    </button>\\n  </div>\\n</div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { Vector } from '../types/vector';\nimport { vectorToArray } from './vectorToArray';\n\ninterface AppendedVectorInfo<T> {\n  start: number;\n  end: number;\n  values: Vector<T>;\n}\n\n/**\n * This may be more trouble than it is worth.  This trades some computation time for\n * RAM -- rather than allocate a new array the size of all previous arrays, this just\n * points the correct index to their original array values\n */\nexport class AppendedVectors<T = any> implements Vector<T> {\n  length = 0;\n  source: Array<AppendedVectorInfo<T>> = new Array<AppendedVectorInfo<T>>();\n\n  constructor(startAt = 0) {\n    this.length = startAt;\n  }\n\n  /**\n   * Make the vector look like it is this long\n   */\n  setLength(length: number) {\n    if (length > this.length) {\n      // make the vector longer (filling with undefined)\n      this.length = length;\n    } else if (length < this.length) {\n      // make the array shorter\n      const sources: Array<AppendedVectorInfo<T>> = new Array<AppendedVectorInfo<T>>();\n      for (const src of this.source) {\n        sources.push(src);\n        if (src.end > length) {\n          src.end = length;\n          break;\n        }\n      }\n      this.source = sources;\n      this.length = length;\n    }\n  }\n\n  append(v: Vector<T>): AppendedVectorInfo<T> {\n    const info = {\n      start: this.length,\n      end: this.length + v.length,\n      values: v,\n    };\n    this.length = info.end;\n    this.source.push(info);\n    return info;\n  }\n\n  get(index: number): T {\n    for (let i = 0; i < this.source.length; i++) {\n      const src = this.source[i];\n      if (index >= src.start && index < src.end) {\n        return src.values.get(index - src.start);\n      }\n    }\n    return (undefined as unknown) as T;\n  }\n\n  toArray(): T[] {\n    return vectorToArray(this);\n  }\n\n  toJSON(): T[] {\n    return vectorToArray(this);\n  }\n}\n","import { Vector } from '../types/vector';\n\nexport class ConstantVector<T = any> implements Vector<T> {\n  constructor(private value: T, private len: number) {}\n\n  get length() {\n    return this.len;\n  }\n\n  get(index: number): T {\n    return this.value;\n  }\n\n  toArray(): T[] {\n    const arr = new Array<T>(this.length);\n    return arr.fill(this.value);\n  }\n\n  toJSON(): T[] {\n    return this.toArray();\n  }\n}\n","export * from './AppendedVectors';\nexport * from './ArrayVector';\nexport * from './CircularVector';\nexport * from './ConstantVector';\nexport * from './ScaledVector';\nexport * from './SortedVector';\n","import { Vector } from '../types/vector';\nimport { vectorToArray } from './vectorToArray';\n\nexport class ScaledVector implements Vector<number> {\n  constructor(private source: Vector<number>, private scale: number) {}\n\n  get length(): number {\n    return this.source.length;\n  }\n\n  get(index: number): number {\n    return this.source.get(index) * this.scale;\n  }\n\n  toArray(): number[] {\n    return vectorToArray(this);\n  }\n\n  toJSON(): number[] {\n    return vectorToArray(this);\n  }\n}\n","import { ComponentClass, ComponentType } from 'react';\nimport { LoadingState, DataFrame, TimeRange, TimeZone, ScopedVars, AbsoluteTimeRange } from '@grafana/data';\nimport { DataQueryRequest, DataQueryError } from './datasource';\nimport { PluginMeta, GrafanaPlugin } from './plugin';\n\nexport type InterpolateFunction = (value: string, scopedVars?: ScopedVars, format?: string | Function) => string;\n\nexport interface PanelPluginMeta extends PluginMeta {\n  skipDataQuery?: boolean;\n  hideFromList?: boolean;\n  sort: number;\n}\n\nexport interface PanelData {\n  state: LoadingState;\n  series: DataFrame[];\n  request?: DataQueryRequest;\n  error?: DataQueryError;\n  // Contains the range from the request or a shifted time range if a request uses relative time\n  timeRange: TimeRange;\n}\n\nexport interface PanelProps<T = any> {\n  id: number; // ID within the current dashboard\n  data: PanelData;\n  timeRange: TimeRange;\n  timeZone: TimeZone;\n  options: T;\n  onOptionsChange: (options: T) => void;\n  renderCounter: number;\n  transparent: boolean;\n  width: number;\n  height: number;\n  replaceVariables: InterpolateFunction;\n  onChangeTimeRange: (timeRange: AbsoluteTimeRange) => void;\n}\n\nexport interface PanelEditorProps<T = any> {\n  options: T;\n  onOptionsChange: (\n    options: T,\n    // callback can be used to run something right after update.\n    callback?: () => void\n  ) => void;\n  data: PanelData;\n}\n\nexport interface PanelModel<TOptions = any> {\n  id: number;\n  options: TOptions;\n  pluginVersion?: string;\n}\n\n/**\n * Called when a panel is first loaded with current panel model\n */\nexport type PanelMigrationHandler<TOptions = any> = (panel: PanelModel<TOptions>) => Partial<TOptions>;\n\n/**\n * Called before a panel is initalized\n */\nexport type PanelTypeChangedHandler<TOptions = any> = (\n  options: Partial<TOptions>,\n  prevPluginId: string,\n  prevOptions: any\n) => Partial<TOptions>;\n\nexport class PanelPlugin<TOptions = any> extends GrafanaPlugin<PanelPluginMeta> {\n  panel: ComponentType<PanelProps<TOptions>>;\n  editor?: ComponentClass<PanelEditorProps<TOptions>>;\n  defaults?: TOptions;\n  onPanelMigration?: PanelMigrationHandler<TOptions>;\n  onPanelTypeChanged?: PanelTypeChangedHandler<TOptions>;\n\n  /**\n   * Legacy angular ctrl.  If this exists it will be used instead of the panel\n   */\n  angularPanelCtrl?: any;\n\n  constructor(panel: ComponentType<PanelProps<TOptions>>) {\n    super();\n    this.panel = panel;\n  }\n\n  setEditor(editor: ComponentClass<PanelEditorProps<TOptions>>) {\n    this.editor = editor;\n    return this;\n  }\n\n  setDefaults(defaults: TOptions) {\n    this.defaults = defaults;\n    return this;\n  }\n\n  /**\n   * This function is called before the panel first loads if\n   * the current version is different than the version that was saved.\n   *\n   * This is a good place to support any changes to the options model\n   */\n  setMigrationHandler(handler: PanelMigrationHandler) {\n    this.onPanelMigration = handler;\n    return this;\n  }\n\n  /**\n   * This function is called when the visualization was changed.  This\n   * passes in the options that were used in the previous visualization\n   */\n  setPanelChangeHandler(handler: PanelTypeChangedHandler) {\n    this.onPanelTypeChanged = handler;\n    return this;\n  }\n}\n\nexport interface PanelSize {\n  width: number;\n  height: number;\n}\n\nexport interface PanelMenuItem {\n  type?: 'submenu' | 'divider';\n  text?: string;\n  iconClassName?: string;\n  onClick?: () => void;\n  shortcut?: string;\n  subMenu?: PanelMenuItem[];\n}\n\nexport interface AngularPanelMenuItem {\n  click: Function;\n  icon: string;\n  href: string;\n  divider: boolean;\n  text: string;\n  shortcut: string;\n  submenu: any[];\n}\n\nexport enum VizOrientation {\n  Auto = 'auto',\n  Vertical = 'vertical',\n  Horizontal = 'horizontal',\n}\n","var path = 'public/app/partials/signup_step2.html';\nvar html = \"<page-header model=navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\">\\n  <div class=signup>\\n    <h3 class=p-b-1>You're almost there.</h3>\\n    <div class=p-b-1>\\n      We just need a couple of more bits of<br> information to finish creating your account.\\n    </div>\\n    <form name=signUpForm class=\\\"login-form gf-form-group\\\">\\n      <div class=gf-form ng-if=verifyEmailEnabled>\\n        <span class=\\\"gf-form-label width-9\\\">\\n          Email code<tip>Email verification code (sent to your email)</tip>\\n        </span>\\n        <input type=text class=\\\"gf-form-input max-width-14\\\" ng-model=formModel.code required>\\n      </div>\\n\\n      <div class=gf-form ng-if=!autoAssignOrg>\\n        <span class=\\\"gf-form-label width-9\\\">Org. name</span>\\n        <input type=text name=orgName class=\\\"gf-form-input max-width-14\\\" ng-model=formModel.orgName placeholder=\\\"Name your organization\\\">\\n      </div>\\n\\n      <div class=gf-form>\\n        <span class=\\\"gf-form-label width-9\\\">Your name</span>\\n        <input type=text name=name class=\\\"gf-form-input max-width-14\\\" ng-model=formModel.name placeholder=(optional)>\\n      </div>\\n      <div class=gf-form>\\n        <span class=\\\"gf-form-label width-9\\\">Email</span>\\n        <input type=text class=\\\"gf-form-input max-width-14\\\" required ng-model=formModel.username placeholder=Email autocomplete=off>\\n      </div>\\n      <div class=gf-form>\\n        <span class=\\\"gf-form-label width-9\\\">Password</span>\\n        <input type=password class=\\\"gf-form-input max-width-14\\\" required ng-model=formModel.password id=inputPassword placeholder=password autocomplete=off>\\n      </div>\\n\\n      <div class=\\\"gf-form-button-row p-t-3\\\">\\n        <button type=submit class=\\\"btn btn-primary\\\" ng-click=ctrl.submit(); ng-disabled=!signUpForm.$valid>\\n          Sign Up\\n        </button>\\n        <a href=login class=\\\"btn btn-inverse\\\">\\n            Back\\n        </a>\\n      </div>\\n    </form>\\n  </div>\\n</div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { ComponentClass } from 'react';\nimport { KeyValue } from '@grafana/data';\n\nexport enum PluginState {\n  alpha = 'alpha', // Only included it `enable_alpha` is true\n  beta = 'beta', // Will show a warning banner\n}\n\nexport enum PluginType {\n  panel = 'panel',\n  datasource = 'datasource',\n  app = 'app',\n  renderer = 'renderer',\n}\n\nexport interface PluginMeta<T extends {} = KeyValue> {\n  id: string;\n  name: string;\n  type: PluginType;\n  info: PluginMetaInfo;\n  includes?: PluginInclude[];\n  state?: PluginState;\n\n  // System.load & relative URLS\n  module: string;\n  baseUrl: string;\n\n  // Define plugin requirements\n  dependencies?: PluginDependencies;\n\n  // Filled in by the backend\n  jsonData?: T;\n  secureJsonData?: KeyValue;\n  enabled?: boolean;\n  defaultNavUrl?: string;\n  hasUpdate?: boolean;\n  latestVersion?: string;\n  pinned?: boolean;\n}\n\ninterface PluginDependencyInfo {\n  id: string;\n  name: string;\n  version: string;\n  type: PluginType;\n}\n\nexport interface PluginDependencies {\n  grafanaVersion: string;\n  plugins: PluginDependencyInfo[];\n}\n\nexport enum PluginIncludeType {\n  dashboard = 'dashboard',\n  page = 'page',\n\n  // Only valid for apps\n  panel = 'panel',\n  datasource = 'datasource',\n}\n\nexport interface PluginInclude {\n  type: PluginIncludeType;\n  name: string;\n  path?: string;\n  icon?: string;\n\n  role?: string; // \"Viewer\", Admin, editor???\n  addToNav?: boolean; // Show in the sidebar... only if type=page?\n\n  // Angular app pages\n  component?: string;\n}\n\ninterface PluginMetaInfoLink {\n  name: string;\n  url: string;\n}\n\nexport interface PluginBuildInfo {\n  time?: number;\n  repo?: string;\n  branch?: string;\n  hash?: string;\n  number?: number;\n  pr?: number;\n}\n\nexport interface ScreenshotInfo {\n  name: string;\n  path: string;\n}\n\nexport interface PluginMetaInfo {\n  author: {\n    name: string;\n    url?: string;\n  };\n  description: string;\n  links: PluginMetaInfoLink[];\n  logos: {\n    large: string;\n    small: string;\n  };\n  build?: PluginBuildInfo;\n  screenshots: ScreenshotInfo[];\n  updated: string;\n  version: string;\n}\n\nexport interface PluginConfigPageProps<T extends GrafanaPlugin> {\n  plugin: T;\n  query: KeyValue; // The URL query parameters\n}\n\nexport interface PluginConfigPage<T extends GrafanaPlugin> {\n  title: string; // Display\n  icon?: string;\n  id: string; // Unique, in URL\n\n  body: ComponentClass<PluginConfigPageProps<T>>;\n}\n\nexport class GrafanaPlugin<T extends PluginMeta = PluginMeta> {\n  // Meta is filled in by the plugin loading system\n  meta?: T;\n\n  // This is set if the plugin system had errors loading the plugin\n  loadError?: boolean;\n\n  // Config control (app/datasource)\n  angularConfigCtrl?: any;\n\n  // Show configuration tabs on the plugin page\n  configPages?: Array<PluginConfigPage<GrafanaPlugin>>;\n\n  // Tabs on the plugin page\n  addConfigPage(tab: PluginConfigPage<GrafanaPlugin>) {\n    if (!this.configPages) {\n      this.configPages = [];\n    }\n    this.configPages.push(tab);\n    return this;\n  }\n}\n","import memoizeOne from 'memoize-one';\n// import { KeyValue } from '@grafana/data';\n\n/**\n *  Creates memoized version of styles creator\n * @param stylesCreator function accepting dependencies based on which styles are created\n */\nexport function stylesFactory<ResultFn extends (this: any, ...newArgs: any[]) => ReturnType<ResultFn>>(\n  stylesCreator: ResultFn\n) {\n  return memoizeOne(stylesCreator);\n}\n","var path = 'public/app/features/dashboard/components/ExportDataModal/template.html';\nvar html = \"<div class=modal-body>\\n  <div class=modal-header>\\n    <h2 class=modal-header-title>\\n      Export CSV\\n    </h2>\\n\\n    <a class=modal-header-close ng-click=ctrl.dismiss();>\\n      <i class=\\\"fa fa-remove\\\"></i>\\n    </a>\\n  </div>\\n\\n  <div class=modal-content>\\n    <div class=p-t-2>\\n      <div class=gf-form ng-hide=\\\"ctrl.panel === 'table'\\\">\\n        <label class=\\\"gf-form-label width-10\\\">Mode</label>\\n        <div class=gf-form-select-wrapper>\\n          <select class=gf-form-input ng-model=ctrl.asRows ng-options=\\\"f.value as f.text for f in [{text: 'Series as rows', value: true}, {text: 'Series as columns', value: false}]\\\">\\n          </select>\\n        </div>\\n      </div>\\n      <div class=gf-form ng-hide=\\\"ctrl.panel === 'table'\\\">\\n        <label class=\\\"gf-form-label width-10\\\">Date Time Format</label>\\n        <input type=text class=gf-form-input ng-model=ctrl.dateTimeFormat>\\n      </div>\\n      <gf-form-switch class=gf-form label=\\\"Excel CSV Dialect\\\" label-class=width-10 switch-class=max-width-6 checked=ctrl.excel>\\n      </gf-form-switch>\\n    </div>\\n\\n    <div class=\\\"gf-form-button-row text-center\\\">\\n      <a class=\\\"btn btn-primary\\\" ng-click=ctrl.export();>Export</a>\\n      <a class=btn-text ng-click=ctrl.dismiss();>Cancel</a>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import React from 'react';\nimport tags from 'app/core/utils/tags';\n\nexport interface Props {\n  label: string;\n  removeIcon: boolean;\n  count: number;\n  onClick?: any;\n}\n\nexport class TagBadge extends React.Component<Props, any> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  render() {\n    const { label, removeIcon, count } = this.props;\n    const { color, borderColor } = tags.getTagColorsFromName(label);\n    const tagStyle = {\n      backgroundColor: color,\n      borderColor: borderColor,\n    };\n    const countLabel = count !== 0 && <span className=\"tag-count-label\">{`(${count})`}</span>;\n\n    return (\n      <span className={`label label-tag`} style={tagStyle}>\n        {removeIcon && <i className=\"fa fa-remove\" />}\n        {label} {countLabel}\n      </span>\n    );\n  }\n}\n","import React from 'react';\nimport * as PopperJS from 'popper.js';\nimport { PopoverContent } from './Tooltip';\n\n// This API allows popovers to update Popper's position when e.g. popover content changes\n// updatePopperPosition is delivered to content by react-popper\n\nexport interface UsingPopperProps {\n  show?: boolean;\n  placement?: PopperJS.Placement;\n  content: PopoverContent;\n  children: JSX.Element;\n}\n\ntype PopperControllerRenderProp = (\n  showPopper: () => void,\n  hidePopper: () => void,\n  popperProps: {\n    show: boolean;\n    placement: PopperJS.Placement;\n    content: PopoverContent;\n  }\n) => JSX.Element;\n\ninterface Props {\n  placement?: PopperJS.Placement;\n  content: PopoverContent;\n  className?: string;\n  children: PopperControllerRenderProp;\n  hideAfter?: number;\n}\n\ninterface State {\n  placement: PopperJS.Placement;\n  show: boolean;\n}\n\nclass PopoverController extends React.Component<Props, State> {\n  private hideTimeout: any;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      placement: this.props.placement || 'auto',\n      show: false,\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.placement && nextProps.placement !== this.state.placement) {\n      this.setState((prevState: State) => {\n        return {\n          ...prevState,\n          placement: nextProps.placement || 'auto',\n        };\n      });\n    }\n  }\n\n  showPopper = () => {\n    if (this.hideTimeout) {\n      clearTimeout(this.hideTimeout);\n    }\n\n    this.setState(prevState => ({\n      ...prevState,\n      show: true,\n    }));\n  };\n\n  hidePopper = () => {\n    if (this.props.hideAfter !== 0) {\n      this.hideTimeout = setTimeout(() => {\n        this.setState(prevState => ({\n          ...prevState,\n          show: false,\n        }));\n      }, this.props.hideAfter);\n      return;\n    }\n    this.setState(prevState => ({\n      ...prevState,\n      show: false,\n    }));\n  };\n\n  render() {\n    const { children, content } = this.props;\n    const { show, placement } = this.state;\n\n    return children(this.showPopper, this.hidePopper, {\n      show,\n      placement,\n      content,\n    });\n  }\n}\n\nexport { PopoverController };\n","import { ComponentClass } from 'react';\nimport { NavModel, KeyValue } from '@grafana/data';\nimport { PluginMeta, PluginIncludeType, GrafanaPlugin } from './plugin';\n\nexport interface AppRootProps<T = KeyValue> {\n  meta: AppPluginMeta<T>;\n\n  path: string; // The URL path to this page\n  query: KeyValue; // The URL query parameters\n\n  /**\n   * Pass the nav model to the container... is there a better way?\n   */\n  onNavChanged: (nav: NavModel) => void;\n}\n\nexport interface AppPluginMeta<T = KeyValue> extends PluginMeta<T> {\n  // TODO anything specific to apps?\n}\n\nexport class AppPlugin<T = KeyValue> extends GrafanaPlugin<AppPluginMeta<T>> {\n  // Content under: /a/${plugin-id}/*\n  root?: ComponentClass<AppRootProps<T>>;\n  rootNav?: NavModel; // Initial navigation model\n\n  // Old style pages\n  angularPages?: { [component: string]: any };\n\n  /**\n   * Called after the module has loaded, and before the app is used.\n   * This function may be called multiple times on the same instance.\n   * The first time, `this.meta` will be undefined\n   */\n  init(meta: AppPluginMeta) {}\n\n  /**\n   * Set the component displayed under:\n   *   /a/${plugin-id}/*\n   */\n  setRootPage(root: ComponentClass<AppRootProps<T>>, rootNav?: NavModel) {\n    this.root = root;\n    this.rootNav = rootNav;\n    return this;\n  }\n\n  setComponentsFromLegacyExports(pluginExports: any) {\n    if (pluginExports.ConfigCtrl) {\n      this.angularConfigCtrl = pluginExports.ConfigCtrl;\n    }\n\n    if (this.meta && this.meta.includes) {\n      for (const include of this.meta.includes) {\n        if (include.type === PluginIncludeType.page && include.component) {\n          const exp = pluginExports[include.component];\n\n          if (!exp) {\n            console.warn('App Page uses unknown component: ', include.component, this.meta);\n            continue;\n          }\n\n          if (!this.angularPages) {\n            this.angularPages = {};\n          }\n\n          this.angularPages[include.component] = exp;\n        }\n      }\n    }\n  }\n}\n","var path = 'public/app/features/admin/partials/new_user.html';\nvar html = \"<page-header model=navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\">\\n\\t<div class=page-sub-heading>\\n\\t\\t<h3 class=page-sub-heading>Add new user</h3>\\n\\t</div>\\n\\n\\t<form name=userForm class=gf-form-group>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=\\\"gf-form-label width-10\\\">Name</span>\\n\\t\\t\\t<input type=text required ng-model=user.name class=\\\"gf-form-input max-width-20\\\">\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=\\\"gf-form-label width-10\\\">Email</span>\\n\\t\\t\\t<input type=email ng-model=user.email class=\\\"gf-form-input max-width-20\\\">\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=\\\"gf-form-label width-10\\\">Username</span>\\n\\t\\t\\t<input type=text ng-model=user.login class=\\\"gf-form-input max-width-20\\\">\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<span class=\\\"gf-form-label width-10\\\">Password</span>\\n\\t\\t\\t<input type=password required ng-model=user.password class=\\\"gf-form-input max-width-20\\\">\\n\\t\\t</div>\\n\\n\\t\\t<div class=gf-form-button-row>\\n\\t\\t\\t<button type=submit class=\\\"btn btn-primary\\\" ng-click=create()>Create</button>\\n\\t\\t</div>\\n\\t</form>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import _ from 'lodash';\n\nexport default function sortByKeys(input: any): any {\n  if (_.isArray(input)) {\n    return input.map(sortByKeys);\n  }\n\n  if (_.isPlainObject(input)) {\n    const sortedObject: any = {};\n    for (const key of _.keys(input).sort()) {\n      sortedObject[key] = sortByKeys(input[key]);\n    }\n    return sortedObject;\n  }\n\n  return input;\n}\n","// Libraries\nimport _ from 'lodash';\n\n// Utils\nimport getFactors from 'app/core/utils/factors';\nimport { appendQueryToUrl } from 'app/core/utils/url';\nimport kbn from 'app/core/utils/kbn';\n\n// Types\nimport { PanelModel } from './PanelModel';\nimport { DashboardModel } from './DashboardModel';\nimport { DataLink } from '@grafana/data';\n\n// Constants\nimport {\n  GRID_COLUMN_COUNT,\n  GRID_CELL_HEIGHT,\n  GRID_CELL_VMARGIN,\n  DEFAULT_ROW_HEIGHT,\n  MIN_PANEL_HEIGHT,\n  DEFAULT_PANEL_SPAN,\n} from 'app/core/constants';\nimport { DataLinkBuiltInVars } from '@grafana/ui';\n\nexport class DashboardMigrator {\n  dashboard: DashboardModel;\n\n  constructor(dashboardModel: DashboardModel) {\n    this.dashboard = dashboardModel;\n  }\n\n  updateSchema(old: any) {\n    let i, j, k, n;\n    const oldVersion = this.dashboard.schemaVersion;\n    const panelUpgrades = [];\n    this.dashboard.schemaVersion = 20;\n\n    if (oldVersion === this.dashboard.schemaVersion) {\n      return;\n    }\n\n    // version 2 schema changes\n    if (oldVersion < 2) {\n      if (old.services) {\n        if (old.services.filter) {\n          this.dashboard.time = old.services.filter.time;\n          this.dashboard.templating.list = old.services.filter.list || [];\n        }\n      }\n\n      panelUpgrades.push((panel: any) => {\n        // rename panel type\n        if (panel.type === 'graphite') {\n          panel.type = 'graph';\n        }\n        if (panel.type !== 'graph') {\n          return;\n        }\n\n        if (_.isBoolean(panel.legend)) {\n          panel.legend = { show: panel.legend };\n        }\n\n        if (panel.grid) {\n          if (panel.grid.min) {\n            panel.grid.leftMin = panel.grid.min;\n            delete panel.grid.min;\n          }\n\n          if (panel.grid.max) {\n            panel.grid.leftMax = panel.grid.max;\n            delete panel.grid.max;\n          }\n        }\n\n        if (panel.y_format) {\n          if (!panel.y_formats) {\n            panel.y_formats = [];\n          }\n          panel.y_formats[0] = panel.y_format;\n          delete panel.y_format;\n        }\n\n        if (panel.y2_format) {\n          if (!panel.y_formats) {\n            panel.y_formats = [];\n          }\n          panel.y_formats[1] = panel.y2_format;\n          delete panel.y2_format;\n        }\n      });\n    }\n\n    // schema version 3 changes\n    if (oldVersion < 3) {\n      // ensure panel ids\n      let maxId = this.dashboard.getNextPanelId();\n      panelUpgrades.push((panel: any) => {\n        if (!panel.id) {\n          panel.id = maxId;\n          maxId += 1;\n        }\n      });\n    }\n\n    // schema version 4 changes\n    if (oldVersion < 4) {\n      // move aliasYAxis changes\n      panelUpgrades.push((panel: any) => {\n        if (panel.type !== 'graph') {\n          return;\n        }\n        _.each(panel.aliasYAxis, (value, key) => {\n          panel.seriesOverrides = [{ alias: key, yaxis: value }];\n        });\n        delete panel.aliasYAxis;\n      });\n    }\n\n    if (oldVersion < 6) {\n      // move pulldowns to new schema\n      const annotations: any = _.find(old.pulldowns, { type: 'annotations' });\n\n      if (annotations) {\n        this.dashboard.annotations = {\n          list: annotations.annotations || [],\n        };\n      }\n\n      // update template variables\n      for (i = 0; i < this.dashboard.templating.list.length; i++) {\n        const variable = this.dashboard.templating.list[i];\n        if (variable.datasource === void 0) {\n          variable.datasource = null;\n        }\n        if (variable.type === 'filter') {\n          variable.type = 'query';\n        }\n        if (variable.type === void 0) {\n          variable.type = 'query';\n        }\n        if (variable.allFormat === void 0) {\n          variable.allFormat = 'glob';\n        }\n      }\n    }\n\n    if (oldVersion < 7) {\n      if (old.nav && old.nav.length) {\n        this.dashboard.timepicker = old.nav[0];\n      }\n\n      // ensure query refIds\n      panelUpgrades.push((panel: any) => {\n        _.each(panel.targets, target => {\n          if (!target.refId) {\n            target.refId = panel.getNextQueryLetter && panel.getNextQueryLetter();\n          }\n        });\n      });\n    }\n\n    if (oldVersion < 8) {\n      panelUpgrades.push((panel: any) => {\n        _.each(panel.targets, target => {\n          // update old influxdb query schema\n          if (target.fields && target.tags && target.groupBy) {\n            if (target.rawQuery) {\n              delete target.fields;\n              delete target.fill;\n            } else {\n              target.select = _.map(target.fields, field => {\n                const parts = [];\n                parts.push({ type: 'field', params: [field.name] });\n                parts.push({ type: field.func, params: [] });\n                if (field.mathExpr) {\n                  parts.push({ type: 'math', params: [field.mathExpr] });\n                }\n                if (field.asExpr) {\n                  parts.push({ type: 'alias', params: [field.asExpr] });\n                }\n                return parts;\n              });\n              delete target.fields;\n              _.each(target.groupBy, part => {\n                if (part.type === 'time' && part.interval) {\n                  part.params = [part.interval];\n                  delete part.interval;\n                }\n                if (part.type === 'tag' && part.key) {\n                  part.params = [part.key];\n                  delete part.key;\n                }\n              });\n\n              if (target.fill) {\n                target.groupBy.push({ type: 'fill', params: [target.fill] });\n                delete target.fill;\n              }\n            }\n          }\n        });\n      });\n    }\n\n    // schema version 9 changes\n    if (oldVersion < 9) {\n      // move aliasYAxis changes\n      panelUpgrades.push((panel: any) => {\n        if (panel.type !== 'singlestat' && panel.thresholds !== '') {\n          return;\n        }\n\n        if (panel.thresholds) {\n          const k = panel.thresholds.split(',');\n\n          if (k.length >= 3) {\n            k.shift();\n            panel.thresholds = k.join(',');\n          }\n        }\n      });\n    }\n\n    // schema version 10 changes\n    if (oldVersion < 10) {\n      // move aliasYAxis changes\n      panelUpgrades.push((panel: any) => {\n        if (panel.type !== 'table') {\n          return;\n        }\n\n        _.each(panel.styles, style => {\n          if (style.thresholds && style.thresholds.length >= 3) {\n            const k = style.thresholds;\n            k.shift();\n            style.thresholds = k;\n          }\n        });\n      });\n    }\n\n    if (oldVersion < 12) {\n      // update template variables\n      _.each(this.dashboard.templating.list, templateVariable => {\n        if (templateVariable.refresh) {\n          templateVariable.refresh = 1;\n        }\n        if (!templateVariable.refresh) {\n          templateVariable.refresh = 0;\n        }\n        if (templateVariable.hideVariable) {\n          templateVariable.hide = 2;\n        } else if (templateVariable.hideLabel) {\n          templateVariable.hide = 1;\n        }\n      });\n    }\n\n    if (oldVersion < 12) {\n      // update graph yaxes changes\n      panelUpgrades.push((panel: any) => {\n        if (panel.type !== 'graph') {\n          return;\n        }\n        if (!panel.grid) {\n          return;\n        }\n\n        if (!panel.yaxes) {\n          panel.yaxes = [\n            {\n              show: panel['y-axis'],\n              min: panel.grid.leftMin,\n              max: panel.grid.leftMax,\n              logBase: panel.grid.leftLogBase,\n              format: panel.y_formats[0],\n              label: panel.leftYAxisLabel,\n            },\n            {\n              show: panel['y-axis'],\n              min: panel.grid.rightMin,\n              max: panel.grid.rightMax,\n              logBase: panel.grid.rightLogBase,\n              format: panel.y_formats[1],\n              label: panel.rightYAxisLabel,\n            },\n          ];\n\n          panel.xaxis = {\n            show: panel['x-axis'],\n          };\n\n          delete panel.grid.leftMin;\n          delete panel.grid.leftMax;\n          delete panel.grid.leftLogBase;\n          delete panel.grid.rightMin;\n          delete panel.grid.rightMax;\n          delete panel.grid.rightLogBase;\n          delete panel.y_formats;\n          delete panel.leftYAxisLabel;\n          delete panel.rightYAxisLabel;\n          delete panel['y-axis'];\n          delete panel['x-axis'];\n        }\n      });\n    }\n\n    if (oldVersion < 13) {\n      // update graph yaxes changes\n      panelUpgrades.push((panel: any) => {\n        if (panel.type !== 'graph') {\n          return;\n        }\n        if (!panel.grid) {\n          return;\n        }\n\n        panel.thresholds = [];\n        const t1: any = {},\n          t2: any = {};\n\n        if (panel.grid.threshold1 !== null) {\n          t1.value = panel.grid.threshold1;\n          if (panel.grid.thresholdLine) {\n            t1.line = true;\n            t1.lineColor = panel.grid.threshold1Color;\n            t1.colorMode = 'custom';\n          } else {\n            t1.fill = true;\n            t1.fillColor = panel.grid.threshold1Color;\n            t1.colorMode = 'custom';\n          }\n        }\n\n        if (panel.grid.threshold2 !== null) {\n          t2.value = panel.grid.threshold2;\n          if (panel.grid.thresholdLine) {\n            t2.line = true;\n            t2.lineColor = panel.grid.threshold2Color;\n            t2.colorMode = 'custom';\n          } else {\n            t2.fill = true;\n            t2.fillColor = panel.grid.threshold2Color;\n            t2.colorMode = 'custom';\n          }\n        }\n\n        if (_.isNumber(t1.value)) {\n          if (_.isNumber(t2.value)) {\n            if (t1.value > t2.value) {\n              t1.op = t2.op = 'lt';\n              panel.thresholds.push(t1);\n              panel.thresholds.push(t2);\n            } else {\n              t1.op = t2.op = 'gt';\n              panel.thresholds.push(t1);\n              panel.thresholds.push(t2);\n            }\n          } else {\n            t1.op = 'gt';\n            panel.thresholds.push(t1);\n          }\n        }\n\n        delete panel.grid.threshold1;\n        delete panel.grid.threshold1Color;\n        delete panel.grid.threshold2;\n        delete panel.grid.threshold2Color;\n        delete panel.grid.thresholdLine;\n      });\n    }\n\n    if (oldVersion < 14) {\n      this.dashboard.graphTooltip = old.sharedCrosshair ? 1 : 0;\n    }\n\n    if (oldVersion < 16) {\n      this.upgradeToGridLayout(old);\n    }\n\n    if (oldVersion < 17) {\n      panelUpgrades.push((panel: any) => {\n        if (panel.minSpan) {\n          const max = GRID_COLUMN_COUNT / panel.minSpan;\n          const factors = getFactors(GRID_COLUMN_COUNT);\n          // find the best match compared to factors\n          // (ie. [1,2,3,4,6,12,24] for 24 columns)\n          panel.maxPerRow =\n            factors[\n              _.findIndex(factors, o => {\n                return o > max;\n              }) - 1\n            ];\n        }\n        delete panel.minSpan;\n      });\n    }\n\n    if (oldVersion < 18) {\n      // migrate change to gauge options\n      panelUpgrades.push((panel: any) => {\n        if (panel['options-gauge']) {\n          panel.options = panel['options-gauge'];\n          panel.options.valueOptions = {\n            unit: panel.options.unit,\n            stat: panel.options.stat,\n            decimals: panel.options.decimals,\n            prefix: panel.options.prefix,\n            suffix: panel.options.suffix,\n          };\n\n          // correct order\n          if (panel.options.thresholds) {\n            panel.options.thresholds.reverse();\n          }\n\n          // this options prop was due to a bug\n          delete panel.options.options;\n          delete panel.options.unit;\n          delete panel.options.stat;\n          delete panel.options.decimals;\n          delete panel.options.prefix;\n          delete panel.options.suffix;\n          delete panel['options-gauge'];\n        }\n      });\n    }\n\n    if (oldVersion < 19) {\n      // migrate change to gauge options\n      panelUpgrades.push((panel: any) => {\n        if (panel.links && _.isArray(panel.links)) {\n          panel.links = panel.links.map(upgradePanelLink);\n        }\n      });\n    }\n\n    if (oldVersion < 20) {\n      const updateLinks = (link: DataLink) => {\n        return {\n          ...link,\n          url: updateVariablesSyntax(link.url),\n        };\n      };\n      panelUpgrades.push((panel: any) => {\n        // For graph panel\n        if (panel.options && panel.options.dataLinks && _.isArray(panel.options.dataLinks)) {\n          panel.options.dataLinks = panel.options.dataLinks.map(updateLinks);\n        }\n\n        // For panel with fieldOptions\n        if (panel.options && panel.options.fieldOptions && panel.options.fieldOptions.defaults) {\n          if (panel.options.fieldOptions.defaults.links && _.isArray(panel.options.fieldOptions.defaults.links)) {\n            panel.options.fieldOptions.defaults.links = panel.options.fieldOptions.defaults.links.map(updateLinks);\n          }\n          if (panel.options.fieldOptions.defaults.title) {\n            panel.options.fieldOptions.defaults.title = updateVariablesSyntax(\n              panel.options.fieldOptions.defaults.title\n            );\n          }\n        }\n      });\n    }\n\n    if (panelUpgrades.length === 0) {\n      return;\n    }\n\n    for (j = 0; j < this.dashboard.panels.length; j++) {\n      for (k = 0; k < panelUpgrades.length; k++) {\n        panelUpgrades[k].call(this, this.dashboard.panels[j]);\n        if (this.dashboard.panels[j].panels) {\n          for (n = 0; n < this.dashboard.panels[j].panels.length; n++) {\n            panelUpgrades[k].call(this, this.dashboard.panels[j].panels[n]);\n          }\n        }\n      }\n    }\n  }\n\n  upgradeToGridLayout(old: any) {\n    let yPos = 0;\n    const widthFactor = GRID_COLUMN_COUNT / 12;\n\n    const maxPanelId = _.max(\n      _.flattenDeep(\n        _.map(old.rows, row => {\n          return _.map(row.panels, 'id');\n        })\n      )\n    );\n    let nextRowId = maxPanelId + 1;\n\n    if (!old.rows) {\n      return;\n    }\n\n    // Add special \"row\" panels if even one row is collapsed, repeated or has visible title\n    const showRows = _.some(old.rows, row => row.collapse || row.showTitle || row.repeat);\n\n    for (const row of old.rows) {\n      if (row.repeatIteration) {\n        continue;\n      }\n\n      const height: any = row.height || DEFAULT_ROW_HEIGHT;\n      const rowGridHeight = getGridHeight(height);\n\n      const rowPanel: any = {};\n      let rowPanelModel: PanelModel;\n      if (showRows) {\n        // add special row panel\n        rowPanel.id = nextRowId;\n        rowPanel.type = 'row';\n        rowPanel.title = row.title;\n        rowPanel.collapsed = row.collapse;\n        rowPanel.repeat = row.repeat;\n        rowPanel.panels = [];\n        rowPanel.gridPos = {\n          x: 0,\n          y: yPos,\n          w: GRID_COLUMN_COUNT,\n          h: rowGridHeight,\n        };\n        rowPanelModel = new PanelModel(rowPanel);\n        nextRowId++;\n        yPos++;\n      }\n\n      const rowArea = new RowArea(rowGridHeight, GRID_COLUMN_COUNT, yPos);\n\n      for (const panel of row.panels) {\n        panel.span = panel.span || DEFAULT_PANEL_SPAN;\n        if (panel.minSpan) {\n          panel.minSpan = Math.min(GRID_COLUMN_COUNT, (GRID_COLUMN_COUNT / 12) * panel.minSpan);\n        }\n        const panelWidth = Math.floor(panel.span) * widthFactor;\n        const panelHeight = panel.height ? getGridHeight(panel.height) : rowGridHeight;\n\n        const panelPos = rowArea.getPanelPosition(panelHeight, panelWidth);\n        yPos = rowArea.yPos;\n        panel.gridPos = {\n          x: panelPos.x,\n          y: yPos + panelPos.y,\n          w: panelWidth,\n          h: panelHeight,\n        };\n        rowArea.addPanel(panel.gridPos);\n\n        delete panel.span;\n\n        if (rowPanelModel && rowPanel.collapsed) {\n          rowPanelModel.panels.push(panel);\n        } else {\n          this.dashboard.panels.push(new PanelModel(panel));\n        }\n      }\n\n      if (rowPanelModel) {\n        this.dashboard.panels.push(rowPanelModel);\n      }\n\n      if (!(rowPanelModel && rowPanel.collapsed)) {\n        yPos += rowGridHeight;\n      }\n    }\n  }\n}\n\nfunction getGridHeight(height: number | string) {\n  if (_.isString(height)) {\n    height = parseInt(height.replace('px', ''), 10);\n  }\n\n  if (height < MIN_PANEL_HEIGHT) {\n    height = MIN_PANEL_HEIGHT;\n  }\n\n  const gridHeight = Math.ceil(height / (GRID_CELL_HEIGHT + GRID_CELL_VMARGIN));\n  return gridHeight;\n}\n\n/**\n * RowArea represents dashboard row filled by panels\n * area is an array of numbers represented filled column's cells like\n *  -----------------------\n * |******** ****\n * |******** ****\n * |********\n *  -----------------------\n *  33333333 2222 00000 ...\n */\nclass RowArea {\n  area: number[];\n  yPos: number;\n  height: number;\n\n  constructor(height: number, width = GRID_COLUMN_COUNT, rowYPos = 0) {\n    this.area = new Array(width).fill(0);\n    this.yPos = rowYPos;\n    this.height = height;\n  }\n\n  reset() {\n    this.area.fill(0);\n  }\n\n  /**\n   * Update area after adding the panel.\n   */\n  addPanel(gridPos: any) {\n    for (let i = gridPos.x; i < gridPos.x + gridPos.w; i++) {\n      if (!this.area[i] || gridPos.y + gridPos.h - this.yPos > this.area[i]) {\n        this.area[i] = gridPos.y + gridPos.h - this.yPos;\n      }\n    }\n    return this.area;\n  }\n\n  /**\n   * Calculate position for the new panel in the row.\n   */\n  getPanelPosition(panelHeight: number, panelWidth: number, callOnce = false): any {\n    let startPlace, endPlace;\n    let place;\n    for (let i = this.area.length - 1; i >= 0; i--) {\n      if (this.height - this.area[i] > 0) {\n        if (endPlace === undefined) {\n          endPlace = i;\n        } else {\n          if (i < this.area.length - 1 && this.area[i] <= this.area[i + 1]) {\n            startPlace = i;\n          } else {\n            break;\n          }\n        }\n      } else {\n        break;\n      }\n    }\n\n    if (startPlace !== undefined && endPlace !== undefined && endPlace - startPlace >= panelWidth - 1) {\n      const yPos = _.max(this.area.slice(startPlace));\n      place = {\n        x: startPlace,\n        y: yPos,\n      };\n    } else if (!callOnce) {\n      // wrap to next row\n      this.yPos += this.height;\n      this.reset();\n      return this.getPanelPosition(panelHeight, panelWidth, true);\n    } else {\n      return null;\n    }\n\n    return place;\n  }\n}\n\nfunction upgradePanelLink(link: any): DataLink {\n  let url = link.url;\n\n  if (!url && link.dashboard) {\n    url = `/dashboard/db/${kbn.slugifyForUrl(link.dashboard)}`;\n  }\n\n  if (!url && link.dashUri) {\n    url = `/dashboard/${link.dashUri}`;\n  }\n\n  // some models are incomplete and have no dashboard or dashUri\n  if (!url) {\n    url = '/';\n  }\n\n  if (link.keepTime) {\n    url = appendQueryToUrl(url, `$${DataLinkBuiltInVars.keepTime}`);\n  }\n\n  if (link.includeVars) {\n    url = appendQueryToUrl(url, `$${DataLinkBuiltInVars.includeVars}`);\n  }\n\n  if (link.params) {\n    url = appendQueryToUrl(url, link.params);\n  }\n\n  return {\n    url: url,\n    title: link.title,\n    targetBlank: link.targetBlank,\n  };\n}\n\nfunction updateVariablesSyntax(text: string) {\n  const legacyVariableNamesRegex = /(__series_name)|(\\$__series_name)|(__value_time)|(__field_name)|(\\$__field_name)/g;\n\n  return text.replace(legacyVariableNamesRegex, (match, seriesName, seriesName1, valueTime, fieldName, fieldName1) => {\n    if (seriesName) {\n      return '__series.name';\n    }\n    if (seriesName1) {\n      return '${__series.name}';\n    }\n    if (valueTime) {\n      return '__value.time';\n    }\n    if (fieldName) {\n      return '__field.name';\n    }\n    if (fieldName1) {\n      return '${__field.name}';\n    }\n    return match;\n  });\n}\n","// Libaries\nimport _ from 'lodash';\n\n// Constants\nimport { DEFAULT_ANNOTATION_COLOR } from '@grafana/ui';\nimport { GRID_COLUMN_COUNT, REPEAT_DIR_VERTICAL, GRID_CELL_HEIGHT, GRID_CELL_VMARGIN } from 'app/core/constants';\n\n// Utils & Services\nimport { Emitter } from 'app/core/utils/emitter';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport sortByKeys from 'app/core/utils/sort_by_keys';\n\n// Types\nimport { PanelModel, GridPos } from './PanelModel';\nimport { DashboardMigrator } from './DashboardMigrator';\nimport { TimeRange, TimeZone } from '@grafana/data';\nimport { UrlQueryValue } from '@grafana/runtime';\nimport { KIOSK_MODE_TV, DashboardMeta } from 'app/types';\nimport { toUtc, DateTimeInput, dateTime, isDateTime } from '@grafana/data';\n\nexport interface CloneOptions {\n  saveVariables?: boolean;\n  saveTimerange?: boolean;\n  message?: string;\n}\n\nexport class DashboardModel {\n  id: any;\n  uid: string;\n  title: string;\n  autoUpdate: any;\n  description: any;\n  tags: any;\n  style: any;\n  timezone: any;\n  editable: any;\n  graphTooltip: any;\n  time: any;\n  private originalTime: any;\n  timepicker: any;\n  templating: { list: any[] };\n  private originalTemplating: any;\n  annotations: { list: any[] };\n  refresh: any;\n  snapshot: any;\n  schemaVersion: number;\n  version: number;\n  revision: number;\n  links: any;\n  gnetId: any;\n  panels: PanelModel[];\n\n  // ------------------\n  // not persisted\n  // ------------------\n\n  // repeat process cycles\n  iteration: number;\n  meta: DashboardMeta;\n  events: Emitter;\n\n  static nonPersistedProperties: { [str: string]: boolean } = {\n    events: true,\n    meta: true,\n    panels: true, // needs special handling\n    templating: true, // needs special handling\n    originalTime: true,\n    originalTemplating: true,\n  };\n\n  constructor(data: any, meta?: DashboardMeta) {\n    if (!data) {\n      data = {};\n    }\n\n    this.events = new Emitter();\n    this.id = data.id || null;\n    this.uid = data.uid || null;\n    this.revision = data.revision;\n    this.title = data.title || 'No Title';\n    this.autoUpdate = data.autoUpdate;\n    this.description = data.description;\n    this.tags = data.tags || [];\n    this.style = data.style || 'dark';\n    this.timezone = data.timezone || '';\n    this.editable = data.editable !== false;\n    this.graphTooltip = data.graphTooltip || 0;\n    this.time = data.time || { from: 'now-6h', to: 'now' };\n    this.timepicker = data.timepicker || {};\n    this.templating = this.ensureListExist(data.templating);\n    this.annotations = this.ensureListExist(data.annotations);\n    this.refresh = data.refresh;\n    this.snapshot = data.snapshot;\n    this.schemaVersion = data.schemaVersion || 0;\n    this.version = data.version || 0;\n    this.links = data.links || [];\n    this.gnetId = data.gnetId || null;\n    this.panels = _.map(data.panels || [], (panelData: any) => new PanelModel(panelData));\n\n    this.resetOriginalVariables();\n    this.resetOriginalTime();\n\n    this.initMeta(meta);\n    this.updateSchema(data);\n\n    this.addBuiltInAnnotationQuery();\n    this.sortPanelsByGridPos();\n  }\n\n  addBuiltInAnnotationQuery() {\n    let found = false;\n    for (const item of this.annotations.list) {\n      if (item.builtIn === 1) {\n        found = true;\n        break;\n      }\n    }\n\n    if (found) {\n      return;\n    }\n\n    this.annotations.list.unshift({\n      datasource: '-- Grafana --',\n      name: 'Annotations & Alerts',\n      type: 'dashboard',\n      iconColor: DEFAULT_ANNOTATION_COLOR,\n      enable: true,\n      hide: true,\n      builtIn: 1,\n    });\n  }\n\n  private initMeta(meta: DashboardMeta) {\n    meta = meta || {};\n\n    meta.canShare = meta.canShare !== false;\n    meta.canSave = meta.canSave !== false;\n    meta.canStar = meta.canStar !== false;\n    meta.canEdit = meta.canEdit !== false;\n    meta.showSettings = meta.canEdit;\n    meta.canMakeEditable = meta.canSave && !this.editable;\n    meta.fullscreen = false;\n    meta.isEditing = false;\n\n    if (!this.editable) {\n      meta.canEdit = false;\n      meta.canDelete = false;\n      meta.canSave = false;\n    }\n\n    this.meta = meta;\n  }\n\n  // cleans meta data and other non persistent state\n  getSaveModelClone(options?: CloneOptions) {\n    const defaults = _.defaults(options || {}, {\n      saveVariables: true,\n      saveTimerange: true,\n    });\n\n    // make clone\n    let copy: any = {};\n    for (const property in this) {\n      if (DashboardModel.nonPersistedProperties[property] || !this.hasOwnProperty(property)) {\n        continue;\n      }\n\n      copy[property] = _.cloneDeep(this[property]);\n    }\n\n    // get variable save models\n    copy.templating = {\n      list: _.map(this.templating.list, (variable: any) =>\n        variable.getSaveModel ? variable.getSaveModel() : variable\n      ),\n    };\n\n    if (!defaults.saveVariables) {\n      for (let i = 0; i < copy.templating.list.length; i++) {\n        const current = copy.templating.list[i];\n        const original: any = _.find(this.originalTemplating, { name: current.name, type: current.type });\n\n        if (!original) {\n          continue;\n        }\n\n        if (current.type === 'adhoc') {\n          copy.templating.list[i].filters = original.filters;\n        } else {\n          copy.templating.list[i].current = original.current;\n        }\n      }\n    }\n\n    if (!defaults.saveTimerange) {\n      copy.time = this.originalTime;\n    }\n\n    // get panel save models\n    copy.panels = _.chain(this.panels)\n      .filter((panel: PanelModel) => panel.type !== 'add-panel')\n      .map((panel: PanelModel) => panel.getSaveModel())\n      .value();\n\n    //  sort by keys\n    copy = sortByKeys(copy);\n\n    return copy;\n  }\n\n  setViewMode(panel: PanelModel, fullscreen: boolean, isEditing: boolean) {\n    this.meta.fullscreen = fullscreen;\n    this.meta.isEditing = isEditing && this.meta.canEdit;\n\n    panel.setViewMode(fullscreen, this.meta.isEditing);\n\n    this.events.emit('view-mode-changed', panel);\n  }\n\n  timeRangeUpdated(timeRange: TimeRange) {\n    this.events.emit('time-range-updated', timeRange);\n  }\n\n  startRefresh() {\n    this.events.emit('refresh');\n\n    for (const panel of this.panels) {\n      if (!this.otherPanelInFullscreen(panel)) {\n        panel.refresh();\n      }\n    }\n  }\n\n  render() {\n    this.events.emit('render');\n\n    for (const panel of this.panels) {\n      panel.render();\n    }\n  }\n\n  panelInitialized(panel: PanelModel) {\n    panel.initialized();\n\n    if (!this.otherPanelInFullscreen(panel)) {\n      panel.refresh();\n    }\n  }\n\n  otherPanelInFullscreen(panel: PanelModel) {\n    return this.meta.fullscreen && !panel.fullscreen;\n  }\n\n  private ensureListExist(data: any) {\n    if (!data) {\n      data = {};\n    }\n    if (!data.list) {\n      data.list = [];\n    }\n    return data;\n  }\n\n  getNextPanelId() {\n    let max = 0;\n\n    for (const panel of this.panels) {\n      if (panel.id > max) {\n        max = panel.id;\n      }\n\n      if (panel.collapsed) {\n        for (const rowPanel of panel.panels) {\n          if (rowPanel.id > max) {\n            max = rowPanel.id;\n          }\n        }\n      }\n    }\n\n    return max + 1;\n  }\n\n  forEachPanel(callback: (panel: PanelModel, index: number) => void) {\n    for (let i = 0; i < this.panels.length; i++) {\n      callback(this.panels[i], i);\n    }\n  }\n\n  getPanelById(id: number): PanelModel {\n    for (const panel of this.panels) {\n      if (panel.id === id) {\n        return panel;\n      }\n    }\n    return null;\n  }\n\n  addPanel(panelData: any) {\n    panelData.id = this.getNextPanelId();\n\n    const panel = new PanelModel(panelData);\n\n    this.panels.unshift(panel);\n\n    this.sortPanelsByGridPos();\n\n    this.events.emit('panel-added', panel);\n  }\n\n  sortPanelsByGridPos() {\n    this.panels.sort((panelA, panelB) => {\n      if (panelA.gridPos.y === panelB.gridPos.y) {\n        return panelA.gridPos.x - panelB.gridPos.x;\n      } else {\n        return panelA.gridPos.y - panelB.gridPos.y;\n      }\n    });\n  }\n\n  cleanUpRepeats() {\n    if (this.snapshot || this.templating.list.length === 0) {\n      return;\n    }\n\n    this.iteration = (this.iteration || new Date().getTime()) + 1;\n    const panelsToRemove = [];\n\n    // cleanup scopedVars\n    for (const panel of this.panels) {\n      delete panel.scopedVars;\n    }\n\n    for (let i = 0; i < this.panels.length; i++) {\n      const panel = this.panels[i];\n      if ((!panel.repeat || panel.repeatedByRow) && panel.repeatPanelId && panel.repeatIteration !== this.iteration) {\n        panelsToRemove.push(panel);\n      }\n    }\n\n    // remove panels\n    _.pull(this.panels, ...panelsToRemove);\n    panelsToRemove.map(p => p.destroy());\n    this.sortPanelsByGridPos();\n    this.events.emit('repeats-processed');\n  }\n\n  processRepeats() {\n    if (this.snapshot || this.templating.list.length === 0) {\n      return;\n    }\n\n    this.cleanUpRepeats();\n\n    this.iteration = (this.iteration || new Date().getTime()) + 1;\n\n    for (let i = 0; i < this.panels.length; i++) {\n      const panel = this.panels[i];\n      if (panel.repeat) {\n        this.repeatPanel(panel, i);\n      }\n    }\n\n    this.sortPanelsByGridPos();\n    this.events.emit('repeats-processed');\n  }\n\n  cleanUpRowRepeats(rowPanels: PanelModel[]) {\n    const panelsToRemove = [];\n    for (let i = 0; i < rowPanels.length; i++) {\n      const panel = rowPanels[i];\n      if (!panel.repeat && panel.repeatPanelId) {\n        panelsToRemove.push(panel);\n      }\n    }\n    _.pull(rowPanels, ...panelsToRemove);\n    _.pull(this.panels, ...panelsToRemove);\n  }\n\n  processRowRepeats(row: PanelModel) {\n    if (this.snapshot || this.templating.list.length === 0) {\n      return;\n    }\n\n    let rowPanels = row.panels;\n    if (!row.collapsed) {\n      const rowPanelIndex = _.findIndex(this.panels, (p: PanelModel) => p.id === row.id);\n      rowPanels = this.getRowPanels(rowPanelIndex);\n    }\n\n    this.cleanUpRowRepeats(rowPanels);\n\n    for (let i = 0; i < rowPanels.length; i++) {\n      const panel = rowPanels[i];\n      if (panel.repeat) {\n        const panelIndex = _.findIndex(this.panels, (p: PanelModel) => p.id === panel.id);\n        this.repeatPanel(panel, panelIndex);\n      }\n    }\n  }\n\n  getPanelRepeatClone(sourcePanel: PanelModel, valueIndex: number, sourcePanelIndex: number) {\n    // if first clone return source\n    if (valueIndex === 0) {\n      return sourcePanel;\n    }\n\n    const clone = new PanelModel(sourcePanel.getSaveModel());\n    clone.id = this.getNextPanelId();\n\n    // insert after source panel + value index\n    this.panels.splice(sourcePanelIndex + valueIndex, 0, clone);\n\n    clone.repeatIteration = this.iteration;\n    clone.repeatPanelId = sourcePanel.id;\n    clone.repeat = null;\n    return clone;\n  }\n\n  getRowRepeatClone(sourceRowPanel: PanelModel, valueIndex: number, sourcePanelIndex: number) {\n    // if first clone return source\n    if (valueIndex === 0) {\n      if (!sourceRowPanel.collapsed) {\n        const rowPanels = this.getRowPanels(sourcePanelIndex);\n        sourceRowPanel.panels = rowPanels;\n      }\n      return sourceRowPanel;\n    }\n\n    const clone = new PanelModel(sourceRowPanel.getSaveModel());\n    // for row clones we need to figure out panels under row to clone and where to insert clone\n    let rowPanels: PanelModel[], insertPos: number;\n    if (sourceRowPanel.collapsed) {\n      rowPanels = _.cloneDeep(sourceRowPanel.panels);\n      clone.panels = rowPanels;\n      // insert copied row after preceding row\n      insertPos = sourcePanelIndex + valueIndex;\n    } else {\n      rowPanels = this.getRowPanels(sourcePanelIndex);\n      clone.panels = _.map(rowPanels, (panel: PanelModel) => panel.getSaveModel());\n      // insert copied row after preceding row's panels\n      insertPos = sourcePanelIndex + (rowPanels.length + 1) * valueIndex;\n    }\n    this.panels.splice(insertPos, 0, clone);\n\n    this.updateRepeatedPanelIds(clone);\n    return clone;\n  }\n\n  repeatPanel(panel: PanelModel, panelIndex: number) {\n    const variable: any = _.find(this.templating.list, { name: panel.repeat } as any);\n    if (!variable) {\n      return;\n    }\n\n    if (panel.type === 'row') {\n      this.repeatRow(panel, panelIndex, variable);\n      return;\n    }\n\n    const selectedOptions = this.getSelectedVariableOptions(variable);\n    const maxPerRow = panel.maxPerRow || 4;\n    let xPos = 0;\n    let yPos = panel.gridPos.y;\n\n    for (let index = 0; index < selectedOptions.length; index++) {\n      const option = selectedOptions[index];\n      let copy;\n\n      copy = this.getPanelRepeatClone(panel, index, panelIndex);\n      copy.scopedVars = copy.scopedVars || {};\n      copy.scopedVars[variable.name] = option;\n\n      if (panel.repeatDirection === REPEAT_DIR_VERTICAL) {\n        if (index > 0) {\n          yPos += copy.gridPos.h;\n        }\n        copy.gridPos.y = yPos;\n      } else {\n        // set width based on how many are selected\n        // assumed the repeated panels should take up full row width\n        copy.gridPos.w = Math.max(GRID_COLUMN_COUNT / selectedOptions.length, GRID_COLUMN_COUNT / maxPerRow);\n        copy.gridPos.x = xPos;\n        copy.gridPos.y = yPos;\n\n        xPos += copy.gridPos.w;\n\n        // handle overflow by pushing down one row\n        if (xPos + copy.gridPos.w > GRID_COLUMN_COUNT) {\n          xPos = 0;\n          yPos += copy.gridPos.h;\n        }\n      }\n    }\n\n    // Update gridPos for panels below\n    const yOffset = yPos - panel.gridPos.y;\n    if (yOffset > 0) {\n      const panelBelowIndex = panelIndex + selectedOptions.length;\n      for (let i = panelBelowIndex; i < this.panels.length; i++) {\n        this.panels[i].gridPos.y += yOffset;\n      }\n    }\n  }\n\n  repeatRow(panel: PanelModel, panelIndex: number, variable: any) {\n    const selectedOptions = this.getSelectedVariableOptions(variable);\n    let yPos = panel.gridPos.y;\n\n    function setScopedVars(panel: PanelModel, variableOption: any) {\n      panel.scopedVars = panel.scopedVars || {};\n      panel.scopedVars[variable.name] = variableOption;\n    }\n\n    for (let optionIndex = 0; optionIndex < selectedOptions.length; optionIndex++) {\n      const option = selectedOptions[optionIndex];\n      const rowCopy = this.getRowRepeatClone(panel, optionIndex, panelIndex);\n      setScopedVars(rowCopy, option);\n\n      const rowHeight = this.getRowHeight(rowCopy);\n      const rowPanels = rowCopy.panels || [];\n      let panelBelowIndex;\n\n      if (panel.collapsed) {\n        // For collapsed row just copy its panels and set scoped vars and proper IDs\n        _.each(rowPanels, (rowPanel: PanelModel, i: number) => {\n          setScopedVars(rowPanel, option);\n          if (optionIndex > 0) {\n            this.updateRepeatedPanelIds(rowPanel, true);\n          }\n        });\n        rowCopy.gridPos.y += optionIndex;\n        yPos += optionIndex;\n        panelBelowIndex = panelIndex + optionIndex + 1;\n      } else {\n        // insert after 'row' panel\n        const insertPos = panelIndex + (rowPanels.length + 1) * optionIndex + 1;\n        _.each(rowPanels, (rowPanel: PanelModel, i: number) => {\n          setScopedVars(rowPanel, option);\n          if (optionIndex > 0) {\n            const cloneRowPanel = new PanelModel(rowPanel);\n            this.updateRepeatedPanelIds(cloneRowPanel, true);\n            // For exposed row additionally set proper Y grid position and add it to dashboard panels\n            cloneRowPanel.gridPos.y += rowHeight * optionIndex;\n            this.panels.splice(insertPos + i, 0, cloneRowPanel);\n          }\n        });\n        rowCopy.panels = [];\n        rowCopy.gridPos.y += rowHeight * optionIndex;\n        yPos += rowHeight;\n        panelBelowIndex = insertPos + rowPanels.length;\n      }\n\n      // Update gridPos for panels below\n      for (let i = panelBelowIndex; i < this.panels.length; i++) {\n        this.panels[i].gridPos.y += yPos;\n      }\n    }\n  }\n\n  updateRepeatedPanelIds(panel: PanelModel, repeatedByRow?: boolean) {\n    panel.repeatPanelId = panel.id;\n    panel.id = this.getNextPanelId();\n    panel.repeatIteration = this.iteration;\n    if (repeatedByRow) {\n      panel.repeatedByRow = true;\n    } else {\n      panel.repeat = null;\n    }\n    return panel;\n  }\n\n  getSelectedVariableOptions(variable: any) {\n    let selectedOptions: any[];\n    if (variable.current.text === 'All') {\n      selectedOptions = variable.options.slice(1, variable.options.length);\n    } else {\n      selectedOptions = _.filter(variable.options, { selected: true });\n    }\n    return selectedOptions;\n  }\n\n  getRowHeight(rowPanel: PanelModel): number {\n    if (!rowPanel.panels || rowPanel.panels.length === 0) {\n      return 0;\n    }\n    const rowYPos = rowPanel.gridPos.y;\n    const positions = _.map(rowPanel.panels, 'gridPos');\n    const maxPos = _.maxBy(positions, (pos: GridPos) => {\n      return pos.y + pos.h;\n    });\n    return maxPos.y + maxPos.h - rowYPos;\n  }\n\n  removePanel(panel: PanelModel) {\n    const index = _.indexOf(this.panels, panel);\n    this.panels.splice(index, 1);\n    this.events.emit('panel-removed', panel);\n  }\n\n  removeRow(row: PanelModel, removePanels: boolean) {\n    const needToogle = (!removePanels && row.collapsed) || (removePanels && !row.collapsed);\n\n    if (needToogle) {\n      this.toggleRow(row);\n    }\n\n    this.removePanel(row);\n  }\n\n  expandRows() {\n    for (let i = 0; i < this.panels.length; i++) {\n      const panel = this.panels[i];\n\n      if (panel.type !== 'row') {\n        continue;\n      }\n\n      if (panel.collapsed) {\n        this.toggleRow(panel);\n      }\n    }\n  }\n\n  collapseRows() {\n    for (let i = 0; i < this.panels.length; i++) {\n      const panel = this.panels[i];\n\n      if (panel.type !== 'row') {\n        continue;\n      }\n\n      if (!panel.collapsed) {\n        this.toggleRow(panel);\n      }\n    }\n  }\n\n  setPanelFocus(id: number) {\n    this.meta.focusPanelId = id;\n  }\n\n  updateSubmenuVisibility() {\n    this.meta.submenuEnabled = (() => {\n      if (this.links.length > 0) {\n        return true;\n      }\n\n      const visibleVars = _.filter(this.templating.list, (variable: any) => variable.hide !== 2);\n      if (visibleVars.length > 0) {\n        return true;\n      }\n\n      const visibleAnnotations = _.filter(this.annotations.list, (annotation: any) => annotation.hide !== true);\n      if (visibleAnnotations.length > 0) {\n        return true;\n      }\n\n      return false;\n    })();\n  }\n\n  getPanelInfoById(panelId: number) {\n    for (let i = 0; i < this.panels.length; i++) {\n      if (this.panels[i].id === panelId) {\n        return {\n          panel: this.panels[i],\n          index: i,\n        };\n      }\n    }\n\n    return null;\n  }\n\n  duplicatePanel(panel: PanelModel) {\n    const newPanel = panel.getSaveModel();\n    newPanel.id = this.getNextPanelId();\n\n    delete newPanel.repeat;\n    delete newPanel.repeatIteration;\n    delete newPanel.repeatPanelId;\n    delete newPanel.scopedVars;\n    if (newPanel.alert) {\n      delete newPanel.thresholds;\n    }\n    delete newPanel.alert;\n\n    // does it fit to the right?\n    if (panel.gridPos.x + panel.gridPos.w * 2 <= GRID_COLUMN_COUNT) {\n      newPanel.gridPos.x += panel.gridPos.w;\n    } else {\n      // add below\n      newPanel.gridPos.y += panel.gridPos.h;\n    }\n\n    this.addPanel(newPanel);\n    return newPanel;\n  }\n\n  formatDate(date: DateTimeInput, format?: string) {\n    date = isDateTime(date) ? date : dateTime(date);\n    format = format || 'YYYY-MM-DD HH:mm:ss';\n    const timezone = this.getTimezone();\n\n    return timezone === 'browser' ? dateTime(date).format(format) : toUtc(date).format(format);\n  }\n\n  destroy() {\n    this.events.removeAllListeners();\n    for (const panel of this.panels) {\n      panel.destroy();\n    }\n  }\n\n  toggleRow(row: PanelModel) {\n    const rowIndex = _.indexOf(this.panels, row);\n\n    if (row.collapsed) {\n      row.collapsed = false;\n      const hasRepeat = _.some(row.panels as PanelModel[], (p: PanelModel) => p.repeat);\n\n      if (row.panels.length > 0) {\n        // Use first panel to figure out if it was moved or pushed\n        const firstPanel = row.panels[0];\n        const yDiff = firstPanel.gridPos.y - (row.gridPos.y + row.gridPos.h);\n\n        // start inserting after row\n        let insertPos = rowIndex + 1;\n        // y max will represent the bottom y pos after all panels have been added\n        // needed to know home much panels below should be pushed down\n        let yMax = row.gridPos.y;\n\n        for (const panel of row.panels) {\n          // make sure y is adjusted (in case row moved while collapsed)\n          // console.log('yDiff', yDiff);\n          panel.gridPos.y -= yDiff;\n          // insert after row\n          this.panels.splice(insertPos, 0, new PanelModel(panel));\n          // update insert post and y max\n          insertPos += 1;\n          yMax = Math.max(yMax, panel.gridPos.y + panel.gridPos.h);\n        }\n\n        const pushDownAmount = yMax - row.gridPos.y - 1;\n\n        // push panels below down\n        for (let panelIndex = insertPos; panelIndex < this.panels.length; panelIndex++) {\n          this.panels[panelIndex].gridPos.y += pushDownAmount;\n        }\n\n        row.panels = [];\n\n        if (hasRepeat) {\n          this.processRowRepeats(row);\n        }\n      }\n\n      // sort panels\n      this.sortPanelsByGridPos();\n\n      // emit change event\n      this.events.emit('row-expanded');\n      return;\n    }\n\n    const rowPanels = this.getRowPanels(rowIndex);\n\n    // remove panels\n    _.pull(this.panels, ...rowPanels);\n    // save panel models inside row panel\n    row.panels = _.map(rowPanels, (panel: PanelModel) => panel.getSaveModel());\n    row.collapsed = true;\n\n    // emit change event\n    this.events.emit('row-collapsed');\n  }\n\n  /**\n   * Will return all panels after rowIndex until it encounters another row\n   */\n  getRowPanels(rowIndex: number): PanelModel[] {\n    const rowPanels = [];\n\n    for (let index = rowIndex + 1; index < this.panels.length; index++) {\n      const panel = this.panels[index];\n\n      // break when encountering another row\n      if (panel.type === 'row') {\n        break;\n      }\n\n      // this panel must belong to row\n      rowPanels.push(panel);\n    }\n\n    return rowPanels;\n  }\n\n  on(eventName: string, callback: (payload?: any) => void) {\n    this.events.on(eventName, callback);\n  }\n\n  off(eventName: string, callback?: (payload?: any) => void) {\n    this.events.off(eventName, callback);\n  }\n\n  cycleGraphTooltip() {\n    this.graphTooltip = (this.graphTooltip + 1) % 3;\n  }\n\n  sharedTooltipModeEnabled() {\n    return this.graphTooltip > 0;\n  }\n\n  sharedCrosshairModeOnly() {\n    return this.graphTooltip === 1;\n  }\n\n  getRelativeTime(date: DateTimeInput) {\n    date = isDateTime(date) ? date : dateTime(date);\n\n    return this.timezone === 'browser' ? dateTime(date).fromNow() : toUtc(date).fromNow();\n  }\n\n  isTimezoneUtc() {\n    return this.getTimezone() === 'utc';\n  }\n\n  isSnapshot() {\n    return this.snapshot !== undefined;\n  }\n\n  getTimezone(): TimeZone {\n    return (this.timezone ? this.timezone : contextSrv.user.timezone) as TimeZone;\n  }\n\n  private updateSchema(old: any) {\n    const migrator = new DashboardMigrator(this);\n    migrator.updateSchema(old);\n  }\n\n  resetOriginalTime() {\n    this.originalTime = _.cloneDeep(this.time);\n  }\n\n  hasTimeChanged() {\n    return !_.isEqual(this.time, this.originalTime);\n  }\n\n  resetOriginalVariables() {\n    this.originalTemplating = _.map(this.templating.list, (variable: any) => {\n      return {\n        name: variable.name,\n        type: variable.type,\n        current: _.cloneDeep(variable.current),\n        filters: _.cloneDeep(variable.filters),\n      };\n    });\n  }\n\n  hasVariableValuesChanged() {\n    if (this.templating.list.length !== this.originalTemplating.length) {\n      return false;\n    }\n\n    const updated = _.map(this.templating.list, (variable: any) => {\n      return {\n        name: variable.name,\n        type: variable.type,\n        current: _.cloneDeep(variable.current),\n        filters: _.cloneDeep(variable.filters),\n      };\n    });\n\n    return !_.isEqual(updated, this.originalTemplating);\n  }\n\n  autoFitPanels(viewHeight: number, kioskMode?: UrlQueryValue) {\n    const currentGridHeight = Math.max(\n      ...this.panels.map(panel => {\n        return panel.gridPos.h + panel.gridPos.y;\n      })\n    );\n\n    const navbarHeight = 55;\n    const margin = 20;\n    const submenuHeight = 50;\n\n    let visibleHeight = viewHeight - navbarHeight - margin;\n\n    // Remove submenu height if visible\n    if (this.meta.submenuEnabled && !kioskMode) {\n      visibleHeight -= submenuHeight;\n    }\n\n    // add back navbar height\n    if (kioskMode && kioskMode !== KIOSK_MODE_TV) {\n      visibleHeight += navbarHeight;\n    }\n\n    const visibleGridHeight = Math.floor(visibleHeight / (GRID_CELL_HEIGHT + GRID_CELL_VMARGIN));\n    const scaleFactor = currentGridHeight / visibleGridHeight;\n\n    this.panels.forEach((panel, i) => {\n      panel.gridPos.y = Math.round(panel.gridPos.y / scaleFactor) || 1;\n      panel.gridPos.h = Math.round(panel.gridPos.h / scaleFactor) || 1;\n    });\n  }\n\n  templateVariableValueUpdated() {\n    this.processRepeats();\n    this.events.emit('template-variable-value-updated');\n  }\n\n  expandParentRowFor(panelId: number) {\n    for (const panel of this.panels) {\n      if (panel.collapsed) {\n        for (const rowPanel of panel.panels) {\n          if (rowPanel.id === panelId) {\n            this.toggleRow(panel);\n            return;\n          }\n        }\n      }\n    }\n  }\n\n  toggleLegendsForAll() {\n    const panelsWithLegends = this.panels.filter(panel => {\n      return panel.legend !== undefined && panel.legend !== null;\n    });\n\n    // determine if more panels are displaying legends or not\n    const onCount = panelsWithLegends.filter(panel => panel.legend.show).length;\n    const offCount = panelsWithLegends.length - onCount;\n    const panelLegendsOn = onCount >= offCount;\n\n    for (const panel of panelsWithLegends) {\n      panel.legend.show = !panelLegendsOn;\n      panel.render();\n    }\n  }\n}\n","var path = 'public/app/plugins/datasource/opentsdb/partials/annotations.editor.html';\nvar html = \"<div class=gf-form-group>\\n  <div class=gf-form>\\n    <span class=\\\"gf-form-label width-13\\\">OpenTSDB metrics query</span>\\n    <input type=text class=gf-form-input ng-model=ctrl.annotation.target placeholder=events.eventname>\\n  </div>\\n  <gf-form-switch class=gf-form label=\\\"Show Global Annotations?\\\" checked=ctrl.annotation.isGlobal switch-class=max-width-6 label-class=width-13></gf-form-switch>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { actionCreatorFactory, noPayloadActionCreatorFactory } from 'app/core/redux';\nimport config from 'app/core/config';\nimport { ThunkResult, SyncInfo, LdapUser, LdapConnectionInfo, LdapError, UserSession, User } from 'app/types';\nimport {\n  getUserInfo,\n  getLdapState,\n  syncLdapUser,\n  getUser,\n  getUserSessions,\n  revokeUserSession,\n  revokeAllUserSessions,\n  getLdapSyncStatus,\n} from './apis';\n\n// Action types\n\nexport const ldapConnectionInfoLoadedAction = actionCreatorFactory<LdapConnectionInfo>(\n  'ldap/CONNECTION_INFO_LOADED'\n).create();\nexport const ldapSyncStatusLoadedAction = actionCreatorFactory<SyncInfo>('ldap/SYNC_STATUS_LOADED').create();\nexport const userMappingInfoLoadedAction = actionCreatorFactory<LdapUser>('ldap/USER_INFO_LOADED').create();\nexport const userMappingInfoFailedAction = actionCreatorFactory<LdapError>('ldap/USER_INFO_FAILED').create();\nexport const clearUserMappingInfoAction = noPayloadActionCreatorFactory('ldap/CLEAR_USER_MAPPING_INFO').create();\nexport const clearUserErrorAction = noPayloadActionCreatorFactory('ldap/CLEAR_USER_ERROR').create();\nexport const ldapFailedAction = actionCreatorFactory<LdapError>('ldap/LDAP_FAILED').create();\n\nexport const userLoadedAction = actionCreatorFactory<User>('USER_LOADED').create();\nexport const userSessionsLoadedAction = actionCreatorFactory<UserSession[]>('USER_SESSIONS_LOADED').create();\nexport const userSyncFailedAction = noPayloadActionCreatorFactory('USER_SYNC_FAILED').create();\nexport const revokeUserSessionAction = noPayloadActionCreatorFactory('REVOKE_USER_SESSION').create();\nexport const revokeAllUserSessionsAction = noPayloadActionCreatorFactory('REVOKE_ALL_USER_SESSIONS').create();\n\n// Actions\n\nexport function loadLdapState(): ThunkResult<void> {\n  return async dispatch => {\n    try {\n      const connectionInfo = await getLdapState();\n      dispatch(ldapConnectionInfoLoadedAction(connectionInfo));\n    } catch (error) {\n      error.isHandled = true;\n      const ldapError = {\n        title: error.data.message,\n        body: error.data.error,\n      };\n      dispatch(ldapFailedAction(ldapError));\n    }\n  };\n}\n\nexport function loadLdapSyncStatus(): ThunkResult<void> {\n  return async dispatch => {\n    if (config.buildInfo.isEnterprise) {\n      // Available only in enterprise\n      const syncStatus = await getLdapSyncStatus();\n      dispatch(ldapSyncStatusLoadedAction(syncStatus));\n    }\n  };\n}\n\nexport function loadUserMapping(username: string): ThunkResult<void> {\n  return async dispatch => {\n    try {\n      const userInfo = await getUserInfo(username);\n      dispatch(userMappingInfoLoadedAction(userInfo));\n    } catch (error) {\n      error.isHandled = true;\n      const userError = {\n        title: error.data.message,\n        body: error.data.error,\n      };\n      dispatch(clearUserMappingInfoAction());\n      dispatch(userMappingInfoFailedAction(userError));\n    }\n  };\n}\n\nexport function clearUserError(): ThunkResult<void> {\n  return dispatch => {\n    dispatch(clearUserErrorAction());\n  };\n}\n\nexport function clearUserMappingInfo(): ThunkResult<void> {\n  return dispatch => {\n    dispatch(clearUserErrorAction());\n    dispatch(clearUserMappingInfoAction());\n  };\n}\n\nexport function syncUser(userId: number): ThunkResult<void> {\n  return async dispatch => {\n    try {\n      await syncLdapUser(userId);\n      dispatch(loadLdapUserInfo(userId));\n      dispatch(loadLdapSyncStatus());\n    } catch (error) {\n      dispatch(userSyncFailedAction());\n    }\n  };\n}\n\nexport function loadLdapUserInfo(userId: number): ThunkResult<void> {\n  return async dispatch => {\n    try {\n      const user = await getUser(userId);\n      dispatch(userLoadedAction(user));\n      dispatch(loadUserSessions(userId));\n      dispatch(loadUserMapping(user.login));\n    } catch (error) {\n      error.isHandled = true;\n      const userError = {\n        title: error.data.message,\n        body: error.data.error,\n      };\n      dispatch(userMappingInfoFailedAction(userError));\n    }\n  };\n}\n\nexport function loadUserSessions(userId: number): ThunkResult<void> {\n  return async dispatch => {\n    const sessions = await getUserSessions(userId);\n    dispatch(userSessionsLoadedAction(sessions));\n  };\n}\n\nexport function revokeSession(tokenId: number, userId: number): ThunkResult<void> {\n  return async dispatch => {\n    await revokeUserSession(tokenId, userId);\n    dispatch(loadUserSessions(userId));\n  };\n}\n\nexport function revokeAllSessions(userId: number): ThunkResult<void> {\n  return async dispatch => {\n    await revokeAllUserSessions(userId);\n    dispatch(loadUserSessions(userId));\n  };\n}\n","// Libraries\nimport Papa, { ParseResult, ParseConfig, Parser } from 'papaparse';\nimport defaults from 'lodash/defaults';\nimport isNumber from 'lodash/isNumber';\n\n// Types\nimport { DataFrame, Field, FieldType, FieldConfig } from '../types';\nimport { guessFieldTypeFromValue } from '../dataframe/processDataFrame';\nimport { MutableDataFrame } from '../dataframe/MutableDataFrame';\n\nexport enum CSVHeaderStyle {\n  full,\n  name,\n  none,\n}\n\n// Subset of all parse options\nexport interface CSVConfig {\n  delimiter?: string; // default: \",\"\n  newline?: string; // default: \"\\r\\n\"\n  quoteChar?: string; // default: '\"'\n  encoding?: string; // default: \"\",\n  headerStyle?: CSVHeaderStyle;\n}\n\nexport interface CSVParseCallbacks {\n  /**\n   * Get a callback before any rows are processed\n   * This can return a modified table to force any\n   * Column configurations\n   */\n  onHeader: (fields: Field[]) => void;\n\n  // Called after each row is read\n  onRow: (row: any[]) => void;\n}\n\nexport interface CSVOptions {\n  config?: CSVConfig;\n  callback?: CSVParseCallbacks;\n}\n\nexport function readCSV(csv: string, options?: CSVOptions): DataFrame[] {\n  return new CSVReader(options).readCSV(csv);\n}\n\nenum ParseState {\n  Starting,\n  InHeader,\n  ReadingRows,\n}\n\nexport class CSVReader {\n  config: CSVConfig;\n  callback?: CSVParseCallbacks;\n\n  state: ParseState;\n  data: MutableDataFrame[];\n  current: MutableDataFrame;\n\n  constructor(options?: CSVOptions) {\n    if (!options) {\n      options = {};\n    }\n    this.config = options.config || {};\n    this.callback = options.callback;\n\n    this.current = new MutableDataFrame({ fields: [] });\n    this.state = ParseState.Starting;\n    this.data = [];\n  }\n\n  // PapaParse callback on each line\n  private step = (results: ParseResult, parser: Parser): void => {\n    for (let i = 0; i < results.data.length; i++) {\n      const line: string[] = results.data[i];\n      if (line.length < 1) {\n        continue;\n      }\n      const first = line[0]; // null or value, papaparse does not return ''\n      if (first) {\n        // Comment or header queue\n        if (first.startsWith('#')) {\n          // Look for special header column\n          // #{columkey}#a,b,c\n          const idx = first.indexOf('#', 2);\n          if (idx > 0) {\n            const k = first.substr(1, idx - 1);\n            const isName = 'name' === k;\n\n            // Simple object used to check if headers match\n            const headerKeys: FieldConfig = {\n              unit: '#',\n            };\n\n            // Check if it is a known/supported column\n            if (isName || headerKeys.hasOwnProperty(k)) {\n              // Starting a new table after reading rows\n              if (this.state === ParseState.ReadingRows) {\n                this.current = new MutableDataFrame({ fields: [] });\n                this.data.push(this.current);\n              }\n\n              const v = first.substr(idx + 1);\n              if (isName) {\n                this.current.addFieldFor(undefined, v);\n                for (let j = 1; j < line.length; j++) {\n                  this.current.addFieldFor(undefined, line[j]);\n                }\n              } else {\n                const { fields } = this.current;\n                for (let j = 0; j < fields.length; j++) {\n                  if (!fields[j].config) {\n                    fields[j].config = {};\n                  }\n                  const disp = fields[j].config as any; // any lets name lookup\n                  disp[k] = j === 0 ? v : line[j];\n                }\n              }\n\n              this.state = ParseState.InHeader;\n              continue;\n            }\n          } else if (this.state === ParseState.Starting) {\n            this.state = ParseState.InHeader;\n            continue;\n          }\n          // Ignore comment lines\n          continue;\n        }\n\n        if (this.state === ParseState.Starting) {\n          const type = guessFieldTypeFromValue(first);\n          if (type === FieldType.string) {\n            for (const s of line) {\n              this.current.addFieldFor(undefined, s);\n            }\n            this.state = ParseState.InHeader;\n            continue;\n          }\n          this.state = ParseState.InHeader; // fall through to read rows\n        }\n      }\n\n      // Add the current results to the data\n      if (this.state !== ParseState.ReadingRows) {\n        // anything???\n      }\n\n      this.state = ParseState.ReadingRows;\n\n      // Make sure colum structure is valid\n      if (line.length > this.current.fields.length) {\n        const { fields } = this.current;\n        for (let f = fields.length; f < line.length; f++) {\n          this.current.addFieldFor(line[f]);\n        }\n        if (this.callback) {\n          this.callback.onHeader(this.current.fields);\n        }\n      }\n\n      this.current.appendRow(line);\n      if (this.callback) {\n        // // Send the header after we guess the type\n        // if (this.series.rows.length === 0) {\n        //   this.callback.onHeader(this.series);\n        // }\n        this.callback.onRow(line);\n      }\n    }\n  };\n\n  readCSV(text: string): MutableDataFrame[] {\n    this.current = new MutableDataFrame({ fields: [] });\n    this.data = [this.current];\n\n    const papacfg = {\n      ...this.config,\n      dynamicTyping: false,\n      skipEmptyLines: true,\n      comments: false, // Keep comment lines\n      step: this.step,\n    } as ParseConfig;\n\n    Papa.parse(text, papacfg);\n\n    return this.data;\n  }\n}\n\ntype FieldWriter = (value: any) => string;\n\nfunction writeValue(value: any, config: CSVConfig): string {\n  const str = value.toString();\n  if (str.includes('\"')) {\n    // Escape the double quote characters\n    return config.quoteChar + str.replace(/\"/gi, '\"\"') + config.quoteChar;\n  }\n  if (str.includes('\\n') || str.includes(config.delimiter)) {\n    return config.quoteChar + str + config.quoteChar;\n  }\n  return str;\n}\n\nfunction makeFieldWriter(field: Field, config: CSVConfig): FieldWriter {\n  if (field.type) {\n    if (field.type === FieldType.boolean) {\n      return (value: any) => {\n        return value ? 'true' : 'false';\n      };\n    }\n\n    if (field.type === FieldType.number) {\n      return (value: any) => {\n        if (isNumber(value)) {\n          return value.toString();\n        }\n        return writeValue(value, config);\n      };\n    }\n  }\n\n  return (value: any) => writeValue(value, config);\n}\n\nfunction getHeaderLine(key: string, fields: Field[], config: CSVConfig): string {\n  const isName = 'name' === key;\n  const isType = 'type' === key;\n\n  for (const f of fields) {\n    const display = f.config;\n    if (isName || isType || (display && display.hasOwnProperty(key))) {\n      let line = '#' + key + '#';\n      for (let i = 0; i < fields.length; i++) {\n        if (i > 0) {\n          line = line + config.delimiter;\n        }\n\n        let v: any = fields[i].name;\n        if (isType) {\n          v = fields[i].type;\n        } else if (isName) {\n          // already name\n        } else {\n          v = (fields[i].config as any)[key];\n        }\n        if (v) {\n          line = line + writeValue(v, config);\n        }\n      }\n      return line + config.newline;\n    }\n  }\n  return '';\n}\n\nexport function toCSV(data: DataFrame[], config?: CSVConfig): string {\n  if (!data) {\n    return '';\n  }\n\n  let csv = '';\n  config = defaults(config, {\n    delimiter: ',',\n    newline: '\\r\\n',\n    quoteChar: '\"',\n    encoding: '',\n    headerStyle: CSVHeaderStyle.name,\n  });\n\n  for (const series of data) {\n    const { fields } = series;\n    if (config.headerStyle === CSVHeaderStyle.full) {\n      csv =\n        csv +\n        getHeaderLine('name', fields, config) +\n        getHeaderLine('type', fields, config) +\n        getHeaderLine('unit', fields, config) +\n        getHeaderLine('dateFormat', fields, config);\n    } else if (config.headerStyle === CSVHeaderStyle.name) {\n      for (let i = 0; i < fields.length; i++) {\n        if (i > 0) {\n          csv += config.delimiter;\n        }\n        csv += fields[i].name;\n      }\n      csv += config.newline;\n    }\n    const length = fields[0].values.length;\n    if (length > 0) {\n      const writers = fields.map(field => makeFieldWriter(field, config!));\n      for (let i = 0; i < length; i++) {\n        for (let j = 0; j < fields.length; j++) {\n          if (j > 0) {\n            csv = csv + config.delimiter;\n          }\n\n          const v = fields[j].values.get(i);\n          if (v !== null) {\n            csv = csv + writers[j](v);\n          }\n        }\n        csv = csv + config.newline;\n      }\n    }\n    csv = csv + config.newline;\n  }\n\n  return csv;\n}\n","import { countBy, chain, map, escapeRegExp } from 'lodash';\n\nimport { LogLevel, LogRowModel, LogLabelStatsModel, LogsParser } from '../types/logs';\nimport { DataFrame, FieldType } from '../types/index';\nimport { ArrayVector } from '../vector/ArrayVector';\n\nconst LOGFMT_REGEXP = /(?:^|\\s)(\\w+)=(\"[^\"]*\"|\\S+)/;\n\n/**\n * Returns the log level of a log line.\n * Parse the line for level words. If no level is found, it returns `LogLevel.unknown`.\n *\n * Example: `getLogLevel('WARN 1999-12-31 this is great') // LogLevel.warn`\n */\nexport function getLogLevel(line: string): LogLevel {\n  if (!line) {\n    return LogLevel.unknown;\n  }\n  for (const key of Object.keys(LogLevel)) {\n    const regexp = new RegExp(`\\\\b${key}\\\\b`, 'i');\n    if (regexp.test(line)) {\n      const level = (LogLevel as any)[key];\n      if (level) {\n        return level;\n      }\n    }\n  }\n  return LogLevel.unknown;\n}\n\nexport function getLogLevelFromKey(key: string): LogLevel {\n  const level = (LogLevel as any)[key];\n  if (level) {\n    return level;\n  }\n\n  return LogLevel.unknown;\n}\n\nexport function addLogLevelToSeries(series: DataFrame, lineIndex: number): DataFrame {\n  const levels = new ArrayVector<LogLevel>();\n  const lines = series.fields[lineIndex];\n  for (let i = 0; i < lines.values.length; i++) {\n    const line = lines.values.get(lineIndex);\n    levels.buffer.push(getLogLevel(line));\n  }\n\n  return {\n    ...series, // Keeps Tags, RefID etc\n    fields: [\n      ...series.fields,\n      {\n        name: 'LogLevel',\n        type: FieldType.string,\n        values: levels,\n        config: {},\n      },\n    ],\n  };\n}\n\nexport function calculateLogsLabelStats(rows: LogRowModel[], label: string): LogLabelStatsModel[] {\n  // Consider only rows that have the given label\n  const rowsWithLabel = rows.filter(row => row.labels[label] !== undefined);\n  const rowCount = rowsWithLabel.length;\n\n  // Get label value counts for eligible rows\n  const countsByValue = countBy(rowsWithLabel, row => (row as LogRowModel).labels[label]);\n  const sortedCounts = chain(countsByValue)\n    .map((count, value) => ({ count, value, proportion: count / rowCount }))\n    .sortBy('count')\n    .reverse()\n    .value();\n\n  return sortedCounts;\n}\n\nexport const LogsParsers: { [name: string]: LogsParser } = {\n  JSON: {\n    buildMatcher: label => new RegExp(`(?:{|,)\\\\s*\"${label}\"\\\\s*:\\\\s*\"?([\\\\d\\\\.]+|[^\"]*)\"?`),\n    getFields: line => {\n      const fields: string[] = [];\n      try {\n        const parsed = JSON.parse(line);\n        map(parsed, (value, key) => {\n          const fieldMatcher = new RegExp(`\"${key}\"\\\\s*:\\\\s*\"?${escapeRegExp(JSON.stringify(value))}\"?`);\n\n          const match = line.match(fieldMatcher);\n          if (match) {\n            fields.push(match[0]);\n          }\n        });\n      } catch {}\n      return fields;\n    },\n    getLabelFromField: field => (field.match(/^\"(\\w+)\"\\s*:/) || [])[1],\n    getValueFromField: field => (field.match(/:\\s*(.*)$/) || [])[1],\n    test: line => {\n      try {\n        return JSON.parse(line);\n      } catch (error) {}\n    },\n  },\n\n  logfmt: {\n    buildMatcher: label => new RegExp(`(?:^|\\\\s)${label}=(\"[^\"]*\"|\\\\S+)`),\n    getFields: line => {\n      const fields: string[] = [];\n      line.replace(new RegExp(LOGFMT_REGEXP, 'g'), substring => {\n        fields.push(substring.trim());\n        return '';\n      });\n      return fields;\n    },\n    getLabelFromField: field => (field.match(LOGFMT_REGEXP) || [])[1],\n    getValueFromField: field => (field.match(LOGFMT_REGEXP) || [])[2],\n    test: line => LOGFMT_REGEXP.test(line),\n  },\n};\n\nexport function calculateFieldStats(rows: LogRowModel[], extractor: RegExp): LogLabelStatsModel[] {\n  // Consider only rows that satisfy the matcher\n  const rowsWithField = rows.filter(row => extractor.test(row.entry));\n  const rowCount = rowsWithField.length;\n\n  // Get field value counts for eligible rows\n  const countsByValue = countBy(rowsWithField, r => {\n    const row: LogRowModel = r;\n    const match = row.entry.match(extractor);\n\n    return match ? match[1] : null;\n  });\n  const sortedCounts = chain(countsByValue)\n    .map((count, value) => ({ count, value, proportion: count / rowCount }))\n    .sortBy('count')\n    .reverse()\n    .value();\n\n  return sortedCounts;\n}\n\nexport function getParser(line: string): LogsParser | undefined {\n  let parser;\n  try {\n    if (LogsParsers.JSON.test(line)) {\n      parser = LogsParsers.JSON;\n    }\n  } catch (error) {}\n\n  if (!parser && LogsParsers.logfmt.test(line)) {\n    parser = LogsParsers.logfmt;\n  }\n\n  return parser;\n}\n","import { Labels } from '../types/data';\n\n/**\n * Regexp to extract Prometheus-style labels\n */\nconst labelRegexp = /\\b(\\w+)(!?=~?)\"([^\"\\n]*?)\"/g;\n\n/**\n * Returns a map of label keys to value from an input selector string.\n *\n * Example: `parseLabels('{job=\"foo\", instance=\"bar\"}) // {job: \"foo\", instance: \"bar\"}`\n */\nexport function parseLabels(labels: string): Labels {\n  const labelsByKey: Labels = {};\n  labels.replace(labelRegexp, (_, key, operator, value) => {\n    labelsByKey[key] = value;\n    return '';\n  });\n  return labelsByKey;\n}\n\n/**\n * Returns a map labels that are common to the given label sets.\n */\nexport function findCommonLabels(labelsSets: Labels[]): Labels {\n  return labelsSets.reduce(\n    (acc, labels) => {\n      if (!labels) {\n        throw new Error('Need parsed labels to find common labels.');\n      }\n      if (!acc) {\n        // Initial set\n        acc = { ...labels };\n      } else {\n        // Remove incoming labels that are missing or not matching in value\n        Object.keys(labels).forEach(key => {\n          if (acc[key] === undefined || acc[key] !== labels[key]) {\n            delete acc[key];\n          }\n        });\n        // Remove common labels that are missing from incoming label set\n        Object.keys(acc).forEach(key => {\n          if (labels[key] === undefined) {\n            delete acc[key];\n          }\n        });\n      }\n      return acc;\n    },\n    (undefined as unknown) as Labels\n  );\n}\n\n/**\n * Returns a map of labels that are in `labels`, but not in `commonLabels`.\n */\nexport function findUniqueLabels(labels: Labels, commonLabels: Labels): Labels {\n  const uncommonLabels: Labels = { ...labels };\n  Object.keys(commonLabels).forEach(key => {\n    delete uncommonLabels[key];\n  });\n  return uncommonLabels;\n}\n\n/**\n * Serializes the given labels to a string.\n */\nexport function formatLabels(labels: Labels, defaultValue = ''): string {\n  if (!labels || Object.keys(labels).length === 0) {\n    return defaultValue;\n  }\n  const labelKeys = Object.keys(labels).sort();\n  const cleanSelector = labelKeys.map(key => `${key}=\"${labels[key]}\"`).join(', ');\n  return ['{', cleanSelector, '}'].join('');\n}\n","export const objRemoveUndefined = (obj: any) => {\n  return Object.keys(obj).reduce((acc: any, key) => {\n    if (obj[key] !== undefined) {\n      acc[key] = obj[key];\n    }\n    return acc;\n  }, {});\n};\n","import { Threshold } from '../types';\n\nexport function getActiveThreshold(value: number, thresholds: Threshold[]): Threshold {\n  let active = thresholds[0];\n  for (const threshold of thresholds) {\n    if (value >= threshold.value) {\n      active = threshold;\n    } else {\n      break;\n    }\n  }\n  return active;\n}\n\n/**\n * Sorts the thresholds\n */\nexport function sortThresholds(thresholds: Threshold[]) {\n  return thresholds.sort((t1, t2) => {\n    return t1.value - t2.value;\n  });\n}\n","import { ValueMapping, MappingType, ValueMap, RangeMap } from '../types';\n\ntype TimeSeriesValue = string | number | null;\n\nconst addValueToTextMappingText = (\n  allValueMappings: ValueMapping[],\n  valueToTextMapping: ValueMap,\n  value: TimeSeriesValue\n) => {\n  if (valueToTextMapping.value === undefined) {\n    return allValueMappings;\n  }\n\n  if (value === null && valueToTextMapping.value && valueToTextMapping.value.toLowerCase() === 'null') {\n    return allValueMappings.concat(valueToTextMapping);\n  }\n\n  const valueAsNumber = parseFloat(value as string);\n  const valueToTextMappingAsNumber = parseFloat(valueToTextMapping.value as string);\n\n  if (isNaN(valueAsNumber) || isNaN(valueToTextMappingAsNumber)) {\n    return allValueMappings;\n  }\n\n  if (valueAsNumber !== valueToTextMappingAsNumber) {\n    return allValueMappings;\n  }\n\n  return allValueMappings.concat(valueToTextMapping);\n};\n\nconst addRangeToTextMappingText = (\n  allValueMappings: ValueMapping[],\n  rangeToTextMapping: RangeMap,\n  value: TimeSeriesValue\n) => {\n  if (rangeToTextMapping.from === undefined || rangeToTextMapping.to === undefined || value === undefined) {\n    return allValueMappings;\n  }\n\n  if (\n    value === null &&\n    rangeToTextMapping.from &&\n    rangeToTextMapping.to &&\n    rangeToTextMapping.from.toLowerCase() === 'null' &&\n    rangeToTextMapping.to.toLowerCase() === 'null'\n  ) {\n    return allValueMappings.concat(rangeToTextMapping);\n  }\n\n  const valueAsNumber = parseFloat(value as string);\n  const fromAsNumber = parseFloat(rangeToTextMapping.from as string);\n  const toAsNumber = parseFloat(rangeToTextMapping.to as string);\n\n  if (isNaN(valueAsNumber) || isNaN(fromAsNumber) || isNaN(toAsNumber)) {\n    return allValueMappings;\n  }\n\n  if (valueAsNumber >= fromAsNumber && valueAsNumber <= toAsNumber) {\n    return allValueMappings.concat(rangeToTextMapping);\n  }\n\n  return allValueMappings;\n};\n\nconst getAllFormattedValueMappings = (valueMappings: ValueMapping[], value: TimeSeriesValue) => {\n  const allFormattedValueMappings = valueMappings.reduce(\n    (allValueMappings, valueMapping) => {\n      if (valueMapping.type === MappingType.ValueToText) {\n        allValueMappings = addValueToTextMappingText(allValueMappings, valueMapping as ValueMap, value);\n      } else if (valueMapping.type === MappingType.RangeToText) {\n        allValueMappings = addRangeToTextMappingText(allValueMappings, valueMapping as RangeMap, value);\n      }\n\n      return allValueMappings;\n    },\n    [] as ValueMapping[]\n  );\n\n  allFormattedValueMappings.sort((t1, t2) => {\n    return t1.id - t2.id;\n  });\n\n  return allFormattedValueMappings;\n};\n\nexport const getMappedValue = (valueMappings: ValueMapping[], value: TimeSeriesValue): ValueMapping => {\n  return getAllFormattedValueMappings(valueMappings, value)[0];\n};\n","export * from './Registry';\nexport * from './deprecationWarning';\nexport * from './csv';\nexport * from './logs';\nexport * from './labels';\nexport * from './labels';\nexport * from './object';\nexport * from './thresholds';\n\nexport { getMappedValue } from './valueMappings';\n","import React from 'react';\nimport { config, GrafanaBootConfig } from '@grafana/runtime';\nimport { GrafanaThemeType, ThemeContext, getTheme } from '@grafana/ui';\n\nexport const ConfigContext = React.createContext<GrafanaBootConfig>(config);\nexport const ConfigConsumer = ConfigContext.Consumer;\n\nexport const provideConfig = (component: React.ComponentType<any>) => {\n  const ConfigProvider = (props: any) => (\n    <ConfigContext.Provider value={config}>{React.createElement(component, { ...props })}</ConfigContext.Provider>\n  );\n\n  return ConfigProvider;\n};\n\nexport const getCurrentThemeName = () =>\n  config.bootData.user.lightTheme ? GrafanaThemeType.Light : GrafanaThemeType.Dark;\n\nexport const getCurrentTheme = () => getTheme(getCurrentThemeName());\n\nexport const ThemeProvider = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <ConfigConsumer>\n      {config => {\n        return <ThemeContext.Provider value={getCurrentTheme()}>{children}</ThemeContext.Provider>;\n      }}\n    </ConfigConsumer>\n  );\n};\n\nexport const provideTheme = (component: React.ComponentType<any>) => {\n  return provideConfig((props: any) => <ThemeProvider>{React.createElement(component, { ...props })}</ThemeProvider>);\n};\n","/**\n * Currently implemented with:\n * https://docs.angularjs.org/api/ng/service/$http#usage\n * but that will likely change in the future\n */\nexport type BackendSrvRequest = {\n  url: string;\n  retry?: number;\n  headers?: any;\n  method?: string;\n\n  // Show a message with the result\n  showSuccessAlert?: boolean;\n\n  [key: string]: any;\n};\n\nexport interface BackendSrv {\n  get(url: string, params?: any): Promise<any>;\n\n  delete(url: string): Promise<any>;\n\n  post(url: string, data?: any): Promise<any>;\n\n  patch(url: string, data?: any): Promise<any>;\n\n  put(url: string, data?: any): Promise<any>;\n\n  // If there is an error, set: err.isHandled = true\n  // otherwise the backend will show a message for you\n  request(options: BackendSrvRequest): Promise<any>;\n}\n\nlet singletonInstance: BackendSrv;\n\nexport function setBackendSrv(instance: BackendSrv) {\n  singletonInstance = instance;\n}\n\nexport function getBackendSrv(): BackendSrv {\n  return singletonInstance;\n}\n","export interface AngularComponent {\n  destroy(): void;\n  digest(): void;\n  getScope(): any;\n}\n\nexport interface AngularLoader {\n  load(elem: any, scopeProps: any, template: string): AngularComponent;\n}\n\nlet instance: AngularLoader;\n\nexport function setAngularLoader(v: AngularLoader) {\n  instance = v;\n}\n\nexport function getAngularLoader(): AngularLoader {\n  return instance;\n}\n","export interface LocationUpdate {\n  path?: string;\n  query?: UrlQueryMap;\n\n  /**\n   * Add the query argument to the existing URL\n   */\n  partial?: boolean;\n\n  /**\n   * Do not change this unless you are the angular router\n   */\n  routeParams?: UrlQueryMap;\n\n  /*\n   * If true this will replace url state (ie cause no new browser history)\n   */\n  replace?: boolean;\n}\n\nexport type UrlQueryValue = string | number | boolean | string[] | number[] | boolean[];\nexport type UrlQueryMap = { [s: string]: UrlQueryValue };\n\nexport interface LocationSrv {\n  update(options: LocationUpdate): void;\n}\n\nlet singletonInstance: LocationSrv;\n\nexport function setLocationSrv(instance: LocationSrv) {\n  singletonInstance = instance;\n}\n\nexport function getLocationSrv(): LocationSrv {\n  return singletonInstance;\n}\n","export * from './backendSrv';\nexport * from './AngularLoader';\nexport * from './dataSourceSrv';\nexport * from './LocationSrv';\n","import extend from 'lodash/extend';\nimport { GrafanaTheme, getTheme, GrafanaThemeType, PanelPluginMeta, DataSourceInstanceSettings } from '@grafana/ui';\n\nexport interface BuildInfo {\n  version: string;\n  commit: string;\n  isEnterprise: boolean;\n  env: string;\n  latestVersion: string;\n  hasUpdate: boolean;\n}\n\ninterface FeatureToggles {\n  transformations: boolean;\n}\nexport class GrafanaBootConfig {\n  datasources: { [str: string]: DataSourceInstanceSettings } = {};\n  panels: { [key: string]: PanelPluginMeta } = {};\n  appSubUrl = '';\n  windowTitlePrefix = '';\n  buildInfo: BuildInfo = {} as BuildInfo;\n  newPanelTitle = '';\n  bootData: any;\n  externalUserMngLinkUrl = '';\n  externalUserMngLinkName = '';\n  externalUserMngInfo = '';\n  allowOrgCreate = false;\n  disableLoginForm = false;\n  defaultDatasource = '';\n  alertingEnabled = false;\n  alertingErrorOrTimeout = '';\n  alertingNoDataOrNullValues = '';\n  authProxyEnabled = false;\n  exploreEnabled = false;\n  ldapEnabled = false;\n  samlEnabled = false;\n  oauth: any;\n  disableUserSignUp = false;\n  loginHint: any;\n  passwordHint: any;\n  loginError: any;\n  viewersCanEdit = false;\n  editorsCanAdmin = false;\n  disableSanitizeHtml = false;\n  theme: GrafanaTheme;\n  pluginsToPreload: string[] = [];\n  featureToggles: FeatureToggles = {\n    transformations: false,\n  };\n\n  constructor(options: GrafanaBootConfig) {\n    this.theme = options.bootData.user.lightTheme ? getTheme(GrafanaThemeType.Light) : getTheme(GrafanaThemeType.Dark);\n\n    const defaults = {\n      datasources: {},\n      windowTitlePrefix: 'Grafana - ',\n      panels: {},\n      newPanelTitle: 'Panel Title',\n      playlist_timespan: '1m',\n      unsaved_changes_warning: true,\n      appSubUrl: '',\n      buildInfo: {\n        version: 'v1.0',\n        commit: '1',\n        env: 'production',\n        isEnterprise: false,\n      },\n      viewersCanEdit: false,\n      editorsCanAdmin: false,\n      disableSanitizeHtml: false,\n    };\n\n    extend(this, defaults, options);\n  }\n}\n\nconst bootData = (window as any).grafanaBootData || {\n  settings: {},\n  user: {},\n};\n\nconst options = bootData.settings;\noptions.bootData = bootData;\n\nexport const config = new GrafanaBootConfig(options);\n","import { config } from '../config';\n\n// @ts-ignore\nimport System from 'systemjs/dist/system.js';\n\nexport interface PluginCssOptions {\n  light: string;\n  dark: string;\n}\n\nexport const SystemJS = System;\n\nexport function loadPluginCss(options: PluginCssOptions): Promise<any> {\n  const theme = config.bootData.user.lightTheme ? options.light : options.dark;\n  return SystemJS.import(`${theme}!css`);\n}\n","export * from './services';\nexport * from './config';\nexport { loadPluginCss, SystemJS } from './utils/plugin';\n","import { TimeZone } from '../types/time';\n/* tslint:disable:import-blacklist ban ban-types */\nimport moment, { Moment, MomentInput, DurationInputArg1 } from 'moment';\nexport interface DateTimeBuiltinFormat {\n  __momentBuiltinFormatBrand: any;\n}\nexport const ISO_8601: DateTimeBuiltinFormat = moment.ISO_8601;\nexport type DateTimeInput = Date | string | number | Array<string | number> | DateTime; // null | undefined\nexport type FormatInput = string | DateTimeBuiltinFormat | undefined;\nexport type DurationInput = string | number | DateTimeDuration;\nexport type DurationUnit =\n  | 'year'\n  | 'years'\n  | 'y'\n  | 'month'\n  | 'months'\n  | 'M'\n  | 'week'\n  | 'weeks'\n  | 'w'\n  | 'day'\n  | 'days'\n  | 'd'\n  | 'hour'\n  | 'hours'\n  | 'h'\n  | 'minute'\n  | 'minutes'\n  | 'm'\n  | 'second'\n  | 'seconds'\n  | 's'\n  | 'millisecond'\n  | 'milliseconds'\n  | 'ms'\n  | 'quarter'\n  | 'quarters'\n  | 'Q';\n\nexport interface DateTimeLocale {\n  firstDayOfWeek: () => number;\n}\n\nexport interface DateTimeDuration {\n  asHours: () => number;\n  hours: () => number;\n  minutes: () => number;\n  seconds: () => number;\n  asSeconds: () => number;\n}\n\nexport interface DateTime extends Object {\n  add: (amount?: DateTimeInput, unit?: DurationUnit) => DateTime;\n  set: (unit: DurationUnit, amount: DateTimeInput) => void;\n  diff: (amount: DateTimeInput, unit?: DurationUnit, truncate?: boolean) => number;\n  endOf: (unitOfTime: DurationUnit) => DateTime;\n  format: (formatInput?: FormatInput) => string;\n  fromNow: (withoutSuffix?: boolean) => string;\n  from: (formaInput: DateTimeInput) => string;\n  isSame: (input?: DateTimeInput, granularity?: DurationUnit) => boolean;\n  isValid: () => boolean;\n  local: () => DateTime;\n  locale: (locale: string) => DateTime;\n  startOf: (unitOfTime: DurationUnit) => DateTime;\n  subtract: (amount?: DateTimeInput, unit?: DurationUnit) => DateTime;\n  toDate: () => Date;\n  toISOString: () => string;\n  isoWeekday: (day?: number | string) => number | string;\n  valueOf: () => number;\n  unix: () => number;\n  utc: () => DateTime;\n  utcOffset: () => number;\n  hour?: () => number;\n  minute?: () => number;\n}\n\nexport const setLocale = (language: string) => {\n  moment.locale(language);\n};\n\nexport const getLocaleData = (): DateTimeLocale => {\n  return moment.localeData();\n};\n\nexport const isDateTime = (value: any): value is DateTime => {\n  return moment.isMoment(value);\n};\n\nexport const toUtc = (input?: DateTimeInput, formatInput?: FormatInput): DateTime => {\n  return moment.utc(input as MomentInput, formatInput) as DateTime;\n};\n\nexport const toDuration = (input?: DurationInput, unit?: DurationUnit): DateTimeDuration => {\n  return moment.duration(input as DurationInputArg1, unit) as DateTimeDuration;\n};\n\nexport const dateTime = (input?: DateTimeInput, formatInput?: FormatInput): DateTime => {\n  return moment(input as MomentInput, formatInput) as DateTime;\n};\n\nexport const dateTimeAsMoment = (input?: DateTimeInput) => {\n  return dateTime(input) as Moment;\n};\n\nexport const dateTimeForTimeZone = (\n  timezone?: TimeZone,\n  input?: DateTimeInput,\n  formatInput?: FormatInput\n): DateTime => {\n  if (timezone === 'utc') {\n    return toUtc(input, formatInput);\n  }\n\n  return dateTime(input, formatInput);\n};\n","// Libraries\nimport _ from 'lodash';\nimport {\n  Threshold,\n  getMappedValue,\n  FieldConfig,\n  DisplayProcessor,\n  DecimalInfo,\n  DisplayValue,\n  DecimalCount,\n} from '@grafana/data';\n\n// Utils\nimport { getValueFormat } from './valueFormats/valueFormats';\nimport { getColorFromHexRgbOrName } from './namedColorsPalette';\n\n// Types\nimport { GrafanaTheme, GrafanaThemeType } from '../types/index';\n\ninterface DisplayProcessorOptions {\n  config?: FieldConfig;\n\n  // Context\n  isUtc?: boolean;\n  theme?: GrafanaTheme; // Will pick 'dark' if not defined\n}\n\nexport function getDisplayProcessor(options?: DisplayProcessorOptions): DisplayProcessor {\n  if (options && !_.isEmpty(options)) {\n    const field = options.config ? options.config : {};\n    const formatFunc = getValueFormat(field.unit || 'none');\n\n    return (value: any) => {\n      const { theme } = options;\n      const { mappings, thresholds } = field;\n      let color;\n\n      let text = _.toString(value);\n      let numeric = toNumber(value);\n\n      let shouldFormat = true;\n      if (mappings && mappings.length > 0) {\n        const mappedValue = getMappedValue(mappings, value);\n\n        if (mappedValue) {\n          text = mappedValue.text;\n          const v = toNumber(text);\n\n          if (!isNaN(v)) {\n            numeric = v;\n          }\n\n          shouldFormat = false;\n        }\n      }\n\n      if (!isNaN(numeric)) {\n        if (shouldFormat && !_.isBoolean(value)) {\n          const { decimals, scaledDecimals } = getDecimalsForValue(value, field.decimals);\n          text = formatFunc(numeric, decimals, scaledDecimals, options.isUtc);\n\n          // Check if the formatted text mapped to a different value\n          if (mappings && mappings.length > 0) {\n            const mappedValue = getMappedValue(mappings, text);\n            if (mappedValue) {\n              text = mappedValue.text;\n            }\n          }\n        }\n        if (thresholds && thresholds.length) {\n          color = getColorFromThreshold(numeric, thresholds, theme);\n        }\n      }\n\n      if (!text) {\n        if (field && field.noValue) {\n          text = field.noValue;\n        } else {\n          text = ''; // No data?\n        }\n      }\n      return { text, numeric, color };\n    };\n  }\n\n  return toStringProcessor;\n}\n\n/** Will return any value as a number or NaN */\nfunction toNumber(value: any): number {\n  if (typeof value === 'number') {\n    return value;\n  }\n  if (value === null || value === undefined || Array.isArray(value)) {\n    return NaN; // lodash calls them 0\n  }\n  if (typeof value === 'boolean') {\n    return value ? 1 : 0;\n  }\n  return _.toNumber(value);\n}\n\nfunction toStringProcessor(value: any): DisplayValue {\n  return { text: _.toString(value), numeric: toNumber(value) };\n}\n\nexport function getColorFromThreshold(value: number, thresholds: Threshold[], theme?: GrafanaTheme): string {\n  const themeType = theme ? theme.type : GrafanaThemeType.Dark;\n\n  if (thresholds.length === 1) {\n    return getColorFromHexRgbOrName(thresholds[0].color, themeType);\n  }\n\n  const atThreshold = thresholds.filter(threshold => value === threshold.value)[0];\n  if (atThreshold) {\n    return getColorFromHexRgbOrName(atThreshold.color, themeType);\n  }\n\n  const belowThreshold = thresholds.filter(threshold => value > threshold.value);\n\n  if (belowThreshold.length > 0) {\n    const nearestThreshold = belowThreshold.sort((t1, t2) => t2.value - t1.value)[0];\n    return getColorFromHexRgbOrName(nearestThreshold.color, themeType);\n  }\n\n  // Use the first threshold as the default color\n  return getColorFromHexRgbOrName(thresholds[0].color, themeType);\n}\n\n// function getSignificantDigitCount(n: number): number {\n//   // remove decimal and make positive\n//   n = Math.abs(parseInt(String(n).replace('.', ''), 10));\n//   if (n === 0) {\n//     return 0;\n//   }\n//\n//   // kill the 0s at the end of n\n//   while (n !== 0 && n % 10 === 0) {\n//     n /= 10;\n//   }\n//\n//   // get number of digits\n//   return Math.floor(Math.log(n) / Math.LN10) + 1;\n// }\n\nexport function getDecimalsForValue(value: number, decimalOverride?: DecimalCount): DecimalInfo {\n  if (_.isNumber(decimalOverride)) {\n    // It's important that scaledDecimals is null here\n    return { decimals: decimalOverride, scaledDecimals: null };\n  }\n\n  let dec = -Math.floor(Math.log(value) / Math.LN10) + 1;\n  const magn = Math.pow(10, -dec);\n  const norm = value / magn; // norm is between 1.0 and 10.0\n  let size;\n\n  if (norm < 1.5) {\n    size = 1;\n  } else if (norm < 3) {\n    size = 2;\n    // special case for 2.5, requires an extra decimal\n    if (norm > 2.25) {\n      size = 2.5;\n      ++dec;\n    }\n  } else if (norm < 7.5) {\n    size = 5;\n  } else {\n    size = 10;\n  }\n\n  size *= magn;\n\n  // reduce starting decimals if not needed\n  if (value % 1 === 0) {\n    dec = 0;\n  }\n\n  const decimals = Math.max(0, dec);\n  const scaledDecimals = decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n\n  return { decimals, scaledDecimals };\n}\n","var path = 'public/app/features/dashboard/components/DashExportModal/template.html';\nvar html = \"<div class=share-modal-header>\\n\\t<div class=share-modal-big-icon>\\n\\t\\t<i class=\\\"fa fa-cloud-upload\\\"></i>\\n\\t</div>\\n\\t<div>\\n\\t\\t<gf-form-switch class=gf-form label=\\\"Export for sharing externally\\\" label-class=width-16 checked=ctrl.shareExternally tooltip=\\\"Useful for sharing dashboard publicly on grafana.com. Will templatize data source names. Can then only be used with the specific dashboard import API.\\\">\\n\\t\\t</gf-form-switch>\\n\\n\\t\\t<div class=gf-form-button-row>\\n\\t\\t\\t<button type=button class=\\\"btn gf-form-btn width-10 btn-primary\\\" ng-click=ctrl.saveDashboardAsFile()>\\n\\t\\t\\t  Save to file\\n\\t\\t\\t</button>\\n\\t\\t\\t<button type=button class=\\\"btn gf-form-btn width-10 btn-secondary\\\" ng-click=ctrl.viewJson()>\\n\\t\\t\\t  View JSON\\n\\t\\t\\t</button>\\n\\t\\t\\t<a class=\\\"btn btn-link\\\" ng-click=ctrl.dismiss()>Cancel</a>\\n\\t\\t</div>\\n\\n\\t</div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import angular from 'angular';\n\nconst coreModule = angular.module('grafana.core', ['ngRoute']);\n\n// legacy modules\nconst angularModules = [\n  coreModule,\n  angular.module('grafana.controllers', []),\n  angular.module('grafana.directives', []),\n  angular.module('grafana.factories', []),\n  angular.module('grafana.services', []),\n  angular.module('grafana.filters', []),\n  angular.module('grafana.routes', []),\n];\n\nexport { angularModules, coreModule };\n\nexport default coreModule;\n","var path = 'public/app/features/manage-dashboards/partials/dashboard_import.html';\nvar html = \"<page-header model=ctrl.navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\" ng-cloak>\\n  <div ng-if=\\\"ctrl.step === 1\\\">\\n\\n    <form class=page-action-bar>\\n      <div class=page-action-bar__spacer></div>\\n      <dash-upload on-upload=ctrl.onUpload(dash)></dash-upload>\\n    </form>\\n\\n    <h5 class=section-heading>Grafana.com Dashboard</h5>\\n\\n    <div class=gf-form-group>\\n      <div class=\\\"gf-form gf-form--grow\\\">\\n        <input type=text class=\\\"gf-form-input max-width-30\\\" ng-model=ctrl.gnetUrl placeholder=\\\"Paste Grafana.com dashboard url or id\\\" ng-blur=ctrl.checkGnetDashboard()>\\n      </div>\\n      <div class=gf-form ng-if=ctrl.gnetError>\\n        <label class=\\\"gf-form-label text-warning\\\">\\n          <i class=\\\"fa fa-warning\\\"></i>\\n          {{ctrl.gnetError}}\\n        </label>\\n      </div>\\n    </div>\\n\\n    <h5 class=section-heading>Or paste JSON</h5>\\n\\n    <div class=gf-form-group>\\n      <div class=gf-form>\\n        <textarea rows=10 data-share-panel-url=\\\"\\\" class=gf-form-input ng-model=ctrl.jsonText></textarea>\\n      </div>\\n      <button type=button class=\\\"btn btn-secondary\\\" ng-click=ctrl.loadJsonText()>\\n        <i class=\\\"fa fa-paste\\\"></i>\\n        Load\\n      </button>\\n      <span ng-if=ctrl.parseError class=\\\"text-error p-l-1\\\">\\n        <i class=\\\"fa fa-warning\\\"></i>\\n        {{ctrl.parseError}}\\n      </span>\\n    </div>\\n  </div>\\n\\n  <div ng-if=\\\"ctrl.step === 2\\\">\\n    <div class=gf-form-group ng-if=ctrl.dash.gnetId>\\n      <h3 class=section-heading>\\n        Importing Dashboard from\\n        <a href=https://grafana.com/dashboards/{{ctrl.dash.gnetId}} class=external-link target=_blank>Grafana.com</a>\\n      </h3>\\n\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-15\\\">Published by</label>\\n        <label class=\\\"gf-form-label width-15\\\">{{ctrl.gnetInfo.orgName}}</label>\\n      </div>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-15\\\">Updated on</label>\\n        <label class=\\\"gf-form-label width-15\\\">{{ctrl.gnetInfo.updatedAt | date : 'yyyy-MM-dd HH:mm:ss'}}</label>\\n      </div>\\n    </div>\\n\\n    <h3 class=section-heading>\\n      Options\\n    </h3>\\n\\n    <div class=gf-form-group>\\n      <div class=gf-form-inline>\\n        <div class=\\\"gf-form gf-form--grow\\\">\\n          <label class=\\\"gf-form-label width-15\\\">Name</label>\\n          <input type=text class=gf-form-input ng-model=ctrl.dash.title give-focus=true ng-change=ctrl.titleChanged() ng-class=\\\"{'validation-error': ctrl.nameExists || !ctrl.dash.title}\\\">\\n          <label class=\\\"gf-form-label text-success\\\" ng-if=\\\"ctrl.titleTouched && !ctrl.hasNameValidationError\\\">\\n            <i class=\\\"fa fa-check\\\"></i>\\n          </label>\\n        </div>\\n      </div>\\n\\n      <div class=gf-form-inline ng-if=ctrl.hasNameValidationError>\\n        <div class=\\\"gf-form offset-width-15 gf-form--grow\\\">\\n          <label class=\\\"gf-form-label text-warning gf-form-label--grow\\\">\\n            <i class=\\\"fa fa-warning\\\"></i>\\n            {{ctrl.nameValidationError}}\\n          </label>\\n        </div>\\n      </div>\\n\\n      <div class=gf-form-inline>\\n        <div class=\\\"gf-form gf-form--grow\\\">\\n          <folder-picker label-class=width-15 initial-folder-id=ctrl.folderId initial-title=ctrl.initialFolderTitle on-change=ctrl.onFolderChange($folder) on-load=ctrl.onFolderChange($folder) enter-folder-creation=ctrl.onEnterFolderCreation() exit-folder-creation=ctrl.onExitFolderCreation() enable-create-new=true>\\n          </folder-picker>\\n        </div>\\n      </div>\\n\\n      <div class=gf-form-inline>\\n        <div class=\\\"gf-form gf-form--grow\\\">\\n          <span class=\\\"gf-form-label width-15\\\">\\n            Unique identifier (uid)\\n            <info-popover mode=right-normal>\\n                The unique identifier (uid) of a dashboard can be used for uniquely identify a dashboard between multiple Grafana installs.\\n                The uid allows having consistent URL’s for accessing dashboards so changing the title of a dashboard will not break any\\n                bookmarked links to that dashboard.\\n            </info-popover>\\n          </span>\\n          <input type=text class=gf-form-input disabled=disabled ng-model=ctrl.autoGenerateUidValue ng-if=ctrl.autoGenerateUid>\\n          <a class=\\\"btn btn-secondary gf-form-btn\\\" href=# ng-click=\\\"ctrl.autoGenerateUid = false\\\" ng-if=ctrl.autoGenerateUid>change</a>\\n          <input type=text class=gf-form-input maxlength=40 placeholder=\\\"optional, will be auto-generated if empty\\\" ng-model=ctrl.dash.uid ng-change=ctrl.uidChanged() ng-if=!ctrl.autoGenerateUid>\\n          <label class=\\\"gf-form-label text-success\\\" ng-if=\\\"!ctrl.autoGenerateUid && !ctrl.hasUidValidationError\\\">\\n            <i class=\\\"fa fa-check\\\"></i>\\n          </label>\\n        </div>\\n      </div>\\n\\n      <div class=gf-form-inline ng-if=ctrl.hasUidValidationError>\\n        <div class=\\\"gf-form offset-width-15 gf-form--grow\\\">\\n          <label class=\\\"gf-form-label text-warning gf-form-label--grow\\\">\\n            <i class=\\\"fa fa-warning\\\"></i>\\n            {{ctrl.uidValidationError}}\\n          </label>\\n        </div>\\n      </div>\\n\\n      <div ng-repeat=\\\"input in ctrl.inputs\\\">\\n        <div class=gf-form>\\n          <label class=\\\"gf-form-label width-15\\\">\\n            {{input.label}}\\n            <info-popover mode=right-normal>\\n              {{input.info}}\\n            </info-popover>\\n          </label>\\n          <!-- Data source input -->\\n          <div class=gf-form-select-wrapper style=width:100% ng-if=\\\"input.type === 'datasource'\\\">\\n            <select class=gf-form-input ng-model=input.value ng-options=\\\"v.value as v.text for v in input.options\\\" ng-change=ctrl.inputValueChanged()>\\n              <option value=\\\"\\\" ng-hide=input.value>{{input.info}}</option>\\n            </select>\\n          </div>\\n          <!-- Constant input -->\\n          <input ng-if=\\\"input.type === 'constant'\\\" type=text class=gf-form-input ng-model=input.value placeholder={{input.default}} ng-change=ctrl.inputValueChanged()>\\n          <label class=\\\"gf-form-label text-success\\\" ng-show=input.value>\\n            <i class=\\\"fa fa-check\\\"></i>\\n          </label>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=gf-form-button-row>\\n      <button type=button class=\\\"btn btn-primary width-12\\\" ng-click=ctrl.saveDashboard() ng-hide=\\\"ctrl.nameExists || ctrl.uidExists\\\" ng-disabled=!ctrl.isValid()>\\n        Import\\n      </button>\\n      <button type=button class=\\\"btn btn-danger width-12\\\" ng-click=ctrl.saveDashboard() ng-show=\\\"ctrl.nameExists || ctrl.uidExists\\\" ng-disabled=!ctrl.isValid()>\\n        Import (Overwrite)\\n      </button>\\n      <a class=\\\"btn btn-link\\\" ng-click=ctrl.back()>Cancel</a>\\n    </div>\\n\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import config from 'app/core/config';\nimport _ from 'lodash';\nimport coreModule from 'app/core/core_module';\n\nexport class User {\n  id: number;\n  isGrafanaAdmin: any;\n  isSignedIn: any;\n  orgRole: any;\n  orgId: number;\n  orgName: string;\n  orgCount: number;\n  timezone: string;\n  helpFlags1: number;\n  lightTheme: boolean;\n  hasEditPermissionInFolders: boolean;\n\n  constructor() {\n    if (config.bootData.user) {\n      _.extend(this, config.bootData.user);\n    }\n  }\n}\n\nexport class ContextSrv {\n  pinned: any;\n  version: any;\n  user: User;\n  isSignedIn: any;\n  isGrafanaAdmin: any;\n  isEditor: any;\n  sidemenuSmallBreakpoint = false;\n  hasEditPermissionInFolders: boolean;\n\n  constructor() {\n    if (!config.bootData) {\n      config.bootData = { user: {}, settings: {} };\n    }\n\n    this.user = new User();\n    this.isSignedIn = this.user.isSignedIn;\n    this.isGrafanaAdmin = this.user.isGrafanaAdmin;\n    this.isEditor = this.hasRole('Editor') || this.hasRole('Admin');\n    this.hasEditPermissionInFolders = this.user.hasEditPermissionInFolders;\n  }\n\n  hasRole(role: string) {\n    return this.user.orgRole === role;\n  }\n\n  isGrafanaVisible() {\n    return !!(document.visibilityState === undefined || document.visibilityState === 'visible');\n  }\n\n  hasAccessToExplore() {\n    return (this.isEditor || config.viewersCanEdit) && config.exploreEnabled;\n  }\n}\n\nconst contextSrv = new ContextSrv();\nexport { contextSrv };\n\ncoreModule.factory('contextSrv', () => {\n  return contextSrv;\n});\n","import React, { PureComponent } from 'react';\nimport * as PopperJS from 'popper.js';\nimport { Manager, Popper as ReactPopper, PopperArrowProps } from 'react-popper';\nimport { Portal } from '../Portal/Portal';\nimport Transition from 'react-transition-group/Transition';\nimport { PopoverContent } from './Tooltip';\n\nconst defaultTransitionStyles = {\n  transition: 'opacity 200ms linear',\n  opacity: 0,\n};\n\nconst transitionStyles: { [key: string]: object } = {\n  exited: { opacity: 0 },\n  entering: { opacity: 0 },\n  entered: { opacity: 1, transitionDelay: '0s' },\n  exiting: { opacity: 0, transitionDelay: '500ms' },\n};\n\nexport type RenderPopperArrowFn = (props: { arrowProps: PopperArrowProps; placement: string }) => JSX.Element;\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  show: boolean;\n  placement?: PopperJS.Placement;\n  content: PopoverContent;\n  referenceElement: PopperJS.ReferenceObject;\n  wrapperClassName?: string;\n  renderArrow?: RenderPopperArrowFn;\n  eventsEnabled?: boolean;\n}\n\nclass Popover extends PureComponent<Props> {\n  static defaultProps: Partial<Props> = {\n    eventsEnabled: true,\n  };\n\n  render() {\n    const {\n      content,\n      show,\n      placement,\n      onMouseEnter,\n      onMouseLeave,\n      className,\n      wrapperClassName,\n      renderArrow,\n      referenceElement,\n      eventsEnabled,\n    } = this.props;\n\n    return (\n      <Manager>\n        <Transition in={show} timeout={100} mountOnEnter={true} unmountOnExit={true}>\n          {transitionState => {\n            return (\n              <Portal>\n                <ReactPopper\n                  placement={placement}\n                  referenceElement={referenceElement}\n                  eventsEnabled={eventsEnabled}\n                  // TODO: move modifiers config to popper controller\n                  modifiers={{ preventOverflow: { enabled: true, boundariesElement: 'window' } }}\n                >\n                  {({ ref, style, placement, arrowProps, scheduleUpdate }) => {\n                    return (\n                      <div\n                        onMouseEnter={onMouseEnter}\n                        onMouseLeave={onMouseLeave}\n                        ref={ref}\n                        style={{\n                          ...style,\n                          ...defaultTransitionStyles,\n                          ...transitionStyles[transitionState],\n                        }}\n                        data-placement={placement}\n                        className={`${wrapperClassName}`}\n                      >\n                        <div className={className}>\n                          {typeof content === 'string' && content}\n                          {React.isValidElement(content) && React.cloneElement(content)}\n                          {typeof content === 'function' &&\n                            content({\n                              updatePopperPosition: scheduleUpdate,\n                            })}\n                          {renderArrow &&\n                            renderArrow({\n                              arrowProps,\n                              placement,\n                            })}\n                        </div>\n                      </div>\n                    );\n                  }}\n                </ReactPopper>\n              </Portal>\n            );\n          }}\n        </Transition>\n      </Manager>\n    );\n  }\n}\n\nexport { Popover };\n","import { useRef, useEffect } from 'react';\n\nexport const useRefMounted = () => {\n  const refMounted = useRef(false);\n  useEffect(() => {\n    refMounted.current = true;\n    return () => {\n      refMounted.current = false;\n    };\n  });\n  return refMounted;\n};\n","import { useState, useEffect } from 'react';\nimport { DataSourceStatus } from '@grafana/ui/src/types/datasource';\nimport { AbsoluteTimeRange } from '@grafana/data';\n\nimport LokiLanguageProvider from 'app/plugins/datasource/loki/language_provider';\nimport { CascaderOption } from 'app/plugins/datasource/loki/components/LokiQueryFieldForm';\nimport { useRefMounted } from 'app/core/hooks/useRefMounted';\n\n/**\n *\n * @param languageProvider\n * @param languageProviderInitialised\n * @param activeOption rc-cascader provided option used to fetch option's values that hasn't been loaded yet\n *\n * @description Fetches missing labels and enables labels refresh\n */\nexport const useLokiLabels = (\n  languageProvider: LokiLanguageProvider,\n  languageProviderInitialised: boolean,\n  activeOption: CascaderOption[],\n  absoluteRange: AbsoluteTimeRange,\n  datasourceStatus: DataSourceStatus,\n  initialDatasourceStatus?: DataSourceStatus // used for test purposes\n) => {\n  const mounted = useRefMounted();\n\n  // State\n  const [logLabelOptions, setLogLabelOptions] = useState([]);\n  const [shouldTryRefreshLabels, setRefreshLabels] = useState(false);\n  const [prevDatasourceStatus, setPrevDatasourceStatus] = useState(\n    initialDatasourceStatus || DataSourceStatus.Connected\n  );\n  const [shouldForceRefreshLabels, setForceRefreshLabels] = useState(false);\n\n  // Async\n  const fetchOptionValues = async (option: string) => {\n    await languageProvider.fetchLabelValues(option, absoluteRange);\n    if (mounted.current) {\n      setLogLabelOptions(languageProvider.logLabelOptions);\n    }\n  };\n\n  const tryLabelsRefresh = async () => {\n    await languageProvider.refreshLogLabels(absoluteRange, shouldForceRefreshLabels);\n\n    if (mounted.current) {\n      setRefreshLabels(false);\n      setForceRefreshLabels(false);\n      setLogLabelOptions(languageProvider.logLabelOptions);\n    }\n  };\n\n  // Effects\n\n  // This effect performs loading of options that hasn't been loaded yet\n  // It's a subject of activeOption state change only. This is because of specific behavior or rc-cascader\n  // https://github.com/react-component/cascader/blob/master/src/Cascader.jsx#L165\n  useEffect(() => {\n    if (languageProviderInitialised) {\n      const targetOption = activeOption[activeOption.length - 1];\n      if (targetOption) {\n        const nextOptions = logLabelOptions.map(option => {\n          if (option.value === targetOption.value) {\n            return {\n              ...option,\n              loading: true,\n            };\n          }\n          return option;\n        });\n        setLogLabelOptions(nextOptions); // to set loading\n        fetchOptionValues(targetOption.value);\n      }\n    }\n  }, [activeOption]);\n\n  // This effect is performed on shouldTryRefreshLabels or shouldForceRefreshLabels state change only.\n  // Since shouldTryRefreshLabels is reset AFTER the labels are refreshed we are secured in case of trying to refresh\n  // when previous refresh hasn't finished yet\n  useEffect(() => {\n    if (shouldTryRefreshLabels || shouldForceRefreshLabels) {\n      tryLabelsRefresh();\n    }\n  }, [shouldTryRefreshLabels, shouldForceRefreshLabels]);\n\n  // This effect is performed on datasourceStatus state change only.\n  // We want to make sure to only force refresh AFTER a disconnected state thats why we store the previous datasourceStatus in state\n  useEffect(() => {\n    if (datasourceStatus === DataSourceStatus.Connected && prevDatasourceStatus === DataSourceStatus.Disconnected) {\n      setForceRefreshLabels(true);\n    }\n    setPrevDatasourceStatus(datasourceStatus);\n  }, [datasourceStatus]);\n\n  return {\n    logLabelOptions,\n    setLogLabelOptions,\n    refreshLabels: () => setRefreshLabels(true),\n  };\n};\n","import { useState, useEffect } from 'react';\nimport Prism from 'prismjs';\nimport { DataSourceStatus } from '@grafana/ui/src/types/datasource';\nimport { AbsoluteTimeRange } from '@grafana/data';\nimport LokiLanguageProvider from 'app/plugins/datasource/loki/language_provider';\nimport { useLokiLabels } from 'app/plugins/datasource/loki/components/useLokiLabels';\nimport { CascaderOption } from 'app/plugins/datasource/loki/components/LokiQueryFieldForm';\nimport { useRefMounted } from 'app/core/hooks/useRefMounted';\n\nconst PRISM_SYNTAX = 'promql';\n\n/**\n *\n * @param languageProvider\n * @description Initializes given language provider, exposes Loki syntax and enables loading label option values\n */\nexport const useLokiSyntax = (\n  languageProvider: LokiLanguageProvider,\n  datasourceStatus: DataSourceStatus,\n  absoluteRange: AbsoluteTimeRange\n) => {\n  const mounted = useRefMounted();\n  // State\n  const [languageProviderInitialized, setLanguageProviderInitilized] = useState(false);\n  const [syntax, setSyntax] = useState(null);\n\n  /**\n   * Holds information about currently selected option from rc-cascader to perform effect\n   * that loads option values not fetched yet. Based on that useLokiLabels hook decides whether or not\n   * the option requires additional data fetching\n   */\n  const [activeOption, setActiveOption] = useState<CascaderOption[]>();\n\n  const { logLabelOptions, setLogLabelOptions, refreshLabels } = useLokiLabels(\n    languageProvider,\n    languageProviderInitialized,\n    activeOption,\n    absoluteRange,\n    datasourceStatus\n  );\n\n  // Async\n  const initializeLanguageProvider = async () => {\n    languageProvider.initialRange = absoluteRange;\n    await languageProvider.start();\n    Prism.languages[PRISM_SYNTAX] = languageProvider.getSyntax();\n    if (mounted.current) {\n      setLogLabelOptions(languageProvider.logLabelOptions);\n      setSyntax(languageProvider.getSyntax());\n      setLanguageProviderInitilized(true);\n    }\n  };\n\n  // Effects\n  useEffect(() => {\n    initializeLanguageProvider();\n  }, []);\n\n  return {\n    isSyntaxReady: languageProviderInitialized,\n    syntax,\n    logLabelOptions,\n    setActiveOption,\n    refreshLabels,\n  };\n};\n","import { FolderDTO } from 'app/types';\nimport { NavModelItem, NavModel } from '@grafana/data';\n\nexport function buildNavModel(folder: FolderDTO): NavModelItem {\n  return {\n    icon: 'fa fa-folder-open',\n    id: 'manage-folder',\n    subTitle: 'Manage folder dashboards & permissions',\n    url: '',\n    text: folder.title,\n    breadcrumbs: [{ title: 'Dashboards', url: 'dashboards' }],\n    children: [\n      {\n        active: false,\n        icon: 'fa fa-fw fa-th-large',\n        id: `folder-dashboards-${folder.uid}`,\n        text: 'Dashboards',\n        url: folder.url,\n      },\n      {\n        active: false,\n        icon: 'fa fa-fw fa-lock',\n        id: `folder-permissions-${folder.uid}`,\n        text: 'Permissions',\n        url: `${folder.url}/permissions`,\n      },\n      {\n        active: false,\n        icon: 'gicon gicon-cog',\n        id: `folder-settings-${folder.uid}`,\n        text: 'Settings',\n        url: `${folder.url}/settings`,\n      },\n    ],\n  };\n}\n\nexport function getLoadingNav(tabIndex: number): NavModel {\n  const main = buildNavModel({\n    id: 1,\n    uid: 'loading',\n    title: 'Loading',\n    url: 'url',\n    canSave: false,\n    version: 0,\n  });\n\n  main.children[tabIndex].active = true;\n\n  return {\n    main: main,\n    node: main.children[tabIndex],\n  };\n}\n","import _ from 'lodash';\n\nexport function getMessageFromError(err: any): string | null {\n  if (err && !_.isString(err)) {\n    if (err.message) {\n      return err.message;\n    } else if (err.data && err.data.message) {\n      return err.data.message;\n    } else if (err.statusText) {\n      return err.statusText;\n    } else {\n      return JSON.stringify(err);\n    }\n  }\n\n  return err;\n}\n","var path = 'public/app/plugins/panel/table/column_options.html';\nvar html = \"<div class=edit-tab-content ng-repeat=\\\"style in editor.panel.styles\\\">\\n  <div class=\\\"section gf-form-group\\\">\\n    <h5 class=section-heading>Options</h5>\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-12\\\">Apply to columns named</label>\\n        <input type=text placeholder=\\\"Name or regex\\\" class=\\\"gf-form-input width-13\\\" ng-model=style.pattern bs-tooltip=\\\"'Specify regex using /my.*regex/ syntax'\\\" bs-typeahead=editor.getColumnNames ng-blur=editor.render() data-min-length=0 data-items=100 ng-model-onblur data-placement=right>\\n      </div>\\n    </div>\\n    <div class=gf-form ng-if=\\\"style.type !== 'hidden'\\\">\\n      <label class=\\\"gf-form-label width-12\\\">Column Header</label>\\n      <input type=text class=\\\"gf-form-input width-12\\\" ng-model=style.alias ng-change=editor.render() ng-model-onblur placeholder=\\\"Override header label\\\">\\n    </div>\\n    <gf-form-switch class=gf-form label-class=width-12 label=\\\"Render value as link\\\" checked=style.link on-change=editor.render()></gf-form-switch>\\n  </div>\\n\\n  <div class=\\\"section gf-form-group\\\">\\n    <h5 class=section-heading>Type</h5>\\n\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label width-10\\\">Type</label>\\n      <div class=\\\"gf-form-select-wrapper width-16\\\">\\n        <select class=gf-form-input ng-model=style.type ng-options=\\\"c.value as c.text for c in editor.columnTypes\\\" ng-change=editor.render()></select>\\n      </div>\\n    </div>\\n    <div class=gf-form ng-if=\\\"style.type === 'date'\\\">\\n      <label class=\\\"gf-form-label width-10\\\">Date Format</label>\\n      <gf-form-dropdown model=style.dateFormat css-class=\\\"gf-form-input width-16\\\" lookup-text=true get-options=editor.dateFormats on-change=editor.render() allow-custom=true>\\n      </gf-form-dropdown>\\n    </div>\\n\\n    <div ng-if=\\\"style.type === 'string'\\\">\\n      <gf-form-switch class=gf-form label-class=width-10 ng-if=\\\"style.type === 'string'\\\" label=\\\"Sanitize HTML\\\" checked=style.sanitize on-change=editor.render()></gf-form-switch>\\n    </div>\\n    <div ng-if=\\\"style.type === 'string'\\\">\\n      <gf-form-switch class=gf-form label-class=width-10 ng-if=\\\"style.type === 'string'\\\" label=\\\"Preserve Formatting\\\" checked=style.preserveFormat on-change=editor.render()></gf-form-switch>\\n    </div>\\n\\n    <div ng-if=\\\"style.type === 'number'\\\">\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-10\\\">Unit</label>\\n        <div class=\\\"gf-form-dropdown-typeahead width-16\\\" ng-model=style.unit dropdown-typeahead2=editor.unitFormats dropdown-typeahead-on-select=\\\"editor.setUnitFormat(style, $subItem)\\\"></div>\\n      </div>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-10\\\">Decimals</label>\\n        <input type=number class=\\\"gf-form-input width-4\\\" data-placement=right ng-model=style.decimals ng-change=editor.render() ng-model-onblur>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"section gf-form-group\\\" ng-if=\\\"style.type === 'string'\\\">\\n    <h5 class=section-heading>Value Mappings</h5>\\n    <div class=editor-row>\\n      <div class=gf-form-group>\\n        <div class=gf-form>\\n          <span class=gf-form-label>\\n            Type\\n          </span>\\n          <div class=gf-form-select-wrapper>\\n            <select class=gf-form-input ng-model=style.mappingType ng-options=\\\"c.value as c.text for c in editor.mappingTypes\\\" ng-change=editor.render()></select>\\n          </div>\\n        </div>\\n        <div class=gf-form-group ng-if=\\\"style.mappingType==1\\\">\\n          <div class=gf-form ng-repeat=\\\"map in style.valueMaps\\\">\\n            <span class=gf-form-label>\\n              <i class=\\\"fa fa-remove pointer\\\" ng-click=\\\"editor.removeValueMap(style, $index)\\\"></i>\\n            </span>\\n            <input type=text class=\\\"gf-form-input max-width-6\\\" ng-model=map.value placeholder=Value ng-blur=editor.render()>\\n            <label class=gf-form-label>\\n              <i class=\\\"fa fa-arrow-right\\\"></i>\\n            </label>\\n            <input type=text class=\\\"gf-form-input max-width-8\\\" ng-model=map.text placeholder=Text ng-blur=editor.render()>\\n          </div>\\n          <div class=gf-form>\\n            <label class=gf-form-label>\\n              <a class=pointer ng-click=editor.addValueMap(style)><i class=\\\"fa fa-plus\\\"></i></a>\\n            </label>\\n          </div>\\n        </div>\\n        <div class=gf-form-group ng-if=\\\"style.mappingType==2\\\">\\n          <div class=gf-form ng-repeat=\\\"rangeMap in style.rangeMaps\\\">\\n            <span class=gf-form-label>\\n              <i class=\\\"fa fa-remove pointer\\\" ng-click=\\\"editor.removeRangeMap(style, $index)\\\"></i>\\n            </span>\\n            <span class=gf-form-label>From</span>\\n            <input type=text ng-model=rangeMap.from class=\\\"gf-form-input max-width-6\\\" ng-blur=editor.render()>\\n            <span class=gf-form-label>To</span>\\n            <input type=text ng-model=rangeMap.to class=\\\"gf-form-input max-width-6\\\" ng-blur=editor.render()>\\n            <span class=gf-form-label>Text</span>\\n            <input type=text ng-model=rangeMap.text class=\\\"gf-form-input max-width-8\\\" ng-blur=editor.render()>\\n          </div>\\n          <div class=gf-form>\\n            <label class=gf-form-label>\\n              <a class=pointer ng-click=editor.addRangeMap(style)><i class=\\\"fa fa-plus\\\"></i></a>\\n            </label>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"section gf-form-group\\\" ng-if=\\\"['number', 'string'].indexOf(style.type) !== -1\\\">\\n    <h5 class=section-heading>Thresholds</h5>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label width-8\\\">Thresholds\\n        <tip>Comma separated values</tip>\\n      </label>\\n      <input type=text class=\\\"gf-form-input width-10\\\" ng-model=style.thresholds placeholder=50,80 ng-blur=editor.render() array-join>\\n    </div>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label width-8\\\">Color Mode</label>\\n      <div class=\\\"gf-form-select-wrapper width-10\\\">\\n        <select class=gf-form-input ng-model=style.colorMode ng-options=\\\"c.value as c.text for c in editor.colorModes\\\" ng-change=editor.render()></select>\\n      </div>\\n    </div>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label width-8\\\">Colors</label>\\n      <span class=gf-form-label>\\n        <color-picker color=style.colors[0] onchange=editor.onColorChange(style,0)></color-picker>\\n      </span>\\n      <span class=gf-form-label>\\n        <color-picker color=style.colors[1] onchange=editor.onColorChange(style,1)></color-picker>\\n      </span>\\n      <span class=gf-form-label>\\n        <color-picker color=style.colors[2] onchange=editor.onColorChange(style,2)></color-picker>\\n      </span>\\n      <div class=gf-form-label>\\n        <a class=pointer ng-click=editor.invertColorOrder($index)>Invert</a>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"section gf-form-group\\\" ng-if=style.link>\\n    <h5 class=section-heading>Link</h5>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label width-9\\\">\\n        Url\\n        <info-popover mode=right-normal>\\n          <p>Specify an URL (relative or absolute)</p>\\n          <span>\\n            Use special variables to specify cell values:\\n            <br>\\n            <em>${__cell}</em> refers to current cell value\\n            <br>\\n            <em>${__cell_n}</em> refers to Nth column value in current row. Column indexes are started from 0. For instance,\\n            <em>${__cell_1}</em> refers to second column's value.\\n            <br>\\n            <em>${__cell:raw}</em> syntax. By default values are URI encoded. If the value is a complete URL you can disable all encoding using\\n          </span>\\n        </info-popover>\\n      </label>\\n      <input type=text class=\\\"gf-form-input width-29\\\" ng-model=style.linkUrl ng-blur=editor.render() ng-model-onblur data-placement=right>\\n    </div>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label width-9\\\">\\n        Tooltip\\n        <info-popover mode=right-normal>\\n          <p>Specify text for link tooltip.</p>\\n          <span>\\n              This title appears when user hovers pointer over the cell with link. Use the same variables as for URL.\\n          </span>\\n        </info-popover>\\n      </label>\\n      <input type=text class=\\\"gf-form-input width-29\\\" ng-model=style.linkTooltip ng-blur=editor.render() ng-model-onblur data-placement=right>\\n    </div>\\n    <gf-form-switch class=gf-form label-class=width-9 label=\\\"Open in new tab\\\" checked=style.linkTargetBlank></gf-form-switch>\\n  </div>\\n\\n  <div class=clearfix></div>\\n  <div class=gf-form-group>\\n    <button class=\\\"btn btn-danger btn-small\\\" ng-click=editor.removeColumnStyle(style)>\\n      <i class=\\\"fa fa-trash\\\"></i> Remove Rule\\n    </button>\\n  </div>\\n\\n  <hr>\\n</div>\\n\\n<div class=gf-form-button-row>\\n  <button class=\\\"btn btn-inverse\\\" ng-click=editor.addColumnStyle()>\\n    <i class=\\\"fa fa-plus\\\"></i>&nbsp;Add column style\\n  </button>\\n</div>\\n\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var map = {\n\t\"./core/components/help/help.html\": \"0IE6\",\n\t\"./core/components/manage_dashboards/manage_dashboards.html\": \"EOC3\",\n\t\"./core/components/search/search.html\": \"xQSJ\",\n\t\"./core/components/search/search_results.html\": \"VDBq\",\n\t\"./features/admin/partials/admin_home.html\": \"1duI\",\n\t\"./features/admin/partials/edit_org.html\": \"1yDb\",\n\t\"./features/admin/partials/edit_user.html\": \"QH30\",\n\t\"./features/admin/partials/new_user.html\": \"rbvf\",\n\t\"./features/admin/partials/orgs.html\": \"eYNV\",\n\t\"./features/admin/partials/settings.html\": \"Q6em\",\n\t\"./features/admin/partials/stats.html\": \"iSop\",\n\t\"./features/admin/partials/styleguide.html\": \"6rcN\",\n\t\"./features/admin/partials/users.html\": \"lpb/\",\n\t\"./features/alerting/partials/alert_howto.html\": \"wvI5\",\n\t\"./features/alerting/partials/alert_tab.html\": \"0LRa\",\n\t\"./features/alerting/partials/notification_edit.html\": \"WNR3\",\n\t\"./features/alerting/partials/notifications_list.html\": \"BvEB\",\n\t\"./features/annotations/partials/editor.html\": \"RyIb\",\n\t\"./features/annotations/partials/event_editor.html\": \"vk65\",\n\t\"./features/dashboard/components/DashExportModal/template.html\": \"tjQr\",\n\t\"./features/dashboard/components/DashLinks/editor.html\": \"HPUJ\",\n\t\"./features/dashboard/components/DashboardSettings/template.html\": \"jvip\",\n\t\"./features/dashboard/components/ExportDataModal/template.html\": \"qrvd\",\n\t\"./features/dashboard/components/FolderPicker/template.html\": \"XrW9\",\n\t\"./features/dashboard/components/RowOptions/template.html\": \"iyz2\",\n\t\"./features/dashboard/components/ShareModal/template.html\": \"DBN/\",\n\t\"./features/dashboard/components/SubMenu/template.html\": \"coz7\",\n\t\"./features/dashboard/components/VersionHistory/template.html\": \"wxmp\",\n\t\"./features/datasources/partials/http_settings.html\": \"11hs\",\n\t\"./features/datasources/partials/tls_auth_settings.html\": \"/2Ru\",\n\t\"./features/folders/partials/create_folder.html\": \"3XPa\",\n\t\"./features/folders/partials/folder_dashboards.html\": \"yFUm\",\n\t\"./features/manage-dashboards/components/MoveToFolderModal/template.html\": \"3lkw\",\n\t\"./features/manage-dashboards/partials/dashboard_import.html\": \"uiFW\",\n\t\"./features/manage-dashboards/partials/dashboard_list.html\": \"OPwE\",\n\t\"./features/manage-dashboards/partials/snapshot_list.html\": \"aLCo\",\n\t\"./features/org/partials/invite.html\": \"y0W+\",\n\t\"./features/org/partials/newOrg.html\": \"iFH1\",\n\t\"./features/org/partials/select_org.html\": \"QBcC\",\n\t\"./features/panel/panellinks/module.html\": \"bDa/\",\n\t\"./features/panel/partials/general_tab.html\": \"XrM5\",\n\t\"./features/panel/partials/panelTime.html\": \"oZti\",\n\t\"./features/panel/partials/query_editor_row.html\": \"oEL2\",\n\t\"./features/playlist/partials/playlist.html\": \"krwA\",\n\t\"./features/playlist/partials/playlist_search.html\": \"4x4p\",\n\t\"./features/playlist/partials/playlists.html\": \"M76c\",\n\t\"./features/plugins/partials/plugin_page.html\": \"0+gp\",\n\t\"./features/plugins/partials/update_instructions.html\": \"X4jf\",\n\t\"./features/profile/partials/profile.html\": \"Uw6O\",\n\t\"./features/teams/partials/create_team.html\": \"FMp3\",\n\t\"./features/templating/partials/editor.html\": \"6V0m\",\n\t\"./partials/confirm_modal.html\": \"iKVC\",\n\t\"./partials/edit_json.html\": \"Ukuu\",\n\t\"./partials/error.html\": \"UkAP\",\n\t\"./partials/modal.html\": \"/YHu\",\n\t\"./partials/reset_password.html\": \"YRnh\",\n\t\"./partials/signup_invited.html\": \"7teh\",\n\t\"./partials/signup_step2.html\": \"peu1\",\n\t\"./partials/valueSelectDropdown.html\": \"0bcw\",\n\t\"./plugins/app/example-app/legacy/angular_example_page.html\": \"MdX+\",\n\t\"./plugins/app/example-app/legacy/config.html\": \"Gwu6\",\n\t\"./plugins/datasource/cloudwatch/partials/annotations.editor.html\": \"E1lu\",\n\t\"./plugins/datasource/cloudwatch/partials/config.html\": \"2W4u\",\n\t\"./plugins/datasource/cloudwatch/partials/query.editor.html\": \"K/DK\",\n\t\"./plugins/datasource/cloudwatch/partials/query.parameter.html\": \"hSYD\",\n\t\"./plugins/datasource/elasticsearch/partials/annotations.editor.html\": \"LzuI\",\n\t\"./plugins/datasource/elasticsearch/partials/bucket_agg.html\": \"NhjT\",\n\t\"./plugins/datasource/elasticsearch/partials/config.html\": \"fJ2D\",\n\t\"./plugins/datasource/elasticsearch/partials/metric_agg.html\": \"Pfkp\",\n\t\"./plugins/datasource/elasticsearch/partials/pipeline_variables.html\": \"VKbU\",\n\t\"./plugins/datasource/elasticsearch/partials/query.editor.html\": \"bR/a\",\n\t\"./plugins/datasource/grafana-azure-monitor-datasource/partials/annotations.editor.html\": \"Qinm\",\n\t\"./plugins/datasource/grafana-azure-monitor-datasource/partials/query.editor.html\": \"ADUO\",\n\t\"./plugins/datasource/grafana/partials/annotations.editor.html\": \"/8l8\",\n\t\"./plugins/datasource/grafana/partials/query.editor.html\": \"dQag\",\n\t\"./plugins/datasource/graphite/partials/annotations.editor.html\": \"2rVl\",\n\t\"./plugins/datasource/graphite/partials/config.html\": \"URwt\",\n\t\"./plugins/datasource/graphite/partials/query.editor.html\": \"ePCq\",\n\t\"./plugins/datasource/influxdb/partials/annotations.editor.html\": \"Szrz\",\n\t\"./plugins/datasource/influxdb/partials/config.html\": \"WQdE\",\n\t\"./plugins/datasource/influxdb/partials/query.editor.html\": \"/HFP\",\n\t\"./plugins/datasource/loki/partials/annotations.editor.html\": \"3CYn\",\n\t\"./plugins/datasource/loki/partials/config.html\": \"SrNa\",\n\t\"./plugins/datasource/mssql/partials/annotations.editor.html\": \"PQb9\",\n\t\"./plugins/datasource/mssql/partials/config.html\": \"1kYe\",\n\t\"./plugins/datasource/mssql/partials/query.editor.html\": \"U1ax\",\n\t\"./plugins/datasource/mysql/partials/annotations.editor.html\": \"9RCP\",\n\t\"./plugins/datasource/mysql/partials/config.html\": \"7ym3\",\n\t\"./plugins/datasource/mysql/partials/query.editor.html\": \"gw38\",\n\t\"./plugins/datasource/opentsdb/partials/annotations.editor.html\": \"s+LN\",\n\t\"./plugins/datasource/opentsdb/partials/config.html\": \"3VB6\",\n\t\"./plugins/datasource/opentsdb/partials/query.editor.html\": \"vhkK\",\n\t\"./plugins/datasource/postgres/partials/annotations.editor.html\": \"I+An\",\n\t\"./plugins/datasource/postgres/partials/config.html\": \"diqK\",\n\t\"./plugins/datasource/postgres/partials/query.editor.html\": \"HmKx\",\n\t\"./plugins/datasource/prometheus/partials/annotations.editor.html\": \"jaLZ\",\n\t\"./plugins/datasource/prometheus/partials/config.html\": \"65lS\",\n\t\"./plugins/datasource/stackdriver/partials/annotations.editor.html\": \"cytP\",\n\t\"./plugins/datasource/stackdriver/partials/config.html\": \"OEPh\",\n\t\"./plugins/datasource/stackdriver/partials/query.editor.html\": \"7wpZ\",\n\t\"./plugins/datasource/stackdriver/partials/query.filter.html\": \"OpWu\",\n\t\"./plugins/datasource/testdata/partials/query.editor.html\": \"pCo/\",\n\t\"./plugins/panel/alertlist/editor.html\": \"phJb\",\n\t\"./plugins/panel/alertlist/module.html\": \"0ZQg\",\n\t\"./plugins/panel/dashlist/editor.html\": \"QqjE\",\n\t\"./plugins/panel/dashlist/module.html\": \"eNSq\",\n\t\"./plugins/panel/graph/axes_editor.html\": \"ZG7E\",\n\t\"./plugins/panel/graph/tab_display.html\": \"Lmi3\",\n\t\"./plugins/panel/graph/tab_drilldown_links.html\": \"cZsJ\",\n\t\"./plugins/panel/graph/tab_legend.html\": \"/XDc\",\n\t\"./plugins/panel/graph/tab_thresholds_time_regions.html\": \"hiSG\",\n\t\"./plugins/panel/graph/thresholds_form.html\": \"zJCM\",\n\t\"./plugins/panel/graph/time_regions_form.html\": \"pDgv\",\n\t\"./plugins/panel/heatmap/module.html\": \"NoBN\",\n\t\"./plugins/panel/heatmap/partials/axes_editor.html\": \"vInx\",\n\t\"./plugins/panel/heatmap/partials/display_editor.html\": \"mCU5\",\n\t\"./plugins/panel/pluginlist/editor.html\": \"7dpV\",\n\t\"./plugins/panel/pluginlist/module.html\": \"UJAu\",\n\t\"./plugins/panel/singlestat/editor.html\": \"hE9y\",\n\t\"./plugins/panel/singlestat/mappings.html\": \"2euF\",\n\t\"./plugins/panel/singlestat/module.html\": \"8iRp\",\n\t\"./plugins/panel/table/column_options.html\": \"v7bs\",\n\t\"./plugins/panel/table/editor.html\": \"RYWr\",\n\t\"./plugins/panel/table/module.html\": \"N1Zo\",\n\t\"./plugins/panel/text/editor.html\": \"9CCn\",\n\t\"./plugins/panel/text/module.html\": \"/Dwp\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"vFKA\";","var path = 'public/app/plugins/panel/heatmap/partials/axes_editor.html';\nvar html = \"<div class=editor-row>\\n  <div class=\\\"section gf-form-group\\\">\\n    <h5 class=section-heading>Y Axis</h5>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label width-8\\\">Unit</label>\\n      <div class=\\\"gf-form-dropdown-typeahead width-12\\\" ng-model=ctrl.panel.yAxis.format dropdown-typeahead2=editor.unitFormats dropdown-typeahead-on-select=editor.setUnitFormat($subItem)>\\n      </div>\\n    </div>\\n    <div ng-if=\\\"ctrl.panel.dataFormat == 'timeseries'\\\">\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-8\\\">Scale</label>\\n        <div class=\\\"gf-form-select-wrapper width-12\\\">\\n          <select class=gf-form-input ng-model=ctrl.panel.yAxis.logBase ng-options=\\\"v as k for (k, v) in editor.logScales\\\" ng-change=ctrl.refresh()></select>\\n        </div>\\n      </div>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-8\\\">Y-Min</label>\\n        <input type=text class=\\\"gf-form-input width-12\\\" placeholder=auto empty-to-null ng-model=ctrl.panel.yAxis.min ng-change=ctrl.render() ng-model-onblur>\\n      </div>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-8\\\">Y-Max</label>\\n        <input type=text class=\\\"gf-form-input width-12\\\" placeholder=auto empty-to-null ng-model=ctrl.panel.yAxis.max ng-change=ctrl.render() ng-model-onblur>\\n      </div>\\n    </div>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label width-8\\\">Decimals</label>\\n      <input type=number class=\\\"gf-form-input width-12\\\" placeholder=auto data-placement=right bs-tooltip=\\\"'Override automatic decimal precision for axis.'\\\" ng-model=ctrl.panel.yAxis.decimals ng-change=ctrl.render() ng-model-onblur>\\n    </div>\\n    <div class=gf-form ng-if=\\\"ctrl.panel.dataFormat == 'tsbuckets'\\\">\\n      <label class=\\\"gf-form-label width-8\\\">Bucket bound</label>\\n      <div class=\\\"gf-form-select-wrapper max-width-12\\\">\\n        <select class=gf-form-input ng-model=ctrl.panel.yBucketBound ng-options=\\\"v as k for (k, v) in editor.yBucketBoundModes\\\" ng-change=ctrl.render() data-placement=right bs-tooltip=\\\"'Use series label as an upper or lower bucket bound.'\\\">\\n        </select>\\n      </div>\\n    </div>\\n    <gf-form-switch ng-if=\\\"ctrl.panel.dataFormat == 'tsbuckets'\\\" class=gf-form label-class=width-8 label=\\\"Reverse order\\\" checked=ctrl.panel.reverseYBuckets on-change=ctrl.refresh()>\\n    </gf-form-switch>\\n  </div>\\n\\n  <div class=\\\"section gf-form-group\\\" ng-if=\\\"ctrl.panel.dataFormat == 'timeseries'\\\">\\n    <h5 class=section-heading>Buckets</h5>\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-5\\\">Y Axis</label>\\n      </div>\\n      <div class=gf-form ng-show=\\\"ctrl.panel.yAxis.logBase === 1\\\">\\n        <label class=\\\"gf-form-label width-5\\\">Buckets</label>\\n        <input type=number class=\\\"gf-form-input width-5\\\" placeholder=auto data-placement=right bs-tooltip=\\\"'Number of buckets for Y axis.'\\\" ng-model=ctrl.panel.yBucketNumber ng-change=ctrl.refresh() ng-model-onblur>\\n      </div>\\n      <div class=gf-form ng-show=\\\"ctrl.panel.yAxis.logBase === 1\\\">\\n        <label class=\\\"gf-form-label width-4\\\">Size</label>\\n        <input type=number class=\\\"gf-form-input width-5\\\" placeholder=auto data-placement=right bs-tooltip=\\\"'Size of bucket. Has priority over Buckets option.'\\\" ng-model=ctrl.panel.yBucketSize ng-change=ctrl.refresh() ng-model-onblur>\\n      </div>\\n      <div class=gf-form ng-show=\\\"ctrl.panel.yAxis.logBase !== 1\\\">\\n        <label class=\\\"gf-form-label width-10\\\">Split Factor</label>\\n        <input type=number class=\\\"gf-form-input width-9\\\" placeholder=1 data-placement=right bs-tooltip=\\\"'For log scales only. By default Y values is splitted by integer powers of log base (1, 2, 4, 8, 16, ... for log2). This option allows to split each default bucket into specified number of buckets.'\\\" ng-model=ctrl.panel.yAxis.splitFactor ng-change=ctrl.refresh() ng-model-onblur>\\n        \\n      </div>\\n    </div>\\n    <div class=gf-form-inline>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-5\\\">X Axis</label>\\n        <label class=\\\"gf-form-label width-5\\\">Buckets</label>\\n        <input type=number class=\\\"gf-form-input width-5\\\" placeholder=auto data-placement=right bs-tooltip=\\\"'Number of buckets for X axis.'\\\" ng-model=ctrl.panel.xBucketNumber ng-change=ctrl.refresh() ng-model-onblur>\\n      </div>\\n      <div class=gf-form>\\n        <label class=\\\"gf-form-label width-4\\\">Size</label>\\n        <input type=text class=\\\"gf-form-input width-5\\\" placeholder=auto data-placement=right bs-tooltip=\\\"'Size of bucket. Number or interval (10s, 5m, 1h, etc). Supported intervals: ms, s, m, h, d, w, M, y. Has priority over Buckets option.'\\\" ng-model=ctrl.panel.xBucketSize ng-change=ctrl.refresh() ng-model-onblur>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"section gf-form-group\\\">\\n    <h5 class=section-heading>Data format</h5>\\n    <div class=gf-form>\\n      <label class=\\\"gf-form-label width-5\\\">Format</label>\\n      <div class=\\\"gf-form-select-wrapper max-width-15\\\">\\n        <select class=gf-form-input ng-model=ctrl.panel.dataFormat ng-options=\\\"v as k for (k, v) in editor.dataFormats\\\" ng-change=ctrl.render() data-placement=right bs-tooltip=\\\"'Time series: create heatmap from regular time series. <br>Time series buckets: use histogram data returned from data source. Each series represents bucket which upper/lower bound is a series label.'\\\">\\n        </select>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","/*\n * jQuery.flot.dashes\n *\n * options = {\n *   series: {\n *     dashes: {\n *\n *       // show\n *       // default: false\n *       // Whether to show dashes for the series.\n *       show: <boolean>,\n *\n *       // lineWidth\n *       // default: 2\n *       // The width of the dashed line in pixels.\n *       lineWidth: <number>,\n *\n *       // dashLength\n *       // default: 10\n *       // Controls the length of the individual dashes and the amount of\n *       // space between them.\n *       // If this is a number, the dashes and spaces will have that length.\n *       // If this is an array, it is read as [ dashLength, spaceLength ]\n *       dashLength: <number> or <array[2]>\n *     }\n *   }\n * }\n */\n(function($){\n\n  function init(plot) {\n\n    plot.hooks.processDatapoints.push(function(plot, series, datapoints) {\n\n      if (!series.dashes.show) return;\n\n      plot.hooks.draw.push(function(plot, ctx) {\n\n        var plotOffset = plot.getPlotOffset(),\n          axisx = series.xaxis,\n          axisy = series.yaxis;\n\n        function plotDashes(xoffset, yoffset) {\n\n          var points = datapoints.points,\n            ps = datapoints.pointsize,\n            prevx = null,\n            prevy = null,\n            dashRemainder = 0,\n            dashOn = true,\n            dashOnLength,\n            dashOffLength;\n\n          if (series.dashes.dashLength[0]) {\n            dashOnLength = series.dashes.dashLength[0];\n            if (series.dashes.dashLength[1]) {\n              dashOffLength = series.dashes.dashLength[1];\n            } else {\n              dashOffLength = dashOnLength;\n            }\n          } else {\n            dashOffLength = dashOnLength = series.dashes.dashLength;\n          }\n\n          ctx.beginPath();\n\n          for (var i = ps; i < points.length; i += ps) {\n\n            var x1 = points[i - ps],\n              y1 = points[i - ps + 1],\n              x2 = points[i],\n              y2 = points[i + 1];\n\n            if (x1 == null || x2 == null) continue;\n\n            // clip with ymin\n            if (y1 <= y2 && y1 < axisy.min) {\n              if (y2 < axisy.min) continue;   // line segment is outside\n              // compute new intersection point\n              x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n              y1 = axisy.min;\n            } else if (y2 <= y1 && y2 < axisy.min) {\n              if (y1 < axisy.min) continue;\n              x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n              y2 = axisy.min;\n            }\n\n            // clip with ymax\n            if (y1 >= y2 && y1 > axisy.max) {\n              if (y2 > axisy.max) continue;\n              x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n              y1 = axisy.max;\n            } else if (y2 >= y1 && y2 > axisy.max) {\n              if (y1 > axisy.max) continue;\n              x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n              y2 = axisy.max;\n            }\n\n            // clip with xmin\n            if (x1 <= x2 && x1 < axisx.min) {\n              if (x2 < axisx.min) continue;\n              y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n              x1 = axisx.min;\n            } else if (x2 <= x1 && x2 < axisx.min) {\n              if (x1 < axisx.min) continue;\n              y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n              x2 = axisx.min;\n            }\n\n            // clip with xmax\n            if (x1 >= x2 && x1 > axisx.max) {\n              if (x2 > axisx.max) continue;\n              y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n              x1 = axisx.max;\n            } else if (x2 >= x1 && x2 > axisx.max) {\n              if (x1 > axisx.max) continue;\n              y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n              x2 = axisx.max;\n            }\n\n            if (x1 != prevx || y1 != prevy) {\n              ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);\n            }\n\n            var ax1 = axisx.p2c(x1) + xoffset,\n              ay1 = axisy.p2c(y1) + yoffset,\n              ax2 = axisx.p2c(x2) + xoffset,\n              ay2 = axisy.p2c(y2) + yoffset,\n              dashOffset;\n\n            function lineSegmentOffset(segmentLength) {\n\n              var c = Math.sqrt(Math.pow(ax2 - ax1, 2) + Math.pow(ay2 - ay1, 2));\n\n              if (c <= segmentLength) {\n                return {\n                  deltaX: ax2 - ax1,\n                  deltaY: ay2 - ay1,\n                  distance: c,\n                  remainder: segmentLength - c\n                }\n              } else {\n                var xsign = ax2 > ax1 ? 1 : -1,\n                  ysign = ay2 > ay1 ? 1 : -1;\n                return {\n                  deltaX: xsign * Math.sqrt(Math.pow(segmentLength, 2) / (1 + Math.pow((ay2 - ay1)/(ax2 - ax1), 2))),\n                  deltaY: ysign * Math.sqrt(Math.pow(segmentLength, 2) - Math.pow(segmentLength, 2) / (1 + Math.pow((ay2 - ay1)/(ax2 - ax1), 2))),\n                  distance: segmentLength,\n                  remainder: 0\n                };\n              }\n            }\n            //-end lineSegmentOffset\n\n            do {\n\n              dashOffset = lineSegmentOffset(\n                dashRemainder > 0 ? dashRemainder :\n                  dashOn ? dashOnLength : dashOffLength);\n\n              if (dashOffset.deltaX != 0 || dashOffset.deltaY != 0) {\n                if (dashOn) {\n                  ctx.lineTo(ax1 + dashOffset.deltaX, ay1 + dashOffset.deltaY);\n                } else {\n                  ctx.moveTo(ax1 + dashOffset.deltaX, ay1 + dashOffset.deltaY);\n                }\n              }\n\n              dashOn = !dashOn;\n              dashRemainder = dashOffset.remainder;\n              ax1 += dashOffset.deltaX;\n              ay1 += dashOffset.deltaY;\n\n            } while (dashOffset.distance > 0);\n\n            prevx = x2;\n            prevy = y2;\n          }\n\n          ctx.stroke();\n        }\n        //-end plotDashes\n\n        ctx.save();\n        ctx.translate(plotOffset.left, plotOffset.top);\n        ctx.lineJoin = 'round';\n\n        var lw = series.dashes.lineWidth,\n          sw = series.shadowSize;\n\n        // FIXME: consider another form of shadow when filling is turned on\n        if (lw > 0 && sw > 0) {\n          // draw shadow as a thick and thin line with transparency\n          ctx.lineWidth = sw;\n          ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n          // position shadow at angle from the mid of line\n          var angle = Math.PI/18;\n          plotDashes(Math.sin(angle) * (lw/2 + sw/2), Math.cos(angle) * (lw/2 + sw/2));\n          ctx.lineWidth = sw/2;\n          plotDashes(Math.sin(angle) * (lw/2 + sw/4), Math.cos(angle) * (lw/2 + sw/4));\n        }\n\n        ctx.lineWidth = lw;\n        ctx.strokeStyle = series.color;\n\n        if (lw > 0) {\n          plotDashes(0, 0);\n        }\n\n        ctx.restore();\n\n      });\n      //-end draw hook\n\n    });\n    //-end processDatapoints hook\n\n  }\n  //-end init\n\n  $.plot.plugins.push({\n    init: init,\n    options: {\n      series: {\n        dashes: {\n          show: false,\n          lineWidth: 2,\n          dashLength: 10\n        }\n      }\n    },\n    name: 'dashes',\n    version: '0.1'\n  });\n\n})(jQuery)\n","import React, { Component } from 'react';\nimport isNil from 'lodash/isNil';\nimport classNames from 'classnames';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { cx, css } from 'emotion';\n\ninterface Props {\n  className?: string;\n  autoHide?: boolean;\n  autoHideTimeout?: number;\n  autoHideDuration?: number;\n  autoHeightMax?: string;\n  hideTracksWhenNotNeeded?: boolean;\n  hideHorizontalTrack?: boolean;\n  hideVerticalTrack?: boolean;\n  scrollTop?: number;\n  setScrollTop: (event: any) => void;\n  autoHeightMin?: number | string;\n  updateAfterMountMs?: number;\n}\n\n/**\n * Wraps component into <Scrollbars> component from `react-custom-scrollbars`\n */\nexport class CustomScrollbar extends Component<Props> {\n  static defaultProps: Partial<Props> = {\n    autoHide: false,\n    autoHideTimeout: 200,\n    autoHideDuration: 200,\n    setScrollTop: () => {},\n    hideTracksWhenNotNeeded: false,\n    autoHeightMin: '0',\n    autoHeightMax: '100%',\n  };\n\n  private ref: React.RefObject<Scrollbars>;\n\n  constructor(props: Props) {\n    super(props);\n    this.ref = React.createRef<Scrollbars>();\n  }\n\n  updateScroll() {\n    const ref = this.ref.current;\n    const { scrollTop } = this.props;\n\n    if (ref && !isNil(scrollTop)) {\n      ref.scrollTop(scrollTop);\n    }\n  }\n\n  componentDidMount() {\n    this.updateScroll();\n\n    // this logic is to make scrollbar visible when content is added body after mount\n    if (this.props.updateAfterMountMs) {\n      setTimeout(() => this.updateAfterMount(), this.props.updateAfterMountMs);\n    }\n  }\n\n  updateAfterMount() {\n    if (this.ref && this.ref.current) {\n      const scrollbar = this.ref.current as any;\n      if (scrollbar.update) {\n        scrollbar.update();\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    this.updateScroll();\n  }\n\n  renderTrack = (track: 'track-vertical' | 'track-horizontal', hideTrack: boolean | undefined, passedProps: any) => {\n    return (\n      <div\n        {...passedProps}\n        className={cx(\n          css`\n            visibility: ${hideTrack ? 'hidden' : 'visible'};\n          `,\n          track\n        )}\n      />\n    );\n  };\n\n  renderThumb = (thumb: 'thumb-horizontal' | 'thumb-vertical', passedProps: any) => {\n    return <div {...passedProps} className={thumb} />;\n  };\n\n  renderTrackHorizontal = (passedProps: any) => {\n    return this.renderTrack('track-horizontal', this.props.hideHorizontalTrack, passedProps);\n  };\n\n  renderTrackVertical = (passedProps: any) => {\n    return this.renderTrack('track-vertical', this.props.hideVerticalTrack, passedProps);\n  };\n\n  renderThumbHorizontal = (passedProps: any) => {\n    return this.renderThumb('thumb-horizontal', passedProps);\n  };\n\n  renderThumbVertical = (passedProps: any) => {\n    return this.renderThumb('thumb-vertical', passedProps);\n  };\n\n  renderView = (passedProps: any) => {\n    return <div {...passedProps} className=\"view\" />;\n  };\n\n  render() {\n    const {\n      className,\n      children,\n      autoHeightMax,\n      autoHeightMin,\n      setScrollTop,\n      autoHide,\n      autoHideTimeout,\n      hideTracksWhenNotNeeded,\n    } = this.props;\n\n    return (\n      <Scrollbars\n        ref={this.ref}\n        className={classNames('custom-scrollbar', className)}\n        onScroll={setScrollTop}\n        autoHeight={true}\n        autoHide={autoHide}\n        autoHideTimeout={autoHideTimeout}\n        hideTracksWhenNotNeeded={hideTracksWhenNotNeeded}\n        // These autoHeightMin & autoHeightMax options affect firefox and chrome differently.\n        // Before these where set to inhert but that caused problems with cut of legends in firefox\n        autoHeightMax={autoHeightMax}\n        autoHeightMin={autoHeightMin}\n        renderTrackHorizontal={this.renderTrackHorizontal}\n        renderTrackVertical={this.renderTrackVertical}\n        renderThumbHorizontal={this.renderThumbHorizontal}\n        renderThumbVertical={this.renderThumbVertical}\n        renderView={this.renderView}\n      >\n        {children}\n      </Scrollbars>\n    );\n  }\n}\n\nexport default CustomScrollbar;\n","var path = 'public/app/plugins/datasource/opentsdb/partials/query.editor.html';\nvar html = \"<query-editor-row query-ctrl=ctrl can-collapse=false>\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=\\\"gf-form max-width-25\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword width-8\\\">\\n\\t\\t\\t\\tMetric\\n\\t\\t\\t\\t<label class=gf-form-label bs-tooltip=ctrl.errors.metric style=color:#e5bd1c ng-show=ctrl.errors.metric>\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-warning\\\"></i>\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t</label>\\n\\t\\t\\t<input type=text class=gf-form-input ng-model=ctrl.target.metric spellcheck=false bs-typeahead=ctrl.suggestMetrics placeholder=\\\"metric name\\\" data-min-length=0 data-items=100 ng-blur=ctrl.targetBlur()>\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword\\\">\\n\\t\\t\\t\\tAggregator\\n\\t\\t\\t\\t<a bs-tooltip=ctrl.errors.aggregator style=color:#e5bd1c ng-show=ctrl.errors.aggregator>\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-warning\\\"></i>\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</label>\\n\\t\\t\\t<div class=\\\"gf-form-select-wrapper max-width-15\\\">\\n\\t\\t\\t\\t<select ng-model=ctrl.target.aggregator class=gf-form-input ng-options=\\\"agg for agg in ctrl.aggregators\\\" ng-change=ctrl.targetBlur()>\\n\\t\\t \\t </select>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t\\t<div class=\\\"gf-form max-width-20\\\">\\n\\t\\t\\t\\t<label class=\\\"gf-form-label query-keyword width-6\\\">\\n\\t\\t\\t\\t\\tAlias:\\n\\t\\t\\t\\t\\t<info-popover mode=right-normal>\\n\\t\\t\\t\\t\\t\\tUse patterns like $tag_tagname to replace part of the alias for a tag value\\n\\t\\t\\t\\t\\t</info-popover>\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t<input type=text class=gf-form-input ng-model=ctrl.target.alias spellcheck=false placeholder=\\\"series alias\\\" data-min-length=0 data-items=100 ng-blur=ctrl.targetBlur()>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"gf-form gf-form--grow\\\">\\n\\t\\t\\t\\t<div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n\\t\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=\\\"gf-form max-width-25\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword width-8\\\">Down sample</label>\\n\\t\\t\\t<input type=text class=\\\"gf-form-input gf-form-input--has-help-icon\\\" ng-model=ctrl.target.downsampleInterval ng-model-onblur ng-change=ctrl.targetBlur() placeholder=interval>\\n\\t\\t\\t<info-popover mode=right-absolute>\\n\\t\\t\\t\\tblank for auto, or for example <code>1m</code>\\n\\t\\t\\t</info-popover>\\n\\t\\t</div>\\n\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword\\\">Aggregator</label>\\n\\t\\t\\t<div class=gf-form-select-wrapper>\\n\\t\\t\\t\\t<select ng-model=ctrl.target.downsampleAggregator class=gf-form-input ng-options=\\\"agg for agg in ctrl.aggregators\\\" ng-change=ctrl.targetBlur()>\\n\\t\\t\\t\\t</select>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<div class=gf-form ng-if=\\\"ctrl.tsdbVersion >= 2\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword width-6\\\">Fill</label>\\n\\t\\t\\t<div class=gf-form-select-wrapper>\\n\\t\\t\\t\\t<select ng-model=ctrl.target.downsampleFillPolicy class=gf-form-input ng-options=\\\"agg for agg in ctrl.fillPolicies\\\" ng-change=ctrl.targetBlur()>\\n\\t\\t\\t\\t</select>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<gf-form-switch class=gf-form label=\\\"Disable downsampling\\\" label-class=query-keyword checked=ctrl.target.disableDownsampling on-change=ctrl.targetBlur()>\\n\\t\\t</gf-form-switch>\\n\\n\\t\\t<div class=\\\"gf-form gf-form--grow\\\">\\n\\t\\t\\t<div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=gf-form-inline ng-if=\\\"ctrl.tsdbVersion >= 2\\\">\\n\\t\\t<div class=gf-form>\\n\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword width-8\\\">\\n\\t\\t\\t\\tFilters\\n\\t\\t\\t\\t<info-popover mode=right-normal>\\n\\t\\t\\t\\t\\tFilters does not work with tags, either of the two will work but not both.\\n\\t\\t\\t\\t</info-popover>\\n\\t\\t\\t</label>\\n\\n\\t\\t\\t<div ng-repeat=\\\"fil in ctrl.target.filters track by $index\\\" class=gf-form-label>\\n\\t\\t\\t\\t{{fil.tagk}}&nbsp;=&nbsp;{{fil.type}}&#40;{{fil.filter}}&#41;&nbsp;&#44&nbsp;groupBy&nbsp;=&nbsp;{{fil.groupBy}}\\n\\t\\t\\t\\t<a ng-click=\\\"ctrl.editFilter(fil, $index)\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-pencil\\\"></i>\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t<a ng-click=ctrl.removeFilter($index)>\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-remove\\\"></i>\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</div>\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword\\\" ng-hide=ctrl.addFilterMode>\\n\\t\\t\\t\\t<a ng-click=ctrl.addFilter()>\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-plus\\\"></i>\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</label>\\n \\t\\t</div>\\n\\n\\t\\t<div class=gf-form-inline ng-show=ctrl.addFilterMode>\\n\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t<input type=text class=gf-form-input spellcheck=false bs-typeahead=ctrl.suggestTagKeys data-min-length=0 data-items=100 ng-model=ctrl.target.currentFilterKey placeholder=key>\\n\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t<label class=\\\"gf-form-label query-keyword\\\">Type</label>\\n\\t\\t\\t\\t<div class=gf-form-select-wrapper>\\n\\t\\t\\t\\t\\t<select ng-model=ctrl.target.currentFilterType class=gf-form-input ng-options=\\\"filType for filType in ctrl.filterTypes\\\">\\n\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t<input type=text class=gf-form-input spellcheck=false bs-typeahead=ctrl.suggestTagValues data-min-length=0 data-items=100 ng-model=ctrl.target.currentFilterValue placeholder=filter>\\n\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n\\n      <gf-form-switch class=gf-form label=\\\"Group by\\\" label-class=query-keyword checked=ctrl.target.currentFilterGroupBy on-change=ctrl.targetBlur()>\\n\\t\\t\\t</gf-form-switch>\\n\\n\\t\\t\\t<div class=gf-form ng-show=ctrl.addFilterMode>\\n\\t\\t\\t\\t<label class=gf-form-label ng-show=ctrl.errors.filters>\\n\\t\\t\\t\\t\\t<a bs-tooltip=ctrl.errors.filters style=color:#e5bd1c>\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-warning\\\"></i>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t<label class=gf-form-label>\\n\\t\\t\\t\\t\\t<a ng-click=ctrl.addFilter() ng-hide=ctrl.errors.filters>add filter</a>\\n\\t\\t\\t\\t\\t<a ng-click=ctrl.closeAddFilterMode()>\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-remove\\\"></i>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</label>\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"gf-form gf-form--grow\\\">\\n\\t\\t\\t<div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=gf-form-inline>\\n\\t\\t<div class=gf-form>\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword width-8\\\">\\n\\t\\t\\t\\tTags\\n\\t\\t\\t\\t<info-popover mode=right-normal ng-if=\\\"ctrl.tsdbVersion >= 2\\\">\\n\\t\\t\\t\\t\\tPlease use filters, tags are deprecated in opentsdb 2.2\\n\\t\\t\\t\\t</info-popover>\\n\\t\\t\\t</label>\\n\\t\\t</div>\\n\\n\\t\\t<div class=gf-form ng-repeat=\\\"(key, value) in ctrl.target.tags track by $index\\\" class=gf-form>\\n\\t\\t\\t<label class=gf-form-label>\\n\\t\\t\\t\\t{{key}}&nbsp;=&nbsp;{{value}}\\n\\t\\t\\t\\t<a ng-click=\\\"ctrl.editTag(key, value)\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-pencil\\\"></i>\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t<a ng-click=ctrl.removeTag(key)>\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-remove\\\"></i>\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</label>\\n\\t\\t</div>\\n\\n\\t\\t<div class=gf-form ng-hide=ctrl.addTagMode>\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword\\\">\\n\\t\\t\\t\\t<a ng-click=ctrl.addTag()><i class=\\\"fa fa-plus\\\"></i></a>\\n\\t\\t\\t</label>\\n\\t\\t</div>\\n\\n\\t\\t<div class=gf-form ng-show=ctrl.addTagMode>\\n\\t\\t\\t<input type=text class=gf-form-input spellcheck=false bs-typeahead=ctrl.suggestTagKeys data-min-length=0 data-items=100 ng-model=ctrl.target.currentTagKey placeholder=key>\\n\\t\\t\\t\\n\\n\\t\\t\\t<input type=text class=gf-form-input spellcheck=false bs-typeahead=ctrl.suggestTagValues data-min-length=0 data-items=100 ng-model=ctrl.target.currentTagValue placeholder=value>\\n\\t\\t\\t\\n\\n\\t\\t\\t<label class=gf-form-label ng-show=ctrl.errors.tags>\\n\\t\\t\\t\\t<a bs-tooltip=ctrl.errors.tags style=color:#e5bd1c>\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-warning\\\"></i>\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</label>\\n\\t\\t\\t<label class=gf-form-label>\\n\\t\\t\\t\\t<a ng-click=ctrl.addTag() ng-hide=ctrl.errors.tags>add tag</a>\\n\\t\\t\\t\\t<a ng-click=ctrl.closeAddTagMode()><i class=\\\"fa fa-remove\\\"></i></a>\\n\\t\\t\\t</label>\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"gf-form gf-form--grow\\\">\\n\\t\\t\\t<div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=gf-form-inline>\\n\\t\\t<gf-form-switch class=gf-form label=Rate label-class=\\\"width-8 query-keyword\\\" checked=ctrl.target.shouldComputeRate on-change=ctrl.targetBlur()>\\n\\t\\t</gf-form-switch>\\n\\n\\t\\t<gf-form-switch ng-hide=!ctrl.target.shouldComputeRate class=gf-form label=Counter label-class=query-keyword checked=ctrl.target.isCounter on-change=ctrl.targetBlur()>\\n\\t\\t</gf-form-switch>\\n\\n\\n\\t\\t<div class=gf-form ng-hide=\\\"!ctrl.target.isCounter || !ctrl.target.shouldComputeRate\\\">\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword\\\">Counter Max</label>\\n\\t\\t\\t<input type=text class=gf-form-input ng-disabled=!ctrl.target.shouldComputeRate ng-model=ctrl.target.counterMax spellcheck=false placeholder=\\\"max value\\\" ng-model-onblur ng-blur=ctrl.targetBlur()>\\n\\t\\t\\t\\n\\n\\t\\t\\t<label class=\\\"gf-form-label query-keyword\\\">Reset Value</label>\\n\\t\\t\\t<input type=text class=\\\"tight-form-input input-small\\\" ng-disabled=!ctrl.target.shouldComputeRate ng-model=ctrl.target.counterResetValue spellcheck=false placeholder=\\\"reset value\\\" ng-model-onblur ng-blur=ctrl.targetBlur()>\\n\\t\\t\\t\\n\\t\\t</div>\\n\\n\\t\\t<div class=gf-form ng-if=\\\"ctrl.tsdbVersion > 2\\\">\\n\\t\\t\\t<gf-form-switch class=gf-form label=\\\"Explicit tags\\\" label-class=\\\"width-8 query-keyword\\\" checked=ctrl.target.explicitTags on-change=ctrl.targetBlur()>\\n\\t\\t\\t</gf-form-switch>\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"gf-form gf-form--grow\\\">\\n\\t\\t\\t<div class=\\\"gf-form-label gf-form-label--grow\\\"></div>\\n\\t\\t</div>\\n\\t</div>\\n</query-editor-row>\\n\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/features/annotations/partials/event_editor.html';\nvar html = \"\\n<div class=graph-annotation>\\n\\t<div class=graph-annotation__header>\\n\\t\\t<div class=graph-annotation__user bs-tooltip=\\\"'Created by {{ctrl.login}}'\\\">\\n\\t\\t</div>\\n\\n\\t\\t<div class=graph-annotation__title>\\n\\t\\t\\t<span ng-if=!ctrl.event.id>Add Annotation</span>\\n\\t\\t\\t<span ng-if=ctrl.event.id>Edit Annotation</span>\\n\\t\\t</div>\\n\\n    <div class=graph-annotation__time>{{ctrl.timeFormated}}</div>\\n\\t</div>\\n\\n\\t<form name=ctrl.form class=\\\"graph-annotation__body text-center\\\">\\n\\t\\t<div style=display:inline-block>\\n\\t\\t\\t<div class=\\\"gf-form gf-form--v-stretch\\\">\\n\\t\\t\\t\\t<span class=\\\"gf-form-label width-7\\\">Description</span>\\n\\t\\t\\t\\t<textarea class=\\\"gf-form-input width-20\\\" rows=2 ng-model=ctrl.event.text placeholder=Description></textarea>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=gf-form>\\n\\t\\t\\t\\t<span class=\\\"gf-form-label width-7\\\">Tags</span>\\n\\t\\t\\t\\t<bootstrap-tagsinput ng-model=ctrl.event.tags tagclass=\\\"label label-tag\\\" placeholder=\\\"add tags\\\">\\n\\t\\t\\t\\t</bootstrap-tagsinput>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=gf-form-button-row>\\n\\t\\t\\t\\t<button type=submit class=\\\"btn btn-primary\\\" ng-click=ctrl.save()>Save</button>\\n\\t\\t\\t\\t<button ng-if=ctrl.event.id type=submit class=\\\"btn btn-danger\\\" ng-click=ctrl.delete()>Delete</button>\\n\\t\\t\\t\\t<a class=btn-text ng-click=ctrl.close();>Cancel</a>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</form>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","// Copyright (c) 2014, Hugh Kennedy\n// Based on code from https://github.com/hughsk/flat/blob/master/index.js\n//\nexport default function flatten(target: object, opts?: { delimiter?: any; maxDepth?: any; safe?: any }): any {\n  opts = opts || {};\n\n  const delimiter = opts.delimiter || '.';\n  let maxDepth = opts.maxDepth || 3;\n  let currentDepth = 1;\n  const output: any = {};\n\n  function step(object: any, prev: string) {\n    Object.keys(object).forEach(key => {\n      const value = object[key];\n      const isarray = opts.safe && Array.isArray(value);\n      const type = Object.prototype.toString.call(value);\n      const isobject = type === '[object Object]';\n\n      const newKey = prev ? prev + delimiter + key : key;\n\n      if (!opts.maxDepth) {\n        maxDepth = currentDepth + 1;\n      }\n\n      if (!isarray && isobject && Object.keys(value).length && currentDepth < maxDepth) {\n        ++currentDepth;\n        return step(value, newKey);\n      }\n\n      output[newKey] = value;\n    });\n  }\n\n  step(target, null);\n\n  return output;\n}\n","import { Organization, ThunkResult } from 'app/types';\nimport { getBackendSrv } from '@grafana/runtime';\n\nexport enum ActionTypes {\n  LoadOrganization = 'LOAD_ORGANIZATION',\n  SetOrganizationName = 'SET_ORGANIZATION_NAME',\n}\n\ninterface LoadOrganizationAction {\n  type: ActionTypes.LoadOrganization;\n  payload: Organization;\n}\n\ninterface SetOrganizationNameAction {\n  type: ActionTypes.SetOrganizationName;\n  payload: string;\n}\n\nconst organizationLoaded = (organization: Organization) => ({\n  type: ActionTypes.LoadOrganization,\n  payload: organization,\n});\n\nexport const setOrganizationName = (orgName: string) => ({\n  type: ActionTypes.SetOrganizationName,\n  payload: orgName,\n});\n\nexport type Action = LoadOrganizationAction | SetOrganizationNameAction;\n\nexport function loadOrganization(): ThunkResult<any> {\n  return async dispatch => {\n    const organizationResponse = await getBackendSrv().get('/api/org');\n    dispatch(organizationLoaded(organizationResponse));\n\n    return organizationResponse;\n  };\n}\n\nexport function updateOrganization(): ThunkResult<any> {\n  return async (dispatch, getStore) => {\n    const organization = getStore().organization.organization;\n\n    await getBackendSrv().put('/api/org', { name: organization.name });\n\n    dispatch(loadOrganization());\n  };\n}\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport { AsyncSelect } from '@grafana/ui';\nimport { debounce } from 'lodash';\nimport { getBackendSrv } from 'app/core/services/backend_srv';\n\nexport interface Team {\n  id: number;\n  label: string;\n  name: string;\n  avatarUrl: string;\n}\n\nexport interface Props {\n  onSelected: (team: Team) => void;\n  className?: string;\n}\n\nexport interface State {\n  isLoading: boolean;\n}\n\nexport class TeamPicker extends Component<Props, State> {\n  debouncedSearch: any;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { isLoading: false };\n    this.search = this.search.bind(this);\n\n    this.debouncedSearch = debounce(this.search, 300, {\n      leading: true,\n      trailing: true,\n    });\n  }\n\n  search(query?: string) {\n    const backendSrv = getBackendSrv();\n    this.setState({ isLoading: true });\n\n    if (_.isNil(query)) {\n      query = '';\n    }\n\n    return backendSrv.get(`/api/teams/search?perpage=10&page=1&query=${query}`).then((result: any) => {\n      const teams = result.teams.map((team: any) => {\n        return {\n          id: team.id,\n          value: team.id,\n          label: team.name,\n          name: team.name,\n          imgUrl: team.avatarUrl,\n        };\n      });\n\n      this.setState({ isLoading: false });\n      return teams;\n    });\n  }\n\n  render() {\n    const { onSelected, className } = this.props;\n    const { isLoading } = this.state;\n    return (\n      <div className=\"user-picker\">\n        <AsyncSelect\n          isLoading={isLoading}\n          defaultOptions={true}\n          loadOptions={this.debouncedSearch}\n          onChange={onSelected}\n          className={className}\n          placeholder=\"Select a team\"\n          noOptionsMessage={() => 'No teams found'}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { UserPicker } from 'app/core/components/Select/UserPicker';\nimport { TeamPicker, Team } from 'app/core/components/Select/TeamPicker';\nimport { Select } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport { User } from 'app/types';\nimport {\n  dashboardPermissionLevels,\n  dashboardAclTargets,\n  AclTarget,\n  PermissionLevel,\n  NewDashboardAclItem,\n  OrgRole,\n} from 'app/types/acl';\n\nexport interface Props {\n  onAddPermission: (item: NewDashboardAclItem) => void;\n  onCancel: () => void;\n}\n\nclass AddPermissions extends Component<Props, NewDashboardAclItem> {\n  static defaultProps = {\n    showPermissionLevels: true,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = this.getCleanState();\n  }\n\n  getCleanState() {\n    return {\n      userId: 0,\n      teamId: 0,\n      type: AclTarget.Team,\n      permission: PermissionLevel.View,\n    };\n  }\n\n  onTypeChanged = (evt: any) => {\n    const type = evt.target.value as AclTarget;\n\n    switch (type) {\n      case AclTarget.User:\n      case AclTarget.Team:\n        this.setState({ type: type, userId: 0, teamId: 0, role: undefined });\n        break;\n      case AclTarget.Editor:\n        this.setState({ type: type, userId: 0, teamId: 0, role: OrgRole.Editor });\n        break;\n      case AclTarget.Viewer:\n        this.setState({ type: type, userId: 0, teamId: 0, role: OrgRole.Viewer });\n        break;\n    }\n  };\n\n  onUserSelected = (user: User) => {\n    this.setState({ userId: user && !Array.isArray(user) ? user.id : 0 });\n  };\n\n  onTeamSelected = (team: Team) => {\n    this.setState({ teamId: team && !Array.isArray(team) ? team.id : 0 });\n  };\n\n  onPermissionChanged = (permission: SelectableValue<PermissionLevel>) => {\n    this.setState({ permission: permission.value });\n  };\n\n  onSubmit = async (evt: React.SyntheticEvent) => {\n    evt.preventDefault();\n    await this.props.onAddPermission(this.state);\n    this.setState(this.getCleanState());\n  };\n\n  isValid() {\n    switch (this.state.type) {\n      case AclTarget.Team:\n        return this.state.teamId > 0;\n      case AclTarget.User:\n        return this.state.userId > 0;\n    }\n    return true;\n  }\n\n  render() {\n    const { onCancel } = this.props;\n    const newItem = this.state;\n    const pickerClassName = 'min-width-20';\n    const isValid = this.isValid();\n    return (\n      <div className=\"gf-form-inline cta-form\">\n        <button className=\"cta-form__close btn btn-transparent\" onClick={onCancel}>\n          <i className=\"fa fa-close\" />\n        </button>\n        <form name=\"addPermission\" onSubmit={this.onSubmit}>\n          <h5>Add Permission For</h5>\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form\">\n              <div className=\"gf-form-select-wrapper\">\n                <select className=\"gf-form-input gf-size-auto\" value={newItem.type} onChange={this.onTypeChanged}>\n                  {dashboardAclTargets.map((option, idx) => {\n                    return (\n                      <option key={idx} value={option.value}>\n                        {option.text}\n                      </option>\n                    );\n                  })}\n                </select>\n              </div>\n            </div>\n\n            {newItem.type === AclTarget.User ? (\n              <div className=\"gf-form\">\n                <UserPicker onSelected={this.onUserSelected} className={pickerClassName} />\n              </div>\n            ) : null}\n\n            {newItem.type === AclTarget.Team ? (\n              <div className=\"gf-form\">\n                <TeamPicker onSelected={this.onTeamSelected} className={pickerClassName} />\n              </div>\n            ) : null}\n\n            <div className=\"gf-form\">\n              <Select\n                isSearchable={false}\n                options={dashboardPermissionLevels}\n                onChange={this.onPermissionChanged}\n                className=\"gf-form-select-box__control--menu-right\"\n              />\n            </div>\n\n            <div className=\"gf-form\">\n              <button data-save-permission className=\"btn btn-primary\" type=\"submit\" disabled={!isValid}>\n                Save\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddPermissions;\n","var path = 'public/app/features/alerting/partials/alert_howto.html';\nvar html = \"<div class=modal-body>\\n\\t<div class=modal-header>\\n\\t\\t<h2 class=modal-header-title>\\n\\t\\t\\t<i class=\\\"fa fa-info-circle\\\"></i>\\n\\t\\t\\t<span class=p-l-1>Adding an Alert</span>\\n\\t\\t</h2>\\n\\n\\t\\t<a class=modal-header-close ng-click=dismiss();>\\n\\t\\t\\t<i class=\\\"fa fa-remove\\\"></i>\\n\\t\\t</a>\\n\\t</div>\\n\\n\\n\\t<div class=modal-content>\\n\\t\\t<div class=text-center>\\n\\t\\t\\t<img src=public/img/alert_howto_new.png>\\n\\t\\t</div>\\n\\t\\t<p class=\\\"p-a-2 text-center offset-lg-1 col-lg-10\\\">\\n\\t\\t\\tAlerts are added and configured in the <strong>Alert Tab</strong> of any dashboard\\n\\t\\t\\tgraph panel, letting you build and visualize an alert using existing queries.\\n\\t\\t\\t<br> <br>\\n\\t\\t\\tTo persist your alert rule changes remember to save the dashboard.\\n\\t\\t\\t<br>\\n\\t\\t\\t<br>\\n\\t\\t</p>\\n\\t</div>\\n\\n</div>\\n\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/features/dashboard/components/VersionHistory/template.html';\nvar html = \"<h3 class=dashboard-settings__header>\\n  <a ng-click=\\\"ctrl.switchMode('list')\\\">Versions</a>\\n  <span ng-show=\\\"ctrl.mode === 'compare'\\\">\\n    &gt; Comparing {{ctrl.baseInfo.version}}\\n    <i class=\\\"fa fa-arrows-h\\\"></i>\\n    {{ctrl.newInfo.version}}\\n    <cite class=muted ng-if=ctrl.isNewLatest>(Latest)</cite>\\n  </span>\\n</h3>\\n\\n<div ng-if=\\\"ctrl.mode === 'list'\\\">\\n  <div ng-if=ctrl.loading>\\n    <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n    <em>Fetching history list&hellip;</em>\\n  </div>\\n\\n  <div ng-if=!ctrl.loading>\\n    <div class=gf-form-group>\\n      <table class=filter-table>\\n        <thead>\\n          <tr>\\n            <th class=width-4></th>\\n            <th class=width-4>Version</th>\\n            <th class=width-14>Date</th>\\n            <th class=width-10>Updated By</th>\\n            <th>Notes</th>\\n            <th></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr ng-repeat=\\\"revision in ctrl.revisions\\\">\\n            <td class=filter-table__switch-cell bs-tooltip=\\\"!revision.checked && ctrl.canCompare ? 'You can only compare 2 versions at a time' : ''\\\" data-placement=right>\\n              <gf-form-checkbox switch-class=gf-form-switch--table-cell checked=revision.checked on-change=ctrl.revisionSelectionChanged() ng-disabled=\\\"!revision.checked && ctrl.canCompare\\\">\\n              </gf-form-checkbox>\\n            </td>\\n            <td class=text-center>{{revision.version}}</td>\\n            <td>{{revision.createdDateString}}</td>\\n            <td>{{revision.createdBy}}</td>\\n            <td>{{revision.message}}</td>\\n            <td class=text-right>\\n              <a class=\\\"btn btn-inverse btn-small\\\" ng-show=\\\"revision.version !== ctrl.dashboard.version\\\" ng-click=ctrl.restore(revision.version)>\\n                <i class=\\\"fa fa-history\\\"></i>&nbsp;&nbsp;Restore\\n              </a>\\n              <a class=\\\"btn btn-outline-disabled btn-small\\\" ng-show=\\\"revision.version === ctrl.dashboard.version\\\">\\n                <i class=\\\"fa fa-check\\\"></i>&nbsp;&nbsp;Latest\\n              </a>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n\\n      <div ng-if=ctrl.appending>\\n        <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n        <em>Fetching more entries&hellip;</em>\\n      </div>\\n\\n      <div class=gf-form-group>\\n        <div class=gf-form-button-row>\\n          <button type=button class=\\\"btn gf-form-button btn-inverse\\\" ng-if=\\\"ctrl.revisions.length >= ctrl.limit\\\" ng-click=ctrl.addToLog() ng-disabled=ctrl.isLastPage()>\\n            Show more versions\\n          </button>\\n          <button type=button class=\\\"btn btn-primary\\\" ng-if=\\\"ctrl.revisions.length > 1\\\" ng-disabled=!ctrl.canCompare ng-click=ctrl.getDiff(ctrl.diff) bs-tooltip=\\\"ctrl.canCompare ? '' : 'Select 2 versions to start comparing'\\\" data-placement=bottom>\\n            <i class=\\\"fa fa-code-fork\\\"></i>&nbsp;&nbsp;Compare versions\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div ng-if=\\\"ctrl.mode === 'compare'\\\">\\n  <div ng-if=ctrl.loading>\\n    <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n    <em>Fetching changes&hellip;</em>\\n  </div>\\n\\n  <div ng-if=!ctrl.loading>\\n    <button type=button class=\\\"btn btn-danger pull-right\\\" ng-click=ctrl.restore(ctrl.baseInfo.version) ng-if=ctrl.isNewLatest>\\n      <i class=\\\"fa fa-history\\\"></i>&nbsp;&nbsp;Restore to version {{ctrl.baseInfo.version}}\\n    </button>\\n    <section>\\n      <p class=\\\"small muted\\\">\\n      <strong>Version {{ctrl.newInfo.version}}</strong> updated by\\n      <span>{{ctrl.newInfo.createdBy}} </span>\\n      <span>{{ctrl.newInfo.ageString}}</span>\\n      <span> - {{ctrl.newInfo.message}}</span>\\n      </p>\\n      <p class=\\\"small muted\\\">\\n      <strong>Version {{ctrl.baseInfo.version}}</strong> updated by\\n      <span>{{ctrl.baseInfo.createdBy}} </span>\\n      <span>{{ctrl.baseInfo.ageString}}</span>\\n      <span> - {{ctrl.baseInfo.message}}</span>\\n      </p>\\n    </section>\\n\\n    <div id=delta diff-delta>\\n      <div class=delta-basic compile=ctrl.delta.basic></div>\\n    </div>\\n\\n    <div class=gf-form-button-row>\\n      <button class=\\\"btn btn-secondary\\\" ng-click=\\\"ctrl.getDiff('json')\\\">View JSON Diff</button>\\n    </div>\\n\\n    <div class=delta-html ng-show=\\\"ctrl.diff === 'json'\\\" compile=ctrl.delta.json></div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","(function ($) {\n    var options = {\n        series: {\n            stackpercent: null\n        } // or number/string\n    };\n\n    function init(plot) {\n\n        // will be built up dynamically as a hash from x-value, or y-value if horizontal\n        var stackBases = {};\n        var processed = false;\n        var stackSums = {};\n\n        //set percentage for stacked chart\n        function processRawData(plot, series, data, datapoints) {\n            if (!processed) {\n                processed = true;\n                stackSums = getStackSums(plot.getData());\n            }\n\t\t\tif (series.stackpercent == true) {\n\t\t\t\tvar num = data.length;\n\t\t\t\tseries.percents = [];\n\t\t\t\tvar key_idx = 0;\n\t\t\t\tvar value_idx = 1;\n\t\t\t\tif (series.bars && series.bars.horizontal && series.bars.horizontal === true) {\n\t\t\t\t\tkey_idx = 1;\n\t\t\t\t\tvalue_idx = 0;\n\t\t\t\t}\n\t\t\t\tfor (var j = 0; j < num; j++) {\n\t\t\t\t\tvar sum = stackSums[data[j][key_idx] + \"\"];\n\t\t\t\t\tif (sum > 0) {\n\t\t\t\t\t\tseries.percents.push(data[j][value_idx] * 100 / sum);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tseries.percents.push(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n        }\n\n        //calculate summary\n        function getStackSums(_data) {\n            var data_len = _data.length;\n            var sums = {};\n            if (data_len > 0) {\n                //caculate summary\n                for (var i = 0; i < data_len; i++) {\n                    if (_data[i].stackpercent) {\n\t\t\t\t\t\tvar key_idx = 0;\n\t\t\t\t\t\tvar value_idx = 1;\n\t\t\t\t\t\tif (_data[i].bars && _data[i].bars.horizontal && _data[i].bars.horizontal === true) {\n\t\t\t\t\t\t\tkey_idx = 1;\n\t\t\t\t\t\t\tvalue_idx = 0;\n\t\t\t\t\t\t}\n                        var num = _data[i].data.length;\n                        for (var j = 0; j < num; j++) {\n                            var value = 0;\n                            if (_data[i].data[j][1] != null) {\n                                value = _data[i].data[j][value_idx];\n                            }\n                            if (sums[_data[i].data[j][key_idx] + \"\"]) {\n                                sums[_data[i].data[j][key_idx] + \"\"] += value;\n                            } else {\n                                sums[_data[i].data[j][key_idx] + \"\"] = value;\n                            }\n\n                        }\n                    }\n                }\n            }\n            return sums;\n        }\n\n        function stackData(plot, s, datapoints) {\n            if (!s.stackpercent) return;\n            if (!processed) {\n                stackSums = getStackSums(plot.getData());\n            }\n            var newPoints = [];\n\n\n\t\t\tvar key_idx = 0;\n\t\t\tvar value_idx = 1;\n\t\t\tif (s.bars && s.bars.horizontal && s.bars.horizontal === true) {\n\t\t\t\tkey_idx = 1;\n\t\t\t\tvalue_idx = 0;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < datapoints.points.length; i += 3) {\n\t\t\t\t// note that the values need to be turned into absolute y-values.\n\t\t\t\t// in other words, if you were to stack (x, y1), (x, y2), and (x, y3),\n\t\t\t\t// (each from different series, which is where stackBases comes in),\n\t\t\t\t// you'd want the new points to be (x, y1, 0), (x, y1+y2, y1), (x, y1+y2+y3, y1+y2)\n\t\t\t\t// generally, (x, thisValue + (base up to this point), + (base up to this point))\n\t\t\t\tif (!stackBases[datapoints.points[i + key_idx]]) {\n\t\t\t\t\tstackBases[datapoints.points[i + key_idx]] = 0;\n\t\t\t\t}\n\t\t\t\tnewPoints[i + key_idx] = datapoints.points[i + key_idx];\n\t\t\t\tnewPoints[i + value_idx] = datapoints.points[i + value_idx] + stackBases[datapoints.points[i + key_idx]];\n\t\t\t\tnewPoints[i + 2] = stackBases[datapoints.points[i + key_idx]];\n\t\t\t\tstackBases[datapoints.points[i + key_idx]] += datapoints.points[i + value_idx];\n\t\t\t\t// change points to percentage values\n\t\t\t\t// you may need to set yaxis:{ max = 100 }\n\t\t\t\tif ( stackSums[newPoints[i+key_idx]+\"\"] > 0 ){\n\t\t\t\t\tnewPoints[i + value_idx] = newPoints[i + value_idx] * 100 / stackSums[newPoints[i + key_idx] + \"\"];\n\t\t\t\t\tnewPoints[i + 2] = newPoints[i + 2] * 100 / stackSums[newPoints[i + key_idx] + \"\"];\n\t\t\t\t} else {\n\t\t\t\t\tnewPoints[i + value_idx] = 0;\n\t\t\t\t\tnewPoints[i + 2] = 0;\n\t\t\t\t}\n\t\t\t}\n\n            datapoints.points = newPoints;\n        }\n\n\t\tplot.hooks.processRawData.push(processRawData);\n        plot.hooks.processDatapoints.push(stackData);\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: 'stackpercent',\n        version: '0.1'\n    });\n})(jQuery);\n","import { reducerFactory } from '../../../../core/redux';\nimport { panelEditorCleanUp, panelEditorInitCompleted } from './actions';\n\nexport interface PanelEditorTab {\n  id: string;\n  text: string;\n}\n\nexport enum PanelEditorTabIds {\n  Queries = 'queries',\n  Visualization = 'visualization',\n  Advanced = 'advanced',\n  Alert = 'alert',\n}\n\nexport const panelEditorTabTexts = {\n  [PanelEditorTabIds.Queries]: 'Queries',\n  [PanelEditorTabIds.Visualization]: 'Visualization',\n  [PanelEditorTabIds.Advanced]: 'General',\n  [PanelEditorTabIds.Alert]: 'Alert',\n};\n\nexport const getPanelEditorTab = (tabId: PanelEditorTabIds): PanelEditorTab => {\n  return {\n    id: tabId,\n    text: panelEditorTabTexts[tabId],\n  };\n};\n\nexport interface PanelEditorState {\n  activeTab: PanelEditorTabIds;\n  tabs: PanelEditorTab[];\n}\n\nexport const initialState: PanelEditorState = {\n  activeTab: null,\n  tabs: [],\n};\n\nexport const panelEditorReducer = reducerFactory<PanelEditorState>(initialState)\n  .addMapper({\n    filter: panelEditorInitCompleted,\n    mapper: (state, action): PanelEditorState => {\n      const { activeTab, tabs } = action.payload;\n      return {\n        ...state,\n        activeTab,\n        tabs,\n      };\n    },\n  })\n  .addMapper({\n    filter: panelEditorCleanUp,\n    mapper: (): PanelEditorState => initialState,\n  })\n  .create();\n","var path = 'public/app/core/components/search/search.html';\nvar html = \"\\n<div class=search-backdrop ng-if=ctrl.isOpen></div>\\n\\n<div class=search-container ng-if=ctrl.isOpen>\\n\\n  <search-field query=ctrl.query autofocus=ctrl.giveSearchFocus on-change=ctrl.onQueryChange on-key-down=ctrl.onKeyDown />\\n\\n\\n\\t<div class=search-dropdown>\\n    <div class=search-dropdown__col_1>\\n      <div class=search-results-scroller>\\n        <div class=search-results-container grafana-scrollbar>\\n          <h6 ng-show=\\\"!ctrl.isLoading && ctrl.results.length === 0\\\">No dashboards matching your query were found.</h6>\\n          <dashboard-search-results results=ctrl.results on-tag-selected=ctrl.filterByTag($tag) on-folder-expanding=ctrl.folderExpanding() on-folder-expanded=ctrl.folderExpanded($folder) />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=search-dropdown__col_2>\\n      <div class=search-filter-box ng-click=ctrl.onFilterboxClick()>\\n        <div class=search-filter-box__header>\\n          <i class=\\\"fa fa-filter\\\"></i>\\n          Filter by:\\n          <a class=\\\"pointer pull-right small\\\" ng-click=ctrl.clearSearchFilter()>\\n            <i class=\\\"fa fa-remove\\\"></i> Clear\\n          </a>\\n        </div>\\n\\n        <tag-filter tags=ctrl.query.tags tagoptions=ctrl.getTags on-change=ctrl.onTagFiltersChanged>\\n        </tag-filter>\\n      </div>\\n\\n      <div class=search-filter-box ng-if=\\\"ctrl.isEditor || ctrl.hasEditPermissionInFolders\\\">\\n        <a href=dashboard/new class=search-filter-box-link>\\n          <i class=\\\"gicon gicon-dashboard-new\\\"></i> New dashboard\\n        </a>\\n        <a href=dashboards/folder/new class=search-filter-box-link ng-if=ctrl.isEditor>\\n          <i class=\\\"gicon gicon-folder-new\\\"></i> New folder\\n        </a>\\n        <a href=dashboard/import class=search-filter-box-link ng-if=\\\"ctrl.isEditor || ctrl.hasEditPermissionInFolders\\\">\\n          <i class=\\\"gicon gicon-dashboard-import\\\"></i> Import dashboard\\n        </a>\\n        <a class=search-filter-box-link target=_blank href=\\\"https://grafana.com/dashboards?utm_source=grafana_search\\\">\\n          <img src=public/img/icn-dashboard-tiny.svg width=20 /> Find dashboards on Grafana.com\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import angular from 'angular';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport coreModule from 'app/core/core_module';\nimport { DashboardModel } from 'app/features/dashboard/state';\nimport DatasourceSrv from '../plugins/datasource_srv';\nimport appEvents from 'app/core/app_events';\n\nexport class AnnotationsEditorCtrl {\n  mode: any;\n  datasources: any;\n  annotations: any;\n  currentAnnotation: any;\n  currentDatasource: any;\n  currentIsNew: any;\n  dashboard: DashboardModel;\n\n  annotationDefaults: any = {\n    name: '',\n    datasource: null,\n    iconColor: 'rgba(255, 96, 96, 1)',\n    enable: true,\n    showIn: 0,\n    hide: false,\n  };\n\n  emptyListCta = {\n    title: 'There are no custom annotation queries added yet',\n    buttonIcon: 'gicon gicon-annotation',\n    buttonTitle: 'Add Annotation Query',\n    infoBox: {\n      __html: `<p>Annotations provide a way to integrate event data into your graphs. They are visualized as vertical lines\n    and icons on all graph panels. When you hover over an annotation icon you can get event text &amp; tags for\n    the event. You can add annotation events directly from grafana by holding CTRL or CMD + click on graph (or\n    drag region). These will be stored in Grafana's annotation database.\n  </p>\n  Checkout the\n  <a class='external-link' target='_blank' href='http://docs.grafana.org/reference/annotations/'\n    >Annotations documentation</a\n  >\n  for more information.`,\n    },\n    infoBoxTitle: 'What are annotations?',\n  };\n\n  showOptions: any = [{ text: 'All Panels', value: 0 }, { text: 'Specific Panels', value: 1 }];\n\n  /** @ngInject */\n  constructor(private $scope: any, private datasourceSrv: DatasourceSrv) {\n    $scope.ctrl = this;\n\n    this.dashboard = $scope.dashboard;\n    this.mode = 'list';\n    this.datasources = datasourceSrv.getAnnotationSources();\n    this.annotations = this.dashboard.annotations.list;\n    this.reset();\n\n    this.onColorChange = this.onColorChange.bind(this);\n  }\n\n  async datasourceChanged() {\n    const newDatasource = await this.datasourceSrv.get(this.currentAnnotation.datasource);\n    this.$scope.$apply(() => {\n      this.currentDatasource = newDatasource;\n    });\n  }\n\n  edit(annotation: any) {\n    this.currentAnnotation = annotation;\n    this.currentAnnotation.showIn = this.currentAnnotation.showIn || 0;\n    this.currentIsNew = false;\n    this.datasourceChanged();\n    this.mode = 'edit';\n    $('.tooltip.in').remove();\n  }\n\n  reset() {\n    this.currentAnnotation = angular.copy(this.annotationDefaults);\n    this.currentAnnotation.datasource = this.datasources[0].name;\n    this.currentIsNew = true;\n    this.datasourceChanged();\n  }\n\n  update() {\n    this.reset();\n    this.mode = 'list';\n  }\n\n  setupNew = () => {\n    this.mode = 'new';\n    this.reset();\n  };\n\n  backToList() {\n    this.mode = 'list';\n  }\n\n  move(index: number, dir: number) {\n    // @ts-ignore\n    _.move(this.annotations, index, index + dir);\n  }\n\n  add() {\n    const sameName: any = _.find(this.annotations, { name: this.currentAnnotation.name });\n    if (sameName) {\n      appEvents.emit('alert-warning', ['Validation', 'Annotations with the same name already exists']);\n      return;\n    }\n    this.annotations.push(this.currentAnnotation);\n    this.reset();\n    this.mode = 'list';\n    this.dashboard.updateSubmenuVisibility();\n  }\n\n  removeAnnotation(annotation: any) {\n    const index = _.indexOf(this.annotations, annotation);\n    this.annotations.splice(index, 1);\n    this.dashboard.updateSubmenuVisibility();\n  }\n\n  onColorChange(newColor: string) {\n    this.currentAnnotation.iconColor = newColor;\n  }\n}\n\ncoreModule.controller('AnnotationsEditorCtrl', AnnotationsEditorCtrl);\n","import _ from 'lodash';\n\nexport function dedupAnnotations(annotations: any) {\n  let dedup = [];\n\n  // Split events by annotationId property existence\n  const events = _.partition(annotations, 'id');\n\n  const eventsById = _.groupBy(events[0], 'id');\n  dedup = _.map(eventsById, eventGroup => {\n    if (eventGroup.length > 1 && !_.every(eventGroup, isPanelAlert)) {\n      // Get first non-panel alert\n      return _.find(eventGroup, event => {\n        return event.eventType !== 'panel-alert';\n      });\n    } else {\n      return _.head(eventGroup);\n    }\n  });\n\n  dedup = _.concat(dedup, events[1]);\n  return dedup;\n}\n\nfunction isPanelAlert(event: { eventType: string }) {\n  return event.eventType === 'panel-alert';\n}\n","// Libaries\nimport angular, { IQService } from 'angular';\nimport _ from 'lodash';\n\n// Components\nimport './editor_ctrl';\nimport coreModule from 'app/core/core_module';\n\n// Utils & Services\nimport { dedupAnnotations } from './events_processing';\n\n// Types\nimport { DashboardModel } from '../dashboard/state/DashboardModel';\nimport { AnnotationEvent } from '@grafana/data';\nimport DatasourceSrv from '../plugins/datasource_srv';\nimport { BackendSrv } from 'app/core/services/backend_srv';\nimport { TimeSrv } from '../dashboard/services/TimeSrv';\nimport { DataSourceApi } from '@grafana/ui';\n\nexport class AnnotationsSrv {\n  globalAnnotationsPromise: any;\n  alertStatesPromise: any;\n  datasourcePromises: any;\n\n  /** @ngInject */\n  constructor(\n    private $rootScope: any,\n    private $q: IQService,\n    private datasourceSrv: DatasourceSrv,\n    private backendSrv: BackendSrv,\n    private timeSrv: TimeSrv\n  ) {}\n\n  init(dashboard: DashboardModel) {\n    // always clearPromiseCaches when loading new dashboard\n    this.clearPromiseCaches();\n    // clear promises on refresh events\n    dashboard.on('refresh', this.clearPromiseCaches.bind(this));\n  }\n\n  clearPromiseCaches() {\n    this.globalAnnotationsPromise = null;\n    this.alertStatesPromise = null;\n    this.datasourcePromises = null;\n  }\n\n  getAnnotations(options: any) {\n    return this.$q\n      .all([this.getGlobalAnnotations(options), this.getAlertStates(options)])\n      .then(results => {\n        // combine the annotations and flatten results\n        let annotations: AnnotationEvent[] = _.flattenDeep(results[0]);\n\n        // filter out annotations that do not belong to requesting panel\n        annotations = _.filter(annotations, item => {\n          // if event has panel id and query is of type dashboard then panel and requesting panel id must match\n          if (item.panelId && item.source.type === 'dashboard') {\n            return item.panelId === options.panel.id;\n          }\n          return true;\n        });\n\n        annotations = dedupAnnotations(annotations);\n\n        // look for alert state for this panel\n        const alertState: any = _.find(results[1], { panelId: options.panel.id });\n\n        return {\n          annotations: annotations,\n          alertState: alertState,\n        };\n      })\n      .catch(err => {\n        if (!err.message && err.data && err.data.message) {\n          err.message = err.data.message;\n        }\n        console.log('AnnotationSrv.query error', err);\n        this.$rootScope.appEvent('alert-error', ['Annotation Query Failed', err.message || err]);\n        return [];\n      });\n  }\n\n  getAlertStates(options: any) {\n    if (!options.dashboard.id) {\n      return this.$q.when([]);\n    }\n\n    // ignore if no alerts\n    if (options.panel && !options.panel.alert) {\n      return this.$q.when([]);\n    }\n\n    if (options.range.raw.to !== 'now') {\n      return this.$q.when([]);\n    }\n\n    if (this.alertStatesPromise) {\n      return this.alertStatesPromise;\n    }\n\n    this.alertStatesPromise = this.backendSrv.get('/api/alerts/states-for-dashboard', {\n      dashboardId: options.dashboard.id,\n    });\n    return this.alertStatesPromise;\n  }\n\n  getGlobalAnnotations(options: any) {\n    const dashboard = options.dashboard;\n\n    if (this.globalAnnotationsPromise) {\n      return this.globalAnnotationsPromise;\n    }\n\n    const range = this.timeSrv.timeRange();\n    const promises = [];\n    const dsPromises = [];\n\n    for (const annotation of dashboard.annotations.list) {\n      if (!annotation.enable) {\n        continue;\n      }\n\n      if (annotation.snapshotData) {\n        return this.translateQueryResult(annotation, annotation.snapshotData);\n      }\n      const datasourcePromise = this.datasourceSrv.get(annotation.datasource);\n      dsPromises.push(datasourcePromise);\n      promises.push(\n        datasourcePromise\n          .then((datasource: DataSourceApi) => {\n            // issue query against data source\n            return datasource.annotationQuery({\n              range: range,\n              rangeRaw: range.raw,\n              annotation: annotation,\n              dashboard: dashboard,\n            });\n          })\n          .then(results => {\n            // store response in annotation object if this is a snapshot call\n            if (dashboard.snapshot) {\n              annotation.snapshotData = angular.copy(results);\n            }\n            // translate result\n            return this.translateQueryResult(annotation, results);\n          })\n      );\n    }\n    this.datasourcePromises = this.$q.all(dsPromises);\n    this.globalAnnotationsPromise = this.$q.all(promises);\n    return this.globalAnnotationsPromise;\n  }\n\n  saveAnnotationEvent(annotation: AnnotationEvent) {\n    this.globalAnnotationsPromise = null;\n    return this.backendSrv.post('/api/annotations', annotation);\n  }\n\n  updateAnnotationEvent(annotation: AnnotationEvent) {\n    this.globalAnnotationsPromise = null;\n    return this.backendSrv.put(`/api/annotations/${annotation.id}`, annotation);\n  }\n\n  deleteAnnotationEvent(annotation: AnnotationEvent) {\n    this.globalAnnotationsPromise = null;\n    const deleteUrl = `/api/annotations/${annotation.id}`;\n\n    return this.backendSrv.delete(deleteUrl);\n  }\n\n  translateQueryResult(annotation: any, results: any) {\n    // if annotation has snapshotData\n    // make clone and remove it\n    if (annotation.snapshotData) {\n      annotation = angular.copy(annotation);\n      delete annotation.snapshotData;\n    }\n\n    for (const item of results) {\n      item.source = annotation;\n      item.isRegion = item.timeEnd && item.time !== item.timeEnd;\n    }\n\n    return results;\n  }\n}\n\ncoreModule.service('annotationsSrv', AnnotationsSrv);\n","import _ from 'lodash';\nimport { coreModule } from 'app/core/core';\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { AnnotationEvent } from '@grafana/data';\nimport { dateTime } from '@grafana/data';\nimport { AnnotationsSrv } from './all';\n\nexport class EventEditorCtrl {\n  panelCtrl: MetricsPanelCtrl;\n  event: AnnotationEvent;\n  timeRange: { from: number; to: number };\n  form: any;\n  close: any;\n  timeFormated: string;\n\n  /** @ngInject */\n  constructor(private annotationsSrv: AnnotationsSrv) {\n    this.event.panelId = this.panelCtrl.panel.id;\n    this.event.dashboardId = this.panelCtrl.dashboard.id;\n\n    // Annotations query returns time as Unix timestamp in milliseconds\n    this.event.time = tryEpochToMoment(this.event.time);\n    if (this.event.isRegion) {\n      this.event.timeEnd = tryEpochToMoment(this.event.timeEnd);\n    }\n\n    this.timeFormated = this.panelCtrl.dashboard.formatDate(this.event.time);\n  }\n\n  save() {\n    if (!this.form.$valid) {\n      return;\n    }\n\n    const saveModel = _.cloneDeep(this.event);\n    saveModel.time = saveModel.time.valueOf();\n    saveModel.timeEnd = 0;\n\n    if (saveModel.isRegion) {\n      saveModel.timeEnd = this.event.timeEnd.valueOf();\n\n      if (saveModel.timeEnd < saveModel.time) {\n        console.log('invalid time');\n        return;\n      }\n    }\n\n    if (saveModel.id) {\n      this.annotationsSrv\n        .updateAnnotationEvent(saveModel)\n        .then(() => {\n          this.panelCtrl.refresh();\n          this.close();\n        })\n        .catch(() => {\n          this.panelCtrl.refresh();\n          this.close();\n        });\n    } else {\n      this.annotationsSrv\n        .saveAnnotationEvent(saveModel)\n        .then(() => {\n          this.panelCtrl.refresh();\n          this.close();\n        })\n        .catch(() => {\n          this.panelCtrl.refresh();\n          this.close();\n        });\n    }\n  }\n\n  delete() {\n    return this.annotationsSrv\n      .deleteAnnotationEvent(this.event)\n      .then(() => {\n        this.panelCtrl.refresh();\n        this.close();\n      })\n      .catch(() => {\n        this.panelCtrl.refresh();\n        this.close();\n      });\n  }\n}\n\nfunction tryEpochToMoment(timestamp: any) {\n  if (timestamp && _.isNumber(timestamp)) {\n    const epoch = Number(timestamp);\n    return dateTime(epoch);\n  } else {\n    return timestamp;\n  }\n}\n\nexport function eventEditor() {\n  return {\n    restrict: 'E',\n    controller: EventEditorCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    templateUrl: 'public/app/features/annotations/partials/event_editor.html',\n    scope: {\n      panelCtrl: '=',\n      event: '=',\n      close: '&',\n    },\n  };\n}\n\ncoreModule.directive('eventEditor', eventEditor);\n","import _ from 'lodash';\nimport tinycolor from 'tinycolor2';\nimport {\n  OK_COLOR,\n  ALERTING_COLOR,\n  NO_DATA_COLOR,\n  PENDING_COLOR,\n  DEFAULT_ANNOTATION_COLOR,\n  REGION_FILL_ALPHA,\n} from '@grafana/ui';\n\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { AnnotationEvent } from '@grafana/data';\n\nexport class EventManager {\n  event: AnnotationEvent;\n  editorOpen: boolean;\n\n  constructor(private panelCtrl: MetricsPanelCtrl) {}\n\n  editorClosed() {\n    this.event = null;\n    this.editorOpen = false;\n    this.panelCtrl.render();\n  }\n\n  editorOpened() {\n    this.editorOpen = true;\n  }\n\n  updateTime(range: { from: any; to: any }) {\n    if (!this.event) {\n      this.event = {};\n      this.event.dashboardId = this.panelCtrl.dashboard.id;\n      this.event.panelId = this.panelCtrl.panel.id;\n    }\n\n    // update time\n    this.event.time = range.from;\n    this.event.isRegion = false;\n\n    if (range.to) {\n      this.event.timeEnd = range.to;\n      this.event.isRegion = true;\n    }\n\n    this.panelCtrl.render();\n  }\n\n  editEvent(event: AnnotationEvent, elem?: any) {\n    this.event = event;\n    this.panelCtrl.render();\n  }\n\n  addFlotEvents(annotations: any, flotOptions: any) {\n    if (!this.event && annotations.length === 0) {\n      return;\n    }\n\n    const types: any = {\n      $__alerting: {\n        color: ALERTING_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n      $__ok: {\n        color: OK_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n      $__no_data: {\n        color: NO_DATA_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n      $__pending: {\n        color: PENDING_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n      $__editing: {\n        color: DEFAULT_ANNOTATION_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n    };\n\n    if (this.event) {\n      if (this.event.isRegion) {\n        annotations = [\n          {\n            isRegion: true,\n            min: this.event.time,\n            timeEnd: this.event.timeEnd,\n            text: this.event.text,\n            eventType: '$__editing',\n            editModel: this.event,\n          },\n        ];\n      } else {\n        annotations = [\n          {\n            min: this.event.time,\n            text: this.event.text,\n            editModel: this.event,\n            eventType: '$__editing',\n          },\n        ];\n      }\n    } else {\n      // annotations from query\n      for (let i = 0; i < annotations.length; i++) {\n        const item = annotations[i];\n\n        // add properties used by jquery flot events\n        item.min = item.time;\n        item.max = item.time;\n        item.eventType = item.source.name;\n\n        if (item.newState) {\n          item.eventType = '$__' + item.newState;\n          continue;\n        }\n\n        if (!types[item.source.name]) {\n          types[item.source.name] = {\n            color: item.source.iconColor,\n            position: 'BOTTOM',\n            markerSize: 5,\n          };\n        }\n      }\n    }\n\n    const regions = getRegions(annotations);\n    addRegionMarking(regions, flotOptions);\n\n    const eventSectionHeight = 20;\n    const eventSectionMargin = 7;\n    flotOptions.grid.eventSectionHeight = eventSectionMargin;\n    flotOptions.xaxis.eventSectionHeight = eventSectionHeight;\n\n    flotOptions.events = {\n      levels: _.keys(types).length + 1,\n      data: annotations,\n      types: types,\n      manager: this,\n    };\n  }\n}\n\nfunction getRegions(events: AnnotationEvent[]) {\n  return _.filter(events, 'isRegion');\n}\n\nfunction addRegionMarking(regions: any[], flotOptions: { grid: { markings: any } }) {\n  const markings = flotOptions.grid.markings;\n  const defaultColor = DEFAULT_ANNOTATION_COLOR;\n  let fillColor;\n\n  _.each(regions, region => {\n    if (region.source) {\n      fillColor = region.source.iconColor || defaultColor;\n    } else {\n      fillColor = defaultColor;\n    }\n\n    fillColor = addAlphaToRGB(fillColor, REGION_FILL_ALPHA);\n    markings.push({\n      xaxis: { from: region.min, to: region.timeEnd },\n      color: fillColor,\n    });\n  });\n}\n\nfunction addAlphaToRGB(colorString: string, alpha: number): string {\n  const color = tinycolor(colorString);\n  if (color.isValid()) {\n    color.setAlpha(alpha);\n    return color.toRgbString();\n  } else {\n    return colorString;\n  }\n}\n","import _ from 'lodash';\nimport $ from 'jquery';\nimport coreModule from 'app/core/core_module';\nimport alertDef from '../alerting/state/alertDef';\nimport { DashboardSrv } from '../dashboard/services/DashboardSrv';\nimport { ContextSrv } from 'app/core/services/context_srv';\n\n/** @ngInject */\nexport function annotationTooltipDirective(\n  $sanitize: any,\n  dashboardSrv: DashboardSrv,\n  contextSrv: ContextSrv,\n  $compile: any\n) {\n  function sanitizeString(str: string) {\n    try {\n      return $sanitize(str);\n    } catch (err) {\n      console.log('Could not sanitize annotation string, html escaping instead');\n      return _.escape(str);\n    }\n  }\n\n  return {\n    restrict: 'E',\n    scope: {\n      event: '=',\n      onEdit: '&',\n    },\n    link: (scope: any, element: JQuery) => {\n      const event = scope.event;\n      let title = event.title;\n      let text = event.text;\n      const dashboard = dashboardSrv.getCurrent();\n\n      let tooltip = '<div class=\"graph-annotation\">';\n      let titleStateClass = '';\n\n      if (event.alertId) {\n        const stateModel = alertDef.getStateDisplayModel(event.newState);\n        titleStateClass = stateModel.stateClass;\n        title = `<i class=\"${stateModel.iconClass}\"></i> ${stateModel.text}`;\n        text = alertDef.getAlertAnnotationInfo(event);\n        if (event.text) {\n          text = text + '<br />' + event.text;\n        }\n      } else if (title) {\n        text = title + '<br />' + (_.isString(text) ? text : '');\n        title = '';\n      }\n\n      let header = `<div class=\"graph-annotation__header\">`;\n      if (event.login) {\n        header += `<div class=\"graph-annotation__user\" bs-tooltip=\"'Created by ${event.login}'\"><img src=\"${\n          event.avatarUrl\n        }\" /></div>`;\n      }\n      header += `\n          <span class=\"graph-annotation__title ${titleStateClass}\">${sanitizeString(title)}</span>\n          <span class=\"graph-annotation__time\">${dashboard.formatDate(event.min)}</span>\n      `;\n\n      // Show edit icon only for users with at least Editor role\n      if (event.id && dashboard.meta.canEdit) {\n        header += `\n          <span class=\"pointer graph-annotation__edit-icon\" ng-click=\"onEdit()\">\n            <i class=\"fa fa-pencil-square\"></i>\n          </span>\n        `;\n      }\n\n      header += `</div>`;\n      tooltip += header;\n      tooltip += '<div class=\"graph-annotation__body\">';\n\n      if (text) {\n        tooltip += '<div>' + sanitizeString(text.replace(/\\n/g, '<br>')) + '</div>';\n      }\n\n      const tags = event.tags;\n\n      if (tags && tags.length) {\n        scope.tags = tags;\n        tooltip +=\n          '<span class=\"label label-tag small\" ng-repeat=\"tag in tags\" tag-color-from-name=\"tag\">{{tag}}</span><br/>';\n      }\n\n      tooltip += '</div>';\n      tooltip += '</div>';\n\n      const $tooltip = $(tooltip);\n      $tooltip.appendTo(element);\n\n      $compile(element.contents())(scope);\n    },\n  };\n}\n\ncoreModule.directive('annotationTooltip', annotationTooltipDirective);\n","import { AnnotationsSrv } from './annotations_srv';\nimport { eventEditor } from './event_editor';\nimport { EventManager } from './event_manager';\nimport { annotationTooltipDirective } from './annotation_tooltip';\nexport { AnnotationsSrv, eventEditor, EventManager, annotationTooltipDirective };\n","var path = 'public/app/features/org/partials/invite.html';\nvar html = \"<page-header model=ctrl.navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\" ng-cloak>\\n\\n\\t<h3 class=page-sub-heading>Invite User</h3>\\n\\n\\t<div class=p-b-2>\\n\\t\\tSend invite or add existing Grafana user to the organization\\n\\t\\t<span class=highlight-word>{{contextSrv.user.orgName}}</span>\\n\\t</div>\\n\\n\\t<form name=ctrl.inviteForm>\\n\\t\\t<div class=gf-form-group>\\n\\t\\t\\t<div class=\\\"gf-form max-width-30\\\">\\n\\t\\t\\t\\t<span class=\\\"gf-form-label width-10\\\">Email or Username</span>\\n\\t\\t\\t\\t<input type=text ng-model=ctrl.invite.loginOrEmail required class=gf-form-input placeholder=email@test.com>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"gf-form max-width-30\\\">\\n\\t\\t\\t\\t<span class=\\\"gf-form-label width-10\\\">Name</span>\\n\\t\\t\\t\\t<input type=text ng-model=ctrl.invite.name class=gf-form-input placeholder=\\\"name (optional)\\\">\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"gf-form max-width-30\\\">\\n        <span class=\\\"gf-form-label width-10\\\">Role</span>\\n\\t\\t\\t\\t<select ng-model=ctrl.invite.role class=gf-form-input ng-options=\\\"f for f in ['Viewer', 'Editor', 'Admin']\\\">\\n\\t\\t\\t\\t</select>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<gf-form-switch class=gf-form label=\\\"Send invite email\\\" checked=ctrl.invite.sendEmail label-class=width-10></gf-form-switch>\\n\\n\\t\\t\\t<div class=gf-form-button-row>\\n\\t\\t\\t\\t<button type=submit class=\\\"btn btn-primary\\\" ng-click=ctrl.sendInvite();>Invite</button>\\n\\t\\t\\t\\t<a class=\\\"btn btn-inverse\\\" href=org/users>Back</a>\\n\\t\\t\\t</div>\\n\\t</div></form>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","var path = 'public/app/features/folders/partials/folder_dashboards.html';\nvar html = \"<page-header ng-if=ctrl.navModel model=ctrl.navModel></page-header>\\n\\n<div class=\\\"page-container page-body\\\">\\n    <manage-dashboards ng-if=\\\"ctrl.folderId && ctrl.uid\\\" folder-id=ctrl.folderId folder-uid=ctrl.uid />\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","import { DisplayValue } from '@grafana/data';\n\nimport { LegendList } from './LegendList';\nimport { LegendTable } from './LegendTable';\n\nexport enum LegendDisplayMode {\n  List = 'list',\n  Table = 'table',\n}\nexport interface LegendBasicOptions {\n  isVisible: boolean;\n  asTable: boolean;\n}\n\nexport interface LegendRenderOptions {\n  placement: LegendPlacement;\n  hideEmpty?: boolean;\n  hideZero?: boolean;\n}\n\nexport type LegendPlacement = 'under' | 'right' | 'over'; // Over used by piechart\n\nexport interface LegendOptions extends LegendBasicOptions, LegendRenderOptions {}\n\nexport interface LegendItem {\n  label: string;\n  color: string;\n  isVisible: boolean;\n  yAxis: number;\n  displayValues?: DisplayValue[];\n}\n\nexport interface LegendComponentProps {\n  className?: string;\n  items: LegendItem[];\n  placement: LegendPlacement;\n  // Function to render given item\n  itemRenderer?: (item: LegendItem, index: number) => JSX.Element;\n}\n\nexport interface LegendProps extends LegendComponentProps {}\n\nexport { LegendList, LegendTable };\n","import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect } from 'react-redux';\nimport { NavModel } from '@grafana/data';\nimport { FormField } from '@grafana/ui';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport config from 'app/core/config';\nimport Page from 'app/core/components/Page/Page';\nimport { AlertBox } from 'app/core/components/AlertBox/AlertBox';\nimport { LdapConnectionStatus } from './LdapConnectionStatus';\nimport { LdapSyncInfo } from './LdapSyncInfo';\nimport { LdapUserInfo } from './LdapUserInfo';\nimport { AppNotificationSeverity, LdapError, LdapUser, StoreState, SyncInfo, LdapConnectionInfo } from 'app/types';\nimport {\n  loadLdapState,\n  loadLdapSyncStatus,\n  loadUserMapping,\n  clearUserError,\n  clearUserMappingInfo,\n} from '../state/actions';\n\ninterface Props {\n  navModel: NavModel;\n  ldapConnectionInfo: LdapConnectionInfo;\n  ldapUser: LdapUser;\n  ldapSyncInfo: SyncInfo;\n  ldapError: LdapError;\n  userError?: LdapError;\n\n  loadLdapState: typeof loadLdapState;\n  loadLdapSyncStatus: typeof loadLdapSyncStatus;\n  loadUserMapping: typeof loadUserMapping;\n  clearUserError: typeof clearUserError;\n  clearUserMappingInfo: typeof clearUserMappingInfo;\n}\n\ninterface State {\n  isLoading: boolean;\n}\n\nexport class LdapPage extends PureComponent<Props, State> {\n  state = {\n    isLoading: true,\n  };\n\n  async componentDidMount() {\n    await this.props.clearUserMappingInfo();\n    await this.fetchLDAPStatus();\n    this.setState({ isLoading: false });\n  }\n\n  async fetchLDAPStatus() {\n    const { loadLdapState, loadLdapSyncStatus } = this.props;\n    return Promise.all([loadLdapState(), loadLdapSyncStatus()]);\n  }\n\n  async fetchUserMapping(username: string) {\n    const { loadUserMapping } = this.props;\n    return await loadUserMapping(username);\n  }\n\n  search = (event: any) => {\n    event.preventDefault();\n    const username = event.target.elements['username'].value;\n    if (username) {\n      this.fetchUserMapping(username);\n    }\n  };\n\n  onClearUserError = () => {\n    this.props.clearUserError();\n  };\n\n  render() {\n    const { ldapUser, userError, ldapError, ldapSyncInfo, ldapConnectionInfo, navModel } = this.props;\n    const { isLoading } = this.state;\n\n    return (\n      <Page navModel={navModel}>\n        <Page.Contents isLoading={isLoading}>\n          <>\n            {ldapError && ldapError.title && (\n              <div className=\"gf-form-group\">\n                <AlertBox title={ldapError.title} severity={AppNotificationSeverity.Error} body={ldapError.body} />\n              </div>\n            )}\n\n            <LdapConnectionStatus ldapConnectionInfo={ldapConnectionInfo} />\n\n            {config.buildInfo.isEnterprise && ldapSyncInfo && <LdapSyncInfo ldapSyncInfo={ldapSyncInfo} />}\n\n            <h3 className=\"page-heading\">Test user mapping</h3>\n            <div className=\"gf-form-group\">\n              <form onSubmit={this.search} className=\"gf-form-inline\">\n                <FormField label=\"Username\" labelWidth={8} inputWidth={30} type=\"text\" id=\"username\" name=\"username\" />\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Run\n                </button>\n              </form>\n            </div>\n            {userError && userError.title && (\n              <div className=\"gf-form-group\">\n                <AlertBox\n                  title={userError.title}\n                  severity={AppNotificationSeverity.Error}\n                  body={userError.body}\n                  onClose={this.onClearUserError}\n                />\n              </div>\n            )}\n            {ldapUser && <LdapUserInfo ldapUser={ldapUser} showAttributeMapping={true} />}\n          </>\n        </Page.Contents>\n      </Page>\n    );\n  }\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n  navModel: getNavModel(state.navIndex, 'ldap'),\n  ldapConnectionInfo: state.ldap.connectionInfo,\n  ldapUser: state.ldap.user,\n  ldapSyncInfo: state.ldap.syncInfo,\n  userError: state.ldap.userError,\n  ldapError: state.ldap.ldapError,\n});\n\nconst mapDispatchToProps = {\n  loadLdapState,\n  loadLdapSyncStatus,\n  loadUserMapping,\n  clearUserError,\n  clearUserMappingInfo,\n};\n\nexport default hot(module)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(LdapPage)\n);\n","var path = 'public/app/plugins/panel/graph/thresholds_form.html';\nvar html = \"<div class=gf-form-group>\\n  <p class=muted ng-show=ctrl.disabled>\\n    Visual thresholds options <strong>disabled.</strong>\\n    Visit the Alert tab update your thresholds. <br>\\n    To re-enable thresholds, the alert rule must be deleted from this panel.\\n  </p>\\n  <div ng-class=\\\"{'thresholds-form-disabled': ctrl.disabled}\\\">\\n    <div class=gf-form-inline ng-repeat=\\\"threshold in ctrl.panel.thresholds\\\">\\n      <div class=gf-form>\\n        <label class=gf-form-label>T{{$index+1}}</label>\\n      </div>\\n\\n      <div class=gf-form>\\n        <div class=gf-form-select-wrapper>\\n          <select class=gf-form-input ng-model=threshold.op ng-options=\\\"f for f in ['gt', 'lt']\\\" ng-change=ctrl.render() ng-disabled=ctrl.disabled></select>\\n        </div>\\n        <input type=number ng-model=threshold.value class=\\\"gf-form-input width-8\\\" ng-change=ctrl.render() placeholder=value ng-disabled=ctrl.disabled>\\n      </div>\\n\\n      <div class=gf-form>\\n        <label class=gf-form-label>Color</label>\\n        <div class=gf-form-select-wrapper>\\n          <select class=gf-form-input ng-model=threshold.colorMode ng-options=\\\"f for f in ['custom', 'critical', 'warning', 'ok']\\\" ng-change=ctrl.onThresholdTypeChange($index) ng-disabled=ctrl.disabled>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <gf-form-switch class=gf-form label=Fill checked=threshold.fill on-change=ctrl.render() ng-disabled=ctrl.disabled></gf-form-switch>\\n\\n      <div class=gf-form ng-if=\\\"threshold.fill && threshold.colorMode === 'custom'\\\">\\n        <label class=gf-form-label>Fill color</label>\\n        <span class=gf-form-label>\\n          <color-picker color=threshold.fillColor onchange=ctrl.onFillColorChange($index)></color-picker>\\n        </span>\\n      </div>\\n\\n      <gf-form-switch class=gf-form label=Line checked=threshold.line on-change=ctrl.render() ng-disabled=ctrl.disabled></gf-form-switch>\\n\\n      <div class=gf-form ng-if=\\\"threshold.line && threshold.colorMode === 'custom'\\\">\\n        <label class=gf-form-label>Line color</label>\\n        <span class=gf-form-label>\\n          <color-picker color=threshold.lineColor onchange=ctrl.onLineColorChange($index)></color-picker>\\n        </span>\\n      </div>\\n\\n      <div class=gf-form>\\n        <label class=gf-form-label>Y-Axis</label>\\n        <div class=gf-form-select-wrapper>\\n          <select class=gf-form-input ng-model=threshold.yaxis ng-init=\\\"threshold.yaxis = threshold.yaxis === 'left' || threshold.yaxis === 'right' ? threshold.yaxis : 'left'\\\" ng-options=\\\"f for f in ['left', 'right']\\\" ng-change=ctrl.render() ng-disabled=ctrl.disabled>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=gf-form>\\n        <label class=gf-form-label>\\n          <a class=pointer ng-click=ctrl.removeThreshold($index) ng-disabled=ctrl.disabled>\\n            <i class=\\\"fa fa-trash\\\"></i>\\n          </a>\\n        </label>\\n      </div>\\n    </div>\\n\\n    <div class=gf-form-button-row>\\n      <button class=\\\"btn btn-inverse\\\" ng-click=ctrl.addThreshold() ng-disabled=ctrl.disabled>\\n        <i class=\\\"fa fa-plus\\\"></i>&nbsp;Add Threshold\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;","// Slightly modified, but without dependancies:\n// https://raw.githubusercontent.com/malte-wessel/react-custom-scrollbars/master/src/utils/getScrollbarWidth.js\nlet scrollbarWidth: number | null = null;\n\nexport default function getScrollbarWidth() {\n  if (scrollbarWidth !== null) {\n    return scrollbarWidth;\n  }\n\n  if (typeof document !== 'undefined') {\n    const div = document.createElement('div');\n    const newStyles = {\n      width: '100px',\n      height: '100px',\n      position: 'absolute',\n      top: '-9999px',\n      overflow: 'scroll',\n      MsOverflowStyle: 'scrollbar',\n    };\n\n    Object.keys(newStyles).map(style => {\n      // @ts-ignore\n      div.style[style] = newStyles[style];\n    });\n\n    document.body.appendChild(div);\n    scrollbarWidth = div.offsetWidth - div.clientWidth;\n    document.body.removeChild(div);\n  } else {\n    scrollbarWidth = 0;\n  }\n  return scrollbarWidth || 0;\n}\n\nconst hasNoOverlayScrollbars = getScrollbarWidth() > 0;\n\nexport const addClassIfNoOverlayScrollbar = (classname: string, htmlElement: HTMLElement = document.body) => {\n  if (hasNoOverlayScrollbars) {\n    htmlElement.classList.add(classname);\n  }\n};\n","import coreModule from 'app/core/core_module';\nimport locationUtil from 'app/core/utils/location_util';\nimport { UrlQueryMap } from '@grafana/runtime';\nimport { DashboardLoaderSrv } from 'app/features/dashboard/services/DashboardLoaderSrv';\nimport { BackendSrv } from 'app/core/services/backend_srv';\nimport { ILocationService } from 'angular';\n\nexport class LoadDashboardCtrl {\n  /** @ngInject */\n  constructor(\n    $scope: any,\n    $routeParams: UrlQueryMap,\n    dashboardLoaderSrv: DashboardLoaderSrv,\n    backendSrv: BackendSrv,\n    $location: ILocationService,\n    $browser: any\n  ) {\n    $scope.appEvent('dashboard-fetch-start');\n\n    if (!$routeParams.uid && !$routeParams.slug) {\n      backendSrv.get('/api/dashboards/home').then((homeDash: { redirectUri: string; meta: any }) => {\n        if (homeDash.redirectUri) {\n          const newUrl = locationUtil.stripBaseFromUrl(homeDash.redirectUri);\n          $location.path(newUrl);\n        } else {\n          const meta = homeDash.meta;\n          meta.canSave = meta.canShare = meta.canStar = false;\n          $scope.initDashboard(homeDash, $scope);\n        }\n      });\n      return;\n    }\n\n    // if no uid, redirect to new route based on slug\n    if (!($routeParams.type === 'script' || $routeParams.type === 'snapshot') && !$routeParams.uid) {\n      // @ts-ignore\n      backendSrv.getDashboardBySlug($routeParams.slug).then(res => {\n        if (res) {\n          $location.path(locationUtil.stripBaseFromUrl(res.meta.url)).replace();\n        }\n      });\n      return;\n    }\n\n    dashboardLoaderSrv.loadDashboard($routeParams.type, $routeParams.slug, $routeParams.uid).then((result: any) => {\n      if (result.meta.url) {\n        const url = locationUtil.stripBaseFromUrl(result.meta.url);\n\n        if (url !== $location.path()) {\n          // replace url to not create additional history items and then return so that initDashboard below isn't executed multiple times.\n          $location.path(url).replace();\n          return;\n        }\n      }\n\n      result.meta.autofitpanels = $routeParams.autofitpanels;\n      result.meta.kiosk = $routeParams.kiosk;\n\n      $scope.initDashboard(result, $scope);\n    });\n  }\n}\n\nexport class NewDashboardCtrl {\n  /** @ngInject */\n  constructor($scope: any, $routeParams: UrlQueryMap) {\n    $scope.initDashboard(\n      {\n        meta: {\n          canStar: false,\n          canShare: false,\n          isNew: true,\n          folderId: Number($routeParams.folderId),\n        },\n        dashboard: {\n          title: 'New dashboard',\n          panels: [\n            {\n              type: 'add-panel',\n              gridPos: { x: 0, y: 0, w: 12, h: 9 },\n              title: 'Panel Title',\n            },\n          ],\n        },\n      },\n      $scope\n    );\n  }\n}\n\ncoreModule.controller('LoadDashboardCtrl', LoadDashboardCtrl);\ncoreModule.controller('NewDashboardCtrl', NewDashboardCtrl);\n","// Libraries\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\n// Utils and services\nimport coreModule from 'app/core/core_module';\nimport { store } from 'app/store/store';\nimport { ContextSrv } from 'app/core/services/context_srv';\nimport { provideTheme } from 'app/core/utils/ConfigProvider';\nimport { ErrorBoundaryAlert } from '@grafana/ui';\n\nfunction WrapInProvider(store: any, Component: any, props: any) {\n  return (\n    <Provider store={store}>\n      <ErrorBoundaryAlert style=\"page\">\n        <Component {...props} />\n      </ErrorBoundaryAlert>\n    </Provider>\n  );\n}\n\n/** @ngInject */\nexport function reactContainer($route: any, $location: any, $injector: any, $rootScope: any, contextSrv: ContextSrv) {\n  return {\n    restrict: 'E',\n    template: '',\n    link(scope: any, elem: JQuery) {\n      // Check permissions for this component\n      const roles: string[] = $route.current.locals.roles;\n      if (roles && roles.length) {\n        if (!roles.some(r => contextSrv.hasRole(r))) {\n          $location.url('/');\n        }\n      }\n\n      let { component } = $route.current.locals;\n      // Dynamic imports return whole module, need to extract default export\n      if (component.default) {\n        component = component.default;\n      }\n\n      const props = {\n        $injector: $injector,\n        $rootScope: $rootScope,\n        $scope: scope,\n        $contextSrv: contextSrv,\n        routeInfo: $route.current.$$route.routeInfo,\n      };\n\n      document.body.classList.add('is-react');\n\n      ReactDOM.render(WrapInProvider(store, provideTheme(component), props), elem[0]);\n\n      scope.$on('$destroy', () => {\n        document.body.classList.remove('is-react');\n        ReactDOM.unmountComponentAtNode(elem[0]);\n      });\n    },\n  };\n}\n\ncoreModule.directive('reactContainer', reactContainer);\n","import { route } from 'angular';\n\ninterface RegisterRoutesHandler {\n  ($routeProvider: route.IRouteProvider): any;\n}\n\nconst handlers: RegisterRoutesHandler[] = [];\n\nexport function applyRouteRegistrationHandlers($routeProvider: route.IRouteProvider) {\n  for (const handler of handlers) {\n    handler($routeProvider);\n  }\n}\n\nexport function addRouteRegistrationHandler(fn: RegisterRoutesHandler) {\n  handlers.push(fn);\n}\n","import appEvents from 'app/core/app_events';\nimport locationUtil from 'app/core/utils/location_util';\nimport { BackendSrv } from 'app/core/services/backend_srv';\nimport { ILocationService } from 'angular';\nimport { ValidationSrv } from 'app/features/manage-dashboards';\nimport { NavModelSrv } from 'app/core/nav_model_srv';\n\nexport default class CreateFolderCtrl {\n  title = '';\n  navModel: any;\n  titleTouched = false;\n  hasValidationError: boolean;\n  validationError: any;\n\n  /** @ngInject */\n  constructor(\n    private backendSrv: BackendSrv,\n    private $location: ILocationService,\n    private validationSrv: ValidationSrv,\n    navModelSrv: NavModelSrv\n  ) {\n    this.navModel = navModelSrv.getNav('dashboards', 'manage-dashboards', 0);\n  }\n\n  create() {\n    if (this.hasValidationError) {\n      return;\n    }\n\n    return this.backendSrv.createFolder({ title: this.title }).then((result: any) => {\n      appEvents.emit('alert-success', ['Folder Created', 'OK']);\n      this.$location.url(locationUtil.stripBaseFromUrl(result.url));\n    });\n  }\n\n  titleChanged() {\n    this.titleTouched = true;\n\n    this.validationSrv\n      .validateNewFolderName(this.title)\n      .then(() => {\n        this.hasValidationError = false;\n      })\n      .catch(err => {\n        this.hasValidationError = true;\n        this.validationError = err.message;\n      });\n  }\n}\n","import { BackendSrv } from 'app/core/services/backend_srv';\n\nexport class FolderPageLoader {\n  constructor(private backendSrv: BackendSrv) {}\n\n  load(ctrl: any, uid: any, activeChildId: any) {\n    ctrl.navModel = {\n      main: {\n        icon: 'fa fa-folder-open',\n        id: 'manage-folder',\n        subTitle: 'Manage folder dashboards & permissions',\n        url: '',\n        text: '',\n        breadcrumbs: [{ title: 'Dashboards', url: 'dashboards' }],\n        children: [\n          {\n            active: activeChildId === 'manage-folder-dashboards',\n            icon: 'fa fa-fw fa-th-large',\n            id: 'manage-folder-dashboards',\n            text: 'Dashboards',\n            url: 'dashboards',\n          },\n          {\n            active: activeChildId === 'manage-folder-permissions',\n            icon: 'fa fa-fw fa-lock',\n            id: 'manage-folder-permissions',\n            text: 'Permissions',\n            url: 'dashboards/permissions',\n          },\n          {\n            active: activeChildId === 'manage-folder-settings',\n            icon: 'gicon gicon-cog',\n            id: 'manage-folder-settings',\n            text: 'Settings',\n            url: 'dashboards/settings',\n          },\n        ],\n      },\n    };\n\n    return this.backendSrv.getFolderByUid(uid).then((folder: any) => {\n      ctrl.folderId = folder.id;\n      const folderTitle = folder.title;\n      const folderUrl = folder.url;\n      ctrl.navModel.main.text = folderTitle;\n\n      const dashTab = ctrl.navModel.main.children.find((child: any) => child.id === 'manage-folder-dashboards');\n      dashTab.url = folderUrl;\n\n      if (folder.canAdmin) {\n        const permTab = ctrl.navModel.main.children.find((child: any) => child.id === 'manage-folder-permissions');\n        permTab.url = folderUrl + '/permissions';\n\n        const settingsTab = ctrl.navModel.main.children.find((child: any) => child.id === 'manage-folder-settings');\n        settingsTab.url = folderUrl + '/settings';\n      } else {\n        ctrl.navModel.main.children = [dashTab];\n      }\n\n      return folder;\n    });\n  }\n}\n","import _ from 'lodash';\nimport config from 'app/core/config';\nimport locationUtil from 'app/core/utils/location_util';\nimport { BackendSrv } from '@grafana/runtime';\nimport { ValidationSrv } from './services/ValidationSrv';\nimport { NavModelSrv } from 'app/core/core';\nimport { ILocationService } from 'angular';\n\nexport class DashboardImportCtrl {\n  navModel: any;\n  step: number;\n  jsonText: string;\n  parseError: string;\n  nameExists: boolean;\n  uidExists: boolean;\n  dash: any;\n  inputs: any[];\n  inputsValid: boolean;\n  gnetUrl: string;\n  gnetError: string;\n  gnetInfo: any;\n  titleTouched: boolean;\n  hasNameValidationError: boolean;\n  nameValidationError: any;\n  hasUidValidationError: boolean;\n  uidValidationError: any;\n  autoGenerateUid: boolean;\n  autoGenerateUidValue: string;\n  folderId: number;\n  initialFolderTitle: string;\n  isValidFolderSelection: boolean;\n\n  /** @ngInject */\n  constructor(\n    private backendSrv: BackendSrv,\n    private validationSrv: ValidationSrv,\n    navModelSrv: NavModelSrv,\n    private $location: ILocationService,\n    $routeParams: any\n  ) {\n    this.navModel = navModelSrv.getNav('create', 'import');\n\n    this.step = 1;\n    this.nameExists = false;\n    this.uidExists = false;\n    this.autoGenerateUid = true;\n    this.autoGenerateUidValue = 'auto-generated';\n    this.folderId = $routeParams.folderId ? Number($routeParams.folderId) || 0 : null;\n    this.initialFolderTitle = 'Select a folder';\n\n    // check gnetId in url\n    if ($routeParams.gnetId) {\n      this.gnetUrl = $routeParams.gnetId;\n      this.checkGnetDashboard();\n    }\n  }\n\n  onUpload(dash: any) {\n    this.dash = dash;\n    this.dash.id = null;\n    this.step = 2;\n    this.inputs = [];\n\n    if (this.dash.__inputs) {\n      for (const input of this.dash.__inputs) {\n        const inputModel: any = {\n          name: input.name,\n          label: input.label,\n          info: input.description,\n          value: input.value,\n          type: input.type,\n          pluginId: input.pluginId,\n          options: [],\n        };\n\n        if (input.type === 'datasource') {\n          this.setDatasourceOptions(input, inputModel);\n        } else if (!inputModel.info) {\n          inputModel.info = 'Specify a string constant';\n        }\n\n        this.inputs.push(inputModel);\n      }\n    }\n\n    this.inputsValid = this.inputs.length === 0;\n    this.titleChanged();\n    this.uidChanged(true);\n  }\n\n  setDatasourceOptions(input: { pluginId: string; pluginName: string }, inputModel: any) {\n    const sources = _.filter(config.datasources, val => {\n      return val.type === input.pluginId;\n    });\n\n    if (sources.length === 0) {\n      inputModel.info = 'No data sources of type ' + input.pluginName + ' found';\n    } else if (!inputModel.info) {\n      inputModel.info = 'Select a ' + input.pluginName + ' data source';\n    }\n\n    inputModel.options = sources.map(val => {\n      return { text: val.name, value: val.name };\n    });\n  }\n\n  inputValueChanged() {\n    this.inputsValid = true;\n    for (const input of this.inputs) {\n      if (!input.value) {\n        this.inputsValid = false;\n      }\n    }\n  }\n\n  titleChanged() {\n    this.titleTouched = true;\n    this.nameExists = false;\n\n    this.validationSrv\n      .validateNewDashboardName(this.folderId, this.dash.title)\n      .then(() => {\n        this.nameExists = false;\n        this.hasNameValidationError = false;\n      })\n      .catch(err => {\n        if (err.type === 'EXISTING') {\n          this.nameExists = true;\n        }\n\n        this.hasNameValidationError = true;\n        this.nameValidationError = err.message;\n      });\n  }\n\n  uidChanged(initial: boolean) {\n    this.uidExists = false;\n    this.hasUidValidationError = false;\n\n    if (initial === true && this.dash.uid) {\n      this.autoGenerateUidValue = 'value set';\n    }\n\n    this.backendSrv\n      // @ts-ignore\n      .getDashboardByUid(this.dash.uid)\n      .then((res: any) => {\n        this.uidExists = true;\n        this.hasUidValidationError = true;\n        this.uidValidationError = `Dashboard named '${res.dashboard.title}' in folder '${\n          res.meta.folderTitle\n        }' has the same uid`;\n      })\n      .catch((err: any) => {\n        err.isHandled = true;\n      });\n  }\n\n  onFolderChange(folder: any) {\n    this.folderId = folder.id;\n    this.titleChanged();\n  }\n\n  onEnterFolderCreation() {\n    this.inputsValid = false;\n  }\n\n  onExitFolderCreation() {\n    this.inputValueChanged();\n  }\n\n  isValid() {\n    return this.inputsValid && this.folderId !== null;\n  }\n\n  saveDashboard() {\n    const inputs = this.inputs.map(input => {\n      return {\n        name: input.name,\n        type: input.type,\n        pluginId: input.pluginId,\n        value: input.value,\n      };\n    });\n\n    return this.backendSrv\n      .post('api/dashboards/import', {\n        dashboard: this.dash,\n        overwrite: true,\n        inputs: inputs,\n        folderId: this.folderId,\n      })\n      .then(res => {\n        const dashUrl = locationUtil.stripBaseFromUrl(res.importedUrl);\n        this.$location.url(dashUrl);\n      });\n  }\n\n  loadJsonText() {\n    try {\n      this.parseError = '';\n      const dash = JSON.parse(this.jsonText);\n      this.onUpload(dash);\n    } catch (err) {\n      console.log(err);\n      this.parseError = err.message;\n      return;\n    }\n  }\n\n  checkGnetDashboard() {\n    this.gnetError = '';\n\n    const match = /(^\\d+$)|dashboards\\/(\\d+)/.exec(this.gnetUrl);\n    let dashboardId;\n\n    if (match && match[1]) {\n      dashboardId = match[1];\n    } else if (match && match[2]) {\n      dashboardId = match[2];\n    } else {\n      this.gnetError = 'Could not find dashboard';\n    }\n\n    return this.backendSrv\n      .get('api/gnet/dashboards/' + dashboardId)\n      .then(res => {\n        this.gnetInfo = res;\n        // store reference to grafana.com\n        res.json.gnetId = res.id;\n        this.onUpload(res.json);\n      })\n      .catch(err => {\n        err.isHandled = true;\n        this.gnetError = err.data.message || err;\n      });\n  }\n\n  back() {\n    this.gnetUrl = '';\n    this.step = 1;\n    this.gnetError = '';\n    this.gnetInfo = '';\n  }\n}\n\nexport default DashboardImportCtrl;\n","import { FolderPageLoader } from './services/FolderPageLoader';\nimport locationUtil from 'app/core/utils/location_util';\nimport { NavModelSrv } from 'app/core/core';\nimport { ILocationService } from 'angular';\n\nexport default class FolderDashboardsCtrl {\n  navModel: any;\n  folderId: number;\n  uid: string;\n\n  /** @ngInject */\n  constructor(\n    private backendSrv: any,\n    navModelSrv: NavModelSrv,\n    private $routeParams: any,\n    $location: ILocationService\n  ) {\n    if (this.$routeParams.uid) {\n      this.uid = $routeParams.uid;\n\n      const loader = new FolderPageLoader(this.backendSrv);\n\n      loader.load(this, this.uid, 'manage-folder-dashboards').then((folder: any) => {\n        const url = locationUtil.stripBaseFromUrl(folder.url);\n\n        if (url !== $location.path()) {\n          $location.path(url).replace();\n        }\n      });\n    }\n  }\n}\n","import React, { PureComponent, SyntheticEvent, ChangeEvent } from 'react';\nimport { FormModel } from './LoginCtrl';\n\ninterface Props {\n  displayForgotPassword: boolean;\n  onChange?: (valid: boolean) => void;\n  onSubmit: (data: FormModel) => void;\n  isLoggingIn: boolean;\n  passwordHint: string;\n  loginHint: string;\n}\n\ninterface State {\n  user: string;\n  password: string;\n  email: string;\n  valid: boolean;\n}\n\nexport class LoginForm extends PureComponent<Props, State> {\n  private userInput: HTMLInputElement;\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      user: '',\n      password: '',\n      email: '',\n      valid: false,\n    };\n  }\n\n  componentDidMount() {\n    this.userInput.focus();\n  }\n  onSubmit = (e: SyntheticEvent) => {\n    e.preventDefault();\n\n    const { user, password, email } = this.state;\n    if (this.state.valid) {\n      this.props.onSubmit({ user, password, email });\n    }\n  };\n\n  onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      password: e.target.value,\n      valid: this.validate(this.state.user, e.target.value),\n    });\n  };\n\n  onChangeUsername = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      user: e.target.value,\n      valid: this.validate(e.target.value, this.state.password),\n    });\n  };\n\n  validate(user: string, password: string) {\n    return user.length > 0 && password.length > 0;\n  }\n\n  render() {\n    return (\n      <form name=\"loginForm\" className=\"login-form-group gf-form-group\">\n        <div className=\"login-form\">\n          <input\n            ref={input => {\n              this.userInput = input;\n            }}\n            type=\"text\"\n            name=\"user\"\n            className=\"gf-form-input login-form-input\"\n            required\n            placeholder={this.props.loginHint}\n            aria-label=\"Username input field\"\n            onChange={this.onChangeUsername}\n          />\n        </div>\n        <div className=\"login-form\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            className=\"gf-form-input login-form-input\"\n            required\n            ng-model=\"formModel.password\"\n            id=\"inputPassword\"\n            placeholder={this.props.passwordHint}\n            aria-label=\"Password input field\"\n            onChange={this.onChangePassword}\n          />\n        </div>\n        <div className=\"login-button-group\">\n          {!this.props.isLoggingIn ? (\n            <button\n              type=\"submit\"\n              aria-label=\"Login button\"\n              className={`btn btn-large p-x-2 ${this.state.valid ? 'btn-primary' : 'btn-inverse'}`}\n              onClick={this.onSubmit}\n              disabled={!this.state.valid}\n            >\n              Log In\n            </button>\n          ) : (\n            <button type=\"submit\" className=\"btn btn-large p-x-2 btn-inverse btn-loading\">\n              Logging In<span>.</span>\n              <span>.</span>\n              <span>.</span>\n            </button>\n          )}\n\n          {this.props.displayForgotPassword ? (\n            <div className=\"small login-button-forgot-password\">\n              <a href=\"user/password/send-reset-email\">Forgot your password?</a>\n            </div>\n          ) : null}\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { FC } from 'react';\n\nexport const UserSignup: FC<{}> = () => {\n  return (\n    <div className=\"login-signup-box\">\n      <div className=\"login-signup-title p-r-1\">New to Grafana?</div>\n      <a href=\"signup\" className=\"btn btn-medium btn-signup btn-p-x-2\">\n        Sign Up\n      </a>\n    </div>\n  );\n};\n","import React from 'react';\nimport config from 'app/core/config';\n\nconst loginServices: () => LoginServices = () => ({\n  saml: {\n    enabled: config.samlEnabled,\n    name: 'SAML',\n    className: 'github',\n    icon: 'key',\n  },\n  google: {\n    enabled: config.oauth.google,\n    name: 'Google',\n  },\n  github: {\n    enabled: config.oauth.github,\n    name: 'GitHub',\n  },\n  gitlab: {\n    enabled: config.oauth.gitlab,\n    name: 'GitLab',\n  },\n  grafanacom: {\n    enabled: config.oauth.grafana_com,\n    name: 'Grafana.com',\n    hrefName: 'grafana_com',\n    icon: 'grafana_com',\n  },\n  oauth: {\n    enabled: config.oauth.generic_oauth,\n    name: 'OAuth',\n    icon: 'sign-in',\n    hrefName: 'generic_oauth',\n  },\n});\n\nexport interface LoginService {\n  enabled: boolean;\n  name: string;\n  hrefName?: string;\n  icon?: string;\n  className?: string;\n}\n\nexport interface LoginServices {\n  [key: string]: LoginService;\n}\n\nconst LoginDivider = () => {\n  return (\n    <>\n      <div className=\"text-center login-divider\">\n        <div>\n          <div className=\"login-divider-line\" />\n        </div>\n        <div>\n          <span className=\"login-divider-text\">{config.disableLoginForm ? null : <span>or</span>}</span>\n        </div>\n        <div>\n          <div className=\"login-divider-line\" />\n        </div>\n      </div>\n      <div className=\"clearfix\" />\n    </>\n  );\n};\n\nexport const LoginServiceButtons = () => {\n  const keyNames = Object.keys(loginServices());\n  const serviceElementsEnabled = keyNames.filter(key => {\n    const service: LoginService = loginServices()[key];\n    return service.enabled;\n  });\n\n  if (serviceElementsEnabled.length === 0) {\n    return null;\n  }\n\n  const serviceElements = serviceElementsEnabled.map(key => {\n    const service: LoginService = loginServices()[key];\n    return (\n      <a\n        key={key}\n        className={`btn btn-medium btn-service btn-service--${service.className || key} login-btn`}\n        href={`login/${service.hrefName ? service.hrefName : key}`}\n        target=\"_self\"\n      >\n        <i className={`btn-service-icon fa fa-${service.icon ? service.icon : key}`} />\n        Sign in with {service.name}\n      </a>\n    );\n  });\n\n  const divider = LoginDivider();\n  return (\n    <>\n      {divider}\n      <div className=\"login-oauth text-center\">{serviceElements}</div>\n    </>\n  );\n};\n","import React, { PureComponent, SyntheticEvent, ChangeEvent } from 'react';\nimport { Tooltip } from '@grafana/ui';\nimport appEvents from 'app/core/app_events';\n\ninterface Props {\n  onSubmit: (pw: string) => void;\n  onSkip: Function;\n  focus?: boolean;\n}\n\ninterface State {\n  newPassword: string;\n  confirmNew: string;\n  valid: boolean;\n}\n\nexport class ChangePassword extends PureComponent<Props, State> {\n  private userInput: HTMLInputElement;\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      newPassword: '',\n      confirmNew: '',\n      valid: false,\n    };\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!prevProps.focus && this.props.focus) {\n      this.focus();\n    }\n  }\n\n  focus() {\n    this.userInput.focus();\n  }\n\n  onSubmit = (e: SyntheticEvent) => {\n    e.preventDefault();\n\n    const { newPassword, valid } = this.state;\n    if (valid) {\n      this.props.onSubmit(newPassword);\n    } else {\n      appEvents.emit('alert-warning', ['New passwords do not match', '']);\n    }\n  };\n\n  onNewPasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      newPassword: e.target.value,\n      valid: this.validate('newPassword', e.target.value),\n    });\n  };\n\n  onConfirmPasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      confirmNew: e.target.value,\n      valid: this.validate('confirmNew', e.target.value),\n    });\n  };\n\n  onSkip = (e: SyntheticEvent) => {\n    this.props.onSkip();\n  };\n\n  validate(changed: string, pw: string) {\n    if (changed === 'newPassword') {\n      return this.state.confirmNew === pw;\n    } else if (changed === 'confirmNew') {\n      return this.state.newPassword === pw;\n    }\n    return false;\n  }\n\n  render() {\n    return (\n      <div className=\"login-inner-box\" id=\"change-password-view\">\n        <div className=\"text-left login-change-password-info\">\n          <h5>Change Password</h5>\n          Before you can get started with awesome dashboards we need you to make your account more secure by changing\n          your password.\n          <br />\n          You can change your password again later.\n        </div>\n        <form className=\"login-form-group gf-form-group\">\n          <div className=\"login-form\">\n            <input\n              type=\"password\"\n              id=\"newPassword\"\n              name=\"newPassword\"\n              className=\"gf-form-input login-form-input\"\n              required\n              placeholder=\"New password\"\n              onChange={this.onNewPasswordChange}\n              ref={input => {\n                this.userInput = input;\n              }}\n            />\n          </div>\n          <div className=\"login-form\">\n            <input\n              type=\"password\"\n              name=\"confirmNew\"\n              className=\"gf-form-input login-form-input\"\n              required\n              ng-model=\"command.confirmNew\"\n              placeholder=\"Confirm new password\"\n              onChange={this.onConfirmPasswordChange}\n            />\n          </div>\n          <div className=\"login-button-group login-button-group--right text-right\">\n            <Tooltip\n              placement=\"bottom\"\n              content=\"If you skip you will be prompted to change password next time you login.\"\n            >\n              <a className=\"btn btn-link\" onClick={this.onSkip}>\n                Skip\n              </a>\n            </Tooltip>\n\n            <button\n              type=\"submit\"\n              className={`btn btn-large p-x-2 ${this.state.valid ? 'btn-primary' : 'btn-inverse'}`}\n              onClick={this.onSubmit}\n              disabled={!this.state.valid}\n            >\n              Save\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { FC } from 'react';\nimport { UserSignup } from './UserSignup';\nimport { LoginServiceButtons } from './LoginServiceButtons';\nimport LoginCtrl from './LoginCtrl';\nimport { LoginForm } from './LoginForm';\nimport { ChangePassword } from './ChangePassword';\nimport { CSSTransition } from 'react-transition-group';\n\nexport const LoginPage: FC = () => {\n  return (\n    <div className=\"login container\">\n      <div className=\"login-content\">\n        <div className=\"login-branding\">\n          <img className=\"logo-icon\" src=\"public/img/grafana_icon.svg\" alt=\"Grafana\" />\n          <div className=\"logo-wordmark\" />\n        </div>\n        <LoginCtrl>\n          {({\n            loginHint,\n            passwordHint,\n            isOauthEnabled,\n            ldapEnabled,\n            authProxyEnabled,\n            disableLoginForm,\n            disableUserSignUp,\n            login,\n            isLoggingIn,\n            changePassword,\n            skipPasswordChange,\n            isChangingPassword,\n          }) => (\n            <div className=\"login-outer-box\">\n              <div className={`login-inner-box ${isChangingPassword ? 'hidden' : ''}`} id=\"login-view\">\n                {!disableLoginForm ? (\n                  <LoginForm\n                    displayForgotPassword={!(ldapEnabled || authProxyEnabled)}\n                    onSubmit={login}\n                    loginHint={loginHint}\n                    passwordHint={passwordHint}\n                    isLoggingIn={isLoggingIn}\n                  />\n                ) : null}\n\n                <LoginServiceButtons />\n                {!disableUserSignUp ? <UserSignup /> : null}\n              </div>\n              <CSSTransition\n                appear={true}\n                mountOnEnter={true}\n                in={isChangingPassword}\n                timeout={250}\n                classNames=\"login-inner-box\"\n              >\n                <ChangePassword onSubmit={changePassword} onSkip={skipPasswordChange} focus={isChangingPassword} />\n              </CSSTransition>\n            </div>\n          )}\n        </LoginCtrl>\n\n        <div className=\"clearfix\" />\n      </div>\n    </div>\n  );\n};\n","import React, { lazy, Suspense, FunctionComponent } from 'react';\nimport { cx, css } from 'emotion';\nimport { LoadingPlaceholder, ErrorBoundary, Button } from '@grafana/ui';\n\nexport const LoadingChunkPlaceHolder: FunctionComponent = () => (\n  <div className={cx('preloader')}>\n    <LoadingPlaceholder text={'Loading...'} />\n  </div>\n);\n\nfunction getAlertPageStyle() {\n  return css`\n    width: 508px;\n    margin: 128px auto;\n  `;\n}\n\nexport const SafeDynamicImport = (importStatement: Promise<any>) => ({ ...props }) => {\n  const LazyComponent = lazy(() => importStatement);\n  return (\n    <ErrorBoundary>\n      {({ error, errorInfo }) => {\n        if (!errorInfo) {\n          return (\n            <Suspense fallback={<LoadingChunkPlaceHolder />}>\n              <LazyComponent {...props} />\n            </Suspense>\n          );\n        }\n\n        return (\n          <div className={getAlertPageStyle()}>\n            <h2>Unable to find application file</h2>\n            <br />\n            <h2 className=\"page-heading\">Grafana has likely been updated. Please try reloading the page.</h2>\n            <br />\n            <div className=\"gf-form-group\">\n              <Button size={'md'} variant={'secondary'} icon=\"fa fa-repeat\" onClick={() => window.location.reload()}>\n                Reload\n              </Button>\n            </div>\n            <details style={{ whiteSpace: 'pre-wrap' }}>\n              {error && error.toString()}\n              <br />\n              {errorInfo.componentStack}\n            </details>\n          </div>\n        );\n      }}\n    </ErrorBoundary>\n  );\n};\n","import './dashboard_loaders';\nimport './ReactContainer';\nimport { applyRouteRegistrationHandlers } from './registry';\n// Pages\nimport CreateFolderCtrl from 'app/features/folders/CreateFolderCtrl';\nimport FolderDashboardsCtrl from 'app/features/folders/FolderDashboardsCtrl';\nimport DashboardImportCtrl from 'app/features/manage-dashboards/DashboardImportCtrl';\nimport LdapPage from 'app/features/admin/ldap/LdapPage';\nimport config from 'app/core/config';\nimport { route, ILocationProvider } from 'angular';\n// Types\nimport { DashboardRouteInfo } from 'app/types';\nimport { LoginPage } from 'app/core/components/Login/LoginPage';\nimport { SafeDynamicImport } from '../core/components/SafeDynamicImport';\n\n/** @ngInject */\nexport function setupAngularRoutes($routeProvider: route.IRouteProvider, $locationProvider: ILocationProvider) {\n  $locationProvider.html5Mode(true);\n\n  // Routes here are guarded both here and server side for react-container routes or just on the server for angular\n  // ones. That means angular ones could be navigated to in case there is a client side link some where.\n\n  const importDashboardPage = () =>\n    SafeDynamicImport(import(/* webpackChunkName: \"DashboardPage\" */ '../features/dashboard/containers/DashboardPage'));\n\n  $routeProvider\n    .when('/', {\n      template: '<react-container />',\n      //@ts-ignore\n      pageClass: 'page-dashboard',\n      routeInfo: DashboardRouteInfo.Home,\n      reloadOnSearch: false,\n      resolve: {\n        component: importDashboardPage,\n      },\n    })\n    .when('/d/:uid/:slug', {\n      template: '<react-container />',\n      pageClass: 'page-dashboard',\n      routeInfo: DashboardRouteInfo.Normal,\n      reloadOnSearch: false,\n      resolve: {\n        component: importDashboardPage,\n      },\n    })\n    .when('/d/:uid', {\n      template: '<react-container />',\n      pageClass: 'page-dashboard',\n      reloadOnSearch: false,\n      routeInfo: DashboardRouteInfo.Normal,\n      resolve: {\n        component: importDashboardPage,\n      },\n    })\n    .when('/dashboard/:type/:slug', {\n      template: '<react-container />',\n      pageClass: 'page-dashboard',\n      routeInfo: DashboardRouteInfo.Normal,\n      reloadOnSearch: false,\n      resolve: {\n        component: importDashboardPage,\n      },\n    })\n    .when('/dashboard/new', {\n      template: '<react-container />',\n      pageClass: 'page-dashboard',\n      routeInfo: DashboardRouteInfo.New,\n      reloadOnSearch: false,\n      resolve: {\n        component: importDashboardPage,\n      },\n    })\n    .when('/d-solo/:uid/:slug', {\n      template: '<react-container />',\n      pageClass: 'dashboard-solo',\n      routeInfo: DashboardRouteInfo.Normal,\n      reloadOnSearch: false,\n      resolve: {\n        component: () =>\n          SafeDynamicImport(\n            import(/* webpackChunkName: \"SoloPanelPage\" */ '../features/dashboard/containers/SoloPanelPage')\n          ),\n      },\n    })\n    .when('/dashboard-solo/:type/:slug', {\n      template: '<react-container />',\n      pageClass: 'dashboard-solo',\n      routeInfo: DashboardRouteInfo.Normal,\n      reloadOnSearch: false,\n      resolve: {\n        component: () =>\n          SafeDynamicImport(\n            import(/* webpackChunkName: \"SoloPanelPage\" */ '../features/dashboard/containers/SoloPanelPage')\n          ),\n      },\n    })\n    .when('/dashboard/import', {\n      templateUrl: 'public/app/features/manage-dashboards/partials/dashboard_import.html',\n      controller: DashboardImportCtrl,\n      controllerAs: 'ctrl',\n    })\n    .when('/datasources', {\n      template: '<react-container />',\n      resolve: {\n        component: () =>\n          SafeDynamicImport(\n            import(/* webpackChunkName: \"DataSourcesListPage\"*/ 'app/features/datasources/DataSourcesListPage')\n          ),\n      },\n    })\n    .when('/datasources/edit/:id/', {\n      template: '<react-container />',\n      reloadOnSearch: false, // for tabs\n      resolve: {\n        component: () =>\n          SafeDynamicImport(\n            import(/* webpackChunkName: \"DataSourceSettingsPage\"*/ '../features/datasources/settings/DataSourceSettingsPage')\n          ),\n      },\n    })\n    .when('/datasources/edit/:id/dashboards', {\n      template: '<react-container />',\n      resolve: {\n        component: () =>\n          SafeDynamicImport(\n            import(/* webpackChunkName: \"DataSourceDashboards\"*/ 'app/features/datasources/DataSourceDashboards')\n          ),\n      },\n    })\n    .when('/datasources/new', {\n      template: '<react-container />',\n      resolve: {\n        component: () =>\n          SafeDynamicImport(\n            import(/* webpackChunkName: \"NewDataSourcePage\"*/ '../features/datasources/NewDataSourcePage')\n          ),\n      },\n    })\n    .when('/dashboards', {\n      templateUrl: 'public/app/features/manage-dashboards/partials/dashboard_list.html',\n      controller: 'DashboardListCtrl',\n      controllerAs: 'ctrl',\n    })\n    .when('/dashboards/folder/new', {\n      templateUrl: 'public/app/features/folders/partials/create_folder.html',\n      controller: CreateFolderCtrl,\n      controllerAs: 'ctrl',\n    })\n    .when('/dashboards/f/:uid/:slug/permissions', {\n      template: '<react-container />',\n      resolve: {\n        component: () =>\n          SafeDynamicImport(\n            import(/* webpackChunkName: \"FolderPermissions\"*/ 'app/features/folders/FolderPermissions')\n          ),\n      },\n    })\n    .when('/dashboards/f/:uid/:slug/settings', {\n      template: '<react-container />',\n      resolve: {\n        component: () =>\n          SafeDynamicImport(\n            import(/* webpackChunkName: \"FolderSettingsPage\"*/ 'app/features/folders/FolderSettingsPage')\n          ),\n      },\n    })\n    .when('/dashboards/f/:uid/:slug', {\n      templateUrl: 'public/app/features/folders/partials/folder_dashboards.html',\n      controller: FolderDashboardsCtrl,\n      controllerAs: 'ctrl',\n    })\n    .when('/dashboards/f/:uid', {\n      templateUrl: 'public/app/features/folders/partials/folder_dashboards.html',\n      controller: FolderDashboardsCtrl,\n      controllerAs: 'ctrl',\n    })\n    .when('/explore', {\n      template: '<react-container />',\n      reloadOnSearch: false,\n      resolve: {\n        roles: () => (config.viewersCanEdit ? [] : ['Editor', 'Admin']),\n        component: () => SafeDynamicImport(import(/* webpackChunkName: \"explore\" */ 'app/features/explore/Wrapper')),\n      },\n    })\n    .when('/a/:pluginId/', {\n      // Someday * and will get a ReactRouter under that path!\n      template: '<react-container />',\n      reloadOnSearch: false,\n      resolve: {\n        component: () =>\n          SafeDynamicImport(import(/* webpackChunkName: \"AppRootPage\" */ 'app/features/plugins/AppRootPage')),\n      },\n    })\n    .when('/org', {\n      template: '<react-container />',\n      resolve: {\n        component: () =>\n          SafeDynamicImport(import(/* webpackChunkName: \"OrgDetailsPage\" */ '../features/org/OrgDetailsPage')),\n      },\n    })\n    .when('/org/new', {\n      templateUrl: 'public/app/features/org/partials/newOrg.html',\n      controller: 'NewOrgCtrl',\n    })\n    .when('/org/users', {\n      template: '<react-container />',\n      resolve: {\n        component: () =>\n          SafeDynamicImport(import(/* webpackChunkName: \"UsersListPage\" */ 'app/features/users/UsersListPage')),\n      },\n    })\n    .when('/org/users/invite', {\n      templateUrl: 'public/app/features/org/partials/invite.html',\n      controller: 'UserInviteCtrl',\n      controllerAs: 'ctrl',\n    })\n    .when('/org/apikeys', {\n      template: '<react-container />',\n      resolve: {\n        roles: () => ['Editor', 'Admin'],\n        component: () =>\n          SafeDynamicImport(import(/* webpackChunkName: \"ApiKeysPage\" */ 'app/features/api-keys/ApiKeysPage')),\n      },\n    })\n    .when('/org/teams', {\n      template: '<react-container />',\n      resolve: {\n        roles: () => (config.editorsCanAdmin ? [] : ['Editor', 'Admin']),\n        component: () => SafeDynamicImport(import(/* webpackChunkName: \"TeamList\" */ 'app/features/teams/TeamList')),\n      },\n    })\n    .when('/org/teams/new', {\n      templateUrl: 'public/app/features/teams/partials/create_team.html',\n      controller: 'CreateTeamCtrl',\n      controllerAs: 'ctrl',\n    })\n    .when('/org/teams/edit/:id/:page?', {\n      template: '<react-container />',\n      resolve: {\n        roles: () => (config.editorsCanAdmin ? [] : ['Admin']),\n        component: () => SafeDynamicImport(import(/* webpackChunkName: \"TeamPages\" */ 'app/features/teams/TeamPages')),\n      },\n    })\n    .when('/profile', {\n      templateUrl: 'public/app/features/profile/partials/profile.html',\n      controller: 'ProfileCtrl',\n      controllerAs: 'ctrl',\n    })\n    .when('/profile/password', {\n      template: '<react-container />',\n      resolve: {\n        component: () =>\n          SafeDynamicImport(\n            import(/* webPackChunkName: \"ChangePasswordPage\" */ 'app/features/profile/ChangePasswordPage')\n          ),\n      },\n    })\n    .when('/profile/select-org', {\n      templateUrl: 'public/app/features/org/partials/select_org.html',\n      controller: 'SelectOrgCtrl',\n    })\n    // ADMIN\n    .when('/admin', {\n      templateUrl: 'public/app/features/admin/partials/admin_home.html',\n      controller: 'AdminHomeCtrl',\n      controllerAs: 'ctrl',\n    })\n    .when('/admin/settings', {\n      templateUrl: 'public/app/features/admin/partials/settings.html',\n      controller: 'AdminSettingsCtrl',\n      controllerAs: 'ctrl',\n    })\n    .when('/admin/users', {\n      templateUrl: 'public/app/features/admin/partials/users.html',\n      controller: 'AdminListUsersCtrl',\n      controllerAs: 'ctrl',\n    })\n    .when('/admin/users/create', {\n      templateUrl: 'public/app/features/admin/partials/new_user.html',\n      controller: 'AdminEditUserCtrl',\n    })\n    .when('/admin/users/edit/:id', {\n      templateUrl: 'public/app/features/admin/partials/edit_user.html',\n      controller: 'AdminEditUserCtrl',\n    })\n    .when('/admin/orgs', {\n      templateUrl: 'public/app/features/admin/partials/orgs.html',\n      controller: 'AdminListOrgsCtrl',\n      controllerAs: 'ctrl',\n    })\n    .when('/admin/orgs/edit/:id', {\n      templateUrl: 'public/app/features/admin/partials/edit_org.html',\n      controller: 'AdminEditOrgCtrl',\n      controllerAs: 'ctrl',\n    })\n    .when('/admin/stats', {\n      template: '<react-container />',\n      resolve: {\n        component: () =>\n          SafeDynamicImport(import(/* webpackChunkName: \"ServerStats\" */ 'app/features/admin/ServerStats')),\n      },\n    })\n    .when('/admin/ldap', {\n      template: '<react-container />',\n      resolve: {\n        component: () => LdapPage,\n      },\n    })\n    // LOGIN / SIGNUP\n    .when('/login', {\n      template: '<react-container/>',\n      resolve: {\n        component: () => LoginPage,\n      },\n      pageClass: 'login-page sidemenu-hidden',\n    })\n    .when('/invite/:code', {\n      templateUrl: 'public/app/partials/signup_invited.html',\n      controller: 'InvitedCtrl',\n      pageClass: 'sidemenu-hidden',\n    })\n    .when('/signup', {\n      templateUrl: 'public/app/partials/signup_step2.html',\n      controller: 'SignUpCtrl',\n      pageClass: 'sidemenu-hidden',\n    })\n    .when('/user/password/send-reset-email', {\n      templateUrl: 'public/app/partials/reset_password.html',\n      controller: 'ResetPasswordCtrl',\n      pageClass: 'sidemenu-hidden',\n    })\n    .when('/user/password/reset', {\n      templateUrl: 'public/app/partials/reset_password.html',\n      controller: 'ResetPasswordCtrl',\n      pageClass: 'sidemenu-hidden',\n    })\n    .when('/dashboard/snapshots', {\n      templateUrl: 'public/app/features/manage-dashboards/partials/snapshot_list.html',\n      controller: 'SnapshotListCtrl',\n      controllerAs: 'ctrl',\n    })\n    .when('/plugins', {\n      template: '<react-container />',\n      resolve: {\n        component: () =>\n          SafeDynamicImport(import(/* webpackChunkName: \"PluginListPage\" */ 'app/features/plugins/PluginListPage')),\n      },\n    })\n    .when('/plugins/:pluginId/', {\n      template: '<react-container />',\n      reloadOnSearch: false, // tabs from query parameters\n      resolve: {\n        component: () =>\n          SafeDynamicImport(import(/* webpackChunkName: \"PluginPage\" */ '../features/plugins/PluginPage')),\n      },\n    })\n    .when('/plugins/:pluginId/page/:slug', {\n      templateUrl: 'public/app/features/plugins/partials/plugin_page.html',\n      controller: 'AppPageCtrl',\n      controllerAs: 'ctrl',\n    })\n    .when('/styleguide/:page?', {\n      controller: 'StyleGuideCtrl',\n      controllerAs: 'ctrl',\n      templateUrl: 'public/app/features/admin/partials/styleguide.html',\n    })\n    .when('/alerting', {\n      redirectTo: '/alerting/list',\n    })\n    .when('/alerting/list', {\n      template: '<react-container />',\n      reloadOnSearch: false,\n      resolve: {\n        component: () =>\n          SafeDynamicImport(import(/* webpackChunkName: \"AlertRuleList\" */ 'app/features/alerting/AlertRuleList')),\n      },\n    })\n    .when('/alerting/notifications', {\n      templateUrl: 'public/app/features/alerting/partials/notifications_list.html',\n      controller: 'AlertNotificationsListCtrl',\n      controllerAs: 'ctrl',\n    })\n    .when('/alerting/notification/new', {\n      templateUrl: 'public/app/features/alerting/partials/notification_edit.html',\n      controller: 'AlertNotificationEditCtrl',\n      controllerAs: 'ctrl',\n    })\n    .when('/alerting/notification/:id/edit', {\n      templateUrl: 'public/app/features/alerting/partials/notification_edit.html',\n      controller: 'AlertNotificationEditCtrl',\n      controllerAs: 'ctrl',\n    })\n    .otherwise({\n      templateUrl: 'public/app/partials/error.html',\n      controller: 'ErrorCtrl',\n    });\n\n  applyRouteRegistrationHandlers($routeProvider);\n}\n","import angular from 'angular';\nimport coreModule from 'app/core/core_module';\nimport _ from 'lodash';\n\nimport {\n  AngularComponent,\n  AngularLoader as AngularLoaderInterface,\n  setAngularLoader as setAngularLoaderInterface,\n} from '@grafana/runtime';\n\nexport class AngularLoader implements AngularLoaderInterface {\n  /** @ngInject */\n  constructor(private $compile: any, private $rootScope: any) {}\n\n  load(elem: any, scopeProps: any, template: string): AngularComponent {\n    const scope = this.$rootScope.$new();\n\n    _.assign(scope, scopeProps);\n\n    const compiledElem = this.$compile(template)(scope);\n    const rootNode = angular.element(elem);\n    rootNode.append(compiledElem);\n\n    return {\n      destroy: () => {\n        scope.$destroy();\n        compiledElem.remove();\n      },\n      digest: () => {\n        if (!scope.$$phase) {\n          scope.$digest();\n        }\n      },\n      getScope: () => {\n        return scope;\n      },\n    };\n  }\n}\n\nexport function setAngularLoader(v: AngularLoader) {\n  setAngularLoaderInterface(v);\n}\n\ncoreModule.service('angularLoader', AngularLoader);\n","import { Action, ActionTypes } from 'app/core/actions/navModel';\nimport { NavIndex, NavModelItem } from '@grafana/data';\nimport config from 'app/core/config';\n\nexport function buildInitialState(): NavIndex {\n  const navIndex: NavIndex = {};\n  const rootNodes = config.bootData.navTree as NavModelItem[];\n  buildNavIndex(navIndex, rootNodes);\n  return navIndex;\n}\n\nfunction buildNavIndex(navIndex: NavIndex, children: NavModelItem[], parentItem?: NavModelItem) {\n  for (const node of children) {\n    navIndex[node.id] = {\n      ...node,\n      parentItem: parentItem,\n    };\n\n    if (node.children) {\n      buildNavIndex(navIndex, node.children, node);\n    }\n  }\n}\n\nexport const initialState: NavIndex = buildInitialState();\n\nexport const navIndexReducer = (state = initialState, action: Action): NavIndex => {\n  switch (action.type) {\n    case ActionTypes.UpdateNavIndex:\n      const newPages: NavIndex = {};\n      const payload = action.payload;\n\n      for (const node of payload.children) {\n        newPages[node.id] = {\n          ...node,\n          parentItem: payload,\n        };\n      }\n\n      return { ...state, ...newPages };\n  }\n  return state;\n};\n","import { LocationState } from 'app/types';\nimport { renderUrl } from 'app/core/utils/url';\nimport _ from 'lodash';\nimport { reducerFactory } from 'app/core/redux';\nimport { updateLocation } from 'app/core/actions';\n\nexport const initialState: LocationState = {\n  url: '',\n  path: '',\n  query: {},\n  routeParams: {},\n  replace: false,\n  lastUpdated: 0,\n};\n\nexport const locationReducer = reducerFactory<LocationState>(initialState)\n  .addMapper({\n    filter: updateLocation,\n    mapper: (state, action): LocationState => {\n      const { path, routeParams, replace } = action.payload;\n      let query = action.payload.query || state.query;\n\n      if (action.payload.partial) {\n        query = _.defaults(query, state.query);\n        query = _.omitBy(query, _.isNull);\n      }\n\n      return {\n        url: renderUrl(path || state.path, query),\n        path: path || state.path,\n        query: { ...query },\n        routeParams: routeParams || state.routeParams,\n        replace: replace === true,\n        lastUpdated: new Date().getTime(),\n      };\n    },\n  })\n  .create();\n","import { ApplicationState } from 'app/types/application';\nimport { reducerFactory } from 'app/core/redux';\nimport { toggleLogActions } from '../actions/application';\n\nexport const initialState: ApplicationState = {\n  logActions: false,\n};\n\nexport const applicationReducer = reducerFactory<ApplicationState>(initialState)\n  .addMapper({\n    filter: toggleLogActions,\n    mapper: (state): ApplicationState => ({\n      ...state,\n      logActions: !state.logActions,\n    }),\n  })\n  .create();\n","import { AppNotification, AppNotificationsState } from 'app/types/';\nimport { Action, ActionTypes } from '../actions/appNotification';\n\nexport const initialState: AppNotificationsState = {\n  appNotifications: [] as AppNotification[],\n};\n\nexport const appNotificationsReducer = (state = initialState, action: Action): AppNotificationsState => {\n  switch (action.type) {\n    case ActionTypes.AddAppNotification:\n      return { ...state, appNotifications: state.appNotifications.concat([action.payload]) };\n    case ActionTypes.ClearAppNotification:\n      return {\n        ...state,\n        appNotifications: state.appNotifications.filter(appNotification => appNotification.id !== action.payload),\n      };\n  }\n  return state;\n};\n","import { noPayloadActionCreatorFactory } from 'app/core/redux';\n\nexport const toggleLogActions = noPayloadActionCreatorFactory('TOGGLE_LOG_ACTIONS').create();\n","import { AlertRuleDTO, AlertRule, AlertRulesState } from 'app/types';\nimport { Action, ActionTypes } from './actions';\nimport alertDef from './alertDef';\nimport { dateTime } from '@grafana/data';\n\nexport const initialState: AlertRulesState = { items: [], searchQuery: '', isLoading: false };\n\nfunction convertToAlertRule(dto: AlertRuleDTO, state: string): AlertRule {\n  const stateModel = alertDef.getStateDisplayModel(state);\n\n  const rule: AlertRule = {\n    ...dto,\n    stateText: stateModel.text,\n    stateIcon: stateModel.iconClass,\n    stateClass: stateModel.stateClass,\n    stateAge: dateTime(dto.newStateDate).fromNow(true),\n  };\n\n  if (rule.state !== 'paused') {\n    if (rule.executionError) {\n      rule.info = 'Execution Error: ' + rule.executionError;\n    }\n    if (rule.evalData && rule.evalData.noData) {\n      rule.info = 'Query returned no data';\n    }\n  }\n\n  return rule;\n}\n\nexport const alertRulesReducer = (state = initialState, action: Action): AlertRulesState => {\n  switch (action.type) {\n    case ActionTypes.LoadAlertRules: {\n      return { ...state, isLoading: true };\n    }\n\n    case ActionTypes.LoadedAlertRules: {\n      const alertRules: AlertRuleDTO[] = action.payload;\n\n      const alertRulesViewModel: AlertRule[] = alertRules.map(rule => {\n        return convertToAlertRule(rule, rule.state);\n      });\n\n      return { ...state, items: alertRulesViewModel, isLoading: false };\n    }\n\n    case ActionTypes.SetSearchQuery:\n      return { ...state, searchQuery: action.payload };\n  }\n\n  return state;\n};\n\nexport default {\n  alertRules: alertRulesReducer,\n};\n","import { Team, TeamGroup, TeamMember, TeamsState, TeamState } from 'app/types';\nimport { Action, ActionTypes } from './actions';\n\nexport const initialTeamsState: TeamsState = { teams: [], searchQuery: '', hasFetched: false };\nexport const initialTeamState: TeamState = {\n  team: {} as Team,\n  members: [] as TeamMember[],\n  groups: [] as TeamGroup[],\n  searchMemberQuery: '',\n};\n\nexport const teamsReducer = (state = initialTeamsState, action: Action): TeamsState => {\n  switch (action.type) {\n    case ActionTypes.LoadTeams:\n      return { ...state, hasFetched: true, teams: action.payload };\n\n    case ActionTypes.SetSearchQuery:\n      return { ...state, searchQuery: action.payload };\n  }\n  return state;\n};\n\nexport const teamReducer = (state = initialTeamState, action: Action): TeamState => {\n  switch (action.type) {\n    case ActionTypes.LoadTeam:\n      return { ...state, team: action.payload };\n\n    case ActionTypes.LoadTeamMembers:\n      return { ...state, members: action.payload };\n\n    case ActionTypes.SetSearchMemberQuery:\n      return { ...state, searchMemberQuery: action.payload };\n\n    case ActionTypes.LoadTeamGroups:\n      return { ...state, groups: action.payload };\n  }\n\n  return state;\n};\n\nexport default {\n  teams: teamsReducer,\n  team: teamReducer,\n};\n","import { navIndexReducer as navIndex } from './navModel';\nimport { locationReducer as location } from './location';\nimport { appNotificationsReducer as appNotifications } from './appNotification';\nimport { applicationReducer as application } from './application';\n\nexport default {\n  navIndex,\n  location,\n  appNotifications,\n  application,\n};\n","import { ApiKeysState } from 'app/types';\nimport { Action, ActionTypes } from './actions';\n\nexport const initialApiKeysState: ApiKeysState = {\n  keys: [],\n  searchQuery: '',\n  hasFetched: false,\n};\n\nexport const apiKeysReducer = (state = initialApiKeysState, action: Action): ApiKeysState => {\n  switch (action.type) {\n    case ActionTypes.LoadApiKeys:\n      return { ...state, hasFetched: true, keys: action.payload };\n    case ActionTypes.SetApiKeysSearchQuery:\n      return { ...state, searchQuery: action.payload };\n  }\n  return state;\n};\n\nexport default {\n  apiKeys: apiKeysReducer,\n};\n","import { DashboardAcl, DashboardAclDTO } from 'app/types/acl';\n\nexport function processAclItems(items: DashboardAclDTO[]): DashboardAcl[] {\n  return items.map(processAclItem).sort((a, b) => b.sortRank - a.sortRank || a.name.localeCompare(b.name));\n}\n\nfunction processAclItem(dto: DashboardAclDTO): DashboardAcl {\n  const item = dto as DashboardAcl;\n\n  item.sortRank = 0;\n  if (item.userId > 0) {\n    item.name = item.userLogin;\n    item.sortRank = 10;\n  } else if (item.teamId > 0) {\n    item.name = item.team;\n    item.sortRank = 20;\n  } else if (item.role) {\n    item.icon = 'fa fa-fw fa-street-view';\n    item.name = item.role;\n    item.sortRank = 30;\n    if (item.role === 'Editor') {\n      item.sortRank += 1;\n    }\n  }\n\n  if (item.inherited) {\n    item.sortRank += 100;\n  }\n\n  return item;\n}\n","import { FolderState } from 'app/types';\nimport { Action, ActionTypes } from './actions';\nimport { processAclItems } from 'app/core/utils/acl';\n\nexport const inititalState: FolderState = {\n  id: 0,\n  uid: 'loading',\n  title: 'loading',\n  url: '',\n  canSave: false,\n  hasChanged: false,\n  version: 1,\n  permissions: [],\n};\n\nexport const folderReducer = (state = inititalState, action: Action): FolderState => {\n  switch (action.type) {\n    case ActionTypes.LoadFolder:\n      return {\n        ...state,\n        ...action.payload,\n        hasChanged: false,\n      };\n    case ActionTypes.SetFolderTitle:\n      return {\n        ...state,\n        title: action.payload,\n        hasChanged: action.payload.trim().length > 0,\n      };\n    case ActionTypes.LoadFolderPermissions:\n      return {\n        ...state,\n        permissions: processAclItems(action.payload),\n      };\n  }\n  return state;\n};\n\nexport default {\n  folder: folderReducer,\n};\n","import { DashboardState, DashboardInitPhase } from 'app/types';\nimport {\n  loadDashboardPermissions,\n  dashboardInitFetching,\n  dashboardInitSlow,\n  dashboardInitServices,\n  dashboardInitFailed,\n  dashboardInitCompleted,\n  cleanUpDashboard,\n} from './actions';\nimport { reducerFactory } from 'app/core/redux';\nimport { processAclItems } from 'app/core/utils/acl';\nimport { DashboardModel } from './DashboardModel';\nimport { panelEditorReducer } from '../panel_editor/state/reducers';\n\nexport const initialState: DashboardState = {\n  initPhase: DashboardInitPhase.NotStarted,\n  isInitSlow: false,\n  model: null,\n  permissions: [],\n};\n\nexport const dashboardReducer = reducerFactory(initialState)\n  .addMapper({\n    filter: loadDashboardPermissions,\n    mapper: (state, action) => ({\n      ...state,\n      permissions: processAclItems(action.payload),\n    }),\n  })\n  .addMapper({\n    filter: dashboardInitFetching,\n    mapper: state => ({\n      ...state,\n      initPhase: DashboardInitPhase.Fetching,\n    }),\n  })\n  .addMapper({\n    filter: dashboardInitServices,\n    mapper: state => ({\n      ...state,\n      initPhase: DashboardInitPhase.Services,\n    }),\n  })\n  .addMapper({\n    filter: dashboardInitSlow,\n    mapper: state => ({\n      ...state,\n      isInitSlow: true,\n    }),\n  })\n  .addMapper({\n    filter: dashboardInitFailed,\n    mapper: (state, action) => ({\n      ...state,\n      initPhase: DashboardInitPhase.Failed,\n      isInitSlow: false,\n      initError: action.payload,\n      model: new DashboardModel({ title: 'Dashboard init failed' }, { canSave: false, canEdit: false }),\n    }),\n  })\n  .addMapper({\n    filter: dashboardInitCompleted,\n    mapper: (state, action) => ({\n      ...state,\n      initPhase: DashboardInitPhase.Completed,\n      model: action.payload,\n      isInitSlow: false,\n    }),\n  })\n  .addMapper({\n    filter: cleanUpDashboard,\n    mapper: (state, action) => {\n      // Destroy current DashboardModel\n      // Very important as this removes all dashboard event listeners\n      state.model.destroy();\n\n      return {\n        ...state,\n        initPhase: DashboardInitPhase.NotStarted,\n        model: null,\n        isInitSlow: false,\n        initError: null,\n      };\n    },\n  })\n  .create();\n\nexport default {\n  dashboard: dashboardReducer,\n  panelEditor: panelEditorReducer,\n};\n","import { LogsModel, GraphSeriesXY, DataFrame, FieldType } from '@grafana/data';\n\nimport { ExploreItemState, ExploreMode } from 'app/types/explore';\nimport TableModel, { mergeTablesIntoModel } from 'app/core/table_model';\nimport { sortLogsResult, refreshIntervalToSortOrder } from 'app/core/utils/explore';\nimport { dataFrameToLogsModel } from 'app/core/logs_model';\nimport { getGraphSeriesModel } from 'app/plugins/panel/graph2/getGraphSeriesModel';\n\nexport class ResultProcessor {\n  constructor(private state: ExploreItemState, private dataFrames: DataFrame[], private intervalMs: number) {}\n\n  getGraphResult(): GraphSeriesXY[] {\n    if (this.state.mode !== ExploreMode.Metrics) {\n      return null;\n    }\n\n    const onlyTimeSeries = this.dataFrames.filter(isTimeSeries);\n\n    if (onlyTimeSeries.length === 0) {\n      return null;\n    }\n\n    return getGraphSeriesModel(\n      onlyTimeSeries,\n      {},\n      { showBars: false, showLines: true, showPoints: false },\n      { asTable: false, isVisible: true, placement: 'under' }\n    );\n  }\n\n  getTableResult(): TableModel {\n    if (this.state.mode !== ExploreMode.Metrics) {\n      return null;\n    }\n\n    // For now ignore time series\n    // We can change this later, just need to figure out how to\n    // Ignore time series only for prometheus\n    const onlyTables = this.dataFrames.filter(frame => !isTimeSeries(frame));\n\n    if (onlyTables.length === 0) {\n      return null;\n    }\n\n    const tables = onlyTables.map(frame => {\n      const { fields } = frame;\n      const fieldCount = fields.length;\n      const rowCount = frame.length;\n\n      const columns = fields.map(field => ({\n        text: field.name,\n        type: field.type,\n        filterable: field.config.filterable,\n      }));\n\n      const rows: any[][] = [];\n      for (let i = 0; i < rowCount; i++) {\n        const row: any[] = [];\n        for (let j = 0; j < fieldCount; j++) {\n          row.push(frame.fields[j].values.get(i));\n        }\n        rows.push(row);\n      }\n\n      return new TableModel({\n        columns,\n        rows,\n        meta: frame.meta,\n      });\n    });\n\n    return mergeTablesIntoModel(new TableModel(), ...tables);\n  }\n\n  getLogsResult(): LogsModel {\n    if (this.state.mode !== ExploreMode.Logs) {\n      return null;\n    }\n\n    const newResults = dataFrameToLogsModel(this.dataFrames, this.intervalMs);\n    const sortOrder = refreshIntervalToSortOrder(this.state.refreshInterval);\n    const sortedNewResults = sortLogsResult(newResults, sortOrder);\n\n    const rows = sortedNewResults.rows;\n    const series = sortedNewResults.series;\n    return { ...sortedNewResults, rows, series };\n  }\n}\n\nexport function isTimeSeries(frame: DataFrame): boolean {\n  if (frame.fields.length === 2) {\n    if (frame.fields[1].type === FieldType.time) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","import _ from 'lodash';\nimport {\n  ensureQueries,\n  getQueryKeys,\n  parseUrlState,\n  DEFAULT_UI_STATE,\n  generateNewKeyAndAddRefIdIfMissing,\n  sortLogsResult,\n  stopQueryState,\n  refreshIntervalToSortOrder,\n} from 'app/core/utils/explore';\nimport { ExploreItemState, ExploreState, ExploreId, ExploreUpdateState, ExploreMode } from 'app/types/explore';\nimport { LoadingState, toLegacyResponseData, DefaultTimeRange } from '@grafana/data';\nimport { DataQuery, DataSourceApi, PanelData, DataQueryRequest } from '@grafana/ui';\nimport {\n  HigherOrderAction,\n  ActionTypes,\n  testDataSourcePendingAction,\n  testDataSourceSuccessAction,\n  testDataSourceFailureAction,\n  splitCloseAction,\n  SplitCloseActionPayload,\n  loadExploreDatasources,\n  historyUpdatedAction,\n  changeModeAction,\n  setUrlReplacedAction,\n  scanStopAction,\n  queryStartAction,\n  changeRangeAction,\n  clearOriginAction,\n  addQueryRowAction,\n  changeQueryAction,\n  changeSizeAction,\n  changeRefreshIntervalAction,\n  clearQueriesAction,\n  highlightLogsExpressionAction,\n  initializeExploreAction,\n  updateDatasourceInstanceAction,\n  loadDatasourceMissingAction,\n  loadDatasourcePendingAction,\n  loadDatasourceReadyAction,\n  modifyQueriesAction,\n  removeQueryRowAction,\n  scanStartAction,\n  setQueriesAction,\n  toggleTableAction,\n  queriesImportedAction,\n  updateUIStateAction,\n  toggleLogLevelAction,\n  changeLoadingStateAction,\n  resetExploreAction,\n  queryStreamUpdatedAction,\n  QueryEndedPayload,\n  queryStoreSubscriptionAction,\n  setPausedStateAction,\n  toggleGraphAction,\n} from './actionTypes';\nimport { reducerFactory, ActionOf } from 'app/core/redux';\nimport { updateLocation } from 'app/core/actions/location';\nimport { LocationUpdate } from '@grafana/runtime';\nimport TableModel from 'app/core/table_model';\nimport { isLive } from '@grafana/ui/src/components/RefreshPicker/RefreshPicker';\nimport { ResultProcessor } from '../utils/ResultProcessor';\n\nexport const DEFAULT_RANGE = {\n  from: 'now-6h',\n  to: 'now',\n};\n\nexport const makeInitialUpdateState = (): ExploreUpdateState => ({\n  datasource: false,\n  queries: false,\n  range: false,\n  mode: false,\n  ui: false,\n});\n\n/**\n * Returns a fresh Explore area state\n */\nexport const makeExploreItemState = (): ExploreItemState => ({\n  StartPage: undefined,\n  containerWidth: 0,\n  datasourceInstance: null,\n  requestedDatasourceName: null,\n  datasourceError: null,\n  datasourceLoading: null,\n  datasourceMissing: false,\n  exploreDatasources: [],\n  history: [],\n  queries: [],\n  initialized: false,\n  range: {\n    from: null,\n    to: null,\n    raw: DEFAULT_RANGE,\n  },\n  absoluteRange: {\n    from: null,\n    to: null,\n  },\n  scanning: false,\n  scanRange: null,\n  showingGraph: true,\n  showingTable: true,\n  loading: false,\n  queryKeys: [],\n  urlState: null,\n  update: makeInitialUpdateState(),\n  latency: 0,\n  supportedModes: [],\n  mode: null,\n  isLive: false,\n  isPaused: false,\n  urlReplaced: false,\n  queryResponse: createEmptyQueryResponse(),\n});\n\nexport const createEmptyQueryResponse = (): PanelData => ({\n  state: LoadingState.NotStarted,\n  request: {} as DataQueryRequest<DataQuery>,\n  series: [],\n  error: null,\n  timeRange: DefaultTimeRange,\n});\n\n/**\n * Global Explore state that handles multiple Explore areas and the split state\n */\nexport const initialExploreItemState = makeExploreItemState();\nexport const initialExploreState: ExploreState = {\n  split: null,\n  left: initialExploreItemState,\n  right: initialExploreItemState,\n};\n\n/**\n * Reducer for an Explore area, to be used by the global Explore reducer.\n */\nexport const itemReducer = reducerFactory<ExploreItemState>({} as ExploreItemState)\n  .addMapper({\n    filter: addQueryRowAction,\n    mapper: (state, action): ExploreItemState => {\n      const { queries } = state;\n      const { index, query } = action.payload;\n\n      // Add to queries, which will cause a new row to be rendered\n      const nextQueries = [...queries.slice(0, index + 1), { ...query }, ...queries.slice(index + 1)];\n\n      return {\n        ...state,\n        queries: nextQueries,\n        logsHighlighterExpressions: undefined,\n        queryKeys: getQueryKeys(nextQueries, state.datasourceInstance),\n      };\n    },\n  })\n  .addMapper({\n    filter: changeQueryAction,\n    mapper: (state, action): ExploreItemState => {\n      const { queries } = state;\n      const { query, index } = action.payload;\n\n      // Override path: queries are completely reset\n      const nextQuery: DataQuery = generateNewKeyAndAddRefIdIfMissing(query, queries, index);\n      const nextQueries = [...queries];\n      nextQueries[index] = nextQuery;\n\n      return {\n        ...state,\n        queries: nextQueries,\n        queryKeys: getQueryKeys(nextQueries, state.datasourceInstance),\n      };\n    },\n  })\n  .addMapper({\n    filter: changeSizeAction,\n    mapper: (state, action): ExploreItemState => {\n      const containerWidth = action.payload.width;\n      return { ...state, containerWidth };\n    },\n  })\n  .addMapper({\n    filter: changeModeAction,\n    mapper: (state, action): ExploreItemState => {\n      const mode = action.payload.mode;\n      return { ...state, mode };\n    },\n  })\n  .addMapper({\n    filter: changeRefreshIntervalAction,\n    mapper: (state, action): ExploreItemState => {\n      const { refreshInterval } = action.payload;\n      const live = isLive(refreshInterval);\n      const sortOrder = refreshIntervalToSortOrder(refreshInterval);\n      const logsResult = sortLogsResult(state.logsResult, sortOrder);\n\n      if (isLive(state.refreshInterval) && !live) {\n        stopQueryState(state.querySubscription);\n      }\n\n      return {\n        ...state,\n        refreshInterval,\n        queryResponse: {\n          ...state.queryResponse,\n          state: live ? LoadingState.Streaming : LoadingState.NotStarted,\n        },\n        isLive: live,\n        isPaused: live ? false : state.isPaused,\n        loading: live,\n        logsResult,\n      };\n    },\n  })\n  .addMapper({\n    filter: clearQueriesAction,\n    mapper: (state): ExploreItemState => {\n      const queries = ensureQueries();\n      stopQueryState(state.querySubscription);\n      return {\n        ...state,\n        queries: queries.slice(),\n        graphResult: null,\n        tableResult: null,\n        logsResult: null,\n        showingStartPage: Boolean(state.StartPage),\n        queryKeys: getQueryKeys(queries, state.datasourceInstance),\n        queryResponse: createEmptyQueryResponse(),\n        loading: false,\n      };\n    },\n  })\n  .addMapper({\n    filter: clearOriginAction,\n    mapper: (state): ExploreItemState => {\n      return {\n        ...state,\n        originPanelId: undefined,\n      };\n    },\n  })\n  .addMapper({\n    filter: highlightLogsExpressionAction,\n    mapper: (state, action): ExploreItemState => {\n      const { expressions } = action.payload;\n      return { ...state, logsHighlighterExpressions: expressions };\n    },\n  })\n  .addMapper({\n    filter: initializeExploreAction,\n    mapper: (state, action): ExploreItemState => {\n      const { containerWidth, eventBridge, queries, range, mode, ui, originPanelId } = action.payload;\n      return {\n        ...state,\n        containerWidth,\n        eventBridge,\n        range,\n        mode,\n        queries,\n        initialized: true,\n        queryKeys: getQueryKeys(queries, state.datasourceInstance),\n        ...ui,\n        originPanelId,\n        update: makeInitialUpdateState(),\n      };\n    },\n  })\n  .addMapper({\n    filter: updateDatasourceInstanceAction,\n    mapper: (state, action): ExploreItemState => {\n      const { datasourceInstance } = action.payload;\n      const [supportedModes, mode] = getModesForDatasource(datasourceInstance, state.mode);\n\n      const originPanelId = state.urlState && state.urlState.originPanelId;\n\n      // Custom components\n      const StartPage = datasourceInstance.components.ExploreStartPage;\n      stopQueryState(state.querySubscription);\n\n      return {\n        ...state,\n        datasourceInstance,\n        graphResult: null,\n        tableResult: null,\n        logsResult: null,\n        latency: 0,\n        queryResponse: createEmptyQueryResponse(),\n        loading: false,\n        StartPage,\n        showingStartPage: Boolean(StartPage),\n        queryKeys: [],\n        supportedModes,\n        mode,\n        originPanelId,\n      };\n    },\n  })\n  .addMapper({\n    filter: loadDatasourceMissingAction,\n    mapper: (state): ExploreItemState => {\n      return {\n        ...state,\n        datasourceMissing: true,\n        datasourceLoading: false,\n        update: makeInitialUpdateState(),\n      };\n    },\n  })\n  .addMapper({\n    filter: loadDatasourcePendingAction,\n    mapper: (state, action): ExploreItemState => {\n      return {\n        ...state,\n        datasourceLoading: true,\n        requestedDatasourceName: action.payload.requestedDatasourceName,\n      };\n    },\n  })\n  .addMapper({\n    filter: loadDatasourceReadyAction,\n    mapper: (state, action): ExploreItemState => {\n      const { history } = action.payload;\n      return {\n        ...state,\n        history,\n        datasourceLoading: false,\n        datasourceMissing: false,\n        logsHighlighterExpressions: undefined,\n        update: makeInitialUpdateState(),\n      };\n    },\n  })\n  .addMapper({\n    filter: modifyQueriesAction,\n    mapper: (state, action): ExploreItemState => {\n      const { queries } = state;\n      const { modification, index, modifier } = action.payload;\n      let nextQueries: DataQuery[];\n      if (index === undefined) {\n        // Modify all queries\n        nextQueries = queries.map((query, i) => {\n          const nextQuery = modifier({ ...query }, modification);\n          return generateNewKeyAndAddRefIdIfMissing(nextQuery, queries, i);\n        });\n      } else {\n        // Modify query only at index\n        nextQueries = queries.map((query, i) => {\n          if (i === index) {\n            const nextQuery = modifier({ ...query }, modification);\n            return generateNewKeyAndAddRefIdIfMissing(nextQuery, queries, i);\n          }\n\n          return query;\n        });\n      }\n      return {\n        ...state,\n        queries: nextQueries,\n        queryKeys: getQueryKeys(nextQueries, state.datasourceInstance),\n      };\n    },\n  })\n  .addMapper({\n    filter: queryStartAction,\n    mapper: (state): ExploreItemState => {\n      return {\n        ...state,\n        latency: 0,\n        queryResponse: {\n          ...state.queryResponse,\n          state: LoadingState.Loading,\n          error: null,\n        },\n        loading: true,\n        update: makeInitialUpdateState(),\n      };\n    },\n  })\n  .addMapper({\n    filter: removeQueryRowAction,\n    mapper: (state, action): ExploreItemState => {\n      const { queries, queryKeys } = state;\n      const { index } = action.payload;\n\n      if (queries.length <= 1) {\n        return state;\n      }\n\n      const nextQueries = [...queries.slice(0, index), ...queries.slice(index + 1)];\n      const nextQueryKeys = [...queryKeys.slice(0, index), ...queryKeys.slice(index + 1)];\n\n      return {\n        ...state,\n        queries: nextQueries,\n        logsHighlighterExpressions: undefined,\n        queryKeys: nextQueryKeys,\n      };\n    },\n  })\n  .addMapper({\n    filter: scanStartAction,\n    mapper: (state, action): ExploreItemState => {\n      return { ...state, scanning: true };\n    },\n  })\n  .addMapper({\n    filter: scanStopAction,\n    mapper: (state): ExploreItemState => {\n      return {\n        ...state,\n        scanning: false,\n        scanRange: undefined,\n        update: makeInitialUpdateState(),\n      };\n    },\n  })\n  .addMapper({\n    filter: setQueriesAction,\n    mapper: (state, action): ExploreItemState => {\n      const { queries } = action.payload;\n      return {\n        ...state,\n        queries: queries.slice(),\n        queryKeys: getQueryKeys(queries, state.datasourceInstance),\n      };\n    },\n  })\n  .addMapper({\n    filter: updateUIStateAction,\n    mapper: (state, action): ExploreItemState => {\n      return { ...state, ...action.payload };\n    },\n  })\n  .addMapper({\n    filter: toggleGraphAction,\n    mapper: (state): ExploreItemState => {\n      const showingGraph = !state.showingGraph;\n      if (showingGraph) {\n        return { ...state, showingGraph };\n      }\n\n      return { ...state, showingGraph, graphResult: null };\n    },\n  })\n  .addMapper({\n    filter: toggleTableAction,\n    mapper: (state): ExploreItemState => {\n      const showingTable = !state.showingTable;\n      if (showingTable) {\n        return { ...state, showingTable };\n      }\n\n      return { ...state, showingTable, tableResult: new TableModel() };\n    },\n  })\n  .addMapper({\n    filter: queriesImportedAction,\n    mapper: (state, action): ExploreItemState => {\n      const { queries } = action.payload;\n      return {\n        ...state,\n        queries,\n        queryKeys: getQueryKeys(queries, state.datasourceInstance),\n      };\n    },\n  })\n  .addMapper({\n    filter: toggleLogLevelAction,\n    mapper: (state, action): ExploreItemState => {\n      const { hiddenLogLevels } = action.payload;\n      return {\n        ...state,\n        hiddenLogLevels: Array.from(hiddenLogLevels),\n      };\n    },\n  })\n  .addMapper({\n    filter: testDataSourcePendingAction,\n    mapper: (state): ExploreItemState => {\n      return {\n        ...state,\n        datasourceError: null,\n      };\n    },\n  })\n  .addMapper({\n    filter: testDataSourceSuccessAction,\n    mapper: (state): ExploreItemState => {\n      return {\n        ...state,\n        datasourceError: null,\n      };\n    },\n  })\n  .addMapper({\n    filter: testDataSourceFailureAction,\n    mapper: (state, action): ExploreItemState => {\n      return {\n        ...state,\n        datasourceError: action.payload.error,\n        graphResult: undefined,\n        tableResult: undefined,\n        logsResult: undefined,\n        update: makeInitialUpdateState(),\n      };\n    },\n  })\n  .addMapper({\n    filter: loadExploreDatasources,\n    mapper: (state, action): ExploreItemState => {\n      return {\n        ...state,\n        exploreDatasources: action.payload.exploreDatasources,\n      };\n    },\n  })\n  .addMapper({\n    filter: historyUpdatedAction,\n    mapper: (state, action): ExploreItemState => {\n      return {\n        ...state,\n        history: action.payload.history,\n      };\n    },\n  })\n  .addMapper({\n    filter: setUrlReplacedAction,\n    mapper: (state): ExploreItemState => {\n      return {\n        ...state,\n        urlReplaced: true,\n      };\n    },\n  })\n  .addMapper({\n    filter: changeRangeAction,\n    mapper: (state, action): ExploreItemState => {\n      const { range, absoluteRange } = action.payload;\n      return {\n        ...state,\n        range,\n        absoluteRange,\n        update: makeInitialUpdateState(),\n      };\n    },\n  })\n  .addMapper({\n    filter: changeLoadingStateAction,\n    mapper: (state, action): ExploreItemState => {\n      const { loadingState } = action.payload;\n      return {\n        ...state,\n        queryResponse: {\n          ...state.queryResponse,\n          state: loadingState,\n        },\n        loading: loadingState === LoadingState.Loading || loadingState === LoadingState.Streaming,\n      };\n    },\n  })\n  .addMapper({\n    filter: setPausedStateAction,\n    mapper: (state, action): ExploreItemState => {\n      const { isPaused } = action.payload;\n      return {\n        ...state,\n        isPaused: isPaused,\n      };\n    },\n  })\n  .addMapper({\n    filter: queryStoreSubscriptionAction,\n    mapper: (state, action): ExploreItemState => {\n      const { querySubscription } = action.payload;\n      return {\n        ...state,\n        querySubscription,\n      };\n    },\n  })\n  .addMapper({\n    filter: queryStreamUpdatedAction,\n    mapper: (state, action): ExploreItemState => {\n      return processQueryResponse(state, action);\n    },\n  })\n  .create();\n\nexport const processQueryResponse = (\n  state: ExploreItemState,\n  action: ActionOf<QueryEndedPayload>\n): ExploreItemState => {\n  const { response } = action.payload;\n  const { request, state: loadingState, series, error } = response;\n\n  if (error) {\n    if (error.cancelled) {\n      return state;\n    }\n\n    // For Angular editors\n    state.eventBridge.emit('data-error', error);\n\n    return {\n      ...state,\n      loading: false,\n      queryResponse: response,\n      graphResult: null,\n      tableResult: null,\n      logsResult: null,\n      showingStartPage: false,\n      update: makeInitialUpdateState(),\n    };\n  }\n\n  const latency = request.endTime ? request.endTime - request.startTime : 0;\n  const processor = new ResultProcessor(state, series, request.intervalMs);\n  const graphResult = processor.getGraphResult();\n  const tableResult = processor.getTableResult();\n  const logsResult = processor.getLogsResult();\n\n  // Send legacy data to Angular editors\n  if (state.datasourceInstance.components.QueryCtrl) {\n    const legacy = series.map(v => toLegacyResponseData(v));\n\n    state.eventBridge.emit('data-received', legacy);\n  }\n\n  return {\n    ...state,\n    latency,\n    queryResponse: response,\n    graphResult,\n    tableResult,\n    logsResult,\n    loading: loadingState === LoadingState.Loading || loadingState === LoadingState.Streaming,\n    showingStartPage: false,\n    update: makeInitialUpdateState(),\n  };\n};\n\nexport const updateChildRefreshState = (\n  state: Readonly<ExploreItemState>,\n  payload: LocationUpdate,\n  exploreId: ExploreId\n): ExploreItemState => {\n  const path = payload.path || '';\n  const queryState = payload.query[exploreId] as string;\n  if (!queryState) {\n    return state;\n  }\n\n  const urlState = parseUrlState(queryState);\n  if (!state.urlState || path !== '/explore') {\n    // we only want to refresh when browser back/forward\n    return {\n      ...state,\n      urlState,\n      update: { datasource: false, queries: false, range: false, mode: false, ui: false },\n    };\n  }\n\n  const datasource = _.isEqual(urlState ? urlState.datasource : '', state.urlState.datasource) === false;\n  const queries = _.isEqual(urlState ? urlState.queries : [], state.urlState.queries) === false;\n  const range = _.isEqual(urlState ? urlState.range : DEFAULT_RANGE, state.urlState.range) === false;\n  const mode = _.isEqual(urlState ? urlState.mode : ExploreMode.Metrics, state.urlState.mode) === false;\n  const ui = _.isEqual(urlState ? urlState.ui : DEFAULT_UI_STATE, state.urlState.ui) === false;\n\n  return {\n    ...state,\n    urlState,\n    update: {\n      ...state.update,\n      datasource,\n      queries,\n      range,\n      mode,\n      ui,\n    },\n  };\n};\n\nconst getModesForDatasource = (dataSource: DataSourceApi, currentMode: ExploreMode): [ExploreMode[], ExploreMode] => {\n  // Temporary hack here. We want Loki to work in dashboards for which it needs to have metrics = true which is weird\n  // for Explore.\n  // TODO: need to figure out a better way to handle this situation\n  const supportsGraph = dataSource.meta.name === 'Loki' ? false : dataSource.meta.metrics;\n  const supportsLogs = dataSource.meta.logs;\n\n  let mode = currentMode || ExploreMode.Metrics;\n  const supportedModes: ExploreMode[] = [];\n\n  if (supportsGraph) {\n    supportedModes.push(ExploreMode.Metrics);\n  }\n\n  if (supportsLogs) {\n    supportedModes.push(ExploreMode.Logs);\n  }\n\n  if (supportedModes.length === 1) {\n    mode = supportedModes[0];\n  }\n\n  return [supportedModes, mode];\n};\n\n/**\n * Global Explore reducer that handles multiple Explore areas (left and right).\n * Actions that have an `exploreId` get routed to the ExploreItemReducer.\n */\nexport const exploreReducer = (state = initialExploreState, action: HigherOrderAction): ExploreState => {\n  switch (action.type) {\n    case splitCloseAction.type: {\n      const { itemId } = action.payload as SplitCloseActionPayload;\n      const targetSplit = {\n        left: itemId === ExploreId.left ? state.right : state.left,\n        right: initialExploreState.right,\n      };\n      return {\n        ...state,\n        ...targetSplit,\n        split: false,\n      };\n    }\n\n    case ActionTypes.SplitOpen: {\n      return { ...state, split: true, right: { ...action.payload.itemState } };\n    }\n\n    case ActionTypes.ResetExplore: {\n      if (action.payload.force || !Number.isInteger(state.left.originPanelId)) {\n        return initialExploreState;\n      }\n\n      return {\n        ...initialExploreState,\n        left: {\n          ...initialExploreItemState,\n          queries: state.left.queries,\n          originPanelId: state.left.originPanelId,\n        },\n      };\n    }\n\n    case updateLocation.type: {\n      const { query } = action.payload;\n      if (!query || !query[ExploreId.left]) {\n        return state;\n      }\n\n      const split = query[ExploreId.right] ? true : false;\n      const leftState = state[ExploreId.left];\n      const rightState = state[ExploreId.right];\n\n      return {\n        ...state,\n        split,\n        [ExploreId.left]: updateChildRefreshState(leftState, action.payload, ExploreId.left),\n        [ExploreId.right]: updateChildRefreshState(rightState, action.payload, ExploreId.right),\n      };\n    }\n\n    case resetExploreAction.type: {\n      const leftState = state[ExploreId.left];\n      const rightState = state[ExploreId.right];\n      stopQueryState(leftState.querySubscription);\n      stopQueryState(rightState.querySubscription);\n\n      return {\n        ...state,\n        [ExploreId.left]: updateChildRefreshState(leftState, action.payload, ExploreId.left),\n        [ExploreId.right]: updateChildRefreshState(rightState, action.payload, ExploreId.right),\n      };\n    }\n  }\n\n  if (action.payload) {\n    const { exploreId } = action.payload as any;\n    if (exploreId !== undefined) {\n      // @ts-ignore\n      const exploreItemState = state[exploreId];\n      return { ...state, [exploreId]: itemReducer(exploreItemState, action) };\n    }\n  }\n\n  return state;\n};\n\nexport default {\n  explore: exploreReducer,\n};\n","import { Action, ActionTypes } from './actions';\nimport { PluginsState } from 'app/types';\nimport { LayoutModes } from '../../../core/components/LayoutSelector/LayoutSelector';\nimport { PluginDashboard } from '../../../types/plugins';\nimport { PluginMeta } from '@grafana/ui';\n\nexport const initialState: PluginsState = {\n  plugins: [] as PluginMeta[],\n  searchQuery: '',\n  layoutMode: LayoutModes.Grid,\n  hasFetched: false,\n  dashboards: [] as PluginDashboard[],\n  isLoadingPluginDashboards: false,\n};\n\nexport const pluginsReducer = (state = initialState, action: Action): PluginsState => {\n  switch (action.type) {\n    case ActionTypes.LoadPlugins:\n      return { ...state, hasFetched: true, plugins: action.payload };\n\n    case ActionTypes.SetPluginsSearchQuery:\n      return { ...state, searchQuery: action.payload };\n\n    case ActionTypes.SetLayoutMode:\n      return { ...state, layoutMode: action.payload };\n\n    case ActionTypes.LoadPluginDashboards:\n      return { ...state, dashboards: [], isLoadingPluginDashboards: true };\n\n    case ActionTypes.LoadedPluginDashboards:\n      return { ...state, dashboards: action.payload, isLoadingPluginDashboards: false };\n  }\n  return state;\n};\n\nexport default {\n  plugins: pluginsReducer,\n};\n","import { DataSourcesState } from 'app/types';\nimport { DataSourceSettings, DataSourcePluginMeta } from '@grafana/ui';\nimport {\n  dataSourceLoaded,\n  dataSourcesLoaded,\n  setDataSourcesSearchQuery,\n  setDataSourcesLayoutMode,\n  dataSourceTypesLoad,\n  dataSourceTypesLoaded,\n  setDataSourceTypeSearchQuery,\n  dataSourceMetaLoaded,\n  setDataSourceName,\n  setIsDefault,\n} from './actions';\nimport { LayoutModes } from 'app/core/components/LayoutSelector/LayoutSelector';\nimport { reducerFactory } from 'app/core/redux';\n\nexport const initialState: DataSourcesState = {\n  dataSources: [],\n  dataSource: {} as DataSourceSettings,\n  layoutMode: LayoutModes.List,\n  searchQuery: '',\n  dataSourcesCount: 0,\n  dataSourceTypes: [],\n  dataSourceTypeSearchQuery: '',\n  hasFetched: false,\n  isLoadingDataSources: false,\n  dataSourceMeta: {} as DataSourcePluginMeta,\n};\n\nexport const dataSourcesReducer = reducerFactory(initialState)\n  .addMapper({\n    filter: dataSourcesLoaded,\n    mapper: (state, action) => ({\n      ...state,\n      hasFetched: true,\n      dataSources: action.payload,\n      dataSourcesCount: action.payload.length,\n    }),\n  })\n  .addMapper({\n    filter: dataSourceLoaded,\n    mapper: (state, action) => ({ ...state, dataSource: action.payload }),\n  })\n  .addMapper({\n    filter: setDataSourcesSearchQuery,\n    mapper: (state, action) => ({ ...state, searchQuery: action.payload }),\n  })\n  .addMapper({\n    filter: setDataSourcesLayoutMode,\n    mapper: (state, action) => ({ ...state, layoutMode: action.payload }),\n  })\n  .addMapper({\n    filter: dataSourceTypesLoad,\n    mapper: state => ({ ...state, dataSourceTypes: [], isLoadingDataSources: true }),\n  })\n  .addMapper({\n    filter: dataSourceTypesLoaded,\n    mapper: (state, action) => ({\n      ...state,\n      dataSourceTypes: action.payload,\n      isLoadingDataSources: false,\n    }),\n  })\n  .addMapper({\n    filter: setDataSourceTypeSearchQuery,\n    mapper: (state, action) => ({ ...state, dataSourceTypeSearchQuery: action.payload }),\n  })\n  .addMapper({\n    filter: dataSourceMetaLoaded,\n    mapper: (state, action) => ({ ...state, dataSourceMeta: action.payload }),\n  })\n  .addMapper({\n    filter: setDataSourceName,\n    mapper: (state, action) => ({ ...state, dataSource: { ...state.dataSource, name: action.payload } }),\n  })\n  .addMapper({\n    filter: setIsDefault,\n    mapper: (state, action) => ({\n      ...state,\n      dataSource: { ...state.dataSource, isDefault: action.payload },\n    }),\n  })\n  .create();\n\nexport default {\n  dataSources: dataSourcesReducer,\n};\n","import { Invitee, OrgUser, UsersState } from 'app/types';\nimport { Action, ActionTypes } from './actions';\nimport config from 'app/core/config';\n\nexport const initialState: UsersState = {\n  invitees: [] as Invitee[],\n  users: [] as OrgUser[],\n  searchQuery: '',\n  canInvite: !config.externalUserMngLinkName,\n  externalUserMngInfo: config.externalUserMngInfo,\n  externalUserMngLinkName: config.externalUserMngLinkName,\n  externalUserMngLinkUrl: config.externalUserMngLinkUrl,\n  hasFetched: false,\n};\n\nexport const usersReducer = (state = initialState, action: Action): UsersState => {\n  switch (action.type) {\n    case ActionTypes.LoadUsers:\n      return { ...state, hasFetched: true, users: action.payload };\n\n    case ActionTypes.LoadInvitees:\n      return { ...state, hasFetched: true, invitees: action.payload };\n\n    case ActionTypes.SetUsersSearchQuery:\n      return { ...state, searchQuery: action.payload };\n  }\n\n  return state;\n};\n\nexport default {\n  users: usersReducer,\n};\n","import { UserState } from 'app/types';\nimport config from 'app/core/config';\n\nexport const initialState: UserState = {\n  orgId: config.bootData.user.orgId,\n  timeZone: config.bootData.user.timezone,\n};\n\nexport const userReducer = (state = initialState, action: any): UserState => {\n  return state;\n};\n\nexport default {\n  user: userReducer,\n};\n","import { reducerFactory } from 'app/core/redux';\nimport { LdapState, LdapUserState } from 'app/types';\nimport {\n  ldapConnectionInfoLoadedAction,\n  ldapFailedAction,\n  userMappingInfoLoadedAction,\n  userMappingInfoFailedAction,\n  clearUserErrorAction,\n  userLoadedAction,\n  userSessionsLoadedAction,\n  ldapSyncStatusLoadedAction,\n  clearUserMappingInfoAction,\n} from './actions';\n\nconst initialLdapState: LdapState = {\n  connectionInfo: [],\n  syncInfo: null,\n  user: null,\n  connectionError: null,\n  userError: null,\n};\n\nconst initialLdapUserState: LdapUserState = {\n  user: null,\n  ldapUser: null,\n  ldapSyncInfo: null,\n  sessions: [],\n};\n\nexport const ldapReducer = reducerFactory(initialLdapState)\n  .addMapper({\n    filter: ldapConnectionInfoLoadedAction,\n    mapper: (state, action) => ({\n      ...state,\n      ldapError: null,\n      connectionInfo: action.payload,\n    }),\n  })\n  .addMapper({\n    filter: ldapFailedAction,\n    mapper: (state, action) => ({\n      ...state,\n      ldapError: action.payload,\n    }),\n  })\n  .addMapper({\n    filter: ldapSyncStatusLoadedAction,\n    mapper: (state, action) => ({\n      ...state,\n      syncInfo: action.payload,\n    }),\n  })\n  .addMapper({\n    filter: userMappingInfoLoadedAction,\n    mapper: (state, action) => ({\n      ...state,\n      user: action.payload,\n      userError: null,\n    }),\n  })\n  .addMapper({\n    filter: userMappingInfoFailedAction,\n    mapper: (state, action) => ({\n      ...state,\n      user: null,\n      userError: action.payload,\n    }),\n  })\n  .addMapper({\n    filter: clearUserMappingInfoAction,\n    mapper: (state, action) => ({\n      ...state,\n      user: null,\n    }),\n  })\n  .addMapper({\n    filter: clearUserErrorAction,\n    mapper: state => ({\n      ...state,\n      userError: null,\n    }),\n  })\n  .create();\n\nexport const ldapUserReducer = reducerFactory(initialLdapUserState)\n  .addMapper({\n    filter: userMappingInfoLoadedAction,\n    mapper: (state, action) => ({\n      ...state,\n      ldapUser: action.payload,\n    }),\n  })\n  .addMapper({\n    filter: userMappingInfoFailedAction,\n    mapper: (state, action) => ({\n      ...state,\n      ldapUser: null,\n      userError: action.payload,\n    }),\n  })\n  .addMapper({\n    filter: clearUserErrorAction,\n    mapper: state => ({\n      ...state,\n      userError: null,\n    }),\n  })\n  .addMapper({\n    filter: ldapSyncStatusLoadedAction,\n    mapper: (state, action) => ({\n      ...state,\n      ldapSyncInfo: action.payload,\n    }),\n  })\n  .addMapper({\n    filter: userLoadedAction,\n    mapper: (state, action) => ({\n      ...state,\n      user: action.payload,\n      userError: null,\n    }),\n  })\n  .addMapper({\n    filter: userSessionsLoadedAction,\n    mapper: (state, action) => ({\n      ...state,\n      sessions: action.payload,\n    }),\n  })\n  .create();\n\nexport default {\n  ldap: ldapReducer,\n  ldapUser: ldapUserReducer,\n};\n","import { Organization, OrganizationState } from 'app/types';\nimport { Action, ActionTypes } from './actions';\n\nconst initialState: OrganizationState = {\n  organization: {} as Organization,\n};\n\nconst organizationReducer = (state = initialState, action: Action): OrganizationState => {\n  switch (action.type) {\n    case ActionTypes.LoadOrganization:\n      return { ...state, organization: action.payload };\n\n    case ActionTypes.SetOrganizationName:\n      return { ...state, organization: { ...state.organization, name: action.payload } };\n  }\n\n  return state;\n};\n\nexport default {\n  organization: organizationReducer,\n};\n","import { Store, Dispatch } from 'redux';\nimport { StoreState } from 'app/types/store';\nimport { ActionOf } from '../redux/actionCreatorFactory';\nimport { toggleLogActions } from '../actions/application';\n\nexport const toggleLogActionsMiddleware = (store: Store<StoreState>) => (next: Dispatch) => (action: ActionOf<any>) => {\n  const isLogActionsAction = action.type === toggleLogActions.type;\n  if (isLogActionsAction) {\n    return next(action);\n  }\n\n  const logActionsTrue =\n    window && window.location && window.location.search && window.location.search.indexOf('logActions=true') !== -1;\n  const logActionsFalse =\n    window && window.location && window.location.search && window.location.search.indexOf('logActions=false') !== -1;\n  const logActions = store.getState().application.logActions;\n\n  if (logActionsTrue && !logActions) {\n    store.dispatch(toggleLogActions());\n  }\n\n  if (logActionsFalse && logActions) {\n    store.dispatch(toggleLogActions());\n  }\n\n  return next(action);\n};\n","// Libraries\nimport _ from 'lodash';\nimport $ from 'jquery';\n// @ts-ignore\nimport Drop from 'tether-drop';\n\n// Utils and servies\nimport { colors } from '@grafana/ui';\nimport { setBackendSrv, BackendSrv, setDataSourceSrv } from '@grafana/runtime';\nimport config from 'app/core/config';\nimport coreModule from 'app/core/core_module';\nimport { profiler } from 'app/core/profiler';\nimport appEvents from 'app/core/app_events';\nimport { TimeSrv, setTimeSrv } from 'app/features/dashboard/services/TimeSrv';\nimport { DatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport { KeybindingSrv, setKeybindingSrv } from 'app/core/services/keybindingSrv';\nimport { AngularLoader, setAngularLoader } from 'app/core/services/AngularLoader';\nimport { configureStore } from 'app/store/configureStore';\n\nimport { LocationUpdate, setLocationSrv } from '@grafana/runtime';\nimport { updateLocation } from 'app/core/actions';\n\n// Types\nimport { KioskUrlValue } from 'app/types';\nimport { setLinkSrv, LinkSrv } from 'app/features/panel/panellinks/link_srv';\nimport { UtilSrv } from 'app/core/services/util_srv';\nimport { ContextSrv } from 'app/core/services/context_srv';\nimport { BridgeSrv } from 'app/core/services/bridge_srv';\nimport { PlaylistSrv } from 'app/features/playlist/playlist_srv';\nimport { ILocationService, ITimeoutService, IRootScopeService } from 'angular';\n\nexport class GrafanaCtrl {\n  /** @ngInject */\n  constructor(\n    $scope: any,\n    utilSrv: UtilSrv,\n    $rootScope: any,\n    contextSrv: ContextSrv,\n    bridgeSrv: BridgeSrv,\n    backendSrv: BackendSrv,\n    timeSrv: TimeSrv,\n    linkSrv: LinkSrv,\n    datasourceSrv: DatasourceSrv,\n    keybindingSrv: KeybindingSrv,\n    angularLoader: AngularLoader\n  ) {\n    // make angular loader service available to react components\n    setAngularLoader(angularLoader);\n    setBackendSrv(backendSrv);\n    setDataSourceSrv(datasourceSrv);\n    setTimeSrv(timeSrv);\n    setLinkSrv(linkSrv);\n    setKeybindingSrv(keybindingSrv);\n    const store = configureStore();\n    setLocationSrv({\n      update: (opt: LocationUpdate) => {\n        store.dispatch(updateLocation(opt));\n      },\n    });\n\n    $scope.init = () => {\n      $scope.contextSrv = contextSrv;\n      $scope.appSubUrl = config.appSubUrl;\n      $scope._ = _;\n\n      profiler.init(config, $rootScope);\n      utilSrv.init();\n      bridgeSrv.init();\n    };\n\n    $rootScope.colors = colors;\n\n    $rootScope.onAppEvent = function(name: string, callback: () => void, localScope: any) {\n      const unbind = $rootScope.$on(name, callback);\n      let callerScope = this;\n      if (callerScope.$id === 1 && !localScope) {\n        console.log('warning rootScope onAppEvent called without localscope');\n      }\n      if (localScope) {\n        callerScope = localScope;\n      }\n      callerScope.$on('$destroy', unbind);\n    };\n\n    $rootScope.appEvent = (name: string, payload: any) => {\n      $rootScope.$emit(name, payload);\n      appEvents.emit(name, payload);\n    };\n\n    $scope.init();\n  }\n}\n\nfunction setViewModeBodyClass(body: JQuery, mode: KioskUrlValue) {\n  body.removeClass('view-mode--tv');\n  body.removeClass('view-mode--kiosk');\n  body.removeClass('view-mode--inactive');\n\n  switch (mode) {\n    case 'tv': {\n      body.addClass('view-mode--tv');\n      break;\n    }\n    // 1 & true for legacy states\n    case '1':\n    case true: {\n      body.addClass('view-mode--kiosk');\n      break;\n    }\n  }\n}\n\n/** @ngInject */\nexport function grafanaAppDirective(\n  playlistSrv: PlaylistSrv,\n  contextSrv: ContextSrv,\n  $timeout: ITimeoutService,\n  $rootScope: IRootScopeService,\n  $location: ILocationService\n) {\n  return {\n    restrict: 'E',\n    controller: GrafanaCtrl,\n    link: (scope: any, elem: JQuery) => {\n      const body = $('body');\n\n      // see https://github.com/zenorocha/clipboard.js/issues/155\n      $.fn.modal.Constructor.prototype.enforceFocus = () => {};\n\n      $('.preloader').remove();\n\n      appEvents.on('toggle-sidemenu-mobile', () => {\n        body.toggleClass('sidemenu-open--xs');\n      });\n\n      appEvents.on('toggle-sidemenu-hidden', () => {\n        body.toggleClass('sidemenu-hidden');\n      });\n\n      appEvents.on('playlist-started', () => {\n        elem.toggleClass('view-mode--playlist', true);\n      });\n\n      appEvents.on('playlist-stopped', () => {\n        elem.toggleClass('view-mode--playlist', false);\n      });\n\n      // check if we are in server side render\n      if (document.cookie.indexOf('renderKey') !== -1) {\n        body.addClass('body--phantomjs');\n      }\n\n      // tooltip removal fix\n      // manage page classes\n      let pageClass: string;\n      scope.$on('$routeChangeSuccess', (evt: any, data: any) => {\n        if (pageClass) {\n          body.removeClass(pageClass);\n        }\n\n        if (data.$$route) {\n          pageClass = data.$$route.pageClass;\n          if (pageClass) {\n            body.addClass(pageClass);\n          }\n        }\n\n        // clear body class sidemenu states\n        body.removeClass('sidemenu-open--xs');\n\n        $('#tooltip, .tooltip').remove();\n\n        // check for kiosk url param\n        setViewModeBodyClass(body, data.params.kiosk);\n\n        // close all drops\n        for (const drop of Drop.drops) {\n          drop.destroy();\n        }\n\n        appEvents.emit('hide-dash-search');\n      });\n\n      // handle kiosk mode\n      appEvents.on('toggle-kiosk-mode', (options: { exit?: boolean }) => {\n        const search: { kiosk?: KioskUrlValue } = $location.search();\n\n        if (options && options.exit) {\n          search.kiosk = '1';\n        }\n\n        switch (search.kiosk) {\n          case 'tv': {\n            search.kiosk = true;\n            appEvents.emit('alert-success', ['Press ESC to exit Kiosk mode']);\n            break;\n          }\n          case '1':\n          case true: {\n            delete search.kiosk;\n            break;\n          }\n          default: {\n            search.kiosk = 'tv';\n          }\n        }\n\n        $timeout(() => $location.search(search));\n        setViewModeBodyClass(body, search.kiosk!);\n      });\n\n      // handle in active view state class\n      let lastActivity = new Date().getTime();\n      let activeUser = true;\n      const inActiveTimeLimit = 60 * 5000;\n\n      function checkForInActiveUser() {\n        if (!activeUser) {\n          return;\n        }\n        // only go to activity low mode on dashboard page\n        if (!body.hasClass('page-dashboard')) {\n          return;\n        }\n\n        if (new Date().getTime() - lastActivity > inActiveTimeLimit) {\n          activeUser = false;\n          body.addClass('view-mode--inactive');\n        }\n      }\n\n      function userActivityDetected() {\n        lastActivity = new Date().getTime();\n        if (!activeUser) {\n          activeUser = true;\n          body.removeClass('view-mode--inactive');\n        }\n      }\n\n      // mouse and keyboard is user activity\n      body.mousemove(userActivityDetected);\n      body.keydown(userActivityDetected);\n      // set useCapture = true to catch event here\n      document.addEventListener('wheel', userActivityDetected, { capture: true, passive: true });\n      // treat tab change as activity\n      document.addEventListener('visibilitychange', userActivityDetected);\n\n      // check every 2 seconds\n      setInterval(checkForInActiveUser, 2000);\n\n      appEvents.on('toggle-view-mode', () => {\n        lastActivity = 0;\n        checkForInActiveUser();\n      });\n\n      // handle document clicks that should hide things\n      body.click(evt => {\n        const target = $(evt.target);\n        if (target.parents().length === 0) {\n          return;\n        }\n\n        // ensure dropdown menu doesn't impact on z-index\n        body.find('.dropdown-menu-open').removeClass('dropdown-menu-open');\n\n        // for stuff that animates, slides out etc, clicking it needs to\n        // hide it right away\n        const clickAutoHide = target.closest('[data-click-hide]');\n        if (clickAutoHide.length) {\n          const clickAutoHideParent = clickAutoHide.parent();\n          clickAutoHide.detach();\n          setTimeout(() => {\n            clickAutoHideParent.append(clickAutoHide);\n          }, 100);\n        }\n\n        // hide search\n        if (body.find('.search-container').length > 0) {\n          if (target.parents('.search-results-container, .search-field-wrapper').length === 0) {\n            scope.$apply(() => {\n              scope.appEvent('hide-dash-search');\n            });\n          }\n        }\n\n        // hide popovers\n        const popover = elem.find('.popover');\n        if (popover.length > 0 && target.parents('.graph-legend').length === 0) {\n          popover.hide();\n        }\n      });\n    },\n  };\n}\n\ncoreModule.directive('grafanaApp', grafanaAppDirective);\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport sharedReducers from 'app/core/reducers';\nimport alertingReducers from 'app/features/alerting/state/reducers';\nimport teamsReducers from 'app/features/teams/state/reducers';\nimport apiKeysReducers from 'app/features/api-keys/state/reducers';\nimport foldersReducers from 'app/features/folders/state/reducers';\nimport dashboardReducers from 'app/features/dashboard/state/reducers';\nimport exploreReducers from 'app/features/explore/state/reducers';\nimport pluginReducers from 'app/features/plugins/state/reducers';\nimport dataSourcesReducers from 'app/features/datasources/state/reducers';\nimport usersReducers from 'app/features/users/state/reducers';\nimport userReducers from 'app/features/profile/state/reducers';\nimport organizationReducers from 'app/features/org/state/reducers';\nimport ldapReducers from 'app/features/admin/state/reducers';\nimport { setStore } from './store';\nimport { StoreState } from 'app/types/store';\nimport { toggleLogActionsMiddleware } from 'app/core/middlewares/application';\n\nconst rootReducers = {\n  ...sharedReducers,\n  ...alertingReducers,\n  ...teamsReducers,\n  ...apiKeysReducers,\n  ...foldersReducers,\n  ...dashboardReducers,\n  ...exploreReducers,\n  ...pluginReducers,\n  ...dataSourcesReducers,\n  ...usersReducers,\n  ...userReducers,\n  ...organizationReducers,\n  ...ldapReducers,\n};\n\nexport function addRootReducer(reducers: any) {\n  Object.assign(rootReducers, ...reducers);\n}\n\nexport function configureStore() {\n  const composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const rootReducer = combineReducers(rootReducers);\n  const logger = createLogger({\n    predicate: (getState: () => StoreState) => {\n      return getState().application.logActions;\n    },\n  });\n  const storeEnhancers =\n    process.env.NODE_ENV !== 'production'\n      ? applyMiddleware(toggleLogActionsMiddleware, thunk, logger)\n      : applyMiddleware(thunk);\n\n  const store = createStore(rootReducer, {}, composeEnhancers(storeEnhancers));\n  setStore(store);\n  return store;\n}\n","import _ from 'lodash';\nimport coreModule from 'app/core/core_module';\nimport { variableTypes } from './variable';\nimport appEvents from 'app/core/app_events';\nimport DatasourceSrv from '../plugins/datasource_srv';\nimport { VariableSrv } from './all';\nimport { TemplateSrv } from './template_srv';\n\nexport class VariableEditorCtrl {\n  /** @ngInject */\n  constructor($scope: any, datasourceSrv: DatasourceSrv, variableSrv: VariableSrv, templateSrv: TemplateSrv) {\n    $scope.variableTypes = variableTypes;\n    $scope.ctrl = {};\n    $scope.namePattern = /^(?!__).*$/;\n    $scope._ = _;\n    $scope.optionsLimit = 20;\n    $scope.emptyListCta = {\n      title: 'There are no variables yet',\n      buttonTitle: 'Add variable',\n      buttonIcon: 'gicon gicon-variable',\n      infoBox: {\n        __html: ` <p>\n      Variables enable more interactive and dynamic dashboards. Instead of hard-coding things like server or\n      sensor names in your metric queries you can use variables in their place. Variables are shown as dropdown\n      select boxes at the top of the dashboard. These dropdowns make it easy to change the data being displayed in\n      your dashboard. Check out the\n      <a class=\"external-link\" href=\"http://docs.grafana.org/reference/templating/\" target=\"_blank\">\n        Templating documentation\n      </a>\n      for more information.\n    </p>`,\n        infoBoxTitle: 'What do variables do?',\n      },\n    };\n\n    $scope.refreshOptions = [\n      { value: 0, text: 'Never' },\n      { value: 1, text: 'On Dashboard Load' },\n      { value: 2, text: 'On Time Range Change' },\n    ];\n\n    $scope.sortOptions = [\n      { value: 0, text: 'Disabled' },\n      { value: 1, text: 'Alphabetical (asc)' },\n      { value: 2, text: 'Alphabetical (desc)' },\n      { value: 3, text: 'Numerical (asc)' },\n      { value: 4, text: 'Numerical (desc)' },\n      { value: 5, text: 'Alphabetical (case-insensitive, asc)' },\n      { value: 6, text: 'Alphabetical (case-insensitive, desc)' },\n    ];\n\n    $scope.hideOptions = [{ value: 0, text: '' }, { value: 1, text: 'Label' }, { value: 2, text: 'Variable' }];\n\n    $scope.init = () => {\n      $scope.mode = 'list';\n\n      $scope.variables = variableSrv.variables;\n      $scope.reset();\n\n      $scope.$watch('mode', (val: string) => {\n        if (val === 'new') {\n          $scope.reset();\n        }\n      });\n    };\n\n    $scope.setMode = (mode: any) => {\n      $scope.mode = mode;\n    };\n\n    $scope.setNewMode = () => {\n      $scope.setMode('new');\n    };\n\n    $scope.add = () => {\n      if ($scope.isValid()) {\n        variableSrv.addVariable($scope.current);\n        $scope.update();\n      }\n    };\n\n    $scope.isValid = () => {\n      if (!$scope.ctrl.form.$valid) {\n        return false;\n      }\n\n      if (!$scope.current.name.match(/^\\w+$/)) {\n        appEvents.emit('alert-warning', ['Validation', 'Only word and digit characters are allowed in variable names']);\n        return false;\n      }\n\n      const sameName: any = _.find($scope.variables, { name: $scope.current.name });\n      if (sameName && sameName !== $scope.current) {\n        appEvents.emit('alert-warning', ['Validation', 'Variable with the same name already exists']);\n        return false;\n      }\n\n      if (\n        $scope.current.type === 'query' &&\n        _.isString($scope.current.query) &&\n        $scope.current.query.match(new RegExp('\\\\$' + $scope.current.name + '(/| |$)'))\n      ) {\n        appEvents.emit('alert-warning', [\n          'Validation',\n          'Query cannot contain a reference to itself. Variable: $' + $scope.current.name,\n        ]);\n        return false;\n      }\n\n      return true;\n    };\n\n    $scope.validate = () => {\n      $scope.infoText = '';\n      if ($scope.current.type === 'adhoc' && $scope.current.datasource !== null) {\n        $scope.infoText = 'Adhoc filters are applied automatically to all queries that target this datasource';\n        datasourceSrv.get($scope.current.datasource).then(ds => {\n          if (!ds.getTagKeys) {\n            $scope.infoText = 'This datasource does not support adhoc filters yet.';\n          }\n        });\n      }\n    };\n\n    $scope.runQuery = () => {\n      $scope.optionsLimit = 20;\n      return variableSrv.updateOptions($scope.current).catch((err: { data: { message: any }; message: string }) => {\n        if (err.data && err.data.message) {\n          err.message = err.data.message;\n        }\n        appEvents.emit('alert-error', ['Templating', 'Template variables could not be initialized: ' + err.message]);\n      });\n    };\n\n    $scope.onQueryChange = (query: any, definition: any) => {\n      $scope.current.query = query;\n      $scope.current.definition = definition;\n      $scope.runQuery();\n    };\n\n    $scope.edit = (variable: any) => {\n      $scope.current = variable;\n      $scope.currentIsNew = false;\n      $scope.mode = 'edit';\n      $scope.validate();\n      datasourceSrv.get($scope.current.datasource).then(ds => {\n        $scope.currentDatasource = ds;\n      });\n    };\n\n    $scope.duplicate = (variable: { getSaveModel: () => void; name: string }) => {\n      const clone = _.cloneDeep(variable.getSaveModel());\n      $scope.current = variableSrv.createVariableFromModel(clone);\n      $scope.current.name = 'copy_of_' + variable.name;\n      variableSrv.addVariable($scope.current);\n    };\n\n    $scope.update = () => {\n      if ($scope.isValid()) {\n        $scope.runQuery().then(() => {\n          $scope.reset();\n          $scope.mode = 'list';\n          templateSrv.updateIndex();\n        });\n      }\n    };\n\n    $scope.reset = () => {\n      $scope.currentIsNew = true;\n      $scope.current = variableSrv.createVariableFromModel({ type: 'query' });\n\n      // this is done here in case a new data source type variable was added\n      $scope.datasources = _.filter(datasourceSrv.getMetricSources(), ds => {\n        return !ds.meta.mixed && ds.value !== null;\n      });\n\n      $scope.datasourceTypes = _($scope.datasources)\n        .uniqBy('meta.id')\n        .map((ds: any) => {\n          return { text: ds.meta.name, value: ds.meta.id };\n        })\n        .value();\n    };\n\n    $scope.typeChanged = function() {\n      const old = $scope.current;\n      $scope.current = variableSrv.createVariableFromModel({\n        type: $scope.current.type,\n      });\n      $scope.current.name = old.name;\n      $scope.current.label = old.label;\n\n      const oldIndex = _.indexOf(this.variables, old);\n      if (oldIndex !== -1) {\n        this.variables[oldIndex] = $scope.current;\n      }\n\n      $scope.validate();\n    };\n\n    $scope.removeVariable = (variable: any) => {\n      variableSrv.removeVariable(variable);\n    };\n\n    $scope.showMoreOptions = () => {\n      $scope.optionsLimit += 20;\n    };\n\n    $scope.datasourceChanged = async () => {\n      datasourceSrv.get($scope.current.datasource).then(ds => {\n        $scope.current.query = '';\n        $scope.currentDatasource = ds;\n      });\n    };\n  }\n}\n\ncoreModule.controller('VariableEditorCtrl', VariableEditorCtrl);\n","export class Edge {\n  inputNode: Node;\n  outputNode: Node;\n\n  _linkTo(node: Node, direction: number) {\n    if (direction <= 0) {\n      node.inputEdges.push(this);\n    }\n\n    if (direction >= 0) {\n      node.outputEdges.push(this);\n    }\n\n    node.edges.push(this);\n  }\n\n  link(inputNode: Node, outputNode: Node) {\n    if (!inputNode) {\n      throw Error('inputNode is required');\n    }\n\n    if (!outputNode) {\n      throw Error('outputNode is required');\n    }\n\n    this.unlink();\n    this.inputNode = inputNode;\n    this.outputNode = outputNode;\n\n    this._linkTo(inputNode, 1);\n    this._linkTo(outputNode, -1);\n    return this;\n  }\n\n  unlink() {\n    let pos;\n    const inode = this.inputNode;\n    const onode = this.outputNode;\n\n    if (!(inode && onode)) {\n      return;\n    }\n\n    pos = inode.edges.indexOf(this);\n    if (pos > -1) {\n      inode.edges.splice(pos, 1);\n    }\n\n    pos = onode.edges.indexOf(this);\n    if (pos > -1) {\n      onode.edges.splice(pos, 1);\n    }\n\n    pos = inode.outputEdges.indexOf(this);\n    if (pos > -1) {\n      inode.outputEdges.splice(pos, 1);\n    }\n\n    pos = onode.inputEdges.indexOf(this);\n    if (pos > -1) {\n      onode.inputEdges.splice(pos, 1);\n    }\n\n    this.inputNode = null;\n    this.outputNode = null;\n  }\n}\n\nexport class Node {\n  name: string;\n  edges: Edge[];\n  inputEdges: Edge[];\n  outputEdges: Edge[];\n\n  constructor(name: string) {\n    this.name = name;\n    this.edges = [];\n    this.inputEdges = [];\n    this.outputEdges = [];\n  }\n\n  getEdgeFrom(from: string | Node): Edge {\n    if (!from) {\n      return null;\n    }\n\n    if (typeof from === 'object') {\n      return this.inputEdges.find(e => e.inputNode.name === from.name);\n    }\n\n    return this.inputEdges.find(e => e.inputNode.name === from);\n  }\n\n  getEdgeTo(to: string | Node): Edge {\n    if (!to) {\n      return null;\n    }\n\n    if (typeof to === 'object') {\n      return this.outputEdges.find(e => e.outputNode.name === to.name);\n    }\n\n    return this.outputEdges.find(e => e.outputNode.name === to);\n  }\n\n  getOptimizedInputEdges(): Edge[] {\n    const toBeRemoved: any[] = [];\n    this.inputEdges.forEach(e => {\n      const inputEdgesNodes = e.inputNode.inputEdges.map(e => e.inputNode);\n\n      inputEdgesNodes.forEach(n => {\n        const edgeToRemove = n.getEdgeTo(this.name);\n        if (edgeToRemove) {\n          toBeRemoved.push(edgeToRemove);\n        }\n      });\n    });\n\n    return this.inputEdges.filter(e => toBeRemoved.indexOf(e) === -1);\n  }\n}\n\nexport class Graph {\n  nodes: any = {};\n\n  constructor() {}\n\n  createNode(name: string): Node {\n    const n = new Node(name);\n    this.nodes[name] = n;\n    return n;\n  }\n\n  createNodes(names: string[]): Node[] {\n    const nodes: Node[] = [];\n    names.forEach(name => {\n      nodes.push(this.createNode(name));\n    });\n    return nodes;\n  }\n\n  link(input: string | string[] | Node | Node[], output: string | string[] | Node | Node[]): Edge[] {\n    let inputArr = [];\n    let outputArr = [];\n    const inputNodes: Node[] = [];\n    const outputNodes: Node[] = [];\n\n    if (input instanceof Array) {\n      inputArr = input;\n    } else {\n      inputArr = [input];\n    }\n\n    if (output instanceof Array) {\n      outputArr = output;\n    } else {\n      outputArr = [output];\n    }\n\n    for (let n = 0; n < inputArr.length; n++) {\n      const i = inputArr[n];\n      if (typeof i === 'string') {\n        const n = this.getNode(i);\n        if (!n) {\n          throw Error(`cannot link input node named ${i} since it doesn't exist in graph`);\n        }\n        inputNodes.push(n);\n      } else {\n        inputNodes.push(i);\n      }\n    }\n\n    for (let n = 0; n < outputArr.length; n++) {\n      const i = outputArr[n];\n      if (typeof i === 'string') {\n        const n = this.getNode(i);\n        if (!n) {\n          throw Error(`cannot link output node named ${i} since it doesn't exist in graph`);\n        }\n        outputNodes.push(n);\n      } else {\n        outputNodes.push(i);\n      }\n    }\n\n    const edges: Edge[] = [];\n    inputNodes.forEach(input => {\n      outputNodes.forEach(output => {\n        edges.push(this.createEdge().link(input, output));\n      });\n    });\n    return edges;\n  }\n\n  createEdge(): Edge {\n    return new Edge();\n  }\n\n  getNode(name: string): Node {\n    return this.nodes[name];\n  }\n}\n\nexport const printGraph = (g: Graph) => {\n  Object.keys(g.nodes).forEach(name => {\n    const n = g.nodes[name];\n    let outputEdges = n.outputEdges.map((e: Edge) => e.outputNode.name).join(', ');\n    if (!outputEdges) {\n      outputEdges = '<none>';\n    }\n    let inputEdges = n.inputEdges.map((e: Edge) => e.inputNode.name).join(', ');\n    if (!inputEdges) {\n      inputEdges = '<none>';\n    }\n    console.log(`${n.name}:\\n - links to:   ${outputEdges}\\n - links from: ${inputEdges}`);\n  });\n};\n","// Libaries\nimport angular, { IQService, ILocationService, auto, IPromise } from 'angular';\nimport _ from 'lodash';\n\n// Utils & Services\nimport coreModule from 'app/core/core_module';\nimport { variableTypes } from './variable';\nimport { Graph } from 'app/core/utils/dag';\nimport { TemplateSrv } from 'app/features/templating/template_srv';\nimport { TimeSrv } from 'app/features/dashboard/services/TimeSrv';\nimport { DashboardModel } from 'app/features/dashboard/state/DashboardModel';\n\n// Types\nimport { TimeRange } from '@grafana/data';\n\nexport class VariableSrv {\n  dashboard: DashboardModel;\n  variables: any[];\n\n  /** @ngInject */\n  constructor(\n    private $q: IQService,\n    private $location: ILocationService,\n    private $injector: auto.IInjectorService,\n    private templateSrv: TemplateSrv,\n    private timeSrv: TimeSrv\n  ) {}\n\n  init(dashboard: DashboardModel) {\n    this.dashboard = dashboard;\n    this.dashboard.events.on('time-range-updated', this.onTimeRangeUpdated.bind(this));\n    this.dashboard.events.on('template-variable-value-updated', this.updateUrlParamsWithCurrentVariables.bind(this));\n\n    // create working class models representing variables\n    this.variables = dashboard.templating.list = dashboard.templating.list.map(this.createVariableFromModel.bind(this));\n    this.templateSrv.init(this.variables, this.timeSrv.timeRange());\n\n    // init variables\n    for (const variable of this.variables) {\n      variable.initLock = this.$q.defer();\n    }\n\n    const queryParams = this.$location.search();\n    return this.$q\n      .all(\n        this.variables.map(variable => {\n          return this.processVariable(variable, queryParams);\n        })\n      )\n      .then(() => {\n        this.templateSrv.updateIndex();\n      });\n  }\n\n  onTimeRangeUpdated(timeRange: TimeRange) {\n    this.templateSrv.updateTimeRange(timeRange);\n    const promises = this.variables\n      .filter(variable => variable.refresh === 2)\n      .map(variable => {\n        const previousOptions = variable.options.slice();\n\n        return variable.updateOptions().then(() => {\n          if (angular.toJson(previousOptions) !== angular.toJson(variable.options)) {\n            this.dashboard.templateVariableValueUpdated();\n          }\n        });\n      });\n\n    return this.$q.all(promises).then(() => {\n      this.dashboard.startRefresh();\n    });\n  }\n\n  processVariable(variable: any, queryParams: any) {\n    const dependencies = [];\n\n    for (const otherVariable of this.variables) {\n      if (variable.dependsOn(otherVariable)) {\n        dependencies.push(otherVariable.initLock.promise);\n      }\n    }\n\n    return this.$q\n      .all(dependencies)\n      .then(() => {\n        const urlValue = queryParams['var-' + variable.name];\n        if (urlValue !== void 0) {\n          return variable.setValueFromUrl(urlValue).then(variable.initLock.resolve);\n        }\n\n        if (variable.refresh === 1 || variable.refresh === 2) {\n          return variable.updateOptions().then(variable.initLock.resolve);\n        }\n\n        variable.initLock.resolve();\n      })\n      .finally(() => {\n        this.templateSrv.variableInitialized(variable);\n        delete variable.initLock;\n      });\n  }\n\n  createVariableFromModel(model: any) {\n    // @ts-ignore\n    const ctor = variableTypes[model.type].ctor;\n    if (!ctor) {\n      throw {\n        message: 'Unable to find variable constructor for ' + model.type,\n      };\n    }\n\n    const variable = this.$injector.instantiate(ctor, { model: model });\n    return variable;\n  }\n\n  addVariable(variable: any) {\n    this.variables.push(variable);\n    this.templateSrv.updateIndex();\n    this.dashboard.updateSubmenuVisibility();\n  }\n\n  removeVariable(variable: any) {\n    const index = _.indexOf(this.variables, variable);\n    this.variables.splice(index, 1);\n    this.templateSrv.updateIndex();\n    this.dashboard.updateSubmenuVisibility();\n  }\n\n  updateOptions(variable: any) {\n    return variable.updateOptions();\n  }\n\n  variableUpdated(variable: any, emitChangeEvents?: any) {\n    // if there is a variable lock ignore cascading update because we are in a boot up scenario\n    if (variable.initLock) {\n      return this.$q.when();\n    }\n\n    const g = this.createGraph();\n    const node = g.getNode(variable.name);\n    let promises = [];\n    if (node) {\n      promises = node.getOptimizedInputEdges().map(e => {\n        return this.updateOptions(this.variables.find(v => v.name === e.inputNode.name));\n      });\n    }\n\n    return this.$q.all(promises).then(() => {\n      if (emitChangeEvents) {\n        this.dashboard.templateVariableValueUpdated();\n        this.dashboard.startRefresh();\n      }\n    });\n  }\n\n  selectOptionsForCurrentValue(variable: any) {\n    let i, y, value, option;\n    const selected: any = [];\n\n    for (i = 0; i < variable.options.length; i++) {\n      option = variable.options[i];\n      option.selected = false;\n      if (_.isArray(variable.current.value)) {\n        for (y = 0; y < variable.current.value.length; y++) {\n          value = variable.current.value[y];\n          if (option.value === value) {\n            option.selected = true;\n            selected.push(option);\n          }\n        }\n      } else if (option.value === variable.current.value) {\n        option.selected = true;\n        selected.push(option);\n      }\n    }\n\n    return selected;\n  }\n\n  validateVariableSelectionState(variable: any) {\n    if (!variable.current) {\n      variable.current = {};\n    }\n\n    if (_.isArray(variable.current.value)) {\n      let selected = this.selectOptionsForCurrentValue(variable);\n\n      // if none pick first\n      if (selected.length === 0) {\n        selected = variable.options[0];\n      } else {\n        selected = {\n          value: _.map(selected, val => {\n            return val.value;\n          }),\n          text: _.map(selected, val => {\n            return val.text;\n          }),\n        };\n      }\n\n      return variable.setValue(selected);\n    } else {\n      const currentOption: any = _.find(variable.options, {\n        text: variable.current.text,\n      });\n      if (currentOption) {\n        return variable.setValue(currentOption);\n      } else {\n        if (!variable.options.length) {\n          return Promise.resolve();\n        }\n        return variable.setValue(variable.options[0]);\n      }\n    }\n  }\n\n  /**\n   * Sets the current selected option (or options) based on the query params in the url. It is possible for values\n   * in the url to not match current options of the variable. In that case the variables current value will be still set\n   * to that value.\n   * @param variable Instance of Variable\n   * @param urlValue Value of the query parameter\n   */\n  setOptionFromUrl(variable: any, urlValue: string | string[]): IPromise<any> {\n    let promise = this.$q.when();\n\n    if (variable.refresh) {\n      promise = variable.updateOptions();\n    }\n\n    return promise.then(() => {\n      // Simple case. Value in url matches existing options text or value.\n      let option: any = _.find(variable.options, op => {\n        return op.text === urlValue || op.value === urlValue;\n      });\n\n      // No luck either it is array or value does not exist in the variables options.\n      if (!option) {\n        let defaultText = urlValue;\n        const defaultValue = urlValue;\n\n        if (_.isArray(urlValue)) {\n          // Multiple values in the url. We construct text as a list of texts from all matched options.\n          defaultText = urlValue.reduce((acc, item) => {\n            const t: any = _.find(variable.options, { value: item });\n            if (t) {\n              acc.push(t.text);\n            } else {\n              acc.push(item);\n            }\n\n            return acc;\n          }, []);\n        }\n\n        // It is possible that we did not match the value to any existing option. In that case the url value will be\n        // used anyway for both text and value.\n        option = { text: defaultText, value: defaultValue };\n      }\n\n      if (variable.multi) {\n        // In case variable is multiple choice, we cast to array to preserve the same behaviour as when selecting\n        // the option directly, which will return even single value in an array.\n        option = { text: _.castArray(option.text), value: _.castArray(option.value) };\n      }\n\n      return variable.setValue(option);\n    });\n  }\n\n  setOptionAsCurrent(variable: any, option: any) {\n    variable.current = _.cloneDeep(option);\n\n    if (_.isArray(variable.current.text) && variable.current.text.length > 0) {\n      variable.current.text = variable.current.text.join(' + ');\n    } else if (_.isArray(variable.current.value) && variable.current.value[0] !== '$__all') {\n      variable.current.text = variable.current.value.join(' + ');\n    }\n\n    this.selectOptionsForCurrentValue(variable);\n    return this.variableUpdated(variable);\n  }\n\n  updateUrlParamsWithCurrentVariables() {\n    // update url\n    const params = this.$location.search();\n\n    // remove variable params\n    _.each(params, (value, key) => {\n      if (key.indexOf('var-') === 0) {\n        delete params[key];\n      }\n    });\n\n    // add new values\n    this.templateSrv.fillVariableValuesForUrl(params);\n    // update url\n    this.$location.search(params);\n  }\n\n  setAdhocFilter(options: any) {\n    let variable: any = _.find(this.variables, {\n      type: 'adhoc',\n      datasource: options.datasource,\n    } as any);\n    if (!variable) {\n      variable = this.createVariableFromModel({\n        name: 'Filters',\n        type: 'adhoc',\n        datasource: options.datasource,\n      });\n      this.addVariable(variable);\n    }\n\n    const filters = variable.filters;\n    let filter: any = _.find(filters, { key: options.key, value: options.value });\n\n    if (!filter) {\n      filter = { key: options.key, value: options.value };\n      filters.push(filter);\n    }\n\n    filter.operator = options.operator;\n    this.variableUpdated(variable, true);\n  }\n\n  createGraph() {\n    const g = new Graph();\n\n    this.variables.forEach(v => {\n      g.createNode(v.name);\n    });\n\n    this.variables.forEach(v1 => {\n      this.variables.forEach(v2 => {\n        if (v1 === v2) {\n          return;\n        }\n\n        if (v1.dependsOn(v2)) {\n          g.link(v1.name, v2.name);\n        }\n      });\n    });\n\n    return g;\n  }\n}\n\ncoreModule.service('variableSrv', VariableSrv);\n","import _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport { Variable, assignModelProperties, variableTypes } from './variable';\nimport { TimeSrv } from '../dashboard/services/TimeSrv';\nimport { TemplateSrv } from './template_srv';\nimport { VariableSrv } from './variable_srv';\n\nexport class IntervalVariable implements Variable {\n  name: string;\n  auto_count: number; // tslint:disable-line variable-name\n  auto_min: number; // tslint:disable-line variable-name\n  options: any;\n  auto: boolean;\n  query: string;\n  refresh: number;\n  current: any;\n  skipUrlSync: boolean;\n\n  defaults: any = {\n    type: 'interval',\n    name: '',\n    hide: 0,\n    label: '',\n    refresh: 2,\n    options: [],\n    current: {},\n    query: '1m,10m,30m,1h,6h,12h,1d,7d,14d,30d',\n    auto: false,\n    auto_min: '10s',\n    auto_count: 30,\n    skipUrlSync: false,\n  };\n\n  /** @ngInject */\n  constructor(\n    private model: any,\n    private timeSrv: TimeSrv,\n    private templateSrv: TemplateSrv,\n    private variableSrv: VariableSrv\n  ) {\n    assignModelProperties(this, model, this.defaults);\n    this.refresh = 2;\n  }\n\n  getSaveModel() {\n    assignModelProperties(this.model, this, this.defaults);\n    return this.model;\n  }\n\n  setValue(option: any) {\n    this.updateAutoValue();\n    return this.variableSrv.setOptionAsCurrent(this, option);\n  }\n\n  updateAutoValue() {\n    if (!this.auto) {\n      return;\n    }\n\n    // add auto option if missing\n    if (this.options.length && this.options[0].text !== 'auto') {\n      this.options.unshift({\n        text: 'auto',\n        value: '$__auto_interval_' + this.name,\n      });\n    }\n\n    const res = kbn.calculateInterval(this.timeSrv.timeRange(), this.auto_count, this.auto_min);\n    this.templateSrv.setGrafanaVariable('$__auto_interval_' + this.name, res.interval);\n    // for backward compatibility, to be removed eventually\n    this.templateSrv.setGrafanaVariable('$__auto_interval', res.interval);\n  }\n\n  updateOptions() {\n    // extract options between quotes and/or comma\n    this.options = _.map(this.query.match(/([\"'])(.*?)\\1|\\w+/g), text => {\n      text = text.replace(/[\"']+/g, '');\n      return { text: text.trim(), value: text.trim() };\n    });\n\n    this.updateAutoValue();\n    return this.variableSrv.validateVariableSelectionState(this);\n  }\n\n  dependsOn(variable: any) {\n    return false;\n  }\n\n  setValueFromUrl(urlValue: string | string[]) {\n    this.updateAutoValue();\n    return this.variableSrv.setOptionFromUrl(this, urlValue);\n  }\n\n  getValueForUrl() {\n    return this.current.value;\n  }\n}\n\n// @ts-ignore\nvariableTypes['interval'] = {\n  name: 'Interval',\n  ctor: IntervalVariable,\n  description: 'Define a timespan interval (ex 1m, 1h, 1d)',\n};\n","import _ from 'lodash';\nimport { Variable, containsVariable, assignModelProperties, variableTypes } from './variable';\nimport { stringToJsRegex } from '@grafana/data';\nimport DatasourceSrv from '../plugins/datasource_srv';\nimport { TemplateSrv } from './template_srv';\nimport { VariableSrv } from './variable_srv';\nimport { TimeSrv } from '../dashboard/services/TimeSrv';\n\nfunction getNoneOption() {\n  return { text: 'None', value: '', isNone: true };\n}\n\nexport class QueryVariable implements Variable {\n  datasource: any;\n  query: any;\n  regex: any;\n  sort: any;\n  options: any;\n  current: any;\n  refresh: number;\n  hide: number;\n  name: string;\n  multi: boolean;\n  includeAll: boolean;\n  useTags: boolean;\n  tagsQuery: string;\n  tagValuesQuery: string;\n  tags: any[];\n  skipUrlSync: boolean;\n  definition: string;\n\n  defaults: any = {\n    type: 'query',\n    label: null,\n    query: '',\n    regex: '',\n    sort: 0,\n    datasource: null,\n    refresh: 0,\n    hide: 0,\n    name: '',\n    multi: false,\n    includeAll: false,\n    allValue: null,\n    options: [],\n    current: {},\n    tags: [],\n    useTags: false,\n    tagsQuery: '',\n    tagValuesQuery: '',\n    skipUrlSync: false,\n    definition: '',\n  };\n\n  /** @ngInject */\n  constructor(\n    private model: any,\n    private datasourceSrv: DatasourceSrv,\n    private templateSrv: TemplateSrv,\n    private variableSrv: VariableSrv,\n    private timeSrv: TimeSrv\n  ) {\n    // copy model properties to this instance\n    assignModelProperties(this, model, this.defaults);\n  }\n\n  getSaveModel() {\n    // copy back model properties to model\n    assignModelProperties(this.model, this, this.defaults);\n\n    // remove options\n    if (this.refresh !== 0) {\n      this.model.options = [];\n    }\n\n    return this.model;\n  }\n\n  setValue(option: any) {\n    return this.variableSrv.setOptionAsCurrent(this, option);\n  }\n\n  setValueFromUrl(urlValue: any) {\n    return this.variableSrv.setOptionFromUrl(this, urlValue);\n  }\n\n  getValueForUrl() {\n    if (this.current.text === 'All') {\n      return 'All';\n    }\n    return this.current.value;\n  }\n\n  updateOptions() {\n    return this.datasourceSrv\n      .get(this.datasource)\n      .then(this.updateOptionsFromMetricFindQuery.bind(this))\n      .then(this.updateTags.bind(this))\n      .then(this.variableSrv.validateVariableSelectionState.bind(this.variableSrv, this));\n  }\n\n  updateTags(datasource: any) {\n    if (this.useTags) {\n      return this.metricFindQuery(datasource, this.tagsQuery).then((results: any[]) => {\n        this.tags = [];\n        for (let i = 0; i < results.length; i++) {\n          this.tags.push(results[i].text);\n        }\n        return datasource;\n      });\n    } else {\n      delete this.tags;\n    }\n\n    return datasource;\n  }\n\n  getValuesForTag(tagKey: string) {\n    return this.datasourceSrv.get(this.datasource).then(datasource => {\n      const query = this.tagValuesQuery.replace('$tag', tagKey);\n      return this.metricFindQuery(datasource, query).then((results: any) => {\n        return _.map(results, value => {\n          return value.text;\n        });\n      });\n    });\n  }\n\n  updateOptionsFromMetricFindQuery(datasource: any) {\n    return this.metricFindQuery(datasource, this.query).then((results: any) => {\n      this.options = this.metricNamesToVariableValues(results);\n      if (this.includeAll) {\n        this.addAllOption();\n      }\n      if (!this.options.length) {\n        this.options.push(getNoneOption());\n      }\n      return datasource;\n    });\n  }\n\n  metricFindQuery(datasource: any, query: string) {\n    const options: any = { range: undefined, variable: this };\n\n    if (this.refresh === 2) {\n      options.range = this.timeSrv.timeRange();\n    }\n\n    return datasource.metricFindQuery(query, options);\n  }\n\n  addAllOption() {\n    this.options.unshift({ text: 'All', value: '$__all' });\n  }\n\n  metricNamesToVariableValues(metricNames: any[]) {\n    let regex, options, i, matches;\n    options = [];\n\n    if (this.regex) {\n      regex = stringToJsRegex(this.templateSrv.replace(this.regex, {}, 'regex'));\n    }\n    for (i = 0; i < metricNames.length; i++) {\n      const item = metricNames[i];\n      let text = item.text === undefined || item.text === null ? item.value : item.text;\n\n      let value = item.value === undefined || item.value === null ? item.text : item.value;\n\n      if (_.isNumber(value)) {\n        value = value.toString();\n      }\n\n      if (_.isNumber(text)) {\n        text = text.toString();\n      }\n\n      if (regex) {\n        matches = regex.exec(value);\n        if (!matches) {\n          continue;\n        }\n        if (matches.length > 1) {\n          value = matches[1];\n          text = matches[1];\n        }\n      }\n\n      options.push({ text: text, value: value });\n    }\n\n    options = _.uniqBy(options, 'value');\n    return this.sortVariableValues(options, this.sort);\n  }\n\n  sortVariableValues(options: any[], sortOrder: number) {\n    if (sortOrder === 0) {\n      return options;\n    }\n\n    const sortType = Math.ceil(sortOrder / 2);\n    const reverseSort = sortOrder % 2 === 0;\n\n    if (sortType === 1) {\n      options = _.sortBy(options, 'text');\n    } else if (sortType === 2) {\n      options = _.sortBy(options, opt => {\n        const matches = opt.text.match(/.*?(\\d+).*/);\n        if (!matches || matches.length < 2) {\n          return -1;\n        } else {\n          return parseInt(matches[1], 10);\n        }\n      });\n    } else if (sortType === 3) {\n      options = _.sortBy(options, opt => {\n        return _.toLower(opt.text);\n      });\n    }\n\n    if (reverseSort) {\n      options = options.reverse();\n    }\n\n    return options;\n  }\n\n  dependsOn(variable: any) {\n    return containsVariable(this.query, this.datasource, this.regex, variable.name);\n  }\n}\n// @ts-ignore\nvariableTypes['query'] = {\n  name: 'Query',\n  ctor: QueryVariable,\n  description: 'Variable values are fetched from a datasource query',\n  supportsMulti: true,\n};\n","import _ from 'lodash';\nimport { Variable, assignModelProperties, variableTypes } from './variable';\nimport { VariableSrv } from './variable_srv';\n\nexport class CustomVariable implements Variable {\n  query: string;\n  options: any;\n  includeAll: boolean;\n  multi: boolean;\n  current: any;\n  skipUrlSync: boolean;\n\n  defaults: any = {\n    type: 'custom',\n    name: '',\n    label: '',\n    hide: 0,\n    options: [],\n    current: {},\n    query: '',\n    includeAll: false,\n    multi: false,\n    allValue: null,\n    skipUrlSync: false,\n  };\n\n  /** @ngInject */\n  constructor(private model: any, private variableSrv: VariableSrv) {\n    assignModelProperties(this, model, this.defaults);\n  }\n\n  setValue(option: any) {\n    return this.variableSrv.setOptionAsCurrent(this, option);\n  }\n\n  getSaveModel() {\n    assignModelProperties(this.model, this, this.defaults);\n    return this.model;\n  }\n\n  updateOptions() {\n    // extract options in comma separated string (use backslash to escape wanted commas)\n    this.options = _.map(this.query.match(/(?:\\\\,|[^,])+/g), text => {\n      text = text.replace(/\\\\,/g, ',');\n      return { text: text.trim(), value: text.trim() };\n    });\n\n    if (this.includeAll) {\n      this.addAllOption();\n    }\n\n    return this.variableSrv.validateVariableSelectionState(this);\n  }\n\n  addAllOption() {\n    this.options.unshift({ text: 'All', value: '$__all' });\n  }\n\n  dependsOn(variable: any) {\n    return false;\n  }\n\n  setValueFromUrl(urlValue: string[]) {\n    return this.variableSrv.setOptionFromUrl(this, urlValue);\n  }\n\n  getValueForUrl() {\n    if (this.current.text === 'All') {\n      return 'All';\n    }\n    return this.current.value;\n  }\n}\n\nvariableTypes['custom'] = {\n  name: 'Custom',\n  ctor: CustomVariable,\n  description: 'Define variable values manually',\n  supportsMulti: true,\n};\n","import { Variable, containsVariable, assignModelProperties, variableTypes } from './variable';\nimport { stringToJsRegex } from '@grafana/data';\nimport { VariableSrv } from './variable_srv';\nimport { TemplateSrv } from './template_srv';\nimport { DatasourceSrv } from '../plugins/datasource_srv';\n\nexport class DatasourceVariable implements Variable {\n  regex: any;\n  query: string;\n  options: any;\n  current: any;\n  multi: boolean;\n  includeAll: boolean;\n  refresh: any;\n  skipUrlSync: boolean;\n\n  defaults: any = {\n    type: 'datasource',\n    name: '',\n    hide: 0,\n    label: '',\n    current: {},\n    regex: '',\n    options: [],\n    query: '',\n    multi: false,\n    includeAll: false,\n    refresh: 1,\n    skipUrlSync: false,\n  };\n\n  /** @ngInject */\n  constructor(\n    private model: any,\n    private datasourceSrv: DatasourceSrv,\n    private variableSrv: VariableSrv,\n    private templateSrv: TemplateSrv\n  ) {\n    assignModelProperties(this, model, this.defaults);\n    this.refresh = 1;\n  }\n\n  getSaveModel() {\n    assignModelProperties(this.model, this, this.defaults);\n\n    // don't persist options\n    this.model.options = [];\n    return this.model;\n  }\n\n  setValue(option: any) {\n    return this.variableSrv.setOptionAsCurrent(this, option);\n  }\n\n  updateOptions() {\n    const options = [];\n    const sources = this.datasourceSrv.getMetricSources({ skipVariables: true });\n    let regex;\n\n    if (this.regex) {\n      regex = this.templateSrv.replace(this.regex, null, 'regex');\n      regex = stringToJsRegex(regex);\n    }\n\n    for (let i = 0; i < sources.length; i++) {\n      const source = sources[i];\n      // must match on type\n      if (source.meta.id !== this.query) {\n        continue;\n      }\n\n      if (regex && !regex.exec(source.name)) {\n        continue;\n      }\n\n      options.push({ text: source.name, value: source.name });\n    }\n\n    if (options.length === 0) {\n      options.push({ text: 'No data sources found', value: '' });\n    }\n\n    this.options = options;\n    if (this.includeAll) {\n      this.addAllOption();\n    }\n    return this.variableSrv.validateVariableSelectionState(this);\n  }\n\n  addAllOption() {\n    this.options.unshift({ text: 'All', value: '$__all' });\n  }\n\n  dependsOn(variable: any) {\n    if (this.regex) {\n      return containsVariable(this.regex, variable.name);\n    }\n    return false;\n  }\n\n  setValueFromUrl(urlValue: string | string[]) {\n    return this.variableSrv.setOptionFromUrl(this, urlValue);\n  }\n\n  getValueForUrl() {\n    if (this.current.text === 'All') {\n      return 'All';\n    }\n    return this.current.value;\n  }\n}\n\nvariableTypes['datasource'] = {\n  name: 'Datasource',\n  ctor: DatasourceVariable,\n  supportsMulti: true,\n  description: 'Enabled you to dynamically switch the datasource for multiple panels',\n};\n","import { Variable, assignModelProperties, variableTypes } from './variable';\nimport { VariableSrv } from './all';\n\nexport class ConstantVariable implements Variable {\n  query: string;\n  options: any[];\n  current: any;\n  skipUrlSync: boolean;\n\n  defaults: any = {\n    type: 'constant',\n    name: '',\n    hide: 2,\n    label: '',\n    query: '',\n    current: {},\n    options: [],\n    skipUrlSync: false,\n  };\n\n  /** @ngInject */\n  constructor(private model: any, private variableSrv: VariableSrv) {\n    assignModelProperties(this, model, this.defaults);\n  }\n\n  getSaveModel() {\n    assignModelProperties(this.model, this, this.defaults);\n    return this.model;\n  }\n\n  setValue(option: any) {\n    this.variableSrv.setOptionAsCurrent(this, option);\n  }\n\n  updateOptions() {\n    this.options = [{ text: this.query.trim(), value: this.query.trim() }];\n    this.setValue(this.options[0]);\n    return Promise.resolve();\n  }\n\n  dependsOn(variable: any) {\n    return false;\n  }\n\n  setValueFromUrl(urlValue: string) {\n    return this.variableSrv.setOptionFromUrl(this, urlValue);\n  }\n\n  getValueForUrl() {\n    return this.current.value;\n  }\n}\n\nvariableTypes['constant'] = {\n  name: 'Constant',\n  ctor: ConstantVariable,\n  description: 'Define a hidden constant variable, useful for metric prefixes in dashboards you want to share',\n};\n","import _ from 'lodash';\nimport { Variable, assignModelProperties, variableTypes } from './variable';\n\nexport class AdhocVariable implements Variable {\n  filters: any[];\n  skipUrlSync: boolean;\n\n  defaults: any = {\n    type: 'adhoc',\n    name: '',\n    label: '',\n    hide: 0,\n    datasource: null,\n    filters: [],\n    skipUrlSync: false,\n  };\n\n  /** @ngInject */\n  constructor(private model: any) {\n    assignModelProperties(this, model, this.defaults);\n  }\n\n  setValue(option: any) {\n    return Promise.resolve();\n  }\n\n  getSaveModel() {\n    assignModelProperties(this.model, this, this.defaults);\n    return this.model;\n  }\n\n  updateOptions() {\n    return Promise.resolve();\n  }\n\n  dependsOn(variable: any) {\n    return false;\n  }\n\n  setValueFromUrl(urlValue: string[] | string[]) {\n    if (!_.isArray(urlValue)) {\n      urlValue = [urlValue];\n    }\n\n    this.filters = urlValue.map(item => {\n      const values = item.split('|').map(value => {\n        return this.unescapeDelimiter(value);\n      });\n      return {\n        key: values[0],\n        operator: values[1],\n        value: values[2],\n      };\n    });\n\n    return Promise.resolve();\n  }\n\n  getValueForUrl() {\n    return this.filters.map(filter => {\n      return [filter.key, filter.operator, filter.value]\n        .map(value => {\n          return this.escapeDelimiter(value);\n        })\n        .join('|');\n    });\n  }\n\n  escapeDelimiter(value: string) {\n    return value.replace(/\\|/g, '__gfp__');\n  }\n\n  unescapeDelimiter(value: string) {\n    return value.replace(/__gfp__/g, '|');\n  }\n\n  setFilters(filters: any[]) {\n    this.filters = filters;\n  }\n}\n\nvariableTypes['adhoc'] = {\n  name: 'Ad hoc filters',\n  ctor: AdhocVariable,\n  description: 'Add key/value filters on the fly',\n};\n","import { Variable, assignModelProperties, variableTypes } from './variable';\nimport { VariableSrv } from './variable_srv';\n\nexport class TextBoxVariable implements Variable {\n  query: string;\n  current: any;\n  options: any[];\n  skipUrlSync: boolean;\n\n  defaults: any = {\n    type: 'textbox',\n    name: '',\n    hide: 0,\n    label: '',\n    query: '',\n    current: {},\n    options: [],\n    skipUrlSync: false,\n  };\n\n  /** @ngInject */\n  constructor(private model: any, private variableSrv: VariableSrv) {\n    assignModelProperties(this, model, this.defaults);\n  }\n\n  getSaveModel() {\n    assignModelProperties(this.model, this, this.defaults);\n    return this.model;\n  }\n\n  setValue(option: any) {\n    this.variableSrv.setOptionAsCurrent(this, option);\n  }\n\n  updateOptions() {\n    this.options = [{ text: this.query.trim(), value: this.query.trim() }];\n    this.current = this.options[0];\n    return Promise.resolve();\n  }\n\n  dependsOn(variable: any) {\n    return false;\n  }\n\n  setValueFromUrl(urlValue: string) {\n    this.query = urlValue;\n    return this.variableSrv.setOptionFromUrl(this, urlValue);\n  }\n\n  getValueForUrl() {\n    return this.current.value;\n  }\n}\n// @ts-ignore\nvariableTypes['textbox'] = {\n  name: 'Text box',\n  ctor: TextBoxVariable,\n  description: 'Define a textbox variable, where users can enter any arbitrary string',\n};\n","import './editor_ctrl';\nimport coreModule from 'app/core/core_module';\n\nimport templateSrv from './template_srv';\nimport { VariableSrv } from './variable_srv';\nimport { IntervalVariable } from './interval_variable';\nimport { QueryVariable } from './query_variable';\nimport { DatasourceVariable } from './datasource_variable';\nimport { CustomVariable } from './custom_variable';\nimport { ConstantVariable } from './constant_variable';\nimport { AdhocVariable } from './adhoc_variable';\nimport { TextBoxVariable } from './TextBoxVariable';\n\ncoreModule.factory('templateSrv', () => {\n  return templateSrv;\n});\n\nexport {\n  VariableSrv,\n  IntervalVariable,\n  QueryVariable,\n  DatasourceVariable,\n  CustomVariable,\n  ConstantVariable,\n  AdhocVariable,\n  TextBoxVariable,\n};\n","import angular, { IQService } from 'angular';\nimport _ from 'lodash';\n\nimport { getPluginSettings } from './PluginSettingsCache';\nimport { PluginMeta } from '@grafana/ui';\nimport { NavModelSrv } from 'app/core/core';\n\nexport class AppPageCtrl {\n  page: any;\n  pluginId: any;\n  appModel: any;\n  navModel: any;\n\n  /** @ngInject */\n  constructor(\n    private $routeParams: any,\n    private $rootScope: any,\n    private navModelSrv: NavModelSrv,\n    private $q: IQService\n  ) {\n    this.pluginId = $routeParams.pluginId;\n\n    this.$q\n      .when(getPluginSettings(this.pluginId))\n      .then(settings => {\n        this.initPage(settings);\n      })\n      .catch(err => {\n        this.$rootScope.appEvent('alert-error', ['Unknown Plugin', '']);\n        this.navModel = this.navModelSrv.getNotFoundNav();\n      });\n  }\n\n  initPage(app: PluginMeta) {\n    this.appModel = app;\n    this.page = _.find(app.includes, { slug: this.$routeParams.slug });\n\n    if (!this.page) {\n      this.$rootScope.appEvent('alert-error', ['App Page Not Found', '']);\n      this.navModel = this.navModelSrv.getNotFoundNav();\n      return;\n    }\n    if (app.type !== 'app' || !app.enabled) {\n      this.$rootScope.appEvent('alert-error', ['Application Not Enabled', '']);\n      this.navModel = this.navModelSrv.getNotFoundNav();\n      return;\n    }\n\n    const pluginNav = this.navModelSrv.getNav('plugin-page-' + app.id);\n\n    this.navModel = {\n      main: {\n        img: app.info.logos.large,\n        subTitle: app.name,\n        url: '',\n        text: this.page.name,\n        breadcrumbs: [{ title: app.name, url: pluginNav.main.url }],\n      },\n    };\n  }\n}\n\nangular.module('grafana.controllers').controller('AppPageCtrl', AppPageCtrl);\n","import angular, { IQService } from 'angular';\nimport _ from 'lodash';\n\nimport config from 'app/core/config';\nimport coreModule from 'app/core/core_module';\n\nimport { DataSourceApi } from '@grafana/ui';\nimport { importPanelPlugin, importDataSourcePlugin, importAppPlugin } from './plugin_loader';\nimport DatasourceSrv from './datasource_srv';\n\n/** @ngInject */\nfunction pluginDirectiveLoader(\n  $compile: any,\n  datasourceSrv: DatasourceSrv,\n  $rootScope: any,\n  $q: IQService,\n  $http: any,\n  $templateCache: any,\n  $timeout: any\n) {\n  function getTemplate(component: { template: any; templateUrl: any }) {\n    if (component.template) {\n      return $q.when(component.template);\n    }\n    const cached = $templateCache.get(component.templateUrl);\n    if (cached) {\n      return $q.when(cached);\n    }\n    return $http.get(component.templateUrl).then((res: any) => {\n      return res.data;\n    });\n  }\n\n  function relativeTemplateUrlToAbs(templateUrl: string, baseUrl: string) {\n    if (!templateUrl) {\n      return undefined;\n    }\n    if (templateUrl.indexOf('public') === 0) {\n      return templateUrl;\n    }\n    return baseUrl + '/' + templateUrl;\n  }\n\n  function getPluginComponentDirective(options: any) {\n    // handle relative template urls for plugin templates\n    options.Component.templateUrl = relativeTemplateUrlToAbs(options.Component.templateUrl, options.baseUrl);\n\n    return () => {\n      return {\n        templateUrl: options.Component.templateUrl,\n        template: options.Component.template,\n        restrict: 'E',\n        controller: options.Component,\n        controllerAs: 'ctrl',\n        bindToController: true,\n        scope: options.bindings,\n        link: (scope: any, elem: any, attrs: any, ctrl: any) => {\n          if (ctrl.link) {\n            ctrl.link(scope, elem, attrs, ctrl);\n          }\n          if (ctrl.init) {\n            ctrl.init();\n          }\n        },\n      };\n    };\n  }\n\n  function loadPanelComponentInfo(scope: any, attrs: any) {\n    const componentInfo: any = {\n      name: 'panel-plugin-' + scope.panel.type,\n      bindings: { dashboard: '=', panel: '=', row: '=' },\n      attrs: {\n        dashboard: 'dashboard',\n        panel: 'panel',\n        class: 'panel-height-helper',\n      },\n    };\n\n    const panelInfo = config.panels[scope.panel.type];\n    return importPanelPlugin(panelInfo.id).then(panelPlugin => {\n      const PanelCtrl = panelPlugin.angularPanelCtrl;\n      componentInfo.Component = PanelCtrl;\n\n      if (!PanelCtrl || PanelCtrl.registered) {\n        return componentInfo;\n      }\n\n      if (PanelCtrl.templatePromise) {\n        return PanelCtrl.templatePromise.then((res: any) => {\n          return componentInfo;\n        });\n      }\n\n      if (panelInfo) {\n        PanelCtrl.templateUrl = relativeTemplateUrlToAbs(PanelCtrl.templateUrl, panelInfo.baseUrl);\n      }\n\n      PanelCtrl.templatePromise = getTemplate(PanelCtrl).then((template: any) => {\n        PanelCtrl.templateUrl = null;\n        PanelCtrl.template = `<grafana-panel ctrl=\"ctrl\" class=\"panel-height-helper\">${template}</grafana-panel>`;\n        return componentInfo;\n      });\n\n      return PanelCtrl.templatePromise;\n    });\n  }\n\n  function getModule(scope: any, attrs: any): any {\n    switch (attrs.type) {\n      // QueryCtrl\n      case 'query-ctrl': {\n        const ds: DataSourceApi = scope.ctrl.datasource as DataSourceApi;\n\n        return $q.when({\n          baseUrl: ds.meta.baseUrl,\n          name: 'query-ctrl-' + ds.meta.id,\n          bindings: { target: '=', panelCtrl: '=', datasource: '=' },\n          attrs: {\n            target: 'ctrl.target',\n            'panel-ctrl': 'ctrl',\n            datasource: 'ctrl.datasource',\n          },\n          Component: ds.components.QueryCtrl,\n        });\n      }\n      // Annotations\n      case 'annotations-query-ctrl': {\n        return importDataSourcePlugin(scope.ctrl.currentDatasource.meta).then(dsPlugin => {\n          return {\n            baseUrl: scope.ctrl.currentDatasource.meta.baseUrl,\n            name: 'annotations-query-ctrl-' + scope.ctrl.currentDatasource.meta.id,\n            bindings: { annotation: '=', datasource: '=' },\n            attrs: {\n              annotation: 'ctrl.currentAnnotation',\n              datasource: 'ctrl.currentDatasource',\n            },\n            Component: dsPlugin.components.AnnotationsQueryCtrl,\n          };\n        });\n      }\n      // Datasource ConfigCtrl\n      case 'datasource-config-ctrl': {\n        const dsMeta = scope.ctrl.datasourceMeta;\n        return importDataSourcePlugin(dsMeta).then(dsPlugin => {\n          scope.$watch(\n            'ctrl.current',\n            () => {\n              scope.onModelChanged(scope.ctrl.current);\n            },\n            true\n          );\n\n          return {\n            baseUrl: dsMeta.baseUrl,\n            name: 'ds-config-' + dsMeta.id,\n            bindings: { meta: '=', current: '=' },\n            attrs: { meta: 'ctrl.datasourceMeta', current: 'ctrl.current' },\n            Component: dsPlugin.angularConfigCtrl,\n          };\n        });\n      }\n      // AppConfigCtrl\n      case 'app-config-ctrl': {\n        const model = scope.ctrl.model;\n        return importAppPlugin(model).then(appPlugin => {\n          return {\n            baseUrl: model.baseUrl,\n            name: 'app-config-' + model.id,\n            bindings: { appModel: '=', appEditCtrl: '=' },\n            attrs: { 'app-model': 'ctrl.model', 'app-edit-ctrl': 'ctrl' },\n            Component: appPlugin.angularConfigCtrl,\n          };\n        });\n      }\n      // App Page\n      case 'app-page': {\n        const appModel = scope.ctrl.appModel;\n        return importAppPlugin(appModel).then(appPlugin => {\n          return {\n            baseUrl: appModel.baseUrl,\n            name: 'app-page-' + appModel.id + '-' + scope.ctrl.page.slug,\n            bindings: { appModel: '=' },\n            attrs: { 'app-model': 'ctrl.appModel' },\n            Component: appPlugin.angularPages[scope.ctrl.page.component],\n          };\n        });\n      }\n      // Panel\n      case 'panel': {\n        return loadPanelComponentInfo(scope, attrs);\n      }\n      default: {\n        return $q.reject({\n          message: 'Could not find component type: ' + attrs.type,\n        });\n      }\n    }\n  }\n\n  function appendAndCompile(scope: any, elem: JQuery, componentInfo: any) {\n    const child = angular.element(document.createElement(componentInfo.name));\n    _.each(componentInfo.attrs, (value, key) => {\n      child.attr(key, value);\n    });\n\n    $compile(child)(scope);\n    elem.empty();\n\n    // let a binding digest cycle complete before adding to dom\n    setTimeout(() => {\n      scope.$applyAsync(() => {\n        elem.append(child);\n        setTimeout(() => {\n          scope.$applyAsync(() => {\n            scope.$broadcast('component-did-mount');\n          });\n        });\n      });\n    });\n  }\n\n  function registerPluginComponent(scope: any, elem: JQuery, attrs: any, componentInfo: any) {\n    if (componentInfo.notFound) {\n      elem.empty();\n      return;\n    }\n\n    if (!componentInfo.Component) {\n      throw {\n        message: 'Failed to find exported plugin component for ' + componentInfo.name,\n      };\n    }\n\n    if (!componentInfo.Component.registered) {\n      const directiveName = attrs.$normalize(componentInfo.name);\n      const directiveFn = getPluginComponentDirective(componentInfo);\n      coreModule.directive(directiveName, directiveFn);\n      componentInfo.Component.registered = true;\n    }\n\n    appendAndCompile(scope, elem, componentInfo);\n  }\n\n  return {\n    restrict: 'E',\n    link: (scope: any, elem: JQuery, attrs: any) => {\n      getModule(scope, attrs)\n        .then((componentInfo: any) => {\n          registerPluginComponent(scope, elem, attrs, componentInfo);\n        })\n        .catch((err: any) => {\n          console.log('Plugin component error', err);\n        });\n    },\n  };\n}\n\ncoreModule.directive('pluginComponent', pluginDirectiveLoader);\n","import coreModule from 'app/core/core_module';\nimport { importDataSourcePlugin } from './plugin_loader';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport DefaultVariableQueryEditor from '../templating/DefaultVariableQueryEditor';\nimport { DataSourcePluginMeta } from '@grafana/ui';\nimport { TemplateSrv } from '../templating/template_srv';\n\nasync function loadComponent(meta: DataSourcePluginMeta) {\n  const dsPlugin = await importDataSourcePlugin(meta);\n  if (dsPlugin.components.VariableQueryEditor) {\n    return dsPlugin.components.VariableQueryEditor;\n  } else {\n    return DefaultVariableQueryEditor;\n  }\n}\n\n/** @ngInject */\nfunction variableQueryEditorLoader(templateSrv: TemplateSrv) {\n  return {\n    restrict: 'E',\n    link: async (scope: any, elem: JQuery) => {\n      const Component = await loadComponent(scope.currentDatasource.meta);\n      const props = {\n        datasource: scope.currentDatasource,\n        query: scope.current.query,\n        onChange: scope.onQueryChange,\n        templateSrv,\n      };\n      ReactDOM.render(<Component {...props} />, elem[0]);\n      scope.$on('$destroy', () => {\n        ReactDOM.unmountComponentAtNode(elem[0]);\n      });\n    },\n  };\n}\n\ncoreModule.directive('variableQueryEditorLoader', variableQueryEditorLoader);\n","import './plugin_page_ctrl';\nimport './datasource_srv';\nimport './plugin_component';\nimport './variableQueryEditorLoader';\n","import angular, { ILocationService } from 'angular';\nimport _ from 'lodash';\nimport { DashboardModel } from '../state/DashboardModel';\nimport { ContextSrv } from 'app/core/services/context_srv';\n\nexport class ChangeTracker {\n  current: any;\n  originalPath: any;\n  scope: any;\n  original: any;\n  next: any;\n  $window: any;\n\n  /** @ngInject */\n  constructor(\n    dashboard: DashboardModel,\n    scope: any,\n    originalCopyDelay: any,\n    private $location: ILocationService,\n    $window: any,\n    private $timeout: any,\n    private contextSrv: ContextSrv,\n    private $rootScope: any\n  ) {\n    this.$location = $location;\n    this.$window = $window;\n\n    this.current = dashboard;\n    this.originalPath = $location.path();\n    this.scope = scope;\n\n    // register events\n    scope.onAppEvent('dashboard-saved', () => {\n      this.original = this.current.getSaveModelClone();\n      this.originalPath = $location.path();\n    });\n\n    $window.onbeforeunload = () => {\n      if (this.ignoreChanges()) {\n        return undefined;\n      }\n      if (this.hasChanges()) {\n        return 'There are unsaved changes to this dashboard';\n      }\n      return undefined;\n    };\n\n    scope.$on('$locationChangeStart', (event: any, next: any) => {\n      // check if we should look for changes\n      if (this.originalPath === $location.path()) {\n        return true;\n      }\n      if (this.ignoreChanges()) {\n        return true;\n      }\n\n      if (this.hasChanges()) {\n        event.preventDefault();\n        this.next = next;\n\n        this.$timeout(() => {\n          this.open_modal();\n        });\n      }\n      return false;\n    });\n\n    if (originalCopyDelay && !dashboard.meta.fromExplore) {\n      this.$timeout(() => {\n        // wait for different services to patch the dashboard (missing properties)\n        this.original = dashboard.getSaveModelClone();\n      }, originalCopyDelay);\n    } else {\n      this.original = dashboard.getSaveModelClone();\n    }\n  }\n\n  // for some dashboards and users\n  // changes should be ignored\n  ignoreChanges() {\n    if (!this.original) {\n      return true;\n    }\n    if (!this.contextSrv.isEditor) {\n      return true;\n    }\n    if (!this.current || !this.current.meta) {\n      return true;\n    }\n\n    const meta = this.current.meta;\n    return !meta.canSave || meta.fromScript || meta.fromFile;\n  }\n\n  // remove stuff that should not count in diff\n  cleanDashboardFromIgnoredChanges(dashData: any) {\n    // need to new up the domain model class to get access to expand / collapse row logic\n    const model = new DashboardModel(dashData);\n\n    // Expand all rows before making comparison. This is required because row expand / collapse\n    // change order of panel array and panel positions.\n    model.expandRows();\n\n    const dash = model.getSaveModelClone();\n\n    // ignore time and refresh\n    dash.time = 0;\n    dash.refresh = 0;\n    dash.schemaVersion = 0;\n\n    // ignore iteration property\n    delete dash.iteration;\n\n    dash.panels = _.filter(dash.panels, panel => {\n      if (panel.repeatPanelId) {\n        return false;\n      }\n\n      // remove scopedVars\n      panel.scopedVars = null;\n\n      // ignore panel legend sort\n      if (panel.legend) {\n        delete panel.legend.sort;\n        delete panel.legend.sortDesc;\n      }\n\n      return true;\n    });\n\n    // ignore template variable values\n    _.each(dash.templating.list, value => {\n      value.current = null;\n      value.options = null;\n      value.filters = null;\n    });\n\n    return dash;\n  }\n\n  hasChanges() {\n    const current = this.cleanDashboardFromIgnoredChanges(this.current.getSaveModelClone());\n    const original = this.cleanDashboardFromIgnoredChanges(this.original);\n\n    const currentTimepicker: any = _.find(current.nav, { type: 'timepicker' });\n    const originalTimepicker: any = _.find(original.nav, { type: 'timepicker' });\n\n    if (currentTimepicker && originalTimepicker) {\n      currentTimepicker.now = originalTimepicker.now;\n    }\n\n    const currentJson = angular.toJson(current, true);\n    const originalJson = angular.toJson(original, true);\n\n    return currentJson !== originalJson;\n  }\n\n  discardChanges() {\n    this.original = null;\n    this.gotoNext();\n  }\n\n  open_modal() {\n    this.$rootScope.appEvent('show-modal', {\n      templateHtml: '<unsaved-changes-modal dismiss=\"dismiss()\"></unsaved-changes-modal>',\n      modalClass: 'modal--narrow confirm-modal',\n    });\n  }\n\n  saveChanges() {\n    const self = this;\n    const cancel = this.$rootScope.$on('dashboard-saved', () => {\n      cancel();\n      this.$timeout(() => {\n        self.gotoNext();\n      });\n    });\n\n    this.$rootScope.appEvent('save-dashboard');\n  }\n\n  gotoNext() {\n    const baseLen = this.$location.absUrl().length - this.$location.url().length;\n    const nextUrl = this.next.substring(baseLen);\n    this.$location.url(nextUrl);\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { Input } from '@grafana/ui';\nimport { VariableQueryProps } from 'app/types/plugins';\n\nexport default class DefaultVariableQueryEditor extends PureComponent<VariableQueryProps, any> {\n  constructor(props: VariableQueryProps) {\n    super(props);\n    this.state = { value: props.query };\n  }\n\n  onChange = (event: React.FormEvent<HTMLInputElement>) => {\n    this.setState({ value: event.currentTarget.value });\n  };\n\n  onBlur = (event: React.FormEvent<HTMLInputElement>) => {\n    this.props.onChange(event.currentTarget.value, event.currentTarget.value);\n  };\n\n  render() {\n    return (\n      <div className=\"gf-form\">\n        <span className=\"gf-form-label width-10\">Query</span>\n        <Input\n          type=\"text\"\n          className=\"gf-form-input\"\n          value={this.state.value}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n          placeholder=\"metric name or tags query\"\n          required\n        />\n      </div>\n    );\n  }\n}\n","import angular, { IQService, ILocationService } from 'angular';\nimport { ChangeTracker } from './ChangeTracker';\nimport { ContextSrv } from 'app/core/services/context_srv';\nimport { DashboardSrv } from './DashboardSrv';\n\n/** @ngInject */\nexport function unsavedChangesSrv(\n  this: any,\n  $rootScope: any,\n  $q: IQService,\n  $location: ILocationService,\n  $timeout: any,\n  contextSrv: ContextSrv,\n  dashboardSrv: DashboardSrv,\n  $window: any\n) {\n  this.init = function(dashboard: any, scope: any) {\n    this.tracker = new ChangeTracker(dashboard, scope, 1000, $location, $window, $timeout, contextSrv, $rootScope);\n    return this.tracker;\n  };\n}\n\nangular.module('grafana.services').service('unsavedChangesSrv', unsavedChangesSrv);\n","/* tslint:disable:import-blacklist */\nimport angular, { IQService } from 'angular';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport kbn from 'app/core/utils/kbn';\nimport { dateMath } from '@grafana/data';\nimport impressionSrv from 'app/core/services/impression_srv';\nimport { BackendSrv } from 'app/core/services/backend_srv';\nimport { DashboardSrv } from './DashboardSrv';\nimport DatasourceSrv from 'app/features/plugins/datasource_srv';\nimport { UrlQueryValue } from '@grafana/runtime';\n\nexport class DashboardLoaderSrv {\n  /** @ngInject */\n  constructor(\n    private backendSrv: BackendSrv,\n    private dashboardSrv: DashboardSrv,\n    private datasourceSrv: DatasourceSrv,\n    private $http: any,\n    private $q: IQService,\n    private $timeout: any,\n    contextSrv: any,\n    private $routeParams: any,\n    private $rootScope: any\n  ) {}\n\n  _dashboardLoadFailed(title: string, snapshot?: boolean) {\n    snapshot = snapshot || false;\n    return {\n      meta: {\n        canStar: false,\n        isSnapshot: snapshot,\n        canDelete: false,\n        canSave: false,\n        canEdit: false,\n        dashboardNotFound: true,\n      },\n      dashboard: { title },\n    };\n  }\n\n  loadDashboard(type: UrlQueryValue, slug: any, uid: any) {\n    let promise;\n\n    if (type === 'script') {\n      promise = this._loadScriptedDashboard(slug);\n    } else if (type === 'snapshot') {\n      promise = this.backendSrv.get('/api/snapshots/' + slug).catch(() => {\n        return this._dashboardLoadFailed('Snapshot not found', true);\n      });\n    } else {\n      promise = this.backendSrv\n        .getDashboardByUid(uid)\n        .then((result: any) => {\n          if (result.meta.isFolder) {\n            this.$rootScope.appEvent('alert-error', ['Dashboard not found']);\n            throw new Error('Dashboard not found');\n          }\n          return result;\n        })\n        .catch(() => {\n          return this._dashboardLoadFailed('Not found', true);\n        });\n    }\n\n    promise.then((result: any) => {\n      if (result.meta.dashboardNotFound !== true) {\n        impressionSrv.addDashboardImpression(result.dashboard.id);\n      }\n\n      return result;\n    });\n\n    return promise;\n  }\n\n  _loadScriptedDashboard(file: string) {\n    const url = 'public/dashboards/' + file.replace(/\\.(?!js)/, '/') + '?' + new Date().getTime();\n\n    return this.$http({ url: url, method: 'GET' })\n      .then(this._executeScript.bind(this))\n      .then(\n        (result: any) => {\n          return {\n            meta: {\n              fromScript: true,\n              canDelete: false,\n              canSave: false,\n              canStar: false,\n            },\n            dashboard: result.data,\n          };\n        },\n        (err: any) => {\n          console.log('Script dashboard error ' + err);\n          this.$rootScope.appEvent('alert-error', [\n            'Script Error',\n            'Please make sure it exists and returns a valid dashboard',\n          ]);\n          return this._dashboardLoadFailed('Scripted dashboard');\n        }\n      );\n  }\n\n  _executeScript(result: any) {\n    const services = {\n      dashboardSrv: this.dashboardSrv,\n      datasourceSrv: this.datasourceSrv,\n      $q: this.$q,\n    };\n\n    /*jshint -W054 */\n    const scriptFunc = new Function(\n      'ARGS',\n      'kbn',\n      'dateMath',\n      '_',\n      'moment',\n      'window',\n      'document',\n      '$',\n      'jQuery',\n      'services',\n      result.data\n    );\n    const scriptResult = scriptFunc(this.$routeParams, kbn, dateMath, _, moment, window, document, $, $, services);\n\n    // Handle async dashboard scripts\n    if (_.isFunction(scriptResult)) {\n      const deferred = this.$q.defer();\n      scriptResult((dashboard: any) => {\n        this.$timeout(() => {\n          deferred.resolve({ data: dashboard });\n        });\n      });\n      return deferred.promise;\n    }\n\n    return { data: scriptResult };\n  }\n}\n\nangular.module('grafana.services').service('dashboardLoaderSrv', DashboardLoaderSrv);\n","import angular from 'angular';\nimport _ from 'lodash';\nimport { DashboardModel } from 'app/features/dashboard/state';\n\nexport let iconMap = {\n  'external link': 'fa-external-link',\n  dashboard: 'fa-th-large',\n  question: 'fa-question',\n  info: 'fa-info',\n  bolt: 'fa-bolt',\n  doc: 'fa-file-text-o',\n  cloud: 'fa-cloud',\n};\n\nexport class DashLinksEditorCtrl {\n  dashboard: DashboardModel;\n  iconMap: any;\n  mode: any;\n  link: any;\n\n  emptyListCta = {\n    title: 'There are no dashboard links added yet',\n    buttonIcon: 'gicon gicon-link',\n    buttonTitle: 'Add Dashboard Link',\n    infoBox: {\n      __html: `<p>\n      Dashboard Links allow you to place links to other dashboards and web sites directly in below the dashboard\n      header.\n    </p>`,\n    },\n    infoBoxTitle: 'What are Dashboard Links?',\n  };\n\n  /** @ngInject */\n  constructor($scope: any, $rootScope: any) {\n    this.iconMap = iconMap;\n    this.dashboard.links = this.dashboard.links || [];\n    this.mode = 'list';\n\n    $scope.$on('$destroy', () => {\n      $rootScope.appEvent('dash-links-updated');\n    });\n  }\n\n  backToList() {\n    this.mode = 'list';\n  }\n\n  setupNew = () => {\n    this.mode = 'new';\n    this.link = { type: 'dashboards', icon: 'external link' };\n  };\n\n  addLink() {\n    this.dashboard.links.push(this.link);\n    this.mode = 'list';\n    this.dashboard.updateSubmenuVisibility();\n  }\n\n  editLink(link: any) {\n    this.link = link;\n    this.mode = 'edit';\n    console.log(this.link);\n  }\n\n  saveLink() {\n    this.backToList();\n  }\n\n  moveLink(index: string | number, dir: string | number) {\n    // @ts-ignore\n    _.move(this.dashboard.links, index, index + dir);\n  }\n\n  deleteLink(index: number) {\n    this.dashboard.links.splice(index, 1);\n    this.dashboard.updateSubmenuVisibility();\n  }\n}\n\nfunction dashLinksEditor() {\n  return {\n    restrict: 'E',\n    controller: DashLinksEditorCtrl,\n    templateUrl: 'public/app/features/dashboard/components/DashLinks/editor.html',\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      dashboard: '=',\n    },\n  };\n}\n\nangular.module('grafana.directives').directive('dashLinksEditor', dashLinksEditor);\n","import angular, { IQService } from 'angular';\nimport _ from 'lodash';\nimport { iconMap } from './DashLinksEditorCtrl';\nimport { LinkSrv } from 'app/features/panel/panellinks/link_srv';\nimport { BackendSrv } from 'app/core/services/backend_srv';\nimport { DashboardSrv } from '../../services/DashboardSrv';\n\nexport type DashboardLink = { tags: any; target: string; keepTime: any; includeVars: any };\n\nfunction dashLinksContainer() {\n  return {\n    scope: {\n      links: '=',\n      dashboard: '=',\n    },\n    restrict: 'E',\n    controller: 'DashLinksContainerCtrl',\n    template: '<dash-link ng-repeat=\"link in generatedLinks\" link=\"link\"></dash-link>',\n    link: () => {},\n  };\n}\n\n/** @ngInject */\nfunction dashLink($compile: any, $sanitize: any, linkSrv: LinkSrv) {\n  return {\n    restrict: 'E',\n    link: (scope: any, elem: JQuery) => {\n      const link = scope.link;\n      const dashboard = scope.dashboard;\n\n      let template =\n        '<div class=\"gf-form\">' +\n        '<a class=\"pointer gf-form-label\" data-placement=\"bottom\"' +\n        (link.asDropdown ? ' ng-click=\"fillDropdown(link)\" data-toggle=\"dropdown\"' : '') +\n        '>' +\n        '<i></i> <span></span></a>';\n\n      if (link.asDropdown) {\n        template +=\n          '<ul class=\"dropdown-menu\" role=\"menu\">' +\n          '<li ng-repeat=\"dash in link.searchHits\">' +\n          '<a href=\"{{dash.url}}\" target=\"{{dash.target}}\">{{dash.title}}</a>' +\n          '</li>' +\n          '</ul>';\n      }\n\n      template += '</div>';\n\n      elem.html(template);\n      $compile(elem.contents())(scope);\n\n      function update() {\n        const linkInfo = linkSrv.getAnchorInfo(link);\n\n        const anchor = elem.find('a');\n        const span = elem.find('span');\n        span.text(linkInfo.title);\n\n        if (!link.asDropdown) {\n          anchor.attr('href', linkInfo.href);\n          sanitizeAnchor();\n        }\n        anchor.attr('data-placement', 'bottom');\n        // tooltip\n        anchor.tooltip({\n          title: $sanitize(scope.link.tooltip),\n          html: true,\n          container: 'body',\n        });\n      }\n\n      function sanitizeAnchor() {\n        const anchor = elem.find('a');\n        const anchorSanitized = $sanitize(anchor.parent().html());\n        anchor.parent().html(anchorSanitized);\n      }\n\n      elem.find('i').attr('class', 'fa fa-fw ' + scope.link.icon);\n      elem.find('a').attr('target', scope.link.target);\n\n      // fix for menus on the far right\n      if (link.asDropdown && scope.$last) {\n        elem.find('.dropdown-menu').addClass('pull-right');\n      }\n\n      update();\n      dashboard.events.on('refresh', update, scope);\n    },\n  };\n}\n\nexport class DashLinksContainerCtrl {\n  /** @ngInject */\n  constructor(\n    $scope: any,\n    $rootScope: any,\n    $q: IQService,\n    backendSrv: BackendSrv,\n    dashboardSrv: DashboardSrv,\n    linkSrv: LinkSrv\n  ) {\n    const currentDashId = dashboardSrv.getCurrent().id;\n\n    function buildLinks(linkDef: any) {\n      if (linkDef.type === 'dashboards') {\n        if (!linkDef.tags) {\n          console.log('Dashboard link missing tag');\n          return $q.when([]);\n        }\n\n        if (linkDef.asDropdown) {\n          return $q.when([\n            {\n              title: linkDef.title,\n              tags: linkDef.tags,\n              keepTime: linkDef.keepTime,\n              includeVars: linkDef.includeVars,\n              target: linkDef.targetBlank ? '_blank' : '_self',\n              icon: 'fa fa-bars',\n              asDropdown: true,\n            },\n          ]);\n        }\n\n        return $scope.searchDashboards(linkDef, 7);\n      }\n\n      if (linkDef.type === 'link') {\n        return $q.when([\n          {\n            url: linkDef.url,\n            title: linkDef.title,\n            // @ts-ignore\n            icon: iconMap[linkDef.icon],\n            tooltip: linkDef.tooltip,\n            target: linkDef.targetBlank ? '_blank' : '_self',\n            keepTime: linkDef.keepTime,\n            includeVars: linkDef.includeVars,\n          },\n        ]);\n      }\n\n      return $q.when([]);\n    }\n\n    function updateDashLinks() {\n      const promises = _.map($scope.links, buildLinks);\n\n      $q.all(promises).then(results => {\n        $scope.generatedLinks = _.flatten(results);\n      });\n    }\n\n    $scope.searchDashboards = (link: DashboardLink, limit: any) => {\n      return backendSrv.search({ tag: link.tags, limit: limit }).then(results => {\n        return _.reduce(\n          results,\n          (memo, dash) => {\n            // do not add current dashboard\n            if (dash.id !== currentDashId) {\n              memo.push({\n                title: dash.title,\n                url: dash.url,\n                target: link.target === '_self' ? '' : link.target,\n                icon: 'fa fa-th-large',\n                keepTime: link.keepTime,\n                includeVars: link.includeVars,\n              });\n            }\n            return memo;\n          },\n          []\n        );\n      });\n    };\n\n    $scope.fillDropdown = (link: { searchHits: any }) => {\n      $scope.searchDashboards(link, 100).then((results: any) => {\n        _.each(results, hit => {\n          hit.url = linkSrv.getLinkUrl(hit);\n        });\n        link.searchHits = results;\n      });\n    };\n\n    updateDashLinks();\n    $rootScope.onAppEvent('dash-links-updated', updateDashLinks, $scope);\n  }\n}\n\nangular.module('grafana.directives').directive('dashLinksContainer', dashLinksContainer);\nangular.module('grafana.directives').directive('dashLink', dashLink);\nangular.module('grafana.directives').controller('DashLinksContainerCtrl', DashLinksContainerCtrl);\n","export { DashLinksContainerCtrl } from './DashLinksContainerCtrl';\nexport { DashLinksEditorCtrl } from './DashLinksEditorCtrl';\n","import _ from 'lodash';\n\nimport config from 'app/core/config';\nimport { DashboardModel } from '../../state/DashboardModel';\nimport DatasourceSrv from 'app/features/plugins/datasource_srv';\nimport { PanelModel } from 'app/features/dashboard/state';\nimport { PanelPluginMeta } from '@grafana/ui';\n\ninterface Input {\n  name: string;\n  type: string;\n  label: string;\n  value: any;\n  description: string;\n}\n\ninterface Requires {\n  [key: string]: {\n    type: string;\n    id: string;\n    name: string;\n    version: string;\n  };\n}\n\ninterface DataSources {\n  [key: string]: {\n    name: string;\n    label: string;\n    description: string;\n    type: string;\n    pluginId: string;\n    pluginName: string;\n  };\n}\n\nexport class DashboardExporter {\n  constructor(private datasourceSrv: DatasourceSrv) {}\n\n  makeExportable(dashboard: DashboardModel) {\n    // clean up repeated rows and panels,\n    // this is done on the live real dashboard instance, not on a clone\n    // so we need to undo this\n    // this is pretty hacky and needs to be changed\n    dashboard.cleanUpRepeats();\n\n    const saveModel = dashboard.getSaveModelClone();\n    saveModel.id = null;\n\n    // undo repeat cleanup\n    dashboard.processRepeats();\n\n    const inputs: Input[] = [];\n    const requires: Requires = {};\n    const datasources: DataSources = {};\n    const promises: Array<Promise<void>> = [];\n    const variableLookup: { [key: string]: any } = {};\n\n    for (const variable of saveModel.templating.list) {\n      variableLookup[variable.name] = variable;\n    }\n\n    const templateizeDatasourceUsage = (obj: any) => {\n      let datasource: string = obj.datasource;\n      let datasourceVariable: any = null;\n\n      // ignore data source properties that contain a variable\n      if (datasource && datasource.indexOf('$') === 0) {\n        datasourceVariable = variableLookup[datasource.substring(1)];\n        if (datasourceVariable && datasourceVariable.current) {\n          datasource = datasourceVariable.current.value;\n        }\n      }\n\n      promises.push(\n        this.datasourceSrv.get(datasource).then(ds => {\n          if (ds.meta.builtIn) {\n            return;\n          }\n\n          // add data source type to require list\n          requires['datasource' + ds.meta.id] = {\n            type: 'datasource',\n            id: ds.meta.id,\n            name: ds.meta.name,\n            version: ds.meta.info.version || '1.0.0',\n          };\n\n          // if used via variable we can skip templatizing usage\n          if (datasourceVariable) {\n            return;\n          }\n\n          const refName = 'DS_' + ds.name.replace(' ', '_').toUpperCase();\n          datasources[refName] = {\n            name: refName,\n            label: ds.name,\n            description: '',\n            type: 'datasource',\n            pluginId: ds.meta.id,\n            pluginName: ds.meta.name,\n          };\n\n          obj.datasource = '${' + refName + '}';\n        })\n      );\n    };\n\n    const processPanel = (panel: PanelModel) => {\n      if (panel.datasource !== undefined) {\n        templateizeDatasourceUsage(panel);\n      }\n\n      if (panel.targets) {\n        for (const target of panel.targets) {\n          if (target.datasource !== undefined) {\n            templateizeDatasourceUsage(target);\n          }\n        }\n      }\n\n      const panelDef: PanelPluginMeta = config.panels[panel.type];\n      if (panelDef) {\n        requires['panel' + panelDef.id] = {\n          type: 'panel',\n          id: panelDef.id,\n          name: panelDef.name,\n          version: panelDef.info.version,\n        };\n      }\n    };\n\n    // check up panel data sources\n    for (const panel of saveModel.panels) {\n      processPanel(panel);\n\n      // handle collapsed rows\n      if (panel.collapsed !== undefined && panel.collapsed === true && panel.panels) {\n        for (const rowPanel of panel.panels) {\n          processPanel(rowPanel);\n        }\n      }\n    }\n\n    // templatize template vars\n    for (const variable of saveModel.templating.list) {\n      if (variable.type === 'query') {\n        templateizeDatasourceUsage(variable);\n        variable.options = [];\n        variable.current = {};\n        variable.refresh = variable.refresh > 0 ? variable.refresh : 1;\n      }\n    }\n\n    // templatize annotations vars\n    for (const annotationDef of saveModel.annotations.list) {\n      templateizeDatasourceUsage(annotationDef);\n    }\n\n    // add grafana version\n    requires['grafana'] = {\n      type: 'grafana',\n      id: 'grafana',\n      name: 'Grafana',\n      version: config.buildInfo.version,\n    };\n\n    return Promise.all(promises)\n      .then(() => {\n        _.each(datasources, (value: any) => {\n          inputs.push(value);\n        });\n\n        // templatize constants\n        for (const variable of saveModel.templating.list) {\n          if (variable.type === 'constant') {\n            const refName = 'VAR_' + variable.name.replace(' ', '_').toUpperCase();\n            inputs.push({\n              name: refName,\n              type: 'constant',\n              label: variable.label || variable.name,\n              value: variable.current.value,\n              description: '',\n            });\n            // update current and option\n            variable.query = '${' + refName + '}';\n            variable.options[0] = variable.current = {\n              value: variable.query,\n              text: variable.query,\n            };\n          }\n        }\n\n        // make inputs and requires a top thing\n        const newObj: { [key: string]: {} } = {};\n        newObj['__inputs'] = inputs;\n        newObj['__requires'] = _.sortBy(requires, ['id']);\n\n        _.defaults(newObj, saveModel);\n        return newObj;\n      })\n      .catch(err => {\n        console.log('Export failed:', err);\n        return {\n          error: err,\n        };\n      });\n  }\n}\n","import angular from 'angular';\nimport { saveAs } from 'file-saver';\n\nimport coreModule from 'app/core/core_module';\nimport { DashboardExporter } from './DashboardExporter';\nimport { DashboardSrv } from '../../services/DashboardSrv';\nimport DatasourceSrv from 'app/features/plugins/datasource_srv';\n\nexport class DashExportCtrl {\n  dash: any;\n  exporter: DashboardExporter;\n  dismiss: () => void;\n  shareExternally: boolean;\n\n  /** @ngInject */\n  constructor(\n    private dashboardSrv: DashboardSrv,\n    datasourceSrv: DatasourceSrv,\n    private $scope: any,\n    private $rootScope: any\n  ) {\n    this.exporter = new DashboardExporter(datasourceSrv);\n\n    this.dash = this.dashboardSrv.getCurrent();\n  }\n\n  saveDashboardAsFile() {\n    if (this.shareExternally) {\n      this.exporter.makeExportable(this.dash).then((dashboardJson: any) => {\n        this.$scope.$apply(() => {\n          this.openSaveAsDialog(dashboardJson);\n        });\n      });\n    } else {\n      this.openSaveAsDialog(this.dash.getSaveModelClone());\n    }\n  }\n\n  viewJson() {\n    if (this.shareExternally) {\n      this.exporter.makeExportable(this.dash).then((dashboardJson: any) => {\n        this.$scope.$apply(() => {\n          this.openJsonModal(dashboardJson);\n        });\n      });\n    } else {\n      this.openJsonModal(this.dash.getSaveModelClone());\n    }\n  }\n\n  private openSaveAsDialog(dash: any) {\n    const blob = new Blob([angular.toJson(dash, true)], {\n      type: 'application/json;charset=utf-8',\n    });\n    saveAs(blob, dash.title + '-' + new Date().getTime() + '.json');\n  }\n\n  private openJsonModal(clone: object) {\n    const model = {\n      object: clone,\n      enableCopy: true,\n    };\n\n    this.$rootScope.appEvent('show-modal', {\n      src: 'public/app/partials/edit_json.html',\n      model: model,\n    });\n\n    this.dismiss();\n  }\n}\n\nexport function dashExportDirective() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/features/dashboard/components/DashExportModal/template.html',\n    controller: DashExportCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: { dismiss: '&' },\n  };\n}\n\ncoreModule.directive('dashExportModal', dashExportDirective);\n","export { DashboardExporter } from './DashboardExporter';\nexport { DashExportCtrl } from './DashExportCtrl';\n","import angular from 'angular';\nimport * as fileExport from 'app/core/utils/file_export';\nimport appEvents from 'app/core/app_events';\nimport { DashboardSrv } from 'app/features/dashboard/services/DashboardSrv';\n\nexport class ExportDataModalCtrl {\n  private data: any;\n  private panel: string;\n  asRows = true;\n  dateTimeFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  excel = false;\n\n  /** @ngInject */\n  constructor(private dashboardSrv: DashboardSrv) {}\n\n  export() {\n    const timezone = this.dashboardSrv.getCurrent().timezone;\n    const options = {\n      excel: this.excel,\n      dateTimeFormat: this.dateTimeFormat,\n      timezone,\n    };\n    if (this.panel === 'table') {\n      fileExport.exportTableDataToCsv(this.data, this.excel);\n    } else {\n      if (this.asRows) {\n        fileExport.exportSeriesListToCsv(this.data, options);\n      } else {\n        fileExport.exportSeriesListToCsvColumns(this.data, options);\n      }\n    }\n\n    this.dismiss();\n  }\n\n  dismiss() {\n    appEvents.emit('hide-modal');\n  }\n}\n\nexport function exportDataModal() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/features/dashboard/components/ExportDataModal/template.html',\n    controller: ExportDataModalCtrl,\n    controllerAs: 'ctrl',\n    scope: {\n      panel: '<',\n      data: '<', // The difference to '=' is that the bound properties are not watched\n    },\n    bindToController: true,\n  };\n}\n\nangular.module('grafana.directives').directive('exportDataModal', exportDataModal);\n","import _ from 'lodash';\nimport coreModule from 'app/core/core_module';\nimport appEvents from 'app/core/app_events';\nimport { BackendSrv } from 'app/core/services/backend_srv';\nimport { ValidationSrv } from 'app/features/manage-dashboards';\nimport { ContextSrv } from 'app/core/services/context_srv';\n\nexport class FolderPickerCtrl {\n  initialTitle: string;\n  initialFolderId?: number;\n  labelClass: string;\n  onChange: any;\n  onLoad: any;\n  onCreateFolder: any;\n  enterFolderCreation: any;\n  exitFolderCreation: any;\n  enableCreateNew: boolean;\n  enableReset: boolean;\n  rootName = 'General';\n  folder: any;\n  createNewFolder: boolean;\n  newFolderName: string;\n  newFolderNameTouched: boolean;\n  hasValidationError: boolean;\n  validationError: any;\n  isEditor: boolean;\n  dashboardId?: number;\n\n  /** @ngInject */\n  constructor(private backendSrv: BackendSrv, private validationSrv: ValidationSrv, private contextSrv: ContextSrv) {\n    this.isEditor = this.contextSrv.isEditor;\n\n    if (!this.labelClass) {\n      this.labelClass = 'width-7';\n    }\n\n    this.loadInitialValue();\n  }\n\n  getOptions(query: string) {\n    const params = {\n      query,\n      type: 'dash-folder',\n      permission: 'Edit',\n    };\n\n    return this.backendSrv.get('api/search', params).then((result: any) => {\n      if (\n        this.isEditor &&\n        (query === '' ||\n          query.toLowerCase() === 'g' ||\n          query.toLowerCase() === 'ge' ||\n          query.toLowerCase() === 'gen' ||\n          query.toLowerCase() === 'gene' ||\n          query.toLowerCase() === 'gener' ||\n          query.toLowerCase() === 'genera' ||\n          query.toLowerCase() === 'general')\n      ) {\n        result.unshift({ title: this.rootName, id: 0 });\n      }\n\n      if (this.isEditor && this.enableCreateNew && query === '') {\n        result.unshift({ title: '-- New Folder --', id: -1 });\n      }\n\n      if (this.enableReset && query === '' && this.initialTitle !== '') {\n        result.unshift({ title: this.initialTitle, id: null });\n      }\n\n      return _.map(result, item => {\n        return { text: item.title, value: item.id };\n      });\n    });\n  }\n\n  onFolderChange(option: { value: number; text: string }) {\n    if (!option) {\n      option = { value: 0, text: this.rootName };\n    } else if (option.value === -1) {\n      this.createNewFolder = true;\n      this.enterFolderCreation();\n      return;\n    }\n    this.onChange({ $folder: { id: option.value, title: option.text } });\n  }\n\n  newFolderNameChanged() {\n    this.newFolderNameTouched = true;\n\n    this.validationSrv\n      .validateNewFolderName(this.newFolderName)\n      .then(() => {\n        this.hasValidationError = false;\n      })\n      .catch((err: any) => {\n        this.hasValidationError = true;\n        this.validationError = err.message;\n      });\n  }\n\n  createFolder(evt: any) {\n    if (evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n    }\n\n    return this.backendSrv.createFolder({ title: this.newFolderName }).then((result: { title: string; id: number }) => {\n      appEvents.emit('alert-success', ['Folder Created', 'OK']);\n\n      this.closeCreateFolder();\n      this.folder = { text: result.title, value: result.id };\n      this.onFolderChange(this.folder);\n    });\n  }\n\n  cancelCreateFolder(evt: any) {\n    if (evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n    }\n\n    this.closeCreateFolder();\n    this.loadInitialValue();\n  }\n\n  private closeCreateFolder() {\n    this.exitFolderCreation();\n    this.createNewFolder = false;\n    this.hasValidationError = false;\n    this.validationError = null;\n    this.newFolderName = '';\n    this.newFolderNameTouched = false;\n  }\n\n  private loadInitialValue() {\n    const resetFolder: { text: string; value: any } = { text: this.initialTitle, value: null };\n    const rootFolder: { text: string; value: any } = { text: this.rootName, value: 0 };\n\n    this.getOptions('').then((result: any[]) => {\n      let folder: { text: string; value: any };\n      if (this.initialFolderId) {\n        // @ts-ignore\n        folder = _.find(result, { value: this.initialFolderId });\n      } else if (this.enableReset && this.initialTitle && this.initialFolderId === null) {\n        folder = resetFolder;\n      }\n\n      if (!folder) {\n        if (this.isEditor) {\n          folder = rootFolder;\n        } else {\n          // We shouldn't assign a random folder without the user actively choosing it on a persisted dashboard\n          const isPersistedDashBoard = this.dashboardId ? true : false;\n          if (isPersistedDashBoard) {\n            folder = resetFolder;\n          } else {\n            folder = result.length > 0 ? result[0] : resetFolder;\n          }\n        }\n      }\n\n      this.folder = folder;\n\n      // if this is not the same as our initial value notify parent\n      if (this.folder.value !== this.initialFolderId) {\n        this.onChange({ $folder: { id: this.folder.value, title: this.folder.text } });\n      }\n    });\n  }\n}\n\nexport function folderPicker() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/features/dashboard/components/FolderPicker/template.html',\n    controller: FolderPickerCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      initialTitle: '<',\n      initialFolderId: '<',\n      labelClass: '@',\n      rootName: '@',\n      onChange: '&',\n      onCreateFolder: '&',\n      enterFolderCreation: '&',\n      exitFolderCreation: '&',\n      enableCreateNew: '@',\n      enableReset: '@',\n      dashboardId: '<?',\n    },\n  };\n}\n\ncoreModule.directive('folderPicker', folderPicker);\n","import _ from 'lodash';\nimport angular, { ILocationService, IQService } from 'angular';\n\nimport locationUtil from 'app/core/utils/location_util';\nimport { DashboardModel } from '../../state/DashboardModel';\nimport { HistoryListOpts, RevisionsModel, CalculateDiffOptions, HistorySrv } from './HistorySrv';\nimport { dateTime, toUtc, DateTimeInput } from '@grafana/data';\n\nexport class HistoryListCtrl {\n  appending: boolean;\n  dashboard: DashboardModel;\n  delta: { basic: string; json: string };\n  diff: string;\n  limit: number;\n  loading: boolean;\n  max: number;\n  mode: string;\n  revisions: RevisionsModel[];\n  start: number;\n  newInfo: RevisionsModel;\n  baseInfo: RevisionsModel;\n  canCompare: boolean;\n  isNewLatest: boolean;\n\n  /** @ngInject */\n  constructor(\n    private $route: any,\n    private $rootScope: any,\n    private $location: ILocationService,\n    private $q: IQService,\n    private historySrv: HistorySrv,\n    public $scope: any\n  ) {\n    this.appending = false;\n    this.diff = 'basic';\n    this.limit = 10;\n    this.loading = false;\n    this.max = 2;\n    this.mode = 'list';\n    this.start = 0;\n    this.canCompare = false;\n\n    this.$rootScope.onAppEvent('dashboard-saved', this.onDashboardSaved.bind(this), $scope);\n    this.resetFromSource();\n  }\n\n  onDashboardSaved() {\n    this.resetFromSource();\n  }\n\n  switchMode(mode: string) {\n    this.mode = mode;\n    if (this.mode === 'list') {\n      this.reset();\n    }\n  }\n\n  dismiss() {\n    this.$rootScope.appEvent('hide-dash-editor');\n  }\n\n  addToLog() {\n    this.start = this.start + this.limit;\n    this.getLog(true);\n  }\n\n  revisionSelectionChanged() {\n    const selected = _.filter(this.revisions, { checked: true }).length;\n    this.canCompare = selected === 2;\n  }\n\n  formatDate(date: DateTimeInput) {\n    return this.dashboard.formatDate(date);\n  }\n\n  formatBasicDate(date: DateTimeInput) {\n    const now = this.dashboard.timezone === 'browser' ? dateTime() : toUtc();\n    const then = this.dashboard.timezone === 'browser' ? dateTime(date) : toUtc(date);\n    return then.from(now);\n  }\n\n  getDiff(diff: string) {\n    this.diff = diff;\n    this.mode = 'compare';\n\n    // have it already been fetched?\n    // @ts-ignore\n    if (this.delta[this.diff]) {\n      // @ts-ignore\n      return this.$q.when(this.delta[this.diff]);\n    }\n\n    const selected = _.filter(this.revisions, { checked: true });\n\n    this.newInfo = selected[0];\n    this.baseInfo = selected[1];\n    this.isNewLatest = this.newInfo.version === this.dashboard.version;\n\n    this.loading = true;\n    const options: CalculateDiffOptions = {\n      new: {\n        dashboardId: this.dashboard.id,\n        version: this.newInfo.version,\n      },\n      base: {\n        dashboardId: this.dashboard.id,\n        version: this.baseInfo.version,\n      },\n      diffType: diff,\n    };\n\n    return this.historySrv\n      .calculateDiff(options)\n      .then((response: any) => {\n        // @ts-ignore\n        this.delta[this.diff] = response;\n      })\n      .catch(() => {\n        this.mode = 'list';\n      })\n      .finally(() => {\n        this.loading = false;\n      });\n  }\n\n  getLog(append = false) {\n    this.loading = !append;\n    this.appending = append;\n    const options: HistoryListOpts = {\n      limit: this.limit,\n      start: this.start,\n    };\n\n    return this.historySrv\n      .getHistoryList(this.dashboard, options)\n      .then((revisions: any) => {\n        // set formatted dates & default values\n        for (const rev of revisions) {\n          rev.createdDateString = this.formatDate(rev.created);\n          rev.ageString = this.formatBasicDate(rev.created);\n          rev.checked = false;\n        }\n\n        this.revisions = append ? this.revisions.concat(revisions) : revisions;\n      })\n      .catch((err: any) => {\n        this.loading = false;\n      })\n      .finally(() => {\n        this.loading = false;\n        this.appending = false;\n      });\n  }\n\n  isLastPage() {\n    return _.find(this.revisions, rev => rev.version === 1);\n  }\n\n  reset() {\n    this.delta = { basic: '', json: '' };\n    this.diff = 'basic';\n    this.mode = 'list';\n    this.revisions = _.map(this.revisions, rev => _.extend({}, rev, { checked: false }));\n    this.canCompare = false;\n    this.start = 0;\n    this.isNewLatest = false;\n  }\n\n  resetFromSource() {\n    this.revisions = [];\n    return this.getLog().then(this.reset.bind(this));\n  }\n\n  restore(version: number) {\n    this.$rootScope.appEvent('confirm-modal', {\n      title: 'Restore version',\n      text: '',\n      text2: `Are you sure you want to restore the dashboard to version ${version}? All unsaved changes will be lost.`,\n      icon: 'fa-history',\n      yesText: `Yes, restore to version ${version}`,\n      onConfirm: this.restoreConfirm.bind(this, version),\n    });\n  }\n\n  restoreConfirm(version: number) {\n    this.loading = true;\n    return this.historySrv\n      .restoreDashboard(this.dashboard, version)\n      .then((response: any) => {\n        this.$location.url(locationUtil.stripBaseFromUrl(response.url)).replace();\n        this.$route.reload();\n        this.$rootScope.appEvent('alert-success', ['Dashboard restored', 'Restored from version ' + version]);\n      })\n      .catch(() => {\n        this.mode = 'list';\n        this.loading = false;\n      });\n  }\n}\n\nexport function dashboardHistoryDirective() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/features/dashboard/components/VersionHistory/template.html',\n    controller: HistoryListCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      dashboard: '=',\n    },\n  };\n}\n\nangular.module('grafana.directives').directive('gfDashboardHistory', dashboardHistoryDirective);\n","import _ from 'lodash';\nimport coreModule from 'app/core/core_module';\nimport { DashboardModel } from '../../state/DashboardModel';\nimport { BackendSrv } from 'app/core/services/backend_srv';\n\nexport interface HistoryListOpts {\n  limit: number;\n  start: number;\n}\n\nexport interface RevisionsModel {\n  id: number;\n  checked: boolean;\n  dashboardId: number;\n  parentVersion: number;\n  version: number;\n  created: Date;\n  createdBy: string;\n  message: string;\n}\n\nexport interface CalculateDiffOptions {\n  new: DiffTarget;\n  base: DiffTarget;\n  diffType: string;\n}\n\nexport interface DiffTarget {\n  dashboardId: number;\n  version: number;\n  unsavedDashboard?: DashboardModel; // when doing diffs against unsaved dashboard version\n}\n\nexport class HistorySrv {\n  /** @ngInject */\n  constructor(private backendSrv: BackendSrv) {}\n\n  getHistoryList(dashboard: DashboardModel, options: HistoryListOpts) {\n    const id = dashboard && dashboard.id ? dashboard.id : void 0;\n    return id ? this.backendSrv.get(`api/dashboards/id/${id}/versions`, options) : Promise.resolve([]);\n  }\n\n  calculateDiff(options: CalculateDiffOptions) {\n    return this.backendSrv.post('api/dashboards/calculate-diff', options);\n  }\n\n  restoreDashboard(dashboard: DashboardModel, version: number) {\n    const id = dashboard && dashboard.id ? dashboard.id : void 0;\n    const url = `api/dashboards/id/${id}/restore`;\n\n    return id && _.isNumber(version) ? this.backendSrv.post(url, { version }) : Promise.resolve({});\n  }\n}\n\ncoreModule.service('historySrv', HistorySrv);\n","export { HistoryListCtrl } from './HistoryListCtrl';\nexport { HistorySrv } from './HistorySrv';\n","import coreModule from 'app/core/core_module';\n\nconst template = `\n<div class=\"modal-body\">\n  <div class=\"modal-header\">\n    <h2 class=\"modal-header-title\">\n      <i class=\"fa fa-exclamation\"></i>\n      <span class=\"p-l-1\">Unsaved changes</span>\n    </h2>\n\n    <a class=\"modal-header-close\" ng-click=\"ctrl.dismiss();\">\n      <i class=\"fa fa-remove\"></i>\n    </a>\n  </div>\n\n  <div class=\"modal-content text-center\">\n\n    <div class=\"confirm-modal-text\">\n      Do you want to save your changes?\n    </div>\n\n    <div class=\"confirm-modal-buttons\">\n      <button type=\"button\" class=\"btn btn-primary\" ng-click=\"ctrl.save()\">Save</button>\n      <button type=\"button\" class=\"btn btn-danger\" ng-click=\"ctrl.discard()\">Discard</button>\n      <button type=\"button\" class=\"btn btn-inverse\" ng-click=\"ctrl.dismiss()\">Cancel</button>\n    </div>\n  </div>\n</div>\n`;\n\nexport class UnsavedChangesModalCtrl {\n  clone: any;\n  dismiss: () => void;\n\n  /** @ngInject */\n  constructor(private unsavedChangesSrv: any) {}\n\n  discard() {\n    this.dismiss();\n    this.unsavedChangesSrv.tracker.discardChanges();\n  }\n\n  save() {\n    this.dismiss();\n    this.unsavedChangesSrv.tracker.saveChanges();\n  }\n}\n\nexport function unsavedChangesModalDirective() {\n  return {\n    restrict: 'E',\n    template: template,\n    controller: UnsavedChangesModalCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: { dismiss: '&' },\n  };\n}\n\ncoreModule.directive('unsavedChangesModal', unsavedChangesModalDirective);\n","export { UnsavedChangesModalCtrl } from './UnsavedChangesModalCtrl';\n","import coreModule from 'app/core/core_module';\nimport { DashboardSrv } from '../../services/DashboardSrv';\nimport { PanelModel } from '../../state/PanelModel';\n\nconst template = `\n<div class=\"modal-body\">\n\t<div class=\"modal-header\">\n\t\t<h2 class=\"modal-header-title\">\n\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t<span class=\"p-l-1\">Save As...</span>\n\t\t</h2>\n\n\t\t<a class=\"modal-header-close\" ng-click=\"ctrl.dismiss();\">\n\t\t\t<i class=\"fa fa-remove\"></i>\n\t\t</a>\n\t</div>\n\n\t<form name=\"ctrl.saveForm\" class=\"modal-content\" novalidate>\n\t\t<div class=\"p-t-2\">\n\t\t\t<div class=\"gf-form\">\n\t\t\t\t<label class=\"gf-form-label width-8\">New name</label>\n\t\t\t\t<input type=\"text\" class=\"gf-form-input\" ng-model=\"ctrl.clone.title\" give-focus=\"true\" required aria-label=\"Save dashboard title field\">\n\t\t\t</div>\n      <folder-picker initial-folder-id=\"ctrl.folderId\"\n                       on-change=\"ctrl.onFolderChange($folder)\"\n                       enter-folder-creation=\"ctrl.onEnterFolderCreation()\"\n                       exit-folder-creation=\"ctrl.onExitFolderCreation()\"\n                       enable-create-new=\"true\"\n                       label-class=\"width-8\"\n                       dashboard-id=\"ctrl.clone.id\">\n      </folder-picker>\n      <div class=\"gf-form-inline\">\n        <gf-form-switch class=\"gf-form\" label=\"Copy tags\" label-class=\"width-8\" checked=\"ctrl.copyTags\">\n        </gf-form-switch>\n      </div>\n\t\t</div>\n\n\t\t<div class=\"gf-form-button-row text-center\">\n      <button\n        type=\"submit\"\n        class=\"btn btn-primary\"\n        ng-click=\"ctrl.save()\"\n        ng-disabled=\"!ctrl.isValidFolderSelection\"\n        aria-label=\"Save dashboard button\">\n        Save\n      </button>\n\t\t\t<a class=\"btn-text\" ng-click=\"ctrl.dismiss();\">Cancel</a>\n\t\t</div>\n\t</form>\n</div>\n`;\n\nexport class SaveDashboardAsModalCtrl {\n  clone: any;\n  folderId: any;\n  dismiss: () => void;\n  isValidFolderSelection = true;\n  copyTags: boolean;\n\n  /** @ngInject */\n  constructor(private dashboardSrv: DashboardSrv) {\n    const dashboard = this.dashboardSrv.getCurrent();\n    this.clone = dashboard.getSaveModelClone();\n    this.clone.id = null;\n    this.clone.uid = '';\n    this.clone.title += ' Copy';\n    this.clone.editable = true;\n    this.clone.hideControls = false;\n    this.folderId = dashboard.meta.folderId;\n    this.copyTags = false;\n\n    // remove alerts if source dashboard is already persisted\n    // do not want to create alert dupes\n    if (dashboard.id > 0) {\n      this.clone.panels.forEach((panel: PanelModel) => {\n        if (panel.type === 'graph' && panel.alert) {\n          delete panel.thresholds;\n        }\n        delete panel.alert;\n      });\n    }\n\n    delete this.clone.autoUpdate;\n  }\n\n  save() {\n    if (!this.copyTags) {\n      this.clone.tags = [];\n    }\n\n    return this.dashboardSrv.save(this.clone, { folderId: this.folderId }).then(this.dismiss);\n  }\n\n  keyDown(evt: KeyboardEvent) {\n    if (evt.keyCode === 13) {\n      this.save();\n    }\n  }\n\n  onFolderChange(folder: { id: any }) {\n    this.folderId = folder.id;\n  }\n\n  onEnterFolderCreation() {\n    this.isValidFolderSelection = false;\n  }\n\n  onExitFolderCreation() {\n    this.isValidFolderSelection = true;\n  }\n}\n\nexport function saveDashboardAsDirective() {\n  return {\n    restrict: 'E',\n    template: template,\n    controller: SaveDashboardAsModalCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: { dismiss: '&' },\n  };\n}\n\ncoreModule.directive('saveDashboardAsModal', saveDashboardAsDirective);\n","import coreModule from 'app/core/core_module';\nimport { DashboardSrv } from '../../services/DashboardSrv';\nimport { CloneOptions } from '../../state/DashboardModel';\n\nconst template = `\n<div class=\"modal-body\">\n  <div class=\"modal-header\">\n    <h2 class=\"modal-header-title\">\n      <i class=\"fa fa-save\"></i>\n      <span class=\"p-l-1\">Save changes</span>\n    </h2>\n\n    <a class=\"modal-header-close\" ng-click=\"ctrl.dismiss();\">\n      <i class=\"fa fa-remove\"></i>\n    </a>\n  </div>\n\n  <form name=\"ctrl.saveForm\" ng-submit=\"ctrl.save()\" class=\"modal-content\" novalidate>\n    <div class=\"p-t-1\">\n      <div class=\"gf-form-group\" ng-if=\"ctrl.timeChange || ctrl.variableValueChange\">\n\t\t    <gf-form-switch class=\"gf-form\"\n\t\t\t    label=\"Save current time range\" ng-if=\"ctrl.timeChange\" label-class=\"width-12\" switch-class=\"max-width-6\"\n\t\t\t    checked=\"ctrl.saveTimerange\" on-change=\"buildUrl()\">\n\t\t    </gf-form-switch>\n\t\t    <gf-form-switch class=\"gf-form\"\n\t\t\t    label=\"Save current variables\" ng-if=\"ctrl.variableValueChange\" label-class=\"width-12\" switch-class=\"max-width-6\"\n\t\t\t    checked=\"ctrl.saveVariables\" on-change=\"buildUrl()\">\n\t\t    </gf-form-switch>\n\t    </div>\n      <div class=\"gf-form\">\n        <label class=\"gf-form-hint\">\n          <input\n            type=\"text\"\n            name=\"message\"\n            class=\"gf-form-input\"\n            placeholder=\"Add a note to describe your changes &hellip;\"\n            give-focus=\"true\"\n            ng-model=\"ctrl.message\"\n            ng-model-options=\"{allowInvalid: true}\"\n            ng-maxlength=\"this.max\"\n            maxlength=\"64\"\n            autocomplete=\"off\" />\n          <small class=\"gf-form-hint-text muted\" ng-cloak>\n            <span ng-class=\"{'text-error': ctrl.saveForm.message.$invalid && ctrl.saveForm.message.$dirty }\">\n              {{ctrl.message.length || 0}}\n            </span>\n            / {{ctrl.max}} characters\n          </small>\n        </label>\n      </div>\n    </div>\n\n    <div class=\"gf-form-button-row text-center\">\n      <button\n        id=\"saveBtn\"\n        type=\"submit\"\n        class=\"btn btn-primary\"\n        ng-class=\"{'btn-primary--processing': ctrl.isSaving}\"\n        ng-disabled=\"ctrl.saveForm.$invalid || ctrl.isSaving\"\n      >\n        <span ng-if=\"!ctrl.isSaving\">Save</span>\n        <span ng-if=\"ctrl.isSaving === true\">Saving...</span>\n      </button>\n      <button class=\"btn btn-inverse\" ng-click=\"ctrl.dismiss();\">Cancel</button>\n    </div>\n  </form>\n</div>\n`;\n\nexport class SaveDashboardModalCtrl {\n  message: string;\n  saveVariables = false;\n  saveTimerange = false;\n  time: any;\n  originalTime: any;\n  current: any[] = [];\n  originalCurrent: any[] = [];\n  max: number;\n  saveForm: any;\n  isSaving: boolean;\n  dismiss: () => void;\n  timeChange = false;\n  variableValueChange = false;\n\n  /** @ngInject */\n  constructor(private dashboardSrv: DashboardSrv) {\n    this.message = '';\n    this.max = 64;\n    this.isSaving = false;\n    this.timeChange = this.dashboardSrv.getCurrent().hasTimeChanged();\n    this.variableValueChange = this.dashboardSrv.getCurrent().hasVariableValuesChanged();\n  }\n\n  save() {\n    if (!this.saveForm.$valid) {\n      return;\n    }\n\n    const options: CloneOptions = {\n      saveVariables: this.saveVariables,\n      saveTimerange: this.saveTimerange,\n      message: this.message,\n    };\n\n    const dashboard = this.dashboardSrv.getCurrent();\n    const saveModel = dashboard.getSaveModelClone(options);\n\n    this.isSaving = true;\n    return this.dashboardSrv.save(saveModel, options).then(this.postSave.bind(this, options));\n  }\n\n  postSave(options?: { saveVariables?: boolean; saveTimerange?: boolean }) {\n    if (options.saveVariables) {\n      this.dashboardSrv.getCurrent().resetOriginalVariables();\n    }\n\n    if (options.saveTimerange) {\n      this.dashboardSrv.getCurrent().resetOriginalTime();\n    }\n\n    this.dismiss();\n  }\n}\n\nexport function saveDashboardModalDirective() {\n  return {\n    restrict: 'E',\n    template: template,\n    controller: SaveDashboardModalCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: { dismiss: '&' },\n  };\n}\n\ncoreModule.directive('saveDashboardModal', saveDashboardModalDirective);\n","import angular from 'angular';\nimport { saveAs } from 'file-saver';\nimport coreModule from 'app/core/core_module';\nimport { DashboardModel } from '../../state';\nimport { DashboardSrv } from '../../services/DashboardSrv';\n\nconst template = `\n<div class=\"modal-body\">\n  <div class=\"modal-header\">\n    <h2 class=\"modal-header-title\">\n      <i class=\"fa fa-save\"></i><span class=\"p-l-1\">Cannot save provisioned dashboard</span>\n    </h2>\n\n    <a class=\"modal-header-close\" ng-click=\"ctrl.dismiss();\">\n      <i class=\"fa fa-remove\"></i>\n    </a>\n  </div>\n\n  <div class=\"modal-content\">\n    <small>\n      This dashboard cannot be saved from Grafana's UI since it has been provisioned from another source.\n      Copy the JSON or save it to a file below. Then you can update your dashboard in corresponding provisioning source.<br/>\n      <i>See <a class=\"external-link\" href=\"http://docs.grafana.org/administration/provisioning/#dashboards\" target=\"_blank\">\n      documentation</a> for more information about provisioning.</i>\n    </small>\n    <div class=\"p-t-1\">\n      File path: {{ctrl.dashboardModel.meta.provisionedExternalId}}\n    </div>\n    <div class=\"p-t-2\">\n      <div class=\"gf-form\">\n        <code-editor content=\"ctrl.dashboardJson\" data-mode=\"json\" data-max-lines=15></code-editor>\n      </div>\n      <div class=\"gf-form-button-row\">\n        <button class=\"btn btn-primary\" clipboard-button=\"ctrl.getJsonForClipboard()\">\n          Copy JSON to Clipboard\n        </button>\n        <button class=\"btn btn-secondary\" clipboard-button=\"ctrl.save()\">\n          Save JSON to file\n        </button>\n        <a class=\"btn btn-link\" ng-click=\"ctrl.dismiss();\">Cancel</a>\n      </div>\n    </div>\n  </div>\n</div>\n`;\n\nexport class SaveProvisionedDashboardModalCtrl {\n  dash: any;\n  dashboardModel: DashboardModel;\n  dashboardJson: string;\n  dismiss: () => void;\n\n  /** @ngInject */\n  constructor(dashboardSrv: DashboardSrv) {\n    this.dashboardModel = dashboardSrv.getCurrent();\n    this.dash = this.dashboardModel.getSaveModelClone();\n    delete this.dash.id;\n    this.dashboardJson = angular.toJson(this.dash, true);\n  }\n\n  save() {\n    const blob = new Blob([angular.toJson(this.dash, true)], {\n      type: 'application/json;charset=utf-8',\n    });\n    saveAs(blob, this.dash.title + '-' + new Date().getTime() + '.json');\n  }\n\n  getJsonForClipboard() {\n    return this.dashboardJson;\n  }\n}\n\nexport function saveProvisionedDashboardModalDirective() {\n  return {\n    restrict: 'E',\n    template: template,\n    controller: SaveProvisionedDashboardModalCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: { dismiss: '&' },\n  };\n}\n\ncoreModule.directive('saveProvisionedDashboardModal', saveProvisionedDashboardModalDirective);\n","import angular, { ILocationService } from 'angular';\nimport config from 'app/core/config';\nimport { dateTime } from '@grafana/data';\nimport { appendQueryToUrl, toUrlParams } from 'app/core/utils/url';\nimport { TimeSrv } from '../../services/TimeSrv';\nimport { TemplateSrv } from 'app/features/templating/template_srv';\nimport { LinkSrv } from 'app/features/panel/panellinks/link_srv';\n\n/** @ngInject */\nexport function ShareModalCtrl(\n  $scope: any,\n  $rootScope: any,\n  $location: ILocationService,\n  $timeout: any,\n  timeSrv: TimeSrv,\n  templateSrv: TemplateSrv,\n  linkSrv: LinkSrv\n) {\n  $scope.options = {\n    forCurrent: true,\n    includeTemplateVars: true,\n    theme: 'current',\n  };\n  $scope.editor = { index: $scope.tabIndex || 0 };\n\n  $scope.init = () => {\n    $scope.panel = $scope.model && $scope.model.panel ? $scope.model.panel : $scope.panel; // React pass panel and dashboard in the \"model\" property\n    $scope.dashboard = $scope.model && $scope.model.dashboard ? $scope.model.dashboard : $scope.dashboard; // ^\n    $scope.modeSharePanel = $scope.panel ? true : false;\n\n    $scope.tabs = [{ title: 'Link', src: 'shareLink.html' }];\n\n    if ($scope.modeSharePanel) {\n      $scope.modalTitle = 'Share Panel';\n      $scope.tabs.push({ title: 'Embed', src: 'shareEmbed.html' });\n    } else {\n      $scope.modalTitle = 'Share';\n    }\n\n    if (!$scope.dashboard.meta.isSnapshot) {\n      $scope.tabs.push({ title: 'Snapshot', src: 'shareSnapshot.html' });\n    }\n\n    if (!$scope.dashboard.meta.isSnapshot && !$scope.modeSharePanel) {\n      $scope.tabs.push({ title: 'Export', src: 'shareExport.html' });\n    }\n\n    $scope.buildUrl();\n  };\n\n  $scope.buildUrl = () => {\n    let baseUrl = $location.absUrl();\n    const queryStart = baseUrl.indexOf('?');\n\n    if (queryStart !== -1) {\n      baseUrl = baseUrl.substring(0, queryStart);\n    }\n\n    const params = angular.copy($location.search());\n\n    const range = timeSrv.timeRange();\n    params.from = range.from.valueOf();\n    params.to = range.to.valueOf();\n    params.orgId = config.bootData.user.orgId;\n\n    if ($scope.options.includeTemplateVars) {\n      templateSrv.fillVariableValuesForUrl(params);\n    }\n\n    if (!$scope.options.forCurrent) {\n      delete params.from;\n      delete params.to;\n    }\n\n    if ($scope.options.theme !== 'current') {\n      params.theme = $scope.options.theme;\n    }\n\n    if ($scope.modeSharePanel) {\n      params.panelId = $scope.panel.id;\n      params.fullscreen = true;\n    } else {\n      delete params.panelId;\n      delete params.fullscreen;\n    }\n\n    $scope.shareUrl = appendQueryToUrl(baseUrl, toUrlParams(params));\n\n    let soloUrl = baseUrl.replace(config.appSubUrl + '/dashboard/', config.appSubUrl + '/dashboard-solo/');\n    soloUrl = soloUrl.replace(config.appSubUrl + '/d/', config.appSubUrl + '/d-solo/');\n    delete params.fullscreen;\n    delete params.edit;\n    soloUrl = appendQueryToUrl(soloUrl, toUrlParams(params));\n\n    $scope.iframeHtml = '<iframe src=\"' + soloUrl + '\" width=\"450\" height=\"200\" frameborder=\"0\"></iframe>';\n\n    $scope.imageUrl = soloUrl.replace(\n      config.appSubUrl + '/dashboard-solo/',\n      config.appSubUrl + '/render/dashboard-solo/'\n    );\n    $scope.imageUrl = $scope.imageUrl.replace(config.appSubUrl + '/d-solo/', config.appSubUrl + '/render/d-solo/');\n    $scope.imageUrl += '&width=1000&height=500' + $scope.getLocalTimeZone();\n  };\n\n  // This function will try to return the proper full name of the local timezone\n  // Chrome does not handle the timezone offset (but phantomjs does)\n  $scope.getLocalTimeZone = () => {\n    const utcOffset = '&tz=UTC' + encodeURIComponent(dateTime().format('Z'));\n\n    // Older browser does not the internationalization API\n    if (!(window as any).Intl) {\n      return utcOffset;\n    }\n\n    const dateFormat = (window as any).Intl.DateTimeFormat();\n    if (!dateFormat.resolvedOptions) {\n      return utcOffset;\n    }\n\n    const options = dateFormat.resolvedOptions();\n    if (!options.timeZone) {\n      return utcOffset;\n    }\n\n    return '&tz=' + encodeURIComponent(options.timeZone);\n  };\n\n  $scope.getShareUrl = () => {\n    return $scope.shareUrl;\n  };\n}\n\nangular.module('grafana.controllers').controller('ShareModalCtrl', ShareModalCtrl);\n","export { SaveDashboardAsModalCtrl } from './SaveDashboardAsModalCtrl';\nexport { SaveDashboardModalCtrl } from './SaveDashboardModalCtrl';\nexport { SaveProvisionedDashboardModalCtrl } from './SaveProvisionedDashboardModalCtrl';\n","import angular, { ILocationService } from 'angular';\nimport _ from 'lodash';\nimport { BackendSrv } from 'app/core/services/backend_srv';\nimport { TimeSrv } from '../../services/TimeSrv';\nimport { DashboardModel } from '../../state/DashboardModel';\nimport { PanelModel } from '../../state/PanelModel';\n\nexport class ShareSnapshotCtrl {\n  /** @ngInject */\n  constructor(\n    $scope: any,\n    $rootScope: any,\n    $location: ILocationService,\n    backendSrv: BackendSrv,\n    $timeout: any,\n    timeSrv: TimeSrv\n  ) {\n    $scope.snapshot = {\n      name: $scope.dashboard.title,\n      expires: 0,\n      timeoutSeconds: 4,\n    };\n\n    $scope.step = 1;\n\n    $scope.expireOptions = [\n      { text: '1 Hour', value: 60 * 60 },\n      { text: '1 Day', value: 60 * 60 * 24 },\n      { text: '7 Days', value: 60 * 60 * 24 * 7 },\n      { text: 'Never', value: 0 },\n    ];\n\n    $scope.accessOptions = [\n      { text: 'Anyone with the link', value: 1 },\n      { text: 'Organization users', value: 2 },\n      { text: 'Public on the web', value: 3 },\n    ];\n\n    $scope.init = () => {\n      backendSrv.get('/api/snapshot/shared-options').then((options: { [x: string]: any }) => {\n        $scope.sharingButtonText = options['externalSnapshotName'];\n        $scope.externalEnabled = options['externalEnabled'];\n      });\n    };\n\n    $scope.apiUrl = '/api/snapshots';\n\n    $scope.createSnapshot = (external: any) => {\n      $scope.dashboard.snapshot = {\n        timestamp: new Date(),\n      };\n\n      if (!external) {\n        $scope.dashboard.snapshot.originalUrl = $location.absUrl();\n      }\n\n      $scope.loading = true;\n      $scope.snapshot.external = external;\n      $scope.dashboard.startRefresh();\n\n      $timeout(() => {\n        $scope.saveSnapshot(external);\n      }, $scope.snapshot.timeoutSeconds * 1000);\n    };\n\n    $scope.saveSnapshot = (external: any) => {\n      const dash = $scope.dashboard.getSaveModelClone();\n      $scope.scrubDashboard(dash);\n\n      const cmdData = {\n        dashboard: dash,\n        name: dash.title,\n        expires: $scope.snapshot.expires,\n        external: external,\n      };\n\n      backendSrv.post($scope.apiUrl, cmdData).then(\n        (results: { deleteUrl: any; url: any }) => {\n          $scope.loading = false;\n          $scope.deleteUrl = results.deleteUrl;\n          $scope.snapshotUrl = results.url;\n          $scope.step = 2;\n        },\n        () => {\n          $scope.loading = false;\n        }\n      );\n    };\n\n    $scope.getSnapshotUrl = () => {\n      return $scope.snapshotUrl;\n    };\n\n    $scope.scrubDashboard = (dash: DashboardModel) => {\n      // change title\n      dash.title = $scope.snapshot.name;\n\n      // make relative times absolute\n      dash.time = timeSrv.timeRange();\n\n      // remove panel queries & links\n      _.each(dash.panels, panel => {\n        panel.targets = [];\n        panel.links = [];\n        panel.datasource = null;\n      });\n\n      // remove annotation queries\n      dash.annotations.list = _.chain(dash.annotations.list)\n        .filter(annotation => {\n          return annotation.enable;\n        })\n        .map((annotation: any) => {\n          return {\n            name: annotation.name,\n            enable: annotation.enable,\n            iconColor: annotation.iconColor,\n            snapshotData: annotation.snapshotData,\n            type: annotation.type,\n            builtIn: annotation.builtIn,\n            hide: annotation.hide,\n          };\n        })\n        .value();\n\n      // remove template queries\n      _.each(dash.templating.list, variable => {\n        variable.query = '';\n        variable.options = variable.current;\n        variable.refresh = false;\n      });\n\n      // snapshot single panel\n      if ($scope.modeSharePanel) {\n        const singlePanel = $scope.panel.getSaveModel();\n        singlePanel.gridPos.w = 24;\n        singlePanel.gridPos.x = 0;\n        singlePanel.gridPos.y = 0;\n        singlePanel.gridPos.h = 20;\n        dash.panels = [singlePanel];\n      }\n\n      // cleanup snapshotData\n      delete $scope.dashboard.snapshot;\n      $scope.dashboard.forEachPanel((panel: PanelModel) => {\n        delete panel.snapshotData;\n      });\n      _.each($scope.dashboard.annotations.list, annotation => {\n        delete annotation.snapshotData;\n      });\n    };\n\n    $scope.deleteSnapshot = () => {\n      backendSrv.get($scope.deleteUrl).then(() => {\n        $scope.step = 3;\n      });\n    };\n  }\n}\n\nangular.module('grafana.controllers').controller('ShareSnapshotCtrl', ShareSnapshotCtrl);\n","export { ShareModalCtrl } from './ShareModalCtrl';\nexport { ShareSnapshotCtrl } from './ShareSnapshotCtrl';\n","import _ from 'lodash';\nimport angular, { IQService } from 'angular';\nimport coreModule from 'app/core/core_module';\nimport { DashboardModel } from 'app/features/dashboard/state';\nimport DatasourceSrv from 'app/features/plugins/datasource_srv';\nimport { VariableSrv } from 'app/features/templating/all';\n\nexport class AdHocFiltersCtrl {\n  segments: any;\n  variable: any;\n  dashboard: DashboardModel;\n  removeTagFilterSegment: any;\n\n  /** @ngInject */\n  constructor(\n    private uiSegmentSrv: any,\n    private datasourceSrv: DatasourceSrv,\n    private $q: IQService,\n    private variableSrv: VariableSrv,\n    $scope: any\n  ) {\n    this.removeTagFilterSegment = uiSegmentSrv.newSegment({\n      fake: true,\n      value: '-- remove filter --',\n    });\n    this.buildSegmentModel();\n    this.dashboard.events.on('template-variable-value-updated', this.buildSegmentModel.bind(this), $scope);\n  }\n\n  buildSegmentModel() {\n    this.segments = [];\n\n    if (this.variable.value && !_.isArray(this.variable.value)) {\n    }\n\n    for (const tag of this.variable.filters) {\n      if (this.segments.length > 0) {\n        this.segments.push(this.uiSegmentSrv.newCondition('AND'));\n      }\n\n      if (tag.key !== undefined && tag.value !== undefined) {\n        this.segments.push(this.uiSegmentSrv.newKey(tag.key));\n        this.segments.push(this.uiSegmentSrv.newOperator(tag.operator));\n        this.segments.push(this.uiSegmentSrv.newKeyValue(tag.value));\n      }\n    }\n\n    this.segments.push(this.uiSegmentSrv.newPlusButton());\n  }\n\n  getOptions(segment: { type: string }, index: number) {\n    if (segment.type === 'operator') {\n      return this.$q.when(this.uiSegmentSrv.newOperators(['=', '!=', '<', '>', '=~', '!~']));\n    }\n\n    if (segment.type === 'condition') {\n      return this.$q.when([this.uiSegmentSrv.newSegment('AND')]);\n    }\n\n    return this.datasourceSrv.get(this.variable.datasource).then(ds => {\n      const options: any = {};\n      let promise = null;\n\n      if (segment.type !== 'value') {\n        promise = ds.getTagKeys ? ds.getTagKeys() : Promise.resolve([]);\n      } else {\n        options.key = this.segments[index - 2].value;\n        promise = ds.getTagValues ? ds.getTagValues(options) : Promise.resolve([]);\n      }\n\n      return promise.then((results: any) => {\n        results = _.map(results, segment => {\n          return this.uiSegmentSrv.newSegment({ value: segment.text });\n        });\n\n        // add remove option for keys\n        if (segment.type === 'key') {\n          results.splice(0, 0, angular.copy(this.removeTagFilterSegment));\n        }\n        return results;\n      });\n    });\n  }\n\n  segmentChanged(segment: { value: any; type: string; cssClass: string }, index: number) {\n    this.segments[index] = segment;\n\n    // handle remove tag condition\n    if (segment.value === this.removeTagFilterSegment.value) {\n      this.segments.splice(index, 3);\n      if (this.segments.length === 0) {\n        this.segments.push(this.uiSegmentSrv.newPlusButton());\n      } else if (this.segments.length > 2) {\n        this.segments.splice(Math.max(index - 1, 0), 1);\n        if (this.segments[this.segments.length - 1].type !== 'plus-button') {\n          this.segments.push(this.uiSegmentSrv.newPlusButton());\n        }\n      }\n    } else {\n      if (segment.type === 'plus-button') {\n        if (index > 2) {\n          this.segments.splice(index, 0, this.uiSegmentSrv.newCondition('AND'));\n        }\n        this.segments.push(this.uiSegmentSrv.newOperator('='));\n        this.segments.push(this.uiSegmentSrv.newFake('select value', 'value', 'query-segment-value'));\n        segment.type = 'key';\n        segment.cssClass = 'query-segment-key';\n      }\n\n      if (index + 1 === this.segments.length) {\n        this.segments.push(this.uiSegmentSrv.newPlusButton());\n      }\n    }\n\n    this.updateVariableModel();\n  }\n\n  updateVariableModel() {\n    const filters: any[] = [];\n    let filterIndex = -1;\n    let hasFakes = false;\n\n    this.segments.forEach((segment: any) => {\n      if (segment.type === 'value' && segment.fake) {\n        hasFakes = true;\n        return;\n      }\n\n      switch (segment.type) {\n        case 'key': {\n          filters.push({ key: segment.value });\n          filterIndex += 1;\n          break;\n        }\n        case 'value': {\n          filters[filterIndex].value = segment.value;\n          break;\n        }\n        case 'operator': {\n          filters[filterIndex].operator = segment.value;\n          break;\n        }\n        case 'condition': {\n          filters[filterIndex].condition = segment.value;\n          break;\n        }\n      }\n    });\n\n    if (hasFakes) {\n      return;\n    }\n\n    this.variable.setFilters(filters);\n    this.variableSrv.variableUpdated(this.variable, true);\n  }\n}\n\nconst template = `\n<div class=\"gf-form-inline\">\n  <div class=\"gf-form\" ng-repeat=\"segment in ctrl.segments\">\n    <metric-segment segment=\"segment\" get-options=\"ctrl.getOptions(segment, $index)\"\n                    on-change=\"ctrl.segmentChanged(segment, $index)\"></metric-segment>\n  </div>\n</div>\n`;\n\nexport function adHocFiltersComponent() {\n  return {\n    restrict: 'E',\n    template: template,\n    controller: AdHocFiltersCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      variable: '=',\n      dashboard: '=',\n    },\n  };\n}\n\ncoreModule.directive('adHocFilters', adHocFiltersComponent);\n","import React, { PureComponent } from 'react';\nimport { Tooltip } from '@grafana/ui';\nimport { SlideDown } from 'app/core/components/Animations/SlideDown';\nimport { StoreState, FolderInfo } from 'app/types';\nimport { DashboardAcl, PermissionLevel, NewDashboardAclItem } from 'app/types/acl';\nimport {\n  getDashboardPermissions,\n  addDashboardPermission,\n  removeDashboardPermission,\n  updateDashboardPermission,\n} from '../../state/actions';\nimport PermissionList from 'app/core/components/PermissionList/PermissionList';\nimport AddPermission from 'app/core/components/PermissionList/AddPermission';\nimport PermissionsInfo from 'app/core/components/PermissionList/PermissionsInfo';\nimport { connectWithStore } from 'app/core/utils/connectWithReduxStore';\n\nexport interface Props {\n  dashboardId: number;\n  folder?: FolderInfo;\n  permissions: DashboardAcl[];\n  getDashboardPermissions: typeof getDashboardPermissions;\n  updateDashboardPermission: typeof updateDashboardPermission;\n  removeDashboardPermission: typeof removeDashboardPermission;\n  addDashboardPermission: typeof addDashboardPermission;\n}\n\nexport interface State {\n  isAdding: boolean;\n}\n\nexport class DashboardPermissions extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      isAdding: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.getDashboardPermissions(this.props.dashboardId);\n  }\n\n  onOpenAddPermissions = () => {\n    this.setState({ isAdding: true });\n  };\n\n  onRemoveItem = (item: DashboardAcl) => {\n    this.props.removeDashboardPermission(this.props.dashboardId, item);\n  };\n\n  onPermissionChanged = (item: DashboardAcl, level: PermissionLevel) => {\n    this.props.updateDashboardPermission(this.props.dashboardId, item, level);\n  };\n\n  onAddPermission = (newItem: NewDashboardAclItem) => {\n    return this.props.addDashboardPermission(this.props.dashboardId, newItem);\n  };\n\n  onCancelAddPermission = () => {\n    this.setState({ isAdding: false });\n  };\n\n  render() {\n    const { permissions, folder } = this.props;\n    const { isAdding } = this.state;\n\n    return (\n      <div>\n        <div className=\"dashboard-settings__header\">\n          <div className=\"page-action-bar\">\n            <h3 className=\"d-inline-block\">Permissions</h3>\n            <Tooltip placement=\"auto\" content={<PermissionsInfo />}>\n              <div className=\"page-sub-heading-icon\">\n                <i className=\"gicon gicon-question gicon--has-hover\" />\n              </div>\n            </Tooltip>\n            <div className=\"page-action-bar__spacer\" />\n            <button className=\"btn btn-primary pull-right\" onClick={this.onOpenAddPermissions} disabled={isAdding}>\n              Add Permission\n            </button>\n          </div>\n        </div>\n        <SlideDown in={isAdding}>\n          <AddPermission onAddPermission={this.onAddPermission} onCancel={this.onCancelAddPermission} />\n        </SlideDown>\n        <PermissionList\n          items={permissions}\n          onRemoveItem={this.onRemoveItem}\n          onPermissionChanged={this.onPermissionChanged}\n          isFetching={false}\n          folderInfo={folder}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: StoreState) => ({\n  permissions: state.dashboard.permissions,\n});\n\nconst mapDispatchToProps = {\n  getDashboardPermissions,\n  addDashboardPermission,\n  removeDashboardPermission,\n  updateDashboardPermission,\n};\n\nexport default connectWithStore(DashboardPermissions, mapStateToProps, mapDispatchToProps);\n","export { AdHocFiltersCtrl } from './AdHocFiltersCtrl';\n","import { coreModule } from 'app/core/core';\n\nexport class RowOptionsCtrl {\n  row: any;\n  source: any;\n  dismiss: any;\n  onUpdated: any;\n  showDelete: boolean;\n\n  /** @ngInject */\n  constructor() {\n    this.source = this.row;\n    this.row = this.row.getSaveModel();\n  }\n\n  update() {\n    this.source.title = this.row.title;\n    this.source.repeat = this.row.repeat;\n    this.onUpdated();\n    this.dismiss();\n  }\n}\n\nexport function rowOptionsDirective() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/features/dashboard/components/RowOptions/template.html',\n    controller: RowOptionsCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      row: '=',\n      dismiss: '&',\n      onUpdated: '&',\n    },\n  };\n}\n\ncoreModule.directive('rowOptions', rowOptionsDirective);\n","// Services\nimport './services/UnsavedChangesSrv';\nimport './services/DashboardLoaderSrv';\nimport './services/DashboardSrv';\n\n// Components\nimport './components/DashLinks';\nimport './components/DashExportModal';\nimport './components/DashNav';\nimport './components/ExportDataModal';\nimport './components/FolderPicker';\nimport './components/VersionHistory';\nimport './components/DashboardSettings';\nimport './components/SubMenu';\nimport './components/UnsavedChangesModal';\nimport './components/SaveModals';\nimport './components/ShareModal';\nimport './components/AdHocFilters';\nimport './components/RowOptions';\n\nimport DashboardPermissions from './components/DashboardPermissions/DashboardPermissions';\n\n// angular wrappers\nimport { react2AngularDirective } from 'app/core/utils/react2angular';\n\nreact2AngularDirective('dashboardPermissions', DashboardPermissions, ['dashboardId', 'folder']);\n","import _ from 'lodash';\nimport coreModule from '../../core/core_module';\nimport { BackendSrv } from '@grafana/runtime';\nimport { NavModelSrv } from 'app/core/nav_model_srv';\n\nexport class PlaylistsCtrl {\n  playlists: any;\n  navModel: any;\n\n  /** @ngInject */\n  constructor(private $scope: any, private backendSrv: BackendSrv, navModelSrv: NavModelSrv) {\n    this.navModel = navModelSrv.getNav('dashboards', 'playlists', 0);\n\n    backendSrv.get('/api/playlists').then((result: any) => {\n      this.playlists = result.map((item: any) => {\n        item.startUrl = `playlists/play/${item.id}`;\n        return item;\n      });\n    });\n  }\n\n  removePlaylistConfirmed(playlist: any) {\n    _.remove(this.playlists, { id: playlist.id });\n\n    this.backendSrv.delete('/api/playlists/' + playlist.id).then(\n      () => {\n        this.$scope.appEvent('alert-success', ['Playlist deleted', '']);\n      },\n      () => {\n        this.$scope.appEvent('alert-error', ['Unable to delete playlist', '']);\n        this.playlists.push(playlist);\n      }\n    );\n  }\n\n  removePlaylist(playlist: any) {\n    this.$scope.appEvent('confirm-modal', {\n      title: 'Delete',\n      text: 'Are you sure you want to delete playlist ' + playlist.name + '?',\n      yesText: 'Delete',\n      icon: 'fa-trash',\n      onConfirm: () => {\n        this.removePlaylistConfirmed(playlist);\n      },\n    });\n  }\n}\n\ncoreModule.controller('PlaylistsCtrl', PlaylistsCtrl);\n","import coreModule from '../../core/core_module';\nimport { BackendSrv } from 'app/core/services/backend_srv';\n\nexport class PlaylistSearchCtrl {\n  query: any;\n  tagsMode: boolean;\n\n  searchStarted: any;\n\n  /** @ngInject */\n  constructor($timeout: any, private backendSrv: BackendSrv) {\n    this.query = { query: '', tag: [], starred: false, limit: 20 };\n\n    $timeout(() => {\n      this.query.query = '';\n      this.query.type = 'dash-db';\n      this.searchDashboards();\n    }, 100);\n  }\n\n  searchDashboards() {\n    this.tagsMode = false;\n    const prom: any = {};\n\n    prom.promise = this.backendSrv.search(this.query).then(result => {\n      return {\n        dashboardResult: result,\n        tagResult: [],\n      };\n    });\n\n    this.searchStarted(prom);\n  }\n\n  showStarred() {\n    this.query.starred = !this.query.starred;\n    this.searchDashboards();\n  }\n\n  queryHasNoFilters() {\n    return this.query.query === '' && this.query.starred === false && this.query.tag.length === 0;\n  }\n\n  filterByTag(tag: any, evt: any) {\n    this.query.tag.push(tag);\n    this.searchDashboards();\n    if (evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n    }\n  }\n\n  getTags() {\n    const prom: any = {};\n    prom.promise = this.backendSrv.get('/api/dashboards/tags').then((result: any) => {\n      return {\n        dashboardResult: [],\n        tagResult: result,\n      } as any;\n    });\n\n    this.searchStarted(prom);\n  }\n}\n\nexport function playlistSearchDirective() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/features/playlist/partials/playlist_search.html',\n    controller: PlaylistSearchCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      searchStarted: '&',\n    },\n  };\n}\n\ncoreModule.directive('playlistSearch', playlistSearchDirective);\n","// Libraries\nimport _ from 'lodash';\n\n// Utils\nimport { toUrlParams } from 'app/core/utils/url';\nimport coreModule from '../../core/core_module';\nimport appEvents from 'app/core/app_events';\nimport locationUtil from 'app/core/utils/location_util';\nimport kbn from 'app/core/utils/kbn';\nimport { store } from 'app/store/store';\n\nexport const queryParamsToPreserve: { [key: string]: boolean } = {\n  kiosk: true,\n  autofitpanels: true,\n  orgId: true,\n};\n\nexport class PlaylistSrv {\n  private cancelPromise: any;\n  private dashboards: Array<{ url: string }>;\n  private index: number;\n  private interval: number;\n  private startUrl: string;\n  private numberOfLoops = 0;\n  private storeUnsub: () => void;\n  private validPlaylistUrl: string;\n  isPlaying: boolean;\n\n  /** @ngInject */\n  constructor(private $location: any, private $timeout: any, private backendSrv: any) {}\n\n  next() {\n    this.$timeout.cancel(this.cancelPromise);\n\n    const playedAllDashboards = this.index > this.dashboards.length - 1;\n    if (playedAllDashboards) {\n      this.numberOfLoops++;\n\n      // This does full reload of the playlist to keep memory in check due to existing leaks but at the same time\n      // we do not want page to flicker after each full loop.\n      if (this.numberOfLoops >= 3) {\n        window.location.href = this.startUrl;\n        return;\n      }\n      this.index = 0;\n    }\n\n    const dash = this.dashboards[this.index];\n    const queryParams = this.$location.search();\n    const filteredParams = _.pickBy(queryParams, (value: any, key: string) => queryParamsToPreserve[key]);\n    const nextDashboardUrl = locationUtil.stripBaseFromUrl(dash.url);\n\n    // this is done inside timeout to make sure digest happens after\n    // as this can be called from react\n    this.$timeout(() => {\n      this.$location.url(nextDashboardUrl + '?' + toUrlParams(filteredParams));\n    });\n\n    this.index++;\n    this.validPlaylistUrl = nextDashboardUrl;\n    this.cancelPromise = this.$timeout(() => this.next(), this.interval);\n  }\n\n  prev() {\n    this.index = Math.max(this.index - 2, 0);\n    this.next();\n  }\n\n  // Detect url changes not caused by playlist srv and stop playlist\n  storeUpdated() {\n    const state = store.getState();\n\n    if (state.location.path !== this.validPlaylistUrl) {\n      this.stop();\n    }\n  }\n\n  start(playlistId: number) {\n    this.stop();\n\n    this.startUrl = window.location.href;\n    this.index = 0;\n    this.isPlaying = true;\n\n    // setup location tracking\n    this.storeUnsub = store.subscribe(() => this.storeUpdated());\n    this.validPlaylistUrl = this.$location.path();\n\n    appEvents.emit('playlist-started');\n\n    return this.backendSrv.get(`/api/playlists/${playlistId}`).then((playlist: any) => {\n      return this.backendSrv.get(`/api/playlists/${playlistId}/dashboards`).then((dashboards: any) => {\n        this.dashboards = dashboards;\n        this.interval = kbn.interval_to_ms(playlist.interval);\n        this.next();\n      });\n    });\n  }\n\n  stop() {\n    if (this.isPlaying) {\n      const queryParams = this.$location.search();\n      if (queryParams.kiosk) {\n        appEvents.emit('toggle-kiosk-mode', { exit: true });\n      }\n    }\n\n    this.index = 0;\n    this.isPlaying = false;\n\n    if (this.storeUnsub) {\n      this.storeUnsub();\n    }\n\n    if (this.cancelPromise) {\n      this.$timeout.cancel(this.cancelPromise);\n    }\n\n    appEvents.emit('playlist-stopped');\n  }\n}\n\ncoreModule.service('playlistSrv', PlaylistSrv);\n","import _ from 'lodash';\nimport coreModule from '../../core/core_module';\nimport { ILocationService } from 'angular';\nimport { BackendSrv } from 'app/core/services/backend_srv';\nimport { NavModelSrv } from 'app/core/nav_model_srv';\n\nexport interface PlaylistItem {\n  value: any;\n  id: any;\n  type: string;\n  order: any;\n}\nexport class PlaylistEditCtrl {\n  filteredDashboards: any = [];\n  filteredTags: any = [];\n  searchQuery = '';\n  loading = false;\n  playlist: any = {\n    interval: '5m',\n  };\n\n  playlistItems: any = [];\n  dashboardresult: any = [];\n  tagresult: any = [];\n  navModel: any;\n  isNew: boolean;\n\n  /** @ngInject */\n  constructor(\n    private $scope: any,\n    private backendSrv: BackendSrv,\n    private $location: ILocationService,\n    $route: any,\n    navModelSrv: NavModelSrv\n  ) {\n    this.navModel = navModelSrv.getNav('dashboards', 'playlists', 0);\n    this.isNew = !$route.current.params.id;\n\n    if ($route.current.params.id) {\n      const playlistId = $route.current.params.id;\n\n      backendSrv.get('/api/playlists/' + playlistId).then((result: any) => {\n        this.playlist = result;\n      });\n\n      backendSrv.get('/api/playlists/' + playlistId + '/items').then((result: any) => {\n        this.playlistItems = result;\n      });\n    }\n  }\n\n  filterFoundPlaylistItems() {\n    this.filteredDashboards = _.reject(this.dashboardresult, playlistItem => {\n      return _.find(this.playlistItems, listPlaylistItem => {\n        return parseInt(listPlaylistItem.value, 10) === playlistItem.id;\n      });\n    });\n\n    this.filteredTags = _.reject(this.tagresult, tag => {\n      return _.find(this.playlistItems, listPlaylistItem => {\n        return listPlaylistItem.value === tag.term;\n      });\n    });\n  }\n\n  addPlaylistItem(playlistItem: PlaylistItem) {\n    playlistItem.value = playlistItem.id.toString();\n    playlistItem.type = 'dashboard_by_id';\n    playlistItem.order = this.playlistItems.length + 1;\n\n    this.playlistItems.push(playlistItem);\n    this.filterFoundPlaylistItems();\n  }\n\n  addTagPlaylistItem(tag: { term: any }) {\n    const playlistItem: any = {\n      value: tag.term,\n      type: 'dashboard_by_tag',\n      order: this.playlistItems.length + 1,\n      title: tag.term,\n    };\n\n    this.playlistItems.push(playlistItem);\n    this.filterFoundPlaylistItems();\n  }\n\n  removePlaylistItem(playlistItem: PlaylistItem) {\n    _.remove(this.playlistItems, listedPlaylistItem => {\n      return playlistItem === listedPlaylistItem;\n    });\n    this.filterFoundPlaylistItems();\n  }\n\n  savePlaylist(playlist: any, playlistItems: PlaylistItem[]) {\n    let savePromise;\n\n    playlist.items = playlistItems;\n\n    savePromise = playlist.id\n      ? this.backendSrv.put('/api/playlists/' + playlist.id, playlist)\n      : this.backendSrv.post('/api/playlists', playlist);\n\n    savePromise.then(\n      () => {\n        this.$scope.appEvent('alert-success', ['Playlist saved', '']);\n        this.$location.path('/playlists');\n      },\n      () => {\n        this.$scope.appEvent('alert-error', ['Unable to save playlist', '']);\n      }\n    );\n  }\n\n  isPlaylistEmpty() {\n    return !this.playlistItems.length;\n  }\n\n  backToList() {\n    this.$location.path('/playlists');\n  }\n\n  searchStarted(promise: Promise<any>) {\n    promise.then((data: any) => {\n      this.dashboardresult = data.dashboardResult;\n      this.tagresult = data.tagResult;\n      this.filterFoundPlaylistItems();\n    });\n  }\n\n  movePlaylistItem(playlistItem: PlaylistItem, offset: number) {\n    const currentPosition = this.playlistItems.indexOf(playlistItem);\n    const newPosition = currentPosition + offset;\n\n    if (newPosition >= 0 && newPosition < this.playlistItems.length) {\n      this.playlistItems.splice(currentPosition, 1);\n      this.playlistItems.splice(newPosition, 0, playlistItem);\n    }\n  }\n\n  movePlaylistItemUp(playlistItem: PlaylistItem) {\n    this.movePlaylistItem(playlistItem, -1);\n  }\n\n  movePlaylistItemDown(playlistItem: PlaylistItem) {\n    this.movePlaylistItem(playlistItem, 1);\n  }\n}\n\ncoreModule.controller('PlaylistEditCtrl', PlaylistEditCtrl);\n","import angular from 'angular';\nimport { PlaylistSrv } from './playlist_srv';\n\n/** @ngInject */\nfunction grafanaRoutes($routeProvider: any) {\n  $routeProvider\n    .when('/playlists', {\n      templateUrl: 'public/app/features/playlist/partials/playlists.html',\n      controllerAs: 'ctrl',\n      controller: 'PlaylistsCtrl',\n    })\n    .when('/playlists/create', {\n      templateUrl: 'public/app/features/playlist/partials/playlist.html',\n      controllerAs: 'ctrl',\n      controller: 'PlaylistEditCtrl',\n    })\n    .when('/playlists/edit/:id', {\n      templateUrl: 'public/app/features/playlist/partials/playlist.html',\n      controllerAs: 'ctrl',\n      controller: 'PlaylistEditCtrl',\n    })\n    .when('/playlists/play/:id', {\n      template: '',\n      resolve: {\n        init: (playlistSrv: PlaylistSrv, $route: any) => {\n          const playlistId = $route.current.params.id;\n          playlistSrv.start(playlistId);\n        },\n      },\n    });\n}\n\nangular.module('grafana.routes').config(grafanaRoutes);\n","import './playlists_ctrl';\nimport './playlist_search';\nimport './playlist_srv';\nimport './playlist_edit_ctrl';\nimport './playlist_routes';\n","import { coreModule } from 'app/core/core';\nimport { AngularPanelMenuItem } from '@grafana/ui';\n\nconst template = `\n<span class=\"panel-title\">\n  <span class=\"icon-gf panel-alert-icon\"></span>\n  <span class=\"panel-title-text\">{{ctrl.panel.title | interpolateTemplateVars:this}}</span>\n  <span class=\"panel-menu-container dropdown\">\n    <span class=\"fa fa-caret-down panel-menu-toggle\" data-toggle=\"dropdown\"></span>\n    <ul class=\"dropdown-menu dropdown-menu--menu panel-menu\" role=\"menu\">\n    </ul>\n  </span>\n  <span class=\"panel-time-info\" ng-if=\"ctrl.timeInfo\"><i class=\"fa fa-clock-o\"></i> {{ctrl.timeInfo}}</span>\n</span>`;\n\nfunction renderMenuItem(item: AngularPanelMenuItem, ctrl: any) {\n  let html = '';\n  let listItemClass = '';\n\n  if (item.divider) {\n    return '<li class=\"divider\"></li>';\n  }\n\n  if (item.submenu) {\n    listItemClass = 'dropdown-submenu';\n  }\n\n  html += `<li class=\"${listItemClass}\"><a `;\n\n  if (item.click) {\n    html += ` ng-click=\"${item.click}\"`;\n  }\n  if (item.href) {\n    html += ` href=\"${item.href}\"`;\n  }\n\n  html += `><i class=\"${item.icon}\"></i>`;\n  html += `<span class=\"dropdown-item-text\" aria-label=\"${item.text} panel menu item\">${item.text}</span>`;\n\n  if (item.shortcut) {\n    html += `<span class=\"dropdown-menu-item-shortcut\">${item.shortcut}</span>`;\n  }\n\n  html += `</a>`;\n\n  if (item.submenu) {\n    html += '<ul class=\"dropdown-menu dropdown-menu--menu panel-menu\">';\n    for (const subitem of item.submenu) {\n      html += renderMenuItem(subitem, ctrl);\n    }\n    html += '</ul>';\n  }\n\n  html += `</li>`;\n  return html;\n}\n\nasync function createMenuTemplate(ctrl: any) {\n  let html = '';\n\n  for (const item of await ctrl.getMenu()) {\n    html += renderMenuItem(item, ctrl);\n  }\n\n  return html;\n}\n\n/** @ngInject */\nfunction panelHeader($compile: any) {\n  return {\n    restrict: 'E',\n    template: template,\n    link: (scope: any, elem: any, attrs: any) => {\n      const menuElem = elem.find('.panel-menu');\n      let menuScope: any;\n      let isDragged: boolean;\n\n      elem.click(async (evt: any) => {\n        const targetClass = evt.target.className;\n\n        // remove existing scope\n        if (menuScope) {\n          menuScope.$destroy();\n        }\n\n        menuScope = scope.$new();\n        const menuHtml = await createMenuTemplate(scope.ctrl);\n        menuElem.html(menuHtml);\n        $compile(menuElem)(menuScope);\n\n        if (targetClass.indexOf('panel-title-text') >= 0 || targetClass.indexOf('panel-title') >= 0) {\n          togglePanelMenu(evt);\n        }\n      });\n\n      function togglePanelMenu(e: any) {\n        if (!isDragged) {\n          e.stopPropagation();\n          elem.find('[data-toggle=dropdown]').dropdown('toggle');\n        }\n      }\n\n      let mouseX: number, mouseY: number;\n      elem.mousedown((e: any) => {\n        mouseX = e.pageX;\n        mouseY = e.pageY;\n      });\n\n      elem.mouseup((e: any) => {\n        if (mouseX === e.pageX && mouseY === e.pageY) {\n          isDragged = false;\n        } else {\n          isDragged = true;\n        }\n      });\n    },\n  };\n}\n\ncoreModule.directive('panelHeader', panelHeader);\n","import angular from 'angular';\nimport $ from 'jquery';\n// @ts-ignore\nimport Drop from 'tether-drop';\n// @ts-ignore\nimport baron from 'baron';\n\nconst module = angular.module('grafana.directives');\n\nconst panelTemplate = `\n  <div class=\"panel-container\" ng-class=\"{'panel-container--no-title': !ctrl.panel.title.length}\">\n      <div class=\"panel-header\" ng-class=\"{'grid-drag-handle': !ctrl.panel.fullscreen}\">\n        <span class=\"panel-info-corner\">\n          <i class=\"fa\"></i>\n          <span class=\"panel-info-corner-inner\"></span>\n        </span>\n\n        <span class=\"panel-loading\" ng-show=\"ctrl.loading\">\n          <i class=\"fa fa-spinner fa-spin\"></i>\n        </span>\n\n        <panel-header class=\"panel-title-container\" panel-ctrl=\"ctrl\" aria-label=\"Panel Title\"></panel-header>\n      </div>\n\n      <div class=\"panel-content\">\n        <ng-transclude class=\"panel-height-helper\"></ng-transclude>\n      </div>\n    </div>\n  </div>\n`;\n\nmodule.directive('grafanaPanel', ($rootScope, $document, $timeout) => {\n  return {\n    restrict: 'E',\n    template: panelTemplate,\n    transclude: true,\n    scope: { ctrl: '=' },\n    link: (scope: any, elem) => {\n      const panelContainer = elem.find('.panel-container');\n      const panelContent = elem.find('.panel-content');\n      const cornerInfoElem = elem.find('.panel-info-corner');\n      const ctrl = scope.ctrl;\n      let infoDrop: any;\n      let panelScrollbar: any;\n\n      // the reason for handling these classes this way is for performance\n      // limit the watchers on panels etc\n      let transparentLastState = false;\n      let lastHasAlertRule = false;\n      let lastAlertState: boolean;\n      let hasAlertRule;\n\n      function mouseEnter() {\n        panelContainer.toggleClass('panel-hover-highlight', true);\n        ctrl.dashboard.setPanelFocus(ctrl.panel.id);\n      }\n\n      function mouseLeave() {\n        panelContainer.toggleClass('panel-hover-highlight', false);\n        ctrl.dashboard.setPanelFocus(0);\n      }\n\n      function resizeScrollableContent() {\n        if (panelScrollbar) {\n          panelScrollbar.update();\n        }\n      }\n\n      // set initial transparency\n      if (ctrl.panel.transparent) {\n        transparentLastState = true;\n        panelContainer.addClass('panel-transparent');\n      }\n\n      // update scrollbar after mounting\n      ctrl.events.on('component-did-mount', () => {\n        if (ctrl.__proto__.constructor.scrollable) {\n          const scrollRootClass = 'baron baron__root baron__clipper panel-content--scrollable';\n          const scrollerClass = 'baron__scroller';\n          const scrollBarHTML = `\n            <div class=\"baron__track\">\n              <div class=\"baron__bar\"></div>\n            </div>\n          `;\n\n          const scrollRoot = panelContent;\n          const scroller = panelContent.find(':first').find(':first');\n\n          scrollRoot.addClass(scrollRootClass);\n          $(scrollBarHTML).appendTo(scrollRoot);\n          scroller.addClass(scrollerClass);\n\n          panelScrollbar = baron({\n            root: scrollRoot[0],\n            scroller: scroller[0],\n            bar: '.baron__bar',\n            barOnCls: '_scrollbar',\n            scrollingCls: '_scrolling',\n          });\n\n          panelScrollbar.scroll();\n        }\n      });\n\n      ctrl.events.on('panel-size-changed', () => {\n        ctrl.calculatePanelHeight(panelContainer[0].offsetHeight);\n        $timeout(() => {\n          resizeScrollableContent();\n          ctrl.render();\n        });\n      });\n\n      ctrl.events.on('view-mode-changed', () => {\n        // first wait one pass for dashboard fullscreen view mode to take effect (classses being applied)\n        setTimeout(() => {\n          // then recalc style\n          ctrl.calculatePanelHeight(panelContainer[0].offsetHeight);\n          // then wait another cycle (this might not be needed)\n          $timeout(() => {\n            ctrl.render();\n            resizeScrollableContent();\n          });\n        }, 10);\n      });\n\n      ctrl.events.on('render', () => {\n        // set initial height\n        if (!ctrl.height) {\n          ctrl.calculatePanelHeight(panelContainer[0].offsetHeight);\n        }\n\n        if (transparentLastState !== ctrl.panel.transparent) {\n          panelContainer.toggleClass('panel-transparent', ctrl.panel.transparent === true);\n          transparentLastState = ctrl.panel.transparent;\n        }\n\n        hasAlertRule = ctrl.panel.alert !== undefined;\n        if (lastHasAlertRule !== hasAlertRule) {\n          panelContainer.toggleClass('panel-has-alert', hasAlertRule);\n\n          lastHasAlertRule = hasAlertRule;\n        }\n\n        if (ctrl.alertState) {\n          if (lastAlertState) {\n            panelContainer.removeClass('panel-alert-state--' + lastAlertState);\n          }\n\n          if (\n            ctrl.alertState.state === 'ok' ||\n            ctrl.alertState.state === 'alerting' ||\n            ctrl.alertState.state === 'pending'\n          ) {\n            panelContainer.addClass('panel-alert-state--' + ctrl.alertState.state);\n          }\n\n          lastAlertState = ctrl.alertState.state;\n        } else if (lastAlertState) {\n          panelContainer.removeClass('panel-alert-state--' + lastAlertState);\n          lastAlertState = null;\n        }\n      });\n\n      function updatePanelCornerInfo() {\n        const cornerMode = ctrl.getInfoMode();\n        cornerInfoElem[0].className = 'panel-info-corner panel-info-corner--' + cornerMode;\n\n        if (cornerMode) {\n          if (infoDrop) {\n            infoDrop.destroy();\n          }\n\n          infoDrop = new Drop({\n            target: cornerInfoElem[0],\n            content: () => {\n              return ctrl.getInfoContent({ mode: 'tooltip' });\n            },\n            classes: ctrl.error ? 'drop-error' : 'drop-help',\n            openOn: 'hover',\n            hoverOpenDelay: 100,\n            tetherOptions: {\n              attachment: 'bottom left',\n              targetAttachment: 'top left',\n              constraints: [\n                {\n                  to: 'window',\n                  attachment: 'together',\n                  pin: true,\n                },\n              ],\n            },\n          });\n        }\n      }\n\n      scope.$watchGroup(['ctrl.error', 'ctrl.panel.description'], updatePanelCornerInfo);\n      scope.$watchCollection('ctrl.panel.links', updatePanelCornerInfo);\n\n      elem.on('mouseenter', mouseEnter);\n      elem.on('mouseleave', mouseLeave);\n\n      scope.$on('$destroy', () => {\n        elem.off();\n        cornerInfoElem.off();\n\n        if (infoDrop) {\n          infoDrop.destroy();\n        }\n\n        if (panelScrollbar) {\n          panelScrollbar.dispose();\n        }\n      });\n    },\n  };\n});\n\nmodule.directive('panelHelpCorner', $rootScope => {\n  return {\n    restrict: 'E',\n    template: `\n    <span class=\"alert-error panel-error small pointer\" ng-if=\"ctrl.error\" ng-click=\"ctrl.openInspector()\">\n    <span data-placement=\"top\" bs-tooltip=\"ctrl.error\">\n    <i class=\"fa fa-exclamation\"></i><span class=\"panel-error-arrow\"></span>\n    </span>\n    </span>\n    `,\n    link: (scope, elem) => {},\n  };\n});\n","import angular from 'angular';\n\nconst module = angular.module('grafana.directives');\n\nexport class QueryRowCtrl {\n  target: any;\n  queryCtrl: any;\n  panelCtrl: any;\n  panel: any;\n  hasTextEditMode: boolean;\n\n  constructor() {\n    this.panelCtrl = this.queryCtrl.panelCtrl;\n    this.target = this.queryCtrl.target;\n    this.panel = this.panelCtrl.panel;\n\n    if (this.hasTextEditMode && this.queryCtrl.toggleEditorMode) {\n      // expose this function to react parent component\n      this.panelCtrl.toggleEditorMode = this.queryCtrl.toggleEditorMode.bind(this.queryCtrl);\n    }\n\n    if (this.queryCtrl.getCollapsedText) {\n      // expose this function to react parent component\n      this.panelCtrl.getCollapsedText = this.queryCtrl.getCollapsedText.bind(this.queryCtrl);\n    }\n  }\n}\n\n/** @ngInject */\nfunction queryEditorRowDirective() {\n  return {\n    restrict: 'E',\n    controller: QueryRowCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    templateUrl: 'public/app/features/panel/partials/query_editor_row.html',\n    transclude: true,\n    scope: {\n      queryCtrl: '=',\n      canCollapse: '=',\n      hasTextEditMode: '=',\n    },\n  };\n}\n\nmodule.directive('queryEditorRow', queryEditorRowDirective);\n","import { coreModule } from 'app/core/core';\nimport { VariableSrv } from 'app/features/templating/variable_srv';\nconst template = `\n<div class=\"gf-form-select-wrapper max-width-18\">\n  <select class=\"gf-form-input\" ng-model=\"panel.repeat\" ng-options=\"f.value as f.text for f in variables\" ng-change=\"optionChanged()\">\n  <option value=\"\"></option>\n</div>\n`;\n\n/** @ngInject */\nfunction dashRepeatOptionDirective(variableSrv: VariableSrv) {\n  return {\n    restrict: 'E',\n    template: template,\n    scope: {\n      panel: '=',\n    },\n    link: (scope: any, element: JQuery) => {\n      element.css({ display: 'block', width: '100%' });\n\n      scope.variables = variableSrv.variables.map((item: any) => {\n        return { text: item.name, value: item.name };\n      });\n\n      if (scope.variables.length === 0) {\n        scope.variables.unshift({\n          text: 'No template variables found',\n          value: null,\n        });\n      }\n\n      scope.variables.unshift({ text: 'Disabled', value: null });\n\n      // if repeat is set and no direction set to horizontal\n      if (scope.panel.repeat && !scope.panel.repeatDirection) {\n        scope.panel.repeatDirection = 'h';\n      }\n\n      scope.optionChanged = () => {\n        if (scope.panel.repeat) {\n          scope.panel.repeatDirection = 'h';\n        }\n      };\n    },\n  };\n}\n\ncoreModule.directive('dashRepeatOption', dashRepeatOptionDirective);\n","import angular from 'angular';\n\nconst directiveModule = angular.module('grafana.directives');\nconst directiveCache: any = {};\n\n/** @ngInject */\nfunction panelEditorTab(dynamicDirectiveSrv: any) {\n  return dynamicDirectiveSrv.create({\n    scope: {\n      ctrl: '=',\n      editorTab: '=',\n    },\n    directive: (scope: any) => {\n      const pluginId = scope.ctrl.pluginId;\n      const tabName = scope.editorTab.title\n        .toLowerCase()\n        .replace(' ', '-')\n        .replace('&', '')\n        .replace(' ', '')\n        .replace(' ', '-');\n\n      if (directiveCache[pluginId]) {\n        if (directiveCache[pluginId][tabName]) {\n          return directiveCache[pluginId][tabName];\n        }\n      } else {\n        directiveCache[pluginId] = [];\n      }\n\n      const result = {\n        fn: () => scope.editorTab.directiveFn(),\n        name: `panel-editor-tab-${pluginId}${tabName}`,\n      };\n\n      directiveCache[pluginId][tabName] = result;\n\n      return result;\n    },\n  });\n}\n\ndirectiveModule.directive('panelEditorTab', panelEditorTab);\n","import angular from 'angular';\nimport _ from 'lodash';\nimport './link_srv';\nimport { BackendSrv } from 'app/core/services/backend_srv';\n\nfunction panelLinksEditor() {\n  return {\n    scope: {\n      panel: '=',\n    },\n    restrict: 'E',\n    controller: 'PanelLinksEditorCtrl',\n    templateUrl: 'public/app/features/panel/panellinks/module.html',\n    link: () => {},\n  };\n}\n\nexport class PanelLinksEditorCtrl {\n  /** @ngInject */\n  constructor($scope: any, backendSrv: BackendSrv) {\n    $scope.panel.links = $scope.panel.links || [];\n\n    $scope.addLink = () => {\n      $scope.panel.links.push({\n        type: 'dashboard',\n      });\n    };\n\n    $scope.searchDashboards = (queryStr: string, callback: Function) => {\n      backendSrv.search({ query: queryStr }).then(hits => {\n        const dashboards = _.map(hits, dash => {\n          return dash.title;\n        });\n\n        callback(dashboards);\n      });\n    };\n\n    $scope.dashboardChanged = (link: any) => {\n      backendSrv.search({ query: link.dashboard }).then(hits => {\n        const dashboard: any = _.find(hits, { title: link.dashboard });\n        if (dashboard) {\n          if (dashboard.url) {\n            link.url = dashboard.url;\n          } else {\n            // To support legacy url's\n            link.dashUri = dashboard.uri;\n          }\n          link.title = dashboard.title;\n        }\n      });\n    };\n\n    $scope.deleteLink = (link: any) => {\n      $scope.panel.links = _.without($scope.panel.links, link);\n    };\n  }\n}\n\nangular\n  .module('grafana.directives')\n  .directive('panelLinksEditor', panelLinksEditor)\n  .controller('PanelLinksEditorCtrl', PanelLinksEditorCtrl);\n","import angular from 'angular';\nimport config from 'app/core/config';\nimport { BackendSrv } from 'app/core/services/backend_srv';\n\nexport class SelectOrgCtrl {\n  /** @ngInject */\n  constructor($scope: any, backendSrv: BackendSrv, contextSrv: any) {\n    contextSrv.sidemenu = false;\n\n    $scope.navModel = {\n      main: {\n        icon: 'gicon gicon-branding',\n        subTitle: 'Preferences',\n        text: 'Select active organization',\n      },\n    };\n\n    $scope.init = () => {\n      $scope.getUserOrgs();\n    };\n\n    $scope.getUserOrgs = () => {\n      backendSrv.get('/api/user/orgs').then((orgs: any) => {\n        $scope.orgs = orgs;\n      });\n    };\n\n    $scope.setUsingOrg = (org: any) => {\n      backendSrv.post('/api/user/using/' + org.orgId).then(() => {\n        window.location.href = config.appSubUrl + '/';\n      });\n    };\n\n    $scope.init();\n  }\n}\n\nangular.module('grafana.controllers').controller('SelectOrgCtrl', SelectOrgCtrl);\n","import './panel_header';\nimport './panel_directive';\nimport './query_ctrl';\nimport './panel_editor_tab';\nimport './query_editor_row';\nimport './repeat_option';\nimport './panellinks/module';\n","import angular from 'angular';\nimport config from 'app/core/config';\nimport { BackendSrv } from 'app/core/services/backend_srv';\nimport { NavModelSrv } from 'app/core/core';\n\nexport class NewOrgCtrl {\n  /** @ngInject */\n  constructor($scope: any, $http: any, backendSrv: BackendSrv, navModelSrv: NavModelSrv) {\n    $scope.navModel = navModelSrv.getNav('admin', 'global-orgs', 0);\n    $scope.newOrg = { name: '' };\n\n    $scope.createOrg = () => {\n      backendSrv.post('/api/orgs/', $scope.newOrg).then((result: any) => {\n        backendSrv.post('/api/user/using/' + result.orgId).then(() => {\n          window.location.href = config.appSubUrl + '/org';\n        });\n      });\n    };\n  }\n}\n\nangular.module('grafana.controllers').controller('NewOrgCtrl', NewOrgCtrl);\n","import coreModule from 'app/core/core_module';\nimport { BackendSrv } from 'app/core/services/backend_srv';\nimport { NavModelSrv } from 'app/core/core';\nimport { ILocationService } from 'angular';\n\nexport class UserInviteCtrl {\n  navModel: any;\n  invite: any;\n  inviteForm: any;\n\n  /** @ngInject */\n  constructor(private backendSrv: BackendSrv, navModelSrv: NavModelSrv, private $location: ILocationService) {\n    this.navModel = navModelSrv.getNav('cfg', 'users', 0);\n\n    this.invite = {\n      name: '',\n      email: '',\n      role: 'Editor',\n      sendEmail: true,\n    };\n  }\n\n  sendInvite() {\n    if (!this.inviteForm.$valid) {\n      return;\n    }\n\n    return this.backendSrv.post('/api/org/invites', this.invite).then(() => {\n      this.$location.path('org/users/');\n    });\n  }\n}\n\ncoreModule.controller('UserInviteCtrl', UserInviteCtrl);\n","import './SelectOrgCtrl';\nimport './NewOrgCtrl';\nimport './UserInviteCtrl';\n","import { BackendSrv } from 'app/core/services/backend_srv';\nimport { NavModelSrv } from 'app/core/core';\nimport tags from 'app/core/utils/tags';\n\nexport default class AdminListUsersCtrl {\n  users: any;\n  pages: any[] = [];\n  perPage = 50;\n  page = 1;\n  totalPages: number;\n  showPaging = false;\n  query: any;\n  navModel: any;\n\n  /** @ngInject */\n  constructor(private backendSrv: BackendSrv, navModelSrv: NavModelSrv) {\n    this.navModel = navModelSrv.getNav('admin', 'global-users', 0);\n    this.query = '';\n    this.getUsers();\n  }\n\n  getUsers() {\n    this.backendSrv\n      .get(`/api/users/search?perpage=${this.perPage}&page=${this.page}&query=${this.query}`)\n      .then((result: any) => {\n        this.users = result.users;\n        this.page = result.page;\n        this.perPage = result.perPage;\n        this.totalPages = Math.ceil(result.totalCount / result.perPage);\n        this.showPaging = this.totalPages > 1;\n        this.pages = [];\n\n        for (let i = 1; i < this.totalPages + 1; i++) {\n          this.pages.push({ page: i, current: i === this.page });\n        }\n\n        this.addUsersAuthLabels();\n      });\n  }\n\n  navigateToPage(page: any) {\n    this.page = page.page;\n    this.getUsers();\n  }\n\n  addUsersAuthLabels() {\n    for (const user of this.users) {\n      user.authLabel = getAuthLabel(user);\n      user.authLabelStyle = getAuthLabelStyle(user.authLabel);\n    }\n  }\n}\n\nfunction getAuthLabel(user: any) {\n  if (user.authLabels && user.authLabels.length) {\n    return user.authLabels[0];\n  }\n  return '';\n}\n\nfunction getAuthLabelStyle(label: string) {\n  if (label === 'LDAP' || !label) {\n    return {};\n  }\n\n  const { color, borderColor } = tags.getTagColorsFromName(label);\n  return {\n    'background-color': color,\n    'border-color': borderColor,\n  };\n}\n","import _ from 'lodash';\nimport { dateTime } from '@grafana/data';\nimport { BackendSrv } from 'app/core/services/backend_srv';\nimport { NavModelSrv } from 'app/core/core';\nimport { User } from 'app/core/services/context_srv';\nimport { UserSession } from 'app/types';\n\nexport default class AdminEditUserCtrl {\n  /** @ngInject */\n  constructor($scope: any, $routeParams: any, backendSrv: BackendSrv, $location: any, navModelSrv: NavModelSrv) {\n    $scope.user = {};\n    $scope.sessions = [];\n    $scope.newOrg = { name: '', role: 'Editor' };\n    $scope.permissions = {};\n    $scope.navModel = navModelSrv.getNav('admin', 'global-users', 0);\n\n    $scope.init = () => {\n      if ($routeParams.id) {\n        $scope.getUser($routeParams.id);\n        $scope.getUserSessions($routeParams.id);\n        $scope.getUserOrgs($routeParams.id);\n      }\n    };\n\n    $scope.getUser = (id: number) => {\n      backendSrv.get('/api/users/' + id).then((user: User) => {\n        $scope.user = user;\n        $scope.user_id = id;\n        $scope.permissions.isGrafanaAdmin = user.isGrafanaAdmin;\n      });\n    };\n\n    $scope.getUserSessions = (id: number) => {\n      backendSrv.get('/api/admin/users/' + id + '/auth-tokens').then((sessions: UserSession[]) => {\n        sessions.reverse();\n\n        $scope.sessions = sessions.map((session: UserSession) => {\n          return {\n            id: session.id,\n            isActive: session.isActive,\n            seenAt: dateTime(session.seenAt).fromNow(),\n            createdAt: dateTime(session.createdAt).format('MMMM DD, YYYY'),\n            clientIp: session.clientIp,\n            browser: session.browser,\n            browserVersion: session.browserVersion,\n            os: session.os,\n            osVersion: session.osVersion,\n            device: session.device,\n          };\n        });\n      });\n    };\n\n    $scope.revokeUserSession = (tokenId: number) => {\n      backendSrv\n        .post('/api/admin/users/' + $scope.user_id + '/revoke-auth-token', {\n          authTokenId: tokenId,\n        })\n        .then(() => {\n          $scope.sessions = $scope.sessions.filter((session: UserSession) => {\n            if (session.id === tokenId) {\n              return false;\n            }\n            return true;\n          });\n        });\n    };\n\n    $scope.revokeAllUserSessions = (tokenId: number) => {\n      backendSrv.post('/api/admin/users/' + $scope.user_id + '/logout').then(() => {\n        $scope.sessions = [];\n      });\n    };\n\n    $scope.setPassword = () => {\n      if (!$scope.passwordForm.$valid) {\n        return;\n      }\n\n      const payload = { password: $scope.password };\n      backendSrv.put('/api/admin/users/' + $scope.user_id + '/password', payload).then(() => {\n        $location.path('/admin/users');\n      });\n    };\n\n    $scope.updatePermissions = () => {\n      const payload = $scope.permissions;\n\n      backendSrv.put('/api/admin/users/' + $scope.user_id + '/permissions', payload);\n    };\n\n    $scope.create = () => {\n      if (!$scope.userForm.$valid) {\n        return;\n      }\n\n      backendSrv.post('/api/admin/users', $scope.user).then(() => {\n        $location.path('/admin/users');\n      });\n    };\n\n    $scope.getUserOrgs = (id: number) => {\n      backendSrv.get('/api/users/' + id + '/orgs').then((orgs: any) => {\n        $scope.orgs = orgs;\n      });\n    };\n\n    $scope.update = () => {\n      if (!$scope.userForm.$valid) {\n        return;\n      }\n\n      backendSrv.put('/api/users/' + $scope.user_id, $scope.user).then(() => {\n        $location.path('/admin/users');\n      });\n    };\n\n    $scope.updateOrgUser = (orgUser: { orgId: string }) => {\n      backendSrv.patch('/api/orgs/' + orgUser.orgId + '/users/' + $scope.user_id, orgUser).then(() => {});\n    };\n\n    $scope.removeOrgUser = (orgUser: { orgId: string }) => {\n      backendSrv.delete('/api/orgs/' + orgUser.orgId + '/users/' + $scope.user_id).then(() => {\n        $scope.getUser($scope.user_id);\n        $scope.getUserOrgs($scope.user_id);\n      });\n    };\n\n    $scope.orgsSearchCache = [];\n\n    $scope.searchOrgs = (queryStr: any, callback: any) => {\n      if ($scope.orgsSearchCache.length > 0) {\n        callback(_.map($scope.orgsSearchCache, 'name'));\n        return;\n      }\n\n      backendSrv.get('/api/orgs', { query: '' }).then((result: any) => {\n        $scope.orgsSearchCache = result;\n        callback(_.map(result, 'name'));\n      });\n    };\n\n    $scope.addOrgUser = () => {\n      if (!$scope.addOrgForm.$valid) {\n        return;\n      }\n\n      const orgInfo: any = _.find($scope.orgsSearchCache, {\n        name: $scope.newOrg.name,\n      });\n\n      if (!orgInfo) {\n        return;\n      }\n\n      $scope.newOrg.loginOrEmail = $scope.user.login;\n\n      backendSrv.post('/api/orgs/' + orgInfo.id + '/users/', $scope.newOrg).then(() => {\n        $scope.getUser($scope.user_id);\n        $scope.getUserOrgs($scope.user_id);\n      });\n    };\n\n    $scope.deleteUser = (user: any) => {\n      $scope.appEvent('confirm-modal', {\n        title: 'Delete',\n        text: 'Do you want to delete ' + user.login + '?',\n        icon: 'fa-trash',\n        yesText: 'Delete',\n        onConfirm: () => {\n          backendSrv.delete('/api/admin/users/' + user.id).then(() => {\n            $location.path('/admin/users');\n          });\n        },\n      });\n    };\n\n    $scope.disableUser = (event: any) => {\n      const user = $scope.user;\n\n      // External user can not be disabled\n      if (user.isExternal) {\n        event.preventDefault();\n        event.stopPropagation();\n        return;\n      }\n\n      const actionEndpoint = user.isDisabled ? '/enable' : '/disable';\n      backendSrv.post('/api/admin/users/' + user.id + actionEndpoint).then(() => {\n        $scope.init();\n      });\n    };\n\n    $scope.init();\n  }\n}\n","import { BackendSrv } from 'app/core/services/backend_srv';\nimport { NavModelSrv } from 'app/core/core';\n\nexport default class AdminListOrgsCtrl {\n  /** @ngInject */\n  constructor($scope: any, backendSrv: BackendSrv, navModelSrv: NavModelSrv) {\n    $scope.init = () => {\n      $scope.navModel = navModelSrv.getNav('admin', 'global-orgs', 0);\n      $scope.getOrgs();\n    };\n\n    $scope.getOrgs = () => {\n      backendSrv.get('/api/orgs').then((orgs: any) => {\n        $scope.orgs = orgs;\n      });\n    };\n\n    $scope.deleteOrg = (org: any) => {\n      $scope.appEvent('confirm-modal', {\n        title: 'Delete',\n        text: 'Do you want to delete organization ' + org.name + '?',\n        text2: 'All dashboards for this organization will be removed!',\n        icon: 'fa-trash',\n        yesText: 'Delete',\n        onConfirm: () => {\n          backendSrv.delete('/api/orgs/' + org.id).then(() => {\n            $scope.getOrgs();\n          });\n        },\n      });\n    };\n\n    $scope.init();\n  }\n}\n","import { BackendSrv } from 'app/core/services/backend_srv';\nimport { NavModelSrv } from 'app/core/core';\n\nexport default class AdminEditOrgCtrl {\n  /** @ngInject */\n  constructor($scope: any, $routeParams: any, backendSrv: BackendSrv, $location: any, navModelSrv: NavModelSrv) {\n    $scope.init = () => {\n      $scope.navModel = navModelSrv.getNav('admin', 'global-orgs', 0);\n\n      if ($routeParams.id) {\n        $scope.getOrg($routeParams.id);\n        $scope.getOrgUsers($routeParams.id);\n      }\n    };\n\n    $scope.getOrg = (id: number) => {\n      backendSrv.get('/api/orgs/' + id).then((org: any) => {\n        $scope.org = org;\n      });\n    };\n\n    $scope.getOrgUsers = (id: number) => {\n      backendSrv.get('/api/orgs/' + id + '/users').then((orgUsers: any) => {\n        $scope.orgUsers = orgUsers;\n      });\n    };\n\n    $scope.update = () => {\n      if (!$scope.orgDetailsForm.$valid) {\n        return;\n      }\n\n      backendSrv.put('/api/orgs/' + $scope.org.id, $scope.org).then(() => {\n        $location.path('/admin/orgs');\n      });\n    };\n\n    $scope.updateOrgUser = (orgUser: any) => {\n      backendSrv.patch('/api/orgs/' + orgUser.orgId + '/users/' + orgUser.userId, orgUser);\n    };\n\n    $scope.removeOrgUser = (orgUser: any) => {\n      backendSrv.delete('/api/orgs/' + orgUser.orgId + '/users/' + orgUser.userId).then(() => {\n        $scope.getOrgUsers($scope.org.id);\n      });\n    };\n\n    $scope.init();\n  }\n}\n","import config from 'app/core/config';\nimport { BackendSrv } from 'app/core/services/backend_srv';\nimport { NavModelSrv } from 'app/core/core';\n\nexport default class StyleGuideCtrl {\n  theme: string;\n  buttonNames = ['primary', 'secondary', 'inverse', 'success', 'warning', 'danger'];\n  buttonSizes = ['btn-small', '', 'btn-large'];\n  buttonVariants = ['-'];\n  navModel: any;\n\n  /** @ngInject */\n  constructor(private $routeParams: any, private backendSrv: BackendSrv, navModelSrv: NavModelSrv) {\n    this.navModel = navModelSrv.getNav('admin', 'styleguide', 0);\n    this.theme = config.bootData.user.lightTheme ? 'light' : 'dark';\n  }\n\n  switchTheme() {\n    this.$routeParams.theme = this.theme === 'dark' ? 'light' : 'dark';\n\n    const cmd = {\n      theme: this.$routeParams.theme,\n    };\n\n    this.backendSrv.put('/api/user/preferences', cmd).then(() => {\n      window.location.href = window.location.href;\n    });\n  }\n}\n","import AdminListUsersCtrl from './AdminListUsersCtrl';\nimport AdminEditUserCtrl from './AdminEditUserCtrl';\nimport AdminListOrgsCtrl from './AdminListOrgsCtrl';\nimport AdminEditOrgCtrl from './AdminEditOrgCtrl';\nimport StyleGuideCtrl from './StyleGuideCtrl';\n\nimport coreModule from 'app/core/core_module';\nimport { BackendSrv } from 'app/core/services/backend_srv';\nimport { NavModelSrv } from 'app/core/core';\n\nclass AdminSettingsCtrl {\n  navModel: any;\n\n  /** @ngInject */\n  constructor($scope: any, backendSrv: BackendSrv, navModelSrv: NavModelSrv) {\n    this.navModel = navModelSrv.getNav('admin', 'server-settings', 0);\n\n    backendSrv.get('/api/admin/settings').then((settings: any) => {\n      $scope.settings = settings;\n    });\n  }\n}\n\nclass AdminHomeCtrl {\n  navModel: any;\n\n  /** @ngInject */\n  constructor(navModelSrv: NavModelSrv) {\n    this.navModel = navModelSrv.getNav('admin');\n  }\n}\n\ncoreModule.controller('AdminListUsersCtrl', AdminListUsersCtrl);\ncoreModule.controller('AdminEditUserCtrl', AdminEditUserCtrl);\ncoreModule.controller('AdminListOrgsCtrl', AdminListOrgsCtrl);\ncoreModule.controller('AdminEditOrgCtrl', AdminEditOrgCtrl);\ncoreModule.controller('AdminSettingsCtrl', AdminSettingsCtrl);\ncoreModule.controller('AdminHomeCtrl', AdminHomeCtrl);\ncoreModule.controller('StyleGuideCtrl', StyleGuideCtrl);\n","import _ from 'lodash';\nimport { appEvents, coreModule, NavModelSrv } from 'app/core/core';\nimport { BackendSrv } from 'app/core/services/backend_srv';\n\nexport class AlertNotificationEditCtrl {\n  theForm: any;\n  navModel: any;\n  testSeverity = 'critical';\n  notifiers: any;\n  notifierTemplateId: string;\n  isNew: boolean;\n  model: any;\n  defaults: any = {\n    type: 'email',\n    sendReminder: false,\n    disableResolveMessage: false,\n    frequency: '15m',\n    settings: {\n      httpMethod: 'POST',\n      autoResolve: true,\n      uploadImage: true,\n    },\n    isDefault: false,\n  };\n  getFrequencySuggestion: any;\n\n  /** @ngInject */\n  constructor(\n    private $routeParams: any,\n    private backendSrv: BackendSrv,\n    private $location: any,\n    private $templateCache: any,\n    navModelSrv: NavModelSrv\n  ) {\n    this.navModel = navModelSrv.getNav('alerting', 'channels', 0);\n    this.isNew = !this.$routeParams.id;\n\n    this.getFrequencySuggestion = () => {\n      return ['1m', '5m', '10m', '15m', '30m', '1h'];\n    };\n\n    this.backendSrv\n      .get(`/api/alert-notifiers`)\n      .then((notifiers: any) => {\n        this.notifiers = notifiers;\n\n        // add option templates\n        for (const notifier of this.notifiers) {\n          this.$templateCache.put(this.getNotifierTemplateId(notifier.type), notifier.optionsTemplate);\n        }\n\n        if (!this.$routeParams.id) {\n          this.navModel.breadcrumbs.push({ text: 'New channel' });\n          this.navModel.node = { text: 'New channel' };\n          return _.defaults(this.model, this.defaults);\n        }\n\n        return this.backendSrv.get(`/api/alert-notifications/${this.$routeParams.id}`).then((result: any) => {\n          this.navModel.breadcrumbs.push({ text: result.name });\n          this.navModel.node = { text: result.name };\n          result.settings = _.defaults(result.settings, this.defaults.settings);\n          return result;\n        });\n      })\n      .then((model: any) => {\n        this.model = model;\n        this.notifierTemplateId = this.getNotifierTemplateId(this.model.type);\n      });\n  }\n\n  save() {\n    if (!this.theForm.$valid) {\n      return;\n    }\n\n    if (this.model.id) {\n      this.backendSrv\n        .put(`/api/alert-notifications/${this.model.id}`, this.model)\n        .then((res: any) => {\n          this.model = res;\n          appEvents.emit('alert-success', ['Notification updated', '']);\n        })\n        .catch((err: any) => {\n          if (err.data && err.data.error) {\n            appEvents.emit('alert-error', [err.data.error]);\n          }\n        });\n    } else {\n      this.backendSrv\n        .post(`/api/alert-notifications`, this.model)\n        .then((res: any) => {\n          appEvents.emit('alert-success', ['Notification created', '']);\n          this.$location.path('alerting/notifications');\n        })\n        .catch((err: any) => {\n          if (err.data && err.data.error) {\n            appEvents.emit('alert-error', [err.data.error]);\n          }\n        });\n    }\n  }\n\n  deleteNotification() {\n    this.backendSrv.delete(`/api/alert-notifications/${this.model.id}`).then((res: any) => {\n      this.model = res;\n      this.$location.path('alerting/notifications');\n    });\n  }\n\n  getNotifierTemplateId(type: string) {\n    return `notifier-options-${type}`;\n  }\n\n  typeChanged() {\n    this.model.settings = _.defaults({}, this.defaults.settings);\n    this.notifierTemplateId = this.getNotifierTemplateId(this.model.type);\n  }\n\n  testNotification() {\n    if (!this.theForm.$valid) {\n      return;\n    }\n\n    const payload = {\n      name: this.model.name,\n      type: this.model.type,\n      frequency: this.model.frequency,\n      settings: this.model.settings,\n    };\n\n    this.backendSrv.post(`/api/alert-notifications/test`, payload);\n  }\n}\n\ncoreModule.controller('AlertNotificationEditCtrl', AlertNotificationEditCtrl);\n","import { coreModule, NavModelSrv } from 'app/core/core';\nimport { BackendSrv } from 'app/core/services/backend_srv';\n\nexport class AlertNotificationsListCtrl {\n  notifications: any;\n  navModel: any;\n\n  /** @ngInject */\n  constructor(private backendSrv: BackendSrv, navModelSrv: NavModelSrv) {\n    this.loadNotifications();\n    this.navModel = navModelSrv.getNav('alerting', 'channels', 0);\n  }\n\n  loadNotifications() {\n    this.backendSrv.get(`/api/alert-notifications`).then((result: any) => {\n      this.notifications = result;\n    });\n  }\n\n  deleteNotification(id: number) {\n    this.backendSrv.delete(`/api/alert-notifications/${id}`).then(() => {\n      this.notifications = this.notifications.filter((notification: any) => {\n        return notification.id !== id;\n      });\n    });\n  }\n}\n\ncoreModule.controller('AlertNotificationsListCtrl', AlertNotificationsListCtrl);\n","import coreModule from 'app/core/core_module';\nimport { IQService } from 'angular';\nimport { BackendSrv } from 'app/core/services/backend_srv';\n\nconst hitTypes = {\n  FOLDER: 'dash-folder',\n  DASHBOARD: 'dash-db',\n};\n\nexport class ValidationSrv {\n  rootName = 'general';\n\n  /** @ngInject */\n  constructor(private $q: IQService, private backendSrv: BackendSrv) {}\n\n  validateNewDashboardName(folderId: any, name: string) {\n    return this.validate(folderId, name, 'A dashboard in this folder with the same name already exists');\n  }\n\n  validateNewFolderName(name: string) {\n    return this.validate(0, name, 'A folder or dashboard in the general folder with the same name already exists');\n  }\n\n  private validate(folderId: any, name: string, existingErrorMessage: string) {\n    name = (name || '').trim();\n    const nameLowerCased = name.toLowerCase();\n\n    if (name.length === 0) {\n      return this.$q.reject({\n        type: 'REQUIRED',\n        message: 'Name is required',\n      });\n    }\n\n    if (folderId === 0 && nameLowerCased === this.rootName) {\n      return this.$q.reject({\n        type: 'EXISTING',\n        message: 'This is a reserved name and cannot be used for a folder.',\n      });\n    }\n\n    const deferred = this.$q.defer();\n\n    const promises = [];\n    promises.push(this.backendSrv.search({ type: hitTypes.FOLDER, folderIds: [folderId], query: name }));\n    promises.push(this.backendSrv.search({ type: hitTypes.DASHBOARD, folderIds: [folderId], query: name }));\n\n    this.$q.all(promises).then(res => {\n      let hits: any[] = [];\n\n      if (res.length > 0 && res[0].length > 0) {\n        hits = res[0];\n      }\n\n      if (res.length > 1 && res[1].length > 0) {\n        hits = hits.concat(res[1]);\n      }\n\n      for (const hit of hits) {\n        if (nameLowerCased === hit.title.toLowerCase()) {\n          deferred.reject({\n            type: 'EXISTING',\n            message: existingErrorMessage,\n          });\n          break;\n        }\n      }\n\n      deferred.resolve();\n    });\n\n    return deferred.promise;\n  }\n}\n\ncoreModule.service('validationSrv', ValidationSrv);\n","import coreModule from 'app/core/core_module';\nimport appEvents from 'app/core/app_events';\nimport { BackendSrv } from 'app/core/services/backend_srv';\n\nexport class MoveToFolderCtrl {\n  dashboards: any;\n  folder: any;\n  dismiss: any;\n  afterSave: any;\n  isValidFolderSelection = true;\n\n  /** @ngInject */\n  constructor(private backendSrv: BackendSrv) {}\n\n  onFolderChange(folder: any) {\n    this.folder = folder;\n  }\n\n  save() {\n    return this.backendSrv.moveDashboards(this.dashboards, this.folder).then((result: any) => {\n      if (result.successCount > 0) {\n        const header = `Dashboard${result.successCount === 1 ? '' : 's'} Moved`;\n        const msg = `${result.successCount} dashboard${result.successCount === 1 ? '' : 's'} moved to ${\n          this.folder.title\n        }`;\n        appEvents.emit('alert-success', [header, msg]);\n      }\n\n      if (result.totalCount === result.alreadyInFolderCount) {\n        appEvents.emit('alert-error', ['Error', `Dashboards already belongs to folder ${this.folder.title}`]);\n      }\n\n      this.dismiss();\n      return this.afterSave();\n    });\n  }\n\n  onEnterFolderCreation() {\n    this.isValidFolderSelection = false;\n  }\n\n  onExitFolderCreation() {\n    this.isValidFolderSelection = true;\n  }\n}\n\nexport function moveToFolderModal() {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/features/manage-dashboards/components/MoveToFolderModal/template.html',\n    controller: MoveToFolderCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      dismiss: '&',\n      dashboards: '=',\n      afterSave: '&',\n    },\n  };\n}\n\ncoreModule.directive('moveToFolderModal', moveToFolderModal);\n","import coreModule from 'app/core/core_module';\nimport appEvents from 'app/core/app_events';\nimport angular, { ILocationService } from 'angular';\n\nconst template = `\n<input type=\"file\" id=\"dashupload\" name=\"dashupload\" class=\"hide\" onchange=\"angular.element(this).scope().file_selected\"/>\n<label class=\"btn btn-primary\" for=\"dashupload\">\n  {{btnText}}\n</label>\n`;\n\n/** @ngInject */\nexport function uploadDashboardDirective(timer: any, $location: ILocationService) {\n  return {\n    restrict: 'E',\n    template: template,\n    scope: {\n      onUpload: '&',\n      btnText: '@?',\n    },\n    link: (scope: any, elem: JQuery) => {\n      scope.btnText = angular.isDefined(scope.btnText) ? scope.btnText : 'Upload .json file';\n\n      function file_selected(evt: any) {\n        const files = evt.target.files; // FileList object\n        const readerOnload = () => {\n          return (e: any) => {\n            let dash: any;\n            try {\n              dash = JSON.parse(e.target.result);\n            } catch (err) {\n              console.log(err);\n              appEvents.emit('alert-error', ['Import failed', 'JSON -> JS Serialization failed: ' + err.message]);\n              return;\n            }\n\n            scope.$apply(() => {\n              scope.onUpload({ dash });\n            });\n          };\n        };\n\n        let i = 0;\n        let file = files[i];\n\n        while (file) {\n          const reader = new FileReader();\n          reader.onload = readerOnload();\n          reader.readAsText(file);\n          i += 1;\n          file = files[i];\n        }\n      }\n\n      const wnd: any = window;\n      // Check for the various File API support.\n      if (wnd.File && wnd.FileReader && wnd.FileList && wnd.Blob) {\n        // Something\n        elem[0].addEventListener('change', file_selected, false);\n      } else {\n        appEvents.emit('alert-error', ['Oops', 'The HTML5 File APIs are not fully supported in this browser']);\n      }\n    },\n  };\n}\n\ncoreModule.directive('dashUpload', uploadDashboardDirective);\n","export { MoveToFolderCtrl } from './MoveToFolderCtrl';\n","import _ from 'lodash';\nimport { NavModelSrv } from 'app/core/core';\nimport { ILocationService } from 'angular';\nimport { BackendSrv } from '@grafana/runtime';\n\nexport class SnapshotListCtrl {\n  navModel: any;\n  snapshots: any;\n\n  /** @ngInject */\n  constructor(\n    private $rootScope: any,\n    private backendSrv: BackendSrv,\n    navModelSrv: NavModelSrv,\n    private $location: ILocationService\n  ) {\n    this.navModel = navModelSrv.getNav('dashboards', 'snapshots', 0);\n    this.backendSrv.get('/api/dashboard/snapshots').then((result: any) => {\n      const baseUrl = this.$location.absUrl().replace($location.url(), '');\n      this.snapshots = result.map((snapshot: any) => ({\n        ...snapshot,\n        url: snapshot.externalUrl || `${baseUrl}/dashboard/snapshot/${snapshot.key}`,\n      }));\n    });\n  }\n\n  removeSnapshotConfirmed(snapshot: any) {\n    _.remove(this.snapshots, { key: snapshot.key });\n    this.backendSrv.delete('/api/snapshots/' + snapshot.key).then(\n      () => {},\n      () => {\n        this.snapshots.push(snapshot);\n      }\n    );\n  }\n\n  removeSnapshot(snapshot: any) {\n    this.$rootScope.appEvent('confirm-modal', {\n      title: 'Delete',\n      text: 'Are you sure you want to delete snapshot ' + snapshot.name + '?',\n      yesText: 'Delete',\n      icon: 'fa-trash',\n      onConfirm: () => {\n        this.removeSnapshotConfirmed(snapshot);\n      },\n    });\n  }\n}\n","import { NavModelSrv } from 'app/core/core';\n\nexport class DashboardListCtrl {\n  navModel: any;\n\n  /** @ngInject */\n  constructor(navModelSrv: NavModelSrv) {\n    this.navModel = navModelSrv.getNav('dashboards', 'manage-dashboards', 0);\n  }\n}\n","// Services\nexport { ValidationSrv } from './services/ValidationSrv';\n\n// Components\nexport * from './components/MoveToFolderModal';\nexport * from './components/UploadDashboard';\n\n// Controllers\nimport { DashboardListCtrl } from './DashboardListCtrl';\nimport { SnapshotListCtrl } from './SnapshotListCtrl';\n\nimport coreModule from 'app/core/core_module';\n\ncoreModule.controller('DashboardListCtrl', DashboardListCtrl);\ncoreModule.controller('SnapshotListCtrl', SnapshotListCtrl);\n","import coreModule from 'app/core/core_module';\nimport { BackendSrv } from 'app/core/services/backend_srv';\nimport { ILocationService } from 'angular';\nimport { NavModelSrv } from 'app/core/core';\n\nexport class CreateTeamCtrl {\n  name: string;\n  email: string;\n  navModel: any;\n\n  /** @ngInject */\n  constructor(private backendSrv: BackendSrv, private $location: ILocationService, navModelSrv: NavModelSrv) {\n    this.navModel = navModelSrv.getNav('cfg', 'teams', 0);\n  }\n\n  create() {\n    const payload = {\n      name: this.name,\n      email: this.email,\n    };\n    this.backendSrv.post('/api/teams', payload).then((result: any) => {\n      if (result.teamId) {\n        this.$location.path('/org/teams/edit/' + result.teamId);\n      }\n    });\n  }\n}\n\ncoreModule.controller('CreateTeamCtrl', CreateTeamCtrl);\n","import { coreModule, NavModelSrv } from 'app/core/core';\nimport { dateTime } from '@grafana/data';\nimport { UserSession } from 'app/types';\nimport { BackendSrv } from 'app/core/services/backend_srv';\n\nexport class ProfileCtrl {\n  sessions: object[] = [];\n  navModel: any;\n\n  /** @ngInject */\n  constructor(private backendSrv: BackendSrv, navModelSrv: NavModelSrv) {\n    this.getUserSessions();\n    this.navModel = navModelSrv.getNav('profile', 'profile-settings', 0);\n  }\n\n  getUserSessions() {\n    this.backendSrv.get('/api/user/auth-tokens').then((sessions: UserSession[]) => {\n      sessions.reverse();\n\n      const found = sessions.findIndex((session: UserSession) => {\n        return session.isActive;\n      });\n\n      if (found) {\n        const now = sessions[found];\n        sessions.splice(found, found);\n        sessions.unshift(now);\n      }\n\n      this.sessions = sessions.map((session: UserSession) => {\n        return {\n          id: session.id,\n          isActive: session.isActive,\n          seenAt: dateTime(session.seenAt).fromNow(),\n          createdAt: dateTime(session.createdAt).format('MMMM DD, YYYY'),\n          clientIp: session.clientIp,\n          browser: session.browser,\n          browserVersion: session.browserVersion,\n          os: session.os,\n          osVersion: session.osVersion,\n          device: session.device,\n        };\n      });\n    });\n  }\n\n  revokeUserSession(tokenId: number) {\n    this.backendSrv\n      .post('/api/user/revoke-auth-token', {\n        authTokenId: tokenId,\n      })\n      .then(() => {\n        this.sessions = this.sessions.filter((session: UserSession) => {\n          if (session.id === tokenId) {\n            return false;\n          }\n          return true;\n        });\n      });\n  }\n}\n\ncoreModule.controller('ProfileCtrl', ProfileCtrl);\n","import './ProfileCtrl';\n","import { coreModule } from 'app/core/core';\nimport { createChangeHandler, createResetHandler, PasswordFieldEnum } from '../utils/passwordHandlers';\n\ncoreModule.directive('datasourceHttpSettings', () => {\n  return {\n    scope: {\n      current: '=',\n      suggestUrl: '@',\n      noDirectAccess: '@',\n    },\n    templateUrl: 'public/app/features/datasources/partials/http_settings.html',\n    link: {\n      pre: ($scope: any, elem, attrs) => {\n        // do not show access option if direct access is disabled\n        $scope.showAccessOption = $scope.noDirectAccess !== 'true';\n        $scope.showAccessHelp = false;\n        $scope.toggleAccessHelp = () => {\n          $scope.showAccessHelp = !$scope.showAccessHelp;\n        };\n\n        $scope.getSuggestUrls = () => {\n          return [$scope.suggestUrl];\n        };\n\n        $scope.onBasicAuthPasswordReset = createResetHandler($scope, PasswordFieldEnum.BasicAuthPassword);\n        $scope.onBasicAuthPasswordChange = createChangeHandler($scope, PasswordFieldEnum.BasicAuthPassword);\n      },\n    },\n  };\n});\n","import { coreModule } from 'app/core/core';\n\ncoreModule.directive('datasourceTlsAuthSettings', () => {\n  return {\n    scope: {\n      current: '=',\n    },\n    templateUrl: 'public/app/features/datasources/partials/tls_auth_settings.html',\n  };\n});\n","import './annotations/all';\nimport './templating/all';\nimport './plugins/all';\nimport './dashboard';\nimport './playlist/all';\nimport './panel/all';\nimport './org/all';\nimport './admin';\nimport './alerting/NotificationsEditCtrl';\nimport './alerting/NotificationsListCtrl';\nimport './manage-dashboards';\nimport './teams/CreateTeamCtrl';\nimport './profile/all';\nimport './datasources/settings/HttpSettingsCtrl';\nimport './datasources/settings/TlsAuthSettingsCtrl';\n","import '@babel/polyfill';\nimport 'file-saver';\nimport 'lodash';\nimport 'jquery';\nimport 'angular';\nimport 'angular-route';\nimport 'angular-sanitize';\nimport 'angular-native-dragdrop';\nimport 'angular-bindonce';\nimport 'react';\nimport 'react-dom';\n\nimport 'vendor/bootstrap/bootstrap';\nimport 'vendor/angular-other/angular-strap';\n\nimport $ from 'jquery';\nimport angular from 'angular';\nimport config from 'app/core/config';\n// @ts-ignore ignoring this for now, otherwise we would have to extend _ interface with move\nimport _ from 'lodash';\nimport { addClassIfNoOverlayScrollbar } from 'app/core/utils/scrollbar';\nimport { importPluginModule } from 'app/features/plugins/plugin_loader';\n\n// add move to lodash for backward compatabiltiy\n// @ts-ignore\n_.move = (array: [], fromIndex: number, toIndex: number) => {\n  array.splice(toIndex, 0, array.splice(fromIndex, 1)[0]);\n  return array;\n};\n\nimport { coreModule, angularModules } from 'app/core/core_module';\nimport { registerAngularDirectives } from 'app/core/core';\nimport { setupAngularRoutes } from 'app/routes/routes';\n\nimport 'app/routes/GrafanaCtrl';\nimport 'app/features/all';\nimport { setLocale } from '@grafana/data';\nimport { setMarkdownOptions } from '@grafana/data';\n\n// import symlinked extensions\nconst extensionsIndex = (require as any).context('.', true, /extensions\\/index.ts/);\nextensionsIndex.keys().forEach((key: any) => {\n  extensionsIndex(key);\n});\n\nexport class GrafanaApp {\n  registerFunctions: any;\n  ngModuleDependencies: any[];\n  preBootModules: any[] | null;\n\n  constructor() {\n    addClassIfNoOverlayScrollbar('no-overlay-scrollbar');\n    this.preBootModules = [];\n    this.registerFunctions = {};\n    this.ngModuleDependencies = [];\n  }\n\n  useModule(module: angular.IModule) {\n    if (this.preBootModules) {\n      this.preBootModules.push(module);\n    } else {\n      _.extend(module, this.registerFunctions);\n    }\n    this.ngModuleDependencies.push(module.name);\n    return module;\n  }\n\n  init() {\n    const app = angular.module('grafana', []);\n\n    setLocale(config.bootData.user.locale);\n\n    setMarkdownOptions({ sanitize: !config.disableSanitizeHtml });\n\n    app.config(\n      (\n        $locationProvider: angular.ILocationProvider,\n        $controllerProvider: angular.IControllerProvider,\n        $compileProvider: angular.ICompileProvider,\n        $filterProvider: angular.IFilterProvider,\n        $httpProvider: angular.IHttpProvider,\n        $provide: angular.auto.IProvideService\n      ) => {\n        // pre assing bindings before constructor calls\n        $compileProvider.preAssignBindingsEnabled(true);\n\n        if (config.buildInfo.env !== 'development') {\n          $compileProvider.debugInfoEnabled(false);\n        }\n\n        $httpProvider.useApplyAsync(true);\n\n        this.registerFunctions.controller = $controllerProvider.register;\n        this.registerFunctions.directive = $compileProvider.directive;\n        this.registerFunctions.factory = $provide.factory;\n        this.registerFunctions.service = $provide.service;\n        this.registerFunctions.filter = $filterProvider.register;\n\n        $provide.decorator('$http', [\n          '$delegate',\n          '$templateCache',\n          ($delegate: any, $templateCache: any) => {\n            const get = $delegate.get;\n            $delegate.get = (url: string, config: any) => {\n              if (url.match(/\\.html$/)) {\n                // some template's already exist in the cache\n                if (!$templateCache.get(url)) {\n                  url += '?v=' + new Date().getTime();\n                }\n              }\n              return get(url, config);\n            };\n            return $delegate;\n          },\n        ]);\n      }\n    );\n\n    this.ngModuleDependencies = [\n      'grafana.core',\n      'ngRoute',\n      'ngSanitize',\n      '$strap.directives',\n      'ang-drag-drop',\n      'grafana',\n      'pasvaz.bindonce',\n      'react',\n    ];\n\n    // makes it possible to add dynamic stuff\n    _.each(angularModules, (m: angular.IModule) => {\n      this.useModule(m);\n    });\n\n    // register react angular wrappers\n    coreModule.config(setupAngularRoutes);\n    registerAngularDirectives();\n\n    // disable tool tip animation\n    $.fn.tooltip.defaults.animation = false;\n\n    // bootstrap the app\n    angular.bootstrap(document, this.ngModuleDependencies).invoke(() => {\n      _.each(this.preBootModules, (module: angular.IModule) => {\n        _.extend(module, this.registerFunctions);\n      });\n\n      this.preBootModules = null;\n    });\n\n    // Preload selected app plugins\n    for (const modulePath of config.pluginsToPreload) {\n      importPluginModule(modulePath);\n    }\n  }\n}\n\nexport default new GrafanaApp();\n","import { Block, Document, Text, Value, SchemaProperties } from 'slate';\n\nexport const SCHEMA: SchemaProperties = {\n  document: {\n    nodes: [\n      {\n        match: [{ type: 'paragraph' }, { type: 'code_block' }, { type: 'code_line' }],\n      },\n    ],\n  },\n  inlines: {},\n};\n\nexport const makeFragment = (text: string, syntax?: string): Document => {\n  const lines = text.split('\\n').map(line =>\n    Block.create({\n      type: 'code_line',\n      nodes: [Text.create(line)],\n    })\n  );\n\n  const block = Block.create({\n    data: {\n      syntax,\n    },\n    type: 'code_block',\n    nodes: lines,\n  });\n\n  return Document.create({\n    nodes: [block],\n  });\n};\n\nexport const makeValue = (text: string, syntax?: string): Value => {\n  const fragment = makeFragment(text, syntax);\n\n  return Value.create({\n    document: fragment,\n  });\n};\n","import { Team, TeamPermissionLevel } from 'app/types';\nimport config from 'app/core/config';\nimport { NavModelItem, NavModel } from '@grafana/data';\n\nexport function buildNavModel(team: Team): NavModelItem {\n  const navModel = {\n    img: team.avatarUrl,\n    id: 'team-' + team.id,\n    subTitle: 'Manage members & settings',\n    url: '',\n    text: team.name,\n    breadcrumbs: [{ title: 'Teams', url: 'org/teams' }],\n    children: [\n      {\n        active: false,\n        icon: 'gicon gicon-team',\n        id: `team-members-${team.id}`,\n        text: 'Members',\n        url: `org/teams/edit/${team.id}/members`,\n      },\n      {\n        active: false,\n        icon: 'fa fa-fw fa-sliders',\n        id: `team-settings-${team.id}`,\n        text: 'Settings',\n        url: `org/teams/edit/${team.id}/settings`,\n      },\n    ],\n  };\n\n  if (config.buildInfo.isEnterprise) {\n    navModel.children.push({\n      active: false,\n      icon: 'fa fa-fw fa-refresh',\n      id: `team-groupsync-${team.id}`,\n      text: 'External group sync',\n      url: `org/teams/edit/${team.id}/groupsync`,\n    });\n  }\n\n  return navModel;\n}\n\nexport function getTeamLoadingNav(pageName: string): NavModel {\n  const main = buildNavModel({\n    avatarUrl: 'public/img/user_profile.png',\n    id: 1,\n    name: 'Loading',\n    email: 'loading',\n    memberCount: 0,\n    permission: TeamPermissionLevel.Member,\n  });\n\n  let node: NavModelItem;\n\n  // find active page\n  for (const child of main.children) {\n    if (child.id.indexOf(pageName) > 0) {\n      child.active = true;\n      node = child;\n      break;\n    }\n  }\n\n  return {\n    main: main,\n    node: node,\n  };\n}\n"],"sourceRoot":""}